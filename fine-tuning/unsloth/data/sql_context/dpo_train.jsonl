{"input": " \ub300\ub098\ubb34 \ubc14\ub2e5\uc7ac\uac00 \uc788\ub294 \ud504\ub85c\uc81d\ud2b8\uc640 \ud5c8\uac00 \ubc88\ud638\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE sustainable_material (id INT PRIMARY KEY, permit_id INT, material_name VARCHAR(50), FOREIGN KEY (permit_id) REFERENCES building_permit(id)); INSERT INTO sustainable_material (id, permit_id, material_name) VALUES (1, 1, 'Bamboo Flooring');", "output": "SELECT p.name, bp.permit_number FROM project p INNER JOIN building_permit bp ON p.id = bp.project_id INNER JOIN sustainable_material sm ON bp.id = sm.permit_id WHERE sm.material_name = 'Bamboo Flooring';"}
{"input": " 2015\ub144 \uc774\ud6c4 \uae30\uc0c1 \uc774\ubcc0\uc774 \uc99d\uac00\ud558\uace0 \uc7ac\ub09c \ub300\ube44 \uc608\uc0b0\uc774 \uac10\uc18c\ud55c \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weather_events (city VARCHAR(50), year INT, events INT); CREATE TABLE preparedness_budget (city VARCHAR(50), year INT, budget FLOAT); INSERT INTO weather_events VALUES ('CityX', 2015, 3); INSERT INTO preparedness_budget VALUES ('CityX', 2015, 1000000);", "output": "SELECT city FROM weather_events WHERE events > (SELECT events FROM weather_events WHERE city = weather_events.city AND year = 2015) AND city IN (SELECT city FROM preparedness_budget WHERE budget < (SELECT budget FROM preparedness_budget WHERE city = preparedness_budget.city AND year = 2015))"}
{"input": " \uac01 \ud589\uc131\uc774 \uacf5\uc804\ud558\ub294 \ub3d9\uc548 \ud0dc\uc591\uc73c\ub85c\ubd80\ud130\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE planet_orbits (id INT, planet VARCHAR, orbit_date DATE, distance FLOAT);", "output": "SELECT planet, AVG(distance) as avg_distance FROM planet_orbits GROUP BY planet;"}
{"input": " \uad6d\uac00\ubcc4 \uc6b0\uc8fc \ud0d0\uc0ac \uc784\ubb34\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceExplorationMissions (id INT, country VARCHAR(50), mission_year INT, mission_outcome BOOLEAN); INSERT INTO SpaceExplorationMissions (id, country, mission_year, mission_outcome) VALUES (1, 'USA', 2000, true), (2, 'USA', 2010, false), (3, 'China', 2015, true), (4, 'India', 2017, true), (5, 'Russia', 2018, false), (6, 'Japan', 2019, true);", "output": "SELECT country, COUNT(*) as total_missions FROM SpaceExplorationMissions GROUP BY country;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc815\uce58 \ub274\uc2a4\ub97c \uc120\ud638\ud558\ub294 \ub3c5\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_readers (id INT, age INT, state VARCHAR(255), news_preference VARCHAR(255)); INSERT INTO us_readers (id, age, state, news_preference) VALUES (1, 35, 'NY', 'politics'), (2, 45, 'CA', 'sports');", "output": "SELECT r.state, AVG(r.age) FROM us_readers r WHERE r.news_preference = 'politics' GROUP BY r.state;"}
{"input": " \ubc1c\ud2b8\ud574\uc758 \ubaa8\ub4e0 \uc5b4\uc885\uacfc \uc131\uc7a5\ub960\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE baltic_sea (region VARCHAR(255), id INTEGER); INSERT INTO baltic_sea (region, id) VALUES ('Baltic Sea', 1); CREATE TABLE fish_species (id INTEGER, species VARCHAR(255)); INSERT INTO fish_species (id, species) VALUES (1, 'Herring'), (2, 'Cod'); CREATE TABLE fish_growth (species_id INTEGER, region_id INTEGER, rate FLOAT);", "output": "SELECT f.species, g.rate FROM fish_growth g JOIN fish_species f ON g.species_id = f.id JOIN baltic_sea bs ON g.region_id = bs.id WHERE bs.region = 'Baltic Sea';"}
{"input": " \uac01 \ub300\ub959\uc758 \ucd1d \ubc15\ubb3c\uad00 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Museums (MuseumID INT, Name TEXT, Location TEXT); INSERT INTO Museums (MuseumID, Name, Location) VALUES (1, 'Metropolitan Museum of Art', 'North America'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (2, 'Museum of Modern Art', 'North America'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (3, 'Guggenheim Museum', 'North America'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (4, 'Louvre Museum', 'Europe'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (5, 'British Museum', 'Europe'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (6, 'State Hermitage Museum', 'Europe'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (7, 'National Museum of China', 'Asia'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (8, 'Victoria and Albert Museum', 'Europe'); INSERT INTO Museums (MuseumID, Name, Location) VALUES (9, 'National Museum of Korea', 'Asia');", "output": "SELECT Location, COUNT(*) FROM Museums GROUP BY Location;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uaddc\uc81c \uc0c1\ud0dc\uac00 \"\ubd80\ubd84 \uaddc\uc81c\"\uc778 \uace0\uc720 \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_assets_partial (asset_name TEXT, regulatory_status TEXT, country TEXT);", "output": "SELECT country, COUNT(DISTINCT asset_name) FROM digital_assets_partial WHERE regulatory_status = 'partially regulated' GROUP BY country;"}
{"input": " \uc720\ub7fd\uc5d0\uc11c AI \uae30\ubc18 \ud638\ud154 \uc608\uc57d \uc2dc\uc2a4\ud15c\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE bookings (id INT, region TEXT, system_type TEXT, bookings INT); INSERT INTO bookings (id, region, system_type, bookings) VALUES (1, 'Europe', 'AI-powered', 3000), (2, 'Asia', 'AI-powered', 2500), (3, 'North America', 'traditional', 4000);", "output": "SELECT region, system_type, ROUND(100.0 * bookings / (SELECT SUM(bookings) FROM bookings WHERE region = 'Europe'), 2) as market_share FROM bookings WHERE region = 'Europe' AND system_type = 'AI-powered';"}
{"input": "\ud14d\uc0ac\uc2a4\uc5d0\uc11c \ucc98\ub9ac\ub418\ub294 \ud3d0\uc218\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wastewater_treatment (id INT, state VARCHAR(20), treated_wastewater FLOAT); INSERT INTO wastewater_treatment (id, state, treated_wastewater) VALUES (1, 'Texas', 75000000), (2, 'Texas', 80000000), (3, 'Texas', 85000000);", "output": "SELECT (SUM(treated_wastewater) / (SELECT SUM(treated_wastewater) FROM wastewater_treatment WHERE state = 'Texas') * 100) FROM wastewater_treatment WHERE state = 'Texas';"}
{"input": " SpaceTech Inc.\uc640 AstroCorp\uc758 \uc131\uacf5\uc801\uc778 \uc704\uc131 \ubc1c\uc0ac \ud69f\uc218\ub294 \ucd1d \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellite_Launches (launch_date DATE, manufacturer VARCHAR(255), success BOOLEAN); INSERT INTO Satellite_Launches (launch_date, manufacturer, success) VALUES ('2020-01-01', 'SpaceTech Inc.', TRUE), ('2020-02-01', 'AstroCorp', FALSE), ('2020-03-01', 'SpaceTech Inc.', TRUE), ('2020-04-01', 'AstroCorp', TRUE), ('2020-05-01', 'SpaceTech Inc.', TRUE);", "output": "SELECT SUM(success) AS total_successful_launches FROM (SELECT success FROM Satellite_Launches WHERE manufacturer = 'SpaceTech Inc.' UNION ALL SELECT success FROM Satellite_Launches WHERE manufacturer = 'AstroCorp') AS subquery;"}
{"input": "2000\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \uad6d\uac00\uc5d0\uc11c \uae30\uc628\uc774 \uc5f0\uc18d\uc801\uc73c\ub85c \uc0c1\uc2b9\ud55c \uc5f0\ub3c4 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE weather_data (country VARCHAR(50), year INT, temperature FLOAT); INSERT INTO weather_data (country, year, temperature) VALUES ('Canada', 2000, 10.5), ('Canada', 2001, 10.7), ('Mexico', 2000, 25.3), ('Mexico', 2001, 25.5);", "output": "SELECT country, ROW_NUMBER() OVER (PARTITION BY country ORDER BY year) - RANK() OVER (PARTITION BY country, temperature ORDER BY year) AS consecutive_years FROM weather_data WHERE year BETWEEN 2000 AND 2020 GROUP BY country, temperature, year ORDER BY country;"}
{"input": " \uba55\uc2dc\ucf54 \uc120\uc218 \uc911 \ud3c9\uade0 \ub2ec\ub9ac\uae30 \uc18d\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists countries (country_id INT, country VARCHAR(255)); INSERT INTO countries (country_id, country) VALUES (1, 'Mexico'), (2, 'Brazil'), (3, 'Canada'); CREATE TABLE if not exists athletes (athlete_id INT, country_id INT, speed FLOAT, sport VARCHAR(255)); INSERT INTO athletes (athlete_id, country_id, speed, sport) VALUES (1, 1, 10, 'Running'), (2, 2, 12, 'Running'), (3, 3, 11, 'Running'), (4, 1, 11, 'Running'), (5, 1, 13, 'Running');", "output": "SELECT athlete_id, AVG(speed) FROM athletes WHERE country_id = 1 AND sport = 'Running' GROUP BY athlete_id ORDER BY AVG(speed) DESC LIMIT 1;"}
{"input": "\uc9c0\ub09c \ubd84\uae30\uc5d0 \"\ube44\uc815\uc0c1\uc801\uc778 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\" \uaddc\uce59\uc774 \uba87 \ubc88\uc774\ub098 \ud2b8\ub9ac\uac70\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE alert_rules (id INT, rule_name VARCHAR(255)); INSERT INTO alert_rules (id, rule_name) VALUES (1, 'Unusual outbound traffic'), (2, 'Suspicious login'), (3, 'Malware detection'); CREATE TABLE alerts (id INT, rule_id INT, timestamp DATETIME); INSERT INTO alerts (id, rule_id, timestamp) VALUES (1, 1, '2022-01-01 12:34:56'), (2, 2, '2022-02-02 09:10:11'), (3, 1, '2022-03-03 17:22:33'), (4, 3, '2022-04-04 04:44:44');", "output": "SELECT COUNT(*) FROM alerts WHERE rule_id IN (SELECT id FROM alert_rules WHERE rule_name = 'Unusual outbound traffic') AND timestamp >= DATE_SUB(NOW(), INTERVAL 3 MONTH);"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uad6d\uac00\ubcc4 \uad6d\uc81c \uad00\uad11 \uc218\uc785\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TourismRevenue (Country VARCHAR(255), Revenue INT, RevenueDate DATE);", "output": "SELECT Country, (Revenue - LAG(Revenue) OVER (PARTITION BY Country ORDER BY RevenueDate)) / ABS(LAG(Revenue) OVER (PARTITION BY Country ORDER BY RevenueDate)) AS Increase FROM TourismRevenue WHERE RevenueDate >= ADD_MONTHS(CURRENT_DATE, -24) AND RevenueDate < CURRENT_DATE GROUP BY Country;"}
{"input": " \uc601\ud654, TV\uc1fc, \ud31f\uce90\uc2a4\ud2b8\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT); CREATE TABLE tv_shows (id INT); CREATE TABLE podcasts (id INT);", "output": "SELECT COUNT(*) FROM movies UNION ALL SELECT COUNT(*) FROM tv_shows UNION ALL SELECT COUNT(*) FROM podcasts;"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80 \uae08\uc561\uc744 \ubc1b\uc740 \uc6d0\uc778\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, Cause VARCHAR(50), Amount DECIMAL(10,2), Region VARCHAR(50)); INSERT INTO Donations (DonationID, Cause, Amount, Region) VALUES (1, 'Education', 2000, 'Africa'), (2, 'Health', 3000, 'Asia'), (3, 'Education', 1000, 'Africa'), (4, 'Environment', 4000, 'Europe');", "output": "SELECT Cause, SUM(Amount) as TotalDonation FROM Donations WHERE Region = 'Asia' GROUP BY Cause ORDER BY TotalDonation DESC;"}
{"input": " \uac01 \ud56d\uacf5\uae30 \uc81c\uc870\uc0ac\uc758 \ucd1d \uc0ac\uace0 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accidents (id INT PRIMARY KEY, manufacturer VARCHAR(50), accident_year INT); INSERT INTO accidents (id, manufacturer, accident_year) VALUES (1, 'Boeing', 2000), (2, 'Airbus', 2005), (3, 'Boeing', 2010), (4, 'Airbus', 2015);", "output": "SELECT manufacturer, COUNT(*) FROM accidents GROUP BY manufacturer;"}
{"input": "\uc8fc\ud0dd \uacbd\uc81c\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ub3c4\uc2dc\uc5d0\uc11c \ub179\uc0c9 \uc778\uc99d \ubd80\ub3d9\uc0b0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc9c0\uc5ed\uacfc \ucd1d \uba74\uc801\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT PRIMARY KEY, name VARCHAR(50), affordability_score INT); CREATE TABLE Neighborhood (id INT PRIMARY KEY, city_id INT, name VARCHAR(50)); CREATE TABLE Property (id INT PRIMARY KEY, neighborhood_id INT, type VARCHAR(50), price INT, square_footage INT, certification VARCHAR(50)); CREATE VIEW Green_Certified_Properties AS SELECT * FROM Property WHERE certification IN ('LEED', 'BREEAM');", "output": "SELECT Neighborhood.name, SUM(Property.square_footage) as total_sq_ft FROM Neighborhood INNER JOIN Green_Certified_Properties ON Neighborhood.id = Green_Certified_Properties.neighborhood_id INNER JOIN City ON Neighborhood.city_id = City.id WHERE City.affordability_score = (SELECT MIN(affordability_score) FROM City) GROUP BY Neighborhood.name ORDER BY SUM(Property.square_footage) DESC LIMIT 1;"}
{"input": "\ub3c5\uc77c\uacfc \uc601\uad6d\uc758 \uc0ac\uc6a9\uc790\uac00 \ubc1b\uc740 \uc88b\uc544\uc694 \uc218\ub294 \ucd1d \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE likes (id INT, post_id INT, user_id INT); INSERT INTO likes (id, post_id, user_id) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1); CREATE TABLE posts (id INT, user_id INT); INSERT INTO posts (id, user_id) VALUES (1, 1), (2, 2), (3, 3); CREATE TABLE users (id INT, country VARCHAR(255)); INSERT INTO users (id, country) VALUES (1, 'Germany'), (2, 'UK'), (3, 'Canada');", "output": "SELECT SUM(1) FROM (SELECT * FROM likes INNER JOIN posts ON likes.post_id = posts.id INNER JOIN users ON posts.user_id = users.id WHERE users.country IN ('Germany', 'UK')) AS subquery;"}
{"input": " \uc544\uc2dc\uc544 \ub300\ub959\uc5d0\uc11c \uad00\uad11\uac1d\uc774 \uac00\uc7a5 \uc801\uc740 \ub098\ub77c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE asia_tourists (id INT, country VARCHAR(20), tourists INT); INSERT INTO asia_tourists (id, country, tourists) VALUES (1, 'India', 35000000), (2, 'Indonesia', 15000000), (3, 'Thailand', 25000000), (4, 'Vietnam', 10000000), (5, 'Malaysia', 12000000);", "output": "SELECT country FROM asia_tourists WHERE tourists = (SELECT MIN(tourists) FROM asia_tourists);"}
{"input": " \uc9c0\ub09c 3\uc77c \ub3d9\uc548 \uac01 \uae30\uacc4\uc758 \uc0dd\uc0b0\uc728 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Machine_Production_Daily (Machine_ID INT, Production_Date DATE, Production_Rate INT); INSERT INTO Machine_Production_Daily (Machine_ID, Production_Date, Production_Rate) VALUES (1, '2022-01-01', 50), (1, '2022-01-02', 55), (1, '2022-01-03', 60), (2, '2022-01-01', 60), (2, '2022-01-03', 65), (2, '2022-01-04', 70);", "output": "SELECT Machine_ID, Production_Date, AVG(Production_Rate) OVER (PARTITION BY Machine_ID ORDER BY Production_Date RANGE BETWEEN INTERVAL '2' DAY PRECEDING AND CURRENT ROW) as Moving_Average FROM Machine_Production_Daily;"}
{"input": " \uce90\ub098\ub2e4\uc758 \uc2dc\uccad\uc790 \uc911 \uc0c1\uc704 3\uac1c TV \ud504\ub85c\uadf8\ub7a8\uc744 \uc2dc\uccad\ud55c \uc2dc\uccad\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Viewership (country VARCHAR(20), show_id INT, viewers INT); INSERT INTO Viewership (country, show_id, viewers) VALUES ('Canada', 1, 1000000), ('Canada', 2, 800000), ('Canada', 3, 1200000), ('US', 1, 2000000), ('US', 2, 1500000), ('US', 3, 1800000);", "output": "SELECT COUNT(*) FROM (SELECT * FROM Viewership WHERE country = 'Canada' AND show_id IN (1, 2, 3)) AS top_3_shows;"}
{"input": " \uae30\uc220 \uc5c5\uacc4\uc758 \ub77c\ud2f4\uacc4 \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \ubaa8\ub4e0 \uc2a4\ud0c0\ud2b8\uc5c5\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE startups(id INT, name TEXT, founder_ethnicity TEXT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Latinx'); INSERT INTO startups VALUES (2, 'Beta Corp', 'Not Latinx'); CREATE TABLE industries(id INT, name TEXT); INSERT INTO industries VALUES (1, 'Technology'); INSERT INTO industries VALUES (2, 'Gaming'); CREATE TABLE startup_industries(startup_id INT, industry_id INT); INSERT INTO startup_industries VALUES (1, 1); INSERT INTO startup_industries VALUES (2, 2);", "output": "SELECT startups.name FROM startups INNER JOIN startup_industries ON startups.id = startup_industries.startup_id INNER JOIN industries ON startup_industries.industry_id = industries.id WHERE startups.founder_ethnicity = 'Latinx' AND industries.name = 'Technology';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uacbd\uae30\ub97c \uad00\ub78c\ud55c \ud32c\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Fans (FanID INT, Age INT, LastVisit DATE); INSERT INTO Fans (FanID, Age, LastVisit) VALUES (1, 35, '2022-01-15'), (2, 22, '2022-02-20'), (3, 40, '2022-03-05'), (4, 28, '2022-04-10'), (5, 31, '2022-05-12');", "output": "SELECT AVG(Age) AS AvgAge FROM Fans WHERE LastVisit >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"input": " \uc0c8\ub85c\uc6b4 \uc0dd\uc0b0\uc131 \uc9c0\ud45c\ub85c \ucc44\uad74 \ud604\uc7a5 \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uc6d0\ubcf8 \uae30\ub85d\uc744 \ubcf4\uc874\ud558\uc138\uc694.", "context": "CREATE TABLE NewProductivity(SiteID INT, NewProductivity FLOAT); INSERT INTO NewProductivity VALUES (1, 55.3), (2, 51.9), (3, 57.6), (4, 53.1);", "output": "UPDATE MiningSites SET Productivity = (SELECT NewProductivity FROM NewProductivity WHERE MiningSites.SiteID = NewProductivity.SiteID);"}
{"input": " \uc131\ubcc4\ubcc4 \ud3c9\uade0 \ub178\ub3d9\uc870\ud569 \uac00\uc785 \uae30\uac04\uc740 \uba87 \ub144\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_members (id INT, member_id INT, gender VARCHAR(6), years_of_membership INT); INSERT INTO union_members (id, member_id, gender, years_of_membership) VALUES (1, 1001, 'Male', 5), (2, 1002, 'Female', 10), (3, 1003, 'Male', 7), (4, 1004, 'Non-binary', 3);", "output": "SELECT gender, AVG(years_of_membership) OVER (PARTITION BY gender) AS avg_years_of_membership FROM union_members;"}
{"input": " \ub3c4\ucc29 \ub0a0\uc9dc \ubc0f \ucd5c\ub300 \ud654\ubb3c \uc6a9\ub7c9\uc744 \ud3ec\ud568\ud558\uc5ec 2022\ub144\uc5d0 \ubbf8\uad6d\uc5d0 \uc704\uce58\ud55c \ud56d\uad6c\uc5d0 \uc785\ud56d\ud55c \ubaa8\ub4e0 \uc120\ubc15\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ship (ship_id INT, ship_name VARCHAR(50), max_cargo_capacity INT); INSERT INTO ship VALUES (1, 'Sealand Eagle', 12000); INSERT INTO ship VALUES (2, 'MSC Flaminia', 15000); CREATE TABLE port_of_call (port_id INT, ship_id INT, call_date DATE, port_country VARCHAR(50)); INSERT INTO port_of_call VALUES (1, 1, '2022-03-20', 'USA');", "output": "SELECT s.ship_name, poc.call_date, s.max_cargo_capacity FROM ship s JOIN port_of_call poc ON s.ship_id = poc.ship_id JOIN port p ON poc.port_id = p.port_id WHERE p.port_country = 'USA' AND poc.call_date >= '2022-01-01' AND poc.call_date < '2023-01-01';"}
{"input": " \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ubc1c\uc0ac\ub41c \uc6b0\uc8fc\uc120\uc758 \uc81c\uc870 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Spacecrafts (id INT, name VARCHAR(255), launch_date DATE, manufacturing_cost FLOAT); INSERT INTO Spacecrafts (id, name, launch_date, manufacturing_cost) VALUES (1, 'Sputnik 1', '1957-10-04', 140000); INSERT INTO Spacecrafts (id, name, launch_date, manufacturing_cost) VALUES (2, 'Explorer 1', '1958-01-31', 150000); INSERT INTO Spacecrafts (id, name, launch_date, manufacturing_cost) VALUES (3, 'Vostok 1', '1961-04-12', 240000); INSERT INTO Spacecrafts (id, name, launch_date, manufacturing_cost) VALUES (4, 'Voyager 1', '1977-09-05', 250000);", "output": "SELECT manufacturing_cost FROM Spacecrafts ORDER BY launch_date DESC LIMIT 1;"}
{"input": " UEFA \ucc54\ud53c\uc5b8\uc2a4\ub9ac\uadf8\uc5d0\uc11c \uac01 \ud300\uc5d0\uac8c \uc8fc\uc5b4\uc9c0\ub294 \uc610\ub85c\uce74\ub4dc\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uc7a5\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ucl_yellow_cards (team VARCHAR(50), yellow_cards INT); INSERT INTO ucl_yellow_cards (team, yellow_cards) VALUES ('Barcelona', 50), ('Real Madrid', 60), ('Bayern Munich', 45);", "output": "SELECT team, SUM(yellow_cards) AS total_yellow_cards FROM ucl_yellow_cards GROUP BY team ORDER BY total_yellow_cards DESC;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ubbf8\uc220\uc758 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc8fc\uc81c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtThemes (ThemeID int, Name varchar(50)); CREATE TABLE ArtPieces (ArtPieceID int, Title varchar(50), YearCreated int, ThemeID int); CREATE TABLE Artists (ArtistID int, Name varchar(50), Nationality varchar(50));", "output": "SELECT ArtThemes.Name, COUNT(ArtPieces.ArtPieceID) AS ArtPiecesCount FROM ArtThemes INNER JOIN ArtPieces ON ArtThemes.ThemeID = ArtPieces.ThemeID INNER JOIN Artists ON ArtPieces.ArtistID = Artists.ArtistID WHERE Artists.Nationality LIKE 'African%' GROUP BY ArtThemes.Name ORDER BY ArtPiecesCount DESC;"}
{"input": " \uae08\uc735 \uc6f0\ube59 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub300\ucd9c\uae08\uc744 \uc9c0\ubd88\ud558\uc9c0 \uc54a\uc740 \uace0\uac1d\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE financial_wellbeing_payment (payment_id INT PRIMARY KEY, client_id INT, payment_amount DECIMAL(10, 2), payment_date DATE);CREATE TABLE financial_wellbeing_client (client_id INT PRIMARY KEY, name VARCHAR(100), age INT, income DECIMAL(10, 2));INSERT INTO financial_wellbeing_payment (payment_id, client_id, payment_amount, payment_date) VALUES (1, 1, 100.00, '2022-01-05'), (2, 1, 100.00, '2022-02-05'); INSERT INTO financial_wellbeing_client (client_id, name, age, income) VALUES (1, 'John Doe', 30, 5000.00);", "output": "DELETE p FROM financial_wellbeing_payment p INNER JOIN financial_wellbeing_client c ON p.client_id = c.client_id WHERE NOT EXISTS (SELECT 1 FROM financial_wellbeing_payment p2 WHERE p2.client_id = c.client_id);"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc774 \ud50c\ub808\uc774\ub41c \uac8c\uc784 \uc0c1\uc704 2\uac1c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE gameactivity (player_id INT, game_id INT, game_region VARCHAR(50), joined_at TIMESTAMP); INSERT INTO gameactivity (player_id, game_id, game_region, joined_at) VALUES (1, 1001, 'APAC', '2022-01-01 10:00:00');", "output": "SELECT game_id, game_region, COUNT(DISTINCT player_id) as num_players, RANK() OVER (PARTITION BY game_region ORDER BY COUNT(DISTINCT player_id) DESC) as rank FROM gameactivity GROUP BY game_id, game_region"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ub9c8\uc9c4\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uba54\ub274\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE menu_items (menu_id INT, name VARCHAR(50), region VARCHAR(50), price FLOAT, cost FLOAT);", "output": "SELECT menu_id, name, region, price - cost as profit_margin FROM menu_items WHERE region IN (SELECT region FROM (SELECT region, RANK() OVER (PARTITION BY region ORDER BY price - cost DESC) as rank FROM menu_items) x WHERE rank <= 5) ORDER BY region, profit_margin DESC;"}
{"input": " \uac01 \ubcc0\ud638\uc0ac\uc758 \ucd5c\ub300 \uccad\uad6c \uae08\uc561\uacfc \ucd5c\uc18c \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AttorneyPrecedents (AttorneyID INT, PrecedentID INT, BillingAmount DECIMAL(10,2)); INSERT INTO AttorneyPrecedents (AttorneyID, PrecedentID, BillingAmount) VALUES (1, 1, 500.00), (1, 2, 750.00), (2, 3, 800.00), (3, 4, 900.00), (3, 5, 1000.00), (4, 6, 400.00), (4, 7, 350.00), (5, 8, 1200.00), (5, 9, 1500.00), (6, 10, 1100.00), (7, 11, 1300.00), (8, 12, 1400.00);", "output": "SELECT AttorneyID, MAX(BillingAmount) AS Max_Billing_Amount, MIN(BillingAmount) AS Min_Billing_Amount FROM AttorneyPrecedents GROUP BY AttorneyID;"}
{"input": " '\uac74\uac15\uc218\ud655'\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc8fc\ubb38\ub418\ub294 \uc694\ub9ac\uc758 \uc774\ub984\uacfc \uc218\ub7c9\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Restaurants (name text); INSERT INTO Restaurants (name) VALUES ('Healthy Harvest'); CREATE TABLE Orders (restaurant text, dish text, quantity integer); INSERT INTO Orders (restaurant, dish, quantity) VALUES ('Healthy Harvest', 'Quinoa Bowl', 250), ('Healthy Harvest', 'Tofu Stir Fry', 180);", "output": "SELECT dish, MAX(quantity) FROM Orders WHERE restaurant = 'Healthy Harvest' GROUP BY dish;"}
{"input": " \uac8c\uc784\uc744 \ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE players (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE games (id INT, player_id INT, name VARCHAR(50)); INSERT INTO players (id, name, country) VALUES (1, 'Player 1', 'Canada'), (2, 'Player 2', 'USA'); INSERT INTO games (id, player_id, name) VALUES (1, 1, 'Game 1'), (2, 1, 'Game 2');", "output": "DELETE FROM players WHERE id NOT IN (SELECT player_id FROM games);"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc2dc\uc791\ub41c \uc811\uadfc\uc131 \uae30\uc220 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE initiative (initiative_id INT, initiative_name VARCHAR(255), launch_date DATE, region VARCHAR(50)); INSERT INTO initiative (initiative_id, initiative_name, launch_date, region) VALUES (1, 'Accessible Software Development', '2018-04-01', 'North America'), (2, 'Adaptive Hardware Prototyping', '2019-12-15', 'Europe'), (3, 'Digital Inclusion Program', '2020-08-03', 'Asia'), (4, 'Diverse Tech Talent Network', '2021-02-22', 'Africa');", "output": "SELECT region, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM initiative) as percentage FROM initiative GROUP BY region;"}
{"input": " '\ub192\uc74c' \ubc0f '\uc2ec\uac01' \uc2ec\uac01\ub3c4 \ucde8\uc57d\uc810\uacfc \uad00\ub828\ub41c \uace0\uc720\ud55c IP \uc8fc\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, ip_address VARCHAR(255), severity VARCHAR(255)); INSERT INTO vulnerabilities (id, ip_address, severity) VALUES (1, '192.168.1.1', 'High'), (2, '192.168.1.2', 'Critical'), (3, '192.168.1.3', 'High'), (4, '192.168.1.1', 'Critical');", "output": "SELECT ip_address FROM vulnerabilities WHERE severity = 'High' INTERSECT SELECT ip_address FROM vulnerabilities WHERE severity = 'Critical';"}
{"input": " \uac19\uc740 \ub3c4\uc2dc\uc5d0 \ud0c4\uc18c \uc0c1\uc1c4 \uacc4\ud68d\uacfc BREEAM \uc778\uc99d \uac74\ubb3c\uc774 \ubaa8\ub450 \uc788\ub294 \uc2a4\ub9c8\ud2b8 \ub3c4\uc2dc\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), certification VARCHAR(50)); INSERT INTO green_buildings (id, name, city, country, certification) VALUES (1, 'EcoTowers', 'Toronto', 'Canada', 'BREEAM Excellent'); CREATE TABLE smart_cities (id INT, city VARCHAR(50), country VARCHAR(50), population INT, technology VARCHAR(50)); INSERT INTO smart_cities (id, city, country, population, technology) VALUES (1, 'Toronto', 'Canada', 2600000, 'smart transportation'); CREATE TABLE carbon_offsets (id INT, initiative_name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), offset_amount INT); INSERT INTO carbon_offsets (id, initiative_name, city, country, offset_amount) VALUES (1, 'TreesForCanada', 'Toronto', 'Canada', 6000);", "output": "SELECT s.name FROM smart_cities s INNER JOIN green_buildings g ON s.city = g.city INNER JOIN carbon_offsets c ON s.city = c.city WHERE g.certification = 'BREEAM Excellent';"}
{"input": " \uae30\ubd80\uc790\uac00 \ub9ce\uc740 \uc0ac\ub78c \uc21c\uc73c\ub85c \uae30\ubd80\uc790 1\uc778\ub2f9 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), TotalDonation DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonorName, TotalDonation) VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 3500.00), (3, 'Alice Johnson', 2800.00);", "output": "SELECT DonorName, TotalDonation FROM (SELECT DonorName, TotalDonation, ROW_NUMBER() OVER (ORDER BY TotalDonation DESC) as rn FROM Donors) t WHERE rn <= 5 ORDER BY TotalDonation DESC;"}
{"input": " LGBTQ+\ub85c \uc2dd\ubcc4\ub418\ub294 \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ud3c9\uade0 \uc2dc\ub4dc \ub77c\uc6b4\ub4dc \uc790\uae08 \uc870\ub2ec\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diversity (id INT, company_id INT, founder_gender TEXT, founder_ethnicity TEXT, founder_identity TEXT); INSERT INTO diversity (id, company_id, founder_gender, founder_ethnicity, founder_identity) VALUES (1, 1, 'Male', 'Asian', 'LGBTQ+'), (2, 2, 'Female', 'Hispanic', 'Cis'), (3, 3, 'Non-binary', 'African American', 'LGBTQ+');", "output": "SELECT AVG(investments.amount) FROM investments JOIN companies ON investments.company_id = companies.id JOIN diversity ON companies.id = diversity.company_id WHERE investments.investment_round = 'Seed' AND diversity.founder_identity = 'LGBTQ+';"}
{"input": " 2019\ub144 \ub610\ub294 \uadf8 \uc774\uc804\uc5d0 \uc644\ub8cc\ub41c '\uad50\ud1b5' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE Projects (id INT, name VARCHAR(50), category VARCHAR(50), cost FLOAT, year_started INT, year_completed INT, status VARCHAR(20)); INSERT INTO Projects (id, name, category, cost, year_started, year_completed, status) VALUES (1, 'Dam Reconstruction', 'Water Supply', 500000, 2018, 2020, 'Completed'), (2, 'Wastewater Treatment', 'Waste Management', 600000, 2019, 2020, 'Completed'), (3, 'Road Pavement', 'Transportation', 700000, 2018, 2019, 'Completed'), (4, 'Bridge Construction', 'Transportation', 800000, 2019, 2020, 'Completed'), (5, 'Tunnel Construction', 'Transportation', 900000, 2020, 2022, 'In Progress');", "output": "SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY category ORDER BY cost DESC) rn FROM Projects WHERE category = 'Transportation' AND (year_completed IS NULL OR year_completed <= 2019)) t WHERE rn = 1;"}
{"input": " '\uad50\uc721' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc790\uc6d0\ubd09\uc0ac\uc790\ub098 \uae30\ubd80\uae08\uc774 \uc5c6\ub294 \uc870\uc9c1\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organizations (id INT, name VARCHAR(50), category VARCHAR(20)); INSERT INTO organizations (id, name, category) VALUES (1, 'Org1', 'Health'), (2, 'Org2', 'Health'), (3, 'Org3', 'Education'), (4, 'Org4', 'Arts & Culture');", "output": "SELECT name FROM organizations WHERE category = 'Education' AND id NOT IN (SELECT organization_id FROM donations) AND id NOT IN (SELECT organization_id FROM volunteer_events);"}
{"input": "\uc74c\uc545 \ucd95\uc81c \ubc0f \ucf58\uc11c\ud2b8\ub97c \uc704\ud574 \uc6d0\uc8fc\ubbfc \ub610\ub294 \ud558\uc640\uc774 \uc6d0\uc8fc\ubbfc\uc73c\ub85c \uc2dd\ubcc4\ub418\ub294 \ubc29\ubb38\uac1d\uc758 \ucd1d \uc218\ub294 \uc5f0\ub839\ub300\ubcc4\ub85c \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE music_festivals (id INT, visitor_age INT, indigenous_or_native_hawaiian BOOLEAN, visit_date DATE); CREATE TABLE concerts (id INT, visitor_age INT, indigenous_or_native_hawaiian BOOLEAN, visit_date DATE);", "output": "SELECT 'Music Festivals' AS event, visitor_age, COUNT(*) AS total FROM music_festivals WHERE indigenous_or_native_hawaiian = TRUE GROUP BY visitor_age UNION ALL SELECT 'Concerts' AS event, visitor_age, COUNT(*) AS total FROM concerts WHERE indigenous_or_native_hawaiian = TRUE GROUP BY visitor_age;"}
{"input": " \uad50\uc721 \ubd80\ubb38\uc5d0\uc11c \uc5f0\uac04 \ud3c9\uade0 \uc791\uc5c5\uc7a5 \uc548\uc804 \uc704\ubc18 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE education (id INT, year INT, violations INT); INSERT INTO education (id, year, violations) VALUES (1, 2018, 10), (2, 2019, 15), (3, 2020, 20);", "output": "SELECT AVG(violations / COUNT(*)) FROM education;"}
{"input": "\ub192\uc740 \uac00\uce58' \uce74\ud14c\uace0\ub9ac\uc758 \uacc4\uc815\uc744 \ubcf4\uc720\ud558\uace0 \uc788\uc73c\uba70 \uac70\ub798\ub97c \ud55c \ubc88 \uc774\uc0c1 \ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name TEXT); INSERT INTO customers (customer_id, name) VALUES (1, 'John Doe'); INSERT INTO customers (customer_id, name) VALUES (2, 'Jane Smith'); CREATE TABLE accounts (account_id INT, account_type TEXT, customer_id INT); INSERT INTO accounts (account_id, account_type, customer_id) VALUES (1, 'High Value', 1); INSERT INTO accounts (account_id, account_type, customer_id) VALUES (2, 'Standard', 2); CREATE TABLE customer_transactions (transaction_id INT, customer_id INT); INSERT INTO customer_transactions (transaction_id, customer_id) VALUES (1, 1);", "output": "SELECT customers.name FROM customers JOIN accounts ON customers.customer_id = accounts.customer_id JOIN customer_transactions ON customers.customer_id = customer_transactions.customer_id WHERE accounts.account_type = 'High Value';"}
{"input": " \ucef4\ud4e8\ud130 \uacf5\ud559\uacfc\uc758 \uc5f0\uad6c\uc790\uc5d0\uac8c \uc218\uc5ec\ub418\ub294 \ud3c9\uade0 \ubcf4\uc870\uae08 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE department (id INT, name VARCHAR(255)); CREATE TABLE researcher (id INT, name VARCHAR(255), department_id INT); CREATE TABLE grant (id INT, researcher_id INT, amount DECIMAL(10, 2));", "output": "SELECT department.name, AVG(grant.amount) FROM department INNER JOIN researcher ON department.id = researcher.department_id INNER JOIN grant ON researcher.id = grant.researcher_id WHERE department.name = 'Computer Science' GROUP BY department.name;"}
{"input": " 20\ud68c \uc774\uc0c1 \ub9ac\ubdf0\ub41c '\ubd81\ubbf8' \ud638\ud154\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(255), rating DECIMAL(2,1), country VARCHAR(255)); INSERT INTO hotels (hotel_id, hotel_name, rating, country) VALUES (1, 'Hotel New York', 4.3, 'USA'), (2, 'Hotel Vancouver', 4.6, 'Canada'), (3, 'Hotel Mexico City', 4.1, 'Mexico');", "output": "SELECT AVG(rating) FROM (SELECT rating FROM hotels WHERE country = 'North America' GROUP BY rating HAVING COUNT(*) > 20) AS subquery;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4 \uc2dc\uace8 \uc9c0\uc5ed\uc758 \ud658\uc790\ub4e4\uc774 \uac00\uc7a5 \uac00\uae4c\uc6b4 \ubcd1\uc6d0\uae4c\uc9c0\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE distances (patient_id INT, age INT, gender VARCHAR(20), location VARCHAR(20), distance INT);", "output": "SELECT AVG(distance) FROM distances WHERE location = 'Rural Colorado';"}
{"input": "\uc790\uc2e0\uc744 '\uc5ec\uc131'\uc73c\ub85c \uc2dd\ubcc4\ud558\uace0 '\uc74c\uc545' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud574 \ubcf8 \ucc38\uac00\uc790\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc774\uba70, \uc774\ub4e4\uc774 \ucc38\uc5ec\ud55c \uc774\uc0c9 \ud504\ub85c\uadf8\ub7a8\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attendees (AttendeeID INT, Age INT, Gender VARCHAR(10));CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(20), ProgramCategory VARCHAR(20));CREATE TABLE Attendance (AttendeeID INT, ProgramID INT);", "output": "SELECT AVG(A.Age) AS Avg_Age, COUNT(DISTINCT A.ProgramID) AS Num_Unique_Programs FROM Attendees A INNER JOIN Attendance AT ON A.AttendeeID = AT.AttendeeID INNER JOIN Programs P ON AT.ProgramID = P.ProgramID WHERE A.Gender = 'Female' AND P.ProgramCategory = 'Music';"}
{"input": " 20\uc138\uae30 \uc2a4\ud398\uc778 \uc608\uc220\uac00\ub4e4\uc774 \ub9cc\ub4e0 \uc791\ud488\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Artists (id INT, name TEXT, nationality TEXT, birth_year INT, death_year INT); INSERT INTO Artists (id, name, nationality, birth_year, death_year) VALUES (1, 'Pablo Picasso', 'Spanish', 1881, 1973), (2, 'Salvador Dali', 'Spanish', 1904, 1989);", "output": "SELECT COUNT(*) FROM Artists WHERE nationality = 'Spanish' AND birth_year <= 1900 AND death_year >= 1900;"}
{"input": " 30~50\uc138 \uae30\ubd80\uc790\uc758 \ub0a8\ubbf8 \uc18c\uc7ac \uae30\uad00\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID INT PRIMARY KEY, Age INT, Gender VARCHAR(50), Location VARCHAR(50));", "output": "SELECT O.OrgName, SUM(D.DonationAmount) as TotalDonationAmount FROM Donors D INNER JOIN Donations DON ON D.DonorID = DON.DonorID INNER JOIN Organizations O ON DON.OrgID = O.OrgID WHERE D.Age BETWEEN 30 AND 50 AND O.Location = 'South America' GROUP BY O.OrgName;"}
{"input": " \uc720\uae30\ub18d \ubd80\ubb38 \uc81c\ud488\uc758 \uac00\uaca9\ub300\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, segment VARCHAR(20), price DECIMAL(5,2)); INSERT INTO products (product_id, segment, price) VALUES (1, 'Natural', 15.99), (2, 'Organic', 20.99), (3, 'Natural', 12.49);", "output": "SELECT segment, MIN(price) AS min_price, MAX(price) AS max_price FROM products GROUP BY segment;"}
{"input": " 2020\ub144 \uac01 \ud3d0\uc218 \ucc98\ub9ac\uc7a5 \uc6a9\ub7c9\uc744 \ud3ec\ud568\ud558\uc5ec \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc9c0\uc5ed \uac01 \ub3c4\uc2dc\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (city_id INT, city_name VARCHAR(50), state VARCHAR(50));CREATE TABLE regions (region_id INT, region_name VARCHAR(50), state VARCHAR(50));CREATE TABLE water_consumption (consumption_id INT, city_id INT, year INT, consumption FLOAT);CREATE TABLE wastewater_plants (plant_id INT, city_id INT, capacity INT);", "output": "SELECT c.city_name, SUM(w.consumption) AS total_consumption, ww.capacity AS plant_capacity FROM cities c INNER JOIN water_consumption w ON c.city_id = w.city_id AND w.year = 2020 INNER JOIN regions r ON c.region_id = r.region_id INNER JOIN wastewater_plants ww ON c.city_id = ww.city_id GROUP BY c.city_name;"}
{"input": " \uac01 \ucc3d\uace0\uc758 \uac00\uc7a5 \ube60\ub978 \ubc30\uc1a1 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shipments (shipment_id INT, shipment_date DATE, warehouse_id INT); INSERT INTO shipments (shipment_id, shipment_date, warehouse_id) VALUES (1, '2021-01-01', 1), (2, '2021-01-02', 2), (3, '2021-01-03', 3);", "output": "SELECT warehouse_id, MIN(shipment_date) FROM shipments GROUP BY warehouse_id;"}
{"input": " \uac01 \ubc94\uc8fc\ubcc4\ub85c \uad70\uc0ac \uae30\uc220\uc744 \uc2dd\ubcc4\ud558\uace0 \uae30\uc220 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE MilitaryTech (TechID int, TechName varchar(100), Category varchar(50)); INSERT INTO MilitaryTech (TechID, TechName, Category) VALUES (1, 'F-35', 'Fighter Jet'), (2, 'M1 Abrams', 'Tank'), (3, 'Tomahawk', 'Missile');", "output": "SELECT Category, COUNT(*) as TechCount, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as Rank FROM MilitaryTech GROUP BY Category;"}
{"input": " \uc62c\ud574 1\ubd84\uae30\uc5d0 \uc815\uc2e0\uac74\uac15 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Age INT); CREATE TABLE VolunteerEvents (EventID INT, ProgramID INT, EventDate DATE, VolunteerID INT, ProgramFocus TEXT); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, FocusArea TEXT);", "output": "SELECT COUNT(DISTINCT v.VolunteerID) FROM Volunteers v INNER JOIN VolunteerEvents ve ON v.VolunteerID = ve.VolunteerID INNER JOIN Programs p ON ve.ProgramID = p.ProgramID WHERE p.FocusArea = 'Mental Health' AND ve.EventDate >= DATEADD(year, DATEDIFF(year, 0, GETDATE()), 0) AND ve.EventDate < DATEADD(year, DATEDIFF(year, 0, GETDATE()) + 1, 3);"}
{"input": " \ubd81\ubbf8 \uae30\uc5c5\uc774 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ub3c5\ud2b9\ud55c \uce5c\ud658\uacbd \uac74\ucd95\ubb3c \uc778\uc99d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, company_name TEXT, certification TEXT, region TEXT); INSERT INTO green_buildings (id, company_name, certification, region) VALUES (1, 'EcoBuild USA', 'LEED', 'North America'), (2, 'GreenTech Canada', 'Living Building Challenge', 'North America');", "output": "SELECT DISTINCT certification FROM green_buildings WHERE region = 'North America';"}
{"input": " \uac01 \uc5b8\uc5b4\uc758 \ubaa8\uad6d\uc5b4 \uc9c0\uc5ed\uc5d0 \uace0\uc720\ud55c \uc804\ud1b5 \uc608\uc220 \ud615\uc2dd\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE TraditionalArtForms (id INT, name VARCHAR(50), language VARCHAR(50), region VARCHAR(50)); CREATE TABLE ArtPieces (id INT, art_form_id INT, site_id INT); CREATE TABLE HeritageSites (id INT, name VARCHAR(50), site_id INT, region VARCHAR(50));", "output": "SELECT TAF.name, TAF.region FROM TraditionalArtForms TAF INNER JOIN ArtPieces AP ON TAF.id = AP.art_form_id INNER JOIN HeritageSites HS ON AP.site_id = HS.id WHERE TAF.region = HS.region GROUP BY TAF.name, TAF.region HAVING COUNT(*) = 1;"}
{"input": " \ud56d\uacf5\uc0ac\ubcc4 \ube44\ud589\uc2dc\uac04\uc774 \uac00\uc7a5 \ub9ce\uc740 \ud56d\uacf5\uae30\uc640 \uac00\uc7a5 \uc9e7\uc740 \ud56d\uacf5\uae30\uc758 \ube44\ud589\uc2dc\uac04 \ucc28\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Aircraft (id INT, tail_number VARCHAR(20), model VARCHAR(100), airline VARCHAR(100), flight_hours DECIMAL(10,2)); INSERT INTO Aircraft (id, tail_number, model, airline, flight_hours) VALUES (1, 'N12345', '737-800', 'BlueSky', 12345.67); INSERT INTO Aircraft (id, tail_number, model, airline, flight_hours) VALUES (2, 'N23456', '787-900', 'BlueSky', 15000.00); INSERT INTO Aircraft (id, tail_number, model, airline, flight_hours) VALUES (3, 'N34567', 'A320-200', 'RedAir', 7000.00); INSERT INTO Aircraft (id, tail_number, model, airline, flight_hours) VALUES (4, 'N45678', 'A321-200', 'RedAir', 8000.00);", "output": "SELECT airline, MAX(flight_hours) - MIN(flight_hours) OVER (PARTITION BY airline) as flight_hours_difference FROM Aircraft;"}
{"input": " \uac01 \ubcf5\uc6d0\uc790\uac00 \ubcf5\uc6d0\ud55c \uc720\ub7fd\uc758 \uc720\uc801\uc9c0\ub294 \ucd1d \uba87 \uad70\ub370\uc774\uba70, \uac00\uc7a5 \ub9ce\uc740 \uc720\uc801\uc9c0\ub97c \ubcf5\uc6d0\ud55c \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HeritageSites(SiteID INT, SiteName VARCHAR(100), Country VARCHAR(50), RestorationDate DATE, RestorerID INT);   CREATE TABLE Restorers(RestorerID INT, RestorerName VARCHAR(100));", "output": "SELECT r.RestorerName, COUNT(*) as NumberOfSitesRestored FROM HeritageSites h INNER JOIN Restorers r ON h.RestorerID = r.RestorerID GROUP BY r.RestorerName;   SELECT RestorerName, NumberOfSitesRestored FROM (SELECT r.RestorerName, COUNT(*) as NumberOfSitesRestored FROM HeritageSites h INNER JOIN Restorers r ON h.RestorerID = r.RestorerID GROUP BY r.RestorerName) as sub ORDER BY NumberOfSitesRestored DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ucde8\uc57d\uc810\uc744 \uacbd\ud5d8\ud55c \uc0ac\uc774\ubc84 \ubcf4\uc548 \ub3c4\uba54\uc778\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE domain_vulnerabilities_by_date (id INT, domain TEXT, vulnerability_id INT, date_discovered DATE); INSERT INTO domain_vulnerabilities_by_date (id, domain, vulnerability_id, date_discovered) VALUES (1, 'Network Security', 1, '2022-07-21'); INSERT INTO domain_vulnerabilities_by_date (id, domain, vulnerability_id, date_discovered) VALUES (2, 'Endpoint Security', 2, '2022-07-22'); INSERT INTO domain_vulnerabilities_by_date (id, domain, vulnerability_id, date_discovered) VALUES (3, 'Cloud Security', 3, '2022-07-23'); INSERT INTO domain_vulnerabilities_by_date (id, domain, vulnerability_id, date_discovered) VALUES (4, 'Application Security', 4, '2022-07-24'); INSERT INTO domain_vulnerabilities_by_date (id, domain, vulnerability_id, date_discovered) VALUES (5, 'Identity and Access Management', 5, '2022-07-25');", "output": "SELECT domain, COUNT(*) as count FROM domain_vulnerabilities_by_date WHERE date_discovered >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY) GROUP BY domain;"}
{"input": " \ud504\ub808\uc784\uc6cc\ud06c ID\uc5d0 \ub530\ub77c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\uac00 \ub9e4\uaca8\uc9c4 \ud574\ub2f9 \uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc788\ub294 \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE decentralized_applications (app_id INT, app_name VARCHAR(50)); INSERT INTO decentralized_applications (app_id, app_name) VALUES (1, 'Ethereum'); INSERT INTO decentralized_applications (app_id, app_name) VALUES (2, 'Cardano'); CREATE TABLE regulatory_frameworks (framework_id INT, framework_name VARCHAR(50), app_id INT); INSERT INTO regulatory_frameworks (framework_id, framework_name, app_id) VALUES (1, 'MiCA', 1); INSERT INTO regulatory_frameworks (framework_id, framework_name, app_id) VALUES (2, 'TFR', 2); INSERT INTO regulatory_frameworks (framework_id, framework_name, app_id) VALUES (3, 'DAR', 2);", "output": "SELECT da.app_name, rf.framework_name, rf.framework_id, ROW_NUMBER() OVER (PARTITION BY da.app_name ORDER BY rf.framework_id ASC) as rank FROM regulatory_frameworks rf JOIN decentralized_applications da ON rf.app_id = da.app_id ORDER BY da.app_name;"}
{"input": " \uac01 \uc8fc \ubc0f \uc9c0\uc5ed\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ud1b5\uacc4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (region_id INT, region_name VARCHAR(255)); CREATE TABLE states (state_id INT, state VARCHAR(255)); CREATE TABLE energy_efficiency (efficiency_id INT, state VARCHAR(255), region_id INT, energy_efficiency_score INT); INSERT INTO regions (region_id, region_name) VALUES (1, 'West'); INSERT INTO states (state_id, state) VALUES (1, 'California'); INSERT INTO energy_efficiency (efficiency_id, state, region_id, energy_efficiency_score) VALUES (1, 'California', 1, 90);", "output": "SELECT s.state, r.region_name, ee.energy_efficiency_score FROM states s INNER JOIN energy_efficiency ee ON s.state = ee.state INNER JOIN regions r ON ee.region_id = r.region_id;"}
{"input": " \ub2e4\uc591\ud55c \uc218\uc2ec \uad6c\uc5ed\uc758 \ud574\uc591 \uc0dd\ubb3c \ud48d\ubd80\ub3c4 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE depth_zones (id INT, depth_zone TEXT, species_count INT); INSERT INTO depth_zones (id, depth_zone, species_count) VALUES (1, '0-1000m', 500), (2, '1000-2000m', 300), (3, '2000-3000m', 150);", "output": "SELECT depth_zone, AVG(species_count) OVER (ORDER BY depth_zone ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) AS avg_species_count FROM depth_zones;"}
{"input": "2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \uad6c\uc5ed \ub0b4 \uacf5\uacf5\ub3c4\uc11c\uad00 \uc218\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE zones (zone_name VARCHAR(50), year INT, num_libraries INT); INSERT INTO zones VALUES ('Zone 1', 2019, 30); INSERT INTO zones VALUES ('Zone 1', 2020, 35); INSERT INTO zones VALUES ('Zone 2', 2019, 40); INSERT INTO zones VALUES ('Zone 2', 2020, 43);", "output": "SELECT zone_name, (LEAD(num_libraries) OVER (PARTITION BY zone_name ORDER BY year) - num_libraries) as change_in_num_libraries FROM zones;"}
{"input": " \uc720\ub7fd \ube0c\ub79c\ub4dc\uc758 \uc5b4\ub5a4 \uc81c\ud488\uc774 50\ud68c \uc774\uc0c1 \ub9ac\ubdf0\ub418\uc5c8\uc73c\uba70 \uc120\ud638\ub3c4 \ub4f1\uae09\uc774 4 \uc774\uc0c1\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Product_Reviews (review_id INT, product_id INT, review_text TEXT, helpful_votes INT, review_date DATE, preference_rating INT); INSERT INTO Product_Reviews (review_id, product_id, review_text, helpful_votes, review_date, preference_rating) VALUES (1, 1001, 'Lovely product', 55, '2021-09-01', 4), (2, 1002, 'Great color', 75, '2021-08-15', 5), (3, 1003, 'Disappointing quality', 35, '2021-07-01', 2), (4, 1004, 'Good but expensive', 60, '2021-06-10', 4); CREATE TABLE Product_Details (product_id INT, brand_id INT, brand TEXT, country TEXT); INSERT INTO Product_Details (product_id, brand_id, brand, country) VALUES (1001, 1, 'EcoWise Cosmetics', 'France'), (1002, 2, 'Nature\u2019s Beauty', 'Germany'), (1003, 3, 'Green Visions', 'Italy'), (1004, 4, 'Pure & Simple', 'Spain');", "output": "SELECT product_id FROM Product_Reviews WHERE preference_rating > 4 INTERSECT SELECT product_id FROM Product_Details WHERE country IN (SELECT country FROM Product_Details WHERE country IN ('France', 'Germany', 'Italy', 'Spain') GROUP BY country HAVING COUNT(DISTINCT brand) > 1);"}
{"input": " \ubaa8\ub4e0 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc758 \ucd1d \ube44\uc6a9 \ucc3e\uae30", "context": "CREATE TABLE pollution_control_initiatives (initiative_name VARCHAR(255), cost DECIMAL(10,2)); INSERT INTO pollution_control_initiatives (initiative_name, cost) VALUES ('Initiative A', 50000.0), ('Initiative B', 60000.0), ('Initiative C', 70000.0);", "output": "SELECT SUM(cost) FROM pollution_control_initiatives;"}
{"input": " \uac01 \uc778\uc885\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (ViolationID INT, State VARCHAR(25), Race VARCHAR(25), ViolationDate DATE); INSERT INTO MentalHealthParity (ViolationID, State, Race, ViolationDate) VALUES (1, 'California', 'Asian', '2021-01-15'); INSERT INTO MentalHealthParity (ViolationID, State, Race, ViolationDate) VALUES (2, 'New York', 'African American', '2021-02-20'); INSERT INTO MentalHealthParity (ViolationID, State, Race, ViolationDate) VALUES (3, 'Texas', 'Caucasian', '2021-03-10'); INSERT INTO MentalHealthParity (ViolationID, State, Race, ViolationDate) VALUES (4, 'Florida', 'Hispanic', '2021-04-01');", "output": "SELECT Race, COUNT(*) FROM MentalHealthParity GROUP BY Race;"}
{"input": " \uae30\uc220 \ubd80\ubb38\uc758 \uc5b4\ub5a4 \ud68c\uc0ac\uc5d0\ub3c4 \ud22c\uc790\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ud22c\uc790\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE investments (investor_id INT, company_id INT); INSERT INTO investments (investor_id, company_id) VALUES (1, 1), (1, 2), (2, 3), (3, 4), (3, 5); CREATE TABLE companies (id INT, sector VARCHAR(20)); INSERT INTO companies (id, sector) VALUES (1, 'Technology'), (2, 'Real Estate'), (3, 'Finance'), (4, 'Healthcare'), (5, 'Healthcare');", "output": "SELECT i.name FROM investors AS i LEFT JOIN investments AS inv ON i.id = inv.investor_id LEFT JOIN companies AS c ON inv.company_id = c.id WHERE c.sector != 'Technology' GROUP BY i.name HAVING COUNT(inv.id) = 0;"}
{"input": " \uac1c\uc778\ubcc4 \uc7ac\ubb34\ub2a5\ub825 \uc810\uc218\uc640 \ud574\ub2f9 \uc21c\uc704\ub97c \uc21c\uc704\ubcc4\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE financial_capability (individual_id INT, financial_capability_score DECIMAL(5, 2)); INSERT INTO financial_capability (individual_id, financial_capability_score) VALUES (1, 75.50), (2, 80.25), (3, 68.75), (4, 90.00), (5, 72.25);", "output": "SELECT individual_id, financial_capability_score, ROW_NUMBER() OVER (ORDER BY financial_capability_score DESC) AS rank FROM financial_capability ORDER BY rank;"}
{"input": " \ud68c\uc6d0 \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE member_categories (member_category VARCHAR(20), member_id INT, heart_rate INT); INSERT INTO member_categories (member_category, member_id, heart_rate) VALUES ('Gold', 1, 75), ('Gold', 2, 80), ('Silver', 3, 65), ('Bronze', 4, 70), ('Bronze', 5, 72);", "output": "SELECT pivot_col, AVG(heart_rate) as avg_heart_rate FROM (SELECT member_category AS pivot_col, heart_rate FROM member_categories) GROUP BY pivot_col;"}
{"input": " \uac01 \ud559\ub144\ubcc4\ub85c \uacf5\uac1c \uad50\uc721 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud55c \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, grade_level INT); INSERT INTO students (student_id, grade_level) VALUES (1, 6), (2, 7), (3, 8), (4, 9); CREATE TABLE initiatives (initiative_id INT, initiative_name VARCHAR(255), grade_level INT); INSERT INTO initiatives (initiative_id, initiative_name, grade_level) VALUES (1, 'Project-Based Learning', 6), (2, 'Maker Spaces', 7), (3, 'Genius Hour', 8), (4, 'E-Portfolios', 9); CREATE TABLE engagements (student_id INT, initiative_id INT); INSERT INTO engagements (student_id, initiative_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4);", "output": "SELECT s.grade_level, COUNT(DISTINCT e.student_id) as num_students FROM engagements e JOIN students s ON e.student_id = s.student_id JOIN initiatives i ON e.initiative_id = i.initiative_id GROUP BY s.grade_level;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 '\ub3c4\uc2dc' \uc9c0\uc5ed\uc5d0 \ub300\ud55c \ucd1d \ub124\ud2b8\uc6cc\ud06c \uc778\ud504\ub77c \ud22c\uc790\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT, region VARCHAR(10), year INT, amount INT); INSERT INTO investments (id, region, year, amount) VALUES (1, 'urban', 2020, 100000), (2, 'urban', 2021, 120000), (3, 'urban', 2019, 90000), (4, 'rural', 2020, 80000), (5, 'suburban', 2019, 110000);", "output": "SELECT SUM(amount) FROM investments WHERE region = 'urban' AND year BETWEEN (SELECT EXTRACT(YEAR FROM NOW()) - 3) AND (SELECT EXTRACT(YEAR FROM NOW()));"}
{"input": " \"\uc2dc\ub0b4\" \uc9c0\uc5ed\uc758 \uae34\uae09 \uc804\ud654\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc744 \uc6d4\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, call_time TIMESTAMP, location VARCHAR(20));", "output": "SELECT AVG(EXTRACT(EPOCH FROM call_time - LAG(call_time) OVER (PARTITION BY location ORDER BY call_time))) / 60 as avg_response_time, EXTRACT(MONTH FROM call_time) as month FROM emergency_calls WHERE location = 'downtown' GROUP BY month;"}
{"input": " \ud2b9\uc815 \uc5f0\ub839\ub300\uc758 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud314\ub85c\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, age INT, country VARCHAR(255), followers INT); INSERT INTO users (id, age, country, followers) VALUES (1, 25, 'Italy', 500), (2, 30, 'Nigeria', 600), (3, 35, 'Argentina', 700), (4, 40, 'Poland', 800);", "output": "SELECT AVG(followers) FROM users WHERE age BETWEEN 25 AND 35;"}
{"input": " \uc778\ub3c4\uc591\uc5d0\uc11c \uac00\uc7a5 \uae4a\uc740 \ud574\uad6c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694", "context": "CREATE TABLE marine_trenches (ocean TEXT, trench TEXT, max_depth INTEGER);INSERT INTO marine_trenches (ocean, trench, max_depth) VALUES ('Pacific', 'Mariana Trench', 10994), ('Indian', 'Java Trench', 7725);", "output": "SELECT ocean, trench, max_depth FROM marine_trenches WHERE ocean = 'Indian' AND max_depth = (SELECT MAX(max_depth) FROM marine_trenches WHERE ocean = 'Indian');"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \ubaa9\uc7ac\uc758 \ucd1d\ub7c9\uacfc \ud574\ub2f9 \uc9c0\uc5ed\uc758 \uc57c\uc0dd \ub3d9\ubb3c \uc885\uc758 \ucd1d \uc218\ub97c \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, region_name TEXT, PRIMARY KEY (region_id)); CREATE TABLE timber (timber_id INT, region_id INT, year INT, volume INT, PRIMARY KEY (timber_id), FOREIGN KEY (region_id) REFERENCES region(region_id)); CREATE TABLE wildlife (wildlife_id INT, region_id INT, species_count INT, PRIMARY KEY (wildlife_id), FOREIGN KEY (region_id) REFERENCES region(region_id));", "output": "SELECT r.region_name, t.year, SUM(t.volume) AS total_timber_volume, COUNT(DISTINCT w.species_count) AS total_species_count FROM region r INNER JOIN timber t ON r.region_id = t.region_id INNER JOIN wildlife w ON r.region_id = w.region_id GROUP BY r.region_name, t.year ORDER BY t.year;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ubcd1\uc6d0 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE hospitals (id INT, name TEXT, city TEXT); INSERT INTO hospitals (id, name, city) VALUES (1, 'Hospital A', 'New York'); INSERT INTO hospitals (id, name, city) VALUES (2, 'Hospital B', 'Los Angeles'); INSERT INTO hospitals (id, name, city) VALUES (3, 'Hospital C', 'New York');", "output": "SELECT city, COUNT(*) FROM hospitals GROUP BY city;"}
{"input": " \uc6a9\ub7c9\ubcc4\ub85c \uc778\ub3c4\uc5d0\uc11c \uac00\uc7a5 \uc791\uc740 \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8 \uc2dd\ubcc4", "context": "CREATE TABLE renewable_energy_projects (id INT, name VARCHAR(100), country VARCHAR(50), capacity_mw FLOAT); INSERT INTO renewable_energy_projects (id, name, country, capacity_mw) VALUES (1, 'Project 1', 'India', 30.5), (2, 'Project 2', 'India', 15.2);", "output": "SELECT name, MIN(capacity_mw) FROM renewable_energy_projects WHERE country = 'India';"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Volunteers (VolunteerID int, Name varchar(50), Country varchar(50), Hours decimal(5,2)); INSERT INTO Volunteers (VolunteerID, Name, Country, Hours) VALUES (1, 'Aisha', 'Pakistan', 25.50), (2, 'Hiroshi', 'Japan', 35.25), (3, 'Marie', 'France', 50.00);", "output": "SELECT Country, SUM(Hours) as TotalHours FROM Volunteers WHERE QUARTER(VolunteerDate) = 2 GROUP BY Country ORDER BY TotalHours DESC LIMIT 3;"}
{"input": " 20\uc138\uae30 \uc544\uc2dc\uc544 \uc608\uc220\uac00\ub4e4\uc740 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc791\ud488\uc744 \ucc3d\uc791\ud588\ub098\uc694?", "context": "CREATE TABLE artworks (id INT, name VARCHAR(255), year INT, artist_name VARCHAR(255), artist_birthplace VARCHAR(255)); INSERT INTO artworks (id, name, year, artist_name, artist_birthplace) VALUES (1, 'Painting', 1920, 'John', 'Japan'), (2, 'Sculpture', 1930, 'Sara', 'China'), (3, 'Print', 1940, 'Alex', 'Korea');", "output": "SELECT COUNT(*) FROM artworks WHERE artist_birthplace LIKE 'Asia%' AND year BETWEEN 1900 AND 1999;"}
{"input": " \uc0e4\ub9ac\uc544\ub97c \uc900\uc218\ud558\ub294 \uae08\uc735 \uace0\uac1d\uc5d0 \ub300\ud574 \uc138 \ubc88\uc9f8\ub85c \ub192\uc740 \uacc4\uc88c \uc794\uc561\uc744 \ucc3e\uace0 \uace0\uac1d\uc758 \uc774\ub984\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE shariah_compliant_finance(customer_id INT, name VARCHAR(50), account_balance DECIMAL(10, 2)); INSERT INTO shariah_compliant_finance VALUES (1, 'Hassan Ahmed', 10000), (2, 'Aisha Bibi', 12000), (3, 'Muhammad Ali', 15000), (4, 'Fatima Khan', 11000);", "output": "SELECT name, account_balance FROM (SELECT customer_id, name, account_balance, ROW_NUMBER() OVER (ORDER BY account_balance DESC) AS rn FROM shariah_compliant_finance) t WHERE rn = 3;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \ubc30\ud3ec\ub418\uc5c8\uc73c\uba70 \uac00\uc2a4 \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (id INT, name VARCHAR(50), gas_consumption INT, deployment_date DATE); INSERT INTO smart_contracts (id, name, gas_consumption, deployment_date) VALUES (1, 'Contract1', 100, '2022-01-01'), (2, 'Contract2', 200, '2022-02-01');", "output": "SELECT name, gas_consumption FROM (SELECT name, gas_consumption, RANK() OVER (ORDER BY gas_consumption DESC) as rank, ROW_NUMBER() OVER (ORDER BY deployment_date DESC) as row_num FROM smart_contracts WHERE deployment_date >= '2022-06-01') x WHERE row_num <= 30;"}
{"input": " \uacf5\uacf5 \ubd09\uc0ac \ud589\uc0ac\uac00 \uc788\ub294 \ubc1c\uad74 \ud604\uc7a5\uc758 \uc720\uc801\uc9c0 \uc774\ub984, \uc704\uce58 \ubc0f \ucd1d \uc720\ubb3c \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSites (SiteID int, SiteName varchar(50), Location varchar(50)); CREATE TABLE PublicOutreach (EventID int, SiteID int, EventType varchar(20)); CREATE TABLE Artifacts (ArtifactID int, SiteID int, Material varchar(20), Description varchar(100));", "output": "SELECT ExcavationSites.SiteName, ExcavationSites.Location, COUNT(Artifacts.ArtifactID) AS TotalArtifacts FROM ExcavationSites INNER JOIN PublicOutreach ON ExcavationSites.SiteID = PublicOutreach.SiteID INNER JOIN Artifacts ON ExcavationSites.SiteID = Artifacts.SiteID WHERE PublicOutreach.EventType = 'event' GROUP BY ExcavationSites.SiteName, ExcavationSites.Location;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac01 \ud56d\uad6c\uc5d0\uc11c \ucc98\ub9ac\ub41c \ucee8\ud14c\uc774\ub108 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (id INT, name TEXT, location TEXT); CREATE TABLE handling (id INT, port_id INT, date DATE, containers_handled INT); INSERT INTO port (id, name, location) VALUES (1, 'Port of Oakland', 'USA'), (2, 'Port of Rotterdam', 'Netherlands'), (3, 'Port of Singapore', 'Singapore'); INSERT INTO handling (id, port_id, date, containers_handled) VALUES (1, 1, '2022-01-01', 5000), (2, 1, '2022-01-03', 6000), (3, 2, '2022-01-02', 4000);", "output": "SELECT h.port_id, SUM(h.containers_handled) FROM handling h WHERE h.date >= DATEADD(day, -7, GETDATE()) GROUP BY h.port_id;"}
{"input": " \ubbf8\uad6d \uc8fc\uc2dd\uc774\ub098 \ucc44\uad8c \uc911 \ud558\ub098\uc5d0\ub9cc \ud22c\uc790\ud588\uc9c0\ub9cc \ub458 \ub2e4 \ud22c\uc790\ud558\uc9c0\ub294 \uc54a\uc740 \uace0\uac1d\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT); CREATE TABLE investments (client_id INT, investment_type VARCHAR(20)); INSERT INTO clients VALUES (1),(2),(3),(4); INSERT INTO investments VALUES (1,'US Equities'),(1,'Bonds'),(2,'US Equities'),(3,'Bonds'),(4,'International Equities');", "output": "SELECT clients.client_id FROM clients INNER JOIN investments investments_1 ON clients.client_id = investments_1.client_id WHERE investments_1.investment_type IN ('US Equities', 'Bonds') INTERSECT SELECT clients.client_id FROM clients INNER JOIN investments investments_2 ON clients.client_id = investments_2.client_id WHERE investments_2.investment_type NOT IN ('US Equities', 'Bonds');"}
{"input": " 2022\ub144 2\ubd84\uae30 \uc758\ub8cc \ubd80\ubb38 \uac70\ub798\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transaction (transaction_id INT, sector VARCHAR(255), transaction_value DECIMAL(10,2), transaction_date DATE); INSERT INTO transaction (transaction_id, sector, transaction_value, transaction_date) VALUES (1, 'healthcare', 500.00, '2022-04-01'), (2, 'healthcare', 700.00, '2022-05-01');", "output": "SELECT SUM(transaction_value) FROM transaction WHERE sector = 'healthcare' AND transaction_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \ub300\uc11c\uc591\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\uc800 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_temperatures (year INTEGER, ocean VARCHAR(255), temperature FLOAT);", "output": "SELECT MIN(temperature) FROM ocean_temperatures WHERE ocean = 'Atlantic Ocean' AND year BETWEEN (SELECT MAX(year) - 5 FROM ocean_temperatures) AND MAX(year);"}
{"input": " \uac01 \uc5f0\uad6c \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubd84\ud560\ub41c \uc548\uc804\ud55c AI \uc5f0\uad6c \uc790\uae08\uc758 \uc5f0\ub3c4\ubcc4 \ub204\uacc4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA ai_safety; CREATE TABLE funding (year INT, category VARCHAR(20), amount DECIMAL(10, 2)); INSERT INTO funding (year, category, amount) VALUES (2018, 'verifiability', 1000000.00), (2019, 'robustness', 1500000.00), (2020, 'verifiability', 1200000.00), (2021, 'transparency', 1700000.00);", "output": "SELECT year, category, amount, SUM(amount) OVER (PARTITION BY category ORDER BY year) as running_total FROM ai_safety.funding;"}
{"input": " \uac01\uad6d \ud638\ud154\uc758 \ucd5c\ub300 \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, name TEXT, country TEXT, carbon_emissions INT); INSERT INTO hotels (hotel_id, name, country, carbon_emissions) VALUES (1, 'Hotel A', 'Canada', 100), (2, 'Hotel B', 'Mexico', 200), (3, 'Hotel C', 'Germany', 300), (4, 'Hotel D', 'Australia', 400), (5, 'Hotel E', 'USA', 500);", "output": "SELECT country, MAX(carbon_emissions) FROM hotels GROUP BY country;"}
{"input": " \uc608\uc0b0 \uc5c5\ub370\uc774\ud2b8\ub97c \ud3ec\ud568\ud558\uc5ec 2023\ub144 \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, Name TEXT, InitialBudget DECIMAL(10,2));CREATE TABLE BudgetUpdates (UpdateID INT, ProgramID INT, NewBudget DECIMAL(10,2), UpdateDate DATE);", "output": "SELECT P.Name, SUM(CASE WHEN BU.UpdateDate = (SELECT MAX(UpdateDate) FROM BudgetUpdates BU2 WHERE BU2.ProgramID = BU.ProgramID) THEN BU.NewBudget ELSE P.InitialBudget END) as TotalBudget  FROM Programs P LEFT JOIN BudgetUpdates BU ON P.ProgramID = BU.ProgramID GROUP BY P.ProgramID, P.Name;"}
{"input": " \uc54c\ub798\uc2a4\uce74\uc758 \ud55c \ub2ec \ud3c9\uade0 \ub3c5\uac10 \ud658\uc790 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE DiseaseCases (CaseID INT, PatientID INT, Disease VARCHAR(20), Date DATE, Age INT, State VARCHAR(20)); INSERT INTO DiseaseCases (CaseID, PatientID, Disease, Date, Age, State) VALUES (1, 9, 'Flu', '2021-01-01', 30, 'Alaska'); INSERT INTO DiseaseCases (CaseID, PatientID, Disease, Date, Age, State) VALUES (2, 10, 'Flu', '2021-02-01', 40, 'Alaska');", "output": "SELECT AVG(CountPerMonth) FROM (SELECT DATEPART(mm, Date) AS Month, COUNT(*) AS CountPerMonth FROM DiseaseCases WHERE Disease = 'Flu' AND State = 'Alaska' GROUP BY DATEPART(mm, Date)) AS FluCasesPerMonth;"}
{"input": " \uc774\uacfc\uacc4\uc5f4 \ud559\uc0dd\ub4e4\uc758 \ud3c9\uade0 \uc815\uc2e0\uac74\uac15 \uc810\uc218\ub294 \uba87 \uc810\uc778\uac00\uc694?", "context": "CREATE TABLE student_mental_health (student_id INT, score INT, department VARCHAR(20)); INSERT INTO student_mental_health (student_id, score, department) VALUES (1, 70, 'science'), (2, 80, 'math'), (3, 60, 'science');", "output": "SELECT AVG(score) FROM student_mental_health WHERE department = 'science';"}
{"input": " 2020\ub144\uc5d0 \uc544\ud504\ub9ac\uce74 \uc5b8\ub860 \uae30\uad00\uc774 \ubc1c\ud589\ud55c \uae30\uc0ac \uc911 \ud5c8\uc704 \uc815\ubcf4\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uae30\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(255), publication_date DATE, topic VARCHAR(50), news_org VARCHAR(50)); INSERT INTO articles (id, title, publication_date, topic, news_org) VALUES (1, 'Article1', '2020-01-01', 'Disinformation', 'Org1'), (2, 'Article2', '2020-02-15', 'Politics', 'Org2'), (3, 'Article3', '2020-12-31', 'Corruption', 'Org3');", "output": "SELECT (COUNT(*) FILTER (WHERE topic = 'Disinformation'))::DECIMAL / COUNT(*) AS disinformation_percentage FROM articles WHERE YEAR(publication_date) = 2020 AND news_org LIKE '%Africa%';"}
{"input": " \ud3c9\uac00 \ub0a0\uc9dc \ubc0f \uc810\uc218\ub97c \ud3ec\ud568\ud558\uc5ec \uc9c0\ub09c \uc8fc\uc5d0 \uac74\uac15 \ud615\ud3c9\uc131 \uce21\uc815 \ud3c9\uac00\ub97c \ubc1b\uc740 \ubaa8\ub4e0 \ud658\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE patients (id INT, name TEXT, assessment_date DATE, assessment_score INT); INSERT INTO patients (id, name, assessment_date, assessment_score) VALUES (1, 'Gia', '2022-05-03', 82), (2, 'Hugh', '2022-04-28', 88), (3, 'Ivy', '2022-05-05', 90);", "output": "SELECT * FROM patients WHERE assessment_date >= DATEADD(week, -1, CURRENT_DATE);"}
{"input": " \uac01 \ucc3d\uc758\uc801 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3c9\uade0 \uc548\uc804 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CreativeAI (id INT, application VARCHAR(255), safety_score DECIMAL(5,2)); INSERT INTO CreativeAI (id, application, safety_score) VALUES (1, 'Artistic Image Generation', 85.67), (2, 'Automated Journalism', 91.23), (3, 'Music Composition', 88.98);", "output": "SELECT application, AVG(safety_score) as avg_safety_score FROM CreativeAI GROUP BY application;"}
{"input": " \uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uc9c0\uc5ed\uc758 AI \uc724\ub9ac \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AI_Ethics (region VARCHAR(50), budget FLOAT); INSERT INTO AI_Ethics (region, budget) VALUES ('North America', 5000000), ('South America', 3000000), ('Europe', 7000000), ('Asia', 6000000), ('Africa', 4000000);", "output": "SELECT AVG(AI_Ethics.budget) FROM AI_Ethics WHERE AI_Ethics.region IN (SELECT AI_Ethics.region FROM AI_Ethics ORDER BY AI_Ethics.budget DESC LIMIT 2);"}
{"input": " \ud574\ub2f9 \uc9c0\uc5ed \ub0b4 \uac01 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, age INT, gender TEXT, contribution FLOAT, location TEXT); INSERT INTO donors (id, name, age, gender, contribution, location) VALUES (1, 'Alice Johnson', 45, 'Female', 500.00, 'San Francisco'); INSERT INTO donors (id, name, age, gender, contribution, location) VALUES (2, 'Bob Brown', 50, 'Male', 1000.00, 'Chicago');", "output": "SELECT *, DENSE_RANK() OVER (PARTITION BY location ORDER BY contribution DESC) as contribution_rank FROM donors;"}
{"input": " \uc11d\uae30\uac00 5\uac1c \uc774\uc0c1 \ubc1c\uacac\ub41c \ubc1c\uad74\ud604\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtifactTypes (ArtifactTypeID INT, ArtifactType TEXT); INSERT INTO ArtifactTypes (ArtifactTypeID, ArtifactType) VALUES (1, 'Stone Tool'), (2, 'Pottery'), (3, 'Metal Object'), (4, 'Bone Artifact'); CREATE TABLE Artifacts (ArtifactID INT, ArtifactName TEXT, SiteID INT, ArtifactTypeID INT); INSERT INTO Artifacts (ArtifactID, ArtifactName, SiteID, ArtifactTypeID) VALUES (3, 'Flint Tool', 3, 1), (5, 'Stone Hammer', 2, 1), (6, 'Stone Axe', 1, 1), (7, 'Pottery Jar', 2, 2), (8, 'Bronze Sword', 2, 3), (9, 'Ancient Bone Necklace', 1, 4);", "output": "SELECT Sites.SiteName, COUNT(Artifacts.ArtifactID) AS Quantity FROM Artifacts INNER JOIN Sites ON Artifacts.SiteID = Sites.SiteID INNER JOIN ArtifactTypes ON Artifacts.ArtifactTypeID = ArtifactTypes.ArtifactTypeID WHERE ArtifactTypes.ArtifactType = 'Stone Tool' GROUP BY Sites.SiteName HAVING Quantity >= 5;"}
{"input": " \ub2e8\uc77c \uad6d\uac00\uac00 \ubc1c\uc0ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc704\uc131 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites_by_country (country VARCHAR(255), num_satellites INT); INSERT INTO satellites_by_country (country, num_satellites) VALUES ('USA', 1500), ('Russia', 1200), ('China', 500), ('India', 400), ('Japan', 350), ('Germany', 250), ('Italy', 200);", "output": "SELECT MAX(num_satellites) FROM satellites_by_country;"}
{"input": " '\uc624\uc158\ud0c0\uc774\ud0c4' \uc120\ubc15\uc5d0 \ub300\ud55c 2022-01-01 \uc774\uc804\uc758 \uc548\uc804\uac80\uc0ac\ub97c \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vessels (id INT, name VARCHAR(255), type VARCHAR(255)); CREATE TABLE safety_inspections (id INT, vessel_id INT, inspection_date DATE, result VARCHAR(255));", "output": "DELETE FROM safety_inspections WHERE vessel_id IN (SELECT id FROM vessels WHERE name = 'Ocean Titan') AND inspection_date < '2022-01-01';"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \uae30\ubd80\uc790 \ub370\uc774\ud130\ub97c \ubaa8\ub450 \uac16\uace0 \uc788\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Programs (id INT, name TEXT); INSERT INTO Programs (id, name) VALUES (1, 'Youth Education'), (2, 'Women Empowerment'), (3, 'Clean Water'), (4, 'Refugee Support'); CREATE TABLE Volunteers (id INT, program INT, hours INT); INSERT INTO Volunteers (id, program, hours) VALUES (1, 1, 20), (2, 2, 30), (3, 3, 15), (4, 4, 25); CREATE TABLE Donors (id INT, program INT, amount DECIMAL(10, 2)); INSERT INTO Donors (id, program, amount) VALUES (1, 1, 100), (2, 2, 150), (3, 3, 75), (5, 4, 200);", "output": "SELECT Programs.name FROM Programs INNER JOIN Volunteers ON Programs.id = Volunteers.program INNER JOIN Donors ON Programs.id = Donors.program;"}
{"input": " \uac00\uc785\uc790 \uc218 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uac1c \ubaa8\ubc14\uc77c \ub124\ud2b8\uc6cc\ud06c \uc81c\uacf5\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE TABLE mobile_providers (provider TEXT, subscribers INT);", "output": "CREATE VIEW top_providers AS SELECT provider, subscribers, ROW_NUMBER() OVER (ORDER BY subscribers DESC) as rank FROM mobile_providers;"}
{"input": " '\uc778\ub3c4'\uc758 \ubaa8\ub4e0 IoT \uc13c\uc11c\uc5d0 \ub300\ud55c 8\uc6d4 \uccab\uc9f8 \uc8fc \ud3c9\uade0 \ud1a0\uc591 \uc218\ubd84 \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE iot_sensors (id INT, name TEXT, country TEXT); INSERT INTO iot_sensors (id, name, country) VALUES (1, 'IS1', 'India'), (2, 'IS2', 'Pakistan'); CREATE TABLE soil_moisture (id INT, sensor_id INT, timestamp TIMESTAMP, moisture FLOAT); INSERT INTO soil_moisture (id, sensor_id, timestamp, moisture) VALUES (1, 1, '2021-08-01 12:00:00', 35), (2, 1, '2021-08-02 12:00:00', 37), (3, 1, '2021-08-03 12:00:00', 32), (4, 2, '2021-08-01 12:00:00', 40), (5, 2, '2021-08-02 12:00:00', 42), (6, 2, '2021-08-03 12:00:00', 38);", "output": "SELECT AVG(moisture) FROM (SELECT moisture, ROW_NUMBER() OVER (PARTITION BY sensor_id ORDER BY timestamp) rn FROM soil_moisture WHERE country = 'India' AND EXTRACT(MONTH FROM timestamp) = 8 AND EXTRACT(DAY FROM timestamp) BETWEEN 1 AND 7) t WHERE rn = 1;"}
{"input": " '\uc2a4\ud3ec\uce20'\uc5d0 \ub300\ud55c \uae30\uc0ac\ub97c \uc88b\uc544\ud558\uace0 '\uc608\ub2a5'\uc5d0 \ub300\ud55c \uae30\uc0ac\ub3c4 \uc88b\uc544\ud55c \uc0ac\uc6a9\uc790\uc758 \uc5f0\ub839\ub300\ubcc4 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, name TEXT, age INT, likes INT); CREATE TABLE user_likes (user_id INT, article_id INT); CREATE TABLE articles (id INT, title TEXT, category TEXT);", "output": "SELECT age_range, (COUNT(*) / (SELECT COUNT(*) FROM users)) * 100.0 AS percentage FROM (SELECT users.age / 10 * 10 AS age_range, users.id FROM users) AS user_age JOIN user_likes ON user_age.id = user_likes.user_id JOIN articles ON user_likes.article_id = articles.id WHERE articles.category = 'sports' INTERSECT SELECT user_age.id FROM (SELECT users.age / 10 * 10 AS age_range, users.id FROM users) AS user_age JOIN user_likes ON user_age.id = user_likes.user_id JOIN articles ON user_likes.article_id = articles.id WHERE articles.category = 'entertainment' GROUP BY age_range;"}
{"input": "\ub274\uc695 \uc8fc \uc0c1\uc5c5\uc6a9 \uac74\ubb3c\uc758 \ucd5c\uc18c \uce35\uc218\ub294 \uba87 \uce35\uc785\ub2c8\uae4c?", "context": "CREATE TABLE building_info (building_id INT, building_type VARCHAR(50), floors INT, state VARCHAR(50)); INSERT INTO building_info (building_id, building_type, floors, state) VALUES (1, 'Residential', 3, 'California'), (2, 'Commercial', 10, 'New York'), (3, 'Residential', 4, 'Texas'), (4, 'Commercial', 8, 'New York');", "output": "SELECT MIN(floors) FROM building_info WHERE building_type = 'Commercial' AND state = 'New York';"}
{"input": " \ucd5c\uadfc \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac\ub97c \ud1b5\uacfc\ud55c \ub808\uc2a4\ud1a0\ub791\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uba54\ub274 \ud56d\ubaa9\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255), SustainableMenu bit, LastInspectionDate date); CREATE TABLE Menu (MenuID int, RestaurantID int, MenuItem varchar(255), Price decimal(5,2), IsSustainable bit); CREATE TABLE Inspections (InspectionID int, RestaurantID int, InspectionDate date, ViolationCount int);", "output": "SELECT AVG(M.Price) as AveragePriceOfSustainableMenuItems FROM Menu M INNER JOIN Restaurants R ON M.RestaurantID = R.RestaurantID INNER JOIN (SELECT RestaurantID, MAX(InspectionDate) as LastInspectionDate FROM Inspections GROUP BY RestaurantID) I ON R.RestaurantID = I.RestaurantID WHERE M.IsSustainable = 1 AND R.LastInspectionDate = I.LastInspectionDate AND I.ViolationCount = 0;"}
{"input": " \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\ubcf4\ub2e4 \ub192\uc740 \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site (site_id INT, site_name VARCHAR(50), co2_emissions_tonnes INT);", "output": "SELECT site_name FROM site WHERE co2_emissions_tonnes > (SELECT AVG(co2_emissions_tonnes) FROM site);"}
{"input": " \uc7a0\uc218\ud568 \ud611\uace1\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE submarine_canyons (name VARCHAR(255), depth FLOAT);", "output": "SELECT MAX(depth) FROM submarine_canyons;"}
{"input": " \ud30c\ud0a4\uc2a4\ud0c4\uc5d0\uc11c \ud658\uc790 \uce58\ub8cc\uc758 \uac00\uc7a5 \ube60\ub978 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE therapy (id INT, patient_id INT, start_date DATE); INSERT INTO therapy (id, patient_id, start_date) VALUES (1, 1, '2022-03-01'), (2, 2, '2022-02-01');", "output": "SELECT MIN(start_date) FROM therapy WHERE patient_id IN (SELECT id FROM patients WHERE country = 'Pakistan');"}
{"input": " '\uc624\ud074\ub79c\ub4dc' \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc758 \ucd5c\ub300 \ubd80\ub3d9\uc0b0 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CoOwnership (CoOwnershipID INT, PropertyID INT); CREATE TABLE Properties (PropertyID INT, PropertyValue FLOAT, CoOwnershipID INT); INSERT INTO CoOwnership VALUES (1, 1); INSERT INTO Properties VALUES (1, 800000, 1);", "output": "SELECT MAX(PropertyValue) FROM Properties p JOIN CoOwnership co ON p.PropertyID = co.PropertyID WHERE co.CoOwnershipID IS NOT NULL; SELECT MAX(PropertyValue) FROM Properties p JOIN CoOwnership co ON p.PropertyID = co.PropertyID WHERE co.CoOwnershipID IS NOT NULL AND EXISTS (SELECT * FROM Cities c WHERE c.CityName = 'Oakland' AND c.CityID = p.CityID);"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed\uc758 \uc2dd\ud488 \uc548\uc804 \uc704\ubc18 \ud69f\uc218\uc640 \ub808\uc2a4\ud1a0\ub791\uc758 \ud3c9\uade0 \uba54\ub274 \uac00\uaca9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (RestaurantID INT, Name VARCHAR(50), Region VARCHAR(50), TotalRevenue DECIMAL(10,2)); CREATE TABLE Menu (MenuID INT, RestaurantID INT, Item VARCHAR(50), Price DECIMAL(10,2)); CREATE TABLE Inspections (InspectionID INT, RestaurantID INT, ViolationCount INT);", "output": "SELECT R.Region, AVG(M.Price), AVG(I.ViolationCount) FROM Restaurants R INNER JOIN Menu M ON R.RestaurantID = M.RestaurantID INNER JOIN Inspections I ON R.RestaurantID = I.RestaurantID GROUP BY R.Region HAVING R.Region = 'Northeast';"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc5f0\ub3c4\ubcc4 '\ud558\ub178\uc774'\uc5d0\uc11c \uc2dc\ud589\ub41c \ubb3c \uc808\uc57d \ud65c\ub3d9\uc758 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE conservation_initiatives (region VARCHAR(50), date DATE, initiative VARCHAR(50)); INSERT INTO conservation_initiatives (region, date, initiative) VALUES ('Hanoi', '2015-01-01', 'Rainwater harvesting'), ('Hanoi', '2016-01-01', 'Greywater reuse'), ('Hanoi', '2017-01-01', 'Smart irrigation'), ('Hanoi', '2018-01-01', 'Leak detection'), ('Hanoi', '2019-01-01', 'Water-efficient appliances');", "output": "SELECT YEAR(date) AS year, COUNT(*) FROM conservation_initiatives WHERE region = 'Hanoi' AND date BETWEEN '2015-01-01' AND '2020-12-31' GROUP BY year;"}
{"input": " 2022\ub144\uc5d0 \uc2dc\uc791\ub41c \ub18d\uc5c5 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AgriculturalProjects (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), sector VARCHAR(20), start_date DATE, end_date DATE); INSERT INTO AgriculturalProjects (id, name, location, sector, start_date, end_date) VALUES (1, 'Solar Irrigation', 'Rural Kenya', 'Agricultural Innovation', '2020-01-01', '2022-12-31'), (2, 'Precision Farming', 'Rural Brazil', 'Agricultural Innovation', '2021-01-01', '2023-12-31'), (3, 'Organic Farming', 'Rural India', 'Agricultural Innovation', '2022-01-01', '2024-12-31');", "output": "SELECT name, location FROM AgriculturalProjects WHERE start_date >= '2022-01-01' AND start_date < '2023-01-01';"}
{"input": " 2020\ub144 \uc548\ub2ec\ub8e8\uc2dc\uc544 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uacf5\uac1c \ud611\uc758\uac00 \uc9c4\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name TEXT); INSERT INTO regions (id, name) VALUES (1, 'Andalusia'); CREATE TABLE public_consultations (id INT PRIMARY KEY, region_id INT, year INT, number INT); INSERT INTO public_consultations (id, region_id, year, number) VALUES (1, 1, 2020, 12); INSERT INTO public_consultations (id, region_id, year, number) VALUES (2, 1, 2019, 10); INSERT INTO public_consultations (id, region_id, year, number) VALUES (3, 1, 2018, 8);", "output": "SELECT number FROM public_consultations WHERE region_id = (SELECT id FROM regions WHERE name = 'Andalusia') AND year = 2020;"}
{"input": "\ubca0\ub97c\ub9b0\uc758 \ucd1d \uc804\uae30\ucc28 \ub300\uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE electric_vehicles (id INT, city VARCHAR(50));   CREATE TABLE vehicles (id INT, electric BOOLEAN);", "output": "SELECT COUNT(*) FROM electric_vehicles WHERE city = 'Berlin' AND (SELECT COUNT(*) FROM vehicles WHERE electric = TRUE) / (SELECT COUNT(*) FROM vehicles) > 0.5;"}
{"input": " \uac01 \uc0dd\uc0b0 \uc2e4\ud589\uc758 \ud3c9\uade0 \ubc18\uc751\uae30 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production_runs (id INT, reactor_temp FLOAT); INSERT INTO production_runs (id, reactor_temp) VALUES (1, 120.5), (2, 125.3), (3, 118.9);", "output": "SELECT AVG(reactor_temp) OVER (PARTITION BY id) AS avg_reactor_temp FROM production_runs;"}
{"input": " 2\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uac01 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc6b4\ub3d9 \uc2dc\uac04\uacfc \uc6b4\ub3d9 \ud69f\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Workouts (user_id INT, workout_date DATE, workout_duration INT); INSERT INTO Workouts (user_id, workout_date, workout_duration) VALUES (1, '2022-02-01', 60), (1, '2022-02-02', 30), (2, '2022-02-01', 45), (2, '2022-02-02', 60);", "output": "SELECT user_id, SUM(workout_duration) as total_duration, COUNT(*) as num_workouts FROM Workouts WHERE MONTH(workout_date) = 2 GROUP BY user_id;"}
{"input": "Fair_Labor_Practices \ubcf4\uae30\uc758 \ud56d\ubaa9\uc5d0 \ub300\ud55c \ucd5c\uc18c \ub178\ub3d9 \uc870\uac74 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE VIEW Fair_Labor_Practices AS SELECT product_id, product_name, labor_conditions_score FROM Products; INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions, labor_conditions_score, environmental_impact_score) VALUES (1001, 'Gloves', 2, 4, 1, 6, 5); INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions, labor_conditions_score, environmental_impact_score) VALUES (1002, 'Tote Bag', 3, 5, 2, 7, 4); INSERT INTO Products (product_id, product_name, transportation_emissions, production_emissions, packaging_emissions, labor_conditions_score, environmental_impact_score) VALUES (1003, 'Headphones', 4, 6, 3, 8, 3);", "output": "SELECT MIN(labor_conditions_score) FROM Fair_Labor_Practices;"}
{"input": " \uc81c\uc870\uc5c5\uccb4 'ABC Clothing'\uc774 \uc758\ub958\ub2f9 \ubc1c\uc0dd\ud558\ub294 \ud3c9\uade0 \ud3d0\uae30\ubb3c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste (waste_id INT, waste_amount FLOAT, garment_id INT, manufacturer VARCHAR(20)); INSERT INTO waste (waste_id, waste_amount, garment_id, manufacturer) VALUES (1, 2.5, 1001, 'ABC Clothing'), (2, 3.0, 1002, 'XYZ Fashion');", "output": "SELECT AVG(waste_amount) FROM waste WHERE manufacturer = 'ABC Clothing';"}
{"input": " \uccad\uad6c \uae08\uc561\uc774 \ub192\uc740 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uc704\ud5d8 \ubc94\uc8fc\ub97c '\uace0\uc704\ud5d8'\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholders (ID INT, Name VARCHAR(50), Age INT, Gender VARCHAR(10), City VARCHAR(50), State VARCHAR(20), ZipCode VARCHAR(10), RiskCategory VARCHAR(10)); CREATE TABLE Claims (ID INT, PolicyholderID INT, ClaimAmount DECIMAL(10,2), ClaimDate DATE);", "output": "UPDATE Policyholders SET RiskCategory = 'High Risk' WHERE ID IN (SELECT PolicyholderID FROM Claims WHERE ClaimAmount > (SELECT AVG(ClaimAmount) FROM Claims));"}
{"input": " 2017\ub144\uacfc 2018\ub144 \uc0ac\uc774\uc5d0 \uc720\ub7fd\uc758 \ub9e4\ub9bd \uc6a9\ub7c9 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE landfill_capacity (region VARCHAR(50), year INT, capacity FLOAT); INSERT INTO landfill_capacity (region, year, capacity) VALUES ('Europe', 2017, 25000), ('Europe', 2018, 26000);", "output": "SELECT (LAG(capacity, 1) OVER (PARTITION BY region ORDER BY year) - capacity) * 100 FROM landfill_capacity WHERE region = 'Europe';"}
{"input": " \uc2e0\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubd84\uc57c\uc5d0\uc11c \uac01 \ud22c\uc790\uc790\uac00 \uc9c0\uc6d0\ud558\ub294 \uae30\uad00\uc740 \uba87 \uac1c\uc774\uba70, \ucd1d \ud22c\uc790\uae08\uc561\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE investments (investment_id INT, investor_id INT, org_id INT, investment_amount INT); INSERT INTO investments (investment_id, investor_id, org_id, investment_amount) VALUES (1, 1, 6, 55000), (2, 2, 7, 65000), (3, 1, 5, 90000), (4, 3, 6, 70000), (5, 2, 5, 85000); CREATE TABLE investors (investor_id INT, investor_name TEXT); INSERT INTO investors (investor_id, investor_name) VALUES (1, 'Investor G'), (2, 'Investor H'), (3, 'Investor I'); CREATE TABLE organizations (org_id INT, org_name TEXT, focus_topic TEXT); INSERT INTO organizations (org_id, org_name, focus_topic) VALUES (5, 'Org 5', 'Renewable Energy'), (6, 'Org 6', 'Renewable Energy'), (7, 'Org 7', 'Healthcare');", "output": "SELECT investors.investor_name, COUNT(organizations.org_id) AS orgs_supported, SUM(investments.investment_amount) AS total_invested FROM investments JOIN investors ON investments.investor_id = investors.investor_id JOIN organizations ON investments.org_id = organizations.org_id WHERE organizations.focus_topic = 'Renewable Energy' GROUP BY investors.investor_name;"}
{"input": " 2021\ub144 \uac1c\uc218 \uae30\uc900 \uc0c1\uc704 3\uac1c \uc704\ud611 \uce74\ud14c\uace0\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ThreatCategories (EntryID INT, Category VARCHAR(255), Year INT); INSERT INTO ThreatCategories (EntryID, Category, Year) VALUES (3, 'Ransomware', 2021); INSERT INTO ThreatCategories (EntryID, Category, Year) VALUES (4, 'Scanning', 2021);", "output": "SELECT Category, COUNT(*) AS Count FROM ThreatCategories WHERE Year = 2021 GROUP BY Category ORDER BY Count DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ub2ec \uad6d\uac00\ubcc4 \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, name VARCHAR(100), country VARCHAR(100), last_login DATE); INSERT INTO users (id, name, country, last_login) VALUES (1, 'John Doe', 'USA', '2022-02-15'), (2, 'Jane Smith', 'USA', '2022-03-15'), (3, 'Alex Brown', 'Canada', '2022-03-16');", "output": "SELECT country, COUNT(DISTINCT id) as active_users FROM users WHERE last_login >= (CURRENT_DATE - INTERVAL '1 month') GROUP BY country;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc9c4\ud589\ub418\uace0 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists genetics; USE genetics; CREATE TABLE if not exists research_status (id INT, project_id INT, status VARCHAR(255)); INSERT INTO research_status (id, project_id, status) VALUES (1, 1, 'Ongoing'), (2, 2, 'Completed'), (3, 3, 'On Hold');", "output": "SELECT COUNT(*) FROM genetics.research_status WHERE project_id IN (SELECT id FROM genetics.research_projects WHERE country = 'Canada') AND status = 'Ongoing';"}
{"input": " \uc8fc\ub9d0\uc5d0 \uac01 \uc804\uc2dc\ud68c\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc29\ubb38\uac1d\uc774 \ucc38\uc11d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE days (day_id INT, day_name VARCHAR(10), is_weekend BOOLEAN); INSERT INTO days (day_id, day_name, is_weekend) VALUES (1, 'Monday', false), (2, 'Tuesday', false), (3, 'Wednesday', false), (4, 'Thursday', false), (5, 'Friday', false), (6, 'Saturday', true), (7, 'Sunday', true); CREATE TABLE visit_days (visit_day_id INT, visit_id INT, day_id INT); INSERT INTO visit_days (visit_day_id, visit_id, day_id) VALUES (1, 1, 6), (2, 1, 7), (3, 2, 6), (4, 3, 6);", "output": "SELECT e.exhibition_name, COUNT(DISTINCT v.visitor_id) FROM exhibitions e JOIN visits v ON e.exhibition_id = v.exhibition_id JOIN visit_days vd ON v.visit_id = vd.visit_id JOIN days d ON vd.day_id = d.day_id WHERE d.is_weekend = true GROUP BY e.exhibition_name;"}
{"input": " \uc720\ub7fd \uc9c0\uc5ed\uc5d0\uc11c \uc0dd\uc0b0\ub418\uace0 \uc601\ud5a5 \uc810\uc218\uac00 55\ubcf4\ub2e4 \ud070 \ud654\ud559 \ubb3c\uc9c8\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_production (region VARCHAR(20), chemical VARCHAR(30), quantity INT); INSERT INTO chemical_production (region, chemical, quantity) VALUES ('Europe', 'Isobutanol', 3000), ('Europe', 'Methanol', 6000); CREATE TABLE environmental_impact (chemical VARCHAR(30), impact_score INT); INSERT INTO environmental_impact (chemical, impact_score) VALUES ('Isobutanol', 58), ('Methanol', 65);", "output": "SELECT chemical FROM chemical_production WHERE region = 'Europe' INTERSECT SELECT chemical FROM environmental_impact WHERE impact_score > 55;"}
{"input": " \uac01 \ud68c\uc6d0\uc758 \uc77c\ubcc4 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE heart_rates (heart_rate_id INT, member_id INT, heart_rate INT, heart_rate_date DATE); INSERT INTO heart_rates (heart_rate_id, member_id, heart_rate, heart_rate_date) VALUES (1, 1, 80, '2022-01-01'), (2, 1, 85, '2022-01-02'), (3, 2, 90, '2022-01-01');", "output": "SELECT member_id, DATE_FORMAT(heart_rate_date, '%Y-%m-%d') as date, AVG(heart_rate) as avg_heart_rate FROM heart_rates GROUP BY member_id, date ORDER BY date;"}
{"input": "\ubbf8\uad6d \uace0\uac1d\uc5d0 \ub300\ud574 \uc0ac\uae30\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc740 \uac70\ub798 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Transactions (TransactionID INT, CustomerID INT, Amount DECIMAL(10,2), TransactionDate DATE); INSERT INTO Transactions (TransactionID, CustomerID, Amount, TransactionDate) VALUES (1, 1, 100.00, '2022-02-01'); INSERT INTO Transactions (TransactionID, CustomerID, Amount, TransactionDate) VALUES (2, 1, 200.00, '2022-02-02'); INSERT INTO Transactions (TransactionID, CustomerID, Amount, TransactionDate) VALUES (3, 2, 50.00, '2022-02-01'); INSERT INTO Transactions (TransactionID, CustomerID, Amount, TransactionDate) VALUES (4, 2, 150.00, '2022-02-03'); CREATE TABLE Fraud (FraudID INT, TransactionID INT, IsFraud BIT, CustomerID INT); INSERT INTO Fraud (FraudID, TransactionID, IsFraud, CustomerID) VALUES (1, 1, 0, 1); INSERT INTO Fraud (FraudID, TransactionID, IsFraud, CustomerID) VALUES (2, 2, 1, 1); INSERT INTO Fraud (FraudID, TransactionID, IsFraud, CustomerID) VALUES (3, 3, 0, 2); INSERT INTO Fraud (FraudID, TransactionID, IsFraud, CustomerID) VALUES (4, 4, 0, 2); INSERT INTO Customers (CustomerID, FirstName, LastName, Age, Country) VALUES (1, 'Sanaa', 'Ali', 32, 'United States'); INSERT INTO Customers (CustomerID, FirstName, LastName, Age, Country) VALUES (2, 'Javier', 'Gonzalez', 47, 'Mexico');", "output": "SELECT COUNT(*) FROM Transactions T INNER JOIN Fraud F ON T.TransactionID = F.TransactionID INNER JOIN Customers C ON T.CustomerID = C.CustomerID WHERE F.IsFraud = 0 AND C.Country = 'United States';"}
{"input": " \ud574\ub2f9 \uacc4\uc815 \uc720\ud615\uc5d0 \ub300\ud574 \uacc4\uc815 \uc794\uc561\uc774 75\ubc88\uc9f8 \ubc31\ubd84\uc704\uc218\ubcf4\ub2e4 \ud070 \uace0\uac1d \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2));", "output": "SELECT COUNT(DISTINCT customer_id) FROM accounts WHERE balance > PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY balance) OVER (PARTITION BY account_type);"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc548\uc804 \uc704\ubc18\uc744 \ubc1b\uc740 \uc81c\ud488\uc740 \ubb34\uc5c7\uc774\uba70, \ud574\ub2f9 \uc131\ubd84\uc758 \ucd9c\ucc98 \uc815\ubcf4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_name TEXT); CREATE TABLE safety_records (record_id INT, product_id INT, violation_date DATE); CREATE TABLE ingredient_sources (ingredient_id INT, product_id INT, source_country TEXT);", "output": "SELECT products.product_name, safety_records.record_id, safety_records.violation_date, ingredient_sources.ingredient_id, ingredient_sources.source_country FROM products INNER JOIN safety_records ON products.product_id = safety_records.product_id INNER JOIN ingredient_sources ON products.product_id = ingredient_sources.product_id WHERE safety_records.violation_date >= NOW() - INTERVAL '1 year';"}
{"input": " \uac01 \uc9c0\uad6c\uc5d0\uc11c \uba87 \uac1c\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud65c\ub3d9\uc774 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE community_policing (id INT, district_id INT, initiative_name VARCHAR(255)); INSERT INTO community_policing (id, district_id, initiative_name) VALUES (1, 1, 'Neighborhood Watch'), (2, 2, 'Bike Patrol'), (3, 3, 'Foot Patrol');", "output": "SELECT district_id, COUNT(*) as initiatives_per_district FROM community_policing GROUP BY district_id;"}
{"input": " \ubaa8\ub4e0 \uc74c\uc545 \ud398\uc2a4\ud2f0\ubc8c\uacfc \ud398\uc2a4\ud2f0\ubc8c\uc5d0\uc11c \uacf5\uc5f0\ud558\ub294 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc0ac\uc6a9\uc790\ub2f9 \ud3c9\uade0 \uc2a4\ud2b8\ub9bc \uc218\ub97c \uc544\ud2f0\uc2a4\ud2b8 \uc218 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE festival_artist_streams (festival_id INT, artist_id INT, stream_id INT); INSERT INTO festival_artist_streams (festival_id, artist_id, stream_id) VALUES (1, 1, 1), (1, 1, 2), (2, 2, 3);", "output": "SELECT f.festival_name, AVG(s.stream_id / u.user_count) AS avg_streams_per_user FROM festivals f INNER JOIN festival_artist_streams s ON f.festival_id = s.festival_id INNER JOIN artists a ON s.artist_id = a.artist_id INNER JOIN streams stream ON s.stream_id = stream.stream_id INNER JOIN users u ON stream.user_id = u.user_id GROUP BY f.festival_name ORDER BY COUNT(DISTINCT a.artist_id) DESC;"}
{"input": " \ub450 \uac1c \uc774\uc0c1\uc758 \uad6d\uac00\uac00 \uad00\ub828\ub41c \ubaa8\ub4e0 \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE peacekeeping_operations (id INT, operation_name VARCHAR(255), country VARCHAR(255)); INSERT INTO peacekeeping_operations (id, operation_name, country) VALUES (1, 'Operation One', 'France'), (2, 'Operation Two', 'Germany'), (3, 'Operation Three', 'France'), (4, 'Operation Four', 'Germany'), (5, 'Operation Five', 'Spain');", "output": "SELECT operation_name FROM peacekeeping_operations WHERE country IN ( SELECT country FROM peacekeeping_operations GROUP BY country HAVING COUNT(DISTINCT country) > 1 );"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uc2ec\uac01\ud55c \ucde8\uc57d\uc810 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uac01 \uad6d\uac00\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, date DATE, severity VARCHAR(10), ip VARCHAR(15), country VARCHAR(30)); INSERT INTO vulnerabilities (id, date, severity, ip, country) VALUES (1, '2021-01-01', 'critical', '192.168.1.100', 'Brazil');", "output": "SELECT country, RANK() OVER (ORDER BY critical_vulnerability_count DESC) as country_rank FROM (SELECT country, COUNT(*) as critical_vulnerability_count FROM vulnerabilities WHERE severity = 'critical' AND date >= (CURRENT_DATE - INTERVAL '60' DAY) GROUP BY country) as subquery;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub85c \ub9cc\ub4e0 \uac00\uc7a5 \ube44\uc2fc \uc0c1\uc704 5\uac1c \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id int, material varchar(20), price decimal(5,2)); INSERT INTO products (product_id, material, price) VALUES (1, 'organic cotton', 25.99), (2, 'recycled polyester', 19.99), (3, 'organic cotton', 34.99), (4, 'sustainable silk', 79.99), (5, 'recycled cotton', 39.99), (6, 'recycled polyester', 49.99);", "output": "SELECT AVG(price) FROM (SELECT price FROM products WHERE material in ('organic cotton', 'recycled polyester', 'sustainable silk') ORDER BY price DESC LIMIT 5) tmp;"}
{"input": " \uc544\uc2dc\uc544 \ub2e8\uc77c \uae30\ud6c4 \uc7ac\uc815 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance_projects (project_id INT, project_name VARCHAR(255), location VARCHAR(255), budget DECIMAL(10,2)); INSERT INTO climate_finance_projects (project_id, project_name, location, budget) VALUES (1, 'Renewable Energy in India', 'India', 2000000.00), (2, 'Energy Efficiency in China', 'China', 3000000.00), (3, 'Climate Resilience in Indonesia', 'Indonesia', 1000000.00);", "output": "SELECT MIN(budget) FROM climate_finance_projects WHERE location = 'Asia';"}
{"input": " Route_id\uac00 3\uc774\uace0 vehicle_id\uac00 5\uc778 \uc774\ub3d9\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE trip (id INT PRIMARY KEY, start_time TIMESTAMP, end_time TIMESTAMP, route_id INT, vehicle_id INT, FOREIGN KEY (route_id) REFERENCES route(id), FOREIGN KEY (vehicle_id) REFERENCES vehicle(id)); INSERT INTO trip (id, start_time, end_time, route_id, vehicle_id) VALUES (1, '2022-01-01 08:00:00', '2022-01-01 09:00:00', 1, 1);", "output": "WITH cte_trip AS (DELETE FROM trip WHERE route_id = 3 AND vehicle_id = 5 RETURNING id, start_time, end_time, route_id, vehicle_id) INSERT INTO trip_history SELECT * FROM cte_trip;"}
{"input": " '\uac10\uc790\ud280\uae40'\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4e0 \ub808\uc2a4\ud1a0\ub791\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menus (id INT, restaurant_id INT, item_name TEXT); INSERT INTO menus (id, restaurant_id, item_name) VALUES (1, 1, 'Burger'), (2, 1, 'Fries'), (3, 2, 'Salad'), (4, 3, 'Pizza');", "output": "SELECT restaurant_name FROM restaurants WHERE id NOT IN (SELECT restaurant_id FROM menus WHERE item_name = 'Fries');"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud64d\ucf69\ud56d\uc5d0\uc11c \uc624\uc138\uc544\ub2c8\uc544\ub85c \uc6b4\uc1a1\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ucd5c\uc18c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name TEXT, location TEXT); INSERT INTO ports (id, name, location) VALUES (1, 'Port of Hong Kong', 'Hong Kong'); CREATE TABLE shipments (id INT, container_weight FLOAT, departure_port_id INT, arrival_region TEXT, shipment_date DATE); INSERT INTO shipments (id, container_weight, departure_port_id, arrival_region, shipment_date) VALUES (1, 15000.0, 1, 'Oceania', '2022-02-04');", "output": "SELECT MIN(container_weight) FROM shipments WHERE departure_port_id = (SELECT id FROM ports WHERE name = 'Port of Hong Kong') AND arrival_region = 'Oceania' AND shipment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": " \ud3c9\uade0 \ubcf4\uc870\uae08 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ubd80\uc11c\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE grant_applications (id INT, department VARCHAR(50), amount DECIMAL(10,2));", "output": "SELECT department, AVG(amount) AS avg_grant_amount FROM grant_applications GROUP BY department ORDER BY avg_grant_amount DESC LIMIT 1;"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uacf5\uacf5 \ubc0f \ubbfc\uac04 \ubd80\ubb38 \ubaa8\ub450\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc758 \uc218\ub97c \uacc4\uc0b0\ud558\uace0 \uc774\ub7ec\ud55c \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE climate_mitigation_funding (year INT, project VARCHAR(20), sector VARCHAR(10), budget FLOAT); INSERT INTO climate_mitigation_funding (year, project, sector, budget) VALUES (2018, 'Project1', 'Public', 7000000), (2018, 'Project1', 'Private', 3000000), (2019, 'Project2', 'Public', 8000000), (2019, 'Project2', 'Private', 2000000), (2020, 'Project3', 'Public', 9000000), (2020, 'Project3', 'Private', 1000000);", "output": "SELECT COUNT(DISTINCT project) AS num_projects, SUM(budget) AS total_budget FROM climate_mitigation_funding WHERE year BETWEEN 2018 AND 2020 AND sector IN ('Public', 'Private') GROUP BY project HAVING COUNT(DISTINCT sector) = 2;"}
{"input": " \uc9c0\ub09c \ub2ec Uniswap\uc5d0\uc11c \uac70\ub798\ub41c ETH\uc758 \ucd1d \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE uniswap_trades (trade_id INT, trader_address VARCHAR(42), token_address VARCHAR(42), amount_0 DECIMAL(20,10), amount_1 DECIMAL(20,10), timestamp TIMESTAMP); INSERT INTO uniswap_trades (trade_id, trader_address, token_address, amount_0, amount_1, timestamp) VALUES (1, '0x2f318C334780961FB63d94b0582aDF860277B76f', '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 1000, 5000, '2022-01-01 10:00:00'); -- (...) CREATE TABLE tokens (token_address VARCHAR(42), symbol VARCHAR(10)); INSERT INTO tokens (token_address, symbol) VALUES ('0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 'WETH'); -- (...)", "output": "SELECT SUM(amount_0) FROM uniswap_trades WHERE token_address = (SELECT token_address FROM tokens WHERE symbol = 'WETH') AND timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH);"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \uc804\ubb38 \uc9c0\uc2dd\uc744 \uac16\ucd98 \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INTEGER, name TEXT, age INTEGER, expertise TEXT); INSERT INTO volunteers (volunteer_id, name, age, expertise) VALUES (1, 'Alice', 25, 'Medical'), (2, 'Bob', 30, 'Engineering'), (3, 'Charlie', 35, 'Medical');", "output": "SELECT AVG(v.age) FROM volunteers v WHERE v.expertise = 'Engineering';"}
{"input": " 2020\ub144 \uc624\uc5fc\ubb3c\uc9c8 \uc218\uc900\uc774 \uc99d\uac00\ud558\ub294 \uc9c0\uc5ed\uc5d0\uc11c \uc2dc\ud589\ub418\ub294 \ubb3c \uc808\uc57d \uacc4\ud68d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_quality (region VARCHAR(255), year INT, contaminant_level INT); INSERT INTO water_quality (region, year, contaminant_level) VALUES ('North', 2019, 12), ('North', 2020, 15), ('South', 2019, 18), ('South', 2020, 20); CREATE TABLE conservation_initiatives (region VARCHAR(255), year INT, initiative VARCHAR(255)); INSERT INTO conservation_initiatives (region, year, initiative) VALUES ('North', 2019, 'Greywater reuse'), ('North', 2020, 'Smart toilets'), ('South', 2019, 'Smart irrigation'), ('South', 2020, 'Green roofs');", "output": "SELECT c.initiative FROM conservation_initiatives c JOIN water_quality w ON c.region = w.region WHERE c.year = w.year AND w.contaminant_level > (SELECT contaminant_level FROM water_quality WHERE region = w.region AND year = w.year - 1);"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed \uc120\ubc15\uc758 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cargo_data (id INT, vessel_name TEXT, cargo_weight INT, region TEXT, loading_date DATE);", "output": "SELECT AVG(cargo_weight) FROM cargo_data WHERE region = 'Arctic' AND loading_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"input": " \uc544\uba54\ub9ac\uce74 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc5d0\uc11c \ub178\ucd9c \uce58\ub8cc\ub97c \ubc1b\uc740 PTSD \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, age INT, gender VARCHAR(10), condition VARCHAR(255), ethnicity VARCHAR(255)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE, approach_id INT); CREATE TABLE therapy_approaches (approach_id INT, name VARCHAR(255)); CREATE TABLE communities (community_id INT, name VARCHAR(255), type VARCHAR(255));", "output": "SELECT AVG(patients.age) FROM patients JOIN therapy_sessions ON patients.patient_id = therapy_sessions.patient_id JOIN therapy_approaches ON therapy_sessions.approach_id = therapy_approaches.approach_id JOIN communities ON patients.community_id = communities.community_id WHERE patients.condition = 'PTSD' AND therapy_approaches.name = 'exposure therapy' AND communities.type = 'Native American';"}
{"input": " 2020\ub144 \ub274\uc695\uc2dc\uc758 \uc6d4\ubcc4 \uae34\uae09 \uc804\ud654 \uac74\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE emergency_calls (id INT, city VARCHAR(50), call_date DATE); INSERT INTO emergency_calls (id, city, call_date) VALUES (1, 'New York', '2020-01-01'); INSERT INTO emergency_calls (id, city, call_date) VALUES (2, 'New York', '2020-02-01');", "output": "SELECT MONTH(call_date) AS month, COUNT(*) AS calls FROM emergency_calls WHERE city = 'New York' AND YEAR(call_date) = 2020 GROUP BY month;"}
{"input": " INTERSECT\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac01 \uac8c\uc784 \uc7a5\ub974\uc758 \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE PlayerCount (GameID int, GameName varchar(100), Genre varchar(50), PlayerCount int); INSERT INTO PlayerCount VALUES (5, 'GameE', 'RPG', 130000), (6, 'GameF', 'Action', 140000), (7, 'GameG', 'Simulation', 120000);", "output": "SELECT Genre, SUM(PlayerCount) as TotalPlayers FROM PlayerCount WHERE GameID IN (SELECT GameID FROM GameSales) GROUP BY Genre;"}
{"input": " \uc778\ub3c4\uc5d0\uc11c \ubc30\uc1a1\ub418\uace0 \ud0dd\ubc30\uc0ac\ubcc4\ub85c \uad6c\ubd84\ub418\uba70 \uac00\uc7a5 \ub192\uc740 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04 \uae30\uc900\uc73c\ub85c \uc8fc\ubb38\ub41c \uc8fc\ubb38\uc758 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_shipments AS SELECT order_id, 'India' as country, courier_id, delivery_time FROM orders WHERE shipping_address LIKE ' India%';", "output": "SELECT country, courier_id, AVG(delivery_time) as avg_delivery_time FROM warehouse_shipments GROUP BY country, courier_id ORDER BY avg_delivery_time DESC;"}
{"input": " \uac01 \uc790\uce58\uad6c\uc758 \ucd1d \uae34\uae09 \uc0ac\uac74 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE borough (id INT, name VARCHAR(50)); INSERT INTO borough (id, name) VALUES (1, 'Manhattan'), (2, 'Brooklyn'), (3, 'Queens'), (4, 'Bronx'), (5, 'Staten Island'); CREATE TABLE incident (id INT, borough_id INT, type VARCHAR(50), timestamp TIMESTAMP);", "output": "SELECT borough_id, COUNT(*) as total_incidents FROM incident GROUP BY borough_id;"}
{"input": " \uc2ec\ud574 \ud0d0\uc0ac \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uad00\uce21\uc18c\uc758 \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DeepOceanExploration (id INT, name TEXT, latitude REAL, longitude REAL, depth REAL); INSERT INTO DeepOceanExploration (id, name, latitude, longitude, depth) VALUES (1, 'Station 1', 15.4948, -61.3704, 6000); INSERT INTO DeepOceanExploration (id, name, latitude, longitude, depth) VALUES (2, 'Station 2', 44.6419, -63.5742, 5500);", "output": "SELECT MIN(depth) FROM DeepOceanExploration;"}
{"input": " \ub3c5\uc77c \ud640\ubbb4\uc758 \ucd5c\ub300 \uc2dc\uc7a5 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Holmium_Market_Prices (id INT, year INT, country VARCHAR(20), market_price DECIMAL(10,2));", "output": "SELECT MAX(market_price) FROM Holmium_Market_Prices WHERE country = 'Germany';"}
{"input": " \ub9e4\uc6d4 \uac74\uc124\ub418\ub294 \ub179\uc0c9\uac74\ucd95\ubb3c\uc5d0 \ub300\ud55c \uc5f0\uac04 \ucd1d \uc5d0\ub108\uc9c0 \uc808\uac10\uc561\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE month (id INT, month TEXT);", "output": "SELECT month.month, SUM(green_buildings.annual_energy_savings_kWh) FROM green_buildings JOIN green_buildings_timeline ON green_buildings.id = green_buildings_timeline.building_id JOIN month ON MONTH(green_buildings_timeline.start_date) = month.id GROUP BY month.month;"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \uac00\uc7a5 \ud754\ud788 \uc800\uc9c0\ub974\ub294 \ubc94\uc8c4 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public.crime_types (id SERIAL PRIMARY KEY, state VARCHAR(255), crime_type VARCHAR(255), count INTEGER); INSERT INTO public.crime_types (state, crime_type, count) VALUES ('Texas', 'Theft', 2000), ('Texas', 'Assault', 1500), ('Texas', 'Theft', 2500);", "output": "SELECT crime_type FROM public.crime_types WHERE state = 'Texas' GROUP BY crime_type ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " ESA\uc640 ISRO\uac00 \uc218\uac70\ud55c \uc6b0\uc8fc \uc4f0\ub808\uae30\uc758 \ucd1d \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_debris (id INT, name VARCHAR(255), collection_date DATE, collecting_agency VARCHAR(255), mass FLOAT); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (1, 'RemoveDEBRIS', '2018-04-16', 'ESA', 220.0); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (2, 'RAMA', '2024-09-27', 'ISRO', 550.5); CREATE VIEW space_debris_esa AS SELECT * FROM space_debris WHERE collecting_agency = 'ESA'; CREATE VIEW space_debris_isro AS SELECT * FROM space_debris WHERE collecting_agency = 'ISRO';", "output": "SELECT SUM(s.mass) as total_mass FROM space_debris s INNER JOIN space_debris_esa e ON s.id = e.id INNER JOIN space_debris_isro i ON s.id = i.id;"}
{"input": " \uc624\uc5fc \uc218\uc900\uc774 \uad8c\uc7a5 \uae30\uc900\uce58\ubcf4\ub2e4 \ub0ae\uc740 \ud574\uc591 \uc0dd\ubb3c \uc5f0\uad6c \ub370\uc774\ud130\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA oceans;CREATE TABLE oceans.marine_life_data (id INT PRIMARY KEY, species VARCHAR(50), pollution_level INT); INSERT INTO oceans.marine_life_data (id, species, pollution_level) VALUES (1, 'Tuna', 10), (2, 'Salmon', 5);", "output": "SELECT context.species, context.pollution_level FROM oceans.marine_life_data AS context WHERE context.pollution_level < 15;"}
{"input": " '\uacbd\uc804\ucca0' \uc131\uc778 \uc2b9\uac1d\uc758 \ud3c9\uade0 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public.route_type (route_type_id SERIAL PRIMARY KEY, route_type VARCHAR(20)); INSERT INTO public.route_type (route_type) VALUES ('bus'), ('lightrail'), ('subway'); CREATE TABLE public.fares (fare_id SERIAL PRIMARY KEY, passenger_type VARCHAR(20), fare DECIMAL(5,2)), route_type_id INTEGER, FOREIGN KEY (route_type_id) REFERENCES public.route_type(route_type_id)); INSERT INTO public.fares (passenger_type, fare, route_type_id) VALUES ('adult', 2.50, 2), ('child', 1.25, 2);", "output": "SELECT fare FROM public.fares WHERE passenger_type = 'adult' AND route_type_id = (SELECT route_type_id FROM public.route_type WHERE route_type = 'lightrail')"}
{"input": " \uc774\ub2c8\uc154\ud2f0\ube0c_\uc720\ud615\uc774 '\ud1f4\ube44\ud654'\uc778 Circular_economy_initiatives\uc5d0\uc11c \ub808\ucf54\ub4dc \uc0ad\uc81c", "context": "CREATE TABLE circular_economy_initiatives (id INT, initiative_type VARCHAR(20), start_year INT, end_year INT);", "output": "WITH data_to_delete AS (DELETE FROM circular_economy_initiatives WHERE initiative_type = 'Composting' RETURNING *) DELETE FROM circular_economy_initiatives WHERE id IN (SELECT id FROM data_to_delete);"}
{"input": "\uc5ec\uc131 \ub610\ub294 \ub17c\ubc14\uc774\ub108\ub9ac\ub85c \uc2dd\ubcc4\ub418\uace0 IT \ub610\ub294 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd84\uc57c\uc5d0\uc11c \uadfc\ubb34\ud558\ub294 \uc9c1\uc6d0\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeDemographics (EmployeeID INT, GenderIdentity VARCHAR(20), Department VARCHAR(20)); INSERT INTO EmployeeDemographics (EmployeeID, GenderIdentity, Department) VALUES (1, 'Female', 'IT'), (2, 'Non-binary', 'Engineering'), (3, 'Male', 'Marketing');", "output": "SELECT COUNT(*) FROM EmployeeDemographics WHERE (GenderIdentity = 'Female' OR GenderIdentity = 'Non-binary') AND (Department = 'IT' OR Department = 'Engineering');"}
{"input": " '\uc544\ud504\ub9ac\uce74'\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uba78\uc885\uc704\uae30\uc885\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE species (name VARCHAR(255), region VARCHAR(255), endangered BOOLEAN); INSERT INTO species (name, region, endangered) VALUES ('lion', 'africa', TRUE); INSERT INTO species (name, region, endangered) VALUES ('giraffe', 'africa', FALSE);", "output": "SELECT COUNT(*) FROM species WHERE region = 'africa' AND endangered = TRUE;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc640 3\ubd84\uae30\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\ub098\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, SignUpDate DATE); INSERT INTO Volunteers (VolunteerID, VolunteerName, SignUpDate) VALUES (1, 'Alice', '2022-01-05'), (2, 'Bob', '2022-04-10');", "output": "SELECT COUNT(*) as Q1, 'Q1' as Quarter FROM Volunteers WHERE QUARTER(SignUpDate) = 1 UNION ALL SELECT COUNT(*) as Q3, 'Q3' as Quarter FROM Volunteers WHERE QUARTER(SignUpDate) = 3;"}
{"input": " \ud48d\ub825 \ud130\ube48 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud558\ub294 \uac01 \uc791\uc5c5\uc790\uc758 \ucd1d \ub178\ub3d9 \uc2dc\uac04\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE labor (id INT, project_id INT, worker_name VARCHAR(50), hours FLOAT); INSERT INTO labor (id, project_id, worker_name, hours) VALUES (5, 4, 'Ali', 120);", "output": "SELECT worker_name, SUM(hours) FROM labor WHERE project_id = 4 GROUP BY worker_name;"}
{"input": " \uc804\uc790\uc0c1\uac70\ub798 \uc5c5\uacc4\uc5d0\uc11c \ucd5c\uc18c 50%\uac00 \uc5ec\uc131\uc73c\ub85c \uad6c\uc131\ub41c \ud300\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc758 \ud3c9\uade0 \uc790\uae08 \uc870\ub2ec \uae08\uc561\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_date DATE, founder_gender TEXT, founder_count INT);CREATE TABLE funds (id INT, company_id INT, amount INT, funding_round TEXT);CREATE TABLE company_funds (company_id INT, fund_id INT);", "output": "SELECT AVG(funds.amount) FROM funds INNER JOIN company_funds ON funds.id = company_funds.fund_id INNER JOIN companies ON company_funds.company_id = companies.id WHERE companies.industry = 'e-commerce' GROUP BY companies.id HAVING SUM(CASE WHEN companies.founder_gender = 'woman' THEN companies.founder_count ELSE 0 END) / SUM(companies.founder_count) >= 0.5;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc5ed\uc5d0\uc11c \ubc84\uc2a4\uac00 \ud55c \uc5ed\uc5d0\uc11c \uac00\uc7a5 \uc774\ub978 \uc2dc\uac04\uacfc \uac00\uc7a5 \ub2a6\uc740 \uc2dc\uac04\uc5d0 \ucd9c\ubc1c\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE bus_stations (id INT, station_id INT, departure_time TIME); INSERT INTO bus_stations (id, station_id, departure_time) VALUES (1, 1, '07:00:00'), (2, 2, '08:00:00'), (3, 1, '18:00:00');", "output": "SELECT MIN(departure_time) as earliest_time, MAX(departure_time) as latest_time, station_id FROM bus_stations WHERE departure_time >= DATEADD(day, -30, GETDATE()) GROUP BY station_id;"}
{"input": " 2022\ub144\uc5d0 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, Budget FLOAT); INSERT INTO Programs (ProgramID, ProgramName, Budget) VALUES (1, 'Feeding Program', 5000.00), (2, 'Education Support', 8000.00);", "output": "SELECT ProgramName, SUM(Budget) FROM Programs WHERE YEAR(BudgetDate) = 2022 GROUP BY ProgramName;"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \ud574\uc0c1\uc548\uc804\uc0ac\uace0\uac00 \ubc1c\uc0dd\ud55c \uc120\ubc15\uc740 \uba87 \ucc99\uc774\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE maritime_safety_incidents (region text, vessel_id integer); INSERT INTO maritime_safety_incidents (region, vessel_id) VALUES ('North Atlantic', 123), ('North Pacific', 456), ('Mediterranean', 789);", "output": "SELECT region, COUNT(vessel_id) FROM maritime_safety_incidents GROUP BY region;"}
{"input": " ProgramB\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc774\uba70, \ucd1d \uc608\uc0b0\uc5d0\uc11c \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (Program varchar(50), Allocation numeric(10,2)); INSERT INTO Budget (Program, Allocation) VALUES ('ProgramA', 5000.00), ('ProgramB', 3000.00);", "output": "SELECT Program, Allocation, (Allocation / SUM(Allocation) OVER ()) * 100 AS BudgetPercentage FROM Budget WHERE Program = 'ProgramB';"}
{"input": " 'H' \uae30\ud638\uac00 \uc788\ub294 \uc694\uc18c\uc758 \ud3c9\uade0 \ub300\uae30 \uc624\uc5fc\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE elements_producers (element_id INT, producer_id INT, PRIMARY KEY (element_id, producer_id)); CREATE TABLE producers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), air_pollution INT); CREATE TABLE elements (id INT PRIMARY KEY, name VARCHAR(255), symbol VARCHAR(3), weight FLOAT, element_id INT, FOREIGN KEY (element_id) REFERENCES elements_producers(element_id));", "output": "SELECT AVG(p.air_pollution) FROM elements AS e JOIN elements_producers AS ep ON e.id = ep.element_id JOIN producers AS p ON ep.producer_id = p.id WHERE e.symbol LIKE 'H%';"}
{"input": " \uad6d\uac00\ubcc4 \ud3c9\uade0 \ubc29\ubb38 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE if not exists countries (country_id int, country_name varchar(50)); INSERT INTO countries (country_id, country_name) VALUES (1, 'USA'), (2, 'UK'), (3, 'Canada'); CREATE TABLE if not exists destinations (destination_id int, destination_name varchar(50), country_id int); INSERT INTO destinations (destination_id, destination_name, country_id) VALUES (1, 'Seattle', 1), (2, 'Portland', 1), (3, 'London', 2), (4, 'Vancouver', 3); CREATE TABLE if not exists visitor_stats (visitor_id int, destination_id int, visit_date date, departure_date date); INSERT INTO visitor_stats (visitor_id, destination_id, visit_date, departure_date) VALUES (1, 1, '2022-06-01', '2022-06-04'), (2, 1, '2022-06-03', '2022-06-05'), (3, 2, '2022-06-02', '2022-06-06'), (4, 3, '2022-06-04', '2022-06-08'), (5, 3, '2022-06-30', '2022-07-02'), (6, 4, '2022-07-01', '2022-07-05');", "output": "SELECT c.country_name, AVG(DATEDIFF('day', vs.visit_date, vs.departure_date)) as avg_duration FROM countries c JOIN destinations d ON c.country_id = d.country_id JOIN visitor_stats vs ON d.destination_id = vs.destination_id GROUP BY c.country_name;"}
{"input": " \uc0dd\uc131 \ub0a0\uc9dc\uac00 \uc138 \ubc88\uc9f8\ub85c \ube60\ub978 \uc544\ud2f0\ud329\ud2b8\uc758 \uc774\ub984\uacfc \uc0dd\uc131 \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artifacts (ArtifactID INT, Name VARCHAR(100), CreationDate DATETIME); INSERT INTO Artifacts (ArtifactID, Name, CreationDate) VALUES (1, 'Ancient Dagger', '1500-01-01'), (2, 'Modern Artifact', '2020-01-01'), (3, 'Bronze Age Axe', '3500-01-01'), (4, 'Iron Age Helmet', '2500-01-01');", "output": "SELECT Name, CreationDate FROM (SELECT Name, CreationDate, ROW_NUMBER() OVER (ORDER BY CreationDate) as RowNum FROM Artifacts) as ArtifactRank WHERE RowNum = 3;"}
{"input": " \uc77c\ubcf8\uc5d0\uc11c \ub179\uc0c9 \uc9c0\ubd95 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uac74\ubb3c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Building (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), sqft INT, PRIMARY KEY (id)); INSERT INTO Building (id, name, city, country, sqft) VALUES (9, 'Mount Fuji', 'Fujiyoshida', 'Japan', 3776600); INSERT INTO Building (id, name, city, country, sqft) VALUES (10, 'Himeji Castle', 'Himeji', 'Japan', 1045400); CREATE TABLE GreenRoof (id INT, building_id INT, planted_date DATE, size INT, PRIMARY KEY (id), FOREIGN KEY (building_id) REFERENCES Building (id)); INSERT INTO GreenRoof (id, building_id, planted_date, size) VALUES (9, 9, '2018-02-01', 400000); INSERT INTO GreenRoof (id, building_id, planted_date, size) VALUES (10, 10, '2015-06-01', 250000); CREATE TABLE Roof (id INT, building_id INT, size INT, PRIMARY KEY (id), FOREIGN KEY (building_id) REFERENCES Building (id)); INSERT INTO Roof (id, building_id, size) VALUES (9, 9, 800000); INSERT INTO Roof (id, building_id, size) VALUES (10, 10, 500000);", "output": "SELECT b.name, (g.size/r.size)*100 as '% of Green Roof' FROM GreenRoof g JOIN Building b ON g.building_id = b.id JOIN Roof r ON b.id = r.building_id ORDER BY '% of Green Roof' DESC LIMIT 1;"}
{"input": "\ub9e4\ub144 \uc2b9\uc778\ub41c \uc758\uc57d\ud488\uc5d0 \ub300\ud574 \uba87 \uac00\uc9c0 \uc2dc\uc7a5 \uc811\uadfc \uc804\ub7b5\uc774 \uc2dc\ud589\ub418\uc5c8\uc73c\uba70, \ud574\ub2f9 \uc758\uc57d\ud488\uc5d0 \ub300\ud55c \ud3c9\uade0 R&D \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE market_access_3(strategy_name TEXT, drug_name TEXT, approval_year INT, rd_expenditure FLOAT); INSERT INTO market_access_3(strategy_name, drug_name, approval_year, rd_expenditure) VALUES('Strategy1', 'Drug1', 2018, 8000000), ('Strategy2', 'Drug2', 2019, 9000000), ('Strategy3', 'Drug3', 2020, 7000000), ('Strategy4', 'Drug4', 2018, 6000000); CREATE TABLE drugs_5(drug_name TEXT, approval_year INT, rd_expenditure FLOAT); INSERT INTO drugs_5(drug_name, approval_year, rd_expenditure) VALUES('Drug1', 2018, 8000000), ('Drug2', 2019, 9000000), ('Drug3', 2020, 7000000), ('Drug4', 2018, 6000000), ('Drug5', 2019, 8500000), ('Drug6', 2020, 9500000);", "output": "SELECT approval_year, AVG(rd_expenditure) AS avg_rd_expenditure, COUNT(DISTINCT drug_name) AS strategy_count FROM market_access_3 GROUP BY approval_year;"}
{"input": " \uad11\uc0b0 \ud68c\uc0ac\uc758 \uc5ec\uc131 \ubc0f \ub17c\ubc14\uc774\ub108\ub9ac \uc9c1\uc6d0 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT, name VARCHAR(50), gender VARCHAR(50), department_id INT);  CREATE TABLE departments (id INT, name VARCHAR(50), employee_count INT);  INSERT INTO departments (id, name, employee_count) VALUES (1, 'Mining', 300), (2, 'Engineering', 200), (3, 'HR', 100);  INSERT INTO employees (id, name, gender, department_id) VALUES ('1', 'John Doe', 'Male', 1), ('2', 'Jane Smith', 'Female', 1), ('3', 'Alice Johnson', 'Female', 2), ('4', 'Bob Brown', 'Male', 2), ('5', 'Charlie Davis', 'Non-binary', 3);", "output": "SELECT COUNT(*) as total_female_and_non_binary_employees FROM employees WHERE gender IN ('Female', 'Non-binary');"}
{"input": " \uc591\uc2dd \uc5f0\uc5b4\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\uac00 400,000\ub9c8\ub9ac\ub97c \ucd08\uacfc\ud558\ub294 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FarmG (country VARCHAR(20), species VARCHAR(20), biomass FLOAT); INSERT INTO FarmG (country, species, biomass) VALUES ('Norway', 'Salmon', 450000); INSERT INTO FarmG (country, species, biomass) VALUES ('Norway', 'Trout', 120000); INSERT INTO FarmG (country, species, biomass) VALUES ('Scotland', 'Salmon', 320000); INSERT INTO FarmG (country, species, biomass) VALUES ('Scotland', 'Trout', 160000); INSERT INTO FarmG (country, species, biomass) VALUES ('Canada', 'Salmon', 200000); INSERT INTO FarmG (country, species, biomass) VALUES ('Canada', 'Trout', 260000);", "output": "SELECT country FROM FarmG WHERE species='Salmon' GROUP BY country HAVING SUM(biomass) > 400000;"}
{"input": "\uc624\ud558\uc774\uc624\uc5d0\uc11c \ucd5c\uc18c\ud55c\uc758 \uc815\uc2e0\uac74\uac15 \ud3c9\uac00 \uc0c1\ub2f4\uc744 \uc2e4\uc2dc\ud55c \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc6b0\ud3b8\ubc88\ud638\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name TEXT, zip TEXT, consultations INT); INSERT INTO community_health_workers (id, name, zip, consultations) VALUES (1, 'John Doe', '43001', 25), (2, 'Jane Smith', '44101', 15); CREATE VIEW oh_workers AS SELECT * FROM community_health_workers WHERE zip BETWEEN '43001' AND '45999';", "output": "SELECT zip FROM oh_workers WHERE consultations = (SELECT MIN(consultations) FROM oh_workers);"}
{"input": " 2021\ub144 7\uc6d4 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE water_consumption (city VARCHAR(50), consumption FLOAT, month INT, year INT); INSERT INTO water_consumption (city, consumption, month, year) VALUES ('San Francisco', 200.5, 7, 2021), ('San Francisco', 210.3, 8, 2021), ('Los Angeles', 190.2, 7, 2021);", "output": "SELECT city, consumption FROM (SELECT city, consumption, ROW_NUMBER() OVER (ORDER BY consumption DESC) rn FROM water_consumption WHERE month = 7) tmp WHERE rn <= 2;"}
{"input": " 2023\ub144 1\uc6d4 1\uc77c\uacfc 2023\ub144 12\uc6d4 31\uc77c\uc5d0 '\ud574\ube44\ud0c0\ud2b8 G'\uc5d0\uc11c \ubaa9\uaca9\ub41c \ud3ec\uc720\ub958\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Habitat (id INT, name VARCHAR(20)); INSERT INTO Habitat (id, name) VALUES (1, 'Habitat A'), (2, 'Habitat B'), (3, 'Habitat C'), (4, 'Habitat D'), (5, 'Habitat E'), (6, 'Habitat F'), (7, 'Habitat G'); CREATE TABLE Animal (id INT, name VARCHAR(20), species VARCHAR(20)); CREATE TABLE Sighting (id INT, animal_id INT, habitat_id INT, sighting_date DATE);", "output": "SELECT Animal.name FROM Animal JOIN Sighting ON Animal.id = Sighting.animal_id JOIN Habitat ON Sighting.habitat_id = Habitat.id WHERE Habitat.name = 'Habitat G' AND Animal.species LIKE '%Mammal%' AND Sighting.sighting_date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"input": " \ucc38\uc11d\uc790\uac00 500\uba85 \uc774\uc0c1\uc778 \ubb38\ud654\uc720\uc0b0 \ucd95\uc81c\uc640 \uc790\uae08 \ucd9c\ucc98\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE heritage_festivals (festival_id INT PRIMARY KEY, festival_name VARCHAR(50), festival_type VARCHAR(50), attendance INT, city VARCHAR(50)); CREATE TABLE festival_funding (funding_id INT PRIMARY KEY, source_name VARCHAR(50), amount DECIMAL(10,2), festival_id INT, FOREIGN KEY (festival_id) REFERENCES heritage_festivals(festival_id)); CREATE TABLE audience_2 (audience_id INT PRIMARY KEY, audience_name VARCHAR(50), age INT, gender VARCHAR(50), festival_id INT, FOREIGN KEY (festival_id) REFERENCES heritage_festivals(festival_id));", "output": "SELECT heritage_festivals.festival_name, heritage_festivals.attendance, festival_funding.source_name, festival_funding.amount FROM heritage_festivals INNER JOIN festival_funding ON heritage_festivals.festival_id = festival_funding.festival_id INNER JOIN audience_2 ON heritage_festivals.festival_id = audience_2.festival_id WHERE heritage_festivals.attendance > 500;"}
{"input": " '\ub098\uc774\ub85c\ube44'\ub85c \ubc30\uc1a1\ub418\ub294 \ud328\ud0a4\uc9c0\uc758 \ucd5c\uc18c \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Warehouse (id INT, name VARCHAR(20), city VARCHAR(20)); INSERT INTO Warehouse (id, name, city) VALUES (1, 'Nairobi Warehouse', 'Nairobi'); CREATE TABLE Packages (id INT, warehouse_id INT, delivery_time INT, status VARCHAR(20)); INSERT INTO Packages (id, warehouse_id, delivery_time, status) VALUES (1, 1, 5, 'shipped'), (2, 1, 7, 'shipped'), (3, 1, 6, 'processing');", "output": "SELECT MIN(delivery_time) FROM Packages WHERE warehouse_id = (SELECT id FROM Warehouse WHERE city = 'Nairobi') AND status = 'shipped';"}
{"input": " \uc0ac\uac74\uc5d0\uc11c \ud328\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \ubcc0\ud638\uc0ac\ub97c \uc778\uad6c\ud1b5\uacc4\ud559\uc801 \uc815\ubcf4\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Attorneys (AttorneyID INT, Age INT, Gender VARCHAR(10), Income FLOAT); CREATE TABLE Cases (CaseID INT, AttorneyID INT, CaseStatus VARCHAR(10));", "output": "SELECT A.AttorneyID, A.Age, A.Gender, A.Income FROM Attorneys A WHERE NOT EXISTS (SELECT 1 FROM Cases C WHERE A.AttorneyID = C.AttorneyID AND C.CaseStatus = 'Lost');"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \uacf5\uc7a5\uc758 \ub3c5\ud2b9\ud55c \uc724\ub9ac\uc801 \uc81c\uc870 \uad00\ud589\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, ethical_manufacturing BOOLEAN); INSERT INTO factories (factory_id, name, location, ethical_manufacturing) VALUES (1, 'Factory A', 'City A', true), (2, 'Factory B', 'City A', false), (3, 'Factory C', 'City B', true), (4, 'Factory D', 'City B', false), (5, 'Factory E', 'City C', true);", "output": "SELECT f.location, f.name, f.ethical_manufacturing FROM factories f WHERE (f.location, f.ethical_manufacturing) IN (SELECT f1.location, MAX(f1.ethical_manufacturing) FROM factories f1 GROUP BY f1.location);"}
{"input": " \uc758\ub958 \ud488\ubaa9\uc744 \uc0dd\uc0b0\ud558\ub294 \ub370 \uc0ac\uc6a9\ub41c '\uc544\uc2dc\uc544'\uc5d0\uc11c \uacf5\uae09\ub41c \uc9c1\ubb3c\uc758 \ucd1d \uc218\ub7c9\uc744 \uc18c\uc7ac\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Textiles (id INT, material VARCHAR(255), quantity INT, sourced_from VARCHAR(50)); INSERT INTO Textiles (id, material, quantity, sourced_from) VALUES (1, 'cotton', 500, 'Asia'), (2, 'silk', 250, 'Europe'), (3, 'wool', 300, 'UK'), (4, 'polyester', 1000, 'China');", "output": "SELECT material, SUM(quantity) FROM Textiles WHERE sourced_from = 'Asia' GROUP BY material;"}
{"input": " \ubd80\uc11c\ubcc4\ub85c \uac00\uc7a5 \ub192\uc740 \uc548\uc804 \uc704\ubc18 \uac74\uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE safety_violations (department VARCHAR(255), violation_count INT); INSERT INTO safety_violations (department, violation_count) VALUES ('Production', 15), ('Engineering', 8), ('Quality Control', 12);", "output": "SELECT department, MAX(violation_count) OVER (PARTITION BY department) AS max_violations FROM safety_violations;"}
{"input": " \uc790\uc804\uac70 \uac70\uce58\ub300\uac00 \uc788\ub294 \ubca0\ub97c\ub9b0\uc758 \ubaa8\ub4e0 \ubc84\uc2a4 \uc5ec\ud589\uc5d0 \ub300\ud55c \ucd1d \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bus_trips (trip_id INT, has_bike_rack BOOLEAN, fare DECIMAL(10,2), city VARCHAR(50)); INSERT INTO bus_trips (trip_id, has_bike_rack, fare, city) VALUES (1, true, 2.50, 'Berlin'), (2, false, 2.00, 'Berlin'), (3, true, 3.00, 'Berlin');", "output": "SELECT SUM(fare) FROM bus_trips WHERE has_bike_rack = true AND city = 'Berlin';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc5ec\uc131 \uc18c\uc720 \uae30\uc5c5\uc774 \ud310\ub9e4\ud55c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (supplier_id INT PRIMARY KEY, business_owned_by VARCHAR(255)); INSERT INTO suppliers (supplier_id, business_owned_by) VALUES (1, 'Women'); CREATE TABLE sales (transaction_id INT, supplier_id INT, product_id INT, sale_price FLOAT); INSERT INTO sales (transaction_id, supplier_id, product_id, sale_price) VALUES (1, 1, 1, 10); CREATE TABLE transactions (transaction_id INT PRIMARY KEY, quantity INT); INSERT INTO transactions (transaction_id, quantity) VALUES (1, 5);", "output": "SELECT SUM(t.quantity) FROM transactions t JOIN sales s ON t.transaction_id = s.transaction_id JOIN suppliers sup ON s.supplier_id = sup.supplier_id WHERE sup.business_owned_by = 'Women' AND sup.country = 'US';"}
{"input": "\ub3c4\ucfc4'\uc5d0 \uac70\uc8fc\ud558\ub294 \uace0\uac1d\uc758 \uacbd\uc6b0 \uae08\uc561\uc774 500\ubcf4\ub2e4 \ud070 \uac70\ub798\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE clients (id INT, name TEXT, city TEXT); CREATE TABLE transactions (client_id INT, amount DECIMAL(10,2), transaction_time TIMESTAMP); INSERT INTO clients (id, name, city) VALUES (1, 'Gina', 'Tokyo'), (2, 'Hal', 'Tokyo'); INSERT INTO transactions (client_id, amount, transaction_time) VALUES (1, 600.00, '2022-01-05 11:00:00'), (1, 400.00, '2022-02-03 16:30:00'), (2, 250.00, '2022-01-12 09:45:00'), (2, 700.00, '2022-03-01 14:00:00');", "output": "DELETE FROM transactions WHERE (client_id, amount) IN (SELECT transactions.client_id, transactions.amount FROM clients JOIN transactions ON clients.id = transactions.client_id WHERE clients.city = 'Tokyo' AND transactions.amount > 500);"}
{"input": " \ud574\uc2dc\ud0dc\uadf8 #music\uc774 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc744 \uc88b\uc544\ud558\uace0 '\uc74c\uc545' \ud398\uc774\uc9c0\uc758 \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud55c \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE users (id INT, name VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, page_name VARCHAR(255), content TEXT); CREATE TABLE likes (id INT, user_id INT, post_id INT); CREATE TABLE hashtags (id INT, post_id INT, tag VARCHAR(255));", "output": "SELECT DISTINCT users.id, users.name FROM users JOIN likes ON users.id = likes.user_id JOIN posts ON likes.post_id = posts.id JOIN hashtags ON posts.id = hashtags.post_id WHERE hashtags.tag = 'music' AND posts.page_name = 'music';"}
{"input": "e\uc2a4\ud3ec\uce20 \ud1a0\ub108\uba3c\ud2b8 \uc2dc\uccad\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE tournaments (id INT, country VARCHAR(255), viewers INT); INSERT INTO tournaments (id, country, viewers) VALUES (1, 'USA', 50000), (2, 'China', 70000), (3, 'Germany', 35000);", "output": "SELECT country, RANK() OVER (ORDER BY viewers DESC) AS rank FROM tournaments WHERE viewers > 40000;"}
{"input": "\uc2dc\uce74\uace0 \uc2dc\uc758 \uac01 \uc5d0\uc774\uc804\ud2b8\uac00 \ubc1c\ud589\ud55c \ucd1d \uc815\ucc45 \uc218\uc640 \ud574\ub2f9 \uc815\ucc45 \uc720\ud615\uc744 \ucd1d \uc815\ucc45 \uc218 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE agents (agent_id INT, name VARCHAR(50), city VARCHAR(50)); INSERT INTO agents (agent_id, name, city) VALUES (1, 'John Doe', 'Chicago'), (2, 'Jane Smith', 'New York'); CREATE TABLE policies (policy_id INT, policy_type VARCHAR(50), agent_id INT); INSERT INTO policies (policy_id, policy_type, agent_id) VALUES (1, 'Auto', 1), (2, 'Home', 1), (3, 'Auto', 2), (4, 'Life', 2);", "output": "SELECT agent_id, policy_type, COUNT(*) OVER (PARTITION BY agent_id) AS total_policies FROM policies WHERE city = 'Chicago' ORDER BY total_policies DESC;"}
{"input": " \ud45c\uc900\ud3b8\ucc28\ub97c \ud3ec\ud568\ud558\uc5ec 2020\ub144\uacfc 2021\ub144\uc758 \ud1a4\ub2f9 REE \ud3c9\uade0 \uac00\uaca9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE prices (year INT, price DECIMAL(5,2)); INSERT INTO prices (year, price) VALUES (2018, 32.5), (2018, 35.2), (2019, 37.1), (2019, 34.9), (2020, 40.5), (2020, 42.3), (2021, 44.8), (2021, 46.1);", "output": "SELECT AVG(price) AS avg_price, STDDEV(price) AS stddev_price FROM prices WHERE year IN (2020, 2021) GROUP BY year;"}
{"input": " \uac01 \uad6d\uac00\uc5d0 \uc874\uc7ac\ud558\ub294 \ubaa8\ub4e0 \uc885\uacfc \ud574\ub2f9 \uc885\ub4e4\uc774 \uc874\uc7ac\ud558\ub294 \uc232\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Forests (id INT PRIMARY KEY, name VARCHAR(255), hectares DECIMAL(5,2), country VARCHAR(255)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Greenwood', 520.00, 'Canada'); CREATE TABLE Species (id INT PRIMARY KEY, name VARCHAR(255), common_name VARCHAR(255)); INSERT INTO Species (id, name, common_name) VALUES (1, 'Quercus robur', 'English Oak'); CREATE TABLE Species_Forests (species_id INT, forest_id INT, country VARCHAR(255), PRIMARY KEY (species_id, forest_id), FOREIGN KEY (species_id) REFERENCES Species(id), FOREIGN KEY (forest_id) REFERENCES Forests(id)); INSERT INTO Species_Forests (species_id, forest_id, country) VALUES (1,1,'Canada');", "output": "SELECT Species.name as species_name, Forests.country, COUNT(Species_Forests.forest_id) as num_forests FROM Species LEFT JOIN Species_Forests ON Species.id = Species_Forests.species_id LEFT JOIN Forests ON Species_Forests.forest_id = Forests.id GROUP BY Species.name, Forests.country;"}
{"input": " \ud68c\uc0ac\uc5d0\ub294 \ub0a8\uc790 \uc9c1\uc6d0\uacfc \uc5ec\uc790 \uc9c1\uc6d0\uc774 \uba87 \uba85 \uc788\ub098\uc694?", "context": "CREATE TABLE employees (id INT, name VARCHAR(50), gender VARCHAR(10), department VARCHAR(50)); INSERT INTO employees (id, name, gender, department) VALUES (1, 'John Doe', 'Male', 'Marketing'), (2, 'Jane Smith', 'Female', 'Marketing');", "output": "SELECT gender, COUNT(*) FROM employees GROUP BY gender;"}
{"input": " \ud3c9\uade0 \ubcf4\ud5d8\ub8cc\uac00 \uac00\uc7a5 \ub192\uc740 \ubcf4\ud5d8 \uc720\ud615\uc744 \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE policy_2 (policy_id INT, policy_type VARCHAR(20), premium FLOAT); INSERT INTO policy_2 (policy_id, policy_type, premium) VALUES (1, 'Home', 1500.00), (2, 'Auto', 750.00), (3, 'Life', 1200.00), (4, 'Home', 1800.00);", "output": "SELECT policy_type, AVG(premium) AS avg_premium, RANK() OVER (ORDER BY AVG(premium) DESC) AS policy_rank FROM policy_2 GROUP BY policy_type HAVING policy_rank = 1;"}
{"input": " \ub274\uc695\uc758 \ud3ec\uad04\uc801 \uc8fc\ud0dd \uc815\ucc45\uc774 \uc801\uc6a9\ub418\ub294 \ubd80\ub3d9\uc0b0\uc758 \ud3c9\uade0 \ubd80\ub3d9\uc0b0 \uac00\uaca9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE properties_inclusive_ny (id INT, price FLOAT); INSERT INTO properties_inclusive_ny (id, price) VALUES (1, 550000), (2, 600000), (3, 650000);", "output": "SELECT AVG(price) FROM properties_inclusive_ny WHERE id IN (SELECT property_id FROM inclusive_housing WHERE city = 'New York');"}
{"input": " \ub77c\ub9c8\ub2e8 \uae30\uac04 \ub3d9\uc548 \ub09c\ubbfc \ucea0\ud504\uc5d0\uc11c \ub9e4\uc77c \uc81c\uacf5\ub418\ub294 \ud3c9\uade0 \uc2dd\uc0ac \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE meals_served (id INT PRIMARY KEY, camp VARCHAR(50), month VARCHAR(20), day INT, number INT); INSERT INTO meals_served (id, camp, month, day, number) VALUES (1, 'Camp A', 'April', 1, 1500), (2, 'Camp B', 'April', 1, 1200), (3, 'Camp A', 'April', 2, 1600), (4, 'Camp B', 'April', 2, 1400), (5, 'Camp A', 'Ramadan', 1, 1700), (6, 'Camp B', 'Ramadan', 1, 1500);", "output": "SELECT AVG(number) FROM meals_served WHERE month = 'Ramadan';"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \ubc18\ubcf5 \uae30\ubd80\uc790\uac00 \uae30\ubd80\ud558\ub294 \ucd5c\uc18c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id int, donation_amount decimal(10,2), donation_date date, country varchar(50)); INSERT INTO donors (donor_id, donation_amount, donation_date, country) VALUES (1, 150.00, '2020-01-01', 'Canada'), (1, 75.00, '2020-02-01', 'Canada'), (2, 250.00, '2020-03-01', 'Canada');", "output": "SELECT MIN(donation_amount) FROM donors WHERE country = 'Canada' GROUP BY donor_id HAVING COUNT(donor_id) > 1;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 AI \uc5f0\uad6c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uac01 \uad6d\uac00\uc758 \uc800\uc790\ub4e4\uc774 \uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131\uc5d0 \uad00\ud55c \ub17c\ubb38\uc744 \uba87 \ud3b8\uc774\ub098 \ubc1c\ud45c\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE authors (id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO authors (id, name, country) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'Canada'); CREATE TABLE papers (id INT, title VARCHAR(255), published_date DATE, author_id INT); INSERT INTO papers (id, title, published_date, author_id) VALUES (1, 'Paper1', '2021-06-01', 1), (2, 'Paper2', '2020-12-25', 2); CREATE TABLE topics (id INT, paper_id INT, title VARCHAR(255)); INSERT INTO topics (id, paper_id, title) VALUES (1, 1, 'Algorithmic Fairness'), (2, 2, 'AI Safety');", "output": "SELECT authors.country, COUNT(*) FROM papers JOIN authors ON papers.author_id = authors.id JOIN topics ON papers.id = topics.paper_id WHERE topics.title = 'Algorithmic Fairness' AND YEAR(papers.published_date) = YEAR(CURRENT_DATE()) GROUP BY authors.country;"}
{"input": " \ube0c\ub77c\uc9c8\uc5d0 \ub300\ud55c \ub2e4\uc74c \uc5ec\ud589 \uacbd\uace0\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE travel_warnings (id INT, country VARCHAR(50), warnings VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO travel_warnings (id, country, warnings, start_date, end_date) VALUES (1, 'Brazil', 'Political instability', '2022-01-01', '2022-12-31'); INSERT INTO travel_warnings (id, country, warnings, start_date, end_date) VALUES (2, 'Colombia', 'Drug trafficking', '2022-07-01', '2022-12-31');", "output": "SELECT country, warnings, LEAD(start_date) OVER (PARTITION BY country ORDER BY start_date) as next_warning FROM travel_warnings WHERE country = 'Brazil';"}
{"input": " \uc555\ub825 \uac12\uc774 \uac00\uc7a5 \ub0ae\uc740 \ud654\ud559\ubb3c\uc9c8 \ubc30\uce58\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_batches (batch_id INT, pressure FLOAT, timestamp TIMESTAMP); INSERT INTO chemical_batches (batch_id, pressure, timestamp) VALUES (1, 1200, '2021-01-01 00:00:00'); INSERT INTO chemical_batches (batch_id, pressure, timestamp) VALUES (2, 1100, '2021-01-02 00:00:00');", "output": "SELECT batch_id, pressure FROM (SELECT batch_id, pressure, ROW_NUMBER() OVER (ORDER BY pressure ASC) as row_num FROM chemical_batches) as subquery WHERE row_num = 1;"}
{"input": " \ubd81\ubbf8 \uc2dc\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub41c \uac00\uc7a5 \ube44\uc2fc \uc758\ub958 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE garment_prices (id INT, garment_type VARCHAR(255), region VARCHAR(255), price INT); INSERT INTO garment_prices (id, garment_type, region, price) VALUES (1, 'Dress', 'North America', 200), (2, 'Jacket', 'North America', 300), (3, 'Skirt', 'North America', 400);", "output": "DELETE FROM garment_prices WHERE id = (SELECT id FROM (SELECT ROW_NUMBER() OVER (ORDER BY price DESC) as row_num, id FROM garment_prices WHERE region = 'North America') t WHERE t.row_num = 1);"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uac01 \uc5b4\uc885\uc758 \ubc14\uc774\uc624\ub9e4\uc2a4 \uc99d\uac00\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE biomass_history (id INT, species VARCHAR(255), measurement_date DATE, biomass FLOAT); INSERT INTO biomass_history (id, species, measurement_date, biomass) VALUES (1, 'Salmon', '2021-01-01', 3000.0), (2, 'Salmon', '2022-01-01', 3500.0), (3, 'Tuna', '2021-01-01', 4000.0), (4, 'Tuna', '2022-01-01', 4500.0);", "output": "SELECT species, (biomass - LAG(biomass) OVER (PARTITION BY species ORDER BY measurement_date)) / LAG(biomass) OVER (PARTITION BY species ORDER BY measurement_date) * 100.0 AS growth_rate FROM biomass_history WHERE measurement_date BETWEEN '2021-01-01' AND '2022-12-31' GROUP BY species, biomass, measurement_date;"}
{"input": "\uacf5\uc7a5\ubcc4 \ud654\ud559\ubb3c\uc9c8\ubcc4 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE chemicals (id INT, name TEXT, production_volume INT); CREATE TABLE plant_chemicals (plant_id INT, chemical_id INT, production_volume INT); INSERT INTO chemicals (id, name, production_volume) VALUES (1, 'Chemical A', 500), (2, 'Chemical B', 300), (3, 'Chemical C', 700); INSERT INTO plant_chemicals (plant_id, chemical_id, production_volume) VALUES (1, 1, 200), (1, 2, 150), (1, 3, 300), (2, 1, 300), (2, 2, 150), (2, 3, 400);", "output": "SELECT p.name AS plant_name, c.name AS chemical_name, SUM(pc.production_volume) FROM plant_chemicals pc INNER JOIN chemicals c ON pc.chemical_id = c.id INNER JOIN chemical_plants p ON pc.plant_id = p.id GROUP BY p.name, c.name;"}
{"input": " \uc7ac\uc988 \uc7a5\ub974\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uace1\uc744 \ubcf4\uc720\ud55c \uc544\ud2f0\uc2a4\ud2b8 Top 3\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE artists (id INT, name TEXT); CREATE TABLE songs_artists (song_id INT, artist_id INT); CREATE TABLE songs (id INT, title TEXT, length FLOAT, genre TEXT); INSERT INTO artists (id, name) VALUES (1, 'Artist1'), (2, 'Artist2'), (3, 'Artist3'); INSERT INTO songs_artists (song_id, artist_id) VALUES (1, 1), (2, 2), (3, 1), (4, 3); INSERT INTO songs (id, title, length, genre) VALUES (1, 'Song1', 3.2, 'jazz'), (2, 'Song2', 4.1, 'rock'), (3, 'Song3', 3.8, 'pop'), (4, 'Song4', 5.1, 'jazz');", "output": "SELECT artists.name, COUNT(songs.id) AS song_count FROM artists JOIN songs_artists ON artists.id = songs_artists.artist_id JOIN songs ON songs_artists.song_id = songs.id WHERE songs.genre = 'jazz' GROUP BY artists.name ORDER BY song_count DESC LIMIT 3;"}
{"input": "\ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uacfc \ubc95\ub960 \uae30\uc220 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE restorative_justice (id INT, country VARCHAR(255), program VARCHAR(255)); INSERT INTO restorative_justice (id, country, program) VALUES (1, 'US', 'Victim Offender Mediation'), (2, 'Canada', 'Restorative Circles'); CREATE TABLE legal_tech (id INT, country VARCHAR(255), initiative VARCHAR(255)); INSERT INTO legal_tech (id, country, initiative) VALUES (1, 'US', 'Legal AI Platform'), (2, 'Canada', 'Online Dispute Resolution');", "output": "SELECT COUNT(*) FROM (SELECT * FROM restorative_justice UNION SELECT * FROM legal_tech) AS total_programs;"}
{"input": " 'CityE'\uc758 \uc6d4 \ud3c9\uade0 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE CityE (RecyclingQuantity INT, GenerationDate DATE); INSERT INTO CityE (RecyclingQuantity, GenerationDate) VALUES (250, '2021-01-01'), (300, '2021-02-01'), (350, '2021-03-01');", "output": "SELECT AVG(RecyclingQuantity) FROM (SELECT RecyclingQuantity, ROW_NUMBER() OVER (PARTITION BY EXTRACT(MONTH FROM GenerationDate) ORDER BY GenerationDate) as rn FROM CityE) tmp WHERE rn = 1;"}
{"input": " 'education_budget' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uac01 \ub3c4\uc2dc\uc758 \uacf5\ub9bd\ud559\uad50 \uc218\uc640 \ud574\ub2f9 \ud559\uad50\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE schools (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), city_id INT, FOREIGN KEY (city_id) REFERENCES cities(id));CREATE TABLE budgets (id INT PRIMARY KEY, school_id INT, amount INT, FOREIGN KEY (school_id) REFERENCES schools(id)); INSERT INTO cities (id, name) VALUES (1, 'New York'); INSERT INTO cities (id, name) VALUES (2, 'Los Angeles'); INSERT INTO schools (id, name, type, city_id) VALUES (1, 'Public School 1', 'public', 1); INSERT INTO schools (id, name, type, city_id) VALUES (2, 'Private School 1', 'private', 1);", "output": "SELECT cities.name, COUNT(schools.id) as school_count, SUM(budgets.amount) as total_budget FROM cities INNER JOIN schools ON cities.id = schools.city_id INNER JOIN budgets ON schools.id = budgets.school_id WHERE schools.type = 'public' GROUP BY cities.name;"}
{"input": " SpaceX \uc6b0\uc8fc\uc120\uc5d0 \ud0d1\uc2b9\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronaut (id INT, name VARCHAR(50), manufacturer VARCHAR(50), age INT); INSERT INTO Astronaut (id, name, manufacturer, age) VALUES (1, 'Astronaut 1', 'SpaceX', 45), (2, 'Astronaut 2', 'SpaceX', 38), (3, 'Astronaut 3', 'Boeing', 50);", "output": "SELECT AVG(a.age) as avg_age FROM Astronaut a WHERE a.manufacturer = 'SpaceX';"}
{"input": " \uc9c0\ub09c 3\ubc88\uc758 \ud06c\ub9ac\ucf13 \uc6d4\ub4dc\ucef5\uc758 \ucd1d \uc218\uc775\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE events (id INT, name VARCHAR(50), sport VARCHAR(20), start_date DATE, end_date DATE, ticket_price INT);", "output": "SELECT SUM(DATEDIFF(end_date, start_date) + 1) * ticket_price FROM events WHERE sport = 'Cricket' AND name LIKE '%World Cup%' AND start_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR);"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \ub300\ub959\uc758 1\uc778\ub2f9 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc758 \ubcc0\ud654\uc728\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE EmissionsData (Continent VARCHAR(50), Year INT, CO2Emission DECIMAL(5,2), Population INT); INSERT INTO EmissionsData (Continent, Year, CO2Emission, Population) VALUES ('Asia', 2020, 5.3, 4600000000), ('Asia', 2019, 4.6, 4580000000), ('Africa', 2020, 2.1, 1300000000), ('Africa', 2019, 1.8, 1280000000);", "output": "SELECT Continent, (AVG(CO2Emission/Population) - LAG(AVG(CO2Emission/Population)) OVER (PARTITION BY Continent ORDER BY Year)) * 100.0 / LAG(AVG(CO2Emission/Population)) OVER (PARTITION BY Continent ORDER BY Year) as PercentageChange FROM EmissionsData GROUP BY Continent, Year;"}
{"input": " \uad70\uc0ac \ud601\uc2e0 \ubd84\uc57c\uc5d0\uc11c \uad70\uc0ac\ube44 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\uc640 \uac00\uc7a5 \ub0ae\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitarySpending (Country VARCHAR(50), MilitarySpending DECIMAL(10,2)); INSERT INTO MilitarySpending (Country, MilitarySpending) VALUES ('United States', 700000000), ('China', 250000000), ('Russia', 65000000), ('India', 55000000), ('Germany', 45000000), ('Brazil', 35000000), ('South Korea', 30000000), ('Italy', 25000000);", "output": "SELECT Country, MilitarySpending FROM (SELECT Country, MilitarySpending, ROW_NUMBER() OVER (ORDER BY MilitarySpending DESC) AS Rank, ROW_NUMBER() OVER (ORDER BY MilitarySpending ASC) AS LowRank FROM MilitarySpending) AS RankedSpenders WHERE Rank = 1 OR LowRank = 1;"}
{"input": " \uc870\uc9c1\ubcc4 \ubd81\uadf9 \uc5f0\uad6c \ud0d0\uc0ac\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ResearchExpeditions(expedition_id INT, organization VARCHAR(255));", "output": "SELECT organization, COUNT(*) FROM ResearchExpeditions GROUP BY organization;"}
{"input": " \ubc18\ud488\uc744 \uc81c\uc678\ud55c 2020\ub144 3\ubd84\uae30 'DrugE'\uc758 \ucd1d \ub9e4\ucd9c\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales(drug_name TEXT, sales_quarter INT, revenue FLOAT, return_amount FLOAT); INSERT INTO sales (drug_name, sales_quarter, revenue, return_amount) VALUES ('DrugA', 3, 1200000, 100000), ('DrugB', 3, 1000000, 50000), ('DrugE', 3, 1500000, 0), ('DrugC', 3, 1300000, 200000);", "output": "SELECT SUM(sales.revenue - COALESCE(sales.return_amount, 0)) AS total_sales_revenue FROM sales WHERE drug_name = 'DrugE' AND sales_quarter = 3;"}
{"input": " LGBTQ+ \ucee4\ubba4\ub2c8\ud2f0 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID int, Community varchar(20)); INSERT INTO Attorneys (AttorneyID, Community) VALUES (1, 'LGBTQ+'), (2, 'African American'), (3, 'Asian'), (4, 'Caucasian'), (5, 'Native American'); CREATE TABLE Cases (CaseID int, AttorneyID int); INSERT INTO Cases (CaseID, AttorneyID) VALUES (1, 1), (2, 2), (3, 3), (4, 5), (5, 1), (6, 4); CREATE TABLE CaseBilling (CaseID int, BillingAmount decimal(10,2)); INSERT INTO CaseBilling (CaseID, BillingAmount) VALUES (1, 4500.00), (2, 2000.00), (3, 3200.00), (4, 500.00), (5, 6000.00), (6, 2500.00);", "output": "SELECT SUM(CaseBilling.BillingAmount) AS TotalBillingAmount FROM CaseBilling JOIN Cases ON CaseBilling.CaseID = Cases.CaseID JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Attorneys.Community = 'LGBTQ+';"}
{"input": " \uad6d\uac00\ubcc4 \ud3c9\uade0 \uc724\ub9ac\uc801 AI \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai (country VARCHAR(50), score INT); INSERT INTO ethical_ai (country, score) VALUES ('US', 85), ('India', 70), ('Brazil', 65);", "output": "SELECT country, AVG(score) OVER (PARTITION BY country) as avg_score FROM ethical_ai;"}
{"input": " \uc758\ub958 \uc0dd\uc0b0\uc5d0 \uac00\uc7a5 \uc801\uac8c \uc0ac\uc6a9\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Materials (material_id INT PRIMARY KEY, material VARCHAR(50), usage INT); INSERT INTO Materials (material_id, material, usage) VALUES (1, 'Organic Cotton', 500), (2, 'Recycled Polyester', 300), (3, 'Hemp', 100);", "output": "SELECT material FROM (SELECT material, ROW_NUMBER() OVER (ORDER BY usage) AS rank FROM Materials) AS ranked_materials WHERE rank = 1;"}
{"input": " \uad6d\uac00\ubcc4 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8 \uc218 \ud45c\uc2dc", "context": "CREATE TABLE projects_by_country (id INT, country VARCHAR(50), project_type VARCHAR(50)); INSERT INTO projects_by_country (id, country, project_type) VALUES (1, 'USA', 'Wind Farm'), (2, 'Canada', 'Solar Plant'), (3, 'Mexico', 'Hydro Plant'), (4, 'USA', 'Solar Plant'), (5, 'Canada', 'Wind Farm');", "output": "SELECT country, COUNT(*) FROM projects_by_country GROUP BY country;"}
{"input": "\uc911\uad6d'\uacfc '\ubbf8\uad6d'\uc5d0\uc11c \ubaa8\ub450 \uc0dd\uc0b0\ub418\ub294 \uc694\uc18c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE elements_producers (element_id INT, producer_id INT, PRIMARY KEY (element_id, producer_id)); CREATE TABLE producers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255)); CREATE TABLE elements (id INT PRIMARY KEY, name VARCHAR(255), symbol VARCHAR(3), weight FLOAT, producer_id INT, FOREIGN KEY (producer_id) REFERENCES producers(id));", "output": "SELECT e.name FROM elements AS e JOIN elements_producers AS ep ON e.id = ep.element_id JOIN producers AS p ON ep.producer_id = p.id WHERE p.location IN ('China', 'USA') GROUP BY e.name HAVING COUNT(DISTINCT p.id) = 2;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc720\uc5d4\uc774 \ucc38\uc5ec\ud55c \ud3c9\ud654\uc720\uc9c0\uc791\uc804\uacfc \uac01 \uc791\uc804\uc5d0 \ubc30\uce58\ub41c \ud3c9\ud654\uc720\uc9c0\uad70\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE PeacekeepingOperations (Operation VARCHAR(50), Year INT, Peacekeepers INT, Organization VARCHAR(50)); INSERT INTO PeacekeepingOperations (Operation, Year, Peacekeepers, Organization) VALUES ('Operation United Nations Assistance Mission in Somalia', 2015, 22000, 'United Nations'), ('Operation United Nations Mission in South Sudan', 2016, 16000, 'United Nations'), ('Operation United Nations Multidimensional Integrated Stabilization Mission in the Central African Republic', 2017, 12000, 'United Nations'), ('Operation United Nations Stabilization Mission in Haiti', 2018, 15000, 'United Nations'), ('Operation United Nations Mission in Liberia', 2019, 18000, 'United Nations'), ('Operation United Nations Mission in the Republic of South Sudan', 2020, 19000, 'United Nations');", "output": "SELECT Operation, Year, SUM(Peacekeepers) AS TotalPeacekeepers FROM PeacekeepingOperations WHERE Organization = 'United Nations' AND Year BETWEEN 2015 AND 2020 GROUP BY Operation, Year;"}
{"input": " \ud559\uacfc\ubcc4 \uc5ec\uc131\uad50\uc6d0 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE faculties (faculty_id INT, name VARCHAR(255), dept_id INT, gender VARCHAR(10));CREATE TABLE departments (dept_id INT, dept_name VARCHAR(255));", "output": "SELECT dept_name, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM faculties WHERE dept_id = f.dept_id) AS percentage FROM faculties f JOIN departments d ON f.dept_id = d.dept_id WHERE gender = 'female' GROUP BY dept_name ORDER BY percentage DESC;"}
{"input": " \ubbf8\uad6d \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc6b0\uc8fc \uc784\ubb34 \ucd1d \ud69f\uc218", "context": "CREATE TABLE Astronauts(astronaut_id INT, name VARCHAR(50), country VARCHAR(50), missions INT);", "output": "SELECT COUNT(*) FROM Astronauts WHERE country = 'USA';"}
{"input": " \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\uc758 \ub300\uc911\uad50\ud1b5 \uc0ac\uc6a9\ub7c9 \ud45c\uc2dc", "context": "CREATE TABLE pt_usage (usage_id INT, city INT, passengers INT);CREATE TABLE cities (city_id INT, city_name VARCHAR(50));INSERT INTO cities (city_id, city_name) VALUES (1, 'San Francisco'), (2, 'New York'), (3, 'Los Angeles');INSERT INTO pt_usage (usage_id, city, passengers) VALUES (1, 1, 1000), (2, 2, 2000), (3, 3, 1500), (4, 1, 1200), (5, 2, 1800);", "output": "SELECT c.city_name, pu.passengers FROM (SELECT city, SUM(passengers) as total_passengers FROM pt_usage GROUP BY city ORDER BY total_passengers DESC LIMIT 3) t JOIN cities c ON t.city = c.city_id JOIN pt_usage pu ON t.city = pu.city;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed \uad6d\uac00\ub4e4\uc740 '\uce68\ud22c' \uc720\ud615\uc758 \uc815\ubcf4 \uc791\uc804\uc744 \uba87 \ubc88\uc774\ub098 \uc218\ud589\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE operations (id INT, country VARCHAR(50), operation_type VARCHAR(50), operation_date DATE); INSERT INTO operations (id, country, operation_type, operation_date) VALUES (1, 'Egypt', 'Infiltration', '2021-02-15'); INSERT INTO operations (id, country, operation_type, operation_date) VALUES (2, 'Algeria', 'Surveillance', '2021-03-20');", "output": "SELECT country, COUNT(*) as operation_count FROM operations WHERE operation_type = 'Infiltration' AND operation_date >= (SELECT DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)) AND region = 'Africa' GROUP BY country;"}
{"input": " '\uc911\uac04 \uc704\ud5d8' \uc778\uc218 \uadf8\ub8f9\uc5d0\uc11c \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uba85\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE underwriting (id INT, group VARCHAR(10), name VARCHAR(20), claim_amount DECIMAL(10,2)); INSERT INTO underwriting (id, group, name, claim_amount) VALUES (1, 'High Risk', 'John Doe', 5000.00), (2, 'Medium Risk', 'Sophia Gonzalez', 6000.00), (3, 'Medium Risk', 'Javier Rodriguez', 7000.00), (4, 'Low Risk', 'Emma White', 3000.00);", "output": "SELECT name, claim_amount FROM (SELECT name, claim_amount, ROW_NUMBER() OVER (PARTITION BY group ORDER BY claim_amount DESC) rn FROM underwriting WHERE group = 'Medium Risk') sub WHERE rn <= 2;"}
{"input": " 2021\ub144 3\ubd84\uae30\uc5d0 \ub4f1\ub85d\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \ub4f1\ub85d \uc704\uce58\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, signup_location TEXT, signup_date DATE); INSERT INTO volunteers (volunteer_id, volunteer_name, signup_location, signup_date) VALUES (1, 'Alice', 'San Francisco', '2021-07-01'); INSERT INTO volunteers (volunteer_id, volunteer_name, signup_location, signup_date) VALUES (2, 'Bob', 'New York', '2021-09-02');", "output": "SELECT signup_location, COUNT(volunteer_id) as num_volunteers FROM volunteers WHERE EXTRACT(MONTH FROM signup_date) BETWEEN 7 AND 9 GROUP BY signup_location;"}
{"input": " \uac01 \uc8fc\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0 \ub300\ud55c \ucd5c\ub300 \uccad\uad6c \uae08\uc561 \ud45c\uc2dc", "context": "CREATE TABLE claims (policyholder_id INT, claim_amount DECIMAL(10,2), state VARCHAR(2)); INSERT INTO claims (policyholder_id, claim_amount, state) VALUES (1, 500, 'TX'), (2, 200, 'TX'), (3, 1000, 'NY');", "output": "SELECT state, MAX(claim_amount) FROM claims GROUP BY state;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c VR \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud560 \uc218 \uc788\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ucd5c\ub300 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'), (2, 30, 'Female', 'Canada'), (3, 35, 'Female', 'Mexico'), (4, 45, 'Male', 'Canada'); CREATE TABLE VR_Games (GameID INT, GameName VARCHAR(20), Players INT); INSERT INTO VR_Games (GameID, GameName, Players) VALUES (1, 'Beat Saber', 2), (2, 'Job Simulator', 3);", "output": "SELECT MAX(Players.Age) FROM Players WHERE Players.Country = 'Canada' AND Players.PlayerID IN (SELECT Players_VR.PlayerID FROM Players AS Players_VR INNER JOIN VR_Games AS VR_Games_VR ON Players_VR.PlayerID = VR_Games_VR.Players);"}
{"input": " \ud574\ub2f9 \uc5f0\ub3c4\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc5b4\ub958 \ubc14\uc774\uc624\ub9e4\uc2a4\ub97c \ubcf4\uc720\ud55c \uc0c1\uc704 2\uac1c\uc758 \uc591\uc2dd\uc7a5\uc744 \uc2dd\ubcc4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Farm ( FarmID INT, FarmName VARCHAR(255) ); CREATE TABLE Stock ( StockID INT, FarmID INT, FishSpecies VARCHAR(255), Weight DECIMAL(10,2), StockDate DATE ); INSERT INTO Farm (FarmID, FarmName) VALUES (1, 'Farm A'), (2, 'Farm B'), (3, 'Farm C'), (4, 'Farm D'); INSERT INTO Stock (StockID, FarmID, FishSpecies, Weight, StockDate) VALUES (1, 1, 'Tilapia', 5.5, '2022-01-01'), (2, 1, 'Salmon', 12.3, '2022-01-02'), (3, 2, 'Tilapia', 6.0, '2022-01-03'), (4, 2, 'Catfish', 8.2, '2022-01-04');", "output": "SELECT FarmName, SUM(Weight) OVER (PARTITION BY FarmID) as TotalBiomass, RANK() OVER (ORDER BY SUM(Weight) DESC) as Rank FROM Stock JOIN Farm ON Stock.FarmID = Farm.FarmID WHERE DATE_TRUNC('year', StockDate) = 2022 GROUP BY FarmName, TotalBiomass HAVING Rank <= 2;"}
{"input": " \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc9c0\uc218 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc744 \ud574\ub2f9 \uc810\uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MentalHealthParity (Region VARCHAR(255), ParityIndexScore INT); INSERT INTO MentalHealthParity (Region, ParityIndexScore) VALUES ('North', 80), ('South', 85), ('East', 70), ('West', 90);", "output": "SELECT Region, ParityIndexScore FROM (SELECT Region, ParityIndexScore, ROW_NUMBER() OVER (ORDER BY ParityIndexScore DESC) as Rank FROM MentalHealthParity) as RankedData WHERE Rank <= 3;"}
{"input": " \uac01 \uc6b0\uc8fc \uc784\ubb34 \uc911\uc5d0 \uae30\ub85d\ub41c \ucd5c\ub300 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TemperatureRecords (Id INT, Mission VARCHAR(50), Temperature INT); INSERT INTO TemperatureRecords (Id, Mission, Temperature) VALUES (1, 'Ares 3', 100), (2, 'Ares 3', 150), (3, 'Apollo 11', 200);", "output": "SELECT Mission, MAX(Temperature) FROM TemperatureRecords GROUP BY Mission"}
{"input": " \uc7ac\ub09c \uc720\ud615\ubcc4 \uc9c0\uc6d0\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Disaster_Type (id INT PRIMARY KEY, name VARCHAR(50)); INSERT INTO Disaster_Type (id, name) VALUES (1, 'Flood'); INSERT INTO Disaster_Type (id, name) VALUES (2, 'Earthquake'); CREATE TABLE Aid_Distribution (id INT PRIMARY KEY, disaster_id INT, aid_amount FLOAT, FOREIGN KEY (disaster_id) REFERENCES Disaster(id)); INSERT INTO Aid_Distribution (id, disaster_id, aid_amount) VALUES (1, 1, 100000); INSERT INTO Aid_Distribution (id, disaster_id, aid_amount) VALUES (2, 2, 150000);", "output": "SELECT dt.name, SUM(ad.aid_amount) as total_aid FROM Disaster_Type dt JOIN Disaster d ON dt.id = d.type_id JOIN Aid_Distribution ad ON d.id = ad.disaster_id GROUP BY dt.name;"}
{"input": " 'The Hindu' \uc2e0\ubb38\uc758 '\uc608\uc220' \uc139\uc158\uc5d0 \uae30\uace0\ud55c \uc778\ub3c4 \ucd9c\uc2e0\uc758 \ub3c5\ud2b9\ud55c \uc791\uac00 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE authors (name VARCHAR(50), country VARCHAR(50), section VARCHAR(50), newspaper VARCHAR(50)); INSERT INTO authors (name, country, section, newspaper) VALUES ('Smith', 'USA', 'politics', 'New York Times'), ('Doe', 'Canada', 'technology', 'The Globe and Mail'), ('Gupta', 'India', 'arts', 'The Hindu'), ('Johnson', 'UK', 'sports', 'The Guardian'), ('Schmidt', 'Germany', 'business', 'Handelsblatt'), ('Srinivasan', 'India', 'arts', 'The Hindu');", "output": "SELECT COUNT(DISTINCT name) FROM authors WHERE country = 'India' AND section = 'arts' AND newspaper = 'The Hindu';"}
{"input": " 2022\ub144 1\ubd84\uae30 \uccab \uae30\ubd80\uc790\uc758 \ucd1d \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE donations_q1_2022 (id INT, donor_id INT, amount DECIMAL(10, 2), donation_date DATE); INSERT INTO donations_q1_2022 (id, donor_id, amount, donation_date) VALUES (1, 1004, '700.00', '2022-01-10'), (2, 1005, '800.00', '2022-02-12'), (3, 1006, '900.00', '2022-03-20'), (4, 1007, '1000.00', '2022-03-31');", "output": "SELECT SUM(amount) FROM donations_q1_2022 WHERE donor_id NOT IN (SELECT donor_id FROM donations_q1_2022 WHERE donation_date < DATE_SUB('2022-01-01', INTERVAL 3 MONTH)) AND donation_date >= DATE_SUB('2022-01-01', INTERVAL 3 MONTH);"}
{"input": " 2015\ub144 \uc774\ud6c4 '\uce98\ub9ac\ud3ec\ub2c8\uc544' \ub0b4\uc9c4 \ubcf4\uac15\uc758 \ucd5c\uc18c \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE seismic_retrofits (id INT, retrofit_number TEXT, location TEXT, cost INT, retrofit_date DATE); INSERT INTO seismic_retrofits (id, retrofit_number, location, cost, retrofit_date) VALUES (1, 'CA-1234', 'California', 300000, '2016-04-02'); INSERT INTO seismic_retrofits (id, retrofit_number, location, cost, retrofit_date) VALUES (2, 'CA-5678', 'California', 200000, '2015-10-10');", "output": "SELECT MIN(cost) FROM seismic_retrofits WHERE location = 'California' AND YEAR(retrofit_date) >= 2015;"}
{"input": " \uc5f0\ub839\ubcc4 \uc815\uc2e0\uac74\uac15 \uc785\uc6d0 \ucd94\uc138\ub294 \uc5b4\ub5a4\uac00\uc694?", "context": "CREATE TABLE mental_health (patient_id INT, patient_age INT, hospitalized TEXT, date DATE); INSERT INTO mental_health (patient_id, patient_age, hospitalized, date) VALUES (1, 18, 'Yes', '2021-01-01'), (2, 25, 'No', '2021-01-02'), (3, 30, 'Yes', '2021-01-03');", "output": "SELECT patient_age, hospitalized, COUNT(*) AS count, LAG(count, 1) OVER (ORDER BY patient_age) AS previous_age_count FROM mental_health GROUP BY patient_age, hospitalized ORDER BY patient_age;"}
{"input": " '\uac00\uacf5' \ubc0f '\uc870\ub9bd' \uc601\uc5ed\uc5d0 \uc788\ub294 \uae30\uacc4\uc758 \ucd1d \uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE machines (id INT, name VARCHAR(50), area VARCHAR(20), quantity INT); INSERT INTO machines (id, name, area, quantity) VALUES (1, 'CNC Mill', 'machining', 10), (2, 'Lathe', 'machining', 5), (3, 'Assembly Robot', 'assembly', 8), (4, 'Inspection Gauge', 'quality control', 3);", "output": "SELECT SUM(quantity) FROM machines WHERE area IN ('machining', 'assembly');"}
{"input": " 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ud14d\uc0ac\uc2a4 \uc8fc \uc800\ub834\ud55c \uc8fc\ud0dd\uc5d0 \ub300\ud55c \uc7ac\uc0b0\uc138 \ubcc0\uacbd \uc0ac\ud56d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE property_tax (id INT, state VARCHAR(20), year INT, property_tax INT, housing_type VARCHAR(20)); INSERT INTO property_tax (id, state, year, property_tax, housing_type) VALUES (1, 'Texas', 2020, 1500, 'affordable'), (2, 'Texas', 2021, 1800, 'affordable'), (3, 'Texas', 2020, 2000, 'market_rate'), (4, 'Texas', 2021, 2200, 'market_rate');", "output": "SELECT LAG(property_tax) OVER (PARTITION BY state, housing_type ORDER BY year) - property_tax as change FROM property_tax WHERE state = 'Texas' AND housing_type = 'affordable';"}
{"input": " \uac01 \uc704\uce58\ubcc4\ub85c 'vaccination_data'\uc5d0 \ub3c5\uac10 \uc608\ubc29\uc811\uc885\uc744 \uba87 \ubc88 \uc2e4\uc2dc\ud588\ub098\uc694?", "context": "CREATE SCHEMA vaccination_data; CREATE TABLE flu_vaccinations (id INT, clinic_id INT, location TEXT, vaccinations INT); INSERT INTO vaccination_data.flu_vaccinations (id, clinic_id, location, vaccinations) VALUES (1, 1001, 'Location A', 300), (2, 1001, 'Location B', 400), (3, 1002, 'Location A', 250), (4, 1002, 'Location C', 500), (5, 1003, 'Location B', 350), (6, 1003, 'Location D', 450);", "output": "SELECT location, SUM(vaccinations) FROM vaccination_data.flu_vaccinations GROUP BY location;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ucc44\uad74 \ubc29\uc2dd\ubcc4 \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_production (production_date DATE, production_volume INT, mining_method VARCHAR(255)); INSERT INTO mining_production (production_date, production_volume, mining_method) VALUES ('2021-08-01', 1000, 'Open Pit'), ('2021-07-01', 1200, 'Underground'), ('2020-08-01', 1500, 'Open Pit'), ('2020-07-01', 1800, 'Underground');", "output": "SELECT mining_method, AVG(production_volume) as avg_production_volume FROM (SELECT mining_method, production_volume, production_date, ROW_NUMBER() OVER (PARTITION BY mining_method ORDER BY production_date DESC) as rn FROM mining_production WHERE production_date >= DATEADD(month, -12, CURRENT_DATE)) t WHERE rn = 1 GROUP BY mining_method;"}
{"input": " \uc544\uc9c1 \uc77c\uc5b4\ub098\uc9c0 \uc54a\uc740 \uc0ac\uac74\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud558\uc138\uc694", "context": "CREATE TABLE events (event_id INT, event_name VARCHAR(50), year INT); INSERT INTO events (event_id, event_name, year) VALUES (1, 'FIFA World Cup', 2022), (2, 'NBA Finals', 2023), (3, 'Super Bowl', 2022);", "output": "DELETE FROM events WHERE year NOT IN (SELECT year FROM events WHERE year <= YEAR(CURRENT_DATE));"}
{"input": " \ub3c5\ud2b9\ud55c \uc804\ud1b5\ucda4\uacfc \uadf8 \uc720\ub798, \uad00\ub828 \uc720\ubb3c\uc758 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Dance (DanceID INT, DanceName VARCHAR(50), Origin VARCHAR(50)); INSERT INTO Dance (DanceID, DanceName, Origin) VALUES (1, 'Hula', 'Hawaii'), (2, 'Flamenco', 'Spain'), (3, 'Bharatanatyam', 'India'); CREATE TABLE Artifact (ArtifactID INT, ArtifactName VARCHAR(50), DanceID INT); INSERT INTO Artifact (ArtifactID, ArtifactName, DanceID) VALUES (1, 'Hawaiian Skirt', 1), (2, 'Flamenco Dress', 2), (3, 'Bharatanatyam Anklets', 3);", "output": "SELECT o.Origin, d.DanceName, COUNT(a.ArtifactID) as ArtifactCount FROM Dance d JOIN Artifact a ON d.DanceID = a.DanceID JOIN (SELECT DISTINCT Origin FROM Dance) o ON d.Origin = o.Origin GROUP BY o.Origin, d.DanceName;"}
{"input": "\ucf5c\ub85c\ub77c\ub3c4\uc758 \uc5b4\ub290 \uc57d\uad6d\uc774 \uc8fc \ud3c9\uade0\ubcf4\ub2e4 \ud3c9\uade0 \uc8fc\ubb38 \uae08\uc561\uc774 \ub354 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (dispensary_id INT, name VARCHAR(255), state VARCHAR(255));CREATE TABLE orders (order_id INT, dispensary_id INT, total INT);", "output": "SELECT d.name FROM dispensaries d JOIN orders o ON d.dispensary_id = o.dispensary_id JOIN (SELECT AVG(total) as avg_total FROM orders WHERE state = 'Colorado') avg ON o.total > avg.avg_total WHERE d.state = 'Colorado';"}
{"input": " ESG \uc810\uc218\uac00 80\uc810\uc744 \ucd08\uacfc\ud558\ub294 \uad50\uc721 \ubd80\ubb38\uc758 \ubaa8\ub4e0 \uc0ac\ud68c\uc801 \uc601\ud5a5 \ud22c\uc790\ub97c \ud22c\uc790 \ub0a0\uc9dc \ubc0f ESG \uc810\uc218\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SocialImpactInvestments (InvestmentID INT, InvestmentDate DATE, Sector VARCHAR(20), ESGScore INT); INSERT INTO SocialImpactInvestments VALUES (1, '2021-01-01', 'Education', 85), (2, '2021-02-01', 'Healthcare', 75), (3, '2021-03-01', 'Education', 90);", "output": "SELECT * FROM SocialImpactInvestments WHERE Sector = 'Education' AND ESGScore > 80 ORDER BY InvestmentDate, ESGScore DESC;"}
{"input": " \ubd81\ubbf8 \uad00\uad11\uac1d\uc774 \ubc29\ubb38\ud558\ub294 \ubaa9\uc801\uc9c0\uc758 \ud3c9\uade0 \uc9c0\uc18d \uac00\ub2a5\uc131 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE destinations (destination_id INT, destination_name VARCHAR(50), continent VARCHAR(50)); INSERT INTO destinations (destination_id, destination_name, continent) VALUES (1, 'New York', 'North America'), (2, 'Los Angeles', 'North America'), (3, 'Toronto', 'North America'); CREATE TABLE sustainability_ratings (destination_id INT, rating INT); INSERT INTO sustainability_ratings (destination_id, rating) VALUES (1, 3), (2, 2), (3, 5); CREATE TABLE tourists (tourist_id INT, destination_id INT, continent VARCHAR(50)); INSERT INTO tourists (tourist_id, destination_id, continent) VALUES (1, 1, 'North America'), (2, 2, 'North America'), (3, 3, 'North America');", "output": "SELECT AVG(sr.rating) AS avg_rating FROM destinations d JOIN sustainability_ratings sr ON d.destination_id = sr.destination_id JOIN tourists t ON d.destination_id = t.destination_id WHERE t.continent = 'North America';"}
{"input": " 2018\ub144 \uae30\uc900 \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed 'R&B' \uc7a5\ub974\uc758 \uc0ac\uc6a9\uc790\ub2f9 \uc77c\uc77c \uc2a4\ud2b8\ub9ac\ubc0d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE StreamsPerUser(id INT, genre VARCHAR(10), region VARCHAR(10), user_id INT, date DATE, streams INT);", "output": "SELECT date, user_id, AVG(CAST(streams AS FLOAT)/COUNT(date)) AS streams_per_day FROM StreamsPerUser WHERE genre = 'r&b' AND region = 'African' AND year = 2018 GROUP BY date, user_id;"}
{"input": " 2022\ub144 2\uc6d4 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\ud56d\uacfc 2022\ub144 3\uc6d4 \uc0cc\ub514\uc5d0\uc774\uace0\ud56d\uc5d0 \uc815\ubc15\ud55c \uc120\ubc15\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port_of_los_angeles (vessel_name VARCHAR(255), dock_month INT); CREATE TABLE port_of_san_diego (vessel_name VARCHAR(255), dock_month INT); INSERT INTO port_of_los_angeles (vessel_name, dock_month) VALUES ('Vessel Y', 2), ('Vessel Z', 2), ('Vessel AA', 3); INSERT INTO port_of_san_diego (vessel_name, dock_month) VALUES ('Vessel AA', 3), ('Vessel BB', 3), ('Vessel CC', 4);", "output": "SELECT l.vessel_name FROM port_of_los_angeles l WHERE l.dock_month = 2 INTERSECT SELECT s.vessel_name FROM port_of_san_diego s WHERE s.dock_month = 3;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ubd88\ub9cc \uc0ac\ud56d\uc774 \uc5c6\uc5c8\ub358 \uc720\ub7fd\uc758 \uad11\ub300\uc5ed \uace0\uac1d \ubaa9\ub85d\uc744 \uc791\uc131\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE subscribers (id INT, name VARCHAR(50), type VARCHAR(20), data_usage FLOAT); INSERT INTO subscribers (id, name, type, data_usage) VALUES (4, 'Clara Rodriguez', 'Broadband', 12.5); CREATE TABLE regions (id INT, name VARCHAR(50), continent VARCHAR(50)); INSERT INTO regions (id, name, continent) VALUES (4, 'Europe', 'Europe'); CREATE TABLE subscriber_regions (subscriber_id INT, region_id INT); INSERT INTO subscriber_regions (subscriber_id, region_id) VALUES (4, 4); CREATE TABLE complaints (id INT, subscriber_id INT, complaint_date DATE); INSERT INTO complaints (id, subscriber_id, complaint_date) VALUES (3, 4, '2022-03-15');", "output": "SELECT s.name, s.type FROM subscribers s INNER JOIN subscriber_regions sr ON s.id = sr.subscriber_id INNER JOIN regions r ON sr.region_id = r.id LEFT JOIN complaints c ON s.id = c.subscriber_id WHERE s.type = 'Broadband' AND r.continent = 'Europe' AND c.complaint_date < DATE_SUB(CURDATE(), INTERVAL 6 MONTH) IS NULL;"}
{"input": " \uc778\uc885\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18\uc774 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParityRace (ViolationID INT, Race VARCHAR(255), ViolationDate DATE); INSERT INTO MentalHealthParityRace (ViolationID, Race, ViolationDate) VALUES (1, 'Hispanic', '2022-01-01'), (2, 'African American', '2022-02-01'), (3, 'Hispanic', '2022-03-01');", "output": "SELECT Race, COUNT(*) as ViolationCount FROM MentalHealthParityRace GROUP BY Race;"}
{"input": " \uc911\ub3d9 \uc9c0\uc5ed\uc758 \uad6d\ubc29 \uc678\uad50 \ud589\uc0ac \uc911 \uc0ac\uc774\ubc84 \ubcf4\uc548 \ud611\ub825\uc744 \uc81c\uacf5\ud55c \uc0c1\uc704 3\uac1c \uc81c\uacf5\uc5c5\uccb4\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE DefenseCooperation (Country VARCHAR(255), Region VARCHAR(255), CooperationType VARCHAR(255), ProvidesCybersecurity BOOLEAN); INSERT INTO DefenseCooperation (Country, Region, CooperationType, ProvidesCybersecurity) VALUES ('Israel', 'Middle East', 'MilitaryExercise', TRUE), ('Saudi Arabia', 'Middle East', 'JointTraining', FALSE), ('Iran', 'Middle East', 'ArmsSales', FALSE), ('Turkey', 'Middle East', 'MilitaryExercise', TRUE), ('UAE', 'Middle East', 'JointTraining', TRUE);", "output": "SELECT Country, CooperationType FROM (SELECT Country, CooperationType, ROW_NUMBER() OVER (PARTITION BY CooperationType ORDER BY ProvidesCybersecurity DESC) AS Rank FROM DefenseCooperation WHERE Region = 'Middle East') AS RankedCooperation WHERE Rank <= 3;"}
{"input": " \ubbf8\uad6d\uacfc \uc911\uad6d \uae30\uc5c5\uc774 \uc9c4\ud589\ud558\ub294 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub97c \ub9cc\ub098\ubcf4\uc138\uc694.", "context": "CREATE TABLE AutonomousResearch (project VARCHAR(20), company VARCHAR(20)); INSERT INTO AutonomousResearch (project, company) VALUES ('Tesla Autopilot', 'Tesla'); INSERT INTO AutonomousResearch (project, company) VALUES ('Baidu Apollo', 'Baidu');", "output": "SELECT project FROM AutonomousResearch WHERE company IN ('Tesla', 'Baidu');"}
{"input": " \ud574\ub2f9 \ub3c4\uc2dc\uc5d0 \uc704\uce58\ud55c \ud68c\uc0ac\uac00 \ubc1b\uc740 \ucd1d \uc790\uae08\uc744 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \ubc1b\uc740 \uc0c1\uc704 10\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE company_location (id INT, company_name VARCHAR(50), city VARCHAR(50), funding_amount DECIMAL(10, 2));", "output": "SELECT city, SUM(funding_amount) AS total_funding FROM company_location GROUP BY city ORDER BY total_funding DESC LIMIT 10;"}
{"input": " 2022\ub144 7\uc6d4 \uccab\uc9f8 \uc8fc \uc9c0\uc5ed\ubcc4 \uc0ac\uc6a9\uc790 \uac00\uc785 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE signups (signup_id INT, signup_date DATE, region VARCHAR(50), signup_count INT); INSERT INTO signups VALUES (401, '2022-07-01', 'North America', 50), (402, '2022-07-03', 'Europe', 30), (403, '2022-07-05', 'Asia', 40), (404, '2022-07-07', 'South America', 20);", "output": "SELECT region, SUM(signup_count) as total_signups FROM signups WHERE signup_date BETWEEN '2022-07-01' AND '2022-07-07' GROUP BY region;"}
{"input": " \uacf5\ub3d9 \uc18c\uc720 \uc790\uc0b0 \uc218\uc5d0 \ub530\ub978 \uac01 \ub3c4\uc2dc\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co_owned_properties (id INT, city VARCHAR(20), total_properties INT); INSERT INTO co_owned_properties (id, city, total_properties) VALUES (1, 'Seattle', 1000), (2, 'Portland', 1500), (3, 'Seattle', 2000), (4, 'Portland', 2500), (5, 'Los Angeles', 3000), (6, 'Los Angeles', 3500);", "output": "SELECT city, ROW_NUMBER() OVER (ORDER BY total_properties DESC) as rank FROM co_owned_properties;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc0ac\uc774\ubc84 \uacf5\uaca9\uc774 \uac00\uc7a5 \ub9ce\uc774 \ubcf4\uace0\ub41c \uc0c1\uc704 5\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cyber_attacks (id INT, attack_time TIMESTAMP, country VARCHAR(20));", "output": "SELECT country, COUNT(*) as total_attacks FROM cyber_attacks WHERE attack_time >= NOW() - INTERVAL 6 MONTH GROUP BY country ORDER BY total_attacks DESC LIMIT 5;"}
{"input": " \uc5b4\ub5a4 \uc591\uc2dd\uc7a5\uc5d0\uc11c \uc885\ubcc4 \uc6a9\uc874\uc0b0\uc18c \uc218\uc900\uc774 \uac00\uc7a5 \ub0ae\uace0, \uc591\uc2dd\uc7a5\uc5d0\uc11c \uc885\ubcc4 \ud3c9\uade0 \uc6a9\uc874\uc0b0\uc18c \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FarmStocks (FarmID INT, Species VARCHAR(20), AvgDissolvedOxygen FLOAT); CREATE TABLE Species (Species VARCHAR(20), SpeciesID INT); INSERT INTO Species (Species, SpeciesID) VALUES ('Tilapia', 1), ('Salmon', 2), ('Trout', 3); INSERT INTO FarmStocks (FarmID, Species, AvgDissolvedOxygen) VALUES (1, 'Tilapia', 6.5), (1, 'Salmon', 5.8), (2, 'Trout', 7.2), (2, 'Tilapia', 6.0), (3, 'Salmon', 5.5), (3, 'Trout', 7.5);", "output": "SELECT Species, AVG(AvgDissolvedOxygen) FROM FarmStocks JOIN Species ON FarmStocks.Species = Species.SpeciesID GROUP BY Species; SELECT FarmStocks.Species, Farms.FarmName, AvgDissolvedOxygen FROM FarmStocks JOIN Farms ON FarmStocks.FarmID = Farms.FarmID WHERE AvgDissolvedOxygen = (SELECT MIN(AvgDissolvedOxygen) FROM FarmStocks JOIN Species ON FarmStocks.Species = Species.SpeciesID WHERE FarmStocks.Species = Species.Species);"}
{"input": " \uc54c\ub798\uc2a4\uce74 \uc2dc\uace8\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2fc \ub18d\uc5c5 \ud504\ub85c\uc81d\ud2b8 2\uac1c\uc758 \uc774\ub984\uacfc \ube44\uc6a9\uc744 \ube44\uc6a9\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE AgriculturalProjects (id INT, name VARCHAR(50), cost FLOAT, start_date DATE, end_date DATE, region VARCHAR(50)); INSERT INTO AgriculturalProjects (id, name, cost, start_date, end_date, region) VALUES (1, 'Irrigation System', 50000, '2021-01-01', '2021-12-31', 'Rural Alabama'); INSERT INTO AgriculturalProjects (id, name, cost, start_date, end_date, region) VALUES (2, 'Greenhouse Construction', 80000, '2021-04-01', '2021-12-31', 'Rural Alaska');", "output": "SELECT name, cost FROM (SELECT name, cost, ROW_NUMBER() OVER (PARTITION BY region ORDER BY cost DESC) as Rank FROM AgriculturalProjects WHERE region = 'Rural Alaska') AS Subquery WHERE Rank <= 2 ORDER BY cost DESC;"}
{"input": " \uc2a4\ud398\uc778\uc5d0\uc11c \uc81c\uc870\ub41c \uc81c\ud488\uc758 \uacbd\uc6b0 \ub4f1\uae09\uc5d0 \ub530\ub978 \uc81c\ud488 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE product_ratings (product_id INT, product_name VARCHAR(255), manufacturer_country VARCHAR(50), rating DECIMAL(2,1)); INSERT INTO product_ratings (product_id, product_name, manufacturer_country, rating) VALUES (1, 'Product A', 'Spain', 4.5), (2, 'Product B', 'Italy', 4.2), (3, 'Product C', 'Spain', 4.8);", "output": "SELECT product_id, product_name, rating, RANK() OVER (ORDER BY rating DESC) as rank FROM product_ratings WHERE manufacturer_country = 'Spain';"}
{"input": "\uc9c0\ub09c 3\ub144\uac04 \ud0dc\uc591\uad11 \ubc1c\uc804\uc18c\ub97c \uc81c\uc678\ud55c \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uac00 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE RenewableEnergyProjects (id INT, region VARCHAR(20), project_type VARCHAR(20), project_start_date DATE); INSERT INTO RenewableEnergyProjects (id, region, project_type, project_start_date) VALUES (1, 'Africa', 'Wind', '2019-01-01'), (2, 'Africa', 'Hydroelectric', '2020-06-17'), (3, 'Europe', 'Solar', '2021-03-25');", "output": "SELECT COUNT(*) FROM RenewableEnergyProjects WHERE region = 'Africa' AND project_type != 'Solar' AND project_start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR);"}
{"input": " '\uac74\uc124\ub178\ub3d9\uc870\ud569' \uc6d4 \ucd5c\ub300 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_members (member_id INT, member_name VARCHAR(255), union_id INT, monthly_salary DECIMAL(10,2)); CREATE TABLE unions (union_id INT, union_name VARCHAR(255)); INSERT INTO unions (union_id, union_name) VALUES (123, 'Transportation Workers Union'); INSERT INTO unions (union_id, union_name) VALUES (456, 'Construction Workers Union'); INSERT INTO union_members (member_id, member_name, union_id, monthly_salary) VALUES (1, 'John Doe', 456, 4000.50); INSERT INTO union_members (member_id, member_name, union_id, monthly_salary) VALUES (2, 'Jane Doe', 456, 4500.25);", "output": "SELECT MAX(monthly_salary) FROM union_members WHERE union_id = (SELECT union_id FROM unions WHERE union_name = 'Construction Workers Union');"}
{"input": " '\uc774\ud0c8\ub9ac\uc544' \uc694\ub9ac\uc758 \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc218\uc640 \ucd1d \uc9c0\ubc29\uc744 \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE cuisine (cuisine_id INT, name VARCHAR(20)); INSERT INTO cuisine (cuisine_id, name) VALUES (1, 'italian'), (2, 'chinese'); CREATE TABLE dishes (dish_id INT, name VARCHAR(50), cuisine_id INT, calories INT, total_fat INT); INSERT INTO dishes (dish_id, name, cuisine_id, calories, total_fat) VALUES (1, 'pizza margherita', 1, 500, 25), (2, 'lasagna', 1, 600, 30), (3, 'fried rice', 2, 700, 20);", "output": "SELECT AVG(calories), AVG(total_fat) FROM dishes WHERE cuisine_id = (SELECT cuisine_id FROM cuisine WHERE name = 'italian');"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uae30\uc220 \ubd84\uc57c\uc758 \uc811\uadfc\uc131 \uae30\ub2a5\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc9c0\ucd9c\uc744 \ud55c \uc0c1\uc704 3\uac1c \uc870\uc9c1\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Organizations (OrgID INT, OrgName TEXT, Country TEXT, Spending FLOAT, LastUpdate DATE); INSERT INTO Organizations (OrgID, OrgName, Country, Spending, LastUpdate) VALUES (1, 'Microsoft', 'USA', 800000, '2020-01-01'); INSERT INTO Organizations (OrgID, OrgName, Country, Spending, LastUpdate) VALUES (2, 'Google', 'USA', 900000, '2019-01-01'); INSERT INTO Organizations (OrgID, OrgName, Country, Spending, LastUpdate) VALUES (3, 'IBM', 'USA', 700000, '2021-01-01'); INSERT INTO Organizations (OrgID, OrgName, Country, Spending, LastUpdate) VALUES (4, 'TCS', 'India', 500000, '2020-01-01');", "output": "SELECT OrgName, Spending FROM (SELECT OrgName, Spending, ROW_NUMBER() OVER (ORDER BY Spending DESC) as rn FROM Organizations WHERE LastUpdate >= (SELECT DATEADD(year, -5, GETDATE())) AND Country = 'USA') t WHERE rn <= 3;"}
{"input": " Blue Origin \ubbf8\uc158\uc758 \ub2e4\uc74c \ucd9c\uc2dc \uc608\uc815\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BlueOrigin (ID INT, Mission VARCHAR(50), LaunchDate DATE); INSERT INTO BlueOrigin (ID, Mission, LaunchDate) VALUES (1, 'New Shepard', '2022-08-01'), (2, 'New Glenn', '2023-02-15'), (3, 'Blue Moon', '2024-01-01');", "output": "SELECT Mission, LEAD(LaunchDate) OVER (ORDER BY LaunchDate) as NextLaunchDate FROM BlueOrigin;"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed\uc758 \uc2dc\ubbfc \ud53c\ub4dc\ubc31\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Feedback (Location VARCHAR(255), ResponseTime INT); INSERT INTO Feedback (Location, ResponseTime) VALUES ('Rural', 120), ('Rural', 150), ('Urban', 90), ('Urban', 100);", "output": "SELECT AVG(ResponseTime) FROM Feedback WHERE Location = 'Rural';"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc5f0\uc18d \ud589 \uac04 \uc2a4\ud2b8\ub9bc \uc218\uc758 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE users (id INT, country VARCHAR(50), stream_count INT); INSERT INTO users (id, country, stream_count) VALUES (1, 'USA', 100), (2, 'Canada', 120), (3, 'USA', 150), (4, 'Mexico', 80);", "output": "SELECT country, stream_count - LAG(stream_count) OVER(PARTITION BY country ORDER BY id) AS stream_count_diff FROM users;"}
{"input": " \uac01 \ub3d9\ubb3c\uc885\uc758 \ucd1d \uac1c\uccb4\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE animals (id INT, species TEXT, population INT); INSERT INTO animals (id, species, population) VALUES (1, 'Tiger', 1200), (2, 'Elephant', 1500), (3, 'Rhinoceros', 800);", "output": "SELECT species, SUM(population) as total_population FROM animals GROUP BY species;"}
{"input": " \ub274\uc695\uacfc \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uc0ac\ub840\uac00 \ubc1c\uc0dd\ud55c \uace0\uac1d\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Clients (ClientID INT, Name TEXT); INSERT INTO Clients VALUES (1, 'Jones'), (2, 'Brown'), (3, 'Davis'); CREATE TABLE NYCases (CaseID INT, ClientID INT, Outcome TEXT); INSERT INTO NYCases VALUES (1, 1, 'Won'), (2, 2, 'Lost'), (3, 3, 'Won'); CREATE TABLE TXCases (CaseID INT, ClientID INT, Outcome TEXT); INSERT INTO TXCases VALUES (1, 1), (2, 3);", "output": "SELECT c.Name FROM Clients c INNER JOIN NYCases n ON c.ClientID = n.ClientID WHERE n.Outcome = 'Won' INTERSECT SELECT c.Name FROM Clients c INNER JOIN TXCases t ON c.ClientID = t.ClientID WHERE t.Outcome = 'Won';"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \ub3c4\uc2dc \uc815\ucc45\uc744 \uc2dc\ud589\ud558\ub294 \ub3c4\uc2dc\uc758 \ubd80\ub3d9\uc0b0 \uac00\uaca9\uc744 10% \uc778\uc0c1\ud558\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Properties(id INT, size FLOAT, price INT, city VARCHAR(20), sustainability VARCHAR(20));INSERT INTO Properties(id, size, price, city, sustainability) VALUES (1, 1200, 500000, 'Seattle', 'Yes'), (2, 1500, 650000, 'Seattle', 'Yes'), (3, 1000, 400000, 'Portland', 'Yes'), (4, 2000, 800000, 'SanFrancisco', 'No');", "output": "UPDATE Properties SET price = price * 1.1 WHERE city IN (SELECT city FROM Properties WHERE sustainability = 'Yes');"}
{"input": "e\uc2a4\ud3ec\uce20 \uce74\ud14c\uace0\ub9ac \uc7a5\ub974\ubcc4 \ucd1d \ub9e4\ucd9c\uacfc \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE eSportsGames (GameID int, GameName varchar(50), Genre varchar(20), Sales int, AvgPlayTime int); INSERT INTO eSportsGames (GameID, GameName, Genre, Sales, AvgPlayTime) VALUES (7, 'GameI', 'Strategy', 9000, 200); INSERT INTO eSportsGames (GameID, GameName, Genre, Sales, AvgPlayTime) VALUES (8, 'GameJ', 'FPS', 11000, 250);", "output": "SELECT Genre, SUM(Sales) as TotalSales, AVG(AvgPlayTime) as AvgPlayTime FROM eSportsGames WHERE Genre IN ('Strategy', 'FPS') GROUP BY Genre;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac01 \uc9c0\uc5ed\uc758 \uae30\ud6c4 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc9c0\ucd9c\ub41c \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc7ac\uc815 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance (id INT, region TEXT, project_type TEXT, finance_amount FLOAT);", "output": "SELECT region, MAX(finance_amount) as max_finance, MIN(finance_amount) as min_finance FROM climate_finance WHERE project_type = 'mitigation' AND year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY region;"}
{"input": " \ud14d\uc0ac\uc2a4\uc8fc\uc758 \ubaa8\ub4e0 \uc7ac\ud5a5 \uad70\uc778 \uace0\uc6a9 \ud1b5\uacc4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE states (id INT, name VARCHAR(255)); INSERT INTO states (id, name) VALUES (1, 'Texas'); CREATE TABLE veteran_stats (id INT, state_id INT, employed INT, unemployed INT); INSERT INTO veteran_stats (id, state_id, employed, unemployed) VALUES (1, 1, 5000, 1000);", "output": "SELECT state_id, employed, unemployed FROM veteran_stats WHERE state_id = (SELECT id FROM states WHERE name = 'Texas');"}
{"input": " \uac01 \uad6d\uac00\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0 \ub300\ud574 5\ub144 \uac04\uaca9\uc73c\ub85c \uac01 \uc5f0\ub839 \uadf8\ub8f9\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (PolicyholderID INT, Age INT, Country VARCHAR(20)); INSERT INTO Policyholders (PolicyholderID, Age, Country) VALUES (1, 25, 'USA'), (2, 30, 'USA'), (3, 45, 'Canada'), (4, 50, 'Canada'), (5, 60, 'Mexico');", "output": "SELECT Country, FLOOR(Age / 5) * 5 AS AgeGroup, COUNT(*) AS PolicyCount FROM Policyholders GROUP BY Country, AgeGroup;"}
{"input": " \uc815\uc2e0\uac74\uac15 \ub3d9\ub4f1 \uaddc\uc815\uc744 \uc900\uc218\ud558\ub294 \uc18c\uc678\ub41c \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \uc815\uc2e0\uac74\uac15 \uc9c4\ub8cc\uc18c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthClinics (ClinicID INT, Location VARCHAR(50), Type VARCHAR(20), ParityCompliance DATE); CREATE TABLE DisadvantagedNeighborhoods (NeighborhoodID INT, Location VARCHAR(50)); INSERT INTO MentalHealthClinics (ClinicID, Location, Type, ParityCompliance) VALUES (1, '123 Main St', 'Psychiatric', '2022-01-01'); INSERT INTO DisadvantagedNeighborhoods (NeighborhoodID, Location) VALUES (1, '123 Main St'); INSERT INTO DisadvantagedNeighborhoods (NeighborhoodID, Location) VALUES (2, '456 Elm St');", "output": "SELECT COUNT(MentalHealthClinics.Location) * 100.0 / (SELECT COUNT(*) FROM MentalHealthClinics INNER JOIN DisadvantagedNeighborhoods ON MentalHealthClinics.Location = DisadvantagedNeighborhoods.Location) AS Percentage FROM MentalHealthClinics INNER JOIN DisadvantagedNeighborhoods ON MentalHealthClinics.Location = DisadvantagedNeighborhoods.Location WHERE ParityCompliance IS NOT NULL;"}
{"input": "\uce90\ub098\ub2e4 \uacf5\ubb34\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc8fc\ubcc4 \ubc0f \uc9c1\uc885\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE provinces (id INT, name VARCHAR(255)); INSERT INTO provinces (id, name) VALUES (1, 'Ontario'), (2, 'Quebec'), (3, 'British Columbia'); CREATE TABLE job_categories (id INT, name VARCHAR(255)); INSERT INTO job_categories (id, name) VALUES (1, 'Management'), (2, 'Administration'), (3, 'Engineering'); CREATE TABLE employees (id INT, province_id INT, job_category_id INT, salary INT); INSERT INTO employees (id, province_id, job_category_id, salary) VALUES (1, 1, 1, 80000), (2, 1, 2, 50000), (3, 2, 1, 85000), (4, 2, 3, 60000);", "output": "SELECT provinces.name, job_categories.name, AVG(employees.salary) AS avg_salary FROM employees INNER JOIN provinces ON employees.province_id = provinces.id INNER JOIN job_categories ON employees.job_category_id = job_categories.id GROUP BY provinces.name, job_categories.name;"}
{"input": " \uc601\uad6d \ub7f0\ub358\uc758 \ud130\ub110 \ud3c9\uade0 \uc218\uba85\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Tunnels (TunnelID INT, Name TEXT, Age INT, City TEXT, Country TEXT); INSERT INTO Tunnels (TunnelID, Name, Age, City, Country) VALUES (1, 'Tunnel1', 25, 'London', 'UK'); INSERT INTO Tunnels (TunnelID, Name, Age, City, Country) VALUES (2, 'Tunnel2', 30, 'London', 'UK'); INSERT INTO Tunnels (TunnelID, Name, Age, City, Country) VALUES (3, 'Tunnel3', 35, 'Manchester', 'UK');", "output": "SELECT AVG(Age) FROM Tunnels WHERE City = 'London';"}
{"input": " \uce74\ub9ac\ube0c\ud574 \uc9c0\uc5ed\uc5d0\uc11c \uc99d\uac70 \uae30\ubc18 \uc815\ucc45 \uc218\ub9bd \ud504\ub85c\uadf8\ub7a8\uc758 \ucd5c\uc18c \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (id INT, region TEXT, program_count INT); INSERT INTO programs (id, region, program_count) VALUES (1, 'Caribbean', 5), (2, 'Middle East', 10), (3, 'South Asia', 15), (4, 'North America', 20), (5, 'Central America', 25);", "output": "SELECT MIN(program_count) FROM programs WHERE region = 'Caribbean';"}
{"input": " \ud658\uacbd \uc704\ubc18\uc744 \uc2e0\uace0\ud55c \ubaa8\ub4e0 \uad11\uc0b0 \ud604\uc7a5\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE environmental_violations (site_id INT, site_name TEXT, violation_date DATE);", "output": "SELECT site_name FROM environmental_violations WHERE violation_date IS NOT NULL;"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544' \uae30\ubd80\uc790\uc758 \ucd1d \uae30\ubd80\uae08 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name VARCHAR(255), state VARCHAR(255)); CREATE TABLE donations (donation_id INT, donor_id INT, donation_date DATE, donation_amount DECIMAL(10,2)); INSERT INTO donors (donor_id, donor_name, state) VALUES (1, 'John Doe', 'California'), (2, 'Jane Smith', 'New York'), (3, 'Bob Johnson', 'California'); INSERT INTO donations (donation_id, donor_id, donation_date, donation_amount) VALUES (1, 1, '2022-01-02', 100), (2, 2, '2022-02-15', 200), (3, 1, '2022-03-10', 150);", "output": "SELECT (SUM(d.donation_amount) * 100.0 / (SELECT SUM(donation_amount) FROM donations)) as donation_percentage FROM donations d JOIN donors don ON d.donor_id = don.donor_id WHERE don.state = 'California';"}
{"input": " \ub274\uc695\uc8fc \uad11\ub300\uc5ed \uc778\ud130\ub137 \uace0\uac1d\uc758 \uc6d4 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_usage (id INT, location VARCHAR(50), data_usage FLOAT); INSERT INTO broadband_usage (id, location, data_usage) VALUES (1, 'New York', 25.6), (2, 'Texas', 30.7), (3, 'California', 28.9);", "output": "SELECT AVG(data_usage) FROM broadband_usage WHERE location = 'New York';"}
{"input": " \ucf5c\ub86c\ube44\uc544\uc640 \ube0c\ub77c\uc9c8\uc758 \uad11\uc0b0 \uc791\uc5c5\uc5d0\uc11c \ucc44\uad74\ub41c \uc11d\ud0c4, \uad6c\ub9ac, \uae08\uc758 \ucd1d\ub7c9\uc740 \uc791\uc5c5 \uc774\ub984\uacfc \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (id INT, country VARCHAR(20), operation_name VARCHAR(30), year INT, coal INT, copper INT, gold INT); INSERT INTO mining_operations (id, country, operation_name, year, coal, copper, gold) VALUES (1, 'Colombia', 'Operation M', 2021, 1000, 500, 200); INSERT INTO mining_operations (id, country, operation_name, year, coal, copper, gold) VALUES (2, 'Colombia', 'Operation N', 2021, 1200, 600, 250); INSERT INTO mining_operations (id, country, operation_name, year, coal, copper, gold) VALUES (3, 'Brazil', 'Operation O', 2021, 800, 400, 180);", "output": "SELECT operation_name, year, SUM(coal) AS total_coal, SUM(copper) AS total_copper, SUM(gold) AS total_gold FROM mining_operations WHERE country IN ('Colombia', 'Brazil') GROUP BY operation_name, year;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ube44\uc0c1\ub300\uc751 \ubc0f \uc7ac\ud574\ubcf5\uad6c \ub178\ub825\uc5d0 \uc18c\uc694\ub418\ub294 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Regions (RId INT, Name VARCHAR(50)); CREATE TABLE EmergencyResponses (ResponseId INT, RId INT, Cost INT); CREATE TABLE DisasterRecovery (RecoveryId INT, RId INT, Cost INT);", "output": "SELECT R.Name, SUM(ER.Cost) + SUM(DR.Cost) FROM Regions R LEFT JOIN EmergencyResponses ER ON R.RId = ER.RId LEFT JOIN DisasterRecovery DR ON R.RId = DR.RId GROUP BY R.Name;"}
{"input": " \uc791\ub144\uc5d0 \uc815\ucc45 \ubcc0\ud654\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \ud589\uc0ac\uc5d0 2\ud68c \uc774\uc0c1 \ucc38\uc5ec\ud55c \uc639\ud638\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Advocates (AdvocateID INT, Name VARCHAR(50), YearsOfExperience INT); CREATE TABLE AdvocacyEvents (EventID INT, Name VARCHAR(50), Date DATE, Description TEXT, Focus VARCHAR(50)); CREATE TABLE AdvocateParticipation (AdvocateID INT, EventID INT, Role VARCHAR(50));", "output": "SELECT a.AdvocateID, a.Name, a.YearsOfExperience FROM Advocates a JOIN AdvocateParticipation ap ON a.AdvocateID = ap.AdvocateID JOIN AdvocacyEvents e ON ap.EventID = e.EventID WHERE e.Date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE AND e.Focus = 'policy change' GROUP BY a.AdvocateID HAVING COUNT(ap.EventID) > 2;"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc778\ud504\ub77c \uac1c\ubc1c \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ubcf5\uc6d0\ub825 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists Projects (id INT, name VARCHAR(50), type VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO Projects (id, name, type, budget) VALUES (1, 'Seawall', 'Resilience', 5000000.00), (2, 'Floodgate', 'Resilience', 3000000.00), (3, 'Bridge', 'Transportation', 8000000.00), (4, 'Highway', 'Transportation', 12000000.00), (5, 'Levee', 'Resilience', 2000000.00), (6, 'Pump Station', 'Resilience', 1500000.00);", "output": "SELECT type, AVG(budget) FROM Projects WHERE type LIKE 'Resilience%' GROUP BY type;"}
{"input": " \uac00\uc7a5 \ub192\uc740 \uc5f0\ubd09\uc744 \ubc1b\uc740 \uc120\uc218\ub294 \uba87 \uac1c\uc758 \ud648\ub7f0\uc744 \ucce4\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE hits (id INT, player VARCHAR(50), team VARCHAR(50), type VARCHAR(10), salary INT);", "output": "SELECT SUM(type = 'Home Run') FROM hits WHERE salary = (SELECT MAX(salary) FROM hits);"}
{"input": " \uac01 \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc758\ub958 \uc0c1\uc704 3\uac1c\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50));CREATE TABLE SalesData (SaleID INT, ManufacturerID INT, GarmentID INT, SalesQuantity INT);", "output": "SELECT M.ManufacturerName, G.GarmentName, SUM(SD.SalesQuantity) AS TotalSales FROM SalesData SD JOIN Manufacturers M ON SD.ManufacturerID = M.ManufacturerID JOIN Garments G ON SD.GarmentID = G.GarmentID GROUP BY M.ManufacturerName, G.GarmentName ORDER BY TotalSales DESC, M.ManufacturerName, G.GarmentName LIMIT 3;"}
{"input": " \ud654\uc790 \uc218\uc5d0 \ub530\ub978 \uc5b8\uc5b4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE languages_2 (id INT, language VARCHAR(50), speakers INT); INSERT INTO languages_2 (id, language, speakers) VALUES (1, 'English', 379000000), (2, 'Spanish', 460000000), (3, 'French', 76000000);", "output": "SELECT language, speakers, RANK() OVER (ORDER BY speakers DESC) AS rank FROM languages_2;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud55c \uae30\uc220\uc5d0 \uc885\uc0ac\ud558\ub294 \uc870\uc9c1\uc774 \ucc3d\ucd9c\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Revenue (id INT, organization VARCHAR(50), revenue DECIMAL(5,2), month VARCHAR(10), year INT); INSERT INTO Revenue (id, organization, revenue, month, year) VALUES (1, 'Equal Tech', 15000.00, 'January', 2021), (2, 'Tech Learning', 20000.00, 'February', 2021), (3, 'Global Connect', 10000.00, 'March', 2021);", "output": "SELECT SUM(revenue) FROM Revenue WHERE organization IN (SELECT DISTINCT organization FROM Revenue WHERE category = 'Social Good') AND month IN ('January', 'February', 'March') AND year = 2021;"}
{"input": " \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (product_category VARCHAR(255), environmental_impact_score FLOAT); INSERT INTO environmental_impact (product_category, environmental_impact_score) VALUES ('Polymers', 5.2), ('Dyes', 6.1), ('Solvents', 4.9);", "output": "SELECT product_category, AVG(environmental_impact_score) OVER (PARTITION BY product_category) AS avg_impact_score FROM environmental_impact;"}
{"input": " \ubd81\ubbf8\uc5d0\uc11c \uc544\ud504\ub9ac\uce74\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE africa_countries (country VARCHAR(50)); INSERT INTO africa_countries (country) VALUES ('Egypt'), ('Morocco'), ('Tunisia'), ('South Africa'), ('Kenya'); CREATE TABLE tourist_visits (country VARCHAR(50), region VARCHAR(50), visitors INT); INSERT INTO tourist_visits (country, region, visitors) VALUES ('Egypt', 'North America', 100000), ('Morocco', 'North America', 120000), ('Tunisia', 'North America', 80000), ('South Africa', 'Europe', 200000), ('Kenya', 'North America', 150000);", "output": "SELECT SUM(visitors) FROM tourist_visits WHERE country IN (SELECT country FROM africa_countries) AND region = 'North America';"}
{"input": " \ud638\uc8fc\uc640 \ub274\uc9c8\ub79c\ub4dc\uc758 \uc804\uccb4 \ub18d\ucd0c \uc9c0\uc5ed\uc5d0 \ucd1d \uba87 \uba85\uc758 \uc758\ub8cc \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE HealthcareProviders (Country VARCHAR(20), Location VARCHAR(50), ProviderType VARCHAR(30), NumberOfProviders INT); INSERT INTO HealthcareProviders (Country, Location, ProviderType, NumberOfProviders) VALUES ('Australia', 'Rural Area A', 'Doctor', 15), ('Australia', 'Rural Area B', 'Nurse', 20), ('New Zealand', 'Rural Area C', 'Doctor', 10), ('New Zealand', 'Rural Area D', 'Physiotherapist', 12);", "output": "SELECT SUM(NumberOfProviders) FROM HealthcareProviders WHERE Country IN ('Australia', 'New Zealand') AND Location LIKE '%Rural Area%';"}
{"input": " \ub3c4\ucfc4\uc640 \uc11c\uc6b8\uc5d0\uc11c \uc804\uae30\ubc84\uc2a4\uc640 \uc790\uc728\uc8fc\ud589\ud0dd\uc2dc\ub97c \uc774\uc6a9\ud55c \ucd1d \uc6b4\ud589\ud69f\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE tokyo_ev_trips (vehicle_id INT, trips INT, type VARCHAR(20)); CREATE TABLE seoul_ev_trips (vehicle_id INT, trips INT, type VARCHAR(20)); INSERT INTO tokyo_ev_trips (vehicle_id, trips, type) VALUES (1, 10, 'Bus'), (2, 20, 'Car'), (3, 30, 'Taxi'); INSERT INTO seoul_ev_trips (vehicle_id, trips, type) VALUES (4, 40, 'Bus'), (5, 50, 'Car'), (6, 60, 'Taxi');", "output": "SELECT SUM(trips) FROM tokyo_ev_trips WHERE type IN ('Bus', 'Taxi') UNION ALL SELECT SUM(trips) FROM seoul_ev_trips WHERE type IN ('Bus', 'Taxi');"}
{"input": " \uc6d4\uac04 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc5d0\ub294 \uc5b4\ub5a4 \ubcc0\ud654\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE VolunteerHours (Id INT, VolunteerId INT, Hours DECIMAL(10,2), HoursDate DATE); INSERT INTO VolunteerHours VALUES (1, 1, 10.00, '2022-01-01'), (2, 1, 15.00, '2022-02-01');", "output": "SELECT EXTRACT(MONTH FROM HoursDate) as Month, (LAG(SUM(Hours)) OVER (PARTITION BY VolunteerId ORDER BY HoursDate) - SUM(Hours)) as HoursChange FROM VolunteerHours GROUP BY Month;"}
{"input": " \uae30\ud6c4\ubcc0\ud654\uc5d0 \uad00\ud574 \ucd9c\ud310\ub41c \ucd1d \uae30\uc0ac \uc218\uc640 \ubbf8\uad6d\uc5d0\uc11c \uc815\uce58 \ub274\uc2a4\ub97c \uc120\ud638\ud558\ub294 \ub3c5\uc790\uc758 \ucd5c\uc18c \uc5f0\ub839\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE news_articles (id INT, title VARCHAR(100), publication_date DATE, topic VARCHAR(50), publication_country VARCHAR(50)); INSERT INTO news_articles (id, title, publication_date, topic, publication_country) VALUES (1, 'Climate Change: A Growing Crisis', '2022-02-12', 'Climate Change', 'United States'); CREATE TABLE readers (id INT, name VARCHAR(50), age INT, country VARCHAR(50), news_preference VARCHAR(50)); INSERT INTO readers (id, name, age, country, news_preference) VALUES (1, 'John Doe', 35, 'Canada', 'Sports'), (2, 'Jane Smith', 28, 'Canada', 'Politics'), (3, 'Jim Brown', 45, 'United States', 'Sports'), (4, 'Emma Green', 22, 'United Kingdom', 'Politics');", "output": "SELECT COUNT(*) FROM news_articles WHERE topic = 'Climate Change' AND publication_country = 'United States' UNION SELECT MIN(age) FROM readers WHERE country = 'United States' AND news_preference = 'Politics';"}
{"input": " \ubaa8\ubc14\uc77c \uace0\uac1d \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uc8fc\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE mobile_customers (customer_id INT, state VARCHAR(20)); INSERT INTO mobile_customers (customer_id, state) VALUES (1, 'NY'), (2, 'CA'), (3, 'TX'), (4, 'FL'), (5, 'NY'), (6, 'CA'), (7, 'NJ'), (8, 'IL'), (9, 'TX');", "output": "SELECT state, COUNT(*) as num_customers FROM mobile_customers GROUP BY state ORDER BY num_customers DESC LIMIT 5;"}
{"input": " \ucd1d \uc790\uae08\uc774 \uac00\uc7a5 \ub9ce\uace0 \uac00\uc7a5 \ub0ae\uc740 \ud1a0\ucc29 \uc2dd\ub7c9 \uc2dc\uc2a4\ud15c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE indigenous_food_systems (id INT, name TEXT, total_funding FLOAT); INSERT INTO indigenous_food_systems (id, name, total_funding) VALUES (1, 'System 1', 20000.0), (2, 'System 2', 30000.0), (3, 'System 3', 15000.0);", "output": "SELECT name, total_funding FROM (SELECT name, total_funding, ROW_NUMBER() OVER (ORDER BY total_funding DESC) as rank FROM indigenous_food_systems) as ranked_systems WHERE rank = 1 OR rank = (SELECT COUNT(*) FROM indigenous_food_systems) ORDER BY total_funding;"}
{"input": " \ub300\ud55c\ubbfc\uad6d \uc11c\uc6b8\uc758 \ubaa8\ub4e0 \uc9c0\ud558\ucca0 \ub178\uc120\uc758 \ud3c9\uade0 \uae38\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subway (id INT, name VARCHAR(255), location VARCHAR(255), length FLOAT); INSERT INTO subway (id, name, location, length) VALUES (1, 'Line 1', 'Seoul, South Korea', 19.6);", "output": "SELECT AVG(length) FROM subway WHERE location = 'Seoul, South Korea';"}
{"input": " \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uac01 \uad6d\uac00\uc758 \uac00\uc7a5 \ube60\ub978 \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SatelliteData (SatelliteID INT, Country VARCHAR(50), LaunchDate DATE);", "output": "SELECT SatelliteData.Country, MIN(SatelliteData.LaunchDate) as EarliestLaunchDate FROM SatelliteData GROUP BY SatelliteData.Country;"}
{"input": " \uc6d4\ubcc4 \ucd1d \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ucc44\uad74 \uc791\uc5c5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine_carbon_emissions (emission_date DATE, mine_id INT, carbon_emissions INT); INSERT INTO mine_carbon_emissions (emission_date, mine_id, carbon_emissions) VALUES ('2021-01-15', 1, 1000), ('2021-02-03', 1, 1500), ('2021-03-12', 2, 2000), ('2021-04-20', 3, 1200), ('2021-05-05', 1, 1800), ('2021-06-18', 2, 2500), ('2021-07-02', 3, 1500), ('2021-08-16', 4, 1800), ('2021-09-01', 1, 2200), ('2021-10-14', 2, 3000), ('2021-11-29', 3, 2000), ('2021-12-15', 4, 2500); CREATE TABLE mine_info (mine_id INT, mine_name TEXT); INSERT INTO mine_info (mine_id, mine_name) VALUES (1, 'Golden Mine'), (2, 'Silver Mine'), (3, 'Bronze Mine'), (4, 'Platinum Mine');", "output": "SELECT mine_id, EXTRACT(MONTH FROM emission_date) AS month, SUM(carbon_emissions) OVER (PARTITION BY mine_id ORDER BY EXTRACT(MONTH FROM emission_date)) AS total_carbon_emissions FROM mine_carbon_emissions JOIN mine_info ON mine_carbon_emissions.mine_id = mine_info.mine_id ORDER BY total_carbon_emissions DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \ud574\uc548 \uce68\uc2dd\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE coastal_erosion (id INT, community VARCHAR(255), erosion_rate FLOAT, year INT); CREATE TABLE indigenous_communities (id INT, name VARCHAR(255), location VARCHAR(255));", "output": "SELECT i.name, (c2.erosion_rate - c1.erosion_rate) AS erosion_increase FROM indigenous_communities i JOIN coastal_erosion c1 ON i.location = c1.community AND c1.year = YEAR(CURDATE()) - 5 JOIN coastal_erosion c2 ON i.location = c2.community AND c2.year = YEAR(CURDATE()) ORDER BY erosion_increase DESC;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc704\uce58\ud55c \uc9c0\uc5ed \ubcf4\uac74\uc18c\uc5d0\uc11c \ub3c5\uac10 \uc608\ubc29 \uc8fc\uc0ac\ub97c \ub9de\uc740 \ubaa8\ub4e0 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_centers (id INT, name TEXT, state TEXT); INSERT INTO community_health_centers (id, name, state) VALUES (1, 'Center A', 'California'), (2, 'Center B', 'California'); CREATE TABLE flu_shots (id INT, patient_id INT, center_id INT); INSERT INTO flu_shots (id, patient_id, center_id) VALUES (1, 101, 1), (2, 102, 1), (3, 103, 2); CREATE TABLE patients (id INT, age INT); INSERT INTO patients (id, age) VALUES (101, 45), (102, 32), (103, 50);", "output": "SELECT AVG(p.age) FROM patients p JOIN flu_shots fs ON p.id = fs.patient_id JOIN community_health_centers chc ON fs.center_id = chc.id WHERE chc.state = 'California';"}
{"input": " \uac01\uad6d \ub09c\ubbfc\ub4e4\uc774 \ubc1b\ub294 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, country TEXT, donation FLOAT); INSERT INTO donors (id, name, country, donation) VALUES (1, 'John Doe', 'USA', 100.00), (2, 'Jane Smith', 'Canada', 150.00); CREATE TABLE refugee_donations (id INT, donor_id INT, refugee_id INT, donation FLOAT); INSERT INTO refugee_donations (id, donor_id, refugee_id, donation) VALUES (1, 1, 101, 50.00), (2, 1, 102, 25.00), (3, 2, 103, 75.00), (4, 2, 104, 125.00); CREATE TABLE refugees (id INT, name TEXT, country TEXT); INSERT INTO refugees (id, name, country) VALUES (101, 'Ahmed', 'Syria'), (102, 'Fatima', 'Syria'), (103, 'Pedro', 'Venezuela'), (104, 'Mariana', 'Venezuela');", "output": "SELECT r.country, AVG(d.donation) as avg_donation FROM refugee_donations d JOIN donors dd ON d.donor_id = dd.id JOIN refugees r ON d.refugee_id = r.id GROUP BY r.country;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \ud3c9\uade0 \uc608\uc0b0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE budget (id INT, dept VARCHAR(50), program VARCHAR(50), amount INT); INSERT INTO budget (id, dept, program, amount) VALUES (1, 'Disability Services', 'Accessible Technology', 50000), (2, 'Disability Services', 'Sign Language Interpretation', 75000), (3, 'Human Resources', 'Diversity Training', 30000), (4, 'Disability Services', 'Assistive Listening Devices', 60000);", "output": "SELECT dept, AVG(amount) as avg_budget FROM budget GROUP BY dept;"}
{"input": " \uc9c0\ub09c\uc8fc '\uc608\uc220' \uad00\ub828 \ucf58\ud150\uce20\ub97c \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790\uc758 \ucd5c\uc18c \ud314\ub85c\uc6cc \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA usersdata; CREATE TABLE user_followers(user_id INT, followers INT, content_interests VARCHAR(255), post_date DATE); INSERT INTO usersdata.user_followers (user_id, followers, content_interests, post_date) VALUES (1, 1200, 'art', '2022-01-01'); INSERT INTO usersdata.user_followers (user_id, followers, content_interests, post_date) VALUES (2, 1700, 'art', '2022-01-02');", "output": "SELECT MIN(followers) FROM usersdata.user_followers WHERE post_date >= (SELECT CURDATE() - INTERVAL 7 DAY) AND content_interests LIKE '%art%';"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0 \ubcf8\uc0ac\ub97c \ub454 \ud68c\uc0ac\uc5d0 \uccb4\uacb0\ub41c \uad70\uc0ac \uc7a5\ube44 \uacc4\uc57d\uc758 \ucd1d \ube44\uc6a9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE military_equipment_contracts (contract_id INT, company_name VARCHAR(100), company_state VARCHAR(50), cost INT);", "output": "SELECT SUM(cost) FROM military_equipment_contracts WHERE company_state = 'Texas';"}
{"input": " 2020\ub144 4\ubd84\uae30\uc5d0 \uc18c\uc678\ub41c \uc9c0\uc5ed\uc0ac\ud68c \uae30\ubd80\uc790\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, DonationDate date, DonationAmount numeric, DonorCommunity varchar(50));", "output": "SELECT AVG(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonationDate BETWEEN '2020-10-01' AND '2020-12-31' AND DonorCommunity IN ('Historically Black Colleges and Universities', 'Indigenous Communities', 'LGBTQ+ Organizations')) AS UnderrepresentedDonors;"}
{"input": " \ud14d\uc0ac\uc2a4\uc758 \ud2b9\uc815 \uc2dd\ub8cc\ud488\uc810\uc5d0\uc11c\ub294 \uba87 \uba85\uc758 \ud604\uc9c0 \uacf5\uae09\uc5c5\uccb4\ub97c \uc0ac\uc6a9\ud569\ub2c8\uae4c?", "context": "CREATE TABLE GroceryStores (StoreID int, Name varchar(50), Location varchar(50)); INSERT INTO GroceryStores (StoreID, Name, Location) VALUES (1, 'Farm Fresh', 'Texas'); CREATE TABLE Suppliers (SupplierID int, Name varchar(50), GroceryStoreID int); INSERT INTO Suppliers (SupplierID, Name, GroceryStoreID) VALUES (1, 'Local Farm', 1), (2, 'Texas Ranch', 1);", "output": "SELECT COUNT(DISTINCT Suppliers.SupplierID) FROM Suppliers WHERE Suppliers.GroceryStoreID = (SELECT GroceryStoreID FROM GroceryStores WHERE Name = 'Farm Fresh' AND Location = 'Texas');"}
{"input": " \uac01 \uc6b4\uc1a1 \uc218\ub2e8\uc5d0 \ub530\ub978 \uc77c\ubc18 \ucc28\ub7c9\uacfc \uc804\uae30 \ucc28\ub7c9\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transportation_modes (id INT, name VARCHAR(20)); CREATE TABLE electric_vehicles (id INT, mode_id INT, vehicle_count INT); CREATE TABLE conventional_vehicles (id INT, mode_id INT, vehicle_count INT); INSERT INTO transportation_modes (id, name) VALUES (1, 'Car'), (2, 'Truck'), (3, 'Bus'); INSERT INTO electric_vehicles (id, mode_id, vehicle_count) VALUES (1, 1, 1000), (2, 2, 500), (3, 3, 200); INSERT INTO conventional_vehicles (id, mode_id, vehicle_count) VALUES (4, 1, 3000), (5, 2, 2000), (6, 3, 1000);", "output": "SELECT tm.name, (SUM(ev.vehicle_count) / SUM(cv.vehicle_count)) AS ratio FROM transportation_modes tm JOIN electric_vehicles ev ON tm.id = ev.mode_id JOIN conventional_vehicles cv ON tm.id = cv.mode_id GROUP BY tm.name;"}
{"input": " 1\uc6d4 \ud55c \ub2ec \ub3d9\uc548 '\ube0c\ub77c\uc9c8'\uc758 \uc77c\ubcc4 \uc0c1\uc704 2\uac1c \ud0dc\uc591 \ubcf5\uc0ac\ub7c9 \uac12\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE iot_sensors (id INT, name TEXT, country TEXT); INSERT INTO iot_sensors (id, name, country) VALUES (1, 'IS1', 'Brazil'), (2, 'IS2', 'Argentina'); CREATE TABLE solar_radiation (id INT, sensor_id INT, timestamp TIMESTAMP, radiation FLOAT); INSERT INTO solar_radiation (id, sensor_id, timestamp, radiation) VALUES (1, 1, '2021-01-01 12:00:00', 800), (2, 1, '2021-01-01 16:00:00', 900), (3, 1, '2021-01-01 20:00:00', 750), (4, 2, '2021-01-01 12:00:00', 650), (5, 2, '2021-01-01 16:00:00', 700), (6, 2, '2021-01-01 20:00:00', 600);", "output": "SELECT sensor_id, timestamp, radiation FROM (SELECT sensor_id, timestamp, radiation, RANK() OVER (PARTITION BY timestamp ORDER BY radiation DESC) rnk FROM solar_radiation WHERE country = 'Brazil' AND EXTRACT(MONTH FROM timestamp) = 1) t WHERE rnk <= 2;"}
{"input": " \uac01\uad6d\uc774 \uc81c\uc870\ud55c \uc6b0\uc8fc\uc120\uc758 \ud3c9\uade0 \uc9c8\ub7c9", "context": "CREATE TABLE Spacecraft_Manufacturing(name VARCHAR(50), mass FLOAT, country VARCHAR(50));", "output": "CREATE VIEW Spacecraft_Per_Country AS SELECT country, AVG(mass) AS avg_mass FROM Spacecraft_Manufacturing GROUP BY country;"}
{"input": " \"\ucef4\ud4e8\ud130\uacf5\ud559\" \ud559\uacfc\uc5d0 \uc218\uc5ec\ub41c \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name VARCHAR(20)); INSERT INTO departments (department_id, department_name) VALUES (1, 'Computer Science'), (2, 'Mathematics'), (3, 'Physics'); CREATE TABLE research_grants (grant_id INT, title VARCHAR(50), amount DECIMAL(10,2), principal_investigator VARCHAR(50), department_id INT, start_date DATE, end_date DATE); INSERT INTO research_grants (grant_id, title, amount, principal_investigator, department_id, start_date, end_date) VALUES (1, 'Project A', 100000, 'John Doe', 1, '2022-01-01', '2024-12-31'), (2, 'Project B', 200000, 'Jane Smith', 1, '2021-07-01', '2023-06-30');", "output": "SELECT SUM(amount) FROM research_grants WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Computer Science');"}
{"input": " \uc9d1\ud569 \uc5f0\uc0b0\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub450 \uae30\uac04\uc744 \ube44\uad50\ud558\uc5ec 2022\ub144 1\ubd84\uae30\uc640 2022\ub144 2\ubd84\uae30\uc758 \uc2e0\uaddc \uace0\uac1d \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, registration_date DATE); INSERT INTO customers (customer_id, registration_date) VALUES (1, '2022-01-05'), (2, '2022-02-10'), (3, '2022-03-25'), (4, '2022-04-15'), (5, '2022-05-08'), (6, '2022-06-22');", "output": "SELECT COUNT(*) FROM customers WHERE registration_date BETWEEN '2022-01-01' AND '2022-03-31' INTERSECT SELECT COUNT(*) FROM customers WHERE registration_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"input": " 2021\ub144 \uad50\uc721\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc608\uc0b0\uc744 \ubc30\uc815\ubc1b\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE CityBudget (CityName VARCHAR(50), Service VARCHAR(50), Allocation INT, Year INT);", "output": "SELECT CityName, MAX(Allocation) FROM CityBudget WHERE Service = 'Education' AND Year = 2021 GROUP BY CityName;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uc720\uae30\ub18d \uc2dd\ud488\uc758 \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicMeals (id INT, name VARCHAR(50), calories INT); INSERT INTO OrganicMeals (id, name, calories) VALUES (1, 'Quinoa Salad', 350), (2, 'Tofu Stir Fry', 450), (3, 'Lentil Soup', 250);", "output": "SELECT AVG(calories) FROM OrganicMeals;"}
{"input": " \uc81c\uc870 \uacf5\uc815\ubcc4 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc6d4\ubcc4, \uacf5\uae09\uc5c5\uccb4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_consumption (consumption_id INT, process_id INT, supplier_id INT, consumption_date DATE, water_consumption INT); INSERT INTO water_consumption (consumption_id, process_id, supplier_id, consumption_date, water_consumption) VALUES (1, 1, 1, '2022-02-01', 500), (2, 1, 2, '2022-02-05', 600);", "output": "SELECT process_id, supplier_id, DATE_TRUNC('month', consumption_date) AS month, AVG(water_consumption) AS avg_water_consumption, RANK() OVER (PARTITION BY process_id, supplier_id ORDER BY AVG(water_consumption) DESC) AS ranking FROM water_consumption GROUP BY process_id, supplier_id, month ORDER BY avg_water_consumption DESC;"}
{"input": " \uac01 \uc18c\uc15c \ubbf8\ub514\uc5b4 \ud50c\ub7ab\ud3fc\uc5d0 \ub300\ud55c \ucd1d \ucc38\uc5ec \uc9c0\ud45c\ub97c \ud45c\uc2dc\ud558\ub294 \uc0c8 \ubcf4\uae30\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE social_media_engagement (id INT PRIMARY KEY, platform VARCHAR(15), likes INT, shares INT, comments INT);", "output": "CREATE VIEW total_social_media_engagement AS SELECT platform, SUM(likes) AS total_likes, SUM(shares) AS total_shares, SUM(comments) AS total_comments FROM social_media_engagement GROUP BY platform;"}
{"input": " 2020\ub144\uc5d0 \uc720\ud2f8\ub9ac\ud2f0 \ud68c\uc0ac\uac00 \ub2ec\uc131\ud55c \ucd5c\ub300 \ud0c4\uc18c \uc0c1\uc1c4\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE utilities (id INT, company_name VARCHAR(50), carbon_offset_tonnes INT, year INT); INSERT INTO utilities (id, company_name, carbon_offset_tonnes, year) VALUES (1, 'Green Power Inc.', 120000, 2020), (2, 'EcoEnergy Ltd.', 150000, 2019), (3, 'Clean Energy Co.', 180000, 2020), (4, 'Renewable Resources Inc.', 90000, 2020);", "output": "SELECT MAX(carbon_offset_tonnes) FROM utilities WHERE year = 2020;"}
{"input": " \uc9c0\ub09c \ub2ec \uad11\uace0 \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uac01 \uad11\uace0\uc8fc\uc758 \ucd1d \uc218\uc775\uacfc \ub178\ucd9c\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE advertisers (id INT, name VARCHAR(50)); CREATE TABLE campaigns (id INT, advertiser_id INT, start_date DATE, end_date DATE); CREATE TABLE ad_performance (campaign_id INT, impressions INT, revenue FLOAT);", "output": "SELECT a.name AS advertiser, SUM(ap.revenue) AS total_revenue, SUM(ap.impressions) AS total_impressions FROM ad_performance ap JOIN campaigns c ON ap.campaign_id = c.id JOIN advertisers a ON c.advertiser_id = a.id WHERE ap.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY a.name;"}
{"input": " '\uae30\uc220' \uc0b0\uc5c5\uc758 \uac01 \ubd80\uc11c\ubcc4 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name TEXT);   CREATE TABLE employees (employee_id INT, employee_name TEXT, department_id INT, industry_id INT);   CREATE TABLE industries (industry_id INT, industry_name TEXT);   INSERT INTO departments VALUES (1, 'HR'), (2, 'Marketing'), (3, 'IT'), (4, 'Finance');   INSERT INTO employees VALUES (1, 'John', 3, 2), (2, 'Jane', 2, 2), (3, 'Bob', 3, 1), (4, 'Alice', 3, 1);   INSERT INTO industries VALUES (1, 'manufacturing'), (2, 'technology'), (3, 'finance'), (4, 'retail');", "output": "SELECT departments.department_name, COUNT(employees.employee_id) FROM departments INNER JOIN employees ON departments.department_id = employees.department_id INNER JOIN industries ON employees.industry_id = industries.industry_id WHERE industries.industry_name = 'technology' GROUP BY departments.department_name;"}
{"input": " \ud558\ub8e8\uc5d0 \uac70\ub798 \ud69f\uc218\uac00 \uac00\uc7a5 \uc801\uc740 \ub514\uc9c0\ud138 \uc790\uc0b0\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE transactions (asset TEXT, tx_date DATE); INSERT INTO transactions (asset, tx_date) VALUES ('Securitize', '2021-01-01'), ('Securitize', '2021-01-02'), ('Polymath', '2021-01-01'), ('Polymath', '2021-01-02'), ('Polymath', '2021-01-03');", "output": "SELECT asset, MIN(tx_count) FROM (SELECT asset, COUNT(*) AS tx_count FROM transactions GROUP BY asset, tx_date) AS subquery GROUP BY asset;"}
{"input": " \uc8fc\uac70\uc6a9 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud574 \uac01 \uc8fc\uc5d0\uc11c \ubc1c\uae09\ub41c \ucd1d \ud5c8\uac00 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Permits (PermitID INT, ProjectID INT, PermitType CHAR(1), PermitDate DATE, State CHAR(2));", "output": "SELECT State, COUNT(*) FROM Permits WHERE PermitType='R' GROUP BY State;"}
{"input": " '\ud589\uc815' \ubd80\uc11c\uc5d0\uc11c \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \uc5f0\ubd09\uc744 \ucc3e\uc73c\uc2dc\ub098\uc694?", "context": "CREATE TABLE departments (id INT, name VARCHAR(50)); CREATE TABLE employees (id INT, name VARCHAR(50), dept_id INT, salary DECIMAL(10, 2));", "output": "SELECT salary FROM (SELECT salary FROM employees WHERE dept_id = (SELECT id FROM departments WHERE name = 'administrative') ORDER BY salary DESC LIMIT 2) t ORDER BY salary LIMIT 1;"}
{"input": " ESA\uc758 \uc6b0\uc8fc \uc784\ubb34 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceMissions (name TEXT, agency TEXT, cost INTEGER);INSERT INTO SpaceMissions (name, agency, cost) VALUES ('Herschel Space Observatory', 'ESA', 1400000000); INSERT INTO SpaceMissions (name, agency, cost) VALUES ('Gaia Mission', 'ESA', 900000000);", "output": "SELECT SUM(cost) FROM SpaceMissions WHERE agency = 'ESA';"}
{"input": "\"disability_services\" \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ud558\ub294 \ud559\uc0dd\uacfc \uad50\uc9c1\uc6d0\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation BOOLEAN); CREATE TABLE students (id INT, name VARCHAR(50), accommodation BOOLEAN);", "output": "SELECT COUNT(*) FROM disability_services.staff WHERE accommodation = TRUE UNION SELECT COUNT(*) FROM disability_services.students WHERE accommodation = TRUE;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc778\ub3c4\uc5d0\uc11c \ucc44\uad74\ub41c \ud76c\ud1a0\ub958 \uc6d0\uc18c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mines (id INT, country VARCHAR(255), mineral VARCHAR(255), quantity INT, year INT); INSERT INTO mines (id, country, mineral, quantity, year) VALUES (1, 'India', 'Rare Earth Elements', 100, 2000), (2, 'India', 'Rare Earth Elements', 120, 2001), (3, 'India', 'Rare Earth Elements', 140, 2002);", "output": "SELECT year, SUM(quantity) OVER (ORDER BY year) FROM mines WHERE country = 'India' AND mineral = 'Rare Earth Elements';"}
{"input": " \uc7a5\ube44\uac00 \ub3c5\uc77c\uc5d0\uc11c \uc81c\uc870\ub41c \uacbd\uc6b0 \uad70\uc0ac \uc7a5\ube44 \uac00\uaca9\uc744 5% \uc778\uc0c1\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE military_equipment(id INT, name VARCHAR(50), price DECIMAL(10,2), country_of_origin VARCHAR(50)); INSERT INTO military_equipment VALUES (1, 'Tank A1', 1000000, 'Germany'); CREATE TABLE price_adjustments(id INT, equipment_id INT, adjustment DECIMAL(10,2));", "output": "UPDATE military_equipment SET price = price * 1.05 WHERE id IN (SELECT equipment_id FROM price_adjustments WHERE country_of_origin = 'Germany');"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \uace0\uc720 \uae30\ubd80\uc790 \uc218\uc640 \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, ProgramID INT, DonationAmount DECIMAL); INSERT INTO Donations (DonationID, DonorID, ProgramID, DonationAmount) VALUES (1, 1, 1, 150.00), (2, 2, 1, 120.00), (3, 3, 2, 90.00), (4, 1, 3, 100.00), (5, 4, 1, 160.00), (6, 1, 2, 180.00), (7, 2, 2, 130.00), (8, 3, 3, 110.00);", "output": "SELECT Programs.Name, COUNT(DISTINCT Donors.DonorID) as NumDonors, SUM(Donations.DonationAmount) as TotalDonations FROM Programs JOIN Donations ON Programs.ProgramID = Donations.ProgramID JOIN Donors ON Donations.DonorID = Donors.DonorID GROUP BY Programs.Name;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ub300\ucd9c\uc744 \ubc1b\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc774\uc804\uc5d0 \ub300\ucd9c\uc744 \ubc1b\uc740 \uc801\uc774 \uc788\ub294 \uace0\uac1d\uc744 \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, has_loan BOOLEAN); INSERT INTO clients (client_id, has_loan) VALUES (1, true), (2, false), (3, true), (4, true), (5, false); CREATE TABLE loans (loan_id INT, client_id INT, loan_date DATE); INSERT INTO loans (loan_id, client_id, loan_date) VALUES (1001, 1, '2021-02-01'), (1002, 3, '2021-05-01'), (1003, 4, '2022-03-01'), (1004, 5, '2021-09-01');", "output": "SELECT client_id FROM clients INNER JOIN loans ON clients.client_id = loans.client_id WHERE clients.has_loan = false AND loans.loan_date < DATE_SUB(NOW(), INTERVAL 1 YEAR) AND loans.client_id IN (SELECT client_id FROM loans GROUP BY client_id HAVING COUNT(client_id) > 1);"}
{"input": "\uac01 \uc9c0\uc5ed\uc758 \ucd1d \ub3d9\ubb3c \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE animal_populations (id INT, species VARCHAR(50), population INT, region VARCHAR(50)); INSERT INTO animal_populations (id, species, population, region) VALUES (1, 'Giraffe', 1000, 'Africa'), (2, 'Elephant', 500, 'Asia'), (3, 'Lion', 200, 'Africa'), (4, 'Rhinoceros', 100, 'Asia'), (5, 'Hippopotamus', 300, 'Africa'), (6, 'Polar Bear', 50, 'Arctic'), (7, 'Penguin', 250, 'Antarctica');", "output": "SELECT region, SUM(population) as total_animals FROM animal_populations GROUP BY region;"}
{"input": "\uc6cc\uc2f1\ud134 \uc8fc \ubcd1\uc6d0\uc758 \uc218\uc6a9 \ub2a5\ub825\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, capacity INT); INSERT INTO hospitals (id, name, location, capacity) VALUES (1, 'Hospital A', 'Rural Washington', 50); INSERT INTO hospitals (id, name, location, capacity) VALUES (6, 'Hospital F', 'Rural Washington', 60);", "output": "SELECT capacity FROM hospitals WHERE location = 'Rural Washington';"}
{"input": " \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \ud310\ub9e4\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uacf5\uae09\uc5c5\uccb4 \uc21c\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE supplier_product_categories (supplier_id INT, category VARCHAR(255)); INSERT INTO supplier_product_categories (supplier_id, category) VALUES (1, 'Electronics'), (2, 'Clothing'), (3, 'Home Appliances'); CREATE TABLE sales (id INT, product_id INT, supplier_id INT, sale_date DATE, quantity_sold INT); INSERT INTO sales (id, product_id, supplier_id, sale_date, quantity_sold) VALUES (1, 1, 1, '2022-03-01', 50), (2, 2, 2, '2022-03-02', 75), (3, 3, 3, '2022-03-03', 100); CREATE TABLE products (id INT, name VARCHAR(255), supplier_id INT, category VARCHAR(255)); INSERT INTO products (id, name, supplier_id, category) VALUES (1, 'Product X', 1, 'Electronics'), (2, 'Product Y', 2, 'Clothing'), (3, 'Product Z', 3, 'Home Appliances');", "output": "SELECT spc.supplier_id, spc.category, AVG(s.quantity_sold) as avg_quantity_sold, ROW_NUMBER() OVER (PARTITION BY spc.supplier_id ORDER BY AVG(s.quantity_sold) DESC) as rank FROM supplier_product_categories spc JOIN sales s ON spc.supplier_id = s.supplier_id JOIN products p ON s.product_id = p.id GROUP BY spc.supplier_id, spc.category ORDER BY rank;"}
{"input": " 'player_daily_playtime_v4'\uc5d0\uc11c 2021\ub144 2\uc6d4 \uac01 \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE player_daily_playtime_v4 (player_id INT, play_date DATE, playtime INT); INSERT INTO player_daily_playtime_v4 (player_id, play_date, playtime) VALUES (9, '2021-02-01', 150), (9, '2021-02-02', 250), (9, '2021-02-03', 350), (10, '2021-02-01', 450), (10, '2021-02-02', 550), (10, '2021-02-03', 650);", "output": "SELECT player_id, SUM(playtime) FROM player_daily_playtime_v4 WHERE play_date BETWEEN '2021-02-01' AND '2021-02-28' GROUP BY player_id;"}
{"input": " 'carbon_pricing' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c 'FR' \uad6d\uac00\uc758 \ud0c4\uc18c \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_pricing.carbon_prices (country varchar(2), year int, price decimal(5,2)); INSERT INTO carbon_pricing.carbon_prices (country, year, price) VALUES ('FR', 2020, 30.5), ('FR', 2021, 32.0), ('DE', 2020, 28.0), ('DE', 2021, 30.2);", "output": "SELECT price FROM carbon_pricing.carbon_prices WHERE country = 'FR' AND year = (SELECT MAX(year) FROM carbon_pricing.carbon_prices);"}
{"input": " \ud0dc\uad6d\uacfc \ud544\ub9ac\ud540\uc5d0\uc11c \ud754\ud788 \uc7ac\ubc30\ub418\ub294 \uacfc\uc77c\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE fruits (country VARCHAR(20), fruit VARCHAR(20)); INSERT INTO fruits VALUES ('Thailand', 'Mango'), ('Thailand', 'Durian'), ('Thailand', 'Pineapple'), ('Philippines', 'Mango'), ('Philippines', 'Banana'), ('Philippines', 'Papaya');", "output": "SELECT fruit FROM fruits WHERE country = 'Thailand' INTERSECT SELECT fruit FROM fruits WHERE country = 'Philippines'"}
{"input": " \ubd84\uae30\ub2f9 \uc7a5\ube44 \uc218\ub9ac\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc774\uba70, \uc218\ub9ac \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub9ce\uc740 \ubd84\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Equipment (EquipmentID INT, EquipmentType VARCHAR(50), Manufacturer VARCHAR(50), YearManufactured INT, Status VARCHAR(20));CREATE TABLE Repairs (RepairID INT, EquipmentID INT, RepairType VARCHAR(50), RepairCost DECIMAL(10,2), RepairDate DATE);CREATE VIEW QuarterlyEquipmentRepairs AS SELECT EquipmentID, ROW_NUMBER() OVER (PARTITION BY EquipmentID ORDER BY RepairDate DESC) AS QuarterRank, SUM(RepairCost) OVER (PARTITION BY EquipmentID, DATE_TRUNC('quarter', RepairDate)) AS QuarterlyRepairCost FROM Repairs;", "output": "SELECT EquipmentType, QuarterlyRepairCost, QuarterRank FROM QuarterlyEquipmentRepairs WHERE QuarterRank = 1 ORDER BY QuarterlyRepairCost DESC FETCH FIRST 1 ROW ONLY;"}
{"input": " 'BrokerSmith'\uc5d0\uc11c \ucc98\ub9ac\ud558\ub294 \uc815\ucc45\uc758 \uac00\uc7a5 \ube60\ub978 \ubc1c\ud589\uc77c\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE PoliciesBroker (PolicyID INT, IssueDate DATE, Broker VARCHAR(20)); INSERT INTO PoliciesBroker (PolicyID, IssueDate, Broker) VALUES (1, '2022-01-01', 'BrokerSmith'), (2, '2022-02-01', 'BrokerJones');", "output": "SELECT MIN(IssueDate) FROM PoliciesBroker WHERE Broker = 'BrokerSmith';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc720\uc801\uc9c0\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d \uc911 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud65c\ub3d9\uc5d0\ub3c4 \ucc38\uc5ec\ud55c \uad00\uad11\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Nationality VARCHAR(20), VisitedHistoricalSites BOOLEAN, ParticipatedInSustainableActivities BOOLEAN, Continent VARCHAR(20)); INSERT INTO Visitors (VisitorID, Nationality, VisitedHistoricalSites, ParticipatedInSustainableActivities, Continent) VALUES (1, 'Egyptian', true, true, 'Africa');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Visitors WHERE Continent = 'Africa')) as Percentage FROM Visitors WHERE VisitedHistoricalSites = true AND ParticipatedInSustainableActivities = true AND Continent = 'Africa';"}
{"input": "\uac01 \uad6d\uac00\ubcc4\ub85c \uba87 \uac1c\uc758 \uc704\uc131\uc774 \ubc1c\uc0ac\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SatelliteLaunches (LaunchID INT, SatelliteID INT, Country VARCHAR(50), LaunchDate DATETIME); INSERT INTO SatelliteLaunches (LaunchID, SatelliteID, Country, LaunchDate) VALUES (1, 1, 'USA', '2022-01-01'); INSERT INTO SatelliteLaunches (LaunchID, SatelliteID, Country, LaunchDate) VALUES (2, 2, 'France', '2022-02-15');", "output": "SELECT Country, COUNT(*) as NumSatellites FROM SatelliteLaunches GROUP BY Country;"}
{"input": " 'HealthyHarvest'\uc5d0\ub294 \uc720\ud6a8\ud55c \ud658\uacbd \ub9c8\ud06c\uac00 \uc5c6\ub294 \uc81c\ud488\uc774 \uba87 \uac1c\ub098 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE HealthyHarvest (product_id INT, product_name VARCHAR(50), eco_label VARCHAR(50)); INSERT INTO HealthyHarvest (product_id, product_name, eco_label) VALUES (1, 'Apples', 'Certified Organic'), (2, 'Bananas', 'Fair Trade'), (3, 'Carrots', 'Certified Organic'), (4, 'Dates', 'Fair Trade'), (5, 'Grapes', ''), (6, 'Oranges', 'Organic');", "output": "SELECT COUNT(*) FROM HealthyHarvest WHERE eco_label = '';"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uacbd\uae30\uc7a5\uc744 \ubc29\ubb38\ud55c \ud32c \uc218\uc640 \ud3c9\uade0 \uc9c0\ucd9c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE fan (id INT, name VARCHAR(50), stadium VARCHAR(50));CREATE TABLE tickets (id INT, fan_id INT, sale_date DATE, quantity INT, price DECIMAL(5,2));", "output": "SELECT s.stadium, COUNT(f.id) AS attendees, AVG(t.price * t.quantity) AS avg_spending FROM fan f JOIN tickets t ON f.id = t.fan_id JOIN (SELECT DISTINCT stadium FROM fan) s ON TRUE WHERE t.sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY s.stadium;"}
{"input": " \ubc30\ud3ec\ub41c \ucd1d \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc218\ub97c \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uac1c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \ud50c\ub7ab\ud3fc\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE smart_contracts (contract_id INT, platform VARCHAR(50), language VARCHAR(50), complexity INT); INSERT INTO smart_contracts (contract_id, platform, language, complexity) VALUES (1, 'Ethereum', 'Solidity', 5), (2, 'Ethereum', 'Solidity', 7), (3, 'Ethereum', 'Vyper', 3), (4, 'EOS', 'C++', 8), (5, 'EOS', 'Python', 6), (6, 'Cardano', 'Haskell', 4);", "output": "SELECT platform, COUNT(*) as num_contracts FROM smart_contracts GROUP BY platform ORDER BY num_contracts DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uad6d\uac00\ubcc4 \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_sales_by_country (id INT, country VARCHAR(50), year INT, month INT, equipment_type VARCHAR(30), revenue DECIMAL(10,2));", "output": "SELECT country, ROW_NUMBER() OVER (ORDER BY SUM(revenue) DESC) as rank FROM military_sales_by_country WHERE sale_date >= DATEADD(month, -6, GETDATE()) GROUP BY country ORDER BY rank;"}
{"input": " \uac00\ub2a5\ud55c \uacbd\uc6b0 '\uc624\uc138\uc544\ub2c8\uc544'\uc5d0\uc11c \uac00\uc7a5 \uae34 \ud130\ub110 3\uac1c\uc640 \uac74\uc124 \ub0a0\uc9dc\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Tunnels (id INT, country VARCHAR(20), continent VARCHAR(20), year INT, length FLOAT); INSERT INTO Tunnels (id, country, continent, year, length) VALUES (1, 'Australia', 'Oceania', 2005, 100); INSERT INTO Tunnels (id, country, continent, year, length) VALUES (2, 'New Zealand', 'Oceania', 2008, 120); INSERT INTO Tunnels (id, country, continent, year, length) VALUES (3, 'Australia', 'Oceania', 2015, 150);", "output": "SELECT country, year, length FROM (SELECT country, year, length, RANK() OVER (PARTITION BY continent ORDER BY length DESC) as tunnel_rank FROM Tunnels WHERE continent = 'Oceania') tmp WHERE tunnel_rank <= 3;"}
{"input": " \uc131\ubcc4\uc5d0 \ub530\ub77c \ubd84\ub958\ub41c \uac01 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uac00\uc7a5 \ucd5c\uadfc \uc784\ubb34\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), mission_id INT); CREATE TABLE Missions (id INT, name VARCHAR(50), launch_site VARCHAR(50), launch_date DATE);", "output": "SELECT a.name, m.name as mission_name, m.launch_date FROM Astronauts a JOIN Missions m ON a.mission_id = m.id JOIN (SELECT mission_id, gender, MAX(launch_date) AS MaxDate FROM Astronauts GROUP BY mission_id, gender) AS MaxDates ON a.mission_id = MaxDates.mission_id AND a.gender = MaxDates.gender AND m.launch_date = MaxDates.MaxDate ORDER BY a.gender, m.launch_date DESC;"}
{"input": " \ubaa8\ub4e0 \ud50c\ub7ab\ud3fc\uc5d0\uc11c 2010\ub144 \uc774\uc804\uc5d0 \ucd9c\uc2dc\ub41c \ucd1d \ub178\ub798 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE platformA (song_year INT); CREATE TABLE platformB (song_year INT); CREATE TABLE platformC (song_year INT);", "output": "SELECT SUM(song_year) FROM platformA WHERE song_year < 2010 UNION ALL SELECT SUM(song_year) FROM platformB WHERE song_year < 2010 UNION ALL SELECT SUM(song_year) FROM platformC WHERE song_year < 2010;"}
{"input": "\uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uac00 \uc774\uc218\ud55c \ubb38\ud654 \uc5ed\ub7c9 \ud6c8\ub828 \ube44\uc728\uc744 \uc131\ubcc4\ub85c \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(50), training_completed DECIMAL(5,2), gender VARCHAR(50)); INSERT INTO community_health_workers (id, name, training_completed, gender) VALUES (1, 'Alex Johnson', 0.75, 'Male'), (2, 'Jamie Taylor', 0.5, 'Non-binary'), (3, 'Sofia Rodriguez', 0.9, 'Female');", "output": "SELECT gender, (SUM(training_completed) OVER (PARTITION BY gender) * 100) as percentage_completed FROM community_health_workers;"}
{"input": " '\uc2dc\ub4dc\ub2c8' \ud56d\uad6c\uc5d0\uc11c \ucc98\ub9ac\ub41c \uc911\ub7c9\uc774 2000\uac1c\ub97c \ucd08\uacfc\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name VARCHAR(20)); INSERT INTO ports (id, name) VALUES (1, 'Auckland'), (2, 'Sydney'); CREATE TABLE containers (id INT, weight INT, port_id INT); INSERT INTO containers (id, weight, port_id) VALUES (1, 1000, 1), (2, 2500, 2), (3, 1500, 2), (4, 3000, 2);", "output": "SELECT COUNT(*) FROM containers WHERE weight > 2000 AND port_id = (SELECT id FROM ports WHERE name = 'Sydney');"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ubd81\uadf9 \uc9c0\uc5ed\uc5d0\uc11c \ubd88\ubc95\uc870\uc5c5 \ud610\uc758\ub85c \uac80\ubb38\uc744 \ubc1b\uc740 \uc120\ubc15\uc740 \uba87 \ucc99\uc774\ub098 \ub429\ub2c8\uae4c?\"", "context": "CREATE TABLE vessels (vessel_id INTEGER, vessel_name TEXT, last_inspection_date DATE);   CREATE TABLE arctic_region (region_name TEXT, region_description TEXT);   CREATE TABLE inspection_results (inspection_id INTEGER, vessel_id INTEGER, inspection_date DATE, result TEXT);", "output": "SELECT COUNT(v.vessel_id) FROM vessels v INNER JOIN arctic_region ar ON v.last_inspection_date >= (CURRENT_DATE - INTERVAL '5 years') AND ar.region_name = 'Arctic' INNER JOIN inspection_results ir ON v.vessel_id = ir.vessel_id;"}
{"input": " 2022\ub144 3\uc6d4 \ub274\uc695\uc2dc\uc5d0\uc11c\ub294 \uc7a5\uc560\uc778\uc6a9 \ud0dd\uc2dc \uc6b4\ud589\uc774 \uba87 \ubc88\uc774\ub098 \uc81c\uacf5\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE taxi_trips (trip_id INT, vehicle_type VARCHAR(10), is_accessible BOOLEAN, trip_date DATE); INSERT INTO taxi_trips VALUES (1, 'Taxi', false, '2022-03-01'), (2, 'Taxi', true, '2022-03-02'), (3, 'Accessible Taxi', true, '2022-03-03');", "output": "SELECT COUNT(*) FROM taxi_trips WHERE vehicle_type = 'Accessible Taxi' AND trip_date BETWEEN '2022-03-01' AND '2022-03-31';"}
{"input": " HR \ubd80\uc11c\uc5d0\uc11c \uc77c\ud558\ub294 \uc9c1\uc6d0 \uc911 \ud2b8\ub79c\uc2a4\uc820\ub354 \ub610\ub294 \ub17c\ubc14\uc774\ub108\ub9ac\ub294 \uba87 \uba85\uc774\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, GenderIdentity VARCHAR(20), Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, GenderIdentity, Department) VALUES (1, 'Male', 'IT'), (2, 'Female', 'IT'), (3, 'Non-binary', 'HR'), (4, 'Genderqueer', 'HR'), (5, 'Female', 'Marketing'), (6, 'Transgender', 'HR');", "output": "SELECT COUNT(*) FROM Employees WHERE GenderIdentity IN ('Transgender', 'Non-binary') AND Department = 'HR';"}
{"input": " 2019\ub144 '\ub3d9\ubd80'\uc640 '\uc11c\ubd80' \uc9c0\uc5ed\uc758 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc744 \uc785\ubc29\ubbf8\ud130 \ub2e8\uc704\ub85c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE water_usage(id INT, year INT, region VARCHAR(255), usage FLOAT); INSERT INTO water_usage(id, year, region, usage) VALUES (1, 2019, 'North', 1500000), (2, 2020, 'North', 1700000), (3, 2019, 'South', 1200000), (4, 2020, 'South', 1300000), (5, 2019, 'East', 1000000), (6, 2020, 'East', 1100000), (7, 2019, 'West', 800000), (8, 2020, 'West', 900000);", "output": "SELECT AVG(usage) FROM water_usage WHERE year = 2019 AND region IN ('East', 'West');"}
{"input": " \ud558\ub8e8\uc5d0 \ubc30\ucd9c\ub418\ub294 \ucd5c\ub300 \ud3d0\uae30\ubb3c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste (factory VARCHAR(50), date DATE, waste_amount INT); INSERT INTO waste (factory, date, waste_amount) VALUES ('factory1', '2021-01-01', 500), ('factory1', '2021-01-02', 600);", "output": "SELECT MAX(waste_amount) FROM waste;"}
{"input": " 2022\ub144 1\uc6d4 2\uc77c \ud544\ub4dc\ubcc4 \ucd5c\uace0\uae30\uc628\uc740 \uba87 \ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE field_1 (date DATE, temperature FLOAT); INSERT INTO field_1 (date, temperature) VALUES ('2022-01-01', 15.0), ('2022-01-02', 17.5); CREATE TABLE field_2 (date DATE, temperature FLOAT); INSERT INTO field_2 (date, temperature) VALUES ('2022-01-01', 16.0), ('2022-01-02', 18.0);", "output": "SELECT field_name, MAX(temperature) FROM (SELECT 'field_1' AS field_name, temperature FROM field_1 WHERE date = '2022-01-02' UNION ALL SELECT 'field_2' AS field_name, temperature FROM field_2 WHERE date = '2022-01-02') AS temperatures_on_date GROUP BY field_name;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc5d0\uc11c \uc2a4\ud3ec\uce20 \ub274\uc2a4\ub97c \uc120\ud638\ud558\ub294 \ub3c5\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE readers (id INT, name TEXT, age INT, city TEXT, interest TEXT); INSERT INTO readers (id, name, age, city, interest) VALUES (1, 'John Doe', 35, 'Los Angeles', 'sports');", "output": "SELECT AVG(age) FROM readers WHERE city = 'Los Angeles' AND interest = 'sports';"}
{"input": " 2022\ub144 6\uc6d4\uc744 \uae30\uc900\uc73c\ub85c \ub274\uc695\uc2dc \uc911\uad6d \uc694\ub9ac \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \ud0c4\uc218\ud654\ubb3c \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uc694\ub9ac\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE dishes (restaurant_name TEXT, cuisine TEXT, dish TEXT, carbohydrates INTEGER, dish_date DATE); INSERT INTO dishes (restaurant_name, cuisine, dish, carbohydrates, dish_date) VALUES ('New York Wok', 'Chinese', 'Kung Pao Chicken', 45, '2022-06-01');", "output": "SELECT dish, carbohydrates FROM (SELECT dish, carbohydrates, ROW_NUMBER() OVER (PARTITION BY dish_date ORDER BY carbohydrates DESC) as rn FROM dishes WHERE restaurant_name LIKE 'New York%' AND cuisine = 'Chinese' AND dish_date >= '2022-06-01' AND dish_date < '2022-07-01') t WHERE rn <= 2;"}
{"input": " 'public_works' \uc2a4\ud0a4\ub9c8\uc758 \uc5b4\ub290 \ub310\uc774 '\ubcf5\uc6d0\ub825' \uc2a4\ud0a4\ub9c8\uc758 \ub310\ubcf4\ub2e4 \uc6a9\ub7c9\uc774 \ub354 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dams (name VARCHAR(255), capacity INT); INSERT INTO dams (name, capacity) VALUES ('Dam1', 5000000), ('Dam2', 6000000), ('Dam3', 4000000); CREATE TABLE resilience_dams (name VARCHAR(255), capacity INT); INSERT INTO resilience_dams (name, capacity) VALUES ('DamA', 3000000), ('DamB', 4000000), ('DamC', 5000000);", "output": "SELECT name FROM dams WHERE capacity > (SELECT MAX(capacity) FROM resilience_dams);"}
{"input": " \uac01 \uc720\uc801\uc9c0\uc5d0\uc11c \uba87 \uac1c\uc758 \uc720\ubb3c\uc774 \ubc1c\uacac\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE Artifacts (ArtifactID INT, SiteID INT, ArtifactType TEXT, DateFound DATE); INSERT INTO Artifacts (ArtifactID, SiteID, ArtifactType, DateFound) VALUES (1, 1, 'Pottery', '2010-06-01'); INSERT INTO Artifacts (ArtifactID, SiteID, ArtifactType, DateFound) VALUES (2, 1, 'Bone', '2010-06-03'); INSERT INTO Artifacts (ArtifactID, SiteID, ArtifactType, DateFound) VALUES (3, 2, 'Tool', '2008-08-28');", "output": "SELECT SiteID, COUNT(*) OVER (PARTITION BY SiteID) AS ArtifactCount FROM Artifacts;"}
{"input": "\ub514\uc9c0\ud138 \uaca9\ucc28 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\uc758 \uc774\ub984\uacfc \ub514\uc9c0\ud138 \uaca9\ucc28 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name VARCHAR(50), digital_divide_score DECIMAL(3,2)); INSERT INTO countries (id, name, digital_divide_score) VALUES (1, 'Country1', 6.3); INSERT INTO countries (id, name, digital_divide_score) VALUES (2, 'Country2', 7.1); INSERT INTO countries (id, name, digital_divide_score) VALUES (3, 'Country3', 5.9);", "output": "SELECT name, digital_divide_score, RANK() OVER (ORDER BY digital_divide_score DESC) AS rank FROM countries;"}
{"input": " \uc0e4\ub9ac\uc544 \ube44\uc900\uc218 \uacc4\uc815\uc758 \ucd1d \uc794\uc561\uc744 \uae30\uc900\uc73c\ub85c \uace0\uac1d \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE non_shariah_accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10,2));", "output": "SELECT customer_id, RANK() OVER (ORDER BY SUM(balance) DESC) AS non_shariah_rank FROM non_shariah_accounts WHERE account_type != 'Shariah-compliant' GROUP BY customer_id;"}
{"input": " 2021\ub144 4\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ud310\ub9e4\ub41c \ucd1d \uc218\ub7c9\uc744 \ud3ec\ud568\ud558\uc5ec \uc9c0\uc18d \uac00\ub2a5\ud55c \uac01 \uce74\ud14c\uace0\ub9ac\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE Restaurants (RestaurantID int, Name varchar(50), Location varchar(50)); CREATE TABLE Menu (MenuID int, ItemName varchar(50), Category varchar(50)); CREATE TABLE MenuSales (MenuID int, RestaurantID int, QuantitySold int, Revenue decimal(5,2), SaleDate date);", "output": "SELECT C.Category, SUM(M.Revenue) as Revenue, SUM(M.QuantitySold) as QuantitySold FROM Menu M JOIN MenuSales MS ON M.MenuID = MS.MenuID JOIN Restaurants R ON MS.RestaurantID = R.RestaurantID JOIN (SELECT * FROM Restaurants WHERE Location LIKE '%California%') C ON R.RestaurantID = C.RestaurantID WHERE MS.SaleDate >= '2021-04-01' AND MS.SaleDate <= '2021-04-30' GROUP BY C.Category;"}
{"input": " '\ubb3c\ub9ac\ud559' \ud559\uacfc\uc640 '\uc218\ud559' \ud559\uacfc\uc5d0 \uc7ac\ud559 \uc911\uc778 \ub300\ud559\uc6d0\uc0dd\uc744 \uc81c\uc678\ud55c \uac01 \ud559\uacfc\uc5d0 \uc7ac\ud559 \uc911\uc778 \ub300\ud559\uc6d0\uc0dd \uc218\ub97c \uad6c\ud558\uc2dc\uc624.", "context": "CREATE TABLE graduate_students (id INT, department VARCHAR(20), enrollment_status VARCHAR(10)); INSERT INTO graduate_students (id, department, enrollment_status) VALUES (1, 'Physics', 'Enrolled'), (2, 'Mathematics', 'Enrolled'), (3, 'Chemistry', 'Enrolled'), (4, 'English', 'Not Enrolled');", "output": "SELECT department, COUNT(*) as enrollment_count FROM graduate_students WHERE department NOT IN ('Physics', 'Mathematics') GROUP BY department;"}
{"input": " 2015\ub144\ubd80\ud130 \uc77c\ubcf8\uc73c\ub85c\ubd80\ud130 \uad70\uc0ac\ud6c8\ub828\uc744 \ubc1b\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_training (country VARCHAR(255), trainee_count INT, training_date DATE);", "output": "SELECT country, SUM(trainee_count) as total_trained FROM military_training WHERE training_date >= '2015-01-01' GROUP BY country ORDER BY total_trained DESC LIMIT 3;"}
{"input": " \uc0ac\uc774\uc988\ubcc4 \uc81c\ud488\uc758 \uc6d4 \ud3c9\uade0 \uc778\uae30\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE trend (id INT, product_id INT, popularity INT, date DATE); INSERT INTO trend (id, product_id, popularity, date) VALUES (1, 1, 100, '2023-01-01'); CREATE TABLE size (id INT, size VARCHAR(50)); INSERT INTO size (id, size) VALUES (1, 'Small'), (2, 'Medium'), (3, 'Large');", "output": "SELECT s.size, AVG(t.popularity) as avg_popularity, DATE_TRUNC('month', t.date) as month FROM trend t JOIN product p ON t.product_id = p.id JOIN size s ON p.size = s.size GROUP BY month, s.size ORDER BY month;"}
{"input": "2022\ub144 '\ub274\uba55\uc2dc\ucf54'\uc5d0\uc11c \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ubd09\uc0ac\ud55c \ucd5c\uc18c \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (volunteer_id INT, state VARCHAR(20), total_hours INT, volunteer_year INT); INSERT INTO Volunteers (volunteer_id, state, total_hours, volunteer_year) VALUES (1, 'New Mexico', 15, 2022), (2, 'New Mexico', 20, 2022);", "output": "SELECT MIN(total_hours) FROM Volunteers WHERE state = 'New Mexico' AND volunteer_year = 2022;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c '\ud504\ub9ac\ubbf8\uc5c4' \uba64\ubc84\uc2ed\uc744 \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?'", "context": "CREATE SCHEMA membership; CREATE TABLE membership_types (user_id INT, country VARCHAR(50), membership_type VARCHAR(50)); INSERT INTO membership_types VALUES (1, 'USA', 'Premium'), (2, 'Canada', 'Basic'), (3, 'USA', 'Premium');", "output": "SELECT COUNT(DISTINCT user_id) FROM membership.membership_types WHERE country = 'USA' AND membership_type = 'Premium';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud558\uace0 VR \ud5e4\ub4dc\uc14b\uc744 \uc18c\uc720\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id INT, age INT, country VARCHAR(50), vr_owner BOOLEAN); CREATE TABLE esports_participants (participant_id INT, player_id INT); CREATE TABLE esports_events (event_id INT, location VARCHAR(50));", "output": "SELECT AVG(players.age) FROM players INNER JOIN esports_participants ON players.player_id = esports_participants.player_id INNER JOIN (SELECT event_id FROM esports_events WHERE location = 'United States') AS us_events ON esports_participants.player_id = us_events.event_id WHERE players.vr_owner = TRUE;"}
{"input": " '\ubbf8\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c\ub9cc \uac70\ub798\ub97c \ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Transactions (id INT, customer_id INT, region VARCHAR(10)); INSERT INTO Transactions (id, customer_id, region) VALUES (1, 10, 'Americas'), (2, 10, 'Americas'), (3, 11, 'Asia'), (4, 12, 'Europe'), (5, 13, 'Americas');", "output": "SELECT customer_id FROM Transactions WHERE region = 'Americas' GROUP BY customer_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Transactions WHERE region = 'Americas' GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1);"}
{"input": " \ub0a8\ubbf8 \uc804\uc2dc\ud68c\ub97c \uad00\ub78c\ud558\ub294 \uc5f0\ub839\ubcc4 \uad00\ub78c\uac1d \uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10), City VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (1, 20, 'Male', 'Buenos Aires'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (2, 30, 'Female', 'Rio de Janeiro'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (3, 40, 'Male', 'Sao Paulo'); CREATE TABLE Exhibitions (ExhibitionID INT, Title VARCHAR(50), City VARCHAR(50)); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (1, 'South American Masters', 'Buenos Aires'); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (2, 'Digital Art South America', 'Rio de Janeiro'); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (3, 'Contemporary Art in South America', 'Sao Paulo'); CREATE TABLE Attendance (VisitorID INT, ExhibitionID INT); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (1, 1); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (2, 2); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (3, 3);", "output": "SELECT Visitors.Age, COUNT(Attendance.VisitorID) FROM Visitors INNER JOIN Attendance ON Visitors.VisitorID = Attendance.VisitorID INNER JOIN Exhibitions ON Attendance.ExhibitionID = Exhibitions.ExhibitionID GROUP BY Visitors.Age;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc5d0\ub294 \uba87 \uac1c\uc758 \uc791\ud488\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE Artworks (artwork_name TEXT, category TEXT);", "output": "SELECT category, COUNT(*) as artwork_count FROM Artworks GROUP BY category;"}
{"input": " \ucd5c\uadfc \uc778\uc99d\uc744 \ubc1b\uc740 \uac74\ubb3c\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE green_building_certifications (id INT, building_id INT, certification_type VARCHAR(255), certification_year INT, PRIMARY KEY(id)); INSERT INTO green_building_certifications (id, building_id, certification_type, certification_year) VALUES (1, 1004, 'EDGE', 2022), (2, 1005, 'LEED', 2020), (3, 1006, 'BREEAM', 2019), (4, 1007, 'Green Star', 2021);", "output": "SELECT building_id, certification_type, certification_year, ROW_NUMBER() OVER (PARTITION BY building_id ORDER BY certification_year DESC) as ranking FROM green_building_certifications WHERE ranking = 1;"}
{"input": " 2021\ub144 '\uac74\uac15' \ud504\ub85c\uadf8\ub7a8 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE Programs (ProgramID int, ProgramName varchar(255)); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE Donations (DonationID int, DonationAmount decimal(10,2), DonationDate date, ProgramID int); INSERT INTO Donations (DonationID, DonationAmount, DonationDate, ProgramID) VALUES (1, 500, '2021-07-01', 2), (2, 300, '2021-09-05', 2), (3, 700, '2021-10-30', 3);", "output": "SELECT SUM(DonationAmount) FROM Donations WHERE ProgramID = (SELECT ProgramID FROM Programs WHERE ProgramName = 'Health') AND DonationDate BETWEEN '2021-01-01' AND '2021-12-31';"}
{"input": " \uac01 \uc720\ubb3c \uc720\ud615\uc758 \ucd1d \uac00\uc911\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtifactWeight (WeightID INT, ArtifactID INT, ArtifactType TEXT, Weight DECIMAL(5,2)); INSERT INTO ArtifactWeight (WeightID, ArtifactID, ArtifactType, Weight) VALUES (1, 1, 'Pottery', 0.5); INSERT INTO ArtifactWeight (WeightID, ArtifactID, ArtifactType, Weight) VALUES (2, 1, 'Pottery', 0.6); INSERT INTO ArtifactWeight (WeightID, ArtifactID, ArtifactType, Weight) VALUES (3, 2, 'Bone', 0.3);", "output": "SELECT ArtifactType, SUM(Weight) OVER (PARTITION BY ArtifactType) AS TotalWeight FROM ArtifactWeight;"}
{"input": " \uc911\uc11c\ubd80 \uc9c0\uc5ed\uc758 \uce74\uc6b4\ud2f0\ubcc4 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (county VARCHAR(20), region VARCHAR(10), workers INT); INSERT INTO community_health_workers (county, region, workers) VALUES ('Cook', 'Midwest', 500), ('Ramsey', 'Midwest', 300), ('Shelby', 'Midwest', 400);", "output": "SELECT county, SUM(workers) FROM community_health_workers WHERE region = 'Midwest' GROUP BY county;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc704\uce58\ud55c \uc2a4\ud29c\ub514\uc624\uc5d0\uc11c \ub9e4\ub144 \uac1c\ubd09\ub418\uba70 \uc0c1\uc601\uc2dc\uac04\uc774 2\uc2dc\uac04\uc774 \ub118\ub294 \uc601\ud654\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, runtime INT, studio_location VARCHAR(255));", "output": "SELECT release_year, COUNT(*) as num_movies FROM movies WHERE studio_location = 'California' AND runtime > 120 GROUP BY release_year;"}
{"input": " \ucd1d 100\uc2dc\uac04 \uc774\uc0c1 \ubd09\uc0ac\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, DonorID INT, NonprofitID INT, Hours INT, Year INT); INSERT INTO Volunteers (VolunteerID, DonorID, NonprofitID, Hours, Year) VALUES (1, 1, 1, 50, 2020); INSERT INTO Volunteers (VolunteerID, DonorID, NonprofitID, Hours, Year) VALUES (2, 2, 2, 75, 2019); INSERT INTO Volunteers (VolunteerID, DonorID, NonprofitID, Hours, Year) VALUES (3, 4, 3, 120, 2018); INSERT INTO Volunteers (VolunteerID, DonorID, NonprofitID, Hours, Year) VALUES (4, 5, 4, 150, 2021);", "output": "SELECT COUNT(*) FROM (SELECT DonorID, SUM(Hours) as TotalHours FROM Volunteers GROUP BY DonorID) as VolunteerTotals WHERE TotalHours > 100;"}
{"input": " \ud2f0\ucf13 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uace0 \uac00\uc7a5 \ub0ae\uc740 \ud32c \uc778\uad6c\ud1b5\uacc4\ud559\uc801 \uadf8\ub8f9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TicketSpending (FanID INT, Gender VARCHAR(255), TotalSpent DECIMAL(5,2)); INSERT INTO TicketSpending (FanID, Gender, TotalSpent) VALUES (1, 'Male', 1500.00), (2, 'Female', 1200.00), (3, 'Male', 800.00), (4, 'Non-binary', 1800.00);", "output": "SELECT Gender, MAX(TotalSpent) as Highest_Ticket_Spending, MIN(TotalSpent) as Lowest_Ticket_Spending FROM TicketSpending GROUP BY Gender;"}
{"input": " \uc218\uc775 \ubc0f \uc8fc\ubb38 \uc218\ub97c \ud3ec\ud568\ud558\uc5ec \uc9c0\ub09c 30\uc77c \ub3d9\uc548 '\ud574\uc678' \uba54\ub274 \uce74\ud14c\uace0\ub9ac\uc758 \uc218\uc775 \uae30\uc900 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu_items(item_name VARCHAR(30), menu_category VARCHAR(20), revenue DECIMAL(10, 2), orders INT); INSERT INTO menu_items(item_name, menu_category, revenue, orders) VALUES ('Chicken Tikka Masala', 'International', 2500, 30), ('Paella', 'International', 2200, 25), ('Gyro Plate', 'International', 1800, 22);", "output": "SELECT item_name, SUM(revenue) AS total_revenue, SUM(orders) AS total_orders FROM menu_items WHERE menu_category = 'International' AND orders >= (SELECT AVG(orders) FROM menu_items WHERE menu_category = 'International') AND menu_items.item_name IN (SELECT item_name FROM menu_items WHERE menu_category = 'International' GROUP BY item_name ORDER BY SUM(revenue) DESC LIMIT 3) GROUP BY item_name ORDER BY total_revenue DESC, total_orders DESC;"}
{"input": "\uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uac00 \ubb38\ud654\uc5ed\ub7c9 \ud6c8\ub828\uc744 \uc774\uc218\ud55c \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE training (worker_id INT, training_type VARCHAR(50), completion_percentage INT); INSERT INTO training (worker_id, training_type, completion_percentage) VALUES (1, 'Cultural Competency', 85), (2, 'Cultural Competency', 90), (3, 'Cultural Competency', 95);", "output": "SELECT worker_id, training_type, completion_percentage, completion_percentage * 100.0 / SUM(completion_percentage) OVER (PARTITION BY training_type) as percentage FROM training WHERE training_type = 'Cultural Competency';"}
{"input": " \uac01 \ubd80\uc11c\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Departments (id INT, department_name TEXT, budget_allocated FLOAT);", "output": "SELECT department_name, SUM(budget_allocated) as total_budget FROM Departments GROUP BY department_name;"}
{"input": " 2020\ub144\uc5d0 \ubc1c\uae09\ub41c \ud5c8\uac00\uc99d\uc744 \uc704\ud574 \uac74\uc124 \ub178\ub3d9\uc790\uac00 \uadfc\ubb34\ud55c \ucd1d \uc2dc\uac04\uc740 \ud5c8\uac00_ID\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE construction_labor (labor_id INT, permit_id INT, worker_name TEXT, hours_worked INT, wage FLOAT); INSERT INTO construction_labor (labor_id, permit_id, worker_name, hours_worked, wage) VALUES (3, 3, 'Maria Garcia', 180, 28.0);", "output": "SELECT permit_id, SUM(hours_worked) FROM construction_labor WHERE permit_id IN (SELECT permit_id FROM building_permits WHERE EXTRACT(YEAR FROM issue_date) = 2020) GROUP BY permit_id;"}
{"input": " 2020\ub144 '\ub808\uc54c \ub9c8\ub4dc\ub9ac\ub4dc' \ucd95\uad6c \ud074\ub7fd\uc758 \ub2e8\uc77c \uacbd\uae30 \ucd5c\ub2e4 \ub4dd\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name TEXT, league TEXT, sport TEXT); INSERT INTO teams (team_id, team_name, league, sport) VALUES (1, 'Barcelona', 'La Liga', 'Football'), (2, 'Real Madrid', 'La Liga', 'Football'); CREATE TABLE games (game_id INT, team_id INT, goals INT, season_year INT); INSERT INTO games (game_id, team_id, goals, season_year) VALUES (1, 2, 5, 2020), (2, 2, 2, 2020), (3, 2, 1, 2020);", "output": "SELECT MAX(goals) FROM games WHERE team_id = (SELECT team_id FROM teams WHERE team_name = 'Real Madrid') AND season_year = 2020;"}
{"input": " TokenX\uc758 \ucd5c\ub300 \uacf5\uae09\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tokens (id INT PRIMARY KEY, name VARCHAR(255), max_supply BIGINT); INSERT INTO tokens (id, name, max_supply) VALUES (1, 'TokenX', 100000000), (2, 'TokenY', 50000000);", "output": "SELECT max_supply FROM tokens WHERE name = 'TokenX';"}
{"input": " \uad6d\uac00\ubcc4 1\uc778\ub2f9 \ud3c9\uade0 \uc724\ub9ac\uc801 AI \uc778\uc99d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CountryPopulation (CountryID INT PRIMARY KEY, CountryName VARCHAR(100), Population INT); INSERT INTO CountryPopulation (CountryID, CountryName, Population) VALUES (1, 'USA', 331002651), (2, 'Canada', 37410003), (3, 'Mexico', 128932753);", "output": "SELECT CountryName, AVG(CertificationCount/Population) as AvgCertificationsPerCapita FROM (SELECT CountryName, COUNT(CertificationID) as CertificationCount FROM EthicalAICertifications GROUP BY CountryName) AS CertificationsPerCountry JOIN CountryPopulation ON CertificationsPerCountry.CountryName = CountryPopulation.CountryName GROUP BY CountryName;"}
{"input": " \uc5ec\uc131\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc744 \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Founders (id INT, name TEXT, gender TEXT); INSERT INTO Founders (id, name, gender) VALUES (1, 'Women Founders', 'Female'); CREATE TABLE Investments (company_id INT, investment_amount INT); INSERT INTO Investments (company_id, investment_amount) VALUES (1, 500000); INSERT INTO Investments (company_id, investment_amount) VALUES (1, 750000); CREATE TABLE Companies (id INT, name TEXT, founder_id INT); INSERT INTO Companies (id, name, founder_id) VALUES (1, 'Female Founded Co', 1);", "output": "SELECT Companies.name, SUM(Investments.investment_amount) as total_funding FROM Companies JOIN Founders ON Companies.founder_id = Founders.id JOIN Investments ON Companies.id = Investments.company_id WHERE Founders.gender = 'Female' GROUP BY Companies.name ORDER BY total_funding DESC;"}
{"input": "\uc54c\uace0\ub9ac\uc998 \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \uc810\uc218\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud55c \uac01 AI \uc54c\uace0\ub9ac\uc998\uc758 \ud3c9\uade0 \uc548\uc804 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_algorithms (algorithm_id INT, algorithm_name VARCHAR(50), safety_score DECIMAL(5,2)); INSERT INTO ai_algorithms (algorithm_id, algorithm_name, safety_score) VALUES (1, 'DeepQA', 85.34), (2, 'Random Forest', 91.23), (3, 'Support Vector Machine', 89.11), (4, 'Neural Network', 87.54);", "output": "SELECT algorithm_name, AVG(safety_score) as avg_safety_score FROM ai_algorithms GROUP BY algorithm_name ORDER BY avg_safety_score DESC;"}
{"input": " 2020\ub144 \ucf00\ub0d0\uc5d0\uc11c \uc644\ub8cc\ub41c \ubaa8\ub4e0 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, country VARCHAR(50), start_date DATE, end_date DATE, cost FLOAT); INSERT INTO projects (id, country, start_date, end_date, cost) VALUES (1, 'Kenya', '2018-01-01', '2019-12-31', 500000), (2, 'Kenya', '2019-01-01', '2020-12-31', 750000), (3, 'Kenya', '2020-01-01', '2021-12-31', 800000);", "output": "SELECT SUM(cost) FROM projects WHERE country = 'Kenya' AND YEAR(end_date) = 2020 AND end_date IS NOT NULL;"}
{"input": " \uc720\ub7fd \ub0b4 \uc0c1\uc704 3\uac1c \uc7ac\ud65c\uc6a9 \uad6d\uac00\uc758 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694. \uac01 \uad6d\uac00\uc5d0\uc11c \ubcf4\uace0\ud55c \ub370\uc774\ud130\uac00 \uc788\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE WasteData (Country VARCHAR(50), Continent VARCHAR(50), WasteGeneration FLOAT, Year INT, RecyclingRate FLOAT); INSERT INTO WasteData (Country, Continent, WasteGeneration, Year, RecyclingRate) VALUES ('Germany', 'Europe', 1234.56, 2018, 67.8), ('Germany', 'Europe', 1300.98, 2019, 68.9), ('Norway', 'Europe', 456.34, 2018, 89.1), ('Norway', 'Europe', 467.65, 2019, 90.2);", "output": "SELECT Country, Year, SUM(WasteGeneration)  FROM (SELECT Country, Year, WasteGeneration, ROW_NUMBER() OVER (PARTITION BY Country ORDER BY RecyclingRate DESC) AS Rank FROM WasteData) tmp WHERE Rank <= 3 GROUP BY Country, Year;"}
{"input": " \ubd84\uae30\ubcc4 \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \ud504\ub85c\uc81d\ud2b8 \uc644\ub8cc\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE smart_city_projects (project_name TEXT, completion_date DATE); INSERT INTO smart_city_projects VALUES ('Project1', '2022-01-15'), ('Project2', '2022-02-20'), ('Project3', '2022-03-05'), ('Project4', '2022-04-10');", "output": "SELECT DATE_TRUNC('quarter', completion_date) AS quarter, COUNT(project_name) AS projects, COUNT(project_name) * 100.0 / (SELECT COUNT(project_name) FROM smart_city_projects) AS percentage FROM smart_city_projects GROUP BY quarter;"}
{"input": " NFL \uc5ed\uc0ac\uc0c1 \ub2e8\uc77c \uac8c\uc784\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ub4dd\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE NFL_Matches (MatchID INT, HomeTeam VARCHAR(50), AwayTeam VARCHAR(50), HomeTeamScore INT, AwayTeamScore INT); INSERT INTO NFL_Matches (MatchID, HomeTeam, AwayTeam, HomeTeamScore, AwayTeamScore) VALUES (1, 'Chicago Bears', 'Washington Redskins', 73, 0);", "output": "SELECT MAX(HomeTeamScore + AwayTeamScore) FROM NFL_Matches;"}
{"input": " \ubc14\uc774\uc624\ub9e4\uc2a4\uac00 3000\ud1a4\uc744 \ucd08\uacfc\ud558\ub294 \ubaa8\ub4e0 \ub18d\uc7a5\uc5d0\uc11c \uc704\uce58\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \uc5b4\ub958\uc758 \ud3c9\uade0 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farm_biomass_by_location (farm_id INT, location VARCHAR(255), biomass INT); INSERT INTO farm_biomass_by_location (farm_id, location, biomass) VALUES (1, 'Pacific Ocean', 4000), (2, 'Atlantic Ocean', 5000), (3, 'Mediterranean Sea', 3000), (4, 'Pacific Ocean', 6000), (5, 'Atlantic Ocean', 4000);", "output": "SELECT location, AVG(biomass) FROM farm_biomass_by_location WHERE biomass > 3000 GROUP BY location;"}
{"input": " \uc911\ub3d9 \uad11\uc0b0\uc758 \ub2e4\uc591\uc131 \uc810\uc218\uc640 \ud3c9\uade0 \ubcf4\uc720 \uae30\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production_data (id INT PRIMARY KEY, mine_id INT, year INT, monthly_production INT);CREATE TABLE reclamation_data (id INT PRIMARY KEY, mine_id INT, year INT, reclamation_cost INT);CREATE TABLE mine_employees (id INT PRIMARY KEY, mine_id INT, employee_id INT, employment_start_date DATE, employment_end_date DATE);CREATE TABLE employee_demographics (id INT PRIMARY KEY, employee_id INT, gender VARCHAR(255), ethnicity VARCHAR(255));CREATE VIEW employee_stats AS SELECT mine_id, AVG(DATEDIFF(employment_end_date, employment_start_date))/365 as avg_tenure FROM mine_employees GROUP BY mine_id;CREATE VIEW diversity_stats AS SELECT mine_id, AVG(CASE WHEN gender = 'Female' THEN 1.0 ELSE 0.0 END) + AVG(CASE WHEN ethnicity = 'Minority' THEN 1.0 ELSE 0.0 END) as diversity_score FROM employee_demographics GROUP BY mine_id;CREATE VIEW operation_duration AS SELECT mine_id, COUNT(DISTINCT year) as operation_years FROM production_data GROUP BY mine_id;", "output": "SELECT d.mine_id, d.diversity_score, e.avg_tenure FROM diversity_stats d JOIN employee_stats e ON d.mine_id = e.mine_id WHERE d.mine_id IN (SELECT mine_id FROM operation_duration WHERE operation_years > 5) AND e.mine_id IN (SELECT mine_id FROM operation_duration WHERE operation_years > 5);"}
{"input": " Blue Dream\uacfc \uac19\uc740 \ud2b9\uc815 \ud488\uc885\uc744 \ud310\ub9e4\ud558\ub294 \uac01 \uc8fc \uc57d\uad6d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DispensaryStrains (dispensary VARCHAR(255), state VARCHAR(255), strain VARCHAR(255)); INSERT INTO DispensaryStrains (dispensary, state, strain) VALUES ('Dispensary A', 'CA', 'Blue Dream'), ('Dispensary A', 'CO', 'Sour Diesel'), ('Dispensary B', 'CA', 'Blue Dream'), ('Dispensary B', 'CO', 'Durban Poison');", "output": "SELECT state, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DispensaryStrains WHERE strain = 'Blue Dream') as percentage FROM DispensaryStrains WHERE strain = 'Blue Dream' GROUP BY state;"}
{"input": " \ud558\ub098 \uc774\uc0c1\uc758 \uc0dd\ud0dc \uad00\uad11 \uc0c1\uacfc \ud558\ub098\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \ud65c\ub3d9\uc744 \ubcf4\uc720\ud55c \ub3c4\uc2dc\uc5d0\ub294 \uc5b4\ub5a4 \ud638\ud154\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE EcoTourismAwards (award_id INT, location VARCHAR(50), award_name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO EcoTourismAwards (award_id, location, award_name, start_date, end_date) VALUES (1, 'Sydney', 'Green Travel Award', '2022-01-01', '2022-12-31'); CREATE TABLE SustainableTourismActivities (activity_id INT, location VARCHAR(50), activity_name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO SustainableTourismActivities (activity_id, location, activity_name, start_date, end_date) VALUES (1, 'Sydney', 'Urban Gardening Tour', '2022-01-01', '2022-12-31');", "output": "SELECT DISTINCT hl.location FROM HotelLocations hl JOIN EcoTourismAwards ea ON hl.location = ea.location INTERSECT SELECT DISTINCT sta.location FROM SustainableTourismActivities sta;"}
{"input": "\uad00\ub78c\uac1d \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \uc804\uc2dc\ud68c \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Exhibitions (id INT, name TEXT, visitor_count INT); INSERT INTO Exhibitions (id, name, visitor_count) VALUES (1, 'Dinosaurs', 1000), (2, 'Egypt', 800);", "output": "SELECT name FROM (SELECT name, visitor_count, ROW_NUMBER() OVER (ORDER BY visitor_count ASC) as row_num FROM Exhibitions) WHERE row_num = 1;"}
{"input": " \uac01 \ub18d\uc7a5\uc758 \uc625\uc218\uc218 \uc218\ud655\ub7c9\uc740 \uc218\ud655\ub7c9\uc5d0 \ub530\ub77c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE farming (id INT, name TEXT, location TEXT, crop TEXT, yield INT); INSERT INTO farming VALUES (1, 'Smith Farm', 'Colorado', 'Corn', 120), (2, 'Brown Farm', 'Nebraska', 'Soybeans', 45), (3, 'Jones Farm', 'Iowa', 'Wheat', 80);", "output": "SELECT name, yield, ROW_NUMBER() OVER (PARTITION BY crop ORDER BY yield DESC) as rank FROM farming WHERE crop = 'Corn';"}
{"input": " \uac01 \uc704\uce58\uc5d0 \ub300\ud55c 'hr' \uc2a4\ud0a4\ub9c8\uc758 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hr.employees (employee_id INT, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), location VARCHAR(50)); INSERT INTO hr.employees (employee_id, first_name, last_name, department, location) VALUES (1, 'John', 'Doe', 'Production', 'New York'), (2, 'Jane', 'Doe', 'Production', 'New York'), (3, 'Mike', 'Johnson', 'Quality', 'Los Angeles');", "output": "SELECT location, COUNT(*) as total_employees FROM hr.employees GROUP BY location;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc0ac\ubb34\uc2e4\uc5d0\uc11c \uac00\uc815\ubc95 \uc804\ubb38 \ubcc0\ud638\uc0ac\uac00 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (id INT, office_location VARCHAR(50), name VARCHAR(50), years_of_experience INT, specialty VARCHAR(50)); INSERT INTO attorneys (id, office_location, name, years_of_experience, specialty) VALUES (1, 'New York', 'John Doe', 12, 'Criminal Law'); INSERT INTO attorneys (id, office_location, name, years_of_experience, specialty) VALUES (2, 'Los Angeles', 'Jane Smith', 5, 'Family Law'); CREATE TABLE cases (id INT, attorney_id INT, case_status VARCHAR(50)); INSERT INTO cases (id, attorney_id, case_status) VALUES (1, 1, 'Won'); INSERT INTO cases (id, attorney_id, case_status) VALUES (2, 2, 'Won'); INSERT INTO cases (id, attorney_id, case_status) VALUES (3, 2, 'Lost');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.id WHERE attorneys.office_location = 'Los Angeles' AND attorneys.specialty = 'Family Law')) AS percentage FROM cases JOIN attorneys ON cases.attorney_id = attorneys.id WHERE attorneys.office_location = 'Los Angeles' AND attorneys.specialty = 'Family Law' AND cases.case_status = 'Won';"}
{"input": " \uc9c0\ub09c 90\uc77c \ub3d9\uc548 \uac80\ud1a0\ub418\uc9c0 \uc54a\uc740 \uc815\ucc45\uc758 \uc138\ubd80 \uc0ac\ud56d, \uac01 \uc815\ucc45\uacfc \uc5f0\uacb0\ub41c \uc2dc\uc2a4\ud15c \uc218, CVE \uc810\uc218\uac00 7\ubcf4\ub2e4 \ud070 \uc2dc\uc2a4\ud15c \uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policies (policy_id INT, policy_name VARCHAR(255), owner VARCHAR(255), review_date DATE, num_systems INT);CREATE TABLE policy_systems (policy_id INT, system_id INT);CREATE TABLE systems (system_id INT, system_name VARCHAR(255), country VARCHAR(255), cve_score INT);CREATE TABLE scan_dates (scan_date DATE, system_id INT);", "output": "SELECT p.policy_name, p.owner, p.num_systems, COUNT(ps.system_id) as associated_systems, SUM(s.cve_score) as total_cve_score FROM policies p LEFT JOIN policy_systems ps ON p.policy_id = ps.policy_id LEFT JOIN systems s ON ps.system_id = s.system_id WHERE p.review_date < DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY) GROUP BY p.policy_id;"}
{"input": " \ub9e4\ucd9c\uc774 10\uc5b5 \ub2ec\ub7ec \uc774\uc0c1\uc778 \uae30\uc5c5\uc774 \uc9c0\ub09c 3\ub144\uac04 \uc544\ud504\ub9ac\uce74\ub85c \uc218\ucd9c\ud55c \ub514\uc2a4\ud504\ub85c\uc298\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE export_info (id INT, element TEXT, location TEXT, company TEXT, date DATE, quantity INT, revenue INT); INSERT INTO export_info (id, element, location, company, date, quantity, revenue) VALUES (1, 'dysprosium', 'Africa', 'Company A', '2019-01-01', 500, 2000000000), (2, 'dysprosium', 'Africa', 'Company B', '2020-01-01', 600, 3000000000);", "output": "SELECT SUM(quantity) FROM export_info WHERE element = 'dysprosium' AND location = 'Africa' AND company IN (SELECT company FROM export_info WHERE revenue > 1000000000) AND extract(year from date) >= 2019;"}
{"input": " \ub18d\uacbd\uc9c0\uc758 \uc0c1\uc704 50%\uc5d0\uc11c \uc791\ubb3c\uc758 \ud3c9\uade0 \uc218\ud655\ub7c9\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Farmers (id INT, name VARCHAR(50), age INT, location VARCHAR(50), acres INT); INSERT INTO Farmers (id, name, age, location, acres) VALUES (1, 'John Doe', 35, 'USA', 100); INSERT INTO Farmers (id, name, age, location, acres) VALUES (2, 'Jane Smith', 40, 'Canada', 200); CREATE TABLE Crops (id INT, farmer_id INT, crop_name VARCHAR(50), yield INT, sale_price DECIMAL(5,2)); INSERT INTO Crops (id, farmer_id, crop_name, yield, sale_price) VALUES (1, 1, 'Corn', 120, 2.35); INSERT INTO Crops (id, farmer_id, crop_name, yield, sale_price) VALUES (2, 2, 'Soybeans', 80, 1.98);", "output": "SELECT AVG(c.yield) as avg_yield FROM Crops c JOIN Farmers f ON c.farmer_id = f.id WHERE f.acres >= (SELECT AVG(acres) FROM Farmers);"}
{"input": " 2019\ub144 \uc804\uccb4 \ubd80\ubb38\uc758 \uc804\uccb4 \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \uc7ac\ud65c\uc6a9\ub960\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE recycling_rates (year INT, sector VARCHAR(20), rate DECIMAL(5,2)); INSERT INTO recycling_rates (year, sector, rate) VALUES (2019, 'commercial', 0.35), (2019, 'residential', 0.40), (2019, 'industrial', 0.28);", "output": "SELECT sector, rate FROM recycling_rates WHERE year = 2019 AND rate > (SELECT AVG(rate) FROM recycling_rates WHERE year = 2019);"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \ucd5c\uc18c \ud2f0\ucf13 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sports_venue (venue_id INT, event_name VARCHAR(255), price DECIMAL(5,2), city VARCHAR(255)); INSERT INTO sports_venue (venue_id, event_name, price, city) VALUES (1, 'Basketball Game', 120.50, 'California'), (2, 'Baseball Game', 50.00, 'New York'), (3, 'Soccer Game', 30.00, 'California'), (4, 'Hockey Game', 75.00, 'New York'), (5, 'Golf Tournament', 100.00, 'Florida');", "output": "SELECT city, MIN(price) FROM sports_venue GROUP BY city;"}
{"input": " \uc232, \uad00\ub9ac \ubc29\ubc95 \ubc0f \uad00\ub828 \ud0c4\uc18c \uaca9\ub9ac\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Forests ( ForestID INT PRIMARY KEY, Name VARCHAR(50), Country VARCHAR(50), Hectares FLOAT ); CREATE TABLE Management ( ManagementID INT PRIMARY KEY, Method VARCHAR(50), ForestID INT, FOREIGN KEY (ForestID) REFERENCES Forests(ForestID)); CREATE TABLE Harvest ( HarvestID INT PRIMARY KEY, Volume FLOAT, ForestID INT, HarvestDate DATE, FOREIGN KEY (ForestID) REFERENCES Forests(ForestID)); CREATE TABLE Carbon ( CarbonID INT PRIMARY KEY, Sequestration FLOAT, HarvestID INT, FOREIGN KEY (HarvestID) REFERENCES Harvest(HarvestID));", "output": "SELECT Forests.Name, Management.Method, Carbon.Sequestration FROM Forests INNER JOIN Management ON Forests.ForestID = Management.ForestID INNER JOIN Harvest ON Forests.ForestID = Harvest.ForestID INNER JOIN Carbon ON Harvest.HarvestID = Carbon.HarvestID;"}
{"input": " \ubaa8\ub4e0 \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \uc0c1\ud488\uc744 \uc124\uba85\uacfc \ud568\uaed8 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE shariah_compliant_products (product_id INT, product_name TEXT, description TEXT);", "output": "SELECT product_name, description  FROM shariah_compliant_products;"}
{"input": " \uc791\ub144\uc5d0 \uac00\uc0c1 \uad00\uad11\uc774 \uc99d\uac00\ud55c \uc77c\ubcf8\uc758 \ubb38\ud654\uc720\uc0b0\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cultural_sites (site_id INT, site_name TEXT, country TEXT, virtual_visitors INT, year INT); INSERT INTO cultural_sites (site_id, site_name, country, virtual_visitors, year) VALUES (1, 'Historical Kyoto', 'Japan', 12000, 2021), (2, 'Ancient Nara', 'Japan', 15000, 2021), (3, 'Imperial Tokyo', 'Japan', 18000, 2021);", "output": "SELECT site_name, (virtual_visitors - LAG(virtual_visitors) OVER (PARTITION BY country ORDER BY year)) as growth FROM cultural_sites WHERE country = 'Japan' AND growth > 0;"}
{"input": "\uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\ud589\uc744 \ud1b5\ud574 \uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \uc0dd\uc0b0\ud558\ub294 \uc81c\ud488\uc758 \ud3c9\uade0 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE supplier_sustainable_chains (supplier_id INT, product_id INT, quantity INT, sustainable_practices BOOLEAN, FOREIGN KEY (supplier_id) REFERENCES suppliers(id));", "output": "SELECT supplier_id, AVG(quantity) FROM supplier_sustainable_chains WHERE sustainable_practices = TRUE GROUP BY supplier_id;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uac01 \uc57d\uad6d\uc5d0\uc11c \uac01 \ub300\ub9c8\ucd08 \ub18d\ucd95\uc561\uc758 \ud488\uc885\uc774 \uba87 \ubc88\uc774\ub098 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE concentrate_strain_sales (dispensary_id INT, sale_date DATE, strain_id INT, quantity INT); INSERT INTO concentrate_strain_sales (dispensary_id, sale_date, strain_id, quantity) VALUES (1, '2022-04-01', 4, 25), (1, '2022-04-15', 5, 15), (1, '2022-05-05', 6, 10), (2, '2022-04-03', 4, 30), (2, '2022-04-30', 6, 15), (2, '2022-05-20', 4, 20);", "output": "SELECT s.name, d.name, SUM(css.quantity) as total_sales FROM concentrate_strain_sales css JOIN strains s ON css.strain_id = s.id JOIN dispensaries d ON css.dispensary_id = d.id WHERE css.sale_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY s.name, d.name;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\ub294 \uba87 \uac1c\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud504\ub85c\uc81d\ud2b8\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE city (id INT, name VARCHAR(255), population INT, sustainable_projects INT); INSERT INTO city (id, name, population, sustainable_projects) VALUES (1, 'San Francisco', 884363, 450); INSERT INTO city (id, name, population, sustainable_projects) VALUES (2, 'Los Angeles', 4000000, 650); INSERT INTO city (id, name, population, sustainable_projects) VALUES (3, 'New York', 8500000, 1500);", "output": "SELECT name, SUM(sustainable_projects) as total_sustainable_projects FROM city GROUP BY name;"}
{"input": " \uc544\uc2dc\uc544\uc758 \uc218\uc0dd \uc591\uc2dd\uc7a5\uc5d0\uc11c \uad6d\uac00\ubcc4\ub85c \uad6c\ubd84\ub41c \uac01 \uc885\ubcc4 \uc5b4\ub958\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE aquatic_farms (id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO aquatic_farms (id, name, country) VALUES (1, 'Farm A', 'China'), (2, 'Farm B', 'Japan'), (3, 'Farm C', 'Vietnam'); CREATE TABLE fish_farms (id INT, farm_id INT, species_id INT, biomass FLOAT, date DATE); INSERT INTO fish_farms (id, farm_id, species_id, biomass, date) VALUES (1, 1, 1, 1000, '2021-01-01'), (2, 1, 2, 800, '2021-01-01'), (3, 2, 1, 1200, '2021-01-01'), (4, 3, 2, 900, '2021-01-01'), (5, 1, 3, 1500, '2021-02-01'); CREATE TABLE fish_species (id INT, name VARCHAR(255)); INSERT INTO fish_species (id, name) VALUES (1, 'Salmon'), (2, 'Tilapia'), (3, 'Cod');", "output": "SELECT f.country, fs.name, SUM(f.biomass) as total_biomass FROM fish_farms f JOIN aquatic_farms a ON f.farm_id = a.id JOIN fish_species fs ON f.species_id = fs.id WHERE a.country LIKE 'Asia%' GROUP BY f.country, fs.name;"}
{"input": " '\uc568\ubc84\ud0c0'\uc758 \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \ub300\ud55c \ucd5c\ub300 \uac74\uc124 \ube44\uc6a9 \ucc3e\uae30", "context": "CREATE TABLE pipelines (id INT, name VARCHAR(50), location VARCHAR(50), construction_cost DECIMAL(10,2)); INSERT INTO pipelines (id, name, location, construction_cost) VALUES (1, 'Alberta Clipper Pipeline', 'Alberta', 1500000000.00);", "output": "SELECT MAX(construction_cost) FROM pipelines WHERE location = 'Alberta';"}
{"input": " Volunteer_type\uc774 'long-term'\uc774 \ub418\ub3c4\ub85d \uac00\uc7a5 \ub192\uc740 \ucd1d \uc2dc\uac04\uc73c\ub85c \uc790\uc6d0 \ubd09\uc0ac \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE volunteers (volunteer_id INT, total_hours INT, volunteer_type VARCHAR(20)); INSERT INTO volunteers (volunteer_id, total_hours, volunteer_type) VALUES (1, 50, 'short-term'), (2, 150, 'short-term'), (3, 200, 'short-term');", "output": "UPDATE volunteers SET volunteer_type = 'long-term' WHERE total_hours = (SELECT MAX(total_hours) FROM volunteers);"}
{"input": " \ud574\ub2f9 \uce74\ud14c\uace0\ub9ac\uc758 \ud3c9\uade0 \uac00\uaca9\ubcf4\ub2e4 \uac00\uaca9\uc774 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu_items (menu_item_id INT, menu_item_name VARCHAR(50), category VARCHAR(50), price FLOAT, quantity_sold INT); INSERT INTO menu_items (menu_item_id, menu_item_name, category, price, quantity_sold) VALUES (1, 'Burger', 'Main Course', 12.99, 1500);", "output": "SELECT menu_item_name FROM (SELECT menu_item_name, category, price, AVG(price) OVER (PARTITION BY category) as avg_price FROM menu_items) subquery WHERE price > avg_price;"}
{"input": "\uac8c\uc2dc\ubb3c \ubc0f \uad11\uace0 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc2dc\ubb3c \uc218 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE posts (id INT, user_id INT, content TEXT, posted_at TIMESTAMP); CREATE TABLE ads (id INT, post_id INT, impressions INT, clicks INT, cost FLOAT); INSERT INTO posts (id, user_id, content, posted_at) VALUES (1, 1, 'Hello World!', '2021-03-02 10:30:00'), (2, 2, 'Social Media', '2021-02-18 14:45:00'), (3, 3, 'Programming', '2021-03-01 09:00:00'), (4, 3, 'AI', '2021-03-01 10:00:00'); INSERT INTO ads (id, post_id, impressions, clicks, cost) VALUES (1, 1, 5000, 100, 50.5), (2, 2, 7000, 120, 55.3), (3, 3, 3000, 50, 30.0), (4, 4, 8000, 150, 70.0);", "output": "SELECT u.id, u.name, COUNT(p.id) AS post_count, SUM(a.impressions) AS total_impressions, AVG(a.cost) AS avg_cost FROM users u JOIN posts p ON u.id = p.user_id LEFT JOIN ads a ON p.id = a.post_id GROUP BY u.id, u.name ORDER BY post_count DESC LIMIT 3;"}
{"input": " \uc8fc\ubcc4\ub85c \ubcd1\uc0c1 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ubcd1\uc6d0\uc744 \ud655\uc778\ud558\uace0 \ubcd1\uc6d0 \uc774\ub984\uacfc \ud568\uaed8 \ucd5c\uace0 \ubcd1\uc0c1 \uc218\uc640 \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \ubcd1\uc0c1 \uc218\uc758 \ucc28\uc774\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE hospitals (state varchar(2), hospital_name varchar(25), num_beds int); INSERT INTO hospitals (state, hospital_name, num_beds) VALUES ('NY', 'NY Presbyterian', 2001), ('CA', 'UCLA Medical', 3012), ('TX', 'MD Anderson', 1543), ('FL', 'Mayo Clinic FL', 2209);", "output": "SELECT hospital_name as highest_bed_hospital, MAX(num_beds) - LEAD(MAX(num_beds)) OVER (ORDER BY MAX(num_beds) DESC) as bed_difference FROM hospitals GROUP BY state HAVING MAX(num_beds) > LEAD(MAX(num_beds)) OVER (ORDER BY MAX(num_beds) DESC);"}
{"input": "\uc791\ub144\uc5d0 IT \ubd80\uc11c\uc758 \uc0ac\uc6a9\uc790\uc640 \uad00\ub828\ub41c \ubcf4\uc548 \uc0ac\uace0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (incident_id INT, incident_date DATE, user_id INT);CREATE TABLE users (user_id INT, user_name VARCHAR(255), department VARCHAR(255));", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM security_incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR))) as percentage FROM security_incidents si JOIN users u ON si.user_id = u.user_id WHERE u.department = 'IT' AND incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 2020\ub144 \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uad6d\uac00\uc758 \uad70\uc0ac \ud601\uc2e0\uc744 \uc704\ud574 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA military_innovation;CREATE TABLE ap_budget (country VARCHAR(50), budget INT, year INT, region VARCHAR(50));INSERT INTO ap_budget (country, budget, year, region) VALUES ('China', 8000000, 2020, 'Asia-Pacific'), ('Japan', 6000000, 2020, 'Asia-Pacific'), ('India', 4000000, 2020, 'Asia-Pacific'), ('South Korea', 7000000, 2020, 'Asia-Pacific');", "output": "SELECT SUM(budget) FROM military_innovation.ap_budget WHERE year = 2020 AND region = 'Asia-Pacific';"}
{"input": " \uc5f0\uac04 \uc608\uc0b0\ubcc4 \uc0c1\uc704 3\uac1c \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \uacc4\ud68d\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE smart_city_initiatives (initiative_id INT, initiative_name VARCHAR(100), annual_budget FLOAT); INSERT INTO smart_city_initiatives (initiative_id, initiative_name, annual_budget) VALUES (1, 'Smart Lighting', 5000000), (2, 'Smart Waste Management', 7000000), (3, 'Smart Traffic Management', 6000000);", "output": "SELECT initiative_name, annual_budget FROM (SELECT initiative_name, annual_budget, ROW_NUMBER() OVER (ORDER BY annual_budget DESC) rn FROM smart_city_initiatives) WHERE rn <= 3"}
{"input": " 15\uba85 \uc774\uc0c1\uc758 \uadf8\ub8f9 \uaddc\ubaa8\ub85c \ud30c\ub9ac \ubc15\ubb3c\uad00\uc744 \ubc29\ubb38\ud55c \ucc38\uc11d\uc790\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE group_tours (tour_id INT, name VARCHAR(50), museum_id INT, group_size INT); CREATE TABLE museums (museum_id INT, name VARCHAR(50), city VARCHAR(50)); CREATE TABLE museum_visitors (visitor_id INT, museum_id INT, visit_count INT); INSERT INTO museums (museum_id, name, city) VALUES (1, 'Louvre Museum', 'Paris'); INSERT INTO group_tours (tour_id, name, museum_id, group_size) VALUES (1, 'Paris Art Tour', 1, 18); INSERT INTO museum_visitors (visitor_id, museum_id, visit_count) VALUES (1, 1, 6);", "output": "DELETE FROM museum_visitors WHERE museum_id = 1 AND visitor_id IN (SELECT v.visitor_id FROM museum_visitors v JOIN group_tours gt ON v.museum_id = gt.museum_id WHERE gt.group_size > 15);"}
{"input": "\uc218\ud559\uacfc\uc5d0\ub294 \uba87 \uac00\uc9c0 \ub3c5\ud2b9\ud55c \uc720\ud615\uc758 \ud3b8\uc758 \uc2dc\uc124\uc774 \uc81c\uacf5\ub418\uba70, \uc5ed\uc0ac\ud559\uacfc\uc5d0\ub294 \uba87 \uac00\uc9c0 \ub3c5\ud2b9\ud55c \uc720\ud615\uc758 \ud3b8\uc758 \uc2dc\uc124\uc774 \uc81c\uacf5\ub429\ub2c8\uae4c?", "context": "CREATE TABLE MathAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO MathAccommodations (AccommodationID, Department) VALUES (1, 'Mathematics'), (2, 'Mathematics'), (3, 'Mathematics'); CREATE TABLE HistoryAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO HistoryAccommodations (AccommodationID, Department) VALUES (4, 'History'), (5, 'History');", "output": "SELECT COUNT(DISTINCT AccommodationID) FROM MathAccommodations WHERE Department = 'Mathematics' INTERSECT SELECT COUNT(DISTINCT AccommodationID) FROM HistoryAccommodations WHERE Department = 'History';"}
{"input": " \ub0a8\uadf9 \ubcf4\uc874 \ud504\ub85c\uadf8\ub7a8 \uc911 \uac01 \uae30\uad00\uc5d0\uc11c \uc9c4\ud589\ud558\ub294 \uc9c0\uc5ed\uc0ac\ud68c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc740 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE antarctic_education_programs (organization VARCHAR(50), program_date DATE); INSERT INTO antarctic_education_programs (organization, program_date) VALUES ('Organization A', '2020-01-01'), ('Organization B', '2019-12-15'), ('Organization A', '2018-06-20');", "output": "SELECT organization, COUNT(*) FROM antarctic_education_programs GROUP BY organization;"}
{"input": " \uc804\ubb38 \ubd84\uc57c\uc5d0 '\uce58\ub8cc\uc0ac'\uac00 \uc788\uace0 New York, NY\uc5d0 \uc704\uce58\ud55c \ubaa8\ub4e0 \uc81c\uacf5\uc790\uc758 \uc774\ub984, \uc131 \ubc0f \ub3c4\uc2dc\ub97c \uac01 \uc81c\uacf5\uc790\uc5d0\uac8c \ud560\ub2f9\ub41c \ud658\uc790 \uc218 \ubc0f \uac01 \uc81c\uacf5\uc790\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624. \ud658\uc790", "context": "CREATE TABLE providers (provider_id INT, first_name VARCHAR(50), last_name VARCHAR(50), specialty VARCHAR(50), city VARCHAR(50), state VARCHAR(2)); CREATE TABLE patients (patient_id INT, provider_id INT, first_name VARCHAR(50), last_name VARCHAR(50), city VARCHAR(50), state VARCHAR(2), mental_health_score INT); CREATE TABLE mental_health_scores (score_id INT, patient_id INT, mental_health_score INT);", "output": "SELECT p.first_name, p.last_name, p.city, AVG(m.mental_health_score) AS avg_score, COUNT(pa.patient_id) AS patient_count FROM providers p JOIN patients pa ON p.provider_id = pa.provider_id JOIN mental_health_scores m ON pa.patient_id = m.patient_id WHERE p.specialty LIKE '%therapist%' AND p.city = 'New York' AND p.state = 'NY' GROUP BY p.provider_id, p.first_name, p.last_name, p.city ORDER BY avg_score DESC;"}
{"input": " \uc9c0\uc5ed\ubcc4, \uc9c0\uc5ed\ubcc4, \uace0\uac1d \uc218\ubcc4\ub85c \uc815\ub82c\ud55c \uc7ac\uc815\uc801 \ub2a5\ub825\uc774 \uc788\ub294 \uace0\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE financially_capable_customers (customer_id INT, customer_name TEXT, region TEXT, financially_capable BOOLEAN); INSERT INTO financially_capable_customers VALUES (1, 'John Doe', 'North', TRUE), (2, 'Jane Smith', 'North', TRUE), (3, 'Ahmed Ali', 'South', FALSE), (4, 'Aisha Khan', 'East', TRUE);", "output": "SELECT region, COUNT(*) as num_customers, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC, region) as rank FROM financially_capable_customers WHERE financially_capable = TRUE GROUP BY region ORDER BY num_customers DESC, region;"}
{"input": "2022\ub144 2\ubd84\uae30\uc5d0 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ud310\ub9e4\ub41c Blue Dream \ud488\uc885\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cultivars (id INT, name TEXT, type TEXT);CREATE TABLE Inventory (id INT, cultivar_id INT, quantity INT, dispensary_id INT);CREATE TABLE Sales (id INT, inventory_id INT, quantity INT, sale_date DATE); INSERT INTO Cultivars (id, name, type) VALUES (1, 'Blue Dream', 'Hybrid'); INSERT INTO Inventory (id, cultivar_id, quantity, dispensary_id) VALUES (1, 1, 100, 1); INSERT INTO Sales (id, inventory_id, quantity, sale_date) VALUES (1, 1, 20, '2022-04-01');", "output": "SELECT SUM(sales.quantity) as total_quantity_sold FROM Cultivars c JOIN Inventory i ON c.id = i.cultivar_id JOIN Sales sales ON i.id = sales.inventory_id WHERE c.name = 'Blue Dream' AND i.dispensary_id IN (SELECT id FROM Dispensaries WHERE state = 'California') AND sales.sale_date BETWEEN '2022-04-01' AND '2022-06-30'"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \ubc1c\uc0ac\ud55c \uac00\uc7a5 \ubb34\uac70\uc6b4 \uc704\uc131 \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(50), LaunchDate DATE, Manufacturer VARCHAR(50), Country VARCHAR(50), Weight DECIMAL(10,2)); INSERT INTO Satellites (SatelliteID, Name, LaunchDate, Manufacturer, Country, Weight) VALUES (1, 'Kompsat-5', '2013-08-10', 'KARI', 'South Korea', 1250.00), (2, 'GSAT-7', '2013-09-30', 'ISRO', 'India', 2650.00);", "output": "SELECT SatelliteID, Name, LaunchDate, Manufacturer, Country, Weight, ROW_NUMBER() OVER(PARTITION BY Country ORDER BY Weight DESC) as Rank FROM Satellites;"}
{"input": " \ud56d\ub9cc\ub2f9 \uc120\ubc15\uc758 \ud3c9\uade0 \ucd1d\ud1a4\uc218\ub294 \uac00\uc7a5 \ub192\uc740 \ud3c9\uade0\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Port (PortID INT, PortName VARCHAR(100), City VARCHAR(100), Country VARCHAR(100)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands'); CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(100), PortID INT, LOA DECIMAL(5,2), GrossTonnage DECIMAL(5,2)); INSERT INTO Vessel (VesselID, VesselName, PortID, LOA, GrossTonnage) VALUES (1, 'Ever Given', 1, 400.00, 220000.00); INSERT INTO Vessel (VesselID, VesselName, PortID, LOA, GrossTonnage) VALUES (2, 'MSC Zoe', 2, 399.99, 199672.00);", "output": "SELECT PortID, AVG(GrossTonnage) OVER(PARTITION BY PortID ORDER BY PortID) AS AvgGT FROM Vessel ORDER BY AvgGT DESC"}
{"input": " UN\uc774 \uc218\ud589\ud558\ub294 \ud3c9\ud654\uc720\uc9c0 \ud65c\ub3d9\uc740 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PeacekeepingOperations (OperationID INT, OperationName VARCHAR(100), OperationType VARCHAR(50), StartDate DATE, EndDate DATE);", "output": "SELECT COUNT(OperationID) FROM PeacekeepingOperations WHERE OperationType = 'Peacekeeping';"}
{"input": " 2\uac1c \uc774\uc0c1\uc758 \uc11c\ub85c \ub2e4\ub978 \uc6d0\uc0b0\uc9c0 \uad6d\uac00\uc758 \uc81c\ud488\uc744 \ucde8\uae09\ud558\ub294 \uc18c\ub9e4\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE retailers (retailer_id INT, retailer_name TEXT);CREATE TABLE products (product_id INT, product_name TEXT, country_of_origin TEXT);CREATE TABLE inventory (retailer_id INT, product_id INT);", "output": "SELECT retailers.retailer_name FROM retailers JOIN inventory ON retailers.retailer_id = inventory.retailer_id JOIN products ON inventory.product_id = products.product_id GROUP BY retailers.retailer_name HAVING COUNT(DISTINCT products.country_of_origin) > 2;"}
{"input": " '\ub0a8\ubbf8' \uc9c0\uc5ed \ubaa8\ubc14\uc77c \uace0\uac1d\uc774 \ud558\ub8e8\uc5d0 \uc0ac\uc6a9\ud558\ub294 \ucd5c\uc18c \ub370\uc774\ud130 \uc591\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE usage (id INT, subscriber_id INT, data_usage DECIMAL(10,2), type VARCHAR(10), region VARCHAR(10), usage_date DATE); INSERT INTO usage (id, subscriber_id, data_usage, type, region, usage_date) VALUES (1, 1, 12.5, 'mobile', 'South America', '2022-01-01'), (2, 2, 8.0, 'mobile', 'South America', '2022-01-02'), (3, 3, 15.0, 'broadband', 'South America', '2022-01-03');", "output": "SELECT MIN(usage.data_usage) AS min_data_usage FROM usage WHERE usage.type = 'mobile' AND usage.region = 'South America';"}
{"input": "\uc8fc\ubcc4\ub85c \uacbd\ucc30 \ubc0f \uc18c\ubc29 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE states (state_id INT, state_name VARCHAR(255)); CREATE TABLE police_services (service_id INT, service_name VARCHAR(255), state_id INT, budget INT); CREATE TABLE fire_services (service_id INT, service_name VARCHAR(255), state_id INT, budget INT);", "output": "SELECT s.state_name, ROUND(100 * SUM(ps.budget) / (SELECT SUM(ps2.budget) FROM police_services ps2 WHERE ps2.state_id = s.state_id) , 2) as police_budget_percentage, ROUND(100 * SUM(fs.budget) / (SELECT SUM(fs2.budget) FROM fire_services fs2 WHERE fs2.state_id = s.state_id) , 2) as fire_budget_percentage FROM states s LEFT JOIN police_services ps ON s.state_id = ps.state_id LEFT JOIN fire_services fs ON s.state_id = fs.state_id GROUP BY s.state_name;"}
{"input": " \ud310\ub9e4 \uc218\uc775 \ube44\uc728\ub85c \ubd84\ud560\ud558\uace0 \ud310\ub9e4 \ub0a0\uc9dc\ub97c \uae30\uc900\uc73c\ub85c \uac01 \ud30c\ud2f0\uc158 \ub0b4\uc5d0\uc11c \uc815\ub82c\ud55c \uac01 \uc758\ub958\uc758 \ud310\ub9e4 \uc218\uc775 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Garments (GarmentID INT, SalePrice DECIMAL(10,2));CREATE TABLE Sales (SaleID INT, GarmentID INT, SaleDate DATE, Quantity INT);", "output": "SELECT g.GarmentID, g.SalePrice, 100.0 * SUM(s.Quantity * g.SalePrice) / SUM(s.Quantity * g.SalePrice) OVER (PARTITION BY NULL) AS PercentageRevenue, s.SaleDate FROM Garments g JOIN Sales s ON g.GarmentID = s.GarmentID GROUP BY g.GarmentID, s.SaleDate ORDER BY s.SaleDate;"}
{"input": " \uc911\uad6d\uc774 1\ub144\uc5d0 \uc81c\ucd9c\ud55c \uad70\uc0ac\uae30\uc220 \ud2b9\ud5c8\uc758 \ucd5c\ub300 \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tech_patents_china (country VARCHAR(255), year INT, num_patents INT); INSERT INTO tech_patents_china (country, year, num_patents) VALUES ('China', 2015, 1000), ('China', 2016, 1200), ('China', 2017, 1400);", "output": "SELECT MAX(num_patents) FROM tech_patents_china WHERE country = 'China';"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc720\uae30\ub18d \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT, name TEXT); INSERT INTO regions (id, name) VALUES (1, 'North America'), (2, 'South America'), (3, 'Europe'), (4, 'Asia'), (5, 'Africa'); CREATE TABLE products (id INT, name TEXT, is_organic BOOLEAN); INSERT INTO products (id, name, is_organic) VALUES (1, 'Product X', true), (2, 'Product Y', false), (3, 'Product Z', true), (4, 'Product W', false); CREATE TABLE sales (id INT, product TEXT, quantity INT, region TEXT); INSERT INTO sales (id, product, quantity, region) VALUES (1, 'Product X', 100, 'North America'), (2, 'Product Y', 150, 'South America'), (3, 'Product Z', 80, 'Europe'), (4, 'Product W', 120, 'Asia');", "output": "SELECT SUM(sales.quantity) FROM sales INNER JOIN regions ON sales.region = regions.name INNER JOIN products ON sales.product = products.name WHERE products.is_organic = true AND regions.name = 'North America';"}
{"input": " \uc2e4\ud589 \uac00\ub2a5\ud55c \uc778\ud154\ub9ac\uc804\uc2a4 \ubcf4\uace0\uc11c \uc218\uc640 \ud568\uaed8 \uc9c0\ub09c \uc8fc\uc5d0 \uac00\uc7a5 \uc2e4\ud589 \uac00\ub2a5\ud55c \uc778\ud154\ub9ac\uc804\uc2a4\ub97c \uc81c\uacf5\ud55c \uc0c1\uc704 3\uac1c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \uc18c\uc2a4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence (id INT PRIMARY KEY, source VARCHAR(50), actionable_report BOOLEAN, report_time TIMESTAMP); INSERT INTO threat_intelligence (id, source, actionable_report, report_time) VALUES (1, 'FireEye', TRUE, '2022-07-01 10:00:00'), (2, 'CrowdStrike', FALSE, '2022-07-02 12:30:00'), (3, 'Mandiant', TRUE, '2022-07-03 08:15:00');", "output": "SELECT source, COUNT(*) as actionable_reports FROM threat_intelligence WHERE actionable_report = TRUE AND report_time >= NOW() - INTERVAL '1 week' GROUP BY source ORDER BY actionable_reports DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \uc694\ub9ac \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cuisine_revenue (cuisine VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO cuisine_revenue (cuisine, revenue) VALUES ('Italian', 6000.00), ('Mexican', 5000.00), ('Chinese', 4000.00), ('Japanese', 3000.00), ('Indian', 2000.00);", "output": "SELECT cuisine, SUM(revenue) as total_revenue FROM cuisine_revenue WHERE cuisine_revenue.cuisine IN (SELECT cuisine FROM restaurant_revenue WHERE date >= DATE_SUB(CURDATE(), INTERVAL 60 DAY)) GROUP BY cuisine ORDER BY total_revenue DESC;"}
{"input": " \"Cybernetic Showdown\" e\uc2a4\ud3ec\uce20 \ud1a0\ub108\uba3c\ud2b8\uc5d0 \ucc38\uac00\ud55c \ubd81\ubbf8 \ud300\uc758 \ucd1d \uc2b9\ub9ac \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE team_info (id INT, team_name VARCHAR(50), region VARCHAR(30), wins INT, losses INT); INSERT INTO team_info (id, team_name, region, wins, losses) VALUES (1, 'Northern Lights', 'North America', 15, 5); INSERT INTO team_info (id, team_name, region, wins, losses) VALUES (2, 'Quantum Knights', 'Europe', 10, 8); INSERT INTO team_info (id, team_name, region, wins, losses) VALUES (3, 'Phoenix Force', 'North America', 12, 7); INSERT INTO team_info (id, team_name, region, wins, losses) VALUES (4, 'Cyber Sabers', 'Asia', 8, 10);", "output": "SELECT SUM(wins) FROM team_info WHERE region = 'North America';"}
{"input": " \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\uc758 \uc7ac\ub8cc \uc720\ud615\ubcc4 \uc7ac\ud65c\uc6a9\ub960\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates(city VARCHAR(255), material_type VARCHAR(255), recycling_percentage DECIMAL(5,2)); INSERT INTO recycling_rates VALUES ('CityA', 'Plastic', 35.5);", "output": "SELECT material_type, AVG(recycling_percentage) OVER (PARTITION BY material_type) as avg_recycling_rate FROM (SELECT city, material_type, AVG(recycling_percentage) as recycling_percentage FROM recycling_rates GROUP BY city, material_type ORDER BY SUM(recycling_percentage) DESC FETCH FIRST 3 ROWS ONLY)"}
{"input": " \ucc3d\uace0 W\uc640 \ucc3d\uace0 X\uc5d0 'K' \uc720\ud615 \ub610\ub294 'L' \uc720\ud615 \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_w(item_id INT, item_type VARCHAR(10), quantity INT);CREATE TABLE warehouse_x(item_id INT, item_type VARCHAR(10), quantity INT);INSERT INTO warehouse_w(item_id, item_type, quantity) VALUES (1, 'K', 200), (2, 'L', 300), (3, 'K', 50), (4, 'L', 400);INSERT INTO warehouse_x(item_id, item_type, quantity) VALUES (1, 'K', 150), (2, 'L', 250), (3, 'K', 40), (4, 'L', 350);", "output": "SELECT quantity FROM warehouse_w WHERE item_type IN ('K', 'L') UNION ALL SELECT quantity FROM warehouse_x WHERE item_type IN ('K', 'L');"}
{"input": " \uc778\ub3c4\uc640 \uc911\uad6d\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc9c4\ud589\ub418\uace0 \uc788\ub098\uc694?", "context": "CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.research (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), type VARCHAR(255)); INSERT INTO biotech.research (id, name, country, type) VALUES (1, 'ProjectA', 'India', 'Genetics'), (2, 'ProjectB', 'China', 'Bioprocess'), (3, 'ProjectC', 'India', 'Genetics'), (4, 'ProjectD', 'USA', 'Genetics');", "output": "SELECT COUNT(*) FROM biotech.research WHERE type = 'Genetics' AND (country = 'India' OR country = 'China');"}
{"input": " \ub300\ub9c8 \uc758\ub958\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE materials (id INT, name VARCHAR(255), type VARCHAR(255), PRIMARY KEY(id)); INSERT INTO materials (id, name, type) VALUES (12, 'Hemp', 'Fabric'); CREATE TABLE products (id INT, name VARCHAR(255), category VARCHAR(255), price DECIMAL(10, 2), material_id INT, PRIMARY KEY(id), FOREIGN KEY (material_id) REFERENCES materials(id)); INSERT INTO products (id, name, category, price, material_id) VALUES (13, 'Hemp T-Shirt', 'Clothing', 35.00, 12), (14, 'Hemp Pants', 'Clothing', 50.00, 12);", "output": "SELECT SUM(price) FROM products WHERE name IN ('Hemp T-Shirt', 'Hemp Pants') AND material_id = (SELECT id FROM materials WHERE name = 'Hemp');"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ParityViolations (ViolationID int, RegionID int, ViolationCount int);", "output": "SELECT RegionID, SUM(ViolationCount) as TotalViolations FROM ParityViolations GROUP BY RegionID;"}
{"input": " \ud310\ub9e4 \uc218\ub7c9\uc774 \uac00\uc7a5 \uc801\uc740 \uba54\ub274 \ud56d\ubaa9\uacfc \uac00\uc7a5 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc774\uba70, \uc774\ub7ec\ud55c \ud56d\ubaa9\uc758 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (menu_item_id INT, menu_item_name VARCHAR(50), category VARCHAR(50), price FLOAT, quantity_sold INT); INSERT INTO menu_items (menu_item_id, menu_item_name, category, price, quantity_sold) VALUES (1, 'Burger', 'Main Course', 12.99, 1500);", "output": "SELECT menu_item_name, price, quantity_sold, RANK() OVER (ORDER BY quantity_sold) FROM menu_items;"}
{"input": " \ud2b9\uc815 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc0ac\uc6a9\uc790\ub2f9 \ud3c9\uade0 \uc2a4\ud2b8\ub9ac\ubc0d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (id INT, name VARCHAR(100)); CREATE TABLE Users (id INT, name VARCHAR(100)); CREATE TABLE Streams (id INT, user_id INT, artist_id INT, minutes DECIMAL(10,2));", "output": "SELECT artist_id, AVG(minutes/COUNT(*)) AS avg_minutes_per_user FROM Streams GROUP BY artist_id;"}
{"input": " \uacf5\uacf5\uc0ac\uc5c5 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PublicWorksB(id INT, project VARCHAR(30), budget DECIMAL(10,2)); INSERT INTO PublicWorksB(id, project, budget) VALUES (1, 'Highway Construction', 800000.00), (2, 'Airport Expansion', 3000000.00);", "output": "SELECT MAX(budget) FROM PublicWorksB;"}
{"input": " \uac01 \uc5b8\uc5b4\ub85c \ucf58\ud150\uce20\ub97c \ubcf8 \ucd1d \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE content_lang (content_id INT, content_language VARCHAR(20)); CREATE TABLE content_views (view_id INT, user_id INT, content_id INT, view_date DATE);", "output": "SELECT content_language, COUNT(DISTINCT users.user_id) as user_count FROM content_views JOIN content_lang ON content_views.content_id = content_lang.content_id JOIN users ON content_views.user_id = users.user_id GROUP BY content_lang.content_language;"}
{"input": " \uc77c\ub9ac\ub178\uc774\uc8fc\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2fc \uc81c\ud488\uc744 \ud310\ub9e4\ud558\ub294 \ud310\ub9e4\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vendors (vendor_id INT, vendor_name VARCHAR(50), state VARCHAR(50)); INSERT INTO vendors VALUES (1, 'VendorA', 'Illinois'); INSERT INTO vendors VALUES (2, 'VendorB', 'Texas'); CREATE TABLE products (product_id INT, product_name VARCHAR(50), vendor_id INT, price DECIMAL(5,2)); INSERT INTO products VALUES (1, 'Product1', 1, 150); INSERT INTO products VALUES (2, 'Product2', 1, 75); INSERT INTO products VALUES (3, 'Product3', 2, 100); INSERT INTO products VALUES (4, 'Product4', 1, 200);", "output": "SELECT vendors.vendor_name FROM vendors JOIN products ON vendors.vendor_id = products.vendor_id WHERE vendors.state = 'Illinois' AND products.price = (SELECT MAX(price) FROM products WHERE products.vendor_id = vendors.vendor_id);"}
{"input": " \uc815\uc2e0\uac74\uac15\uc774 \ubcf4\ud1b5\uc774\uace0 \uc131\uc801\uc774 \ub0ae\uc740 \ud559\uc0dd", "context": "CREATE TABLE students (id INT, name VARCHAR(50), mental_health_score INT, grade INT); INSERT INTO students (id, name, mental_health_score, grade) VALUES (1, 'John Doe', 65, 6);", "output": "SELECT name FROM students WHERE mental_health_score BETWEEN 60 AND 79 INTERSECT SELECT name FROM students WHERE grade < 7;"}
{"input": " \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc810\uc218 \uc0ac\ubd84\uc704\uc218\ub97c \uae30\uc900\uc73c\ub85c \uc815\uc2e0 \uac74\uac15 \uc0c1\ud0dc\ub85c \uce58\ub8cc\ubc1b\uc740 \ud658\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, mental_health_condition VARCHAR(10), mental_health_parity_score INT); INSERT INTO patients (patient_id, mental_health_condition, mental_health_parity_score) VALUES (1, 'Anxiety', 75), (2, 'Depression', 80), (3, 'Bipolar', 60), (4, 'PTSD', 90), (5, 'Anxiety', 70), (6, 'Depression', 80), (7, 'Bipolar', 70), (8, 'PTSD', 65);", "output": "SELECT NTILE(4) OVER (ORDER BY mental_health_parity_score) AS quartile, COUNT(*) FROM patients GROUP BY quartile;"}
{"input": " \uc9c0\uc5ed\ubcc4, \uc0c1\ud488\ubcc4 \ud3c9\uade0 \uac70\ub798\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE regions (id INT, region_name VARCHAR(50)); INSERT INTO regions (id, region_name) VALUES (1, 'Northeast'), (2, 'Southeast'); CREATE TABLE product_types (id INT, product_type VARCHAR(50)); INSERT INTO product_types (id, product_type) VALUES (1, 'Stocks'), (2, 'Bonds'); CREATE TABLE transactions (region_id INT, product_type_id INT, transaction_amount DECIMAL(10,2)); INSERT INTO transactions (region_id, product_type_id, transaction_amount) VALUES (1, 1, 200.00), (1, 1, 300.00), (2, 1, 100.00), (2, 1, 400.00), (1, 2, 50.00), (1, 2, 150.00), (2, 2, 75.00), (2, 2, 225.00);", "output": "SELECT r.region_name, p.product_type, AVG(t.transaction_amount) as avg_transaction_amount FROM regions r JOIN transactions t ON r.id = t.region_id JOIN product_types p ON t.product_type_id = p.id GROUP BY r.region_name, p.product_type;"}
{"input": " \uacf5\uacfc\ub300\ud559\uc5d0\ub294 \ub0a8\uad50\uc9c1\uc6d0\uacfc \uc5ec\uad50\uc218\uac00 \uba87 \uba85 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(255), gender VARCHAR(10), department_id INT); INSERT INTO faculty (id, name, gender, department_id) VALUES (1, 'Alice', 'Female', 1), (2, 'Bob', 'Male', 1), (3, 'Charlie', 'Male', 2), (4, 'Diana', 'Female', 2); CREATE TABLE department (id INT, name VARCHAR(255)); INSERT INTO department (id, name) VALUES (1, 'Mechanical Engineering'), (2, 'Electrical Engineering');", "output": "SELECT gender, COUNT(*) as count FROM faculty WHERE department_id IN (SELECT id FROM department WHERE name IN ('Mechanical Engineering', 'Electrical Engineering')) GROUP BY gender;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud574\uc678 \ubc29\ubb38\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc740 \ubc15\ubb3c\uad00\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE museums (id INT, name TEXT, city TEXT);CREATE TABLE museum_visitors (id INT, visitor_id INT, museum_id INT, country TEXT);CREATE TABLE visitors (id INT, name TEXT);", "output": "SELECT m.name, COUNT(mv.visitor_id) as num_visitors FROM museums m JOIN museum_visitors mv ON m.id = mv.museum_id JOIN visitors v ON mv.visitor_id = v.id WHERE v.country != 'USA' AND mv.visit_date >= DATEADD(month, -6, GETDATE()) GROUP BY m.name ORDER BY num_visitors DESC LIMIT 1;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc2dd\ud488 \uc815\uc758 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \uae30\uc5ec\ud55c 3\uc778\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE food_justice_contributors (id INT, name TEXT, contributions FLOAT); INSERT INTO food_justice_contributors (id, name, contributions) VALUES (1, 'Contributor 1', 10000.0), (2, 'Contributor 2', 15000.0), (3, 'Contributor 3', 20000.0), (4, 'Contributor 4', 25000.0);", "output": "SELECT name, contributions FROM (SELECT name, contributions, ROW_NUMBER() OVER (ORDER BY contributions DESC) as rank FROM food_justice_contributors WHERE country = 'Africa') as ranked_contributors WHERE rank <= 3;"}
{"input": " \uc9c0\ub09c \ub2ec \ucc44\uc2dd\uc8fc\uc758 \uace0\uac1d\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc0c1\uc704 5\uac1c \uc694\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders (id INT, dish_id INT, order_date DATE, quantity INT); CREATE TABLE customers (id INT, is_vegetarian BOOLEAN); CREATE TABLE dishes (id INT, name TEXT);", "output": "SELECT dishes.name, SUM(orders.quantity) as total_quantity FROM orders JOIN customers ON orders.id = customers.id JOIN dishes ON orders.dish_id = dishes.id WHERE customers.is_vegetarian = true AND orders.order_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE GROUP BY dishes.name ORDER BY total_quantity DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc0c1\uc704 3\uac1c \ud559\uc220\uc9c0\uc5d0 \uac01\uac01 \uba87 \uba85\uc758 \ub300\ud559\uc6d0\uc0dd\uc774 \ub17c\ubb38\uc744 \uac8c\uc7ac\ud558\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE student_publications (id INT, student_id INT, journal_name VARCHAR(255), publication_year INT); INSERT INTO student_publications (id, student_id, journal_name, publication_year) VALUES (1, 123, 'Journal A', 2018), (2, 456, 'Journal B', 2019), (3, 789, 'Journal C', 2020), (4, 321, 'Journal A', 2017), (5, 654, 'Journal B', 2021);", "output": "SELECT journal_name, COUNT(*) as publications, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank FROM student_publications WHERE publication_year BETWEEN 2016 AND 2021 GROUP BY journal_name HAVING rank <= 3;"}
{"input": " 2021\ub144 \uc774\uc804\uc5d0 \ud68c\uc0ac\uc5d0 \uc774\ubbf8 \uadfc\ubb34\ud55c \uc9c1\uc6d0\uc744 \uc81c\uc678\ud558\uace0 2021\ub144 \uc6d4\ubcc4 '\uace0\uac1d \uc11c\ube44\uc2a4' \ubd80\uc11c\uc758 \uc2e0\uaddc \uc9c1\uc6d0 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE new_employees (id INT, name VARCHAR(50), department VARCHAR(50), start_date DATE);", "output": "SELECT EXTRACT(MONTH FROM start_date) AS month, COUNT(*) AS new_employees  FROM new_employees WHERE department = 'Customer Service' AND EXTRACT(YEAR FROM start_date) = 2021 AND start_date > DATE '2020-12-31' GROUP BY month ORDER BY month;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc5f0\ub839\ub300\ubcc4 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c \ud3c9\uade0 \uc0ac\uc6a9 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE usage (id INT, subscriber_id INT, plan_id INT, usage_time DECIMAL(10,2), age INT); CREATE TABLE mobile_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2)); CREATE TABLE subscribers (id INT, name VARCHAR(255), plan_id INT); CREATE TABLE age_groups (id INT, age_range VARCHAR(255));", "output": "SELECT mobile_plans.name AS mobile_plan, age_groups.age_range AS age_group, AVG(usage_time) FROM usage JOIN mobile_plans ON usage.plan_id = mobile_plans.id JOIN subscribers ON usage.subscriber_id = subscribers.id JOIN age_groups ON subscribers.age = age_groups.id GROUP BY mobile_plans.name, age_groups.age_range;"}
{"input": " \uc778\ubb38\uacc4\uc5f4\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc9c0 \ubabb\ud55c \uc778\uc9c0 \uc7a5\uc560 \ud559\uc0dd\uc740 \uba87 \uba85\uc774\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, cognitive_impairment BOOLEAN, department VARCHAR(255)); INSERT INTO students (id, cognitive_impairment, department) VALUES (1, true, 'humanities'), (2, false, 'engineering'), (3, true, 'humanities'), (4, false, 'engineering'), (5, true, 'humanities'); CREATE TABLE accommodations (id INT, student_id INT, year INT); INSERT INTO accommodations (id, student_id, year) VALUES (1, 1, 2018), (2, 1, 2019), (3, 3, 2018), (4, 3, 2019), (5, 3, 2020), (6, 4, 2020), (7, 5, 2018), (8, 5, 2019), (9, 5, 2020);", "output": "SELECT COUNT(*) FROM students s WHERE s.cognitive_impairment = true AND s.department = 'humanities' AND s.id NOT IN (SELECT student_id FROM accommodations);"}
{"input": " \ub9e4\ub144 \uae30\uc220 \ubd80\ubb38\uc5d0\uc11c \uc18c\uc678\ub41c \ucee4\ubba4\ub2c8\ud2f0\uc758 \uc0ac\ub78c\ub4e4\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name TEXT, founding_year INT, industry TEXT, founder_community TEXT);", "output": "SELECT founding_year, COUNT(*) FROM companies WHERE industry = 'technology' AND founder_community IN ('underrepresented1', 'underrepresented2', 'underrepresented3') GROUP BY founding_year;"}
{"input": " \ub3c4\ucfc4 \uc2dc\ub0b4 \uc0c1\uc704 5\uac1c \uace0\uac1d\uc758 \ucd1d \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), data_usage FLOAT, city VARCHAR(50));", "output": "SELECT SUM(data_usage) FROM customers WHERE city = 'Tokyo' AND id IN (SELECT id FROM (SELECT id FROM customers WHERE city = 'Tokyo' ORDER BY data_usage DESC LIMIT 5) subquery) ORDER BY data_usage DESC;"}
{"input": " 'MoMA' \ubbf8\uc220\uad00\uc5d0 \uc791\ud488\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \uc791\uac00\ub4e4\uc758 \ucd5c\uc18c \ucc3d\uc791 \uc791\ud488 \uc218\ub294 \uba87 \uc810\uc778\uac00\uc694?", "context": "CREATE TABLE artist_museums (artist_id INT, museum_name TEXT); INSERT INTO artist_museums (artist_id, museum_name) VALUES (1, 'MoMA'), (2, 'Met'), (3, 'Tate'), (4, 'MoMA'), (5, 'Tate'); CREATE TABLE artworks (id INT, artist_id INT, title TEXT, museum_id INT); INSERT INTO artworks (id, artist_id, title, museum_id) VALUES (1, 1, 'Dora Maar au Chat', 1), (2, 2, 'Red Painting', NULL), (3, 3, 'Untitled', 3), (4, 4, 'The Persistence of Memory', 1), (5, 5, 'Composition with Red Blue and Yellow', NULL); CREATE TABLE museums (id INT, name TEXT); INSERT INTO museums (id, name) VALUES (1, 'MoMA'), (2, 'Met'), (3, 'Tate'); CREATE TABLE museum_artworks (museum_id INT, artwork_id INT); INSERT INTO museum_artworks (museum_id, artwork_id) VALUES (1, 1), (1, 4), (3, 3);", "output": "SELECT MIN(artworks.id) FROM artworks JOIN artist_museums ON artworks.artist_id = artist_museums.artist_id JOIN museum_artworks ON artworks.id = museum_artworks.artwork_id WHERE museums.name = 'MoMA';"}
{"input": " \uac01 \uc704\uce58\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ucd1d \uc4f0\ub808\uae30\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE location_waste (location_name VARCHAR(50), waste_amount NUMERIC(10, 2)); INSERT INTO location_waste (location_name, waste_amount) VALUES ('San Francisco', 1000.00), ('New York', 1500.00), ('Los Angeles', 500.00);", "output": "SELECT location_name, SUM(waste_amount) AS total_waste FROM location_waste GROUP BY location_name;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4 \uc8fc \ub374\ubc84 \uc2dc\uc5d0\ub294 \uc9c4\ub8cc\uc18c\uac00 \uba87 \uac1c \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT, city VARCHAR(50), state VARCHAR(50), count INT); INSERT INTO dispensaries (id, city, state, count) VALUES (1, 'Denver', 'Colorado', 100), (2, 'Los Angeles', 'California', 200), (3, 'Portland', 'Oregon', 150);", "output": "SELECT COUNT(*) FROM dispensaries WHERE city = 'Denver';"}
{"input": " cricket_matches\uc5d0\uc11c north_team\uc758 \ubcfc\ub7ec\uac00 \ubcfc\ub9c1\ud55c \ucd5c\ub300 \uc774\ub2dd \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cricket_teams (team_id INT, team_name VARCHAR(50), region VARCHAR(50));CREATE TABLE cricket_players (player_id INT, player_name VARCHAR(50), position VARCHAR(50), team_id INT);CREATE TABLE cricket_matches (match_id INT, home_team_id INT, away_team_id INT, home_team_innings INT, away_team_innings INT, bowler_id INT);", "output": "SELECT MAX(home_team_innings + away_team_innings) AS max_innings FROM cricket_matches JOIN cricket_players ON cricket_matches.bowler_id = cricket_players.player_id JOIN cricket_teams ON cricket_players.team_id = cricket_teams.team_id WHERE cricket_teams.region = 'north_team';"}
{"input": " \uc8fc\ub2f9 5\uc2dc\uac04 \uc774\uc0c1 \ubd09\uc0ac\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists nonprofit_volunteers (id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(50), age INT, hours_per_week DECIMAL(3,1));", "output": "SELECT COUNT(*) FROM nonprofit_volunteers WHERE hours_per_week > 5.0;"}
{"input": " \uc815\uc9c0\uada4\ub3c4\uc5d0\uc11c \ud1b5\uc2e0\uc704\uc131\uc758 \ucd5c\ub300 \uc218\uba85\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE communication_satellites (id INT PRIMARY KEY, name VARCHAR(255), manufacturer VARCHAR(255), type VARCHAR(255), launch_date DATE, lifespan INT);", "output": "SELECT MAX(lifespan) FROM communication_satellites WHERE orbit_type = 'Geostationary';"}
{"input": " '\uccad\ub3d9\uae30\uc2dc\ub300' \ubc1c\uad74\ud604\uc7a5 \ubc0f \uad00\ub828 \uc720\ubb3c\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE ExcavationSites (site_id INT, site_name TEXT, period TEXT); INSERT INTO ExcavationSites (site_id, site_name, period) VALUES (1, 'SiteA', 'Iron Age'), (2, 'SiteB', 'Bronze Age'); CREATE TABLE Artifacts (artifact_id INT, site_id INT, artifact_name TEXT); INSERT INTO Artifacts (artifact_id, site_id, artifact_name) VALUES (1, 1, 'Artifact1'), (2, 1, 'Artifact2'), (3, 2, 'Artifact3');", "output": "DELETE FROM Artifacts WHERE site_id IN (SELECT site_id FROM ExcavationSites WHERE period = 'Bronze Age'); DELETE FROM ExcavationSites WHERE period = 'Bronze Age';"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ud310\ub9e4\ub41c \uac01 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (sale_id INT, product_id INT, quantity INT, sale_date DATE); INSERT INTO sales (sale_id, product_id, quantity, sale_date) VALUES (1, 1, 3, '2022-01-05'), (2, 2, 1, '2022-01-07'); CREATE TABLE product (product_id INT, product_name TEXT, region_id INT); INSERT INTO product (product_id, product_name, region_id) VALUES (1, 'Coca Cola', 1), (2, 'Pizza', 2); CREATE TABLE region (region_id INT, region_name TEXT); INSERT INTO region (region_id, region_name) VALUES (1, 'North'), (2, 'South');", "output": "SELECT r.region_name, p.product_name, SUM(s.quantity) as total_sold FROM sales s JOIN product p ON s.product_id = p.product_id JOIN region r ON p.region_id = r.region_id GROUP BY r.region_name, p.product_name;"}
{"input": " \uc601\uad6d\uc758 \uc5b4\ub290 \uac74\ubb3c\uc5d0 \ub179\uc0c9 \uc9c0\ubd95\uacfc \ud0dc\uc591\uad11 \ud328\ub110\uc774 \ubaa8\ub450 \uc124\uce58\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Building (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), sqft INT, PRIMARY KEY (id)); INSERT INTO Building (id, name, city, country, sqft) VALUES (5, 'Big Ben', 'London', 'UK', 215000); INSERT INTO Building (id, name, city, country, sqft) VALUES (6, 'Tower Bridge', 'London', 'UK', 453208); CREATE TABLE GreenRoof (id INT, building_id INT, planted_date DATE, size INT, PRIMARY KEY (id), FOREIGN KEY (building_id) REFERENCES Building (id)); INSERT INTO GreenRoof (id, building_id, planted_date, size) VALUES (5, 5, '2012-04-01', 25000); INSERT INTO GreenRoof (id, building_id, planted_date, size) VALUES (6, 6, '2016-01-01', 30000); CREATE TABLE SolarPanel (id INT, building_id INT, installed_date DATE, size INT, PRIMARY KEY (id), FOREIGN KEY (building_id) REFERENCES Building (id)); INSERT INTO SolarPanel (id, building_id, installed_date, size) VALUES (5, 5, '2013-06-01', 40000); INSERT INTO SolarPanel (id, building_id, installed_date, size) VALUES (6, 6, '2017-08-01', 50000);", "output": "SELECT b.name FROM Building b JOIN GreenRoof gr ON b.id = gr.building_id JOIN SolarPanel sp ON b.id = sp.building_id WHERE b.country = 'UK';"}
{"input": " \uc9c0\uc5ed\ubcc4 \uad70\uc7a5\ube44 \ud310\ub9e4 \uac74\uc218 \ud45c\uc2dc", "context": "CREATE TABLE Sales (SaleID INT, SaleDate DATE, Region VARCHAR(255), TotalSales DECIMAL(10,2)); INSERT INTO Sales (SaleID, SaleDate, Region, TotalSales) VALUES (1, '2022-01-01', 'North America', 100000), (2, '2022-02-01', 'Europe', 150000), (3, '2022-03-01', 'Asia', 200000);", "output": "SELECT Region, COUNT(*) as 'Number of Sales' FROM Sales GROUP BY Region;"}
{"input": " 'SustainableMarket'\uc5d0 \uc720\uae30\ub18d \ub18d\uc0b0\ubb3c\uc744 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (id INT, name VARCHAR(255), organic BOOLEAN); INSERT INTO Suppliers (id, name, organic) VALUES (1, 'GreenAcres', true), (2, 'ProducePalace', false), (3, 'OrganicOrchard', true); CREATE TABLE Products (id INT, supplier_id INT, name VARCHAR(255), is_organic BOOLEAN); INSERT INTO Products (id, supplier_id, name, is_organic) VALUES (1, 1, 'Kale', true), (2, 1, 'Carrots', true), (3, 2, 'Apples', false), (4, 3, 'Strawberries', true), (5, 3, 'Pears', true); CREATE TABLE MarketProducts (market_id INT, product_id INT); INSERT INTO MarketProducts (market_id, product_id) VALUES (1, 1), (1, 2), (1, 4);", "output": "SELECT s.name FROM Suppliers s JOIN Products p ON s.id = p.supplier_id JOIN MarketProducts mp ON p.id = mp.product_id WHERE p.is_organic = true AND mp.market_id = 1;"}
{"input": " '\ubbf8\uad6d'\uc5d0\uc11c \uadfc\ub85c\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uacf5\uc7a5\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories_workers (id INT, factory_id INT, name VARCHAR(50), country VARCHAR(50), worker_count INT); INSERT INTO factories_workers (id, factory_id, name, country, worker_count) VALUES (1, 1, 'Factory One', 'Germany', 100), (2, 2, 'Factory Two', 'USA', 200);", "output": "SELECT name FROM factories_workers WHERE country = 'USA' AND worker_count = (SELECT MAX(worker_count) FROM factories_workers WHERE country = 'USA');"}
{"input": " 2021\ub144\uc5d0 \uc704\ud5d8 \ud3c9\uac00 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc131\ubcc4\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE risk_assessment (assessment_id INT, assesse_name VARCHAR(255), gender VARCHAR(10), assessment_score INT, assessment_year INT); INSERT INTO risk_assessment (assessment_id, assesse_name, gender, assessment_score, assessment_year) VALUES (1, 'John Doe', 'Male', 80, 2021), (2, 'Jane Smith', 'Female', 85, 2021), (3, 'Bob Johnson', 'Male', 75, 2021);", "output": "SELECT gender, MAX(assessment_score) as highest_score FROM risk_assessment WHERE assessment_year = 2021 GROUP BY gender;"}
{"input": " \ub274\uc695 \uc8fc\uc5d0\uc11c \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ubcf4\ud5d8 \uc720\ud615\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Claim_Amount_State (Policy_Type VARCHAR(20), State VARCHAR(20), Claim_Amount INT); INSERT INTO Claim_Amount_State (Policy_Type, State, Claim_Amount) VALUES ('Life', 'New York', 30000), ('Health', 'New York', 7000), ('Auto', 'New York', 8000), ('Life', 'New York', 25000), ('Health', 'New York', 8000);", "output": "SELECT Policy_Type, AVG(Claim_Amount) AS Average_Claim_Amount FROM Claim_Amount_State WHERE State = 'New York' GROUP BY Policy_Type ORDER BY Average_Claim_Amount DESC LIMIT 2;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uace0\uac1d\ubcc4 \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(255)); CREATE TABLE menu_items (menu_item_id INT, menu_category VARCHAR(255), item_name VARCHAR(255), is_sustainable BOOLEAN); CREATE TABLE orders (order_id INT, customer_id INT, menu_item_id INT, order_date DATE, order_price INT);", "output": "SELECT c.customer_name, m.menu_category, SUM(o.order_price) as total_revenue FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN menu_items mi ON o.menu_item_id = mi.menu_item_id JOIN menus m ON mi.menu_category = m.menu_category WHERE o.order_date BETWEEN DATEADD(day, -30, GETDATE()) AND GETDATE() GROUP BY c.customer_name, m.menu_category;"}
{"input": " 2020\ub144 \uc6d4\ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (donation_date DATE, donation_amount FLOAT); INSERT INTO donations (donation_date, donation_amount) VALUES ('2020-01-01', 50.00), ('2020-01-15', 100.00), ('2020-02-20', 25.00), ('2020-03-10', 75.00), ('2020-03-25', 150.00);", "output": "SELECT AVG(donation_amount) FROM donations WHERE YEAR(donation_date) = 2020 GROUP BY MONTH(donation_date);"}
{"input": "\uc2a4\ud0c0\ud130 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ucc44\uc2dd \uc694\ub9ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE menu (item_id INT, name TEXT, category TEXT, is_vegetarian BOOLEAN, price FLOAT); INSERT INTO menu (item_id, name, category, is_vegetarian, price) VALUES (1, 'Chickpea Curry', 'Lunch', true, 10.5), (2, 'Chicken Tikka Masala', 'Lunch', false, 13.0), (3, 'Quinoa Salad', 'Starters', true, 7.5), (4, 'Eggplant Parmigiana', 'Dinner', true, 12.0), (5, 'Bruschetta', 'Starters', true, 6.0);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM menu WHERE category = 'Starters') as vegetarian_percentage FROM menu WHERE category = 'Starters' AND is_vegetarian = true;"}
{"input": " \uc2dc\ub4dc\ub2c8 \uc0b0\uc5c5 \uac74\ubb3c\uc758 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_consumption_by_sector (id INT, sector TEXT, location TEXT, consumption FLOAT); INSERT INTO energy_consumption_by_sector (id, sector, location, consumption) VALUES (1, 'industrial', 'Sydney', 1200.0), (2, 'residential', 'Sydney', 500.0);", "output": "SELECT AVG(consumption) FROM energy_consumption_by_sector WHERE sector = 'industrial' AND location = 'Sydney';"}
{"input": " 2017\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \ub514\uc2a4\ud504\ub85c\uc298 \uc0dd\uc0b0\ub7c9\uc774 \uc9c0\uc18d\uc801\uc73c\ub85c \uc99d\uac00\ud55c \uc815\uc81c\uc18c\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DysprosiumProduction (Refiner VARCHAR(50), Year INT, Production FLOAT); INSERT INTO DysprosiumProduction(Refiner, Year, Production) VALUES ('RefinerX', 2017, 251.3), ('RefinerX', 2018, 260.7), ('RefinerX', 2019, 272.1), ('RefinerY', 2017, 233.9), ('RefinerY', 2018, 241.5), ('RefinerY', 2019, 253.8), ('RefinerZ', 2017, 304.4), ('RefinerZ', 2018, 312.2), ('RefinerZ', 2019, 329.6);", "output": "SELECT Refiner FROM (SELECT Refiner, Production, ROW_NUMBER() OVER (PARTITION BY Refiner ORDER BY Year) as rn, LAG(Production) OVER (PARTITION BY Refiner ORDER BY Year) as prev_prod FROM DysprosiumProduction) t WHERE rn > 1 AND prev_prod < Production GROUP BY Refiner HAVING COUNT(*) = 3;"}
{"input": " 2023\ub144 1\uc6d4 1\uc77c \ub610\ub294 \uadf8 \uc774\ud6c4\uc5d0 \uc2dc\uc791\uc77c\uc774 \uc9c0\uc815\ub41c \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DefenseProjects (id INT PRIMARY KEY, project VARCHAR(50), start_date DATE); INSERT INTO DefenseProjects (id, project, start_date) VALUES (1, 'Project B', '2023-01-01');", "output": "SELECT project FROM DefenseProjects WHERE start_date >= '2023-01-01';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uad50\ub3c4\uc18c\uc758 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc218\uac10\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE prisons (id INT, state VARCHAR(2)); INSERT INTO prisons (id, state) VALUES (1, 'California'); CREATE TABLE inmates (id INT, age INT, prison_id INT); CREATE TABLE restorative_justice_programs (id INT, inmate_id INT);", "output": "SELECT AVG(inmates.age) FROM inmates INNER JOIN restorative_justice_programs ON inmates.id = restorative_justice_programs.inmate_id INNER JOIN prisons ON inmates.prison_id = prisons.id WHERE prisons.state = 'California';"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 '\uc644\uc804\ucc44\uc2dd' \uad00\ub828 \uad11\uace0\ub97c \ud074\ub9ad\ud55c \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \uc778\uad6c\ud1b5\uacc4 \uc815\ubcf4 \ubc0f \uad11\uace0 \ud074\ub9ad \ud69f\uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, first_name VARCHAR(50), last_name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50));CREATE TABLE ad_activity (activity_id INT, user_id INT, ad_id INT, activity_type VARCHAR(50), activity_date DATE);CREATE TABLE ads (ad_id INT, ad_name VARCHAR(255), ad_category VARCHAR(255));", "output": "SELECT u.first_name, u.last_name, u.age, u.gender, u.country, COUNT(a.activity_id) as clicks FROM users u JOIN ad_activity a ON u.user_id = a.user_id JOIN ads ad ON a.ad_id = ad.ad_id WHERE ad.ad_name LIKE '%vegan diet%' AND a.activity_date >= (CURRENT_DATE - INTERVAL 3 MONTH) AND a.activity_type = 'click' GROUP BY u.user_id;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \ub808\uc2a4\ud1a0\ub791 \uc704\uce58\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE location_revenue (location VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO location_revenue (location, revenue) VALUES ('Chicago', 9000.00), ('Houston', 8000.00), ('Philadelphia', 7000.00), ('Phoenix', 6000.00), ('San Antonio', 5000.00);", "output": "SELECT location, SUM(revenue) as total_revenue FROM location_revenue WHERE location_revenue.location IN (SELECT location FROM restaurant_revenue WHERE date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)) GROUP BY location;"}
{"input": " \ubd81\uadf9\uc5f0\uad6c\uc18c 20\ud638\uc640 21\ud638\uc5d0\ub294 \uba87 \uac1c\uc758 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE Arctic_Research_Station_20 (id INT, community TEXT); CREATE TABLE Arctic_Research_Station_21 (id INT, community TEXT);", "output": "SELECT COUNT(DISTINCT community) FROM Arctic_Research_Station_20; SELECT COUNT(DISTINCT community) FROM Arctic_Research_Station_21; SELECT COUNT(DISTINCT community) FROM (SELECT * FROM Arctic_Research_Station_20 UNION ALL SELECT * FROM Arctic_Research_Station_21) AS Arctic_Communities;"}
{"input": " \ubaa8\ub4e0 \ud504\ub85c\uadf8\ub7a8\uc744 \ud569\uce5c \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uacfc \ube44\uad50\ud558\uc5ec \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc774 \ub354 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE programs(id INT, name TEXT, budget FLOAT);CREATE TABLE donations(id INT, program_id INT, amount FLOAT, donation_date DATE);", "output": "SELECT programs.name FROM programs JOIN (SELECT program_id, AVG(amount) as avg_donation FROM donations GROUP BY program_id) as donations_avg ON programs.id = donations_avg.program_id WHERE donations_avg.avg_donation > (SELECT AVG(amount) FROM donations);"}
{"input": " \uce90\ub098\ub2e4 \uc5ec\ud589 \uc8fc\uc758\ubcf4 \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE travel_advisories (id INT PRIMARY KEY, country VARCHAR(50), advisory TEXT);", "output": "WITH cte AS (UPDATE travel_advisories SET advisory = 'New advisory for Canada' WHERE country = 'Canada' RETURNING *) SELECT * FROM cte;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uc2a4\ud3ec\uce20 \ub274\uc2a4\ub97c \uc120\ud638\ud558\ub294 \ub3c5\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uc131\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE readers (id INT, age INT, gender VARCHAR(10), country VARCHAR(50), news_preference VARCHAR(50)); INSERT INTO readers (id, age, gender, country, news_preference) VALUES (1, 35, 'Male', 'Canada', 'Sports'), (2, 45, 'Female', 'Canada', 'Sports');", "output": "SELECT AVG(age) avg_age, gender FROM readers WHERE country = 'Canada' AND news_preference = 'Sports' GROUP BY gender;"}
{"input": "\ud638\uc8fc\uc5d0\uc11c \uc7ac\ud65c\uc6a9 \uc81c\ud488 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (product_id INT, name VARCHAR(100), price DECIMAL(5,2), is_recycled BOOLEAN); INSERT INTO products (product_id, name, price, is_recycled) VALUES (1, 'Recycled Notebook', 9.99, true); INSERT INTO products (product_id, name, price, is_recycled) VALUES (2, 'Eco-Friendly Pen', 3.99, true); CREATE TABLE sales (sale_id INT, product_id INT, quantity INT); CREATE TABLE stores (store_id INT, location VARCHAR(50)); INSERT INTO stores (store_id, location) VALUES (1, 'Sydney Store'); INSERT INTO stores (store_id, location) VALUES (2, 'Melbourne Store'); CREATE TABLE store_sales (store_id INT, sale_id INT);", "output": "SELECT SUM(p.price * s.quantity) FROM products p JOIN sales s ON p.product_id = s.product_id JOIN store_sales ss ON s.sale_id = ss.sale_id JOIN stores st ON ss.store_id = st.store_id WHERE p.is_recycled = true AND st.location = 'Australia';"}
{"input": "\uac01 \ud559\uacfc \uad50\uc6d0\uc758 \ud3c9\uade0 \uc5f0\uad6c \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE departments (id INT, name TEXT); CREATE TABLE faculty (id INT, name TEXT, department_id INT); CREATE TABLE publications (id INT, faculty_id INT, year INT, journal TEXT);  INSERT INTO departments (id, name) VALUES (1, 'Mathematics'), (2, 'Computer Science'); INSERT INTO faculty (id, name, department_id) VALUES (1, 'Alice', 1), (2, 'Bob', 2), (3, 'Charlie', 1); INSERT INTO publications (id, faculty_id, year, journal) VALUES (1, 1, 2020, 'JMLR'), (2, 1, 2019, 'NeurIPS'), (3, 2, 2021, 'ICML'), (4, 3, 2020, 'ICLR'), (5, 1, 2021, 'KDD');", "output": "SELECT d.name, AVG(p.count) as avg_publications FROM departments d JOIN ( SELECT f.department_id, COUNT(p.id) as count FROM faculty f JOIN publications p ON f.id = p.faculty_id GROUP BY f.department_id ) p ON d.id = p.department_id GROUP BY d.name;"}
{"input": " 2021\ub144 \ubd04 \ud559\uae30 \ub3d9\uc548 \uacfc\ud559\uacfc\uc640 \uc218\ud559 \ud559\uacfc \ubaa8\ub450\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc740 \ud559\uc0dd\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE science_accommodations (student_id INT, semester VARCHAR(10));CREATE TABLE math_accommodations (student_id INT, semester VARCHAR(10)); INSERT INTO science_accommodations VALUES (1, 'spring 2021'), (2, 'spring 2021'), (3, 'spring 2021'); INSERT INTO math_accommodations VALUES (2, 'spring 2021'), (3, 'spring 2021'), (4, 'spring 2021');", "output": "SELECT student_id FROM science_accommodations WHERE semester = 'spring 2021' INTERSECT SELECT student_id FROM math_accommodations WHERE semester = 'spring 2021';"}
{"input": " '\uc720\ub7fd'\uc758 \uc0ac\uc6a9\uc790\ub2f9 \ud3c9\uade0 \uac00\uc0c1 \ud22c\uc5b4 \uc608\uc57d \uac74\uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE user_bookings (user_id INT, country TEXT, num_virtual_tours INT); INSERT INTO user_bookings (user_id, country, num_virtual_tours) VALUES (1, 'France', 2), (2, 'Germany', 3), (3, 'Spain', 1), (4, 'Italy', 4), (5, 'France', 3); CREATE TABLE countries (country TEXT, continent TEXT); INSERT INTO countries (country, continent) VALUES ('France', 'Europe'), ('Germany', 'Europe'), ('Spain', 'Europe'), ('Italy', 'Europe');", "output": "SELECT AVG(num_virtual_tours) FROM user_bookings WHERE country IN (SELECT country FROM countries WHERE continent = 'Europe');"}
{"input": " 2010\ub144 \uc774\ud6c4 \uce74\ud14c\uace0\ub9ac\ubcc4 \uac00\uc7a5 \ucd08\uae30\uc758 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cybersecurity (id INT, title VARCHAR(50), category VARCHAR(50), description TEXT, date DATE); INSERT INTO Cybersecurity (id, title, category, description, date) VALUES (1, 'Zero Trust Architecture', 'Network Security', 'Description...', '2021-03-01');", "output": "SELECT category, MIN(date) FROM Cybersecurity WHERE title NOT LIKE '%Vulnerability%' AND date >= '2010-01-01' GROUP BY category;"}
{"input": " 2020\ub144\uc5d0 \uc644\ub8cc\ub41c \ubaa8\ub4e0 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "USE Biotech; CREATE TABLE if not exists GeneticResearch (projectID INT, projectName VARCHAR(255), completionDate DATE); INSERT INTO GeneticResearch (projectID, projectName, completionDate) VALUES (1, 'Project A', '2020-02-01'), (2, 'Project B', '2019-06-15'), (3, 'Project C', '2021-08-03'), (4, 'Project D', '2020-12-31'), (5, 'Project E', '2018-09-09');", "output": "SELECT * FROM GeneticResearch WHERE YEAR(completionDate) = 2020 AND MONTH(completionDate) IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);"}
{"input": "2019\ub144 \uac10\uc790 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE PotatoProduction (Country VARCHAR(50), Year INT, Production INT);", "output": "SELECT Country, Production FROM (SELECT Country, Production, ROW_NUMBER() OVER (ORDER BY Production DESC) as rank FROM PotatoProduction WHERE Year = 2019) tmp WHERE rank <= 3;"}
{"input": "2020\ub144\uc5d0 \uc8fc\uc815\ubd80\ub294 \uba87 \uac74\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \ubd88\ub9cc \uc0ac\ud56d\uc744 \uc811\uc218\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (ComplaintID INT, State VARCHAR(25), FilingDate DATE); INSERT INTO MentalHealthParity (ComplaintID, State, FilingDate) VALUES (1, 'California', '2020-01-01'), (2, 'New York', '2020-02-01'), (3, 'Texas', '2020-03-01'), (4, 'Florida', '2020-04-01');", "output": "SELECT State, COUNT(*) as ComplaintCount FROM MentalHealthParity WHERE YEAR(FilingDate) = 2020 GROUP BY State;"}
{"input": " 2019\ub144 \uac01 \uc790\uce58\uad6c\ubcc4 \ud53c\ub4dc\ubc31\uc744 \uc81c\uacf5\ud558\ub294 \ud3c9\uade0 \uc2dc\ubbfc \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Districts (District_ID INT, District_Name VARCHAR(50), Feedback_Count INT, Year INT);   INSERT INTO Districts (District_ID, District_Name, Feedback_Count, Year) VALUES (1, 'Downtown', 500, 2019), (2, 'Uptown', 300, 2019), (3, 'Harbor', 400, 2019), (4, 'Beach', 600, 2019), (5, 'Forest', 700, 2019);", "output": "SELECT AVG(Feedback_Count) FROM Districts WHERE Year = 2019;"}
{"input": " \uae30\ud6c4\ubcc0\ud654\uc5d0 \ub300\ud55c \uae30\uc0ac\ub97c \uc88b\uc544\ud55c \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE articles (id INT, title TEXT, category TEXT);   CREATE TABLE users (id INT, age INT, gender TEXT);   CREATE TABLE user_likes (user_id INT, article_id INT);  INSERT INTO articles (id, title, category) VALUES (1, 'Climate Crisis 101', 'climate_change');   INSERT INTO users (id, age, gender) VALUES (1, 25, 'female'), (2, 35, 'male'), (3, 30, 'non-binary');   INSERT INTO user_likes (user_id, article_id) VALUES (1, 1), (2, 1), (3, 1);", "output": "SELECT AVG(users.age) FROM users   JOIN user_likes ON users.id = user_likes.user_id   JOIN articles ON user_likes.article_id = articles.id   WHERE articles.category = 'climate_change';"}
{"input": " \uad50\uc721 \ubc0f \uc758\ub8cc \uc0ac\uc5c5\uc5d0 \uae30\uc5ec\ud55c \uae30\ubd80\uc790 \ubaa9\ub85d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, age INT); INSERT INTO donors (id, name, age) VALUES (1, 'John Doe', 35), (2, 'Jane Smith', 28); CREATE TABLE contributions (donor_id INT, initiative_type TEXT); INSERT INTO contributions (donor_id, initiative_type) VALUES (1, 'education'), (1, 'healthcare'), (2, 'education');", "output": "SELECT donors.name FROM donors INNER JOIN contributions c1 ON donors.id = c1.donor_id INNER JOIN contributions c2 ON donors.id = c2.donor_id WHERE c1.initiative_type = 'education' AND c2.initiative_type = 'healthcare';"}
{"input": " \uc11d\ud0c4\uacfc \uc11d\uc720\ub97c \ubaa8\ub450 \uc6b4\uc1a1\ud55c \uc120\ubc15\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Vessel_Cargo (Vessel_ID INT, Cargo_Type VARCHAR(255)); INSERT INTO Vessel_Cargo (Vessel_ID, Cargo_Type) VALUES (1, 'Grain'), (2, 'Containers'), (3, 'Oil'), (4, 'Coal'), (5, 'Coal'), (6, 'Oil');", "output": "SELECT Vessel_ID FROM Vessel_Cargo WHERE Cargo_Type = 'Coal' INTERSECT SELECT Vessel_ID FROM Vessel_Cargo WHERE Cargo_Type = 'Oil';"}
{"input": " 2020\ub144 1\uc6d4 \ubbf8\uad6d \ub3d9\ud574\uc548 \ud56d\uad6c\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name TEXT, country TEXT); INSERT INTO ports (id, name, country) VALUES (1, 'New York', 'USA'), (2, 'Baltimore', 'USA'); CREATE TABLE vessels (id INT, name TEXT, model TEXT, port_id INT); INSERT INTO vessels (id, name, model, port_id) VALUES (1, 'TestVessel1', 'ModelA', 1), (2, 'TestVessel2', 'ModelB', 2); CREATE TABLE vessel_positions (id INT, vessel_id INT, timestamp TIMESTAMP, latitude DECIMAL, longitude DECIMAL, speed DECIMAL); INSERT INTO vessel_positions (id, vessel_id, timestamp, latitude, longitude, speed) VALUES (1, 1, '2020-01-01 12:00:00', 40.71, -74.01, 20), (2, 2, '2020-01-02 10:00:00', 39.29, -76.61, 18);", "output": "SELECT AVG(vp.speed) FROM vessel_positions vp JOIN vessels v ON vp.vessel_id = v.id JOIN ports p ON v.port_id = p.id WHERE p.country = 'USA' AND EXTRACT(MONTH FROM vp.timestamp) = 1;"}
{"input": " \ub370\uc774\ud130 \ud55c\ub3c4\uc758 75% \uc774\uc0c1\uc744 \uc0ac\uc6a9\ud558\uace0 \ud1b5\ud654 \uc0ac\uc6a9\ub7c9\uc774 50\ubd84 \ubbf8\ub9cc\uc778 \ubb44\ubc14\uc774 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, name VARCHAR(50), data_plan VARCHAR(50), data_usage FLOAT, call_usage FLOAT, region VARCHAR(50)); INSERT INTO mobile_subscribers (subscriber_id, name, data_plan, data_usage, call_usage, region) VALUES (1, 'Farah Khan', '1GB', 750.0, 40.0, 'Mumbai');", "output": "SELECT subscriber_id, name, data_plan FROM mobile_subscribers WHERE region = 'Mumbai' AND data_usage > (SELECT data_usage * 0.75 FROM mobile_subscribers WHERE subscriber_id = m.subscriber_id) AND call_usage < 50;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uc77c\uc77c \ucd5c\uace0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc774\uba70, \ucd1d \uc77c\uc218\ub294 \uc12d\uc528 30\ub3c4\ub97c \ub118\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE WeatherData (id INT, Temperature INT, Timestamp DATETIME); INSERT INTO WeatherData (id, Temperature, Timestamp) VALUES (1, 32, '2022-05-15 12:00:00'), (2, 28, '2022-05-16 12:00:00');", "output": "SELECT Temperature, Timestamp, SUM(CASE WHEN Temperature > 30 THEN 1 ELSE 0 END) OVER (ORDER BY Timestamp) as RunningTotal FROM WeatherData WHERE Timestamp BETWEEN DATEADD(day, -30, GETDATE()) AND GETDATE();"}
{"input": " 2023\ub144 \uc77c\ubcf8\uc5d0\uc11c \uc5f4\ub9ac\ub294 \uc624\ud1a0\uc1fc \uc774\ubca4\ud2b8\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE AutoShows (name VARCHAR(20), country VARCHAR(10), year INT); INSERT INTO AutoShows (name, country, year) VALUES ('Tokyo Auto Salon', 'Japan', 2023);", "output": "SELECT name FROM AutoShows WHERE country = 'Japan' AND year = 2023;"}
{"input": " \uc6d0\uc0b0\uc9c0\ubcc4 \uc7ac\ud65c\uc6a9 \uac00\ub2a5 \ubc0f \uc7ac\ud65c\uc6a9 \ubd88\uac00 \ubb3c\uc9c8\uc758 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc6d0\uc0b0\uc9c0\ubcc4 \uc7ac\ud65c\uc6a9 \uac00\ub2a5 \ubb3c\uc9c8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE materials (id INT PRIMARY KEY, name VARCHAR(255), origin VARCHAR(255), recyclable BOOLEAN); INSERT INTO materials (id, name, origin, recyclable) VALUES (1, 'Plastic', 'China', FALSE), (2, 'Aluminum', 'Canada', TRUE), (3, 'Glass', 'Mexico', TRUE), (4, 'Paper', 'India', TRUE);", "output": "SELECT origin, SUM(CASE WHEN recyclable THEN 1 ELSE 0 END) as recyclable_count, SUM(CASE WHEN NOT recyclable THEN 1 ELSE 0 END) as non_recyclable_count, 100.0 * AVG(CASE WHEN recyclable THEN 1.0 ELSE 0.0 END) as recyclable_percentage FROM materials GROUP BY origin;"}
{"input": " \ubb3c \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE african_countries (country VARCHAR(255), water_usage INT); INSERT INTO african_countries (country, water_usage) VALUES ('Egypt', 12000000), ('South Africa', 15000000), ('Nigeria', 10000000);", "output": "SELECT country, water_usage FROM african_countries ORDER BY water_usage DESC LIMIT 2;"}
{"input": " '\uace0\ub300 \ubb38\uba85' \uc804\uc2dc\ud68c\ub97c \uad00\ub78c\ud55c 40\uc138 \uc774\uc0c1\uc758 \uad00\ub78c\uac1d\uc740 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE visitor_age_info (visitor_id INT, visitor_age INT); INSERT INTO visitor_age_info (visitor_id, visitor_age) VALUES (1, 45);", "output": "SELECT COUNT(*) FROM visitor_attendance JOIN exhibitions ON visitor_attendance.exhibition_id = exhibitions.exhibition_id JOIN visitor_age_info ON visitor_attendance.visitor_id = visitor_age_info.visitor_id WHERE exhibitions.exhibition_name = 'Ancient Civilizations' AND visitor_age_info.visitor_age > 40;"}
{"input": " \uac01 \ud300\ubcc4 \ucd1d \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uac01 \ud300\ubcc4 \uc804\uccb4 \ubcf4\uc548 \uc0ac\uace0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, resolution_team VARCHAR(50), incident_date DATE); INSERT INTO security_incidents (id, resolution_team, incident_date) VALUES (1, 'Team A', '2022-01-01'), (2, 'Team B', '2022-01-15');", "output": "SELECT resolution_team, COUNT(*) as num_incidents, CONCAT(ROUND(COUNT(*) / (SELECT COUNT(*) FROM security_incidents) * 100, 2), '%') as pct_of_total FROM security_incidents GROUP BY resolution_team;"}
{"input": " \ub9e4\ub144 \uc7ac\ud5a5\uad70\uc778\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE companies (company_id INT, company_name VARCHAR(255), founding_year INT, founder_veteran BOOLEAN);", "output": "SELECT EXTRACT(YEAR FROM c.founding_year) AS year, COUNT(c.company_id) FROM companies c WHERE c.founder_veteran = TRUE GROUP BY year;"}
{"input": " \ubd81\ubbf8\uc5d0\uc11c 'Curely'\ub77c\ub294 \uc57d\ud488\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc57d\ud488 \uc2b9\uc778 \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE drug_approval_2 (drug_name TEXT, approval_date DATE, region TEXT); INSERT INTO drug_approval_2 (drug_name, approval_date, region) VALUES ('Drexo', '2020-02-01', 'Canada'), ('Curely', '2018-12-12', 'United States');", "output": "SELECT approval_date FROM drug_approval_2 WHERE drug_name = 'Curely' AND region = 'North America';"}
{"input": "\ub7f0\ub358\uc5d0\uc11c \uc790\uc804\uac70 \uacf5\uc720 \uc5ec\ud589\uc744 \ud55c \ucd1d \ud69f\uc218\uc640 \ucd1d \uc774\ub3d9 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE bike_sharing (trip_id INT, distance FLOAT, city VARCHAR(50));", "output": "SELECT COUNT(trip_id), SUM(distance) FROM bike_sharing WHERE city = 'London';"}
{"input": " \uc5f0\uac04 \uba87 \uac1c\uc758 \uc704\uc131\uc774 \ubc1c\uc0ac\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE satellite_launches (id INT, launch_year INT, satellites INT); INSERT INTO satellite_launches (id, launch_year, satellites) VALUES (1, 2000, 50), (2, 2001, 75), (3, 2002, 85), (4, 2003, 100);", "output": "SELECT launch_year, SUM(satellites) as total_satellites FROM satellite_launches GROUP BY launch_year;"}
{"input": " \uacf5\uacfc\ub300\ud559 \uad50\uc6d0 1\uc778\ub2f9 \ud3c9\uade0 \uc5f0\uad6c\ube44 \uc218\uc5ec \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE department (id INT, name TEXT);CREATE TABLE faculty (id INT, department_id INT);CREATE TABLE research_grant (id INT, faculty_id INT, amount INT);", "output": "SELECT AVG(rg.count) FROM (SELECT faculty_id, COUNT(*) AS count FROM research_grant rg GROUP BY faculty_id) rg JOIN faculty f ON rg.faculty_id = f.id JOIN department d ON f.department_id = d.id WHERE d.name = 'College of Engineering';"}
{"input": " \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \ub610\ub294 \uce74\ub9ac\ube0c\ud574 \uc9c0\uc5ed\uc5d0 \uae30\ubc18\uc744 \ub450\uace0 \ucd5c\uc18c 2\uac00\uc9c0 \uc774\uc0c1\uc758 \uc18c\uc2a4\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startup_funding (company_name VARCHAR(100), company_location VARCHAR(100), funding_source VARCHAR(50), funding_amount DECIMAL(10,2), funding_date DATE); INSERT INTO startup_funding VALUES ('GreenGeniusBio', 'Brazil', 'VC Funding', 2000000.00, '2021-02-14'); INSERT INTO startup_funding VALUES ('BioTechMexico', 'Mexico', 'Angel Investment', 1000000.00, '2020-09-28'); INSERT INTO startup_funding VALUES ('CaribbeanBio', 'Jamaica', 'Government Grant', 500000.00, '2021-05-05');", "output": "SELECT company_name FROM startup_funding WHERE company_location IN ('Latin America', 'Caribbean') AND funding_source IN (SELECT funding_source FROM startup_funding GROUP BY funding_source HAVING COUNT(DISTINCT funding_source) > 1) GROUP BY company_name HAVING COUNT(DISTINCT funding_source) > 1;"}
{"input": " \ubcf4\uc7a5 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc804\uad6d \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \uc8fc\ud0dd \uac00\uaca9 \uc911\uc559\uac12\uc744 \uac00\uc9c4 \uc6b0\ud3b8\ubc88\ud638\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uc774\ub984, \uc5f0\ub839 \ubc0f \uc131\ubcc4\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policyholder (policyholder_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), zip_code INT); CREATE TABLE zip_codes (zip_code INT, median_home_value INT, state VARCHAR(20), city VARCHAR(50));", "output": "SELECT coverage_type, AVG(policyholder.age) as average_age, COUNT(DISTINCT policyholder.policyholder_id) as policyholder_count, policyholder.gender FROM policyholder JOIN policy ON policyholder.policy_number = policy.policy_number JOIN zip_codes ON policyholder.zip_code = zip_codes.zip_code WHERE zip_codes.median_home_value > (SELECT AVG(median_home_value) FROM zip_codes) GROUP BY coverage_type, policyholder.gender;"}
{"input": " 2020\ub144 \uc21c\ud658 \ube44\uc988\ub2c8\uc2a4 \ubaa8\ub378\uc744 \uac00\uc9c4 \ube0c\ub79c\ub4dc\uac00 \ucc3d\ucd9c\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BrandRevenue (brand VARCHAR(255), revenue DECIMAL(10,2), year INT, circular_model BOOLEAN);", "output": "SELECT SUM(revenue) FROM BrandRevenue WHERE circular_model = TRUE AND year = 2020;"}
{"input": " \uac01 \uc0ac\uace0 \uc720\ud615\uc5d0 \ub300\ud55c \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0 \uc0ac\uc774\uc758 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Incident (IID INT, Type VARCHAR(50), Timestamp TIMESTAMP); INSERT INTO Incident (IID, Type, Timestamp) VALUES (1, 'Phishing', '2022-01-01 10:00:00'), (2, 'Malware', '2022-01-02 15:30:00'), (3, 'Phishing', '2022-01-05 09:00:00');", "output": "SELECT Type, AVG(DATEDIFF('ss', LAG(Timestamp) OVER (PARTITION BY Type ORDER BY Timestamp), Timestamp)) as AvgTimeBetween FROM Incident GROUP BY Type;"}
{"input": "\uc9c0\ub09c \ubd84\uae30 \uc720\uae30\ub18d \ubdf0\ud2f0 \uc81c\ud488 \ub9e4\ucd9c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE BeautyProducts (ProductID INT, ProductType VARCHAR(20), IsOrganic BOOLEAN, UnitsSold INT, SaleDate DATE); INSERT INTO BeautyProducts (ProductID, ProductType, IsOrganic, UnitsSold, SaleDate) VALUES (1, 'Facial Cleanser', TRUE, 500, '2022-06-15'); INSERT INTO BeautyProducts (ProductID, ProductType, IsOrganic, UnitsSold, SaleDate) VALUES (2, 'Eye Cream', TRUE, 600, '2022-07-18'); INSERT INTO BeautyProducts (ProductID, ProductType, IsOrganic, UnitsSold, SaleDate) VALUES (3, 'Lipstick', FALSE, 400, '2022-07-01');", "output": "SELECT ROUND(100.0 * SUM(CASE WHEN IsOrganic THEN UnitsSold END) / SUM(UnitsSold) OVER (), 2) AS OrganicSalesPercentage FROM BeautyProducts WHERE SaleDate >= DATEADD(QUARTER, -1, CURRENT_DATE);"}
{"input": " \uc5f0\ub3c4\ubcc4 \ubcf4\uc870\uae08 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE grant (id INT, year INT, amount DECIMAL(10, 2)); INSERT INTO grant (id, year, amount) VALUES (1, 2019, 50000), (2, 2020, 75000), (3, 2019, 30000);", "output": "SELECT year, COUNT(id) as num_grants FROM grant GROUP BY year;"}
{"input": " 2022\ub144 4\uc6d4 \ud0c0\ucf54\ub9c8 \ud56d\uad6c\uc5d0 \uc815\ubc15\ud588\uace0 \uadf8 \uc774\ud6c4\ub85c \ub2e4\ub978 \ud56d\uad6c\uc5d0\ub294 \uc815\ubc15\ud558\uc9c0 \uc54a\uc740 \uc120\ubc15\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port_of_tacoma (vessel_name VARCHAR(255), dock_month INT); CREATE TABLE port_of_seattle (vessel_name VARCHAR(255), dock_month INT); CREATE TABLE port_of_oakland (vessel_name VARCHAR(255), dock_month INT); INSERT INTO port_of_tacoma (vessel_name, dock_month) VALUES ('Vessel DD', 4), ('Vessel EE', 4), ('Vessel FF', 5); INSERT INTO port_of_seattle (vessel_name, dock_month) VALUES ('Vessel FF', 5), ('Vessel GG', 6), ('Vessel HH', 6); INSERT INTO port_of_oakland (vessel_name, dock_month) VALUES ('Vessel II', 6), ('Vessel JJ', 7), ('Vessel KK', 7);", "output": "SELECT vessel_name FROM port_of_tacoma WHERE dock_month = 4 EXCEPT (SELECT vessel_name FROM port_of_seattle WHERE dock_month >= 4 UNION SELECT vessel_name FROM port_of_oakland WHERE dock_month >= 4);"}
{"input": "2021\ub144 \ub2e8\uc77c \ub3d9\ub124\uc5d0\uc11c \uc2e0\uace0\ub41c \ubc94\uc8c4 \uac74\uc218\ub294 \ucd5c\ub300 \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE Neighborhood (neighborhood_id INT, neighborhood_name VARCHAR(20)); INSERT INTO Neighborhood (neighborhood_id, neighborhood_name) VALUES (1, 'IndustrialArea'), (2, 'ResidentialArea'); CREATE TABLE Crimes (crime_id INT, neighborhood_id INT, year INT, PRIMARY KEY (crime_id, neighborhood_id)); INSERT INTO Crimes (crime_id, neighborhood_id, year) VALUES (1, 1, 2021), (2, 1, 2020), (3, 2, 2021), (4, 2, 2021), (5, 2, 2021);", "output": "SELECT MAX(crime_count) FROM (SELECT COUNT(*) crime_count FROM Crimes WHERE year = 2021 GROUP BY neighborhood_id) subquery;"}
{"input": " \uc5f0\ub839\ubcc4 \ubcf5\ud569 \ubaa8\ube4c\ub9ac\ud2f0 \uc774\uc6a9 \ub0b4\uc5ed\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE MultimodalMobility(AgeGroup VARCHAR(50), Mode VARCHAR(50), Usage FLOAT);", "output": "SELECT AgeGroup, Mode, SUM(Usage) FROM MultimodalMobility GROUP BY AgeGroup, Mode;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc758 \uac01 \uad70\uc0ac \uae30\uc220\uc5d0 \ud544\uc694\ud55c \ucd5c\uc18c \uc778\ub825\uc740 \uc5bc\ub9c8\uc774\uba70, \uac00\uc7a5 \uc801\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_technology (id INT, name VARCHAR(50), min_personnel INT); INSERT INTO military_technology (id, name, min_personnel) VALUES (1, 'Artificial Intelligence', 10); CREATE TABLE countries (id INT, name VARCHAR(50), region VARCHAR(50)); INSERT INTO countries (id, name, region) VALUES (1, 'Australia', 'Oceania');", "output": "SELECT t.name, m.min_personnel, c.name as country FROM military_technology t JOIN (SELECT technology, MIN(min_personnel) AS min_personnel FROM military_technology WHERE region = 'Oceania' GROUP BY technology) m ON t.name = m.technology JOIN countries c ON m.min_personnel = (SELECT MIN(min_personnel) FROM military_technology mt JOIN countries cc ON mt.region = cc.region WHERE mt.name = t.name) AND c.region = t.region;"}
{"input": " \ubaa8\ub4e0 \uc6b0\uc8fc \uc4f0\ub808\uae30 \ubb3c\uccb4\uc758 \ucd1d \ubb34\uac8c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_debris (id INT, object_weight FLOAT);", "output": "SELECT SUM(object_weight) FROM space_debris;"}
{"input": " \ud5c8\uac00 \ubc88\ud638 2021-001\uc758 \uacc4\uc57d\uc790 \uc774\ub984\uc744 '\uc2e0\uaddc \uacc4\uc57d\uc790'\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE building_permits (permit_number TEXT, contractor TEXT); INSERT INTO building_permits (permit_number, contractor) VALUES ('2021-001', 'Old Contractor');", "output": "WITH cte AS (UPDATE building_permits SET contractor = 'New Contractor' WHERE permit_number = '2021-001') SELECT * FROM cte;"}
{"input": " \uc758\ub8cc \ubd80\ubb38\uc5d0\uc11c \ud68c\uc0ac\uac00 \ub2ec\uc131\ud55c \ucd5c\ub300 \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company_impact (id INT, name VARCHAR(50), sector VARCHAR(20), impact_score FLOAT); INSERT INTO company_impact (id, name, sector, impact_score) VALUES (1, 'Company X', 'Healthcare', 90.0), (2, 'Company Y', 'Finance', 85.0), (3, 'Company Z', 'Healthcare', 92.5);", "output": "SELECT MAX(impact_score) FROM company_impact WHERE sector = 'Healthcare';"}
{"input": " \ud504\ub791\uc2a4 \ub808\uc2a4\ud1a0\ub791\uc758 \ucc44\uc2dd \uc2dd\uc0ac\uc5d0 \ub300\ud55c \uc77c\uc77c \uce7c\ub85c\ub9ac \uc12d\ucde8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Meals (meal_id INT, meal_name VARCHAR(255), is_vegetarian BOOLEAN, restaurant_country VARCHAR(255)); INSERT INTO Meals (meal_id, meal_name, is_vegetarian, restaurant_country) VALUES (1, 'Spaghetti Bolognese', FALSE, 'Italy'), (2, 'Vegetable Lasagna', TRUE, 'Italy'), (3, 'Coq au Vin', FALSE, 'France'), (4, 'Ratatouille', TRUE, 'France'); CREATE TABLE Nutrition (nutrition_id INT, meal_id INT, calories INT); INSERT INTO Nutrition (nutrition_id, meal_id, calories) VALUES (1, 1, 500), (2, 2, 600), (3, 3, 700), (4, 4, 400); CREATE TABLE Days (day_id INT, date DATE); INSERT INTO Days (day_id, date) VALUES (1, '2022-01-01'), (2, '2022-01-02'), (3, '2022-01-03');", "output": "SELECT d.date, SUM(n.calories) as daily_caloric_intake FROM Days d JOIN Meals m ON d.day_id = m.meal_id JOIN Nutrition n ON m.meal_id = n.meal_id WHERE m.is_vegetarian = TRUE AND m.restaurant_country = 'France' GROUP BY d.date;"}
{"input": " 2017\ub144 \ud638\uc8fc\uc758 \ubb3c \ubcf4\uc874 \uacc4\ud68d\uc5d0 \ub4dc\ub294 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WaterConservationInitiatives (Id INT, Initiative VARCHAR(100), Location VARCHAR(100), Cost INT, StartDate DATE, EndDate DATE); INSERT INTO WaterConservationInitiatives (Id, Initiative, Location, Cost, StartDate, EndDate) VALUES (1, 'Rainwater Harvesting', 'Australia', 15000, '2016-04-01', '2016-12-31'); INSERT INTO WaterConservationInitiatives (Id, Initiative, Location, Cost, StartDate, EndDate) VALUES (2, 'Greywater Recycling', 'Australia', 20000, '2017-01-01', '2017-12-31'); INSERT INTO WaterConservationInitiatives (Id, Initiative, Location, Cost, StartDate, EndDate) VALUES (3, 'Drip Irrigation', 'Canada', 25000, '2017-04-01', '2017-12-31'); INSERT INTO WaterConservationInitiatives (Id, Initiative, Location, Cost, StartDate, EndDate) VALUES (4, 'Smart Landscaping', 'Australia', 30000, '2017-01-01', '2017-12-31');", "output": "SELECT SUM(Cost) FROM WaterConservationInitiatives WHERE Location = 'Australia' AND StartDate <= '2017-12-31' AND EndDate >= '2017-01-01';"}
{"input": " \ub3c4\ucfc4\uc640 \uc11c\uc6b8\uc5d0\uc11c \uc5f4\ub9b0 \uc804\uc2dc\ud68c\uc5d0 \ucc38\uc11d\ud55c \ucd1d \ubc29\ubb38\uac1d \uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Exhibitions (id INT, city VARCHAR(20), visitor_id INT); CREATE TABLE Visitors (id INT, name VARCHAR(50));", "output": "SELECT SUM(visitor_count) FROM (SELECT COUNT(DISTINCT Visitors.id) AS visitor_count FROM Visitors JOIN Exhibitions ON Visitors.id = Exhibition.visitor_id WHERE Exhibitions.city IN ('Tokyo', 'Seoul') GROUP BY Visitors.id) AS visitor_counts;"}
{"input": " \ud0dc\ud3c9\uc591\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\uc18c \ud574\uc591 \uc0b0\uc131\ud654 \uc218\uc900\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774 \uc218\uc900\uc744 \ubcf4\uc720\ud55c \uc5f0\uad6c \uae30\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_acidification (measurement_date DATE, location TEXT, level FLOAT); INSERT INTO ocean_acidification (measurement_date, location, level) VALUES ('2021-01-01', 'Hawaii Ocean Observatory', 7.4); INSERT INTO ocean_acidification (measurement_date, location, level) VALUES ('2021-01-02', 'Monterey Bay Aquarium Research Institute', 7.3);", "output": "SELECT research_station.station_name, oa.level AS min_level FROM ocean_acidification oa JOIN (SELECT location, MIN(level) AS min_level FROM ocean_acidification WHERE region = 'Pacific Ocean' GROUP BY location) oa_min ON oa.level = oa_min.min_level JOIN research_stations research_station ON oa.location = research_station.station_name;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc740 \uc548\uc804 \uc0ac\uace0\ub97c \uacaa\uc740 \uc120\uc7a5\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE captain (id INT, name VARCHAR(50), age INT);CREATE TABLE vessel (id INT, captain_id INT, name VARCHAR(50));CREATE TABLE incident (id INT, vessel_id INT, incident_date DATE, incident_type VARCHAR(50));", "output": "SELECT c.name, COUNT(i.id) as incident_count FROM captain c JOIN vessel v ON c.id = v.captain_id JOIN incident i ON v.id = i.vessel_id WHERE i.incident_date >= DATE(NOW(), INTERVAL -6 MONTH) GROUP BY c.name ORDER BY incident_count DESC;"}
{"input": " \uac01 \uc57c\uc0dd\ub3d9\ubb3c \uc11c\uc2dd\uc9c0\uc5d0 \ub300\ud574 2017\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0\uc758 \ud3c9\uade0 \uba74\uc801\uc744 \uacb0\uc815\ud558\uace0 \ud3c9\uade0 \uba74\uc801\uc774 \ub192\uc740 \uc21c\uc11c\ub300\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE wildlife_habitats_2 (habitat_id INT, habitat_name VARCHAR(50), year INT, area INT); INSERT INTO wildlife_habitats_2 (habitat_id, habitat_name, year, area) VALUES (1, 'Forest', 2017, 1000), (2, 'Wetland', 2017, 2000), (3, 'Grassland', 2017, 3000), (4, 'Forest', 2018, 1200), (5, 'Wetland', 2018, 2200), (6, 'Grassland', 2018, 3200), (7, 'Forest', 2019, 1400), (8, 'Wetland', 2019, 2400), (9, 'Grassland', 2019, 3400);", "output": "SELECT habitat_name, AVG(area) AS avg_area, RANK() OVER (ORDER BY AVG(area) DESC) AS area_rank FROM wildlife_habitats_2 GROUP BY habitat_name;"}
{"input": " \uc9c0\ub09c \ub2ec \uad6d\uac00\ubcc4 1\uc778\ub2f9 \ud3c9\uade0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country_waste_rates (country_name VARCHAR(50), generation_rate NUMERIC(10,2), measurement_date DATE); INSERT INTO country_waste_rates (country_name, generation_rate, measurement_date) VALUES ('Canada', 1.25, '2022-02-28'), ('Mexico', 0.87, '2022-02-28'), ('Brazil', 1.13, '2022-02-28');", "output": "SELECT country_name, AVG(generation_rate) avg_rate FROM country_waste_rates WHERE measurement_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY country_name, ROW_NUMBER() OVER (PARTITION BY country_name ORDER BY measurement_date DESC);"}
{"input": " \uc7ac\uc0dd\uc5d0\ub108\uc9c0\uc6d0\uc744 \ud65c\uc6a9\ud558\uc5ec \uc0dd\uc0b0\ub41c \uc758\ub958 \ud488\ubaa9\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (item_id INT, energy_source VARCHAR(255), quantity INT); INSERT INTO production (item_id, energy_source, quantity) VALUES (1, 'Solar', 500), (2, 'Wind', 600), (3, 'Hydro', 400), (4, 'Fossil Fuels', 700), (5, 'Nuclear', 800);", "output": "SELECT SUM(quantity) FROM production WHERE energy_source IN ('Solar', 'Wind', 'Hydro');"}
{"input": " \ubd80\uc11c\ubcc4, \ub3c4\uc2dc\ubcc4 \ud3c9\uade0 \uc18c\ubc29\uad00 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FireDepartment ( id INT, department VARCHAR(25), city VARCHAR(20), firefighters_count INT); INSERT INTO FireDepartment (id, department, city, firefighters_count) VALUES (1, 'SFFD', 'San Francisco', 1500); INSERT INTO FireDepartment (id, department, city, firefighters_count) VALUES (2, 'FDNY', 'New York', 11000);", "output": "SELECT city, AVG(firefighters_count) OVER (PARTITION BY city) as avg_firefighters FROM FireDepartment;"}
{"input": " \uc7ac\ud65c\uc6a9\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc9c0\uc5ed\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE RecyclingRates (id INT, district VARCHAR(20), recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingRates (id, district, recycling_rate) VALUES (1, 'DistrictA', 0.65), (2, 'DistrictB', 0.70), (3, 'DistrictC', 0.55);", "output": "SELECT district, recycling_rate FROM (SELECT district, recycling_rate, ROW_NUMBER() OVER (ORDER BY recycling_rate DESC) AS rn, COUNT(*) OVER () AS total_rows FROM RecyclingRates) tmp WHERE rn = 1 OR rn = total_rows;"}
{"input": " \uc5f0\uadf9 \uacf5\uc5f0 \uad00\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE events (event_id INT, event_type VARCHAR(50)); INSERT INTO events (event_id, event_type) VALUES (1, 'Dance'), (2, 'Theater'); CREATE TABLE attendees (attendee_id INT, event_id INT, age INT); INSERT INTO attendees (attendee_id, event_id, age) VALUES (1, 1, 25), (2, 1, 30), (3, 2, 45), (4, 2, 50), (5, 2, 55);", "output": "SELECT AVG(age) FROM attendees WHERE event_id IN (SELECT event_id FROM events WHERE event_type = 'Theater');"}
{"input": "\uac00\uc0c1 \uc5ec\ud589 \ucc38\uc5ec \ub370\uc774\ud130\uac00 \uc788\ub294 EMEA \uc9c0\uc5ed \ud638\ud154\uc5d0 \ub300\ud55c \ubaa8\ub4e0 OTA \uc608\uc57d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE otas (ota_id INT, booking_date DATE, hotel_id INT); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT); CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, engagement_score INT); INSERT INTO hotels (hotel_id, hotel_name, region) VALUES (1, 'Grand Hotel', 'EMEA'); INSERT INTO virtual_tours (tour_id, hotel_id, engagement_score) VALUES (1, 1, 75); INSERT INTO otas (ota_id, booking_date, hotel_id) VALUES (1, '2021-05-01', 1);", "output": "SELECT h.hotel_name, otas.booking_date FROM otas INNER JOIN hotels h ON otas.hotel_id = h.hotel_id INNER JOIN virtual_tours vt ON h.hotel_id = vt.hotel_id WHERE h.region = 'EMEA';"}
{"input": " '\uc544\uc2dc\uc544' \ud638\ud154\uc758 AI \uae30\uc220 \ub3c4\uc785\ub960\uc740 \uc5b4\ub290 \uc815\ub3c4\uc778\uac00?", "context": "CREATE TABLE hotels_tech (hotel_id INT, hotel_name VARCHAR(50), region VARCHAR(50), ai_adoption BOOLEAN); INSERT INTO hotels_tech (hotel_id, hotel_name, region, ai_adoption) VALUES (1, 'Mandarin Oriental', 'Asia', true), (2, 'Four Seasons', 'North America', false);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM hotels_tech WHERE region = 'Asia')) AS adoption_rate FROM hotels_tech WHERE region = 'Asia' AND ai_adoption = true;"}
{"input": " \uac01 \ube0c\ub79c\ub4dc\uc758 \uc7ac\uace0\uc5d0 \ub300\ud55c \uacf5\uc815\ubb34\uc5ed \ud488\ubaa9\uc758 \ube44\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE fair_trade_brands (brand_id INT, brand_name VARCHAR(255), fair_trade_items INT); INSERT INTO fair_trade_brands (brand_id, brand_name, fair_trade_items) VALUES (1, 'Mata Traders', 250), (2, 'No Nasties', 320), (3, 'Fair Trade Winds', 180);", "output": "SELECT brand_name, fair_trade_items, PERCENT_RANK() OVER (ORDER BY fair_trade_items) as fair_trade_percent FROM fair_trade_brands;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc744 \uc6d4\ubcc4\ub85c \ub098\ub204\uc5b4 \ubcf4\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE consumption (consumption_id INT, state VARCHAR(20), water_consumption FLOAT, consumption_date DATE); INSERT INTO consumption (consumption_id, state, water_consumption, consumption_date) VALUES (1, 'California', 500000.0, '2022-01-01'), (2, 'California', 600000.0, '2022-02-01'), (3, 'California', 700000.0, '2022-03-01');", "output": "SELECT state, SUM(water_consumption) FROM consumption GROUP BY state, PERIOD_DIFF(consumption_date, DATE_FORMAT(consumption_date, '%Y%m')) * 100;"}
{"input": " \ucc44\uad74\uc7a5\ubcc4 \ucd1d \uadfc\ub85c\uc790 \uc218\uc640 \ucd1d \uc9c0\ucd9c\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_sites (site_id INT, site_name TEXT, location TEXT); INSERT INTO mining_sites (site_id, site_name, location) VALUES (1, 'Site A', 'Country X'), (2, 'Site B', 'Country Y'); CREATE TABLE workers (worker_id INT, site_id INT, num_workers INT); INSERT INTO workers (worker_id, site_id, num_workers) VALUES (1, 1, 300), (2, 1, 200), (3, 2, 500), (4, 2, 250); CREATE TABLE expenditure (expenditure_id INT, site_id INT, amount FLOAT); INSERT INTO expenditure (expenditure_id, site_id, amount) VALUES (1, 1, 1000000), (2, 1, 1500000), (3, 2, 2000000), (4, 2, 2500000);", "output": "SELECT mining_sites.site_name, SUM(num_workers) AS total_workers, SUM(amount) AS total_expenditure FROM mining_sites INNER JOIN workers ON mining_sites.site_id = workers.site_id INNER JOIN expenditure ON mining_sites.site_id = expenditure.site_id GROUP BY mining_sites.site_name;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\ub294 \uc7ac\ud65c\uc6a9 \uc2dc\uc124\uc774 \uba87 \uac1c \uc788\uc73c\uba70 \uc804\uccb4 \uc2dc\uc124\uc758 \uba87 \ud37c\uc13c\ud2b8\ub97c \ucc28\uc9c0\ud569\ub2c8\uae4c?", "context": "CREATE TABLE recycling_facilities (id INT, state VARCHAR(20), type VARCHAR(20)); INSERT INTO recycling_facilities (id, state, type) VALUES (1, 'California', 'recycling'), (2, 'New York', 'recycling'), (3, 'California', 'landfill'), (4, 'Texas', 'recycling');", "output": "SELECT COUNT(*) AS total_recycling_facilities, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM recycling_facilities)) AS percentage_of_total FROM recycling_facilities WHERE state = 'California';"}
{"input": " EU\uc640 \uc778\ub3c4\uc758 \uac1c\ubc1c\uc790\uac00 \uc2e4\ud589\ud55c \uc774\ub354\ub9ac\uc6c0 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Smart_Contracts (Contract_ID INT, Gas_Fees DECIMAL(10,2), Developer_Location VARCHAR(50)); INSERT INTO Smart_Contracts (Contract_ID, Gas_Fees, Developer_Location) VALUES (1, 50.50, 'Germany'), (2, 75.25, 'India'), (3, 30.00, 'France');", "output": "SELECT COUNT(*) FROM Smart_Contracts WHERE Developer_Location IN ('EU', 'India');"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uce58\ub8cc\ubc95\uc744 \uc0ac\uc6a9\ud558\uc5ec \uce58\ub8cc\ubc1b\uc740 \ud658\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE therapy_summary (patient_id INT, region TEXT, treatment_type TEXT); INSERT INTO therapy_summary (patient_id, region, treatment_type) VALUES (10, 'Western', 'Therapy'); INSERT INTO therapy_summary (patient_id, region, treatment_type) VALUES (11, 'Eastern', 'Medication');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM therapy_summary WHERE region = 'Western')) AS percentage FROM therapy_summary WHERE region = 'Western' AND treatment_type = 'Therapy';"}
{"input": " \ud2b9\uc815 \uad11\uc0b0\uc5d0 \ub300\ud55c \uc9c0\uc9c8 \uc870\uc0ac \uc815\ubcf4 \ud45c\uc2dc", "context": "CREATE TABLE mine (id INT, name TEXT, location TEXT, geological_survey TEXT); INSERT INTO mine (id, name, location, geological_survey) VALUES (1, 'Golden Gorge', 'CA', 'Survey 1, Report 123'), (2, 'Silver Ridge', 'NV', 'Survey 2, Report 456'), (3, 'Bronze Basin', 'CO', 'Survey 3, Report 789');", "output": "SELECT name, geological_survey FROM mine WHERE name = 'Silver Ridge';"}
{"input": " 2022\ub144 \ud14d\uc0ac\uc2a4 \uc8fc \uc8fc\uac70 \ubd80\ubb38\uc758 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation_total (state varchar(255), sector varchar(255), year int, total_waste float); INSERT INTO waste_generation_total (state, sector, year, total_waste) VALUES ('Texas', 'Residential', 2022, 2500000);", "output": "SELECT total_waste FROM waste_generation_total WHERE state = 'Texas' AND sector = 'Residential' AND year = 2022"}
{"input": " \uc81c\ubaa9\uc5d0 \"\ub2e4\uc591\uc131\"\uc774\ub77c\ub294 \ub2e8\uc5b4\uac00 \ud3ec\ud568\ub41c \uae30\uc0ac\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT PRIMARY KEY, title TEXT, author_id INT); INSERT INTO articles (id, title, author_id) VALUES (1, 'Diversity Article', 1), (2, 'Article 2', 2), (3, 'Article 3', 3);", "output": "SELECT COUNT(id) FROM articles WHERE title LIKE '%diversity%';"}
{"input": " \ubcd1\uc6d0 \ubc0f \uc9c4\ub8cc\uc18c \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uac01 \uc8fc\uc758 \ubcd1\uc6d0 \ubc0f \uc9c4\ub8cc\uc18c \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, state TEXT, location TEXT, type TEXT, num_beds INT); INSERT INTO hospitals (id, name, state, location, type, num_beds) VALUES (1, 'Hospital A', 'State A', 'Urban', 'Teaching', 200), (2, 'Hospital B', 'State B', 'Rural', 'Community', 150), (3, 'Clinic C', 'State A', 'Urban', 'Primary Care', 25); CREATE TABLE clinics (id INT, name TEXT, state TEXT, location TEXT, type TEXT, num_providers INT); INSERT INTO clinics (id, name, state, location, type, num_providers) VALUES (1, 'Clinic X', 'State A', 'Urban', 'Specialty Care', 10), (2, 'Clinic Y', 'State B', 'Rural', 'Urgent Care', 8), (3, 'Clinic Z', 'State A', 'Urban', 'Primary Care', 12);", "output": "SELECT s.state, h.type as hospital_type, c.type as clinic_type, COUNT(h.id) as num_hospitals, COUNT(c.id) as num_clinics FROM (SELECT DISTINCT state FROM hospitals UNION SELECT DISTINCT state FROM clinics) as s LEFT JOIN hospitals h ON s.state = h.state LEFT JOIN clinics c ON s.state = c.state GROUP BY s.state, h.type, c.type;"}
{"input": " \ucc38\uac00\uc790\uac00 \ucc38\uc11d\ud558\ub294 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \ud69f\uc218\ub294 \uc778\uc885\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Participants (ParticipantID INT, Ethnicity VARCHAR(255)); CREATE TABLE Programs (ProgramID INT, ParticipantID INT);", "output": "SELECT Ethnicity, AVG(COUNT(*)) OVER(PARTITION BY Ethnicity) FROM Participants JOIN Programs ON Participants.ParticipantID = Programs.ParticipantID GROUP BY Ethnicity, Participants.ParticipantID;"}
{"input": " \ubbf8\uad6d \uc6b0\uc8fc\ube44\ud589\uc0ac\uac00 \uc644\ub8cc\ud55c \uc6b0\uc8fc \uc784\ubb34\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE SpaceMissions (id INT, astronaut_country VARCHAR, mission_status VARCHAR); CREATE TABLE Astronauts (id INT, country VARCHAR);", "output": "SELECT PERCENTAGE(COUNT(*)) OVER (PARTITION BY mission_status) FROM SpaceMissions sm JOIN Astronauts a ON sm.astronaut_country = a.country WHERE a.country = 'United States';"}
{"input": " \ud2b9\uc815 \uad6d\uac00\uc758 \uac01 \uc885\uc5d0 \ub300\ud55c \ucd1d \uc5b4\ub958 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Country (id INT, name VARCHAR(50), continent VARCHAR(50)); CREATE TABLE Species (id INT, name VARCHAR(50), scientific_name VARCHAR(50)); CREATE TABLE FarmSpecies (farm_id INT, species_id INT, biomass INT); CREATE TABLE Farm (id INT, name VARCHAR(50), country_id INT);", "output": "SELECT s.name, SUM(fs.biomass) FROM Species s JOIN FarmSpecies fs ON s.id = fs.species_id JOIN Farm f ON fs.farm_id = f.id JOIN Country c ON f.country_id = c.id WHERE c.name = [some_country_name] GROUP BY s.name;"}
{"input": " \ub304\uc2a4 \ubc0f \uc2dc\uac01 \uc608\uc220 \ud589\uc0ac\uc758 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uade0 \ucc38\uc11d\ub960\uc740 \uc5b4\ub5bb\uac8c \ube44\uad50\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Events (Id INT, EventType VARCHAR(50), Attendance INT);CREATE TABLE DanceEvents (Id INT, EventId INT);CREATE TABLE VisualArtEvents (Id INT, EventId INT);", "output": "SELECT D.EventType, AVG(E.Attendance) as AvgAttendance FROM Events E INNER JOIN (SELECT * FROM DanceEvents UNION ALL SELECT * FROM VisualArtEvents) D ON E.Id = D.EventId GROUP BY D.EventType;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uad11\uc0b0\ub2f9 \uc6d4\uac04 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc744 \uac00\uc7a5 \ub192\uc740 \ubc30\ucd9c\uc790 \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emission (emission_id INT, mine_id INT, date DATE, co2_emitted INT); INSERT INTO co2_emission (emission_id, mine_id, date, co2_emitted) VALUES (1, 1, '2021-01-01', 1000), (2, 1, '2021-02-01', 1200), (3, 2, '2021-01-01', 1500), (4, 2, '2021-02-01', 1800), (5, 3, '2021-01-01', 2000), (6, 3, '2021-02-01', 2500);", "output": "SELECT mine_id, EXTRACT(MONTH FROM date) as month, SUM(co2_emitted) OVER (PARTITION BY mine_id, EXTRACT(MONTH FROM date) ORDER BY mine_id, SUM(co2_emitted) DESC) as total_co2_emission FROM co2_emission WHERE date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE;"}
{"input": " \ud3ec\uc6a9 \ub178\ub825\uc774 \uac00\uc7a5 \uc801\uc740 \uc9c1\uc6d0\uc758 \uc774\ub984\uacfc \uc774\uba54\uc77c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE InclusionEfforts (EffortID INT, StaffID INT, EffortDate DATETIME); INSERT INTO InclusionEfforts (EffortID, StaffID, EffortDate) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-03-01'), (4, 1, '2021-04-01'), (5, 2, '2021-05-01'), (6, 3, '2021-06-01');", "output": "SELECT Staff.FirstName, Staff.LastName, Staff.Email FROM Staff INNER JOIN (SELECT StaffID, COUNT(*) as NumEfforts FROM InclusionEfforts GROUP BY StaffID ORDER BY NumEfforts ASC LIMIT 1) Subquery ON Staff.StaffID = Subquery.StaffID;"}
{"input": " '\ub7ec\uc2dc\uc544', '\uc77c\ubcf8', '\uce90\ub098\ub2e4'\uc5d0\ub294 \ub3c4\uc2dc\uac00 \uba87 \uac1c \uc788\uace0, \uc774\ub4e4 \ub3c4\uc2dc\uc758 \uc804\uccb4 \uc778\uad6c\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE City (Id INT PRIMARY KEY, Name VARCHAR(50), Population INT, Country VARCHAR(50)); INSERT INTO City (Id, Name, Population, Country) VALUES (1, 'Moscow', 12000000, 'Russia'); INSERT INTO City (Id, Name, Population, Country) VALUES (2, 'Saint Petersburg', 5000000, 'Russia'); INSERT INTO City (Id, Name, Population, Country) VALUES (3, 'Tokyo', 9000000, 'Japan'); INSERT INTO City (Id, Name, Population, Country) VALUES (4, 'Osaka', 2600000, 'Japan'); INSERT INTO City (Id, Name, Population, Country) VALUES (5, 'Toronto', 2900000, 'Canada'); INSERT INTO City (Id, Name, Population, Country) VALUES (6, 'Montreal', 1700000, 'Canada');", "output": "SELECT Country, COUNT(*) as NumberOfCities, SUM(Population) as TotalPopulation FROM City WHERE Country IN ('Russia', 'Japan', 'Canada') GROUP BY Country;"}
{"input": " \ub9e4\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uac8c\uc784 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameSales (GameID INT, GameType VARCHAR(10), Sales INT); INSERT INTO GameSales (GameID, GameType, Sales) VALUES (1, 'RPG', 50000), (2, 'FPS', 70000), (3, 'RPG', 60000), (4, 'Simulation', 80000);", "output": "SELECT GameType, AVG(Sales) FROM GameSales GROUP BY GameType ORDER BY AVG(Sales) DESC LIMIT 3;"}
{"input": " A \uad6d\uac00\uc758 \uac01 \uad11\uc0b0\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc624\uc5fc \uc9c0\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (id INT, mine_id INT, pollution_index FLOAT, impact_date DATE); INSERT INTO environmental_impact (id, mine_id, pollution_index, impact_date) VALUES (3, 3, 28.1, '2020-01-01'); INSERT INTO environmental_impact (id, mine_id, pollution_index, impact_date) VALUES (4, 4, 32.5, '2020-02-01');", "output": "SELECT e.mine_id, AVG(e.pollution_index) as avg_pollution FROM environmental_impact e WHERE e.location = 'Country A' GROUP BY e.mine_id;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uc6cc\uc2f1\ud134\uc8fc\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, state VARCHAR(50), quarter INT, revenue FLOAT); INSERT INTO sales (id, state, quarter, revenue) VALUES (1, 'California', 1, 25000.0), (2, 'California', 2, 30000.0), (3, 'Colorado', 1, 20000.0), (4, 'Colorado', 2, 22000.0), (5, 'Washington', 1, 28000.0), (6, 'Washington', 2, 31000.0);", "output": "SELECT SUM(revenue) FROM sales WHERE state = 'Washington' AND quarter = 2;"}
{"input": " \ub2e8\uc77c \uce74\uc6b4\ud2f0\uc758 \ucd5c\ub300 \uc815\uc2e0 \uac74\uac15 \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Counties (county_id INT, county_name TEXT); CREATE TABLE Providers (provider_id INT, provider_type TEXT, county_id INT);", "output": "SELECT MAX(count_providers) FROM (SELECT COUNT(*) as count_providers FROM Providers p JOIN Counties c ON p.county_id = c.county_id GROUP BY p.county_id);"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc124\ub9bd\ub418\uc5b4 \ubca4\ucc98 \uce90\ud53c\ud0c8\ub9ac\uc2a4\ud2b8\uc640 \uc5d4\uc824 \ud22c\uc790\uc790 \ubaa8\ub450\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ud68c\uc0ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Companies (id INT, name TEXT, country TEXT); INSERT INTO Companies (id, name, country) VALUES (1, 'Acme Inc', 'USA'); INSERT INTO Companies (id, name, country) VALUES (2, 'Rocket Corp', 'USA'); CREATE TABLE Investors (id INT, name TEXT, type TEXT); INSERT INTO Investors (id, name, type) VALUES (1, 'Venture Capital 1', 'VC'); INSERT INTO Investors (id, name, type) VALUES (2, 'Angel Investor 1', 'Angel');", "output": "SELECT Companies.name FROM Companies INNER JOIN (SELECT * FROM Investors WHERE type = 'VC' INTERSECT SELECT * FROM Investors WHERE type = 'Angel') AS InvestorTypes ON TRUE WHERE Companies.country = 'USA';"}
{"input": " \uc720\ud615\ubcc4 \ucd1d \ubaa8\ub378 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_model (id INT, name VARCHAR, type VARCHAR, domain VARCHAR, accuracy FLOAT); INSERT INTO ai_model (id, name, type, domain, accuracy) VALUES (7, 'ModelG', 'Reinforcement', 'Fairness', 0.91); INSERT INTO ai_model (id, name, type, domain, accuracy) VALUES (8, 'ModelH', 'Semi-supervised', 'Safety', 0.98);", "output": "SELECT type, COUNT(*) as total FROM ai_model GROUP BY type;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc6b4\uc784\uc744 \ucd1d\uc561 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uc704 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CustomersRegion (CustomerID INT, CustomerName VARCHAR(255), Region VARCHAR(50), TotalFreightCharges DECIMAL(10, 2)); INSERT INTO CustomersRegion (CustomerID, CustomerName, Region, TotalFreightCharges) VALUES (1, 'ABC Corp', 'East', 5000.00), (2, 'XYZ Inc', 'West', 7000.00), (3, 'LMN Ltd', 'East', 6000.00), (4, 'DEF Co', 'West', 8000.00), (5, 'GHI Pvt', 'East', 9000.00), (6, 'JKL Co', 'North', 4000.00), (7, 'MNO Inc', 'North', 3000.00), (8, 'PQR Ltd', 'South', 10000.00), (9, 'STU Pvt', 'South', 11000.00), (10, 'VWX Corp', 'South', 12000.00);", "output": "SELECT CustomerName, TotalFreightCharges, Region FROM (SELECT CustomerName, TotalFreightCharges, Region, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY TotalFreightCharges DESC) AS Ranking FROM CustomersRegion) AS Subquery WHERE Ranking <= 3;"}
{"input": " \uc774\ud2b8\ub968\uacfc \uc0ac\ub9c8\ub968\uc758 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc558\ub358 \uace0\uc720\ud55c \ub2ec\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production (element VARCHAR(10), year INT, month INT, quantity INT); INSERT INTO production (element, year, month, quantity) VALUES ('Yttrium', 2015, 1, 40), ('Yttrium', 2015, 2, 45), ('Yttrium', 2016, 1, 50), ('Yttrium', 2016, 2, 55), ('Samarium', 2015, 1, 60), ('Samarium', 2015, 2, 65), ('Samarium', 2016, 1, 70), ('Samarium', 2016, 2, 75);", "output": "SELECT element, month FROM (SELECT element, month, ROW_NUMBER() OVER (PARTITION BY element ORDER BY quantity DESC) AS rn FROM production WHERE element IN ('Yttrium', 'Samarium')) t WHERE rn = 1;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc724\ub9ac\uc801 AI\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ud22c\uc790\ub97c \ud55c \uc544\ud504\ub9ac\uce74 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AIInvestments (InvestmentID INT, Country TEXT, Amount FLOAT, InvestmentDate DATE); INSERT INTO AIInvestments (InvestmentID, Country, Amount, InvestmentDate) VALUES (1, 'Nigeria', 500000, '2020-01-01'); INSERT INTO AIInvestments (InvestmentID, Country, Amount, InvestmentDate) VALUES (2, 'South Africa', 700000, '2019-01-01'); INSERT INTO AIInvestments (InvestmentID, Country, Amount, InvestmentDate) VALUES (3, 'Egypt', 600000, '2018-01-01');", "output": "SELECT Country, SUM(Amount) as TotalInvestment FROM AIInvestments WHERE InvestmentDate >= (SELECT DATEADD(year, -3, GETDATE())) AND Country IN ('Nigeria', 'South Africa', 'Egypt', 'Kenya', 'Morocco') GROUP BY Country ORDER BY TotalInvestment DESC LIMIT 5;"}
{"input": " 'renewable_energy' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\uc18c \ud22c\uc790 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE renewable_energy (id INT, project_name VARCHAR(50), location VARCHAR(50), investment FLOAT); INSERT INTO renewable_energy (id, project_name, location, investment) VALUES (1, 'Solar Farm', 'Arizona', 12000000), (2, 'Wind Turbines', 'Texas', 8000000);", "output": "SELECT MIN(investment) FROM renewable_energy;"}
{"input": " \uac19\uc740 \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \uacf5\uc7a5 \uac04\uc758 \uacf5\ud1b5 \uc778\ub825 \uac1c\ubc1c \uacc4\ud68d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id INT, name TEXT, location TEXT); CREATE TABLE initiatives (initiative_id INT, factory_id INT, description TEXT, start_date DATE, end_date DATE); INSERT INTO factories (factory_id, name, location) VALUES (1, 'Factory A', 'City A'), (2, 'Factory B', 'City A'), (3, 'Factory C', 'City B'), (4, 'Factory D', 'City B'); INSERT INTO initiatives (initiative_id, factory_id, description, start_date, end_date) VALUES (1, 1, 'Training program', '2021-01-01', '2021-12-31'), (2, 2, 'Internship program', '2021-06-01', '2021-08-31'), (3, 3, 'Mentorship program', '2021-09-01', '2021-12-31'), (4, 1, 'Apprenticeship program', '2021-01-01', '2021-12-31'), (5, 2, 'Training program', '2021-01-01', '2021-12-31');", "output": "SELECT f1.location, i1.description FROM initiatives i1 JOIN factories f1 ON i1.factory_id = f1.factory_id JOIN initiatives i2 ON i1.description = i2.description JOIN factories f2 ON i2.factory_id = f2.factory_id WHERE f1.location = f2.location GROUP BY f1.location, i1.description HAVING COUNT(*) > 1;"}
{"input": " \uc7ac\ud65c\uc6a9 \ud3f4\ub9ac\uc5d0\uc2a4\ud130\ub97c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\uc640 \ud574\ub2f9 \uc778\uc99d\uc11c\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Suppliers (supplier_id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO Suppliers (supplier_id, name, country) VALUES (1, 'EcoSupplier', 'USA'), (2, 'GreenSupplies', 'India'), (3, 'SustainableSource', 'Brazil'); CREATE TABLE Materials (material_id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO Materials (material_id, name, type) VALUES (1, 'Recycled Polyester', 'Fabric'), (2, 'Organic Cotton', 'Fabric'), (3, 'Recycled Plastic', 'Accessory'); CREATE TABLE Supplies (supply_id INT, supplier_id INT, material_id INT, certification VARCHAR(255)); INSERT INTO Supplies (supply_id, supplier_id, material_id, certification) VALUES (1, 1, 1, 'Global Recycled Standard'), (2, 2, 1, 'EU Ecolabel'), (3, 3, 1, 'Certified B Corporation');", "output": "SELECT Suppliers.name, Supplies.certification FROM Suppliers INNER JOIN Supplies ON Suppliers.supplier_id = Supplies.supplier_id INNER JOIN Materials ON Supplies.material_id = Materials.material_id WHERE Materials.name = 'Recycled Polyester';"}
{"input": " 'Central' \uad6c\uc5ed\uc5d0\uc11c \uae34\uae09 \uc804\ud654\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE district (did INT, district_name VARCHAR(255)); INSERT INTO district (did, district_name) VALUES (1, 'Central'), (2, 'North'), (3, 'South'); CREATE TABLE emergency_calls (call_id INT, did INT, response_time INT);", "output": "SELECT MAX(response_time) FROM emergency_calls WHERE did = 1;"}
{"input": "\uc5b4\ub5a4 \ud1a0\ucc29 \uc2dd\ub7c9 \uc2dc\uc2a4\ud15c\uc774 '\uc544\uc2dc\uc544'\uc758 \ud3c9\uade0 \ub18d\uc0dd\ud0dc\ud559 \ud504\ub85c\uc81d\ud2b8 \uba74\uc801\ubcf4\ub2e4 \ub354 \ud070 \uba74\uc801\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE indigenous_food_systems (id INT, name TEXT, location TEXT, area_ha FLOAT); INSERT INTO indigenous_food_systems (id, name, location, area_ha) VALUES (1, 'System A', 'Mexico', 7), (2, 'System B', 'Mexico', 3), (3, 'System C', 'Brazil', 4.5); CREATE TABLE agroecological_projects (id INT, name TEXT, location TEXT, area_ha FLOAT); INSERT INTO agroecological_projects (id, name, location, area_ha) VALUES (1, 'Project A', 'Asia', 1.5), (2, 'Project B', 'Asia', 2.2), (3, 'Project C', 'Africa', 3);", "output": "SELECT name FROM indigenous_food_systems WHERE area_ha > (SELECT AVG(area_ha) FROM agroecological_projects WHERE location = 'Asia');"}
{"input": " \uc131\ud3c9\ub4f1\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc870\uc9c1\uc758 \ucd1d \ud22c\uc790\uc561 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \ud22c\uc790\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (investment_id INT, investor_id INT, org_id INT, investment_amount INT); INSERT INTO investments (investment_id, investor_id, org_id, investment_amount) VALUES (1, 1, 2, 50000), (2, 2, 3, 75000), (3, 1, 1, 100000), (4, 3, 2, 35000), (5, 2, 1, 80000); CREATE TABLE investors (investor_id INT, investor_name TEXT); INSERT INTO investors (investor_id, investor_name) VALUES (1, 'Investor A'), (2, 'Investor B'), (3, 'Investor C'); CREATE TABLE organizations (org_id INT, org_name TEXT, focus_topic TEXT); INSERT INTO organizations (org_id, org_name, focus_topic) VALUES (1, 'Org 1', 'Gender Equality'), (2, 'Org 2', 'Gender Equality'), (3, 'Org 3', 'Climate Change');", "output": "SELECT investor_name, SUM(investment_amount) AS total_invested FROM investments JOIN investors ON investments.investor_id = investors.investor_id JOIN organizations ON investments.org_id = organizations.org_id WHERE focus_topic = 'Gender Equality' GROUP BY investor_name ORDER BY total_invested DESC LIMIT 3;"}
{"input": " VR \uac8c\uc784\uc744 \uc990\uae30\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, GameType VARCHAR(10)); INSERT INTO Players (PlayerID, Age, GameType) VALUES (1, 25, 'VR'), (2, 30, 'Non-VR'), (3, 22, 'VR');", "output": "SELECT AVG(Age) FROM Players WHERE GameType = 'VR';"}
{"input": " \uc704\ubc18\uc774 \uac10\uc18c\ud558\ub294 \uc120\ubc15\uc744 \uacf5\uac1c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VesselInspections2 (ID INT, Vessel VARCHAR(50), InspectionDate DATE, ViolationCount INT); INSERT INTO VesselInspections2 (ID, Vessel, InspectionDate, ViolationCount) VALUES (1, 'SS Freedom', '2020-01-01', 3), (2, 'SS Liberty', '2020-01-02', 2), (3, 'SS Eagle', '2020-01-03', 4), (4, 'SS Freedom', '2020-01-04', 2);", "output": "SELECT Vessel, ViolationCount, LAG(ViolationCount) OVER (PARTITION BY Vessel ORDER BY InspectionDate) as PreviousViolationCount FROM VesselInspections2;"}
{"input": " \ud5c8\uac00 \ubc88\ud638\uac00 'P'\ub85c \uc2dc\uc791\ud558\uace0 \ud5c8\uac00 \uc720\ud615\uc774 '\uc2e0\uaddc' \ub610\ub294 '\ucd94\uac00'\uc778 \ubaa8\ub4e0 \ud5c8\uac00\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE building_permits (permit_number VARCHAR(10), permit_type VARCHAR(10)); INSERT INTO building_permits (permit_number, permit_type) VALUES ('N-12345', 'New'), ('A-54321', 'Addition'), ('P-98765', 'Renewal');", "output": "SELECT permit_number FROM building_permits WHERE permit_number LIKE 'P%' AND permit_type IN ('New', 'Addition');"}
{"input": "\uc778\ub3c4\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \ucc9c\uc5f0 \ud654\uc7a5\ud488\uc758 \ucd5c\uc800 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, name TEXT, is_natural BOOLEAN, price DECIMAL, country TEXT); INSERT INTO products (product_id, name, is_natural, price, country) VALUES (1, 'Lipstick', TRUE, 7.99, 'India'); INSERT INTO products (product_id, name, is_natural, price, country) VALUES (2, 'Eye Shadow', TRUE, 5.49, 'India');", "output": "SELECT MIN(price) FROM products WHERE is_natural = TRUE AND country = 'India';"}
{"input": " \ub300\ub959\ubcc4 \uc6d4\ubcc4 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc5ec\ud589\uc9c0\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE continent (continent_code CHAR(2), continent_name VARCHAR(50)); INSERT INTO continent VALUES ('AF', 'Africa'), ('AS', 'Asia'); CREATE TABLE visit_details (continent_code CHAR(2), visit_month DATE, destination VARCHAR(50), visitor_count INT); INSERT INTO visit_details VALUES ('AF', '2021-01-01', 'Marrakech', 200), ('AF', '2021-02-01', 'Cairo', 300), ('AS', '2021-01-01', 'Tokyo', 500), ('AS', '2021-02-01', 'Beijing', 400);", "output": "SELECT continent_code, visit_month, destination, ROW_NUMBER() OVER (PARTITION BY continent_code, visit_month ORDER BY visitor_count DESC) AS rank FROM visit_details;"}
{"input": " \uac01 \uc704\uce58\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc720\ud55c \uc720\ud615\uc758 \uc758\ub8cc \uc790\uc6d0\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE medical_resources (id INT, resource VARCHAR(30), location VARCHAR(10));", "output": "SELECT DISTINCT resource FROM medical_resources WHERE location = 'urban' INTERSECT SELECT DISTINCT resource FROM medical_resources WHERE location = 'rural'"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac \uc0ac\uc6a9 \uce21\uba74\uc5d0\uc11c \ud558\uc704 2\uac1c \ube0c\ub79c\ub4dc\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Brands (brand_id INT, brand_name VARCHAR(50)); CREATE TABLE Brand_Materials (brand_id INT, material_id INT, quantity INT); CREATE TABLE Materials (material_id INT, material_name VARCHAR(50), is_sustainable BOOLEAN); INSERT INTO Brands (brand_id, brand_name) VALUES (1, 'EcoFabric'), (2, 'GreenThreads'), (3, 'SustainableStyle'), (4, 'FairFashion'), (5, 'BambooBrand'); INSERT INTO Materials (material_id, material_name, is_sustainable) VALUES (1, 'Organic Cotton', true), (2, 'Synthetic Fiber', false), (3, 'Recycled Plastic', true), (4, 'Bamboo Fiber', true); INSERT INTO Brand_Materials (brand_id, material_id, quantity) VALUES (1, 1, 600), (1, 2, 300), (2, 1, 800), (2, 3, 700), (3, 1, 400), (3, 2, 500), (4, 4, 1000), (5, 2, 1500);", "output": "SELECT brand_name, SUM(quantity) as total_quantity FROM Brands b INNER JOIN Brand_Materials bm ON b.brand_id = bm.brand_id INNER JOIN Materials m ON bm.material_id = m.material_id WHERE m.is_sustainable = false GROUP BY brand_name ORDER BY total_quantity ASC LIMIT 2;"}
{"input": " \uce90\ub098\ub2e4 \uc628\ud0c0\ub9ac\uc624 \uc8fc\uc5d0\uc11c \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\ub97c \ud1b5\ud574 \ub2ec\uc131\ud55c \uc5f0\uac04 CO2 \ubc30\ucd9c\ub7c9 \uac10\uc18c\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE co2_emissions_reduction (project_id INT, project_name VARCHAR(255), co2_reduction FLOAT, reduction_year INT, province VARCHAR(255));", "output": "SELECT reduction_year, SUM(co2_reduction) as annual_reduction FROM co2_emissions_reduction WHERE province = 'Ontario' GROUP BY reduction_year;"}
{"input": " 2020\ub144 \uc77c\ubcf8\uc5d0\uc11c\ub294 \ud558\uc774\ube0c\ub9ac\ub4dc \uc790\ub3d9\ucc28\uac00 \uba87 \ub300\ub098 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SalesData (Id INT, Country VARCHAR(50), Year INT, VehicleType VARCHAR(50), QuantitySold INT); INSERT INTO SalesData (Id, Country, Year, VehicleType, QuantitySold) VALUES (1, 'Japan', 2018, 'Hybrid', 250000), (2, 'Japan', 2020, 'Hybrid', 400000), (3, 'Japan', 2019, 'Hybrid', 300000), (4, 'Japan', 2021, 'Hybrid', 500000);", "output": "SELECT SUM(QuantitySold) FROM SalesData WHERE Country = 'Japan' AND VehicleType = 'Hybrid' AND Year = 2020;"}
{"input": " \uac01 \uc694\ub9ac \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uce7c\ub85c\ub9ac\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc694\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dishes (dish_id INT, dish_name VARCHAR(50), dish_type VARCHAR(20), cuisine VARCHAR(20), calorie_count INT); INSERT INTO dishes (dish_id, dish_name, dish_type, cuisine, calorie_count) VALUES (1, 'Lasagna', 'pasta', 'Italian', 800), (2, 'Pizza', 'pizza', 'Italian', 700), (3, 'Ramen', 'noodles', 'Japanese', 400);", "output": "SELECT dish_name, cuisine, calorie_count FROM (SELECT dish_name, cuisine, calorie_count, RANK() OVER (PARTITION BY cuisine ORDER BY calorie_count ASC) rnk FROM dishes) t WHERE rnk = 1;"}
{"input": " \uc800\uc18c\ub4dd\uce35\uacfc \uace0\uc18c\ub4dd\uce35 \uc9c0\uc5ed\uc5d0\ub294 \uc758\ub8cc \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uac00 \uba87 \uba85\uc774\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE healthcare_providers_income (income_area VARCHAR(20), provider_count INT); INSERT INTO healthcare_providers_income (income_area, provider_count) VALUES ('Low-income', 500), ('High-income', 200);", "output": "SELECT income_area, provider_count, NTILE(4) OVER (ORDER BY provider_count) AS tier FROM healthcare_providers_income;"}
{"input": "\ubd84\uae30\ubcc4\ub85c \ud604\uc7a5\ub2f9 \ud654\ud559 \ud3d0\uae30\ubb3c \uc0dd\uc0b0\ub7c9\uc758 \ubcc0\ud654\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE waste_production (site_name VARCHAR(50), quarter INT, year INT, waste_amount FLOAT); INSERT INTO waste_production (site_name, quarter, year, waste_amount) VALUES ('Site A', 1, 2021, 150.5), ('Site A', 2, 2021, 160.7), ('Site B', 1, 2021, 125.7), ('Site B', 2, 2021, 130.5), ('Site C', 1, 2021, 200.3), ('Site C', 2, 2021, 210.9), ('Site D', 1, 2021, 75.9), ('Site D', 2, 2021, 80.1);", "output": "SELECT site_name, ((waste_amount - LAG(waste_amount) OVER (PARTITION BY site_name ORDER BY year, quarter))/ABS(LAG(waste_amount) OVER (PARTITION BY site_name ORDER BY year, quarter))) * 100 as pct_change FROM waste_production;"}
{"input": " \ubcf4\uc2a4\ud134 \uc81c\uc870 \ud604\uc7a5\uc758 \uc0ac\uc77c\ub85c\uc640 \ud0f1\ud06c\uc5d0 \uc800\uc7a5\ub41c \ud654\ud559\ubb3c\uc9c8\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE silos (site VARCHAR(20), chemical VARCHAR(20), quantity INT); INSERT INTO silos (site, chemical, quantity) VALUES ('Boston', 'Hydrochloric Acid', 500), ('Boston', 'Sulfuric Acid', 800); CREATE TABLE tanks (site VARCHAR(20), chemical VARCHAR(20), quantity INT); INSERT INTO tanks (site, chemical, quantity) VALUES ('Boston', 'Nitric Acid', 1200), ('Boston', 'Acetic Acid', 700);", "output": "(SELECT SUM(quantity) FROM silos WHERE site = 'Boston') UNION (SELECT SUM(quantity) FROM tanks WHERE site = 'Boston');"}
{"input": " \ub9e4\ub144 \uada4\ub3c4\uc5d0 \ucd94\uac00\ub418\ub294 \uc6b0\uc8fc \uc4f0\ub808\uae30\uc758 \ucd1d \uc9c8\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE space_debris_by_year (debris_id INT, debris_type VARCHAR(50), mass FLOAT, debris_year INT); INSERT INTO space_debris_by_year (debris_id, debris_type, mass, debris_year) VALUES (1, 'Fuel Tanks', 350.0, 2019); INSERT INTO space_debris_by_year (debris_id, debris_type, mass, debris_year) VALUES (2, 'Instruments', 75.2, 2020); INSERT INTO space_debris_by_year (debris_id, debris_type, mass, debris_year) VALUES (3, 'Payload Adapters', 120.5, 2021);", "output": "SELECT debris_year, SUM(mass) as total_mass_kg FROM space_debris_by_year GROUP BY debris_year;"}
{"input": " \ub450 \uac1c \uc774\uc0c1\uc758 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc790\uc6d0\ubd09\uc0ac\uc790\ub85c \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \uc131\uc758 \uc54c\ud30c\ubcb3 \uc21c\uc11c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, program TEXT); INSERT INTO volunteers VALUES (1, 'John Doe', 'Feeding Program'), (2, 'Jane Smith', 'Education Program'), (3, 'Alice Johnson', 'Feeding Program'), (4, 'Bob Jones', 'Education Program'), (5, 'Charlie Brown', 'Feeding Program'), (6, 'David Williams', 'Education Program'), (7, 'Eve White', 'Feeding Program'), (8, 'Frank Wright', 'Feeding Program'), (9, 'Grace Black', 'Education Program');", "output": "SELECT volunteer_id, volunteer_name, program FROM (SELECT volunteer_id, volunteer_name, program, COUNT(program) OVER (PARTITION BY volunteer_id) as volunteer_program_count FROM volunteers) as volunteer_programs WHERE volunteer_program_count > 1 ORDER BY volunteer_name;"}
{"input": " 2023\ub144\uacfc 2024\ub144 \ub3d9\uc548 \ub308\ub7ec\uc2a4, \uc2dc\uc560\ud2c0, \ub274\uc695 \uc2dc\uc758 \uacf5\uacf5\uc0ac\uc5c5\uc5d0 \ud560\ub2f9\ub41c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_budgets (city varchar(50), year int, service varchar(50), budget int); INSERT INTO city_budgets (city, year, service, budget) VALUES ('Dallas', 2023, 'Public Works', 10000000), ('Dallas', 2024, 'Public Works', 11000000), ('Seattle', 2023, 'Public Works', 12000000), ('Seattle', 2024, 'Public Works', 13000000), ('New York', 2023, 'Public Works', 14000000), ('New York', 2024, 'Public Works', 15000000);", "output": "SELECT AVG(budget) FROM city_budgets WHERE (city = 'Dallas' OR city = 'Seattle' OR city = 'New York') AND service = 'Public Works' AND (year = 2023 OR year = 2024);"}
{"input": " '\ub9ac\uc6b0\ub370\uc790\ub124\uc774\ub8e8'\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4\ub97c \uc81c\uacf5\ud558\ub294 \ud638\ud154\uc740 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE virtual_tours (hotel_id INT, location TEXT, has_virtual_tour BOOLEAN); INSERT INTO virtual_tours (hotel_id, location, has_virtual_tour) VALUES (1, 'Rio de Janeiro', true), (2, 'Rio de Janeiro', false), (3, 'Sao Paulo', true);", "output": "SELECT COUNT(*) FROM virtual_tours WHERE location = 'Rio de Janeiro' AND has_virtual_tour = true;"}
{"input": " 2020\ub144 \uad6d\uac00\ubcc4 1\uc778\ub2f9 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc744 \ucc3e\uc544 \uc21c\uc704\ub97c \ub9e4\uaca8\ubcf4\uc138\uc694.", "context": "CREATE TABLE EmissionsData (Country VARCHAR(50), Year INT, CO2Emission DECIMAL(5,2), Population INT); INSERT INTO EmissionsData (Country, Year, CO2Emission, Population) VALUES ('China', 2020, 10.3, 1411000000), ('China', 2019, 9.6, 1409000000), ('India', 2020, 2.1, 1366000000), ('India', 2019, 1.9, 1352000000);", "output": "SELECT Country, AVG(CO2Emission/Population) as AvgCO2PerCapita, RANK() OVER (ORDER BY AVG(CO2Emission/Population) DESC) as Rank FROM EmissionsData WHERE Year = 2020 GROUP BY Country HAVING COUNT(*) > 1 ORDER BY Rank;"}
{"input": " \ud53c\ud574\uc790\uac00 \ud68c\ubcf5\uc801 \uc0ac\ubc95\uc5d0 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uae30\ub85c \uc120\ud0dd\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cases (id INT, case_name VARCHAR(255), restorative_justice BOOLEAN, victim_participation BOOLEAN); INSERT INTO cases (id, case_name, restorative_justice, victim_participation) VALUES (1, 'Case 1', TRUE, TRUE), (2, 'Case 2', TRUE, FALSE), (3, 'Case 3', FALSE, TRUE), (4, 'Case 4', TRUE, TRUE), (5, 'Case 5', TRUE, FALSE);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cases WHERE restorative_justice = TRUE)) as percentage FROM cases WHERE victim_participation = FALSE AND restorative_justice = TRUE;"}
{"input": " \ub3d9\ubb3c \uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \uc81c\ud488 \uc911 \ucc9c\uc5f0 \uc131\ubd84\uc774 \ud568\uc720\ub41c \uc81c\ud488\uc758 \ube44\uc728\uc740 \uba87 \ud37c\uc13c\ud2b8\uc778\uac00\uc694?", "context": "CREATE TABLE products_ext(id INT, name TEXT, cruelty_free BOOLEAN, natural_ingredients BOOLEAN); INSERT INTO products_ext(id, name, cruelty_free, natural_ingredients) VALUES (1, 'Cleanser X', true, true), (2, 'Lotion Y', false, true), (3, 'Shampoo Z', true, false), (4, 'Conditioner W', false, true);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM products_ext WHERE cruelty_free = true)) AS percentage FROM products_ext WHERE cruelty_free = true AND natural_ingredients = true;"}
{"input": " \ud2b9\uc815 \ud22c\uc790 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud55c \ud22c\uc790\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Investments (InvestmentID INT, InvestorID INT, StrategyID INT); INSERT INTO Investments (InvestmentID, InvestorID, StrategyID) VALUES (1, 1, 1), (2, 1, 1), (3, 2, 2), (4, 2, 2), (5, 3, 3), (6, 3, 3), (7, 4, 4), (8, 4, 4), (9, 1, 1), (10, 2, 2); CREATE TABLE Investors (InvestorID INT, Name VARCHAR(20)); INSERT INTO Investors (InvestorID, Name) VALUES (1, 'Jane Smith'), (2, 'John Doe'), (3, 'Jim Brown'), (4, 'Jamie Lee'); CREATE TABLE InvestmentStrategies (StrategyID INT, StrategyName VARCHAR(20)); INSERT INTO InvestmentStrategies (StrategyID, StrategyName) VALUES (1, 'Impact Investing'), (2, 'Green Energy'), (3, 'Social Entrepreneurship'), (4, 'Microfinance');", "output": "SELECT Investors.Name FROM Investors JOIN Investments ON Investors.InvestorID = Investments.InvestorID JOIN InvestmentStrategies ON Investments.StrategyID = InvestmentStrategies.StrategyID WHERE InvestmentStrategies.StrategyName = 'Impact Investing';"}
{"input": "\uc9c0\ub09c 3\ub144\uac04 \ub0a8\ubbf8\uc758 \uad6d\uac00\ubcc4 \ube44\uc7ac\uc0dd \uc5d0\ub108\uc9c0 \uc18c\ube44 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SA_Energy_Consumption (country VARCHAR(255), year INT, consumption INT); INSERT INTO SA_Energy_Consumption (country, year, consumption) VALUES ('Brazil', 2020, 70), ('Argentina', 2020, 80), ('Colombia', 2020, 75), ('Brazil', 2021, 72), ('Argentina', 2021, 82), ('Colombia', 2021, 78);", "output": "SELECT country, (SUM(consumption) FILTER (WHERE year BETWEEN 2020 AND 2022) OVER (PARTITION BY country)::DECIMAL / SUM(consumption) OVER (PARTITION BY country)) * 100 AS pct_non_renewable FROM SA_Energy_Consumption;"}
{"input": " \uc5b4\ub5a4 \ud559\uc0dd\ub4e4\uc774 \uc628\ub77c\uc778 \uac15\uc88c\uc5d0 \ub4f1\ub85d\ud588\ub098\uc694?", "context": "CREATE TABLE students (id INT, name VARCHAR(255)); CREATE TABLE courses (id INT, name VARCHAR(255), is_online BOOLEAN); CREATE TABLE enrollments (id INT, student_id INT, course_id INT); INSERT INTO students (id, name) VALUES (1, 'Student A'), (2, 'Student B'), (3, 'Student C'); INSERT INTO courses (id, name, is_online) VALUES (1, 'Open Pedagogy 101', TRUE), (2, 'Math', FALSE), (3, 'Science', FALSE); INSERT INTO enrollments (id, student_id, course_id) VALUES (1, 1, 1), (2, 2, 1), (3, 3, 1), (4, 1, 2), (5, 2, 3);", "output": "SELECT s.name AS student_name FROM students s JOIN enrollments e ON s.id = e.student_id JOIN courses c ON e.course_id = c.id WHERE c.is_online = TRUE;"}
{"input": " \uac01 \ubd80\uc11c\ubcc4 \ucd5c\uace0 \uc5f0\ubd09\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'Jane', 'Smith', 'Marketing', 60000.00), (2, 'Bruce', 'Johnson', 'IT', 75000.00), (3, 'Alice', 'Williams', 'Marketing', 65000.00), (4, 'Charlie', 'Brown', 'HR', 70000.00), (5, 'David', 'Davis', 'IT', 80000.00);", "output": "SELECT Department, MAX(Salary) FROM Employees GROUP BY Department;"}
{"input": " \uc9c0\ub09c\ud574 '\uc800\uc18c\ub4dd\uce35' \ub3d9\ub124\uc5d0\uc11c \uc5f4\ub9b0 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud589\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CommunityPolicing (id INT, neighborhood VARCHAR(20), event_date DATE);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM CommunityPolicing WHERE event_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) as percentage FROM CommunityPolicing WHERE neighborhood IN ('low-income1', 'low-income2', 'low-income3') AND event_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"}
{"input": " \uac01 \ubd80\uc11c\uc5d0\uc11c \uc5ec\uc131 \ub610\ub294 \ub0a8\uc131\uc73c\ub85c \uc778\uc2dd\ub418\ub294 \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE department (dept_id INT, dept_name VARCHAR(50), worker_id INT); INSERT INTO department (dept_id, dept_name, worker_id) VALUES (1, 'Mining', 1), (1, 'Mining', 3), (2, 'Engineering', 2); CREATE TABLE worker_demographics (worker_id INT, worker_gender VARCHAR(10)); INSERT INTO worker_demographics (worker_id, worker_gender) VALUES (1, 'Female'), (2, 'Male'), (3, 'Female'), (4, 'Non-binary');", "output": "SELECT dept_name, worker_gender, COUNT(*) as count, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE w.worker_gender IN ('Female', 'Male')) as percentage FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE worker_gender IN ('Female', 'Male') GROUP BY dept_name, worker_gender;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \ud2b8\uc717\uc744 \uac8c\uc2dc\ud55c \uc778\uad6c\uac00 1\uc5b5 \uba85\uc774 \ub118\ub294 \uad6d\uac00\uc5d0 \uac70\uc8fc\ud558\ub294 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tweets (tweet_id INT, user_id INT, tweet_date DATE);CREATE TABLE users (user_id INT, country VARCHAR(50), registration_date DATE);CREATE TABLE country_populations (country VARCHAR(50), population INT);", "output": "SELECT COUNT(DISTINCT t.user_id) as num_users FROM tweets t JOIN users u ON t.user_id = u.user_id JOIN country_populations cp ON u.country = cp.country WHERE t.tweet_date >= DATE(NOW()) - INTERVAL 1 MONTH AND cp.population > 100000000;"}
{"input": " \uc774\uc9d1\ud2b8\uc758 \ud558\ub8e8 \ucd5c\ub300 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_water_consumption (country VARCHAR(20), max_consumption FLOAT); INSERT INTO daily_water_consumption (country, max_consumption) VALUES ('Egypt', 1200000);", "output": "SELECT max_consumption FROM daily_water_consumption WHERE country = 'Egypt';"}
{"input": " \uac01 \ubd81\uadf9 \uad6d\uac00\uc5d0\ub294 \uba87 \uc885\uc758 \ud3ec\uc720\ub958\uac00 \ubc1c\uacac\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Country (ID INT, Name TEXT, Region TEXT); INSERT INTO Country (ID, Name, Region) VALUES (1, 'Canada', 'Arctic'); INSERT INTO Country (ID, Name, Region) VALUES (2, 'Russia', 'Arctic'); CREATE TABLE Species (ID INT, Name TEXT, Classification TEXT); INSERT INTO Species (ID, Name, Classification) VALUES (1, 'Polar Bear', 'Mammal'); INSERT INTO Species (ID, Name, Classification) VALUES (2, 'Arctic Fox', 'Mammal'); CREATE TABLE CountrySpecies (CountryID INT, SpeciesID INT); INSERT INTO CountrySpecies (CountryID, SpeciesID) VALUES (1, 1); INSERT INTO CountrySpecies (CountryID, SpeciesID) VALUES (1, 2);", "output": "SELECT Country.Name, COUNT(DISTINCT Species.ID) as Number_of_Mammal_Species FROM CountrySpecies JOIN Country ON CountrySpecies.CountryID = Country.ID JOIN Species ON CountrySpecies.SpeciesID = Species.ID WHERE Country.Region = 'Arctic' GROUP BY Country.Name;"}
{"input": "2023\ub144 \uc0c1\ubc18\uae30\uc5d0 \ub3d9\uc810\uc744 \ud3ec\ud568\ud558\uc5ec \uac00\uc7a5 \ub9ce\uc740 \uc57d\ubb3c \uc2b9\uc778\uc744 \ubc1b\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE drug_approvals (approval_country VARCHAR(255), drug_name VARCHAR(255)); INSERT INTO drug_approvals (approval_country, drug_name) VALUES ('Country X', 'Drug 1'), ('Country Y', 'Drug 2'), ('Country X', 'Drug 3'), ('Country Z', 'Drug 4'), ('Country Y', 'Drug 5');", "output": "SELECT approval_country, DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) as rank FROM drug_approvals WHERE drug_name IN (SELECT drug_name FROM drug_approvals WHERE sale_date BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY drug_name) GROUP BY approval_country HAVING COUNT(*) > 1;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 '\uc911\ub3d9' \uc9c0\uc5ed\uc5d0\uc11c \ubcf4\uace0\ub41c \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0\uc758 \ucd5c\ub300 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cybersecurity_incidents (region TEXT, incident_date DATE); INSERT INTO cybersecurity_incidents (region, incident_date) VALUES ('Middle East', '2023-01-01'); INSERT INTO cybersecurity_incidents (region, incident_date) VALUES ('Africa', '2023-02-01');", "output": "SELECT COUNT(*) FROM cybersecurity_incidents WHERE region = 'Middle East' AND incident_date >= (CURRENT_DATE - INTERVAL '60 days') GROUP BY region HAVING COUNT(*) >= ALL (SELECT COUNT(*) FROM cybersecurity_incidents WHERE region = 'Middle East' AND incident_date >= (CURRENT_DATE - INTERVAL '60 days') GROUP BY region);"}
{"input": " \uc9c0\uc5ed\uacfc \uac01 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uc810\uc218\ub97c \uac00\uc7a5 \ub192\uc740 \uac83\ubd80\ud130 \uac00\uc7a5 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Regions (Region VARCHAR(255), FeedbackScore INT); INSERT INTO Regions (Region, FeedbackScore) VALUES ('North', 80), ('South', 90), ('East', 85), ('West', 95);", "output": "SELECT Region, FeedbackScore, ROW_NUMBER() OVER (ORDER BY FeedbackScore DESC) AS Rank FROM Regions;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\ud1b5 \uc608\uc220\uacfc \uacf5\uc608\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Arts (ArtID INT, ArtName VARCHAR(50), Type VARCHAR(50), Location VARCHAR(50)); INSERT INTO Arts (ArtID, ArtName, Type, Location) VALUES (1, 'Batik', 'Textile', 'Nigeria'), (2, 'Tie-dye', 'Textile', 'Ghana');", "output": "SELECT COUNT(*) FROM Arts WHERE Location LIKE 'Africa%';"}
{"input": "2021\ub144 \ucf00\ub0d0 \ub18d\ucd0c \uc9c0\uc5ed\uc758 '\uad00\uac1c \uc2dc\uc2a4\ud15c \uac1c\uc120' \ud504\ub85c\uc81d\ud2b8 \uc608\uc0b0\uc744 300,000\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE RuralInfrastructure (id INT, country VARCHAR(50), project VARCHAR(50), budget FLOAT, year INT); INSERT INTO RuralInfrastructure (id, country, project, budget, year) VALUES (1, 'Rural Kenya', 'Irrigation System Improvement', 250000, 2021);", "output": "WITH cte AS (UPDATE RuralInfrastructure SET budget = 300000 WHERE country = 'Rural Kenya' AND project = 'Irrigation System Improvement' AND year = 2021) SELECT * FROM RuralInfrastructure WHERE country = 'Rural Kenya' AND project = 'Irrigation System Improvement' AND year = 2021;"}
{"input": " 2021\ub144 1\ubd84\uae30 \uccab \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE donations (id INT, donor_id INT, donation_date DATE, amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, donation_date, amount) VALUES (1, 1001, '2021-01-15', 50.00), (2, 1002, '2021-03-30', 100.00), (3, 1001, '2021-04-10', 75.00);", "output": "SELECT SUM(amount) FROM donations WHERE donor_id NOT IN (SELECT donor_id FROM donations WHERE donation_date < '2021-01-01') AND donation_date < '2021-04-01';"}
{"input": " \uac01 \ubd80\ub3d9\uc0b0 \uc720\ud615 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ubd80\ub3d9\uc0b0\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uce68\uc2e4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Property_Types (name VARCHAR(50), min_bedrooms INT, max_bedrooms INT); INSERT INTO Property_Types (name, min_bedrooms, max_bedrooms) VALUES ('Apartment', 1, 3), ('Townhouse', 3, 5), ('Single-Family Home', 3, 6);", "output": "SELECT name, MIN(min_bedrooms) AS min_bedrooms, MAX(max_bedrooms) AS max_bedrooms FROM Property_Types GROUP BY name;"}
{"input": " \uaddc\uc81c \uae30\uad00 \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uac01 \ud56d\uad6c\uc5d0 \ubd80\uacfc\ub41c \ucd1d \ubc8c\uae08 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE regulatory_fines (id INT, port_id INT, agency_id INT, fine_amount FLOAT, fine_date DATE); CREATE TABLE regulatory_agencies (agency_id INT, agency_name VARCHAR(50));", "output": "SELECT r.agency_name, DATE_FORMAT(rf.fine_date, '%Y') as year, SUM(rf.fine_amount) as total_fines FROM regulatory_fines rf JOIN ports p ON rf.port_id = p.port_id JOIN regulatory_agencies r ON rf.agency_id = r.agency_id GROUP BY r.agency_name, year;"}
{"input": " \ub098\ubb34 \uc885 \uc911\uc5d0\uc11c \uac00\uc7a5 \ub0ae\uc740 \ud0c4\uc18c \uaca9\ub9ac \uac12\uacfc \uac00\uc7a5 \ub192\uc740 \ud0c4\uc18c \uaca9\ub9ac \uac12\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE SCHEMA forestry; CREATE TABLE trees (id INT, species VARCHAR(50), carbon FLOAT); INSERT INTO trees (id, species, carbon) VALUES (1, 'oak', 4.2), (2, 'pine', 3.8), (3, 'eucalyptus', 5.0), (4, 'oak', 4.5), (5, 'maple', 3.5);", "output": "SELECT MIN(carbon), MAX(carbon) FROM forestry.trees;"}
{"input": " '\ud06c\ub9ac\uc2a4\ud1a0\ud37c \ub180\ub780' \uac10\ub3c5\uc758 \ubaa8\ub4e0 \uc601\ud654\ub97c \ucd1d \uc2dc\uccad\ud55c \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE directors (id INT, name VARCHAR(50)); INSERT INTO directors (id, name) VALUES (1, 'Christopher Nolan'); CREATE TABLE movies (id INT, title VARCHAR(50), director_id INT, watch_time INT); INSERT INTO movies (id, title, director_id, watch_time) VALUES (1, 'Inception', 1, 5000), (2, 'Interstellar', 1, 6000);", "output": "SELECT SUM(watch_time) FROM movies WHERE director_id = (SELECT id FROM directors WHERE name = 'Christopher Nolan');"}
{"input": " \uc18c\uc678\ub41c \uc9c0\uc5ed\uc0ac\ud68c\uc758 \uad50\uc0ac\ub4e4\uc774 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, teacher_name VARCHAR(50), community_id INT); INSERT INTO teachers (teacher_id, teacher_name, community_id) VALUES (1, 'Jane Smith', 1), (2, 'Ali Ahmed', 2), (3, 'Maria Garcia', 3), (4, 'Park Soo-jin', 4); CREATE TABLE communities (community_id INT, community_name VARCHAR(50)); INSERT INTO communities (community_id, community_name) VALUES (1, 'African American'), (2, 'South Asian'), (3, 'Latinx'), (4, 'Korean'); CREATE TABLE courses (course_id INT, course_name VARCHAR(50), teacher_id INT); INSERT INTO courses (course_id, course_name, teacher_id) VALUES (1, 'Teaching with Technology', 1), (2, 'Diversity in Education', 2), (3, 'Math Pedagogy', 3), (4, 'Science Pedagogy', 4);", "output": "SELECT communities.community_name, COUNT(DISTINCT courses.course_id) as course_count FROM teachers JOIN communities ON teachers.community_id = communities.community_id JOIN courses ON teachers.teacher_id = courses.teacher_id GROUP BY communities.community_name;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uae08\uc735 \uac70\ub798 \uac74\uc218\uc640 \uc790\uc6d0\ubd09\uc0ac \uad00\ub9ac \ud589\uc0ac \uac74\uc218\ub294 \ubaa8\ub450 \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE financial_transactions (id INT, amount DECIMAL(10,2)); INSERT INTO financial_transactions (id, amount) VALUES (1, 500.00), (2, 250.00); CREATE TABLE volunteer_events (id INT, attendees INT); INSERT INTO volunteer_events (id, attendees) VALUES (1, 30), (2, 50);", "output": "SELECT COUNT(*) FROM financial_transactions UNION ALL SELECT COUNT(*) FROM volunteer_events;"}
{"input": " \uc8fc\ubcc4 \ucd5c\uc2e0 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE HealthEquityMetrics (HEMId INT, Metric VARCHAR(255), State VARCHAR(50), MetricDate DATE); INSERT INTO HealthEquityMetrics (HEMId, Metric, State, MetricDate) VALUES (1, 'Health Equity Index', 'California', '2021-01-01'), (2, 'Equity Score', 'Texas', '2021-02-01'), (3, 'Health Equity Report', 'Florida', '2021-03-01');", "output": "SELECT State, Metric, MetricDate FROM HealthEquityMetrics WHERE MetricDate = (SELECT MAX(MetricDate) FROM HealthEquityMetrics) AND State = (SELECT State FROM HealthEquityMetrics WHERE MetricDate = (SELECT MAX(MetricDate) FROM HealthEquityMetrics));"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uad6d\uac00\ubcc4\ub85c \ubc1c\uc0ac\ub41c \uc704\uc131\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Satellites (id INT, name VARCHAR(100), manufacturer VARCHAR(100), launch_country VARCHAR(100), launch_date DATE); INSERT INTO Satellites (id, name, manufacturer, launch_country, launch_date) VALUES (1, 'Sat1', 'SpaceTech', 'USA', '2020-01-01'); INSERT INTO Satellites (id, name, manufacturer, launch_country, launch_date) VALUES (2, 'Sat2', 'SpaceTech', 'USA', '2019-12-15'); INSERT INTO Satellites (id, name, manufacturer, launch_country, launch_date) VALUES (3, 'Sat3', 'EuroSpace', 'France', '2018-06-06');", "output": "SELECT launch_country, COUNT(*) OVER (PARTITION BY launch_country) as count FROM Satellites WHERE EXTRACT(YEAR FROM launch_date) BETWEEN 2018 AND 2020;"}
{"input": "SpaceX \uc704\uc131 \ubc30\uce58 \ud504\ub85c\uc81d\ud2b8\uc640 NASA \uc6b0\uc8fc \ud0d0\uc0ac \uc5f0\uad6c \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4dc\ub294 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceX_Projects (project_id INT, name VARCHAR(50), type VARCHAR(50), expenses DECIMAL(10,2));CREATE TABLE NASA_Research (research_id INT, name VARCHAR(50), type VARCHAR(50), expenses DECIMAL(10,2)); INSERT INTO SpaceX_Projects (project_id, name, type, expenses) VALUES (1, 'Starlink', 'Satellite Deployment', 3000000.00), (2, 'Starship', 'Space Exploration', 5000000.00); INSERT INTO NASA_Research (research_id, name, type, expenses) VALUES (1, 'Mars Rover', 'Space Exploration', 2000000.00), (2, 'ISS Upgrades', 'Space Station', 1500000.00);", "output": "SELECT SUM(expenses) FROM SpaceX_Projects WHERE type IN ('Satellite Deployment', 'Space Exploration') UNION ALL SELECT SUM(expenses) FROM NASA_Research WHERE type IN ('Space Exploration', 'Space Station');"}
{"input": " \ubd81\ubbf8 \ucd9c\uc2e0 \uc0ac\ub78c\uc774 \uc124\ub9bd\ud55c \ud5ec\uc2a4\ucf00\uc5b4 \ubd84\uc57c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ucd5c\uc18c \uc790\uae08\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founder_region TEXT, funding_received FLOAT); INSERT INTO companies (id, name, industry, founder_region, funding_received) VALUES (1, 'HealthcareNA', 'Healthcare', 'NorthAmerica', 500000); INSERT INTO companies (id, name, industry, founder_region, funding_received) VALUES (2, 'GreenTechMale', 'GreenTech', 'Europe', 600000);", "output": "SELECT MIN(funding_received) FROM companies WHERE industry = 'Healthcare' AND founder_region = 'NorthAmerica';"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc74c\uc2dd\uc810\uc758 \ud3c9\uade0 \uc2dd\ud488\uc548\uc804 \uc810\uc218\ub294 \uba87 \uc810\uc778\uac00\uc694?", "context": "CREATE TABLE inspections (id INT, restaurant_id INT, region VARCHAR(50), safety_score INT); CREATE VIEW region_safety AS SELECT restaurant_id, AVG(safety_score) as avg_safety FROM inspections GROUP BY restaurant_id;", "output": "SELECT r.region, AVG(i.safety_score) as avg_safety FROM inspections i JOIN region_safety rs ON i.restaurant_id = rs.restaurant_id JOIN restaurants r ON i.restaurant_id = r.id GROUP BY r.region;"}
{"input": " 2015\ub144\ubd80\ud130 2017\ub144\uae4c\uc9c0 '\uc720\ub7fd' \uad6d\uac00\uc758 '\ubc00' \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crops (id INT, name TEXT, production INT, year INT, country TEXT); INSERT INTO crops (id, name, production, year, country) VALUES (1, 'Wheat', 1000, 2015, 'France'); INSERT INTO crops (id, name, production, year, country) VALUES (2, 'Wheat', 1200, 2016, 'Germany'); INSERT INTO crops (id, name, production, year, country) VALUES (3, 'Wheat', 1500, 2017, 'Italy');", "output": "SELECT AVG(production) as avg_production, country FROM crops WHERE name = 'Wheat' AND year BETWEEN 2015 AND 2017 AND country IN ('France', 'Germany', 'Italy') GROUP BY country;"}
{"input": " \uc9c0\ub09c\ub2ec \ud2b9\uc815 \uc9c0\uc5ed\uc758 \uc694\ub9ac \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \uc218\uc775\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE inventory (item_id INT, quantity INT, unit_price DECIMAL(5,2)); INSERT INTO inventory (item_id, quantity, unit_price) VALUES (1, 10, 12.99), (2, 20, 7.50), (3, 30, 9.99), (4, 40, 15.49), (5, 50, 8.99); CREATE TABLE orders (order_id INT, item_id INT, order_date DATE, restaurant_id INT); INSERT INTO orders (order_id, item_id, order_date, restaurant_id) VALUES (1, 1, '2022-03-01', 2), (2, 3, '2022-03-02', 2), (3, 2, '2022-03-03', 1), (4, 4, '2022-03-04', 1), (5, 5, '2022-03-05', 2); CREATE TABLE menu_items (item_id INT, name TEXT, is_vegan BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu_items (item_id, name, is_vegan, price) VALUES (1, 'Quinoa Salad', true, 12.99), (2, 'Beef Burger', false, 7.50), (3, 'Chickpea Curry', true, 9.99), (4, 'Cheesecake', false, 15.49), (5, 'Veggie Pizza', true, 8.99); CREATE TABLE restaurants (restaurant_id INT, name TEXT, region TEXT); INSERT INTO restaurants (restaurant_id, name, region) VALUES (1, 'Big Burger', 'East'), (2, 'Veggies R Us', 'Midwest'), (3, 'Tasty Bites', 'West');", "output": "SELECT SUM(i.quantity * m.price) as revenue FROM inventory i JOIN orders o ON i.item_id = o.item_id JOIN menu_items m ON i.item_id = m.item_id JOIN restaurants r ON o.restaurant_id = r.restaurant_id WHERE o.order_date BETWEEN '2022-02-01' AND '2022-02-28' AND r.region = 'Midwest';"}
{"input": " '\uc57c\uc218\ud30c'\uc640 '\ud050\ube44\uc998' \uc6b4\ub3d9 \ubaa8\ub450\uc5d0\uc11c \uc608\uc220 \uc791\ud488\uc744 \ucc3d\uc791\ud55c \uc608\uc220\uac00\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Artworks (id INT, artist_name VARCHAR(50), movement VARCHAR(20));", "output": "SELECT artist_name FROM Artworks WHERE artist_name IN (SELECT artist_name FROM Artworks WHERE movement = 'Fauvism') AND movement = 'Cubism';"}
{"input": " '2022-01-16'\ubd80\ud130 '2022-01-31' \uc0ac\uc774\uc5d0 \ud310\ub9e4 \ubc0f \ubc18\ud488\ub41c '\uc6b8 \uc2a4\uc6e8\ud130'\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, product VARCHAR(50), quantity INT, price DECIMAL(5,2), date DATE); INSERT INTO sales (id, product, quantity, price, date) VALUES (1, 'Wool Sweaters', 75, 60.00, '2022-01-18'), (2, 'Wool Sweaters', 30, 60.00, '2022-01-25'); CREATE TABLE returns (id INT, product VARCHAR(50), quantity INT, reason VARCHAR(50), date DATE); INSERT INTO returns (id, product, quantity, reason, date) VALUES (1, 'Wool Sweaters', 10, 'Size too large', '2022-01-20'), (2, 'Wool Sweaters', 5, 'Did not like color', '2022-01-30');", "output": "SELECT SUM(s.quantity) FROM sales s WHERE s.product = 'Wool Sweaters' AND s.date BETWEEN '2022-01-16' AND '2022-01-31' UNION SELECT SUM(r.quantity) FROM returns r WHERE r.product = 'Wool Sweaters' AND r.date BETWEEN '2022-01-16' AND '2022-01-31';"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc0ac\uc6a9\uc790\uc758 \ucd5c\ub300 \uce7c\ub85c\ub9ac \uc18c\ubaa8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE calories (id INT, user_id INT, calories INT, workout_date DATE); INSERT INTO calories (id, user_id, calories, workout_date) VALUES (1, 1, 500, '2022-01-01'), (2, 2, 600, '2022-01-15');", "output": "SELECT user_id, MAX(calories) FROM calories WHERE workout_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) AND CURRENT_DATE() GROUP BY user_id;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc5d0\uc11c \uc9c4\ub8cc\uc18c \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uace0 \uac01 \ub3c4\uc2dc\uc758 \ucd1d \uc218\uc775\uc744 \uc81c\uacf5\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Dispensaries (id INT, name TEXT, city TEXT, state TEXT, revenue DECIMAL(10,2)); INSERT INTO Dispensaries (id, name, city, state, revenue) VALUES (1, 'Dispensary A', 'Denver', 'Colorado', 25000); INSERT INTO Dispensaries (id, name, city, state, revenue) VALUES (2, 'Dispensary B', 'Boulder', 'Colorado', 18000); INSERT INTO Dispensaries (id, name, city, state, revenue) VALUES (3, 'Dispensary C', 'Denver', 'Colorado', 22000); INSERT INTO Dispensaries (id, name, city, state, revenue) VALUES (4, 'Dispensary D', 'Colorado Springs', 'Colorado', 15000);", "output": "SELECT d.city, SUM(d.revenue) as total_revenue, ROW_NUMBER() OVER (ORDER BY SUM(d.revenue) DESC) as rank FROM Dispensaries d WHERE d.state = 'Colorado' GROUP BY d.city HAVING COUNT(d.city) > 1 ORDER BY rank LIMIT 5;"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc\uc758 \uc804\uc2dc\ud68c\uc5d0 \ub300\ud55c \ucd1d \ubc29\ubb38\uc790 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE visitors (visitor_id INT PRIMARY KEY, exhibition_id INT, city VARCHAR(255));", "output": "SELECT city, SUM(visitor_count) as total_visitors FROM (SELECT exhibition_id, COUNT(visitor_id) as visitor_count FROM visitors GROUP BY exhibition_id) exhibition_visitor_count INNER JOIN exhibitions ON exhibition_visitor_count.exhibition_id = exhibitions.exhibition_id GROUP BY city;"}
{"input": "\uacbd\ub825 5\ub144 \ubbf8\ub9cc\uc758 \ucc44\uc6a9 \ub2f4\ub2f9\uc790\ub97c \uc81c\uc678\ud558\uace0 \ucd94\ucc9c\ud55c \ud6c4\ubcf4\uc790 \uc218 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \ucc44\uc6a9 \ub2f4\ub2f9\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Recruiters (RecruiterID INT, RecruiterName VARCHAR(20), YearsOfExperience INT, CandidateID INT); INSERT INTO Recruiters (RecruiterID, RecruiterName, YearsOfExperience, CandidateID) VALUES (1, 'Anna Green', 7, 10), (2, 'Bella Johnson', 3, 11), (3, 'Carl Davis', 6, 12);", "output": "SELECT RecruiterName FROM (SELECT RecruiterName, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS Rank FROM Recruiters r JOIN Candidates c ON r.CandidateID = c.CandidateID WHERE YearsOfExperience >= 5 GROUP BY RecruiterName) AS Subquery WHERE Rank <= 3;"}
{"input": "\uc9c0\ub09c \ub2ec \ubcf4\uc548 \uc0ac\uace0\uac00 \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, incident_date DATE, country VARCHAR(50)); INSERT INTO security_incidents (id, incident_date, country) VALUES (1, '2022-01-01', 'USA'), (2, '2022-01-05', 'Canada'), (3, '2022-01-10', 'Mexico');", "output": "SELECT country, COUNT(*) as incident_count FROM security_incidents WHERE incident_date >= DATEADD(day, -30, GETDATE()) GROUP BY country ORDER BY incident_count DESC LIMIT 3;"}
{"input": " '\uc720\ub7fd'\uacfc '\ubbf8\uc8fc'\uc758 AI \ub3c4\uc785\ub960\uc740?", "context": "CREATE TABLE hotel_ai (hotel_id INT, hotel_name TEXT, region TEXT, ai_adoption BOOLEAN); INSERT INTO hotel_ai (hotel_id, hotel_name, region, ai_adoption) VALUES (1, 'Royal Castle', 'Europe', true), (2, 'Paris Luxury Hotel', 'Europe', true), (3, 'New York Palace', 'Americas', true), (4, 'Buenos Aires Hotel', 'Americas', false);", "output": "SELECT region, AVG(ai_adoption) FROM hotel_ai GROUP BY region HAVING region IN ('Europe', 'Americas');"}
{"input": " \uc9c0\ub09c 90\uc77c \ub3d9\uc548 \ub274\uc9c8\ub79c\ub4dc\ub85c \ubc30\uc1a1\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipment (shipment_id INT, container_id INT, port_id INT, shipping_date DATE); CREATE TABLE Container (container_id INT, weight FLOAT); CREATE TABLE Port (port_id INT, port_name TEXT, country TEXT); INSERT INTO Port (port_id, port_name, country) VALUES (1, 'Port of Auckland', 'New Zealand');", "output": "SELECT SUM(c.weight) as total_weight FROM Container c JOIN Shipment s ON c.container_id = s.container_id JOIN Port p ON s.port_id = p.port_id WHERE p.country = 'New Zealand' AND s.shipping_date >= NOW() - INTERVAL '90 days';"}
{"input": " '\ub3c4\ucfc4'\uc5d0\uc11c \ub2e8\uc77c \ud06c\ub808\uc778\uc774 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ucd5c\ub300 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (port_id INT, name TEXT);CREATE TABLE crane (crane_id INT, port_id INT, name TEXT);CREATE TABLE container (container_id INT, crane_id INT, weight INT);INSERT INTO port VALUES (3, 'Tokyo');", "output": "SELECT crane.name, MAX(container.weight) FROM crane JOIN port ON crane.port_id = port.port_id JOIN container ON crane.crane_id = container.crane_id WHERE port.name = 'Tokyo' GROUP BY crane.name;"}
{"input": " 'CityB'\uc758 \uc5f0\uc18d \ubd84\uae30\ubcc4 \uc7ac\ud65c\uc6a9\ub960 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE CityB (Quarter INT, RecyclingRate DECIMAL(5,2)); INSERT INTO CityB (Quarter, RecyclingRate) VALUES (1, 0.25), (2, 0.3), (3, 0.35), (4, 0.4);", "output": "SELECT LAG(RecyclingRate, 1) OVER (ORDER BY Quarter) as prev_rate, RecyclingRate, (RecyclingRate - LAG(RecyclingRate, 1) OVER (ORDER BY Quarter)) as change_rate FROM CityB;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ub274\uc695\uc2dc \ud3d0\uae30\ubb3c \uad00\ub9ac \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (Year INT, Service TEXT, City TEXT, Budget FLOAT); INSERT INTO Budget (Year, Service, City, Budget) VALUES (2018, 'Waste Management', 'New York City', 20000000), (2019, 'Waste Management', 'New York City', 21000000), (2020, 'Waste Management', 'New York City', 22000000), (2021, 'Waste Management', 'New York City', 23000000), (2022, 'Waste Management', 'New York City', 24000000);", "output": "SELECT SUM(Budget) as TotalBudget, City FROM Budget WHERE Service = 'Waste Management' AND City = 'New York City' AND Year >= (SELECT MAX(Year) - 5 FROM Budget) GROUP BY City;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uac15\uc6b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region_rainfall (id INT, region VARCHAR(255), rainfall FLOAT, timestamp DATETIME);", "output": "SELECT region, AVG(rainfall) as avg_rainfall FROM region_rainfall WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) GROUP BY region;"}
{"input": " 2022\ub144 1\ubd84\uae30 \uc2e0\uc6a9\uce74\ub4dc \uc885\ub958\ubcc4 \ucd1d \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (transaction_id INT, client_id INT, transaction_date DATE, transaction_amount DECIMAL(10,2), credit_card_type VARCHAR(50)); INSERT INTO transactions VALUES (1, 1, '2022-01-01', 100.00, 'Visa'), (2, 2, '2022-01-15', 200.00, 'Mastercard'), (3, 3, '2022-02-01', 150.00, 'Visa'), (4, 4, '2022-02-15', 50.00, 'Mastercard'), (5, 5, '2022-03-01', 300.00, 'Visa'), (6, 6, '2022-03-15', 400.00, 'Mastercard');", "output": "SELECT credit_card_type, SUM(transaction_amount) FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY credit_card_type;"}
{"input": " \ud558\ub8e8\uc5d0 '\uc2dc\ub0b4'\uc5d0\uc11c \ud654\uc7ac\uac00 \ubc1c\uc0dd\ud55c \ucd5c\ub300 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fires (id INT, date DATE, location VARCHAR(20)); INSERT INTO fires (id, date, location) VALUES (1, '2022-01-01', 'downtown'), (2, '2022-01-02', 'downtown'), (3, '2022-01-03', 'uptown');", "output": "SELECT MAX(count) FROM (SELECT date, COUNT(*) AS count FROM fires WHERE location = 'downtown' GROUP BY date) AS subquery;"}
{"input": " \ubb34\uc791\uc704\ub85c \uc120\uc815\ub41c \uad50\uc0ac\uac00 \ucc38\uc11d\ud558\ub294 \uc804\ubb38\uc131 \uac1c\ubc1c \uc6cc\ud06c\uc20d\uc758 \uc9c4\ud589 \uc0c1\ud669\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE teacher_workshops (teacher_id INT, workshop_id INT, enrollment_date DATE); INSERT INTO teacher_workshops VALUES (1, 1001, '2021-01-01'), (1, 1002, '2021-02-01'); CREATE TABLE workshops (workshop_id INT, workshop_name VARCHAR(50)); INSERT INTO workshops VALUES (1001, 'Tech Tools'), (1002, 'Diverse Classrooms');", "output": "SELECT teacher_id, workshop_id, LEAD(enrollment_date, 1) OVER (PARTITION BY teacher_id ORDER BY enrollment_date) as next_workshop_date FROM teacher_workshops JOIN workshops ON teacher_workshops.workshop_id = workshops.workshop_id WHERE teacher_id = 1;"}
{"input": " \ubaac\ud0c0\ub098 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uc774\uc804 6\uac1c\uc6d4\uc5d0 \ube44\ud574 \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc758\ub8cc \ubc29\ubb38\uc774 \uac10\uc18c\ud55c \ud658\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE medical_visits (id INT, patient_id INT, visit_date DATE, rural_mt BOOLEAN); INSERT INTO medical_visits (id, patient_id, visit_date, rural_mt) VALUES (1, 1, '2019-06-01', true), (2, 1, '2019-07-01', true);", "output": "SELECT patient_id, COUNT(*) as last_6_months, LAG(COUNT(*)) OVER (PARTITION BY patient_id ORDER BY visit_date) as previous_6_months FROM medical_visits WHERE rural_mt = true GROUP BY patient_id, visit_date HAVING last_6_months < previous_6_months;"}
{"input": " \uc9c0\ub09c \ub2ec \uc544\ud504\ub9ac\uce74 \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id INT, player_name TEXT, country TEXT, score INT); INSERT INTO players (player_id, player_name, country, score) VALUES (1, 'John', 'Egypt', 85); INSERT INTO players (player_id, player_name, country, score) VALUES (2, 'Mia', 'South Africa', 90); INSERT INTO players (player_id, player_name, country, score) VALUES (3, 'Pablo', 'Mexico', 75); INSERT INTO players (player_id, player_name, country, score) VALUES (4, 'Sofia', 'Egypt', 80); INSERT INTO players (player_id, player_name, country, score) VALUES (5, 'Luis', 'South Africa', 95); INSERT INTO players (player_id, player_name, country, score) VALUES (6, 'Amina', 'Egypt', 70);", "output": "SELECT AVG(score) FROM players WHERE country IN ('Egypt', 'South Africa') AND score IS NOT NULL AND player_id IN (SELECT player_id FROM players WHERE player_id IN (SELECT player_id FROM players WHERE country IN ('Egypt', 'South Africa')) AND playtime_date >= DATEADD(month, -1, GETDATE()));"}
{"input": " \uc601\uad6d\uc5d0\uc11c \uc81c\uc791\ub418\ub294 \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, production_budget DECIMAL(10,2), country VARCHAR(100));", "output": "SELECT AVG(production_budget) FROM movies WHERE country = 'UK';"}
{"input": " 2021\ub144 \ud14d\uc0ac\uc2a4\uc640 \ub274\uc695\uc5d0\uc11c \uc99d\uc624\ubc94\uc8c4\ub85c \ubcf4\uace0\ub41c \ub3c5\ud2b9\ud55c \ubc94\uc8c4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE hate_crimes_tx (offense VARCHAR(50), year INT); INSERT INTO hate_crimes_tx VALUES ('Assault', 2021), ('Vandalism', 2021), ('Harassment', 2021); CREATE TABLE hate_crimes_ny (offense VARCHAR(50), year INT); INSERT INTO hate_crimes_ny VALUES ('Assault', 2021), ('Murder', 2021), ('Robbery', 2021);", "output": "SELECT DISTINCT offense FROM hate_crimes_tx WHERE year = 2021 UNION ALL SELECT DISTINCT offense FROM hate_crimes_ny WHERE year = 2021;"}
{"input": " \uc778\uc9c0\uc7a5\uc560 \uad00\ub828 \uc815\ucc45\uc758 \uc815\ucc45 \uc639\ud638\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policies (PolicyID INT, PolicyName VARCHAR(50), PolicyType VARCHAR(50)); INSERT INTO Policies VALUES (1, 'Assistive Technology', 'Academic'); CREATE TABLE PolicyAdvocates (AdvocateID INT, AdvocateName VARCHAR(50), PolicyID INT); INSERT INTO PolicyAdvocates VALUES (1, 'Jamie Rodriguez', 1); CREATE TABLE PolicyDetails (PolicyID INT, DisabilityType VARCHAR(50)); INSERT INTO PolicyDetails VALUES (1, 'Cognitive Disability');", "output": "SELECT pa.AdvocateName FROM Policies p INNER JOIN PolicyDetails pd ON p.PolicyID = pd.PolicyID INNER JOIN PolicyAdvocates pa ON p.PolicyID = pa.PolicyID WHERE pd.DisabilityType = 'Cognitive Disability';"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ub9c8\ub825\uc744 \uc9c0\ub2cc \uc0c1\uc704 2\uac1c\uc758 \uc804\uae30 \uc790\ub3d9\ucc28\ub97c \uac80\uc0c9\ud558\uc138\uc694.", "context": "CREATE TABLE ev_cars (car_id INT, car_name VARCHAR(255), horsepower INT, state VARCHAR(255));", "output": "SELECT car_name, horsepower, state FROM (SELECT car_name, horsepower, state, ROW_NUMBER() OVER (PARTITION BY state ORDER BY horsepower DESC) as rn FROM ev_cars) t WHERE rn = 1 OR rn = 2;"}
{"input": " 2019\ub144 \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE country_production_figures (country_code CHAR(2), production_date DATE, gas_production FLOAT);", "output": "SELECT country_code, gas_production FROM (SELECT country_code, gas_production, ROW_NUMBER() OVER (PARTITION BY country_code ORDER BY gas_production DESC) as ranking FROM country_production_figures WHERE production_date BETWEEN '2019-01-01' AND '2019-12-31') subquery WHERE ranking <= 3;"}
{"input": " \uce74\uc6b4\ud2f0\ub2f9 \ucf54\ub85c\ub09819 \uc0ac\ub840 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cases (county VARCHAR(100), cases INT);", "output": "SELECT county, SUM(cases) FROM cases GROUP BY county;"}
{"input": " 2010\ub144 \uc774\uc804 \ucd9c\uc2dc\ub41c \uce5c\ud658\uacbd \uc81c\ud488\uc758 \ud3c9\uade0 \uc120\ud638\ub3c4 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Products (id INT, ProductName VARCHAR(50), Category VARCHAR(50), Price DECIMAL(5,2), IsEcoFriendly BOOLEAN, LaunchDate DATE); CREATE TABLE CrueltyFreeCertification (id INT, ProductID INT, CertificationDate DATE);", "output": "SELECT AVG(CP.PreferenceScore) as AveragePreferenceScore FROM ConsumerPreference CP JOIN Products P ON CP.ProductID = P.id JOIN CrueltyFreeCertification CFC ON P.id = CFC.ProductID WHERE P.IsEcoFriendly = TRUE AND P.LaunchDate < '2010-01-01' AND CFC.CertificationDate IS NOT NULL;"}
{"input": " \ucd5c\uc18c 10\uc810 \uc774\uc0c1\uc758 \uc815\uc2e0 \uac74\uac15 \uc810\uc218 \ud5a5\uc0c1\uc744 \ub2ec\uc131\ud55c \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, name VARCHAR(20), assessment_id INT, mental_health_score INT); INSERT INTO students (student_id, name, assessment_id, mental_health_score) VALUES (1, 'James', 1, 75), (1, 'James', 2, 85), (2, 'Emily', 1, 80), (2, 'Emily', 2, 80), (3, 'Michael', 1, 70), (3, 'Michael', 2, 80), (4, 'Olivia', 1, 60), (4, 'Olivia', 2, 70);", "output": "SELECT COUNT(*) as students_with_improvement FROM (SELECT student_id, assessment_id, mental_health_score, LAG(mental_health_score) OVER (PARTITION BY student_id ORDER BY assessment_id) as previous_mental_health_score FROM students) as subquery WHERE mental_health_score - previous_mental_health_score >= 10;"}
{"input": " 2000\ub144 \uc774\ud6c4 \uc6d0\uc8fc\ubbfc\uc774 \uc124\ub9bd\ud55c \uae30\uc5c5\uc5d0 \ub300\ud55c \uace0\uc720 \uc0b0\uc5c5 \uc218\uc640 \ucd1d \uc790\uae08 \uc9c0\uc6d0 \ubaa9\ub85d\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE diversity (id INT, company_id INT, founder_race VARCHAR(255)); INSERT INTO diversity SELECT 1, 1, 'Indigenous'; INSERT INTO diversity SELECT 2, 2, 'Latinx'; INSERT INTO diversity SELECT 3, 3, 'Pacific Islander'; INSERT INTO companies (id, industry, founding_date) SELECT 2, 'Healthcare', '1999-01-01'; INSERT INTO companies (id, industry, founding_date) SELECT 3, 'Education', '2002-01-01'; INSERT INTO companies (id, industry, founding_date) SELECT 4, 'Finance', '2021-01-01'; INSERT INTO funding (company_id, amount) SELECT 2, 1500000; INSERT INTO funding (company_id, amount) SELECT 3, 1000000; INSERT INTO funding (company_id, amount) SELECT 4, 2000000;", "output": "SELECT diversity.founder_race, COUNT(DISTINCT companies.industry) AS unique_industries, SUM(funding.amount) AS total_funding FROM diversity JOIN companies ON diversity.company_id = companies.id JOIN funding ON companies.id = funding.company_id WHERE companies.founding_date > '2000-01-01' AND diversity.founder_race IN ('Indigenous', 'Latinx', 'Pacific Islander') GROUP BY diversity.founder_race;"}
{"input": " \ucd9c\ud1f4\uadfc \uc2dc\uac04\ub300\uc5d0 \ub3c4\ucfc4 \uc9c0\ud558\ucca0\uc774 \ub3c4\ucc29\ud558\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE subway_stations (station_id INT, station_name VARCHAR(50), city VARCHAR(50), time_between_arrivals TIME, rush_hour BOOLEAN); INSERT INTO subway_stations (station_id, station_name, city, time_between_arrivals, rush_hour) VALUES (1, 'Shinjuku', 'Tokyo', '3:00', true), (2, 'Shibuya', 'Tokyo', '4:00', true), (3, 'Ginza', 'Tokyo', '5:00', false);", "output": "SELECT AVG(TIME_TO_SEC(time_between_arrivals))/60.0 FROM subway_stations WHERE city = 'Tokyo' AND rush_hour = true;"}
{"input": " \uac01 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ucd1d \uc0dd\uc0b0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (id INT, product_id INT, material VARCHAR(50), production_cost DECIMAL(5,2));", "output": "SELECT material, SUM(production_cost) AS total_production_cost FROM production WHERE material IN ('organic_cotton', 'recycled_polyester', 'tencel', 'hemp', 'modal') GROUP BY material;"}
{"input": " \ub18d\ucd0c\uae30\ubc18\uc2dc\uc124\uc0ac\uc5c5\uba85 \ubc0f \uc9c0\ucd9c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc", "context": "CREATE TABLE rural_infrastructure_projects (id INT, name TEXT, expenditure DECIMAL(10,2)); INSERT INTO rural_infrastructure_projects (id, name, expenditure) VALUES (1, 'RoadA', 5000.00), (2, 'SchoolB', 6000.00), (3, 'HospitalC', 7000.00), (4, 'BridgeD', 8000.00), (5, 'ParkE', 9000.00);", "output": "SELECT name, expenditure FROM rural_infrastructure_projects ORDER BY expenditure DESC;"}
{"input": " \ud2b9\uc815 \ube44\ub8cc\ub97c \uc0ac\uc6a9\ud558\ub294 \ub18d\uc7a5\uc758 \uc804\uccb4 \uba74\uc801\uacfc \ud3c9\uade0 \uae30\uc628\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE farm (id INT, name VARCHAR(50), size FLOAT, fertilizer VARCHAR(50), PRIMARY KEY(id)); INSERT INTO farm (id, name, size, fertilizer) VALUES (1, 'Farm A', 50.3, 'Fertilizer X'); INSERT INTO farm (id, name, size, fertilizer) VALUES (2, 'Farm B', 75.8, 'Fertilizer Y'); CREATE TABLE sensor (id INT, farm_id INT, temperature FLOAT, PRIMARY KEY(id)); INSERT INTO sensor (id, farm_id, temperature) VALUES (1, 1, 23.5); INSERT INTO sensor (id, farm_id, temperature) VALUES (2, 1, 24.2); INSERT INTO sensor (id, farm_id, temperature) VALUES (3, 2, 20.8); CREATE TABLE fertilizer_application (id INT, farm_id INT, application_date DATE, PRIMARY KEY(id)); INSERT INTO fertilizer_application (id, farm_id, application_date) VALUES (1, 1, '2022-01-01'); INSERT INTO fertilizer_application (id, farm_id, application_date) VALUES (2, 2, '2022-02-01');", "output": "SELECT f.fertilizer, SUM(f.size) AS total_area, AVG(s.temperature) AS avg_temperature FROM farm f INNER JOIN sensor s ON f.id = s.farm_id INNER JOIN fertilizer_application a ON f.id = a.farm_id WHERE f.fertilizer = 'Fertilizer X' GROUP BY f.fertilizer;"}
{"input": " \uc720\ub7fd\uc758 \uc5b4\ub5a4 \ud504\ub85c\uc81d\ud2b8\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uae30\ud6c4 \uae08\uc735 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance_projects ( id INT, name VARCHAR(255), location VARCHAR(255), funding FLOAT ); INSERT INTO climate_finance_projects (id, name, location, funding) VALUES (1, 'Project P', 'Europe', 6000000); INSERT INTO climate_finance_projects (id, name, location, funding) VALUES (2, 'Project Q', 'Europe', 8000000);", "output": "SELECT name, location FROM climate_finance_projects WHERE funding > (SELECT MAX(funding) FROM climate_finance_projects WHERE location = 'Europe');"}
{"input": " '\ub0ae\uc740 \uc704\ud5d8' \uc778\uc218 \uadf8\ub8f9\uc5d0\uc11c \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE underwriting (id INT, group VARCHAR(10), name VARCHAR(20), claim_amount DECIMAL(10,2)); INSERT INTO underwriting (id, group, name, claim_amount) VALUES (1, 'High Risk', 'John Doe', 5000.00), (2, 'Medium Risk', 'Sophia Gonzalez', 6000.00), (3, 'Medium Risk', 'Javier Rodriguez', 7000.00), (4, 'Low Risk', 'Emma White', 8000.00);", "output": "SELECT name, claim_amount FROM (SELECT name, claim_amount, ROW_NUMBER() OVER (PARTITION BY group ORDER BY claim_amount DESC) rn FROM underwriting WHERE group = 'Low Risk') sub WHERE rn = 1;"}
{"input": " '\uc54c\uace0\ub79c\ub4dc' \ub124\ud2b8\uc6cc\ud06c\uc5d0\ub294 \uba87 \uac1c\uc758 \uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE algorand_regulations (id INT, name VARCHAR(255), network VARCHAR(255)); INSERT INTO algorand_regulations (id, name, network) VALUES (1, 'Reg1', 'algorand'), (2, 'Reg2', 'algorand');", "output": "SELECT COUNT(*) FROM algorand_regulations WHERE network = 'algorand';"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uc720\uae30\ub18d \uc18c\uc2a4\uc758 \ube44\uac74 \uc81c\ud488\uc5d0 \ub300\ud55c \ucd5c\ub300 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Product_Info (id INT, brand VARCHAR(255), product VARCHAR(255), rating INT, vegan BOOLEAN, organic BOOLEAN); INSERT INTO Product_Info (id, brand, product, rating, vegan, organic) VALUES (1, 'Dr. Bronner\u2019,s', 'Pure-Castile Liquid Soap - Baby Unscented', 5, true, true), (2, 'Weleda', 'Calendula Baby Cream', 4, true, true), (3, 'Estee Lauder', 'Advanced Night Repair Synchronized Recovery Complex II', 5, false, false), (4, 'Lush', 'Angels on Bare Skin Cleanser', 4, true, true), (5, 'The Body Shop', 'Tea Tree Skin Clearing Facial Wash', 3, false, true);", "output": "SELECT MAX(rating) as max_rating FROM Product_Info WHERE vegan = true AND organic = true;"}
{"input": " Weightlifting_records \ub370\uc774\ud130\uc138\ud2b8\uc5d0\uc11c \uac1c\uc778 \ucd5c\uace0 \uae30\ub85d\uc744 \uc138\uc6b4 \uc6b4\ub3d9\uc120\uc218\uc758 \uc774\ub984\uc744 \ucd5c\uace0 \uae30\ub85d \ub0a0\uc9dc\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE weightlifting_records (athlete VARCHAR(50), performance FLOAT, best_date DATE);", "output": "SELECT athlete FROM weightlifting_records WHERE performance = (SELECT MAX(performance) FROM weightlifting_records GROUP BY athlete) ORDER BY best_date DESC;"}
{"input": " 'Booking.com'\uc5d0\uc11c '\ub7f0\ub358' \ud638\ud154\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE otas (ota_id INT, ota_name TEXT); INSERT INTO otas (ota_id, ota_name) VALUES (1, 'Booking.com'), (2, 'Expedia'), (3, 'Agoda'); CREATE TABLE hotel_revenue (hotel_id INT, city TEXT, ota_id INT, revenue FLOAT); INSERT INTO hotel_revenue (hotel_id, city, ota_id, revenue) VALUES (1, 'London', 1, 5000), (2, 'London', 1, 6000), (3, 'Paris', 1, 7000);", "output": "SELECT SUM(revenue) FROM hotel_revenue JOIN otas ON hotel_revenue.ota_id = otas.ota_id JOIN hotels ON hotel_revenue.hotel_id = hotels.hotel_id WHERE hotels.city = 'London' AND otas.ota_name = 'Booking.com';"}
{"input": " \uc124\uba85 \uac00\ub2a5\ud55c AI \ub17c\ubb38\uc758 \uc778\uc6a9 \ud69f\uc218\uc5d0 \ub530\ub978 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE explainable_ai_papers (paper_id INT, paper_title VARCHAR(255), author_name VARCHAR(255), num_citations INT); INSERT INTO explainable_ai_papers (paper_id, paper_title, author_name, num_citations) VALUES ('1', 'Explainable AI: A Survey', 'Jane Smith', '200');", "output": "SELECT paper_id, paper_title, author_name, num_citations, RANK() OVER (ORDER BY num_citations DESC) as citation_rank FROM explainable_ai_papers;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ud1a0\uc591 \uc218\ubd84\uc774 \uac10\uc18c\ud55c \ubc2d\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE field (id INT, name VARCHAR(20)); CREATE TABLE soil_moisture (id INT, field_id INT, value INT, timestamp TIMESTAMP);", "output": "SELECT f.name FROM field f INNER JOIN soil_moisture sm1 ON f.id = sm1.field_id INNER JOIN soil_moisture sm2 ON f.id = sm2.field_id AND sm2.timestamp = sm1.timestamp - INTERVAL '1 day' WHERE sm1.value > sm2.value;"}
{"input": "\uacf5\uae09\uc5c5\uccb4\ubcc4 \uc720\uae30\ub18d \uc721\ub958 \uc81c\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT, name TEXT); CREATE TABLE products (id INT, supplier_id INT, name TEXT, is_organic BOOLEAN, price FLOAT); CREATE TABLE sales (id INT, product_id INT, quantity INT); INSERT INTO suppliers (id, name) VALUES (1, 'Supplier A'), (2, 'Supplier B'), (3, 'Supplier C'); INSERT INTO products (id, supplier_id, name, is_organic, price) VALUES (1, 1, 'Grass-fed Beef', true, 12.5), (2, 1, 'Free-range Chicken', true, 9.0), (3, 2, 'Vegetarian-fed Turkey', true, 10.0), (4, 2, 'Farmed Tilapia', false, 8.0), (5, 3, 'Wild-caught Salmon', false, 15.0); INSERT INTO sales (id, product_id, quantity) VALUES (1, 1, 50), (2, 2, 75), (3, 3, 60), (4, 4, 80), (5, 5, 100);", "output": "SELECT s.name AS supplier_name, SUM(p.price * s.quantity) AS total_revenue FROM sales s JOIN products p ON s.product_id = p.id JOIN suppliers sup ON p.supplier_id = sup.id WHERE p.is_organic = true GROUP BY sup.name;"}
{"input": " \ubd81\ud574 \uc720\uc815\uc758 \uc6d4\ubcc4 \uc0dd\uc0b0\ub7c9 \ucd94\uc774\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE production (prod_id INT, well_id INT, prod_date DATE, production_rate FLOAT); INSERT INTO production (prod_id, well_id, prod_date, production_rate) VALUES (6, 2, '2020-01-01', 1500), (7, 2, '2020-02-01', 1600), (8, 2, '2020-03-01', 1700), (9, 2, '2020-04-01', 1800), (10, 2, '2020-05-01', 1900);", "output": "SELECT prod_date, production_rate, LAG(production_rate, 1) OVER (ORDER BY prod_date) AS previous_month_rate FROM production WHERE well_id = 2;"}
{"input": " \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, country TEXT, user_engagement FLOAT);", "output": "SELECT country, SUM(user_engagement) as total_engagement FROM virtual_tours GROUP BY country ORDER BY total_engagement DESC LIMIT 3;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544 \ucd9c\uc2e0 \ub450 \uba85 \uc774\uc0c1\uc758 \ud300\uc774 \ub514\uc790\uc778\ud55c \uac8c\uc784\uc758 \ud3c9\uade0 \ud50c\ub808\uc774\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE game_design_teams (team_id INT, designer_id INT, country VARCHAR(50)); CREATE TABLE game_design_team_members (member_id INT, team_id INT, designer_id INT);", "output": "SELECT AVG(players) FROM game_designers INNER JOIN (SELECT team_id FROM game_design_teams INNER JOIN game_design_team_members ON game_design_teams.team_id = game_design_team_members.team_id WHERE country = 'Oceania' GROUP BY team_id HAVING COUNT(DISTINCT designer_id) >= 2) AS oceania_teams ON game_designers.designer_id = oceania_teams.team_id;"}
{"input": " \uc544\uc2dc\uc544 \uc9c0\uc5ed \ub9e4\uc7a5\uc5d0\uc11c \ucd1d \uc218\ub7c9 100\uac1c \uc774\uc0c1 \ud310\ub9e4\ub41c \uc81c\ud488\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE stores (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), region VARCHAR(50)); CREATE TABLE inventory (id INT PRIMARY KEY, store_id INT, product_id INT, quantity INT, FOREIGN KEY (store_id) REFERENCES stores(id), FOREIGN KEY (product_id) REFERENCES products(id)); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(5,2), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id));", "output": "SELECT products.name AS product_name, SUM(inventory.quantity) AS total_quantity FROM products INNER JOIN inventory ON products.id = inventory.product_id INNER JOIN stores ON inventory.store_id = stores.id WHERE stores.region = 'Asia' GROUP BY products.name HAVING total_quantity > 100;"}
{"input": " 2021\ub144\uc5d0\ub294 '\ub18d\ucd0c' \uce74\ud14c\uace0\ub9ac\uc758 \uae09\uc218 \uc2dc\uc2a4\ud15c\uc774 \uba87 \uac1c \uc124\uce58\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE water_supply_systems (system_id INT, system_category VARCHAR(20), installation_year INT); INSERT INTO water_supply_systems (system_id, system_category, installation_year) VALUES (1, 'rural', 2019), (2, 'urban', 2021), (3, 'rural', 2020), (4, 'urban', 2018), (5, 'rural', 2021);", "output": "SELECT COUNT(system_id) FROM water_supply_systems WHERE system_category = 'rural' AND installation_year = 2021;"}
{"input": " \uac70\ub798\ub97c \ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uace0\uac1d\uc744 \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID int, Name varchar(50), Age int); INSERT INTO Customers (CustomerID, Name, Age) VALUES (1, 'John Smith', 35), (2, 'Jane Doe', 42), (3, 'Michael Lee', 28); CREATE TABLE Transactions (TransactionID int, CustomerID int, Amount decimal(10,2)); INSERT INTO Transactions (TransactionID, CustomerID, Amount) VALUES (1, 1, 500.00), (2, 1, 750.00), (3, 2, 250.00), (4, 2, 1000.00);", "output": "SELECT Contexts.CustomerID, Contexts.Name FROM Contexts WHERE Contexts.CustomerID NOT IN (SELECT Transactions.CustomerID FROM Transactions) ORDER BY Contexts.CustomerID;"}
{"input": " \ubbfc\uac04 \ubc0f \uacf5\uacf5 \ubd80\ubb38\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud0c4\uc18c \uc0c1\uc1c4 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2dc\ud589\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE carbon_offsets_private (sector VARCHAR(255), program VARCHAR(255)); INSERT INTO carbon_offsets_private (sector, program) VALUES ('Private', 'Tree Planting'), ('Private', 'Renewable Energy'), ('Private', 'Energy Efficiency'); CREATE TABLE carbon_offsets_public (sector VARCHAR(255), program VARCHAR(255)); INSERT INTO carbon_offsets_public (sector, program) VALUES ('Public', 'Tree Planting'), ('Public', 'Renewable Energy'), ('Public', 'Carbon Capture');", "output": "SELECT sector, COUNT(program) AS num_programs FROM carbon_offsets_private GROUP BY sector UNION ALL SELECT sector, COUNT(program) AS num_programs FROM carbon_offsets_public GROUP BY sector;"}
{"input": " \uc704\uce58\ubcc4\ub85c \uac00\uc7a5 \ud754\ud55c \ud574\uc591 \uc0dd\ubb3c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE SpeciesLocation (ID INT, Species VARCHAR(50), Location VARCHAR(50), Count INT, ObservationDate DATE); INSERT INTO SpeciesLocation (ID, Species, Location, Count, ObservationDate) VALUES (1, 'Starfish', 'Atlantic', 300, '2020-01-01'), (2, 'Dolphin', 'Pacific', 250, '2020-01-02'), (3, 'Shark', 'Atlantic', 400, '2020-01-03'), (4, 'Jellyfish', 'Atlantic', 500, '2020-01-04');", "output": "SELECT Location, Species, Count, RANK() OVER (PARTITION BY Location ORDER BY Count DESC) as Rank FROM SpeciesLocation;"}
{"input": " '\uad50\uc721' \ubc0f '\ud658\uacbd' \ubd84\uc57c\uc758 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, category VARCHAR(20), volunteer_id INT); INSERT INTO projects (id, category, volunteer_id) VALUES (1, 'Education', 100), (2, 'Environment', 100), (3, 'Health', 200), (4, 'Education', 300);", "output": "SELECT volunteer_id FROM projects WHERE category = 'Education' INTERSECT SELECT volunteer_id FROM projects WHERE category = 'Environment';"}
{"input": " \uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc8fc\ub97c \uae30\uc900\uc73c\ub85c 2021\ub144\uc5d0 \uac01 \uc8fc\ubcc4\ub85c \uc7a5\uc560\uc778 \uace0\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Disability_Employment_Programs (State VARCHAR(50), Budget NUMERIC(10,2), Year INTEGER); INSERT INTO Disability_Employment_Programs VALUES ('California', 100000, 2021), ('Texas', 120000, 2021), ('New York', 150000, 2021), ('Florida', 110000, 2021), ('Illinois', 130000, 2021), ('Pennsylvania', 140000, 2021), ('Ohio', 120000, 2021), ('Georgia', 140000, 2021), ('North Carolina', 150000, 2021), ('Michigan', 130000, 2021);", "output": "SELECT State, SUM(Budget) as Total_Budget FROM Disability_Employment_Programs WHERE Year = 2021 GROUP BY State ORDER BY Total_Budget DESC;"}
{"input": " \ubd81\uadf9\uc758 \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud55c \ubaa8\ub4e0 \uc885\uc758 \ucd1d \uac1c\uccb4\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Endangered_Species (ID INT, Name VARCHAR(50), Population INT, Status VARCHAR(50), Region VARCHAR(50)); INSERT INTO Endangered_Species VALUES (1, 'Snowy Owl', 1000, 'Least Concern', 'Arctic'); INSERT INTO Endangered_Species VALUES (2, 'Gyrfalcon', 2000, 'Least Concern', 'Arctic'); INSERT INTO Endangered_Species VALUES (3, 'Peregrine Falcon', 1500, 'Vulnerable', 'Arctic');", "output": "SELECT SUM(Population) FROM Endangered_Species WHERE Status = 'Vulnerable' OR Status = 'Endangered' OR Status = 'Critically Endangered';"}
{"input": " \ubaa8\ub4e0 \ucd95\uad6c \uc2dc\uc124\uc758 \ucd1d \uc218\uc6a9 \uc778\uc6d0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Facilities (FacilityID INT, FacilityName VARCHAR(50), City VARCHAR(50), Sport VARCHAR(20), Capacity INT); INSERT INTO Facilities (FacilityID, FacilityName, City, Sport, Capacity) VALUES (1, 'Wembley Stadium', 'London', 'Soccer', 90000), (2, 'Estadio Azteca', 'Mexico City', 'Soccer', 87000);", "output": "SELECT SUM(Capacity) FROM Facilities WHERE Sport = 'Soccer';"}
{"input": "\uc9c0\ub09c \uc8fc\uc5d0 \"\ud560\uc778\"\uc774\ub77c\ub294 \ub2e8\uc5b4\uac00 \ud3ec\ud568\ub41c \uad11\uace0\uc5d0 \ucc38\uc5ec\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE user_ads (user_id INT, ad_id INT, ad_date DATE); CREATE TABLE ads (id INT, ad_text VARCHAR(255)); CREATE TABLE users (id INT);", "output": "SELECT COUNT(DISTINCT user_id) FROM user_ads ua JOIN ads a ON ua.ad_id = a.id JOIN users ON ua.user_id = users.id WHERE a.ad_text LIKE '%discount%' AND ua.ad_date >= CURRENT_DATE - INTERVAL '1 week';"}
{"input": " 'HealthHut' \ubc0f 'HarvestBowl'\uc5d0\uc11c '\ube44\uac74' \ubc0f '\uae00\ub8e8\ud150 \ud504\ub9ac' \uc694\ub9ac\uc5d0 \ub300\ud55c \ub3c5\ud2b9\ud55c \uace0\uac1d \uc120\ud638\ub3c4\ub97c \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE HealthHut (customer_id INT, diet_type VARCHAR(15)); INSERT INTO HealthHut (customer_id, diet_type) VALUES (7, 'vegan'), (8, 'vegan'), (9, 'gluten-free'); CREATE TABLE HarvestBowl (customer_id INT, diet_type VARCHAR(15)); INSERT INTO HarvestBowl (customer_id, diet_type) VALUES (10, 'vegan'), (11, 'vegetarian'), (12, 'gluten-free');", "output": "SELECT customer_id FROM HealthHut WHERE diet_type IN ('vegan', 'gluten-free') UNION SELECT customer_id FROM HarvestBowl WHERE diet_type IN ('vegan', 'gluten-free');"}
{"input": "\uac01 \ud559\uad70\uc5d0\ub294 \uba87 \uba85\uc758 \ud559\uc0dd\uc774 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE school_district (district_id INT, district_name VARCHAR(50), num_students INT); INSERT INTO school_district (district_id, district_name, num_students) VALUES (1, 'Downtown High School District', 3000), (2, 'Uptown Elementary School District', 2500);", "output": "SELECT district_name, SUM(num_students) as total_students FROM school_district GROUP BY district_name;"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 '\uc561\uc158' \uc7a5\ub974 \uc601\ud654\uac00 \uba87 \ud3b8\uc774\ub098 \uac1c\ubd09\ub410\ub098\uc694?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), genre VARCHAR(50), release_year INT); INSERT INTO movies (id, title, genre, release_year) VALUES (1, 'Movie1', 'Action', 2018); INSERT INTO movies (id, title, genre, release_year) VALUES (2, 'Movie2', 'Action', 2019); INSERT INTO movies (id, title, genre, release_year) VALUES (3, 'Movie3', 'Action', 2020);", "output": "SELECT COUNT(*) FROM movies WHERE genre = 'Action' AND release_year BETWEEN 2018 AND 2020;"}
{"input": " \uc9c0\ub09c \ub2ec \ud734\uc2a4\ud134 \ucc3d\uace0\uc5d0\uc11c \ubc30\uc1a1\ub41c \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouses (id INT, name VARCHAR(255)); INSERT INTO warehouses (id, name) VALUES (1, 'Houston'), (2, 'New York'); CREATE TABLE shipments (id INT, warehouse_id INT, quantity INT, shipped_at DATETIME); INSERT INTO shipments (id, warehouse_id, quantity, shipped_at) VALUES (1, 1, 100, '2022-01-01 10:00:00'), (2, 1, 200, '2022-01-05 14:00:00');", "output": "SELECT SUM(quantity) FROM shipments WHERE warehouse_id = 1 AND shipped_at BETWEEN '2022-02-01' AND '2022-02-28';"}
{"input": " '\ucd94\uc0c1' \uc7a5\ub974\uc758 \ubaa8\ub4e0 \uc804\uc2dc\ud68c\ub97c \uc804\uc2dc\ud68c\uc5d0 \uc804\uc2dc\ub41c \uac01 \uc791\ud488\uc744 \ub9cc\ub4e0 \uc791\uac00\uc758 \uc774\ub984\uacfc \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Exhibition (exhibition_id INT, exhibition_name VARCHAR(30), genre VARCHAR(20), artwork_id INT); CREATE TABLE Artwork (artwork_id INT, artwork_name VARCHAR(30), artist_id INT); CREATE TABLE Artist (artist_id INT, artist_name VARCHAR(30));", "output": "SELECT Exhibition.exhibition_name, Artwork.artwork_name, Artist.artist_name FROM Exhibition INNER JOIN Artwork ON Exhibition.artwork_id = Artwork.artwork_id INNER JOIN Artist ON Artwork.artist_id = Artist.artist_id WHERE Exhibition.genre = 'Abstract';"}
{"input": " 2020\ub144 \uad6d\uac00\ubcc4 \uc720\ud615\ubcc4 \ucd1d \uad70\uc778 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_personnel (country VARCHAR(255), type VARCHAR(255), personnel INT, year INT); INSERT INTO military_personnel (country, type, personnel, year) VALUES ('USA', 'Army', 480000, 2020), ('USA', 'Navy', 340000, 2020), ('USA', 'Air Force', 330000, 2020), ('China', 'Army', 1000000, 2020), ('China', 'Navy', 350000, 2020), ('China', 'Air Force', 395000, 2020);", "output": "SELECT country, type, SUM(personnel) as total_personnel FROM military_personnel WHERE year = 2020 GROUP BY country, type;"}
{"input": "\uc544\uc2dc\uc544 \uc9c0\uc5ed\uc758 \ucd1d \ubb38\ud654 \ud589\uc0ac \uc218\uc640 \ud3c9\uade0 \ucc38\uc11d\uc790 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cultural_events(id INT, region VARCHAR(30), type VARCHAR(30), attendees INT); INSERT INTO cultural_events VALUES (1, 'Asia', 'Festival', 2000); INSERT INTO cultural_events VALUES (2, 'Asia', 'Concert', 500);", "output": "SELECT SUM(attendees), AVG(attendees) FROM cultural_events WHERE region = 'Asia';"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ube44\uac74 \uc74c\uc2dd\uc5d0 \ub300\ud574 \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790\uc758 \ud314\ub85c\uc5b4 \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, user_name VARCHAR(50), join_date DATE);CREATE TABLE posts (post_id INT, user_id INT, post_content TEXT, post_date DATE);CREATE TABLE followers (follower_id INT, user_id INT);INSERT INTO users (user_id, user_name, join_date) VALUES (1, 'user1', '2021-01-01'), (2, 'user2', '2021-02-01'), (3, 'user3', '2021-03-01');", "output": "SELECT f.user_id, COUNT(f.follower_id) as follower_count FROM followers f JOIN users u ON f.user_id = u.user_id JOIN posts p ON u.user_id = p.user_id WHERE p.post_content LIKE '%vegan food%' AND p.post_date >= DATEADD(week, -1, GETDATE()) GROUP BY f.user_id ORDER BY follower_count DESC;"}
{"input": "\uc5f0\ub839\ub300\ubcc4\ub85c \ucd95\uad6c \uacbd\uae30\ub97c \uad00\ub78c\ud55c \ud32c \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fan_demographics (fan_id INT, age INT, state VARCHAR(255), sport VARCHAR(255)); INSERT INTO fan_demographics (fan_id, age, state, sport) VALUES (1, 22, 'NY', 'Football'), (2, 25, 'CA', 'Football'), (3, 30, 'TX', 'Football'); CREATE TABLE games (game_id INT, fan_id INT, sport VARCHAR(255)); INSERT INTO games (game_id, fan_id, sport) VALUES (101, 1, 'Football'), (102, 2, 'Football'), (103, 3, 'Football');", "output": "SELECT t.age_group, COUNT(g.fan_id) attendance FROM (SELECT fan_id, CASE WHEN age < 20 THEN '10-19' WHEN age < 30 THEN '20-29' WHEN age < 40 THEN '30-39' ELSE '40+' END age_group FROM fan_demographics) f JOIN games g ON f.fan_id = g.fan_id WHERE g.sport = 'Football' GROUP BY t.age_group;"}
{"input": " \ud1a0\ub108\uba3c\ud2b8\uc5d0\uc11c \uac01 \ud300\uc758 \ucd5c\uace0 \ub4dd\uc810\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Player (PlayerID int, PlayerName varchar(50), TeamID int); CREATE TABLE Goal (GoalID int, PlayerID int, Goals int, MatchDate date, TournamentID int);  INSERT INTO Player (PlayerID, PlayerName, TeamID) VALUES (1, 'James Rodriguez', 1), (2, 'Radamel Falcao', 1), (3, 'Thomas Muller', 2), (4, 'Miroslav Klose', 2); INSERT INTO Goal (GoalID, PlayerID, Goals, MatchDate, TournamentID) VALUES (1, 1, 2, '2022-06-01', 1), (2, 1, 3, '2022-06-05', 1), (3, 2, 1, '2022-06-01', 1), (4, 2, 2, '2022-06-05', 1), (5, 3, 4, '2022-06-01', 1), (6, 3, 5, '2022-06-05', 1), (7, 4, 2, '2022-06-01', 1), (8, 4, 3, '2022-06-05', 1);", "output": "SELECT p.TeamID, p.PlayerName, SUM(g.Goals) AS TotalGoals, ROW_NUMBER() OVER (PARTITION BY p.TeamID ORDER BY SUM(g.Goals) DESC) AS Ranking FROM Player p JOIN Goal g ON p.PlayerID = g.PlayerID WHERE g.TournamentID = 1 GROUP BY p.TeamID, p.PlayerName HAVING Ranking <= 1;"}
{"input": " \ud55c \uba85\uc758 \uc800\uc790\uac00 \ud558\ub8e8\uc5d0 \uac8c\uc2dc\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ub17c\ubb38 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE authors (id INT, name VARCHAR(20)); CREATE TABLE articles (id INT, author_id INT, publication_date DATE); INSERT INTO authors (id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'); INSERT INTO articles (id, author_id, publication_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-01-01'), (3, 2, '2022-01-02');", "output": "SELECT MAX(cnt) FROM (SELECT author_id, COUNT(*) as cnt FROM articles GROUP BY author_id, publication_date) as temp WHERE temp.cnt > 1;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uc608\uc0b0\uc774 \uac10\uc18c\ud55c \uc11c\ube44\uc2a4\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Budget(Year INT, Service VARCHAR(20), Budget FLOAT); INSERT INTO Budget VALUES(2020, 'Education', 15000000), (2020, 'Healthcare', 20000000), (2021, 'Education', 14000000), (2021, 'Healthcare', 21000000), (2020, 'Public Transport', 10000000), (2021, 'Public Transport', 10500000);", "output": "SELECT DISTINCT Service FROM Budget WHERE (Budget - LAG(Budget, 1) OVER (PARTITION BY Service ORDER BY Year)) < 0 AND Year IN (2020, 2021);"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc2dc\uac01 \uc608\uc220 \ud504\ub85c\uadf8\ub7a8\uc774 \ubc1b\uc740 \uc790\uae08\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visual_arts_programs (program_id INT, program_name VARCHAR(50)); CREATE TABLE program_funding (program_id INT, source_id INT, amount DECIMAL(5,2)); CREATE TABLE funding_sources (source_id INT, source_name VARCHAR(50)); INSERT INTO visual_arts_programs (program_id, program_name) VALUES (1, 'Painting Classes'), (2, 'Sculpture Workshops'), (3, 'Photography Course'); INSERT INTO funding_sources (source_id, source_name) VALUES (1, 'Arts Council'), (2, 'Local Grants'), (3, 'Private Donors'); INSERT INTO program_funding (program_id, source_id, amount) VALUES (1, 1, 5000), (1, 2, 3000), (2, 1, 7000), (2, 3, 12000), (3, 2, 8000), (3, 3, 10000);", "output": "SELECT AVG(p.amount) as avg_funding FROM program_funding p INNER JOIN visual_arts_programs v ON p.program_id = v.program_id INNER JOIN funding_sources fs ON p.source_id = fs.source_id WHERE v.program_name IN ('Painting Classes', 'Sculpture Workshops', 'Photography Course') AND p.amount IS NOT NULL AND fs.source_name IN ('Arts Council', 'Local Grants', 'Private Donors') AND p.program_id IS NOT NULL AND v.program_id IS NOT NULL AND fs.source_id IS NOT NULL AND p.program_id = v.program_id AND p.source_id = fs.source_id AND v.program_id = p.program_id AND fs.source_id = p.source_id AND p.amount > 0 AND fs.source_name != '';"}
{"input": " 2022\ub144 'RegionC'\uc758 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Annual_Water_Usage (id INT, region VARCHAR(20), year INT, usage FLOAT); INSERT INTO Annual_Water_Usage (id, region, year, usage) VALUES (1, 'RegionA', 2020, 12000), (2, 'RegionB', 2021, 15000), (3, 'RegionC', 2022, NULL);", "output": "SELECT region, SUM(usage) FROM Annual_Water_Usage WHERE region = 'RegionC' AND year = 2022 GROUP BY region;"}
{"input": "\uac01 \uacbd\ub85c\uc758 \ucd1d \uac70\ub9ac\uc640 \uc9c0\uc5f0 \ud69f\uc218\ub97c \ucd1d \uac70\ub9ac\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE routes (route_id INT, start_station VARCHAR(255), end_station VARCHAR(255), distance FLOAT, num_stops INT); CREATE TABLE delays (delay_id INT, route_id INT, delay FLOAT, delay_reason VARCHAR(255), delay_date DATE); INSERT INTO routes (route_id, start_station, end_station, distance, num_stops) VALUES (1, 'A1', 'B1', 12.5, 5), (2, 'B1', 'C1', 10.0, 3), (3, 'A1', 'C1', 21.5, 7); INSERT INTO delays (delay_id, route_id, delay, delay_reason, delay_date) VALUES (1, 1, 15.0, 'Construction', '2022-05-01'), (2, 2, 20.0, 'Accident', '2022-05-02'), (3, 1, 5.0, 'Weather', '2022-05-03');", "output": "SELECT route_id, SUM(distance) as total_distance, COUNT(*) as num_delays, ROW_NUMBER() OVER (ORDER BY SUM(distance) DESC) as rank FROM routes RIGHT JOIN delays ON routes.route_id = delays.route_id GROUP BY route_id;"}
{"input": " \ubc95\uc6d0 \uc720\ud615\ubcc4\ub85c \uad6d\uc120 \ubcc0\ud638\uc778\uc774 \ub300\ub9ac\ud55c \ud53c\uace0\uc778\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE court_types (court_type_id INT, court_type_name VARCHAR(20)); INSERT INTO court_types VALUES (1, 'Community'), (2, 'Juvenile'), (3, 'Traffic'), (4, 'Civil');", "output": "SELECT ct.court_type_name, pd.defender_state, COUNT(dd.defendant_id) FROM court_types ct INNER JOIN public_defenders pd ON ct.court_type_id = pd.court_type_id INNER JOIN defendant_data dd ON pd.defender_id = dd.defender_id GROUP BY ct.court_type_name, pd.defender_state;"}
{"input": " \uc0ac\ud68c\uc801 \ud615\ud3c9 \ubd84\uc57c\uc758 \ucd5c\uc18c \ud22c\uc790\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE investments (id INT, category VARCHAR(255), amount FLOAT); INSERT INTO investments (id, category, amount) VALUES (1, 'social equity', 12000), (2, 'environmental sustainability', 15000), (3, 'social equity', 10000);", "output": "SELECT MIN(amount) FROM investments WHERE category = 'social equity';"}
{"input": " \uc778\ub3c4\ub124\uc2dc\uc544\uc758 \ucd1d \ubb38\ud654\uc720\uc0b0 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE heritage_sites (site_id INT, site_name TEXT, country TEXT); INSERT INTO heritage_sites (site_id, site_name, country) VALUES (1, 'Borobudur Temple', 'Indonesia'), (2, 'Statue of Liberty', 'USA'), (3, 'Sydney Opera House', 'Australia');", "output": "SELECT COUNT(*) FROM heritage_sites WHERE country = 'Indonesia';"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac00\uc7a5 \ub9ce\uc740 \ud2b9\ud5c8\ub97c \ucd9c\uc6d0\ud55c \ubc14\uc774\uc624\uc13c\uc11c \uae30\uc220\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biosensors;CREATE TABLE if not exists biosensors.patents (id INT, technology VARCHAR(50), company VARCHAR(100), filing_date DATE);INSERT INTO biosensors.patents (id, technology, company, filing_date) VALUES (1, 'Bioelectric', 'CompanyA', '2018-03-15'), (2, 'Optical', 'CompanyB', '2019-08-01'), (3, 'Mechanical', 'CompanyC', '2020-02-20');", "output": "SELECT technology, COUNT(*) as patent_count FROM biosensors.patents WHERE filing_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) GROUP BY technology ORDER BY patent_count DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ub9ac\ucf5c\ub41c \uc81c\ud488\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE product_recalls (recall_id INT, product_id INT, recall_date DATE); INSERT INTO product_recalls (recall_id, product_id, recall_date) VALUES (1, 1, '2022-01-01'), (2, 3, '2021-12-31'), (3, 2, '2021-06-01');", "output": "SELECT COUNT(*) FROM product_recalls WHERE recall_date >= DATEADD(month, -6, GETDATE());"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Infrastructure_All (Type VARCHAR(50), Country VARCHAR(50), Cost FLOAT); INSERT INTO Infrastructure_All (Type, Country, Cost) VALUES ('Road', 'Canada', 5000000), ('Bridge', 'Canada', 10000000), ('Highway', 'Canada', 8000000), ('Road', 'USA', 6000000), ('Bridge', 'USA', 12000000), ('Highway', 'USA', 9000000), ('Road', 'Mexico', 7000000), ('Bridge', 'Mexico', 8000000), ('Highway', 'Mexico', 10000000), ('Road', 'Brazil', 4000000), ('Bridge', 'Brazil', 9000000), ('Highway', 'Brazil', 11000000), ('Road', 'Australia', 3000000), ('Bridge', 'Australia', 7000000), ('Highway', 'Australia', 8000000);", "output": "SELECT Country, SUM(Cost) as Total_Cost, ROW_NUMBER() OVER (ORDER BY SUM(Cost) DESC) as Rank FROM Infrastructure_All GROUP BY Country;"}
{"input": " \uac01 \uae30\uc220 \uc720\ud615\uc5d0 \ub300\ud55c \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, technology VARCHAR(20)); CREATE TABLE broadband_subscribers (subscriber_id INT, technology VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, technology) VALUES (1, '4G'), (2, '5G'), (3, '3G'); INSERT INTO broadband_subscribers (subscriber_id, technology) VALUES (4, 'Fiber'), (5, 'Cable'), (6, 'DSL');", "output": "SELECT 'Mobile' as source, technology, COUNT(*) as total FROM mobile_subscribers GROUP BY technology UNION ALL SELECT 'Broadband' as source, technology, COUNT(*) as total FROM broadband_subscribers GROUP BY technology;"}
{"input": " \ucd1d \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uba85\uc758 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc77c\uc77c \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artists (artist_id INT, artist_name VARCHAR(255)); CREATE TABLE songs (song_id INT, title VARCHAR(255), genre_id INT, release_date DATE, artist_id INT); CREATE TABLE streams (stream_id INT, song_id INT, user_id INT, stream_date DATE, revenue DECIMAL(10,2));", "output": "SELECT a.artist_name, st.stream_date, SUM(s.revenue) as daily_revenue FROM artists a JOIN songs s ON a.artist_id = s.artist_id JOIN streams st ON s.song_id = st.song_id WHERE a.artist_id IN (SELECT a.artist_id FROM artists a JOIN songs s ON a.artist_id = s.artist_id JOIN streams st ON s.song_id = st.song_id GROUP BY a.artist_id ORDER BY SUM(st.revenue) DESC LIMIT 3) GROUP BY a.artist_name, st.stream_date ORDER BY daily_revenue DESC;"}
{"input": " \uc0dd\uc0b0 \uac00\uce58\uac00 $800,000 \uc774\uc0c1\uc778 'asia_mines'\uc758 \ubaa8\ub4e0 \ucc44\uad74 \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA if not exists asia_schema_2;CREATE TABLE asia_schema_2.asia_mines (id INT, name VARCHAR, production_value DECIMAL);INSERT INTO asia_schema_2.asia_mines (id, name, production_value) VALUES (1, 'A mining', 850000.00), (2, 'B mining', 600000.00);", "output": "SELECT name FROM asia_schema_2.asia_mines WHERE production_value > 800000;"}
{"input": " \uc804 \uc138\uacc4 \uc0c1\uc704 3\uac1c \uac00\uc0c1\ubb38\ud654\uc720\uc0b0\uc744 \ucc3e\uc544 \ud574\ub2f9 \uc0ac\uc774\ud2b8\uc758 site_id, site_name, virtual_tour_count\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE virtual_sites(site_id INT, site_name TEXT, virtual_tour_count INT); INSERT INTO virtual_sites(site_id, site_name, virtual_tour_count) VALUES (1, 'Machu Picchu Virtual Tour', 400), (2, 'Eiffel Tower Virtual Tour', 500), (3, 'Great Wall of China Virtual Tour', 600), (4, 'Pyramids of Giza Virtual Tour', 300), (5, 'Taj Mahal Virtual Tour', 550);", "output": "SELECT site_id, site_name, virtual_tour_count FROM (SELECT site_id, site_name, virtual_tour_count, ROW_NUMBER() OVER (ORDER BY virtual_tour_count DESC) rn FROM virtual_sites) subquery WHERE rn <= 3;"}
{"input": " \uc778\ub3c4 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9 \ubc0f \uad6d\ubc29 \uc678\uad50 \ud589\uc0ac\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Peacekeeping_Operations (Operation_ID INT, Operation_Name VARCHAR(50), Start_Date DATE, Region VARCHAR(50)); INSERT INTO Peacekeeping_Operations (Operation_ID, Operation_Name, Start_Date, Region) VALUES (1, 'Operation Pacific Partnership', '2006-01-01', 'Indo-Pacific'); CREATE TABLE Defense_Diplomacy (Event_ID INT, Event_Name VARCHAR(50), Start_Date DATE, Region VARCHAR(50)); INSERT INTO Defense_Diplomacy (Event_ID, Event_Name, Start_Date, Region) VALUES (1, 'Defense Dialogue', '2018-01-01', 'Indo-Pacific');", "output": "SELECT SUM(CASE WHEN Table_Name = 'Peacekeeping_Operations' THEN 1 ELSE 0 END) as Total_Peacekeeping_Operations, SUM(CASE WHEN Table_Name = 'Defense_Diplomacy' THEN 1 ELSE 0 END) as Total_Defense_Diplomacy FROM (SELECT 'Peacekeeping_Operations' as Table_Name FROM Peacekeeping_Operations UNION ALL SELECT 'Defense_Diplomacy' as Table_Name FROM Defense_Diplomacy) as T;"}
{"input": " \ud558\ub8e8\uc5d0 \ubcf4\uace0\ub418\ub294 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc0ac\ub840\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (Id INT, Region VARCHAR(20), ReportDate DATE); INSERT INTO MentalHealthParity (Id, Region, ReportDate) VALUES (1, 'Southwest', '2020-01-01'), (2, 'Northeast', '2019-12-31'), (3, 'Southwest', '2020-06-15'), (4, 'Northeast', '2020-01-10'), (5, 'Southwest', '2020-06-15');", "output": "SELECT ReportDate, COUNT(*) as CountOfCases FROM MentalHealthParity GROUP BY ReportDate ORDER BY CountOfCases DESC LIMIT 1;"}
{"input": " \ubaa8\ub4e0 \uace0\uc720 \uc7a5\ube44 ID\uc640 \ud574\ub2f9 \uc720\ud615\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Equipment (ID INT, EquipmentType VARCHAR(10)); INSERT INTO Equipment (ID, EquipmentType) VALUES (101, 'Reactor'), (102, 'Separator'), (103, 'HeatExchanger');", "output": "SELECT DISTINCT ID, EquipmentType FROM Equipment;"}
{"input": " \ub18d\ucd0c \uae30\ubc18 \uc2dc\uc124 \ud504\ub85c\uc81d\ud2b8\uc758 \uc720\ud615\uacfc \ud574\ub2f9 \uc608\uc0b0\uc744 \uc608\uc0b0\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE rural_infrastructure (project_type VARCHAR(255), budget INT); INSERT INTO rural_infrastructure (project_type, budget) VALUES ('Dams', 800000), ('Renewable Energy', 500000), ('Irrigation Systems', 350000);", "output": "SELECT project_type, budget FROM rural_infrastructure ORDER BY budget DESC;"}
{"input": "\uc9c0\ub09c \ub2ec\uc5d0 \ud50c\ub808\uc774\ud558\uc9c0 \uc54a\uc740 \uac8c\uc784\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE games (id INT PRIMARY KEY, name VARCHAR(50), release_date DATE); CREATE TABLE games_played (game_id INT, play_date DATE, FOREIGN KEY (game_id) REFERENCES games(id)); INSERT INTO games (id, name, release_date) VALUES (1, 'Game A', '2022-01-01'), (2, 'Game B', '2022-06-01'), (3, 'Game C', '2022-12-01'); INSERT INTO games_played (game_id, play_date) VALUES (1, '2022-12-15'), (2, '2023-01-10'), (3, '2023-01-01');", "output": "DELETE FROM games WHERE id NOT IN (SELECT game_id FROM games_played WHERE play_date >= DATEADD(month, -1, GETDATE()));"}
{"input": " \uc778\ub3c4\uc758 \ub3c4\uc2dc\ubcc4 \uc18c\uc561 \uae08\uc735 \uace0\uac1d\uc758 \ud3c9\uade0 \uc18c\ub4dd\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE microfinance_clients (id INT, name VARCHAR(50), income FLOAT, city VARCHAR(50), country VARCHAR(50)); INSERT INTO microfinance_clients (id, name, income, city, country) VALUES (1, 'Ravi Kumar', 7000.00, 'Mumbai', 'India'), (2, 'Swati Singh', 8000.00, 'Delhi', 'India');", "output": "SELECT city, AVG(income) as avg_income FROM microfinance_clients WHERE country = 'India' GROUP BY city;"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \ubc29\ubb38\ud55c \ubc15\ubb3c\uad00 \uc21c\uc704\uc640 \ud568\uaed8 5\ub144 \uac04\uaca9\uc73c\ub85c \uadf8\ub8f9\ud654\ub41c \ub300\ub959\ubcc4 \ubc29\ubb38\uac1d \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Continent (Id INT, Continent VARCHAR(50)); INSERT INTO Continent (Id, Continent) VALUES (1, 'Africa'), (2, 'Asia'), (3, 'Europe'), (4, 'North America'), (5, 'South America'), (6, 'Australia'); CREATE TABLE Visitor (Id INT, Age INT, ContinentId INT);", "output": "SELECT RANK() OVER (ORDER BY TotalVisitors DESC) as MuseumRank, m.Name, c.Continent, FLOOR(m.AverageAge/5)*5 as AgeGroup, COUNT(v.Id) as TotalVisitors  FROM Museum m  JOIN Visitor v ON m.Id = v.MuseumId JOIN Continent c ON v.ContinentId = c.Id GROUP BY MuseumRank, m.Name, c.Continent, AgeGroup ORDER BY MuseumRank, TotalVisitors DESC;"}
{"input": " \uce90\ub098\ub2e4 \uc758\ub8cc \uc885\uc0ac\uc790\ub4e4 \uc911 \uac00\uc7a5 \ud754\ud55c \uc5f0\ub839\uce35\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE healthcare_workers (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), location VARCHAR(50)); INSERT INTO healthcare_workers (id, name, age, gender, location) VALUES (1, 'Emily Chen', 27, 'Female', 'Canada'); INSERT INTO healthcare_workers (id, name, age, gender, location) VALUES (2, 'Mohammed Ahmed', 35, 'Male', 'Canada');", "output": "SELECT age, COUNT(*) FROM healthcare_workers WHERE location = 'Canada' GROUP BY age ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " 15\uacbd\uae30 \ubbf8\ub9cc \ucd9c\uc804\ud55c \uc120\uc218\ub97c \uc81c\uc678\ud558\uace0 \ub77c\ub9ac\uac00 \ucd95\uad6c \uacbd\uae30\uc5d0\uc11c \uc120\uc218\ub4e4\uc774 \ub4dd\uc810\ud55c \ud3c9\uade0 \uace8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE La_Liga_Teams (Team VARCHAR(50), Goals INT); INSERT INTO La_Liga_Teams (Team, Goals) VALUES ('Real Madrid', 83), ('Barcelona', 75), ('Atletico Madrid', 67);", "output": "SELECT AVG(Goals) FROM La_Liga_Teams WHERE Goals > (SELECT AVG(Goals) FROM La_Liga_Teams) GROUP BY Goals HAVING COUNT(*) >= 15;"}
{"input": " \ub77c\ud2f4\uacc4 \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc758 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name TEXT, founding_year INT, founder_race TEXT); INSERT INTO company (id, name, founding_year, founder_race) VALUES (1, 'Acme Inc', 2010, 'Asian'); INSERT INTO company (id, name, founding_year, founder_race) VALUES (2, 'Beta Corp', 2015, 'white');", "output": "SELECT COUNT(*) FROM company WHERE founder_race = 'Latinx';"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uadfc\ub85c\uc790 \uc218\ub97c \uadfc\ub85c\uc790 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workers_dept (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO workers_dept (id, name, department) VALUES (1, 'John Doe', 'manufacturing'), (2, 'Jane Smith', 'engineering'), (3, 'Alice Johnson', 'engineering'), (4, 'Bob Brown', 'manufacturing'), (5, 'Charlie Green', 'manufacturing');", "output": "SELECT department, COUNT(*) as num_workers FROM workers_dept GROUP BY department ORDER BY num_workers DESC;"}
{"input": " 2022\ub144 \ubd81\uadf9\ud574 \ud3c9\uade0 \uae30\uc628", "context": "CREATE TABLE sensors (id INT, location VARCHAR(255), value FLOAT, timestamp TIMESTAMP); INSERT INTO sensors (id, location, value, timestamp) VALUES (1, 'Arctic Ocean', 5.2, '2022-01-01 12:00:00');", "output": "SELECT AVG(value) FROM sensors WHERE location = 'Arctic Ocean' AND YEAR(timestamp) = 2022;"}
{"input": " \ud0dc\ud3c9\uc591\uc5d0 \uc788\ub294 \uc218\uc911 \uc0b0\uc758 \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underwater_mountains (mountain_name TEXT, location TEXT, min_depth FLOAT); INSERT INTO underwater_mountains (mountain_name, location, min_depth) VALUES ('Mountain 1', 'Pacific Ocean', 1200.0), ('Mountain 2', 'Atlantic Ocean', 900.0), ('Mountain 3', 'Pacific Ocean', 1500.0);", "output": "SELECT MIN(min_depth) FROM underwater_mountains WHERE location = 'Pacific Ocean';"}
{"input": " \uc77c\ubcf8\uc5d0 \ub300\ud55c \ucd1d \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \uae08\uc561\uc744 \ud310\ub9e4\uc77c\uc758 \ubd84\uae30\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Military_Equipment_Sales (sale_date DATE, equipment_name VARCHAR(50), customer_country VARCHAR(50), sale_value INT); INSERT INTO Military_Equipment_Sales (sale_date, equipment_name, customer_country, sale_value) VALUES ('2020-01-01', 'Tank A', 'Japan', 5000000); INSERT INTO Military_Equipment_Sales (sale_date, equipment_name, customer_country, sale_value) VALUES ('2021-04-01', 'Helicopter B', 'Japan', 10000000);", "output": "SELECT EXTRACT(QUARTER FROM sale_date) AS quarter, SUM(sale_value) FROM Military_Equipment_Sales WHERE customer_country = 'Japan' GROUP BY quarter;"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (country VARCHAR(255), year INT, amount INT); INSERT INTO production (country, year, amount) VALUES ('China', 2019, 120000), ('China', 2020, 140000), ('USA', 2019, 36000), ('USA', 2020, 38000), ('Australia', 2019, 18000), ('Australia', 2020, 20000), ('India', 2019, 4000), ('India', 2020, 5000);", "output": "SELECT country, MAX(amount - LAG(amount, 1) OVER (PARTITION BY country ORDER BY year)) AS production_increase FROM production GROUP BY country;"}
{"input": " 2010\ub144 '\uc628\ub300\uc6b0\ub9bc'\uc758 \ucd1d \ud0c4\uc18c \uaca9\ub9ac\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_sequestration (id INT, year INT, location VARCHAR(50), sequestration FLOAT); INSERT INTO carbon_sequestration (id, year, location, sequestration) VALUES (2, 2010, 'Temperate Rainforests', 6000);", "output": "SELECT SUM(sequestration) FROM carbon_sequestration WHERE year = 2010 AND location = 'Temperate Rainforests';"}
{"input": " \uc624\uc9c1 \ud558\ub098\uc758 \ub300\uc591 \ubd84\uc9c0\uc5d0\uc11c\ub9cc \ubc1c\uacac\ub418\ub294 \ubaa8\ub4e0 \ud574\uc591 \uc0dd\ubb3c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE species (id INT, name VARCHAR(255), habitat VARCHAR(255)); CREATE TABLE ocean_basin (id INT, name VARCHAR(255)); CREATE TABLE species_ocean_basin (species_id INT, ocean_basin_id INT);", "output": "SELECT species.name FROM species JOIN species_ocean_basin ON species.id = species_ocean_basin.species_id JOIN ocean_basin ON species_ocean_basin.ocean_basin_id = ocean_basin.id GROUP BY species.name HAVING COUNT(DISTINCT ocean_basin.name) = 1;"}
{"input": "PatientID\ub97c \uae30\uc900\uc73c\ub85c \ud658\uc790\ubcc4 \uc815\uc2e0\uac74\uac15 \ubc29\ubb38 \ud69f\uc218\uc640 \uc774\uc804 \ud658\uc790\uc640\uc758 \ucc28\uc774\ub97c \uacc4\uc0b0\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (PatientID int, MentalHealthVisits int); INSERT INTO MentalHealthParity (PatientID, MentalHealthVisits) VALUES (1, 5), (2, 3), (3, 6), (4, 4), (5, 8), (6, 7), (7, 6);", "output": "SELECT PatientID, MentalHealthVisits, LAG(MentalHealthVisits) OVER (ORDER BY PatientID) AS PreviousVisits, MentalHealthVisits - LAG(MentalHealthVisits) OVER (ORDER BY PatientID) AS VisitDifference, ROW_NUMBER() OVER (ORDER BY PatientID) AS Rank FROM MentalHealthParity;"}
{"input": " \ud328\ubc00\ub9ac\ub370\uc774 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud558\ub294 \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Events (id INT, name VARCHAR(20)); INSERT INTO Events (id, name) VALUES (1, 'Family Day'); CREATE TABLE Visitor_Events (visitor_id INT, event_id INT); ALTER TABLE Visitors ADD COLUMN age INT;", "output": "SELECT AVG(Visitors.age) FROM Visitors JOIN Visitor_Events ON Visitors.id = Visitor_Events.visitor_id JOIN Events ON Visitor_Events.event_id = Events.id WHERE Events.name = 'Family Day';"}
{"input": " \uac01 \ucc44\uad74 \ud604\uc7a5\uc758 \uc6d4 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_site (id INT, name TEXT, location TEXT); INSERT INTO mining_site (id, name, location) VALUES (1, 'Lithium Mine', 'Bolivia'), (2, 'Cobalt Mine', 'Democratic Republic of Congo'); CREATE TABLE energy_usage (id INT, mine_id INT, date DATE, usage REAL); INSERT INTO energy_usage (id, mine_id, date, usage) VALUES (1, 1, '2022-01-01', 50000), (2, 1, '2022-02-01', 55000), (3, 1, '2022-03-01', 60000), (4, 2, '2022-01-01', 20000), (5, 2, '2022-02-01', 22000), (6, 2, '2022-03-01', 25000);", "output": "SELECT mine_id, AVG(usage) as avg_energy_consumption FROM energy_usage GROUP BY mine_id;"}
{"input": " 'social_media' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ud558\ub8e8 \ud3c9\uade0 \uac8c\uc2dc\ubb3c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, user_id INT, content TEXT, timestamp TIMESTAMP);", "output": "SELECT AVG(COUNT(posts.id)/86400) AS avg_posts_per_day FROM posts;"}
{"input": "2021\ub144 1\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ud56d\uad6c\ub2f9 \uc120\ubc15\uc5d0 \uc120\uc801\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50));CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50));CREATE TABLE containers (container_id INT, container_quantity INT, port_id INT, vessel_id INT, load_date DATE); INSERT INTO ports VALUES (1, 'PortA'), (2, 'PortB'), (3, 'PortC'); INSERT INTO vessels VALUES (101, 'VesselX'), (102, 'VesselY'), (103, 'VesselZ');", "output": "SELECT p.port_name, SUM(c.container_quantity) AS total_containers_loaded FROM containers c JOIN ports p ON c.port_id = p.port_id JOIN (SELECT DISTINCT vessel_id FROM containers WHERE load_date BETWEEN '2021-01-01' AND '2021-01-31') v ON c.vessel_id = v.vessel_id WHERE c.load_date BETWEEN '2021-01-01' AND '2021-01-31' GROUP BY p.port_name;"}
{"input": " \uc8fc\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 1\uc778\ub2f9 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pacific_water_usage(state VARCHAR(20), usage NUMERIC(10,2), population NUMERIC(10,2)); INSERT INTO pacific_water_usage VALUES ('California', 50.67, 39546780), ('Hawaii', 60.78, 1456789), ('Alaska', 70.89, 71567890), ('Oregon', 80.90, 4178901), ('Washington', 90.10, 7189012);", "output": "SELECT state, AVG(usage) FROM pacific_water_usage GROUP BY state;"}
{"input": " \uc548\uc804 \ud504\ub85c\ud1a0\ucf5c\uacfc \ud574\ub2f9 \uacf5\uc7a5 \uc704\uce58\uac00 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \ud654\ud559 \uc81c\ud488\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_products (id INT, name TEXT, category TEXT); INSERT INTO chemical_products (id, name, category) VALUES (1, 'Product A', 'Category X'), (2, 'Product B', 'Category Y'), (3, 'Product C', 'Category Z'); CREATE TABLE safety_protocols (id INT, product_id INT, plant_id INT, protocol TEXT); INSERT INTO safety_protocols (id, product_id, plant_id, protocol) VALUES (1, 1, 1, 'Protocol 1'), (2, 2, 2, 'Protocol 2'), (3, 3, 3, 'Protocol 3'); CREATE TABLE plants (id INT, name TEXT, city TEXT, state TEXT); INSERT INTO plants (id, name, city, state) VALUES (1, 'Plant A', 'City A', 'State A'), (2, 'Plant B', 'City B', 'State B'), (3, 'Plant C', 'City C', 'State C');", "output": "SELECT chemical_products.name, safety_protocols.protocol, plants.name AS plant_location FROM chemical_products JOIN safety_protocols ON chemical_products.id = safety_protocols.product_id JOIN plants ON safety_protocols.plant_id = plants.id;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0\uc11c \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ud68c\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE companies (id INT, name TEXT, country TEXT); CREATE TABLE fundings (id INT, company_id INT, round TEXT, country TEXT); INSERT INTO companies (id, name, country) VALUES (1, 'Acme Inc', 'USA'), (2, 'Zebra Corp', 'Canada'), (3, 'Dino Tech', 'USA'), (4, 'Elephant Inc', 'Canada'), (5, 'Fox Enterprises', 'USA'); INSERT INTO fundings (id, company_id, round, country) VALUES (1, 1, 'Seed', 'USA'), (2, 1, 'Series A', 'Canada'), (3, 2, 'Seed', 'Canada'), (4, 2, 'Series A', 'USA'), (5, 3, 'Seed', 'USA'), (6, 4, 'Seed', 'Canada'), (7, 4, 'Series A', 'Canada'), (8, 5, 'Seed', 'USA');", "output": "SELECT companies.name FROM companies INNER JOIN fundings AS us_fundings ON companies.id = us_fundings.company_id AND us_fundings.country = 'USA' INNER JOIN fundings AS canada_fundings ON companies.id = canada_fundings.company_id AND canada_fundings.country = 'Canada' GROUP BY companies.name HAVING COUNT(DISTINCT companies.id) > 1;"}
{"input": " 2019\ub144 \uc0dd\uc0b0 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc720\ub7fd \uc0c1\uc704 3\uac1c \uc138\ub968 \uc0dd\uc0b0\uc5c5\uccb4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CeriumProduction (Company VARCHAR(50), Year INT, Production FLOAT, Country VARCHAR(50)); INSERT INTO CeriumProduction(Company, Year, Production, Country) VALUES ('CompanyA', 2018, 189.2, 'Germany'), ('CompanyA', 2019, 215.3, 'Germany'), ('CompanyA', 2020, 231.1, 'Germany'), ('CompanyB', 2018, 136.8, 'France'), ('CompanyB', 2019, 152.4, 'France'), ('CompanyB', 2020, 171.2, 'France'), ('CompanyC', 2018, 101.9, 'UK'), ('CompanyC', 2019, 115.6, 'UK'), ('CompanyC', 2020, 122.5, 'UK');", "output": "SELECT Company, Production FROM (SELECT Company, Production, ROW_NUMBER() OVER (ORDER BY Production DESC) as rn FROM CeriumProduction WHERE Year = 2019 AND Country IN ('Germany', 'France', 'UK')) t WHERE rn <= 3;"}
{"input": " '\uc544\uc2dc\uc544'\uc5d0 10\uac1c \uc774\uc0c1\uc758 \uac8c\uc2dc\ubb3c\uc744 \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE users (id INT, region VARCHAR(20)); INSERT INTO users (id, region) VALUES (1, 'North America'), (2, 'Europe'), (3, 'Asia'); CREATE TABLE posts (id INT, user_id INT, post_date DATE); INSERT INTO posts (id, user_id, post_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-01-02'), (3, 2, '2022-01-01'), (4, 3, '2022-01-01'), (5, 3, '2022-01-01'), (6, 3, '2022-01-02');", "output": "SELECT COUNT(*) FROM (SELECT user_id FROM posts JOIN users ON posts.user_id = users.id WHERE users.region = 'Asia' GROUP BY user_id HAVING COUNT(*) > 10) AS subquery;"}
{"input": " '\uce90\ub098\ub2e4'\uc0b0 \uc131\ubd84\uc744 \uc0ac\uc6a9\ud558\uace0 2019-01-01 \uc774\uc804\uc5d0 \uc548\uc804 \uae30\ub85d\uc774 \uc788\ub294 \ubaa8\ub4e0 \uc81c\ud488\uc744 \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE ingredient (product_id INT, ingredient TEXT, origin TEXT);", "output": "SELECT DISTINCT product_id FROM ingredient WHERE origin = 'Canada' INTERSECT SELECT DISTINCT product_id FROM safety_record WHERE report_date < '2019-01-01';"}
{"input": " 2016\ub144 \"GlobalFleet\" \ud68c\uc0ac\uc758 \ud56d\ud574\ub2f9 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name VARCHAR(255)); INSERT INTO company (id, name) VALUES (1, 'GlobalFleet'); CREATE TABLE vessel (id INT, company_id INT, name VARCHAR(255)); CREATE TABLE voyage (id INT, vessel_id INT, weight INT, year INT); INSERT INTO company (id, name) VALUES (1, 'GlobalFleet'); INSERT INTO vessel (id, company_id, name) VALUES (1, 1, 'VesselA'), (2, 1, 'VesselB'), (3, 1, 'VesselC'); INSERT INTO voyage (id, vessel_id, weight, year) VALUES (1, 1, 1000, 2016), (2, 1, 1200, 2015), (3, 2, 1500, 2016), (4, 2, 1600, 2015), (5, 3, 1400, 2016);", "output": "SELECT AVG(voyage.weight) FROM company INNER JOIN vessel ON company.id = vessel.company_id INNER JOIN voyage ON vessel.id = voyage.vessel_id WHERE company.name = 'GlobalFleet' AND voyage.year = 2016;"}
{"input": "\uac01 \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub41c \uc9c0\uc18d \uac00\ub2a5 \uc81c\ud488\uacfc \ube44\uc9c0\uc18d \uac00\ub2a5 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uacb0\uacfc\ub97c \ud544\ud130\ub9c1\ud558\uc5ec \uac01 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c 400\uac1c \uc774\uc0c1 \ud310\ub9e4\ub41c \ub9e4\uc7a5\ub9cc \ud45c\uc2dc\ud569\ub2c8\uae4c?", "context": "CREATE TABLE store (id INT PRIMARY KEY, name VARCHAR(100), location VARCHAR(50), sustainable BOOLEAN); CREATE TABLE sales (id INT PRIMARY KEY, store_id INT, product_id INT, quantity INT, date DATE); CREATE TABLE product (id INT PRIMARY KEY, name VARCHAR(100), manufacturer_id INT, price DECIMAL(5,2), sustainable BOOLEAN); CREATE TABLE manufacturer (id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50), sustainable BOOLEAN);", "output": "SELECT store.name as store_name, SUM(sales.quantity) as total_sold FROM sales INNER JOIN store ON sales.store_id = store.id INNER JOIN product ON sales.product_id = product.id GROUP BY store.name HAVING total_sold > 400;"}
{"input": "\ub300\ub9c8\ucd08 \uc81c\ud488\uc744 \ud55c \ubc88\ub3c4 \ud310\ub9e4\ud55c \uc801\uc774 \uc5c6\ub294 \uc57d\uad6d\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE DispensaryProductData (DispensaryName VARCHAR(50), ProductSold INT); INSERT INTO DispensaryProductData (DispensaryName, ProductSold) VALUES ('Green Earth Dispensary', 100), ('Buds and Beyond', 200), ('The Healing Center', 300), ('Elevated Roots', 0), ('Emerald Fields', 500);", "output": "SELECT DispensaryName FROM DispensaryProductData WHERE ProductSold = 0;"}
{"input": " 'BOS' \ucc3d\uace0 \uc7ac\uace0 \uc911 \uc544\uc9c1 \ucd9c\uace0\ub418\uc9c0 \uc54a\uc740 \ud488\ubaa9\uc758 \uc774\ub984\uacfc \uc218\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse (id VARCHAR(5), name VARCHAR(10), location VARCHAR(15)); INSERT INTO warehouse (id, name, location) VALUES ('W01', 'BOS', 'Boston'), ('W02', 'NYC', 'New York'); CREATE TABLE inventory (item_id VARCHAR(10), item_name VARCHAR(20), warehouse_id VARCHAR(5), quantity INT); INSERT INTO inventory (item_id, item_name, warehouse_id, quantity) VALUES ('I001', 'Apples', 'W01', 100), ('I002', 'Bananas', 'W01', 200), ('I003', 'Cherries', 'W02', 150); CREATE TABLE shipment (item_id VARCHAR(10), warehouse_id VARCHAR(5), shipped_quantity INT); INSERT INTO shipment (item_id, warehouse_id, shipped_quantity) VALUES ('I001', 'W01', 50), ('I002', 'W01', 100);", "output": "SELECT i.item_name, i.quantity FROM inventory i JOIN warehouse w ON i.warehouse_id = w.id WHERE w.name = 'BOS' AND i.item_id NOT IN (SELECT item_id FROM shipment);"}
{"input": " 'GameA'\uc640 'GameB'\ub97c \ud50c\ub808\uc774\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users_games (user_id INT, game_id INT, played_at TIMESTAMP); INSERT INTO users_games (user_id, game_id, played_at) VALUES (1, 1, '2021-01-01 10:00:00'), (2, 1, '2021-01-02 11:00:00'), (3, 2, '2021-01-03 12:00:00'), (4, 2, '2021-01-04 13:00:00'), (5, 3, '2021-01-05 14:00:00');", "output": "SELECT game_id, COUNT(DISTINCT user_id) as unique_users FROM users_games WHERE game_id IN (1, 2) GROUP BY game_id;"}
{"input": " \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \uc774\uc218\ud558\uc9c0 \uc54a\uc740 \uc7a5\uc560 \ud559\uc0dd\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE students_disabilities (student_id INT, has_disability BOOLEAN, completed_support_program BOOLEAN); INSERT INTO students_disabilities (student_id, has_disability, completed_support_program) VALUES (1, TRUE, FALSE), (2, FALSE, FALSE);", "output": "SELECT (COUNT(*) FILTER (WHERE has_disability = TRUE AND completed_support_program = FALSE)) * 100.0 / (SELECT COUNT(*) FROM students_disabilities WHERE has_disability = TRUE) AS percentage;"}
{"input": "\uac1c\ubc29\ud615 \uad50\uc721\ud559'\uc5d0\uc11c \uc804\ubb38\uc131 \uac1c\ubc1c\uc744 \uc774\uc218\ud55c \uad50\uc0ac\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, name TEXT, professional_development TEXT); INSERT INTO teachers (teacher_id, name, professional_development) VALUES (1, 'Ms. Johnson', 'Open Pedagogy, Blended Learning'), (2, 'Mr. Smith', 'Blended Learning'), (3, 'Ms. Garcia', 'Open Pedagogy');", "output": "SELECT COUNT(*) FROM teachers WHERE professional_development LIKE '%Open Pedagogy%';"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc0ac\uac74\uc744 \ucc98\ub9ac\ud55c \uc0c1\uc704 3\uba85\uc758 \ubcc0\ud638\uc0ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE attorneys (id INT, name VARCHAR(50), cases_handled INT, region VARCHAR(50), billable_rate DECIMAL(10,2)); INSERT INTO attorneys (id, name, cases_handled, region, billable_rate) VALUES (1, 'John Lee', 40, 'Northeast', 200.00); INSERT INTO attorneys (id, name, cases_handled, region, billable_rate) VALUES (2, 'Jane Doe', 50, 'Southwest', 250.00);", "output": "SELECT name, cases_handled, RANK() OVER (ORDER BY cases_handled DESC) as rank FROM attorneys;"}
{"input": " \uc608\uce21 \uc2dc\uc791 \uc5f0\ub3c4\ub97c \uae30\uc900\uc73c\ub85c \uae30\ub2c8\ub9cc\uc758 \uc6b0\ubb3c\uc5d0 \ub300\ud55c \uc6b0\ubb3c ID, \uc2dc\uc791 \uc5f0\ub3c4 \ubc0f \ud3c9\uade0 \uc0dd\uc0b0\ub7c9 \uc608\uce21\uc744 \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE gulf_of_guinea_forecasts (forecast_id INT, well_id INT, start_year INT, end_year INT, production_forecast FLOAT); INSERT INTO gulf_of_guinea_forecasts (forecast_id, well_id, start_year, end_year, production_forecast) VALUES (21, 17, 2022, 2022, 900.0), (22, 17, 2023, 2023, 950.0), (23, 18, 2022, 2022, 1000.0), (24, 18, 2023, 2023, 1050.0);", "output": "SELECT well_id, start_year, AVG(production_forecast) OVER (PARTITION BY well_id ORDER BY start_year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as avg_forecast FROM gulf_of_guinea_forecasts WHERE wells.location = 'Gulf of Guinea';"}
{"input": " 'carbon_pricing' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c 'DE' \ubc0f 'IT' \uad6d\uac00\uc758 \ud0c4\uc18c \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_pricing.carbon_prices (country varchar(2), year int, price decimal(5,2)); INSERT INTO carbon_pricing.carbon_prices (country, year, price) VALUES ('FR', 2020, 30.5), ('FR', 2021, 32.0), ('DE', 2020, 28.0), ('DE', 2021, 30.2), ('IT', 2020, 25.0), ('IT', 2021, 27.5);", "output": "SELECT country, price FROM carbon_pricing.carbon_prices WHERE country IN ('DE', 'IT');"}
{"input": " \uac01 \uc8fc\ub9c8\ub2e4 \uc791\uc5c5\uc7a5\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc548\uc804 \ubb38\uc81c\uc758 \ucd5c\uc18c \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplaces (id INT, state VARCHAR(2), safety_issues INT); INSERT INTO workplaces (id, state, safety_issues) VALUES (1, 'NY', 10), (2, 'CA', 5), (3, 'TX', 15), (4, 'FL', 8);", "output": "SELECT state, MIN(safety_issues) OVER (PARTITION BY state) AS min_safety_issues FROM workplaces;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ub098\ubb34\uc885 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE tree_data (region VARCHAR(255), species VARCHAR(255));", "output": "SELECT region, COUNT(DISTINCT species) FROM tree_data GROUP BY region;"}
{"input": " \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uad70\uc0ac \uae30\uc9c0\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_bases (id INT, name TEXT, location TEXT, type TEXT);INSERT INTO military_bases (id, name, location, type) VALUES (1, 'Andersen AFB', 'Guam', 'Air Force');INSERT INTO military_bases (id, name, location, type) VALUES (2, 'Camp H.M. Smith', 'Hawaii', 'Joint Base');", "output": "SELECT SUM(number_of_bases) FROM (SELECT COUNT(*) AS number_of_bases FROM military_bases WHERE location = 'Pacific') AS subquery;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uacf5\uae09\uc5c5\uccb4\ub85c\ubd80\ud130 \uc7ac\ub8cc\ub97c \uc870\ub2ec\ud558\ub294 \uce98\ub9ac\ud3ec\ub2c8\uc544 \ub0b4 \ubaa8\ub4e0 \ub808\uc2a4\ud1a0\ub791\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Restaurant (id INT, name VARCHAR(50), type VARCHAR(50), location VARCHAR(50)); INSERT INTO Restaurant (id, name, type, location) VALUES (1, 'Plant-Based Bistro', 'Vegan', 'California'); INSERT INTO Restaurant (id, name, type, location) VALUES (2, 'Seafood Shack', 'Seafood', 'Florida'); CREATE TABLE Supplier (id INT, name VARCHAR(50), location VARCHAR(50), sustainable BOOLEAN); INSERT INTO Supplier (id, name, location, sustainable) VALUES (1, 'Green Growers', 'California', true); INSERT INTO Supplier (id, name, location, sustainable) VALUES (2, 'Fresh Catch', 'Florida', false); CREATE TABLE RestaurantSupplier (restaurant_id INT, supplier_id INT); INSERT INTO RestaurantSupplier (restaurant_id, supplier_id) VALUES (1, 1);", "output": "SELECT Restaurant.name FROM Restaurant INNER JOIN RestaurantSupplier ON Restaurant.id = RestaurantSupplier.restaurant_id INNER JOIN Supplier ON RestaurantSupplier.supplier_id = Supplier.id WHERE Restaurant.location = 'California' AND Supplier.sustainable = true;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uc624\uc2a4\ud2b8\ub808\uc77c\ub9ac\uc544\uc640 \ub274\uc9c8\ub79c\ub4dc\uc758 \uc0ac\uc6a9\uc790 \uc911 \ub370\uc774\ud130 \uac1c\uc778 \uc815\ubcf4 \ubcf4\ud638 \uc124\uc815\uc774 \ubcc0\uacbd\ub41c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA socialmedia;CREATE TABLE user_settings (id INT, user_id INT, setting VARCHAR(255), timestamp TIMESTAMP);INSERT INTO user_settings (id, user_id, setting, timestamp) VALUES (1, 1, 'privacy', '2022-03-01 12:00:00'), (2, 2, 'privacy', '2022-01-15 15:00:00');", "output": "SELECT SUM(CASE WHEN region = 'Australia' THEN 1 ELSE 0 END + CASE WHEN region = 'New Zealand' THEN 1 ELSE 0 END) FROM (SELECT user_id, EXTRACT(MONTH FROM timestamp) AS month, CASE WHEN country = 'Australia' THEN 'Australia' WHEN country = 'New Zealand' THEN 'New Zealand' END AS region FROM socialmedia.users INNER JOIN socialmedia.user_settings ON users.id = user_settings.user_id WHERE setting = 'privacy' AND EXTRACT(YEAR FROM timestamp) = 2022 AND EXTRACT(MONTH FROM timestamp) BETWEEN 1 AND 3) AS subquery;"}
{"input": " \uac01\uac01 15\uac1c \uc774\uc0c1\uc758 \uc11d\uae30\uc640 \ud1a0\uae30 \ub4f1\uc774 \ucd9c\ud1a0\ub41c \ubc1c\uad74\ud604\uc7a5\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE SiteQ (site_id INT, site_name VARCHAR(20), artifact_type VARCHAR(20), quantity INT); INSERT INTO SiteQ (site_id, site_name, artifact_type, quantity) VALUES (1, 'SiteQ', 'Stone Tools', 22), (2, 'SiteR', 'Pottery', 18), (3, 'SiteS', 'Stone Tools', 30), (4, 'SiteT', 'Pottery', 25);", "output": "SELECT site_name FROM SiteQ WHERE artifact_type = 'Stone Tools' AND quantity > 15 INTERSECT SELECT site_name FROM SiteQ WHERE artifact_type = 'Pottery' AND quantity > 15;"}
{"input": " \ub18d\uad6c \uacbd\uae30\uc5d0 \ucc38\uc11d\ud558\ub294 \uc5ec\uc131 \ud32c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fan_demographics_basketball (id INT PRIMARY KEY, fan_id INT, age INT, gender VARCHAR(255))", "output": "SELECT (COUNT(fd.id) * 100.0 / (SELECT COUNT(*) FROM fan_demographics_basketball)) AS percentage"}
{"input": " \uacf5\uac1c\uad50\uc721\ud559 \ubc0f \uc131\ubcc4 \uacfc\ubaa9\uc744 \uc218\uac15\ud560 \uc218 \uc788\ub294 \ud559\uc0dd\uc758 \ucd5c\uc18c \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Students (StudentID INT, Age INT, Gender VARCHAR(10), CoursesTaken VARCHAR(20)); INSERT INTO Students (StudentID, Age, Gender, CoursesTaken) VALUES (1, 22, 'Male', 'Lifelong Learning'); INSERT INTO Students (StudentID, Age, Gender, CoursesTaken) VALUES (2, 20, 'Female', 'Open Pedagogy'); INSERT INTO Students (StudentID, Age, Gender, CoursesTaken) VALUES (3, 25, 'Male', 'Lifelong Learning'); INSERT INTO Students (StudentID, Age, Gender, CoursesTaken) VALUES (4, 23, 'Female', 'Open Pedagogy'); INSERT INTO Students (StudentID, Age, Gender, CoursesTaken) VALUES (5, 21, 'Non-binary', 'Open Pedagogy');", "output": "SELECT MIN(Age), Gender FROM Students WHERE CoursesTaken = 'Open Pedagogy' GROUP BY Gender;"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74\uc5d0\uc11c \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud55c \uc5b8\uc5b4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE languages (language_id INT, country_id INT, language_name VARCHAR(255), status VARCHAR(255)); INSERT INTO languages VALUES (1, 1, 'Spanish', 'Preserved'), (2, 1, 'Quechua', 'Endangered'), (3, 2, 'Portuguese', 'Preserved'), (4, 2, 'Guarani', 'Endangered'), (5, 3, 'English', 'Preserved'), (6, 3, 'Mapudungun', 'Endangered');", "output": "SELECT (COUNT(CASE WHEN status = 'Endangered' THEN 1 ELSE NULL END)/COUNT(*))*100 AS endangered_percentage FROM languages WHERE country_id IN (SELECT country_id FROM countries WHERE continent = 'South America');"}
{"input": " \ucde8\uc57d\uc810\uc774 \ubc1c\uacac\ub41c \uac00\uc7a5 \ube60\ub978 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE schema1.vulnerabilities (id INT, name VARCHAR(255), severity VARCHAR(50), description TEXT, date_discovered DATE, last_observed DATE); INSERT INTO schema1.vulnerabilities (id, name, severity, description, date_discovered, last_observed) VALUES (1, 'SQL Injection', 'Critical', 'Allows unauthorized access', '2021-01-01', '2021-02-01');", "output": "SELECT MIN(date_discovered) FROM schema1.vulnerabilities;"}
{"input": " 2021\ub144 \ud558\ubc18\uae30\uc5d0\ub294 \uc5b4\ub5a4 \uc57d\ud488\uc774 \uc2b9\uc778\ub410\ub098\uc694?", "context": "CREATE TABLE drug_approval (drug VARCHAR(255), approval_date DATE); INSERT INTO drug_approval (drug, approval_date) VALUES ('DrugC', '2021-06-15'), ('DrugD', '2022-08-30'), ('DrugE', '2021-12-31'), ('DrugF', '2021-01-01');", "output": "SELECT drug FROM drug_approval WHERE approval_date BETWEEN '2021-07-01' AND '2021-12-31';"}
{"input": " \ubdf0\ud2f0 \uc81c\ud488 \uc720\ud615\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE beauty_sales (product_type VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO beauty_sales (product_type, revenue) VALUES ('Skincare', 7500.00), ('Makeup', 5000.00), ('Haircare', 3000.00), ('Bodycare', 4000.00);", "output": "SELECT product_type, SUM(revenue) as total_revenue FROM beauty_sales GROUP BY product_type;"}
{"input": "\uc5f0\uac04 \ud3c9\uade0 \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE military_innovation (project_year INT, project_status VARCHAR(255));", "output": "SELECT AVG(project_year) FROM military_innovation WHERE project_status = 'completed';"}
{"input": " '\uc774\ud0c8\ub9ac\uc544' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uaca9\uc774 $16.00\ubcf4\ub2e4 \ub192\uc740 \uc694\ub9ac\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE menu_engineering(dish VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2), restaurant VARCHAR(255));", "output": "SELECT dish FROM menu_engineering WHERE category = 'Italian' AND price > 16.00;"}
{"input": " \ub9e4\uc6d4 \uae30\ubd80\uc790\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL(10,2)); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationAmount) VALUES (1, 1, '2022-01-01', 100.00), (2, 1, '2022-01-15', 200.00), (3, 2, '2022-02-01', 300.00), (4, 2, '2022-02-15', 400.00);", "output": "SELECT DonorID, EXTRACT(MONTH FROM DonationDate) AS Month, SUM(DonationAmount) OVER (PARTITION BY DonorID, EXTRACT(MONTH FROM DonationDate) ORDER BY DonorID, EXTRACT(MONTH FROM DonationDate)) AS TotalDonation FROM Donations;"}
{"input": "\uc8fc\ubcc4, \uc5f0\ub839\ub300\ubcc4 \ub18d\ucd0c \uc9c0\uc5ed\uc758 \ub2f9\ub1e8\ubcd1 \uc720\ubcd1\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, age INT, has_diabetes BOOLEAN, state VARCHAR); INSERT INTO patients (patient_id, age, has_diabetes, state) VALUES (1, 60, true, 'Ohio'); INSERT INTO patients (patient_id, age, has_diabetes, state) VALUES (2, 55, false, 'Ohio'); CREATE TABLE rural_areas (area_id INT, state VARCHAR); INSERT INTO rural_areas (area_id, state) VALUES (1, 'Ohio'); INSERT INTO rural_areas (area_id, state) VALUES (2, 'Texas');", "output": "SELECT state, FLOOR(age / 10) * 10 AS age_range, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patients JOIN rural_areas ON patients.state = rural_areas.state) AS prevalence FROM patients JOIN rural_areas ON patients.state = rural_areas.state WHERE has_diabetes = true GROUP BY state, age_range;"}
{"input": "\ud0c0\uc784\uc2a4\ud0ec\ud504\uc5d0 \ub530\ub77c \uc815\ub82c\ub41c \uac01 \uc0ac\ub840\uc758 \uc0ac\ub840 \uc774\ubca4\ud2b8 \uc21c\uc11c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE case_events (id INT, case_id INT, event_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO case_events (id, case_id, event_type, timestamp) VALUES (1, 1, 'Filing', '2022-01-01 10:00:00'); INSERT INTO case_events (id, case_id, event_type, timestamp) VALUES (2, 1, 'Hearing', '2022-01-02 14:00:00');", "output": "SELECT case_id, event_type, timestamp, ROW_NUMBER() OVER(PARTITION BY case_id ORDER BY timestamp) as sequence FROM case_events;"}
{"input": " '\ubcf4\uc2a4\ud134 \uc140\ud2f1\uc2a4'\uc5d0\uc11c \ubaa8\ub4e0 \uc120\uc218 \uc0ad\uc81c", "context": "CREATE TABLE teams (id INT, name VARCHAR(255)); INSERT INTO teams (id, name) VALUES (1, 'Boston Celtics'), (2, 'Golden State Warriors');", "output": "DELETE FROM players WHERE team_id IN (SELECT id FROM teams WHERE name = 'Boston Celtics');"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \ud574\uc0b0\ubb3c\uc758 \uc6d4\ubcc4 \ucd1d \ud310\ub9e4\ub7c9 \ud45c\uc2dc", "context": "CREATE TABLE orders(order_id INT, order_date DATE, menu_item_id INT, quantity INT); CREATE TABLE menu_items(menu_item_id INT, name TEXT, type TEXT, is_sustainable BOOLEAN, price DECIMAL);", "output": "SELECT SUM(menu_items.price * orders.quantity) FROM menu_items JOIN orders ON menu_items.menu_item_id = orders.menu_item_id JOIN (SELECT EXTRACT(MONTH FROM order_date) as month, EXTRACT(YEAR FROM order_date) as year, menu_item_id FROM orders WHERE is_sustainable = TRUE GROUP BY month, year, menu_item_id) as sustainable_orders ON orders.menu_item_id = sustainable_orders.menu_item_id AND EXTRACT(MONTH FROM orders.order_date) = sustainable_orders.month AND EXTRACT(YEAR FROM orders.order_date) = sustainable_orders.year WHERE menu_items.is_sustainable = TRUE;"}
{"input": " 100\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc758 \ud22c\uc790\ub97c \ud1b5\ud574 \uc0ac\ud558\ub77c \uc774\ub0a8 \uc544\ud504\ub9ac\uce74\uc758 \uacbd\uc81c \ub2e4\uac01\ud654 \ub178\ub825\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DiversificationEfforts (id INT, effort_name TEXT, location TEXT, investment FLOAT); INSERT INTO DiversificationEfforts (id, effort_name, location, investment) VALUES (1, 'Renewable Energy', 'Sub-Saharan Africa', 1500000); INSERT INTO DiversificationEfforts (id, effort_name, location, investment) VALUES (2, 'Tourism Development', 'Sub-Saharan Africa', 800000);", "output": "SELECT effort_name, location FROM DiversificationEfforts WHERE investment > 1000000 AND location LIKE '%Sub-Saharan Africa%';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \ud3c9\uade0 \uae30\ud6c4\ubcc0\ud654 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE MitigationProjects (ID INT, Country VARCHAR(255), Projects INT); INSERT INTO MitigationProjects (ID, Country, Projects) VALUES (1, 'Nigeria', 5), (2, 'Kenya', 7), (3, 'South Africa', 8), (4, 'Egypt', 6), (5, 'Morocco', 9);", "output": "SELECT AVG(Projects) FROM MitigationProjects WHERE Country IN ('Nigeria', 'Kenya', 'South Africa', 'Egypt', 'Morocco');"}
{"input": " \uac01 \uad6d\uac00\uc758 \ucc44\uad74 \ud604\uc7a5 \uc218\uc640 \uac01 \ucc44\uad74 \ud604\uc7a5\uc758 \ucd1d \uc9c1\uc6d0 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mining_sites (site_id INT, country VARCHAR(50), num_employees INT); INSERT INTO mining_sites (site_id, country, num_employees) VALUES (1, 'Canada', 200), (2, 'USA', 300), (3, 'Mexico', 150);", "output": "SELECT country, site_id, num_employees, COUNT(site_id) OVER (PARTITION BY country) as total_sites FROM mining_sites;"}
{"input": " 2023\ub144 3\uc6d4 \ub78d\ud14c\ud504 \ud574\uc758 \ucd5c\ub300 \ud574\ube59 \ub450\uaed8\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sea_ice_thickness (location TEXT, date DATE, thickness REAL); INSERT INTO sea_ice_thickness (location, date, thickness) VALUES ('Laptev Sea', '2023-03-01', 2.5), ('Laptev Sea', '2023-03-02', 2.7);", "output": "SELECT MAX(thickness) FROM sea_ice_thickness WHERE location = 'Laptev Sea' AND date BETWEEN '2023-03-01' AND '2023-03-31';"}
{"input": " \uc5ec\uc131\uadfc\ub85c\uc790\uc758 \uc8fc\ub2f9 \ucd5c\ub300 \uadfc\ub85c\uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WorkingHoursData (EmployeeID INT, Gender VARCHAR(10), WeeklyHours DECIMAL(10, 2)); INSERT INTO WorkingHoursData (EmployeeID, Gender, WeeklyHours) VALUES (1, 'Female', 40.00), (2, 'Male', 45.00), (3, 'Female', 50.00);", "output": "SELECT MAX(WeeklyHours) FROM WorkingHoursData WHERE Gender = 'Female';"}
{"input": " \uad6d\uac00\ubcc4 \uc5ec\uc131 \ucc3d\uc5c5\uc790\uc758 \ube44\uc728\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE founders (id INT, name VARCHAR(255), gender VARCHAR(10), country VARCHAR(255)); INSERT INTO founders (id, name, gender, country) VALUES (1, 'John Doe', 'Male', 'USA'), (2, 'Jane Smith', 'Female', 'USA'), (3, 'Mike Johnson', 'Male', 'Canada'), (4, 'Alice Williams', 'Female', 'Canada'), (5, 'Bob Brown', 'Male', 'UK'), (6, 'Claire Johnson', 'Female', 'UK'), (7, 'Suresh Patel', 'Male', 'India'), (8, 'Priya Gupta', 'Female', 'India');", "output": "SELECT country, gender, COUNT(*) as head_count, ROUND(COUNT(*)*100.0/SUM(COUNT(*)) OVER (PARTITION BY country), 2) as gender_percentage FROM founders GROUP BY country, gender;"}
{"input": " \uce90\ub098\ub2e4\uc640 \ubbf8\uad6d\uc758 \uc0dd\ud0dc\uad00\uad11\uac1d\uc758 \ud3c9\uade0 \uc5ec\ud589 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tourism (id INT, country VARCHAR(50), tourist_type VARCHAR(50), trip_duration FLOAT); INSERT INTO tourism (id, country, tourist_type, trip_duration) VALUES (1, 'Canada', 'ecotourist', 12.5), (2, 'USA', 'ecotourist', 15.0);", "output": "SELECT AVG(trip_duration) FROM tourism WHERE tourist_type = 'ecotourist' AND country IN ('Canada', 'USA');"}
{"input": " \ub179\uc9c0 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \ub3c4\uc2dc\uc758 \ud1b5\ud569 \uc8fc\ud0dd \ube44\uc728\uacfc \ub179\uc9c0 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT PRIMARY KEY, name VARCHAR(50), population INT, green_space_percentage DECIMAL(5,2), inclusive_housing DECIMAL(5,2)); CREATE VIEW Inclusive_Cities AS SELECT * FROM City WHERE inclusive_housing > 0.5;", "output": "SELECT City.name, City.green_space_percentage, City.inclusive_housing * 100 as inclusive_housing_percentage FROM City INNER JOIN Inclusive_Cities ON City.id = Inclusive_Cities.id WHERE City.green_space_percentage = (SELECT MAX(green_space_percentage) FROM City) GROUP BY City.name;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uc758\uc57d\ud488 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc6d4 \ud3c9\uade0 R&D \uc9c0\ucd9c\uc744 \ud3c9\uade0 \uc9c0\ucd9c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drug_data (drug_id INT, drug_name TEXT, category TEXT, rd_expenditure INT, sale_date DATE);", "output": "SELECT category, AVG(rd_expenditure) AS avg_expenditure FROM drug_data WHERE sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE GROUP BY category ORDER BY avg_expenditure DESC;"}
{"input": " '\ubba4\uc9c0\uc5c4X'\uc5d0\uc11c \ub3c5\ud2b9\ud55c \uc790\ub8cc\ub97c \uc0b4\ud3b4\ubcfc\uae4c\uc694?", "context": "CREATE TABLE Museum_X (Artifact_ID INT, Material VARCHAR(255)); INSERT INTO Museum_X (Artifact_ID, Material) VALUES (1, 'Clay');", "output": "SELECT COUNT(DISTINCT Material) FROM Museum_X;"}
{"input": " \uc9c0\ub09c \ub2ec \uc778\ud50c\ub8e8\uc5b8\uc11c \uac8c\uc2dc\ubb3c\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc5b8\uae09\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \ube0c\ub79c\ub4dc \uc0c1\uc704 5\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE influencers (influencer_id INT, influencer_name TEXT);CREATE TABLE posts (post_id INT, post_text TEXT, influencer_id INT, post_date DATE);CREATE TABLE brands (brand_id INT, brand_name TEXT, brand_sustainable BOOLEAN);CREATE TABLE mentions (mention_id INT, post_id INT, brand_id INT);", "output": "SELECT b.brand_name, COUNT(m.mention_id) as mention_count FROM mentions m JOIN posts p ON m.post_id = p.post_id JOIN brands b ON m.brand_id = b.brand_id JOIN influencers i ON p.influencer_id = i.influencer_id WHERE b.brand_sustainable = TRUE AND p.post_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY b.brand_name ORDER BY mention_count DESC LIMIT 5;"}
{"input": " \ubb44\ubc14\uc774\uc640 \ub378\ub9ac\uc758 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WaterUsage (Location VARCHAR(100), Usage FLOAT, Date DATE); INSERT INTO WaterUsage (Location, Usage, Date) VALUES ('Mumbai', 150, '2022-01-01'), ('Delhi', 200, '2022-01-01');", "output": "SELECT Location, AVG(Usage) FROM WaterUsage GROUP BY Location;"}
{"input": " \uc544\uc9c1 \uc804\uc2dc \uc885\ub8cc\uc77c\uc774 \uc5c6\ub294 \uc791\uac00\ub97c \uc81c\uc678\ud558\uace0 'Artistic Wonders' \uac24\ub7ec\ub9ac\uc5d0 \uc804\uc2dc\ud55c \uc77c\ubcf8 \uc608\uc220\uac00\uc758 \ud3c9\uade0 \ud65c\ub3d9 \uae30\uac04\uc740 \uba87 \ub144\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(50), Nationality VARCHAR(50), ActiveYears INT, Gender VARCHAR(10));CREATE TABLE Paintings (PaintingID INT, PaintingName VARCHAR(50), ArtistID INT, DisplayStart DATE, DisplayEnd DATE);CREATE TABLE Gallery (GalleryID INT, GalleryName VARCHAR(50), City VARCHAR(50));INSERT INTO Artists VALUES (1, 'Claude Monet', 'French', 67, 'Male'); INSERT INTO Paintings VALUES (1, 'Water Lilies', 1, '2020-01-01', '2021-12-31'); INSERT INTO Gallery VALUES (1, 'Artistic Wonders', 'Paris');", "output": "SELECT AVG(ActiveYears) FROM Artists JOIN Paintings ON Artists.ArtistID = Paintings.ArtistID WHERE GalleryID IN (SELECT GalleryID FROM Gallery WHERE GalleryName = 'Artistic Wonders') AND Nationality = 'Japan' AND DisplayEnd IS NOT NULL;"}
{"input": " NSW \uac01 \ud604\uc7a5\uc758 \ucd5c\ub300 \uc0dd\uc0b0 \ub2a5\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site_capacity (site VARCHAR(20), state VARCHAR(20), capacity INT); INSERT INTO site_capacity (site, state, capacity) VALUES ('SiteA', 'NSW', 2000), ('SiteB', 'QLD', 1500), ('SiteC', 'NSW', 2500);", "output": "SELECT site, MAX(capacity) FROM site_capacity WHERE state = 'NSW' GROUP BY site;"}
{"input": " 2021\ub144\uacfc 2022\ub144 \ubbf8\uad6d \uc790\ub3d9\ucc28\uc1fc\uc758 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_auto_shows (show_name VARCHAR(50), year INT, attendees INT); INSERT INTO us_auto_shows (show_name, year, attendees) VALUES ('Detroit Auto Show', 2021, 550000), ('New York Auto Show', 2021, 800000), ('Los Angeles Auto Show', 2021, 700000), ('Detroit Auto Show', 2022, 600000), ('New York Auto Show', 2022, 1050000), ('Los Angeles Auto Show', 2022, 750000);", "output": "SELECT SUM(attendees) FROM us_auto_shows WHERE (year = 2021 OR year = 2022) AND (show_name = 'Detroit Auto Show' OR show_name = 'New York Auto Show' OR show_name = 'Los Angeles Auto Show');"}
{"input": "\uc9c0\ub09c 1\ub144\uac04 \uaddc\uc815\uc744 \uc900\uc218\ud55c \uc801\uc774 \uc5c6\ub294 \uc7ac\ubc30\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Cultivators (CultivatorID INT, CultivatorName VARCHAR(255)); CREATE TABLE Compliance (ComplianceID INT, CultivatorID INT, ComplianceMonth DATE); INSERT INTO Cultivators (CultivatorID, CultivatorName) VALUES (1, 'Happy Hemp Farms'); INSERT INTO Cultivators (CultivatorID, CultivatorName) VALUES (2, 'Kushy Kannabis'); INSERT INTO Compliance (ComplianceID, CultivatorID, ComplianceMonth) VALUES (1, 1, DATEADD(MONTH, -11, GETDATE())); INSERT INTO Compliance (ComplianceID, CultivatorID, ComplianceMonth) VALUES (2, 1, DATEADD(MONTH, -10, GETDATE())); INSERT INTO Compliance (ComplianceID, CultivatorID, ComplianceMonth) VALUES (3, 2, DATEADD(MONTH, -11, GETDATE()));", "output": "SELECT CultivatorName FROM Cultivators WHERE CultivatorID NOT IN (SELECT CultivatorID FROM Compliance WHERE ComplianceMonth >= DATEADD(MONTH, -12, GETDATE())) ORDER BY CultivatorName;"}
{"input": " \ud3c9\uade0 \uc704\ud5d8 \uc218\uc900\ubcf4\ub2e4 \ub0ae\uc740 \uc704\ud5d8 \uc218\uc900\uc758 \ud22c\uc790 \uc804\ub7b5\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE investment_strategies (id INT, strategy VARCHAR(50), risk_level INT); INSERT INTO investment_strategies (id, strategy, risk_level) VALUES (1, 'Impact Bonds', 30), (2, 'Green Equity Funds', 20), (3, 'Sustainable Real Estate', 40);", "output": "SELECT strategy, risk_level FROM investment_strategies WHERE risk_level < (SELECT AVG(risk_level) FROM investment_strategies);"}
{"input": " \uacc4\uc57d\uc790 X\uc758 \ubc29\uc0b0 \ud504\ub85c\uc81d\ud2b8 \uc2dc\uc791 \ubc0f \uc885\ub8cc \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ProjectTimelines (TimelineID INT, Contractor VARCHAR(255), StartDate DATE, EndDate DATE); INSERT INTO ProjectTimelines (TimelineID, Contractor, StartDate, EndDate) VALUES (1, 'Contractor X', '2021-01-01', '2021-12-31');", "output": "SELECT Contractor, StartDate, EndDate FROM ProjectTimelines WHERE Contractor = 'Contractor X';"}
{"input": " \uc18c\uc678\ub41c \uc9c0\uc5ed \uc0ac\ud68c\uc758 \uace0\uac1d \uc911 \ubbf8\uad6d\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \ud328\uc158 \uc544\uc774\ud15c\uc744 \uad6c\ub9e4\ud55c \uace0\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), community VARCHAR(50), country VARCHAR(50)); INSERT INTO customers (customer_id, name, community, country) VALUES (1, 'Jamal Johnson', 'Black', 'US'), (2, 'Maria Rodriguez', 'Latino', 'US'); CREATE TABLE products (product_id INT, name VARCHAR(50), sustainable BOOLEAN); INSERT INTO products (product_id, name, sustainable) VALUES (1, 'Eco-Friendly Dress', TRUE); CREATE TABLE sales (sale_id INT, customer_id INT, product_id INT); INSERT INTO sales (sale_id, customer_id, product_id) VALUES (1, 1, 1);", "output": "SELECT COUNT(*) FROM sales s INNER JOIN customers c ON s.customer_id = c.customer_id INNER JOIN products p ON s.product_id = p.product_id WHERE c.country = 'US' AND p.name = 'Eco-Friendly Dress' AND c.community IN ('Black', 'Latino', 'Native American', 'Asian', 'Pacific Islander');"}
{"input": " \ucd5c\uadfc 10\uacbd\uae30\uc5d0\uc11c \ud648\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc2b9\ub9ac\ub97c \uac70\ub454 \ud300\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE games (team TEXT, result TEXT); INSERT INTO games (team, result) VALUES ('Team A', 'win'), ('Team A', 'loss'), ('Team B', 'win');", "output": "SELECT team, COUNT(*) FILTER (WHERE result = 'win') OVER (PARTITION BY team ORDER BY team ROWS BETWEEN UNBOUNDED PRECEDING AND 9 PRECEDING) as home_wins FROM games WHERE result = 'win' ORDER BY home_wins DESC LIMIT 1;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uad50\uc0ac\uac00 \ucc38\uc11d\ud558\ub294 \uc804\ubb38\uc131 \uac1c\ubc1c \ud504\ub85c\uadf8\ub7a8\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name TEXT); INSERT INTO districts (district_id, district_name) VALUES (1, 'Downtown'), (2, 'Uptown'), (3, 'Suburbs'); CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, district_id INT); INSERT INTO teachers (teacher_id, teacher_name, district_id) VALUES (1, 'Mrs. Doe', 1), (2, 'Mr. Smith', 2), (3, 'Ms. Johnson', 3), (4, 'Mr. Williams', 1); CREATE TABLE professional_development (program_id INT, program_name TEXT, teacher_id INT); INSERT INTO professional_development (program_id, program_name, teacher_id) VALUES (1, 'Python for Educators', 1), (2, 'Data Science for Teachers', 2), (3, 'Inclusive Teaching', 3), (4, 'Open Pedagogy', 4), (5, 'Diversity and Inclusion', 1), (6, 'Curriculum Design', 2);", "output": "SELECT d.district_name, COUNT(pd.program_id) as num_programs FROM districts d JOIN teachers t ON d.district_id = t.district_id JOIN professional_development pd ON t.teacher_id = pd.teacher_id GROUP BY d.district_name;"}
{"input": " 'Region5'\uc758 \ubaa8\ub4e0 \uc18c\ubc29\uc11c\uc640 \uadf8 \uc218\uc6a9 \ub2a5\ub825\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Regions (RegionName VARCHAR(20), FireStationName VARCHAR(20), FireStationCapacity INT); INSERT INTO Regions (RegionName, FireStationName, FireStationCapacity) VALUES ('Region5', 'StationA', 25), ('Region5', 'StationB', 30);", "output": "SELECT FireStationName, FireStationCapacity FROM Regions WHERE RegionName = 'Region5';"}
{"input": " \ucd94\ucd9c\ub41c \uac01 \uad11\ubb3c\uc758 \ucd1d\ub7c9\uc740 \ud070 \uac83\ubd80\ud130 \uc21c\uc11c\ub300\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MineralExtraction (ExtractionID INT, MineName VARCHAR(50), Mineral VARCHAR(50), Quantity DECIMAL(10,2)); INSERT INTO MineralExtraction (ExtractionID, MineName, Mineral, Quantity) VALUES (1, 'ABC Mine', 'Coal', 150000.00); INSERT INTO MineralExtraction (ExtractionID, MineName, Mineral, Quantity) VALUES (2, 'DEF Mine', 'Gold', 5000.00); INSERT INTO MineralExtraction (ExtractionID, MineName, Mineral, Quantity) VALUES (3, 'GHI Mine', 'Iron Ore', 80000.00);", "output": "SELECT ExtractionID, MineName, Mineral, Quantity, ROW_NUMBER() OVER (ORDER BY Quantity DESC) as 'Rank' FROM MineralExtraction;"}
{"input": " \uac01 \ub098\ub77c\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE marine_species (name VARCHAR(255), country VARCHAR(255), species_count INT); INSERT INTO marine_species (name, country, species_count) VALUES ('Coral Reefs', 'Australia', 600), ('Kelp Forests', 'Canada', 400), ('Seagrass Meadows', 'Indonesia', 500);", "output": "SELECT country, species_count, COUNT(*) OVER (PARTITION BY country) as total_species_count FROM marine_species;"}
{"input": " 'mining_company' \ubd80\uc11c\uc640 'equipment_rental' \ubd80\uc11c\uc758 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_company(id INT, name VARCHAR(50), department VARCHAR(50)); CREATE TABLE equipment_rental(id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO mining_company (id, name, department) VALUES (1, 'John Doe', 'mining_company'), (2, 'Jane Smith', 'mining_company'), (3, 'Mike Johnson', 'equipment_rental');", "output": "SELECT COUNT(*) FROM ( (SELECT name FROM mining_company) UNION (SELECT name FROM equipment_rental) ) AS all_names;"}
{"input": "2020\ub144 \ubd81\ubbf8, \uc720\ub7fd, \uc544\uc2dc\uc544\uc758 \ucd1d \ud0c4\uc18c \uac00\uaca9 \uae30\uc900 \uc0c1\uc704 5\uac1c \ud0c4\uc18c \uac00\uaca9 \uc815\ucc45\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE carbon_pricing (country text, policy text, price decimal, year integer);", "output": "SELECT policy, SUM(price) as total_price FROM carbon_pricing WHERE year = 2020 AND country IN ('North America', 'Europe', 'Asia') GROUP BY policy ORDER BY total_price DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c \ub2ec \uc9c0\uc18d \uac00\ub2a5\uc131\uc5d0 \uc911\uc810\uc744 \ub454 \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc2dd\ubb3c \uae30\ubc18 \uc8fc\ubb38 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (id INT, name TEXT, focus TEXT); INSERT INTO Restaurants (id, name, focus) VALUES (1, 'Bean Scene', 'Sustainability'), (2, 'Cafe Delirium', 'Coffee'), (3, 'Eco Brew', 'Sustainability'); CREATE TABLE Menu (id INT, name TEXT, type TEXT, plant_based BOOLEAN, restaurant_id INT); CREATE TABLE Orders (id INT, menu_id INT, order_date DATE, quantity INT);", "output": "SELECT Restaurants.name, SUM(Orders.quantity) as total_quantity FROM Orders JOIN Menu ON Orders.menu_id = Menu.id JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.focus = 'Sustainability' AND Menu.plant_based = 1 AND Orders.order_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY Restaurants.name;"}
{"input": "\uac01 \ud559\uad50\uc758 \ud559\uc0dd\ub4e4\uc774 \ud3c9\uc0dd\ud559\uc2b5 \uacfc\uc815\uc5d0 \uc18c\uc694\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning_courses (id INT, course_name VARCHAR(50), school_id INT, student_id INT, hours_spent INT);   CREATE TABLE students (id INT, name VARCHAR(50), age INT, school_id INT);   CREATE TABLE schools (id INT, school_name VARCHAR(50), PRIMARY KEY(id));", "output": "SELECT s.school_name, SUM(llc.hours_spent) as total_hours_spent   FROM lifelong_learning_courses llc   JOIN students st ON llc.student_id = st.id   JOIN schools s ON st.school_id = s.id   GROUP BY s.school_name;"}
{"input": "\uce90\ub098\ub2e4\uc5d0\uc11c \uc9c1\uc6d0\uc774 500\uba85 \uc774\uc0c1\uc778 \uacbd\uc6b0 \uc81c\uc870\uc5c5 \ubd84\uc57c \uadfc\ub85c\uc790\uc758 \uc9c1\uc704\ubcc4 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workers (id INT, name VARCHAR(50), country VARCHAR(50), job_role VARCHAR(50), salary DECIMAL(10, 2), employees INT);", "output": "SELECT job_role, AVG(salary) as avg_salary FROM workers WHERE country = 'Canada' GROUP BY job_role HAVING employees > 500;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uc778\ub3c4 \uc81c\uc870\uc5c5\uccb4\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE manufacturers (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO manufacturers (id, name, country) VALUES (1, 'Manufacturer A', 'India'), (2, 'Manufacturer B', 'India'), (3, 'Manufacturer C', 'USA'); CREATE TABLE material_sourcing (id INT, manufacturer_id INT, sustainable_sourcing BOOLEAN); INSERT INTO material_sourcing (id, manufacturer_id, sustainable_sourcing) VALUES (1, 1, true), (2, 2, true), (3, 3, false); CREATE TABLE sales_volume (id INT, manufacturer_id INT, volume INT); INSERT INTO sales_volume (id, manufacturer_id, volume) VALUES (1, 1, 500), (2, 2, 250), (3, 3, 750);", "output": "SELECT m.name, SUM(SV.volume) as total_sales_volume FROM sales_volume SV JOIN manufacturers m ON SV.manufacturer_id = m.id JOIN material_sourcing MS ON m.id = MS.manufacturer_id WHERE m.country = 'India' AND MS.sustainable_sourcing = true GROUP BY m.name;"}
{"input": " 2021\ub144\uc5d0 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \uc9d1\ub2e8\uc5d0\uc11c \uace0\uc6a9\ub41c \uc9c1\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, HireDate date, Ethnicity varchar(30)); INSERT INTO Employees (EmployeeID, HireDate, Ethnicity) VALUES (1, '2021-01-01', 'Latinx'), (2, '2021-02-15', 'African American'), (3, '2020-05-01', 'Asian'), (4, '2022-03-20', 'Caucasian');", "output": "SELECT COUNT(*) FROM Employees WHERE YEAR(HireDate) = 2021 AND Ethnicity IN ('Latinx', 'African American', 'Native American', 'Pacific Islander');"}
{"input": " \uc720\ub7fd\uc5f0\ud569\uc5d0\uc11c 2020\ub144 \uc774\ud6c4 \ucd9c\uc2dc\ub41c \uc2a4\ud3ec\uce20\uce74\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicle_Types (Id INT, Name VARCHAR(50)); CREATE TABLE Vehicle_Releases (Id INT, Name VARCHAR(50), Release_Date DATE, Origin_Country VARCHAR(50), CO2_Emission INT, Vehicle_Type_Id INT);", "output": "SELECT AVG(CO2_Emission) FROM Vehicle_Releases vr INNER JOIN Vehicle_Types vt ON vr.Vehicle_Type_Id = vt.Id WHERE vt.Name = 'Sports Car' AND Release_Date >= '2020-01-01' AND Origin_Country IN (SELECT Country FROM Countries WHERE Region = 'European Union');"}
{"input": " \uc720\ub7fd\uc758 \uc5b4\ub5a4 \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad00\ub828 \ud0c4\uc18c \uc0c1\uc1c4 \uacc4\ud68d\uc774 \uc5c6\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE renewable_energy (project_id INT, project_name TEXT, location TEXT); CREATE TABLE carbon_offsets (project_id INT, initiative_name TEXT, location TEXT); INSERT INTO renewable_energy (project_id, project_name, location) VALUES (1, 'Solar Field One', 'Europe'), (2, 'Wind Farm Two', 'North America'); INSERT INTO carbon_offsets (project_id, initiative_name, location) VALUES (1, 'Tropical Forest Protection', 'South America'), (3, 'Ocean Current Capture', 'Europe');", "output": "SELECT project_name FROM renewable_energy WHERE project_id NOT IN (SELECT project_id FROM carbon_offsets WHERE renewable_energy.location = carbon_offsets.location);"}
{"input": "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uac01 \uad6d\uac00\uc5d0 \ub4f1\ub85d\ub41c \uc0ac\uc6a9\uc790 \uc218\ub97c \ud655\uc778\ud558\uc5ec \uc0ac\uc6a9\uc790\uac00 10,000\uba85\uc774 \ub118\ub294 \uad6d\uac00\ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users_ext (id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO users_ext (id, name, country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada');", "output": "SELECT country, COUNT(*) as num_users FROM users_ext GROUP BY country HAVING num_users > 10000;"}
{"input": " \ud560\ub784 \ud654\uc7a5\ud488\uc758 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Cosmetics (id INT, name VARCHAR(255), price DECIMAL(5,2), is_halal BOOLEAN); INSERT INTO Cosmetics (id, name, price, is_halal) VALUES (1, 'Shampoo', 15.99, true), (2, 'Lipstick', 12.49, false);", "output": "SELECT country, AVG(price) as avg_price FROM (SELECT CASE WHEN is_halal THEN 'Halal' ELSE 'Non-Halal' END as country, price FROM Cosmetics) subquery GROUP BY country;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ubc1c\uc0dd\ud55c \uc0ac\uac74\uc5d0 \uad00\ub828\ub41c \ubaa8\ub4e0 \uace0\uc720\ud55c \uc704\ud611 \ud589\uc704\uc790\ub97c \ub098\uc5f4\ud558\uace0 \uac01 \ud589\uc704\uc790\uac00 \uad00\ub828\ub41c \uc0ac\uac74 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_actors (actor VARCHAR(50), incident_count INT, incident_date DATE); INSERT INTO threat_actors (actor, incident_count, incident_date) VALUES ('Actor A', 20, '2023-01-01'), ('Actor B', 15, '2023-01-02'), ('Actor C', 12, '2023-01-03'), ('Actor A', 18, '2023-01-04'), ('Actor B', 10, '2023-01-05');", "output": "SELECT actor, incident_count FROM threat_actors WHERE incident_date >= DATEADD(month, -6, GETDATE()) GROUP BY actor ORDER BY SUM(incident_count) DESC;"}
{"input": "\ubcf4\ud5d8 \uc885\ub958\ubcc4, \uc9c0\uc5ed\ubcc4 \ubcf4\ud5d8 \uc720\uc9c0\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE PolicyHistory (PolicyID INT, PolicyType VARCHAR(20), Region VARCHAR(20), Renewal BOOLEAN); INSERT INTO PolicyHistory (PolicyID, PolicyType, Region, Renewal) VALUES (1, 'Auto', 'Northeast', TRUE), (2, 'Home', 'Northeast', FALSE), (3, 'Life', 'Midwest', TRUE);", "output": "SELECT PolicyType, Region, COUNT(*) OVER (PARTITION BY PolicyType, Region) AS TotalPolicies, COUNT(*) FILTER (WHERE Renewal = TRUE) OVER (PARTITION BY PolicyType, Region) AS RenewedPolicies, ROUND(COUNT(*) FILTER (WHERE Renewal = TRUE) OVER (PARTITION BY PolicyType, Region) * 100.0 / COUNT(*) OVER (PARTITION BY PolicyType, Region), 2) AS RenewalRate FROM PolicyHistory;"}
{"input": " \uc124\uce58 \uac1c\uc218\uac00 500\uac1c\ub97c \ucd08\uacfc\ud558\ub294 \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \ud0dc\uc591\uad11 \ud328\ub110 \uc124\uce58 \ucd1d \uac1c\uc218\ub294 \ub3c4\uc2dc \ubc0f \uc8fc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE urban_solar_installations (installation_id INT, city VARCHAR(50), state VARCHAR(50), installation_type VARCHAR(50));", "output": "SELECT city, state, COUNT(installation_id) FROM urban_solar_installations GROUP BY city, state HAVING COUNT(installation_id) > 500;"}
{"input": " \uba55\uc2dc\ucf54\ub9cc\uc758 \ubaa8\ub4e0 \uc6b4\uc601\uc790\uc640 \uc720\uc815\ub2f9 \ud3c9\uade0 \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE operators (operator_id INT, operator_name TEXT); INSERT INTO operators (operator_id, operator_name) VALUES (1, 'Operator A'), (2, 'Operator B'); CREATE TABLE wells (well_id INT, operator_id INT, year INT, gas_production FLOAT); INSERT INTO wells (well_id, operator_id, year, gas_production) VALUES (1, 1, 2020, 500000), (2, 1, 2021, 600000), (3, 2, 2020, 700000), (4, 2, 2021, 800000);", "output": "SELECT o.operator_name, AVG(w.gas_production / NULLIF(w.year, 0)) AS avg_gas_production_per_well FROM wells w JOIN operators o ON w.operator_id = o.operator_id WHERE o.operator_name IN ('Operator A', 'Operator B') AND w.year BETWEEN (SELECT MAX(year) - 5 FROM wells) AND MAX(year) GROUP BY o.operator_id;"}
{"input": " '\uc544\uc2dc\uc544' \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (id INT, program_id INT, amount DECIMAL(10,2)); INSERT INTO Budget (id, program_id, amount) VALUES (1, 1, 10000.00), (2, 2, 20000.00), (3, 3, 30000.00);", "output": "SELECT SUM(b.amount) FROM Budget b INNER JOIN EducationPrograms e ON b.program_id = e.id INNER JOIN Coordinators c ON e.coordinator_id = c.id WHERE c.region = 'Asia';"}
{"input": " \uac01 \uae30\uc5c5\uc774 \ucd94\ucd9c\ud55c \uae08, \uc740\uc758 \ucd1d\ub7c9\uacfc \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE companies (id INT, name VARCHAR(255)); INSERT INTO companies (id, name) VALUES (1, 'ACME Minerals'), (2, 'BIG Extraction'); CREATE TABLE extraction (id INT, company_id INT, mineral VARCHAR(255), quantity INT); INSERT INTO extraction (id, company_id, mineral, quantity) VALUES (1, 1, 'gold', 500), (2, 1, 'silver', 800), (3, 2, 'gold', 700), (4, 2, 'silver', 900); CREATE TABLE mining_sites (id INT, site_name VARCHAR(255), environmental_impact_score INT); INSERT INTO mining_sites (id, site_name, environmental_impact_score) VALUES (1, 'Site A', 80), (2, 'Site B', 60), (3, 'Site C', 90);", "output": "SELECT c.name, SUM(CASE WHEN e.mineral = 'gold' THEN e.quantity ELSE 0 END) as total_gold, SUM(CASE WHEN e.mineral = 'silver' THEN e.quantity ELSE 0 END) as total_silver, ms.environmental_impact_score FROM companies c INNER JOIN extraction e ON c.id = e.company_id INNER JOIN mining_sites ms ON c.id = ms.site_name GROUP BY c.name, ms.environmental_impact_score;"}
{"input": " 2010\ub144 \uc774\ud6c4 \uc778\ub3c4\uc591\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc2ec\ud574 \uc0dd\ubb3c\uc774 \ubc1c\uacac\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE indian_ocean (id INT, name VARCHAR(100), region VARCHAR(50)); CREATE TABLE deep_sea_species (id INT, name VARCHAR(100), species_type VARCHAR(50), discovery_year INT, ocean_id INT); INSERT INTO indian_ocean (id, name, region) VALUES (1, 'Indian Ocean', 'Indian'); INSERT INTO deep_sea_species (id, name, species_type, discovery_year, ocean_id) VALUES (1, 'Hadal Snailfish', 'Fish', 2014, 1);", "output": "SELECT COUNT(*) FROM deep_sea_species dss WHERE dss.ocean_id = (SELECT id FROM indian_ocean WHERE name = 'Indian Ocean') AND discovery_year >= 2010;"}
{"input": " \uac01 \uc12c\uc720\uacf5\uc7a5\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \ub300\ub959\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \ubc30\ucd9c\ub7c9 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4.", "context": "CREATE TABLE CO2Emission (mill TEXT, continent TEXT, co2_kg FLOAT); INSERT INTO CO2Emission (mill, continent, co2_kg) VALUES ('MillA', 'Asia', 120.5), ('MillB', 'Asia', 80.3), ('MillC', 'Asia', 160.1), ('MillD', 'Africa', 95.6), ('MillE', 'Europe', 110.7), ('MillF', 'America', 130.8);", "output": "SELECT continent, AVG(co2_kg) as avg_co2 FROM CO2Emission GROUP BY continent ORDER BY avg_co2 DESC;"}
{"input": "\uc9c0\ub09c 1\ub144\uac04 'Field3'\uacfc 'Field4'\uc758 \ucd1d \uac15\uc6b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RainfallData (ID INT, FieldID INT, Timestamp DATETIME, Rainfall FLOAT); CREATE VIEW LastYearRainfallData AS SELECT * FROM RainfallData WHERE Timestamp BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE(); CREATE VIEW Field3RainfallData AS SELECT * FROM RainfallData WHERE FieldID = 3; CREATE VIEW Field4RainfallData AS SELECT * FROM RainfallData WHERE FieldID = 4; CREATE VIEW Field3And4RainfallData AS SELECT * FROM LastYearRainfallData WHERE Field3RainfallData.FieldID = Field4RainfallData.FieldID;", "output": "SELECT SUM(Rainfall) OVER (PARTITION BY FieldID) AS TotalRainfall FROM Field3And4RainfallData;"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80\ub97c \ud55c \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (id, donor_id, donation_amount, donation_date) VALUES (1, 1, 800.00, '2022-10-01'); INSERT INTO donations (id, donor_id, donation_amount, donation_date) VALUES (2, 2, 900.00, '2022-07-30'); INSERT INTO donations (id, donor_id, donation_amount, donation_date) VALUES (3, 3, 700.00, '2022-09-15');", "output": "SELECT donor_id, MAX(donation_amount) FROM donations WHERE QUARTER(donation_date) = 3 AND YEAR(donation_date) = 2022 GROUP BY donor_id;"}
{"input": "\ud5ec\uc2a4\ucf00\uc5b4' \ubd80\ubb38 \uae30\uc5c5\uc758 \ucd5c\uc18c ESG \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, sector VARCHAR(20), ESG_score FLOAT); INSERT INTO companies (id, sector, ESG_score) VALUES (1, 'healthcare', 82.0), (2, 'technology', 75.5), (3, 'healthcare', 78.7), (4, 'finance', 90.2);", "output": "SELECT MIN(ESG_score) FROM companies WHERE sector = 'healthcare';"}
{"input": " \uae30\uc220 \ubd80\ubb38\uc5d0\uc11c BIPOC \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups (id INT, name TEXT, industry TEXT, founders TEXT, funding FLOAT); INSERT INTO startups (id, name, industry, founders, funding) VALUES (1, 'TechBridge', 'Tech', 'BIPOC', 7000000);", "output": "SELECT AVG(funding) FROM startups WHERE industry = 'Tech' AND founders = 'BIPOC';"}
{"input": " \ud2b9\ubcc4 \ud589\uc0ac\uc5d0 \ud55c \ubc88\ub3c4 \ucc38\uc11d\ud55c \uc801\uc774 \uc5c6\ub294 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitor_Events (visitor_id INT, event_id INT); CREATE TABLE Events (id INT, name VARCHAR(20)); ALTER TABLE Visitors ADD COLUMN attended_event BOOLEAN DEFAULT FALSE;", "output": "SELECT COUNT(*) FROM Visitors WHERE attended_event = FALSE;"}
{"input": " 'Sea Serpent' \uc120\ubc15\uc774 \ucde8\uae09\ud558\ub294 \ud654\ubb3c\uc758 \ucd5c\ub300 \ud654\ubb3c \uc911\ub7c9\uacfc \ud574\ub2f9 \ud56d\uad6c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name VARCHAR(50), location VARCHAR(50), un_code VARCHAR(10)); CREATE TABLE vessels (id INT, name VARCHAR(50), type VARCHAR(50), year_built INT, port_id INT); CREATE TABLE captains (id INT, name VARCHAR(50), age INT, license_number VARCHAR(20), vessel_id INT); CREATE TABLE cargo (id INT, description VARCHAR(50), weight FLOAT, port_id INT, vessel_id INT); CREATE VIEW captain_vessel AS SELECT captains.name AS captain_name, vessels.name AS vessel_name FROM captains INNER JOIN vessels ON captains.vessel_id = vessels.id;", "output": "SELECT ports.name, MAX(cargo.weight) AS max_cargo_weight FROM ports INNER JOIN (vessels INNER JOIN cargo ON vessels.id = cargo.vessel_id) ON ports.id = vessels.port_id WHERE vessels.name = 'Sea Serpent' GROUP BY ports.name;"}
{"input": " 2020\ub144 \ud558\ubc18\uae30\uc5d0 \uc758\ub8cc \ubd80\ubb38 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, Category TEXT, Budget DECIMAL(10,2), StartYear INT, EndYear INT); INSERT INTO Programs (ProgramID, Category, Budget, StartYear, EndYear) VALUES (1, 'Healthcare', 20000.00, 2020, 2021), (2, 'Education', 15000.00, 2019, 2022);", "output": "SELECT SUM(Budget) as 'Total Budget Spent' FROM Programs WHERE Category = 'Healthcare' AND StartYear = 2020 AND EndYear = 2020;"}
{"input": " 2019\ub144\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ub3c5\ud2b9\ud55c \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\ubd80\uac00 \uc788\uc5c8\ub098\uc694?", "context": "CREATE TABLE programs (id INT, program_name VARCHAR(50), donation_id INT); INSERT INTO programs (id, program_name, donation_id) VALUES (1, 'Feeding America', 100), (2, 'Red Cross', 101), (3, 'Feeding America', 103), (4, 'Save the Children', 104);", "output": "SELECT COUNT(DISTINCT program_name) FROM programs WHERE donation_id IN (SELECT id FROM donations WHERE YEAR(donation_date) = 2019);"}
{"input": "2023\ub144 1\uc6d4 1\uc77c\ubd80\ud130 1\uc6d4 5\uc77c\uae4c\uc9c0 \ubca0\ub97c\ub9b0\uc5d0 \uc788\ub294 \ubc1c\uc804\uc18c 4\uc758 \ucd1d \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_storage (id INT PRIMARY KEY, power_plant_id INT, date DATE, capacity FLOAT); INSERT INTO energy_storage (id, power_plant_id, date, capacity) VALUES (1, 4, '2023-01-01', 70.0); INSERT INTO energy_storage (id, power_plant_id, date, capacity) VALUES (2, 4, '2023-01-02', 72.5);", "output": "SELECT e.power_plant_id, SUM(e.capacity) as total_capacity FROM energy_storage e WHERE e.power_plant_id = 4 AND e.date BETWEEN '2023-01-01' AND '2023-01-05' GROUP BY e.power_plant_id;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uad50\uc218 1\uc778\ub2f9 \ud3c9\uade0 \uc5f0\uad6c\ube44 \uc218\uc5ec \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO faculty (id, name, department) VALUES (1, 'Alice', 'Computer Science'); INSERT INTO faculty (id, name, department) VALUES (2, 'Bob', 'Mathematics'); CREATE TABLE authorships (id INT, faculty_id INT, grant_id INT); INSERT INTO authorships (id, faculty_id, grant_id) VALUES (1, 1, 1); INSERT INTO authorships (id, faculty_id, grant_id) VALUES (2, 1, 2); CREATE TABLE grants (id INT, year INT, title VARCHAR(50)); INSERT INTO grants (id, year, title) VALUES (1, 2021, 'Artificial Intelligence'); INSERT INTO grants (id, year, title) VALUES (2, 2020, 'Machine Learning');", "output": "SELECT AVG(g.count) FROM (SELECT f.id, COUNT(a.id) AS count FROM authorships a JOIN faculty f ON a.faculty_id = f.id JOIN grants g ON a.grant_id = g.id WHERE g.year BETWEEN 2017 AND 2021 GROUP BY f.id) g;"}
{"input": " \uad50\uc0ac\uac00 1\ub144\uc5d0 \uc774\uc218\ud55c \ucd5c\ub300 \uacfc\ubaa9 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE courses (course_id INT, teacher_id INT, completion_date DATE); INSERT INTO courses (course_id, teacher_id, completion_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-12-31'), (3, 2, '2021-06-15'), (4, 3, '2022-05-05'), (5, 4, '2021-11-22');", "output": "SELECT MAX(subquery.yearly_courses) FROM (SELECT COUNT(course_id) AS yearly_courses, teacher_id FROM courses WHERE completion_date > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY teacher_id) AS subquery;"}
{"input": " \uc5b4\ub5a4 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uacfc\uc18c\ub300\ud45c \uadf8\ub8f9\uc758 \ucc38\uac00\uc790\uac00 5\uba85 \uc774\uc0c1 \uc788\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE TrainingPrograms (ProgramID INT, ProgramName VARCHAR(20), Participants VARCHAR(20)); INSERT INTO TrainingPrograms (ProgramID, ProgramName, Participants) VALUES (1, 'SQL', 'Female,Male,Non-binary'), (2, 'Python', 'Female,Female,Male'), (3, 'HR Analytics', 'Male,Female,Female,Non-binary'), (4, 'Data Visualization', 'Female,Male,Non-binary,Latino,Asian');", "output": "SELECT ProgramName FROM TrainingPrograms WHERE ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Non-binary', ''), ',')) > 5 AND ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Female', ''), ',')) > 5 AND ARRAY_LENGTH(STRING_TO_ARRAY(Participants, ',')) - ARRAY_LENGTH(STRING_TO_ARRAY(REPLACE(Participants, ',Male', ''), ',')) > 5;"}
{"input": " 2022\ub144 \uc720\ub7fd\uc5d0\uc11c \ub9e4\ub2ec \uc694\uccad\ub418\ub294 \uc7a5\uc560\uc778 \ud3b8\uc758\uc2dc\uc124\uc758 \ucd5c\uc18c \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodations (Id INT, StudentId INT, Type VARCHAR(50), RequestDate DATE, Region VARCHAR(30)); INSERT INTO Accommodations (Id, StudentId, Type, RequestDate, Region) VALUES (1, 1, 'Note Taker', '2022-01-01', 'Europe'), (2, 2, 'Extended Test Time', '2022-02-01', 'Europe'), (3, 3, 'Note Taker', '2022-03-01', 'Europe'), (4, 4, 'Sign Language Interpreter', '2022-04-01', 'Europe'), (5, 5, 'Note Taker', '2022-05-01', 'Europe'), (6, 6, 'Extended Test Time', '2022-06-01', 'Europe'), (7, 7, 'Note Taker', '2022-07-01', 'Europe'), (8, 8, 'Sign Language Interpreter', '2022-08-01', 'Europe'), (9, 9, 'Note Taker', '2022-09-01', 'Europe'), (10, 10, 'Extended Test Time', '2022-10-01', 'Europe'), (11, 11, 'Note Taker', '2022-11-01', 'Europe'), (12, 12, 'Sign Language Interpreter', '2022-12-01', 'Europe');", "output": "SELECT MIN(COUNT(*)) FROM Accommodations WHERE RequestDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY EXTRACT(MONTH FROM RequestDate);"}
{"input": " 2020\ub144 \uac01 \ub2ec\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub97c \uc6d4\ubcc4\ub85c \uc815\ub82c\ud558\uc5ec \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName VARCHAR(50), JoinDate DATE); INSERT INTO Volunteers (VolunteerID, VolunteerName, JoinDate) VALUES (1, 'Alex', '2020-01-15'), (2, 'Bella', '2020-02-20'), (3, 'Charlie', '2020-03-05'), (4, 'David', '2020-04-10'), (5, 'Eve', '2020-05-01'), (6, 'Frank', '2020-06-15'), (7, 'Grace', '2020-07-20'), (8, 'Heidi', '2020-08-05'), (9, 'Ivan', '2020-09-10'), (10, 'Judy', '2020-10-01'), (11, 'Kevin', '2020-11-15'), (12, 'Lily', '2020-12-20');", "output": "SELECT EXTRACT(MONTH FROM JoinDate) as Month, COUNT(*) as Volunteers FROM Volunteers WHERE JoinDate BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY Month ORDER BY Month;"}
{"input": "\uc9c0\uc5ed\ubcc4, \uc5f0\ub3c4\ubcc4 \ud3c9\uade0 \ub3d9\ubb3c \uac1c\uccb4\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE animal_population (region VARCHAR(50), population INT, year INT); INSERT INTO animal_population (region, population, year) VALUES ('Africa', 500, 2020), ('Africa', 510, 2021), ('Asia', 800, 2020), ('Asia', 820, 2021), ('Americas', 300, 2020), ('Americas', 310, 2021);", "output": "SELECT region, year, AVG(population) OVER (PARTITION BY region, year) as avg_population FROM animal_population ORDER BY region, year;"}
{"input": " \ud2b9\uc815 \uae30\uc900\uce58 \uc774\uc0c1\uc758 \uc624\uc5fc \uc218\uc900\uc774 \uc788\ub294 \uc9c0\uc5ed\uc5d0\uc11c \ubaa9\uaca9\ub41c \ud574\uc591 \uc0dd\ubb3c\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Survey ( id INT PRIMARY KEY, species_id INT, location VARCHAR(255), sighted_date DATE); CREATE TABLE Species ( id INT PRIMARY KEY, name VARCHAR(255), family VARCHAR(255), population INT); CREATE TABLE Pollution ( id INT PRIMARY KEY, location VARCHAR(255), pollutant VARCHAR(255), level FLOAT);", "output": "SELECT Species.name, Survey.location FROM Species JOIN Survey ON Species.id = Survey.species_id JOIN Pollution ON Survey.location = Pollution.location WHERE Pollution.level > 5.0;"}
{"input": " \ub2e4\uc591\uc131 \ubc0f \ud3ec\uc6a9\uc131 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT, age INT, gender VARCHAR(10), diversity_training BOOLEAN);", "output": "SELECT AVG(age) FROM employees WHERE diversity_training = TRUE;"}
{"input": " \uc624\ud558\uc774\uc624\uc5d0 \uac70\uc8fc\ud558\ub294 \uace0\uac1d\uc758 \ucd5c\uc18c \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (id INT, name TEXT, age INT, state TEXT, transaction_amount DECIMAL(10,2)); INSERT INTO clients (id, name, age, state, transaction_amount) VALUES (1, 'John Doe', 35, 'Ohio', 200.00); INSERT INTO clients (id, name, age, state, transaction_amount) VALUES (2, 'Jane Smith', 40, 'Ohio', 250.50);", "output": "SELECT MIN(transaction_amount) FROM clients WHERE state = 'Ohio';"}
{"input": " 2021\ub144 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8 \uae30\ubd80 \ucd1d\uc561 \uae30\uc900 \uc0c1\uc704 3\uc704\ub294 \ub204\uad6c\uc600\ub098\uc694?", "context": "CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(50), total_donation_amount DECIMAL(10,2), last_donation_date DATE); CREATE TABLE Donations (donation_id INT, donor_id INT, donation_amount DECIMAL(10,2), donation_date DATE, program_id INT);", "output": "SELECT donor_name, SUM(donation_amount) as total_donation_amount FROM Donors d JOIN Donations don ON d.donor_id = don.donor_id WHERE program_id IN (SELECT program_id FROM Programs WHERE category = 'education') AND YEAR(donation_date) = 2021 GROUP BY donor_name ORDER BY total_donation_amount DESC LIMIT 3;"}
{"input": "\"\ub85c\uc2a4\uc564\uc824\ub808\uc2a4\" \uc2dc \uacf5\uacf5\ub3c4\uc11c\uad00\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE libraries (library_id INT, library_name TEXT, city TEXT, rating INT); INSERT INTO libraries (library_id, library_name, city, rating) VALUES (1, 'Los Angeles Central Library', 'Los Angeles', 8), (2, 'Los Angeles Public Library', 'Los Angeles', 7), (3, 'Baldwin Hills Library', 'Los Angeles', 9);", "output": "SELECT AVG(rating) FROM libraries WHERE city = 'Los Angeles' AND type = 'Public';"}
{"input": " \uc720\ub7fd\uc758 \uad6d\uac00\ubcc4 \uc778\uad6c 1000\uba85\ub2f9 \ubcd1\uc0c1 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eu_hospitals (country VARCHAR(50), hospital_beds_per_1000 DECIMAL(3,1)); INSERT INTO eu_hospitals (country, hospital_beds_per_1000) VALUES ('Spain', 2.8), ('Sweden', 2.5), ('UK', 2.9);", "output": "SELECT country, AVG(hospital_beds_per_1000 * 1000) as hospital_beds_per_1000_people FROM eu_hospitals GROUP BY country;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 102\ubc88 \ub3c4\ub85c\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uace0\uc720 \ucc28\ub7c9\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE vehicle_routes (vehicle_id INT, route_id INT, date DATE); INSERT INTO vehicle_routes (vehicle_id, route_id, date) VALUES (101, 101, '2022-01-01'), (102, 101, '2022-01-02'), (103, 102, '2022-01-01'), (104, 102, '2022-01-02'), (105, 103, '2022-01-01'), (106, 103, '2022-01-02'), (107, 102, '2022-02-01'), (108, 102, '2022-02-02');", "output": "SELECT route_id, COUNT(DISTINCT vehicle_id) FROM vehicle_routes WHERE date >= CURDATE() - INTERVAL 60 DAY AND route_id = 102 GROUP BY route_id;"}
{"input": " \uc625\uc218\uc218\uc640 \ucf69\uc744 \ubaa8\ub450 \uc7ac\ubc30\ud558\ub294 \ubaa8\ub4e0 \ub18d\ubd80\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50)); CREATE TABLE crops_farmers (farmer_id INT, crop_id INT); CREATE TABLE crops (id INT, name VARCHAR(50)); INSERT INTO crops (id, name) VALUES (1, 'Corn'), (2, 'Soybean'); INSERT INTO farmers (id, name) VALUES (1, 'John'), (2, 'Jane'); INSERT INTO crops_farmers (farmer_id, crop_id) VALUES (1, 1), (1, 2), (2, 1);", "output": "SELECT f.name FROM farmers f JOIN crops_farmers cf ON f.id = cf.farmer_id JOIN crops c ON cf.crop_id = c.id WHERE c.name IN ('Corn', 'Soybean') GROUP BY f.name HAVING COUNT(DISTINCT c.name) = 2;"}
{"input": " \uc804\uccb4 \uc9c1\uc6d0 \uc911 \uc131\ubcc4\uc5d0 \ub530\ub77c \uac00\uc7a5 \ub098\uc774\uac00 \ub9ce\uc740 \uc9c1\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Workforce (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, Gender VARCHAR(10), MineName VARCHAR(50)); INSERT INTO Workforce (EmployeeID, FirstName, LastName, Age, Gender, MineName) VALUES (1, 'John', 'Doe', 35, 'Male', 'ABC Mine'); INSERT INTO Workforce (EmployeeID, FirstName, LastName, Age, Gender, MineName) VALUES (2, 'Jane', 'Doe', 40, 'Female', 'DEF Mine'); INSERT INTO Workforce (EmployeeID, FirstName, LastName, Age, Gender, MineName) VALUES (3, 'Mike', 'Smith', 50, 'Male', 'GHI Mine');", "output": "SELECT EmployeeID, FirstName, LastName, Age, Gender, MineName, ROW_NUMBER() OVER (PARTITION BY Gender ORDER BY Age DESC) as 'AgeRank' FROM Workforce WHERE AgeRank = 1;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc640 2\ubd84\uae30\uc5d0 10\uc2dc\uac04 \uc774\uc0c1 \uae30\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (id INT, name TEXT, country TEXT, hours FLOAT, quarter TEXT, year INT); INSERT INTO Volunteers (id, name, country, hours, quarter, year) VALUES (1, 'Alice', 'USA', 12.0, 'Q1', 2022), (2, 'Bob', 'Canada', 8.5, 'Q1', 2022), (3, 'Eve', 'Canada', 15.0, 'Q1', 2022), (4, 'Frank', 'USA', 7.0, 'Q1', 2022), (5, 'Grace', 'USA', 11.0, 'Q2', 2022);", "output": "SELECT quarter, COUNT(*) FROM Volunteers WHERE hours > 10 AND (quarter = 'Q1' OR quarter = 'Q2') AND year = 2022 GROUP BY quarter;"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, City TEXT); INSERT INTO Volunteers (VolunteerID, VolunteerName, City) VALUES (1, 'Alice Johnson', 'Los Angeles'); INSERT INTO Volunteers (VolunteerID, VolunteerName, City) VALUES (2, 'Bob Brown', 'San Francisco'); INSERT INTO Volunteers (VolunteerID, VolunteerName, City) VALUES (3, 'Charlie Davis', 'Los Angeles');", "output": "SELECT City, COUNT(*) FROM Volunteers GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " \uc77c\ubcf8\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \ud14c\ub974\ube00\uc758 \ucd5c\uc800 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE terbium_production (country VARCHAR(255), price DECIMAL(10,2)); INSERT INTO terbium_production (country, price) VALUES ('Japan', 400.00);", "output": "SELECT MIN(price) FROM terbium_production WHERE country = 'Japan';"}
{"input": " \ud2b9\uc815 \uacf5\uae09\uc5c5\uccb4\uc758 \uc7ac\ub8cc\ub97c \uc81c\uc678\ud55c \uac01 \uba54\ub274 \ud56d\ubaa9\uc758 \uc7ac\ub8cc\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (menu_id INT, name VARCHAR(50), total_cost FLOAT); CREATE TABLE recipe (menu_id INT, ingredient_id INT, quantity FLOAT); CREATE TABLE ingredients (ingredient_id INT, name VARCHAR(50), supplier VARCHAR(50), cost FLOAT);", "output": "SELECT m.menu_id, m.name, SUM(i.cost * r.quantity) as total_cost FROM menu_items m JOIN recipe r ON m.menu_id = r.menu_id JOIN ingredients i ON r.ingredient_id = i.ingredient_id WHERE i.supplier != 'Excluded Supplier' GROUP BY m.menu_id;"}
{"input": " 2023\ub144 1\ubd84\uae30\uc5d0 \uac01 \uc57d\uad6d\uc5d0\uc11c \uac01 \ub300\ub9c8\ucd08 \uaf43 \ud488\uc885\uc774 \uba87 \ubc88\uc774\ub098 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE flower_strain_sales (dispensary_id INT, sale_date DATE, strain_id INT, quantity INT); INSERT INTO flower_strain_sales (dispensary_id, sale_date, strain_id, quantity) VALUES (3, '2023-01-03', 7, 30), (3, '2023-01-15', 8, 20), (3, '2023-02-05', 9, 15), (4, '2023-01-07', 7, 40), (4, '2023-01-28', 9, 30), (4, '2023-02-18', 7, 25);", "output": "SELECT s.name, d.name, SUM(fss.quantity) as total_sales FROM flower_strain_sales fss JOIN strains s ON fss.strain_id = s.id JOIN dispensaries d ON fss.dispensary_id = d.id WHERE fss.sale_date BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY s.name, d.name;"}
{"input": " \uc9c0\ub09c\uc8fc Polygon \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ud0c8\uc911\uc559\ud654 \uac70\ub798\uc18c\uc758 \ucd1d \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE decentralized_exchanges_polygon (exchange_name TEXT, transaction_volume INTEGER, transaction_date DATE);", "output": "SELECT exchange_name, SUM(transaction_volume) FROM decentralized_exchanges_polygon WHERE transaction_date >= DATEADD(week, -1, GETDATE()) GROUP BY exchange_name;"}
{"input": " \uc720\ub7fd \uc5f0\ud569 \uad6d\uac00\uc5d0\uc11c \ubc1c\uc0ac\ud55c \uc704\uc131 \uc81c\uc870\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc7ac\ub8cc\uc758 \ucd1d \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SatelliteMaterials (SatelliteID INT PRIMARY KEY, MaterialID INT, Quantity INT, Unit VARCHAR(10)); INSERT INTO SatelliteMaterials (SatelliteID, MaterialID, Quantity, Unit) VALUES (1, 1, 500, 'kg'); INSERT INTO SatelliteMaterials (SatelliteID, MaterialID, Quantity, Unit) VALUES (2, 2, 300, 'g');", "output": "SELECT SUM(SM.Quantity * SM.Unit::numeric) FROM Satellites S INNER JOIN SatelliteMaterials SM ON S.SatelliteID = SM.SatelliteID INNER JOIN Countries C ON S.Country = C.CountryCode WHERE C.Continent = 'Europe';"}
{"input": " \uacf5\uc815\ud55c \ub178\ub3d9 \uad00\ud589\uc744 \uc900\uc218\ud558\ub294 \ube0c\ub79c\ub4dc\uc758 \uce5c\ud658\uacbd \uc18c\uc7ac \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE brands (brand_id INT, name VARCHAR(255), follows_fair_labor BOOLEAN); INSERT INTO brands (brand_id, name, follows_fair_labor) VALUES (1, 'BrandA', TRUE), (2, 'BrandB', FALSE); CREATE TABLE materials (material_id INT, name VARCHAR(255), is_eco_friendly BOOLEAN, cost DECIMAL(10,2)); INSERT INTO materials (material_id, name, is_eco_friendly, cost) VALUES (1, 'Organic Cotton', TRUE, 5.50), (2, 'Recycled Polyester', TRUE, 7.25); CREATE TABLE brand_materials (brand_id INT, material_id INT, price DECIMAL(10,2)); INSERT INTO brand_materials (brand_id, material_id, price) VALUES (1, 1, 6.00), (1, 2, 7.50), (2, 1, 4.50), (2, 2, 8.00);", "output": "SELECT AVG(bm.price) FROM brand_materials bm JOIN brands b ON bm.brand_id = b.brand_id JOIN materials m ON bm.material_id = m.material_id WHERE b.follows_fair_labor = TRUE AND m.is_eco_friendly = TRUE;"}
{"input": " \ucd5c\uc2e0 \uada4\ub3c4 \ub9e4\uac1c\ubcc0\uc218\ub85c \uc704\uc131 \uc815\ubcf4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE satellite_params (satellite_id INT, orbital_param1 FLOAT, orbital_param2 FLOAT, orbital_param3 FLOAT, orbital_param4 FLOAT, orbital_param5 FLOAT); INSERT INTO satellite_params (satellite_id, orbital_param1, orbital_param2, orbital_param3, orbital_param4, orbital_param5) VALUES (1, 687.2, 1234.5, 456.0, 789.1, 345.6), (2, 555.8, 1001.2, 300.0, 888.9, 555.5), (3, 777.6, 1333.5, 555.0, 999.1, 777.7);", "output": "UPDATE satellite SET orbital_param1 = (SELECT orbital_param1 FROM satellite_params WHERE satellite.satellite_id = satellite_params.satellite_id), orbital_param2 = (SELECT orbital_param2 FROM satellite_params WHERE satellite.satellite_id = satellite_params.satellite_id), orbital_param3 = (SELECT orbital_param3 FROM satellite_params WHERE satellite.satellite_id = satellite_params.satellite_id), orbital_param4 = (SELECT orbital_param4 FROM satellite_params WHERE satellite.satellite_id = satellite_params.satellite_id), orbital_param5 = (SELECT orbital_param5 FROM satellite_params WHERE satellite.satellite_id = satellite_params.satellite_id);"}
{"input": "2021\ub144 \ud558\ubc18\uae30\uc5d0 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uc608\uc0b0\uc774 1,000\ub9cc \ub2ec\ub7ec\ub97c \ucd08\uacfc\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uac00 \uc81c \uc2dc\uac04\uc5d0 \uc644\ub8cc\ub418\ub294 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ProjectTimelineByBudget (ProjectID int, Region varchar(20), Half int, Budget decimal(10,2), OnTime bit); INSERT INTO ProjectTimelineByBudget (ProjectID, Region, Half, Budget, OnTime) VALUES (1, 'Pacific', 2, 12000000.00, 1), (2, 'Pacific', 2, 8000000.00, 0), (3, 'Pacific', 2, 11000000.00, 1);", "output": "SELECT Region, PERCENTAGE(SUM(OnTime) OVER (PARTITION BY Region) / COUNT(*) OVER (PARTITION BY Region)) as PercentageOnTime FROM ProjectTimelineByBudget WHERE Region = 'Pacific' AND Half = 2 AND Budget > 10000000;"}
{"input": " \ud0dc\ud3c9\uc591\uacfc \ub300\uc11c\uc591\uc758 \uc9c0\ub09c 6\uac1c\uc6d4\uac04 \ud3c9\uade0 \uc624\uc5fc\ub3c4\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ocean_pollution (id INT, location VARCHAR(255), pollution_level INT, measurement_date DATE); INSERT INTO ocean_pollution (id, location, pollution_level, measurement_date) VALUES (1, 'Pacific Ocean', 50, '2021-01-01'), (2, 'Pacific Ocean', 45, '2021-02-01'), (3, 'Pacific Ocean', 40, '2021-03-01'), (4, 'Atlantic Ocean', 70, '2021-01-01'), (5, 'Atlantic Ocean', 75, '2021-02-01'), (6, 'Atlantic Ocean', 80, '2021-03-01');", "output": "SELECT location, AVG(pollution_level) average_pollution FROM ocean_pollution WHERE measurement_date >= NOW() - INTERVAL 6 MONTH GROUP BY location;"}
{"input": " \uc9c0\ub09c \uc8fc \ub3d9\uc548 \uc2dc\ub4dc\ub2c8\uc758 \ucd5c\ub300 \uc624\uc5fc \uc218\uc900\uc740 \uc5b4\ub290 \uc815\ub3c4\uc600\ub098\uc694?", "context": "CREATE TABLE PollutionData (Location VARCHAR(100), Pollutant VARCHAR(50), Level FLOAT, Date DATE); INSERT INTO PollutionData (Location, Pollutant, Level, Date) VALUES ('Sydney', 'Nitrogen', 0.4, '2022-01-01'), ('Sydney', 'Phosphorus', 0.6, '2022-01-02');", "output": "SELECT Location, MAX(Level) FROM PollutionData WHERE Date BETWEEN '2022-01-01' AND '2022-01-07' GROUP BY Location;"}
{"input": " \ud569\ubc95\uc801\uc778 \uae30\ud638\uc6a9 \ub300\ub9c8\ucd08\uac00 \uc788\ub294 \uc8fc\uc758 \uac01 \uc57d\uad6d\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uace0\uc720\ud55c \ud488\uc885\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Dispensaries (DispensaryID INT, DispensaryName TEXT, State TEXT); INSERT INTO Dispensaries (DispensaryID, DispensaryName, State) VALUES (1, 'Green Earth', 'Colorado'); CREATE TABLE Inventory (InventoryID INT, DispensaryID INT, Strain TEXT); INSERT INTO Inventory (InventoryID, DispensaryID, Strain) VALUES (1, 1, 'Blue Dream'); CREATE TABLE States (State TEXT, Legalization TEXT); INSERT INTO States (State, Legalization) VALUES ('Colorado', 'Recreational');", "output": "SELECT d.DispensaryName, COUNT(DISTINCT i.Strain) as UniqueStrains FROM Dispensaries d INNER JOIN Inventory i ON d.DispensaryID = i.DispensaryID INNER JOIN States s ON d.State = s.State WHERE s.Legalization = 'Recreational' GROUP BY d.DispensaryName;"}
{"input": " \uc624\ud074\ub79c\ub4dc\uc640 \ubcf4\uc2a4\ud134\uc758 \uc800\ub834\ud55c \uc8fc\ud0dd \uc218\ub97c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE oakland_housing(id INT, type VARCHAR(20), price INT); INSERT INTO oakland_housing VALUES (1, 'affordable', 300000); CREATE TABLE boston_housing(id INT, type VARCHAR(20), price INT); INSERT INTO boston_housing VALUES (1, 'affordable', 400000);", "output": "SELECT COUNT(*) FROM oakland_housing WHERE type = 'affordable' UNION ALL SELECT COUNT(*) FROM boston_housing WHERE type = 'affordable';"}
{"input": " \uc57c\uc0dd\ub3d9\ubb3c \ubcf4\ud638\uad6c\uc5ed\uc774 \uc788\ub294 \uad6d\uac00\ubcc4 \ucd1d \ubaa9\uc7ac\ub7c9\uacfc \ud0c4\uc18c \uaca9\ub9ac\uc728\uc744 \ucd1d \ubaa9\uc7ac\ub7c9 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE country (country_id INT, country_name TEXT, PRIMARY KEY (country_id)); CREATE TABLE timber (timber_id INT, country_id INT, year INT, volume INT, PRIMARY KEY (timber_id), FOREIGN KEY (country_id) REFERENCES country(country_id)); CREATE TABLE wildlife (wildlife_id INT, country_id INT, species_count INT, PRIMARY KEY (wildlife_id), FOREIGN KEY (country_id) REFERENCES country(country_id)); CREATE TABLE carbon_sequestration (carbon_sequestration_id INT, country_id INT, rate REAL, PRIMARY KEY (carbon_sequestration_id), FOREIGN KEY (country_id) REFERENCES country(country_id));", "output": "SELECT c.country_name, SUM(t.volume) AS total_timber_volume, AVG(cs.rate) AS avg_carbon_sequestration_rate FROM country c INNER JOIN timber t ON c.country_id = t.country_id INNER JOIN wildlife w ON c.country_id = w.country_id INNER JOIN carbon_sequestration cs ON c.country_id = cs.country_id GROUP BY c.country_name HAVING SUM(w.species_count) > 0 ORDER BY total_timber_volume DESC;"}
{"input": " \uac01 \uc0ac\ubb34\uc2e4 \uc704\uce58\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \ubc0f \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE offices (id INT, name VARCHAR(255)); CREATE TABLE volunteers (id INT, office_id INT, joined_date DATE); CREATE TABLE staff (id INT, office_id INT, hired_date DATE);", "output": "SELECT offices.name, COUNT(volunteers.id) + COUNT(staff.id) FROM offices LEFT JOIN volunteers ON offices.id = volunteers.office_id LEFT JOIN staff ON offices.id = staff.office_id GROUP BY offices.id;"}
{"input": "\uac19\uc740 \ub3c4\uc2dc\uc5d0 \ud0c4\uc18c \uc0c1\uc1c4 \uacc4\ud68d\uacfc LEED \uc778\uc99d \uac74\ubb3c\uc774 \ubaa8\ub450 \uc788\ub294 \uc2a4\ub9c8\ud2b8 \ub3c4\uc2dc\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), certification VARCHAR(50)); INSERT INTO green_buildings (id, name, city, country, certification) VALUES (1, 'GreenHeights', 'San Francisco', 'USA', 'LEED Platinum'); CREATE TABLE smart_cities (id INT, city VARCHAR(50), country VARCHAR(50), population INT, technology VARCHAR(50)); INSERT INTO smart_cities (id, city, country, population, technology) VALUES (1, 'San Francisco', 'USA', 864000, 'smart grid'); CREATE TABLE carbon_offsets (id INT, initiative_name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), offset_amount INT); INSERT INTO carbon_offsets (id, initiative_name, city, country, offset_amount) VALUES (1, 'TreesForAll', 'London', 'UK', 5000);", "output": "SELECT s.name FROM smart_cities s INNER JOIN green_buildings g ON s.city = g.city INNER JOIN carbon_offsets c ON s.city = c.city WHERE g.certification = 'LEED';"}
{"input": " 2020\ub144 \uad70 \uc7a5\ube44 \uc720\ud615\ubcc4 \ud3c9\uade0 \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EquipmentMaintenance (id INT, equipment_type VARCHAR(255), year INT, cost INT); INSERT INTO EquipmentMaintenance (id, equipment_type, year, cost) VALUES (1, 'Tank', 2019, 10000), (2, 'Fighter Jet', 2018, 20000), (3, 'Helicopter', 2020, 30000), (4, 'Tank', 2020, 12000), (5, 'Fighter Jet', 2020, 25000), (6, 'Helicopter', 2019, 28000);", "output": "SELECT equipment_type, AVG(cost) FROM EquipmentMaintenance WHERE year = 2020 GROUP BY equipment_type;"}
{"input": " \uac01 \ud56d\ubaa9\ubcc4 \ubc94\uc8c4 \uac74\uc218\ub294 \ud55c \ub2ec\uc5d0 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE crimes (month VARCHAR(255), category VARCHAR(255), count INT); INSERT INTO crimes (month, category, count) VALUES ('Jan', 'Theft', 10), ('Jan', 'Assault', 5), ('Feb', 'Theft', 12), ('Feb', 'Assault', 8);", "output": "SELECT month, category, SUM(count) OVER (PARTITION BY month, category) FROM crimes;"}
{"input": " \ucc3d\uace0 S\uc640 \ucc3d\uace0 T\uc5d0 \uc788\ub294 'I' \uc720\ud615 \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_s(item_id INT, item_type VARCHAR(10), quantity INT);CREATE TABLE warehouse_t(item_id INT, item_type VARCHAR(10), quantity INT);INSERT INTO warehouse_s(item_id, item_type, quantity) VALUES (1, 'I', 200), (2, 'I', 300), (3, 'I', 50);INSERT INTO warehouse_t(item_id, item_type, quantity) VALUES (1, 'I', 150), (2, 'I', 250), (3, 'I', 40);", "output": "SELECT quantity FROM warehouse_s WHERE item_type = 'I' UNION ALL SELECT quantity FROM warehouse_t WHERE item_type = 'I';"}
{"input": " 2020\ub144 \ud68c\uc0ac\ubcc4 '\ud0a4\ud2b8\ub8e8\ub2e4' \uc57d\ud488 \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE pharmaceutical_sales (company VARCHAR(255), drug VARCHAR(255), qty_sold INT, sales_revenue FLOAT, sale_date DATE); INSERT INTO pharmaceutical_sales (company, drug, qty_sold, sales_revenue, sale_date) VALUES ('Merck', 'Keytruda', 400, 24000.00, '2020-01-01');", "output": "SELECT company, SUM(sales_revenue) FROM pharmaceutical_sales WHERE drug = 'Keytruda' AND sale_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY company;"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ube44\uac74 \uc694\ub9ac\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE inventory (item_id INT, quantity INT, unit_price DECIMAL(5,2)); INSERT INTO inventory (item_id, quantity, unit_price) VALUES (1, 10, 12.99), (2, 20, 7.50), (3, 30, 9.99), (4, 40, 15.49), (5, 50, 8.99); CREATE TABLE orders (order_id INT, item_id INT, order_date DATE, restaurant_id INT); INSERT INTO orders (order_id, item_id, order_date, restaurant_id) VALUES (1, 1, '2022-04-01', 3), (2, 3, '2022-04-02', 2), (3, 2, '2022-04-03', 1), (4, 4, '2022-04-04', 1), (5, 5, '2022-04-05', 2); CREATE TABLE menu_items (item_id INT, name TEXT, is_vegan BOOLEAN, is_vegetarian BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu_items (item_id, name, is_vegan, is_vegetarian, price) VALUES (1, 'Quinoa Salad', true, true, 12.99), (2, 'Tofu Stir Fry', true, true, 7.50), (3, 'Chickpea Curry', true, true, 9.99), (4, 'Cheesecake', false, false, 15.49), (5, 'Veggie Pizza', false, true, 8.99); CREATE TABLE restaurants (restaurant_id INT, name TEXT, region TEXT); INSERT INTO restaurants (restaurant_id, name, region) VALUES (1, 'Big Burger', 'East'), (2, 'Veggies R Us', 'Midwest'), (3, 'Tasty Bites', 'West');", "output": "SELECT m.name, SUM(i.quantity) as total_quantity FROM inventory i JOIN orders o ON i.item_id = o.item_id JOIN menu_items m ON i.item_id = m.item_id JOIN restaurants r ON o.restaurant_id = r.restaurant_id WHERE m.is_vegan = true GROUP BY i.item_id ORDER BY total_quantity DESC LIMIT 1;"}
{"input": " \uac01 \ub3d9\ub124\uc758 \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0 \uc218\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co_owned_properties (id INT, neighborhood VARCHAR(50), co_owned BOOLEAN); INSERT INTO co_owned_properties (id, neighborhood, co_owned) VALUES (1, 'Westwood', TRUE), (2, 'Beverly Hills', FALSE), (3, 'Venice', TRUE);", "output": "SELECT neighborhood, SUM(co_owned) OVER (PARTITION BY neighborhood) AS total_co_owned FROM co_owned_properties;"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub41c \uc8fc\uc21c\uc73c\ub85c \uc815\ub82c\ub41c \uc8fc\ub2f9 \uc0ac\uc6a9\ub41c \uace0\uc720\ud55c \uc9c0\ud558\ucca0\uc5ed \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE metro_routes (id INT, station_id INT, trip_week DATE); INSERT INTO metro_routes (id, station_id, trip_week) VALUES (1, 1, '2022-01-01'), (2, 2, '2022-01-01'), (3, 1, '2022-01-08');", "output": "SELECT COUNT(DISTINCT station_id) OVER (ORDER BY trip_week DESC) as unique_stations, trip_week FROM metro_routes WHERE trip_week >= DATEADD(day, -365, GETDATE());"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubcf4\ud5d8\uacc4\uc57d\uc790 \uc218\uc640 \ucd1d \ubcf4\ud5d8\ub8cc\ub97c \uc131\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policy (PolicyId INT, PolicyholderGender VARCHAR(10), PolicyType VARCHAR(50), Premium DECIMAL(10,2), Region VARCHAR(50));", "output": "SELECT Region, PolicyholderGender, COUNT(PolicyId), SUM(Premium) FROM Policy GROUP BY Region, PolicyholderGender;"}
{"input": "\uac00\uc7a5 \ub192\uc740 \uc7ac\uc815 \ub2a5\ub825\uc744 \uac16\ucd98 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE financial_capability_2 (id INT, country VARCHAR(20), capability DECIMAL(3, 2)); INSERT INTO financial_capability_2 (id, country, capability) VALUES (1, 'Switzerland', 0.87), (2, 'Denmark', 0.86), (3, 'Netherlands', 0.85);", "output": "SELECT country, capability FROM (SELECT country, capability, ROW_NUMBER() OVER (ORDER BY capability DESC) rn FROM financial_capability_2) t WHERE rn <= 2;"}
{"input": " \ubc15\ubb3c\uad00 \uac1c\uad00 \uc2dc\uac04 \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE museums (id INT, name VARCHAR(255), opening_hours TIME); INSERT INTO museums (id, name, opening_hours) VALUES (1, 'Metropolitan Museum of Art', '09:00:00');", "output": "WITH updated_museum AS (UPDATE museums SET opening_hours = '10:00:00' WHERE name = 'Metropolitan Museum of Art') SELECT * FROM updated_museum;"}
{"input": " 2021\ub144 \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc720\uc815 \uc2dd\ubcc4", "context": "CREATE TABLE gas_wells (well_id INT, gas_production FLOAT); INSERT INTO gas_wells (well_id, gas_production) VALUES (1, 200), (2, 300), (3, 400), (4, 500), (5, 600);", "output": "SELECT well_id, gas_production FROM (SELECT well_id, gas_production, ROW_NUMBER() OVER (ORDER BY gas_production DESC) as rank FROM gas_wells WHERE YEAR(timestamp) = 2021) t WHERE rank = 1;"}
{"input": " \uce90\ub098\ub2e4 \uc2dc\uc7a5\uc5d0\uc11c \ucc9c\uc5f0 \ud654\uc7a5\ud488\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ProductInventory (product_id INT, product_name TEXT, category TEXT, is_natural BOOLEAN, country TEXT);   CREATE VIEW CanadianNaturalCosmetics AS SELECT * FROM ProductInventory WHERE category = 'cosmetics' AND is_natural = TRUE AND country = 'Canada';", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM ProductInventory WHERE country = 'Canada') as market_share FROM CanadianNaturalCosmetics;"}
{"input": " \ub0a8\uc131 \ud68c\uc6d0\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc6b4\ub3d9 \uc720\ud615\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Members (MemberID INT, Age INT, Gender VARCHAR(10), WorkoutType VARCHAR(20)); INSERT INTO Members (MemberID, Age, Gender, WorkoutType) VALUES (1, 35, 'Male', 'Cycling'), (2, 28, 'Female', 'Yoga'), (3, 42, 'Male', 'Weightlifting');", "output": "SELECT WorkoutType, COUNT(*) AS count FROM Members WHERE Gender = 'Male' GROUP BY WorkoutType ORDER BY count DESC LIMIT 1;"}
{"input": " \uc81c\uc870\uc5c5\uccb4 \uc774\ub984 \ubc0f \uad6d\uac00\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uc0ac\ub8cc \ucca8\uac00\uc81c\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE feed_additives_manufacturers (id INT, feed_additive_id INT, manufacturer_name VARCHAR(255), manufacturer_country VARCHAR(255)); INSERT INTO feed_additives_manufacturers (id, feed_additive_id, manufacturer_name, manufacturer_country) VALUES (1, 1, 'Skretting', 'Netherlands'), (2, 2, 'Cargill Aqua Nutrition', 'USA'), (3, 3, 'BioMar', 'Denmark'), (4, 4, 'Skretting', 'Norway'), (5, 5, 'Cargill Aqua Nutrition', 'Canada');", "output": "SELECT feed_additives.name, manufacturers.name, manufacturers.country FROM feed_additives JOIN feed_additives_manufacturers ON feed_additives.id = feed_additive_id JOIN feed_manufacturers AS manufacturers ON feed_additives_manufacturers.manufacturer_country = manufacturers.country;"}
{"input": " \uc2a4\ud398\uc778 \ud56d\uacf5\uc0ac\uac00 \ucc98\ub9ac\ud558\ub294 \ucd1d \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Carrier (CarrierID INT, Name VARCHAR(255), Country VARCHAR(255), HomePort VARCHAR(255)); INSERT INTO Carrier (CarrierID, Name, Country, HomePort) VALUES (2, 'MSC Mediterranean Shipping Company', 'Switzerland', 'Genoa'); INSERT INTO Carrier (CarrierID, Name, Country, HomePort) VALUES (3, 'Maersk', 'Denmark', 'Copenhagen'); INSERT INTO Carrier (CarrierID, Name, Country, HomePort) VALUES (4, 'COSCO Shipping', 'China', 'Shanghai'); INSERT INTO Carrier (CarrierID, Name, Country, HomePort) VALUES (5, 'Hapag-Lloyd', 'Germany', 'Hamburg'); INSERT INTO Carrier (CarrierID, Name, Country, HomePort) VALUES (6, 'Evergreen Marine', 'Taiwan', 'Taipei');", "output": "SELECT SUM(Cargo.Weight) FROM Cargo JOIN Vessel ON Cargo.VesselID = Vessel.VesselID JOIN Carrier ON Vessel.CarrierID = Carrier.CarrierID WHERE Carrier.Country = 'Spain';"}
{"input": " 2022\ub144 1\uc6d4\uacfc 2\uc6d4\uc5d0 \uc6b4\ub3d9 \uc138\uc158\uc5d0 \ucc38\uc11d\ud55c \ud68c\uc6d0\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Members (MemberID INT, FirstName VARCHAR(50), LastName VARCHAR(50)); INSERT INTO Members (MemberID, FirstName, LastName) VALUES (1, 'John', 'Doe'); INSERT INTO Members (MemberID, FirstName, LastName) VALUES (2, 'Jane', 'Doe'); CREATE TABLE Workouts (WorkoutID INT, MemberID INT, WorkoutDate DATE); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutDate) VALUES (1, 1, '2022-01-12'); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutDate) VALUES (2, 1, '2022-02-13'); INSERT INTO Workouts (WorkoutID, MemberID, WorkoutDate) VALUES (3, 2, '2022-01-15');", "output": "SELECT DISTINCT m.MemberID, m.FirstName, m.LastName FROM Members m INNER JOIN Workouts w1 ON m.MemberID = w1.MemberID INNER JOIN Workouts w2 ON m.MemberID = w2.MemberID WHERE w1.WorkoutDate >= '2022-01-01' AND w1.WorkoutDate < '2022-02-01' AND w2.WorkoutDate >= '2022-02-01' AND w2.WorkoutDate < '2022-03-01';"}
{"input": " 2019\ub144 \uc9c0\uc5ed\ubcc4 \uac80\uc0ac 1\uc778\ub2f9 \ud3c9\uade0 \uc0ac\uac74\uc218\ub294 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE Prosecutors (Name VARCHAR(255), District VARCHAR(255), Caseload INT); INSERT INTO Prosecutors (Name, District, Caseload) VALUES ('Prosecutor 1', 'District A', 50), ('Prosecutor 2', 'District A', 75), ('Prosecutor 3', 'District B', 100);", "output": "SELECT District, AVG(Caseload) as AvgCaseload FROM Prosecutors WHERE YEAR(EventDate) = 2019 GROUP BY District;"}
{"input": " '\uac74\uc124' \ubd80\ubb38\uc5d0\uc11c \uc2e0\uace0\ub41c \uc0ac\uc5c5\uc7a5 \uc548\uc804\uc0ac\uace0\ub294 \uc0ac\uac74 \uc720\ud615\uacfc \ub178\ub3d9\uc870\ud569 \uac00\uc785 \uc5ec\ubd80\uc5d0 \ub530\ub77c \uba87 \uac74\uc774\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE construction_incidents (id INT, union_id INT, sector TEXT, incident_type TEXT, incident_date DATE);", "output": "SELECT incident_type, union_member as union, COUNT(*) as incidents_count FROM (SELECT incident_type, NULL as union_id, 'No' as union_member FROM construction_incidents WHERE union_id IS NULL UNION ALL SELECT incident_type, union_id, 'Yes' as union_member FROM construction_incidents WHERE union_id IS NOT NULL) t GROUP BY incident_type, union_member;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \ucd5c\uc18c 500,000\uba85\uc758 \uace0\uc720 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \uac8c\uc784\uc5d0 \ub300\ud55c \ubd81\ubbf8 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc758 \ucd5c\ub300 \uc0c1\uae08 \ud480\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EsportsEvents (EventID INT, Location VARCHAR(50), GameID INT, NumTeams INT, PrizePool DECIMAL(10,2)); CREATE TABLE Games (GameID INT, UniquePlayers INT); CREATE VIEW Game_Library AS SELECT PlayerID, GameID FROM Player_Games; CREATE VIEW Esports_Events_NA AS SELECT EventID FROM EsportsEvents WHERE Location LIKE '%North America%'; CREATE VIEW Qualified_Games AS SELECT GameID FROM Games JOIN Game_Library ON Games.GameID = Game_Library.GameID GROUP BY GameID HAVING SUM(UniquePlayers) >= 500000;", "output": "SELECT MAX(PrizePool) FROM Esports_Events_NA JOIN EsportsEvents ON Esports_Events_NA.EventID = EsportsEvents.EventID JOIN Qualified_Games ON EsportsEvents.GameID = Qualified_Games.GameID WHERE EsportsEvents.EventDate >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);"}
{"input": " \uae08\uc735 \uc6f0\ube59 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uace0\uac1d\uc758 \uc774\ub984\uacfc \uae08\uc735 \uc6f0\ube59 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub2e4\ub978 \uace0\uac1d\uacfc \ube44\uad50\ud55c \uc810\uc218 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE financial_wellbeing (client_id INT, name TEXT, score INT); INSERT INTO financial_wellbeing (client_id, name, score) VALUES (5, 'Harry', 60), (6, 'Sally', 65), (7, 'George', 50);", "output": "SELECT name, ROW_NUMBER() OVER (ORDER BY score) AS score_rank FROM financial_wellbeing WHERE score = (SELECT MIN(score) FROM financial_wellbeing);"}
{"input": " \ud558\ub8e8\uc5d0 \ub2e8\uc77c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc73c\ub85c \uc2e4\ud589\ub41c \ucd5c\ub300 \ud2b8\ub79c\uc7ad\uc158 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(255), date DATE); CREATE TABLE transactions (transaction_id INT, contract_id INT); INSERT INTO smart_contracts (contract_id, name, date) VALUES (1, 'Contract1', '2021-01-01'), (2, 'Contract2', '2021-01-02'), (3, 'Contract3', '2021-01-03'), (4, 'Contract4', '2021-01-04'), (5, 'Contract5', '2021-01-05'); INSERT INTO transactions (transaction_id, contract_id) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 2), (6, 2), (7, 3), (8, 3), (9, 3), (10, 3), (11, 4), (12, 4), (13, 5), (14, 5), (15, 5);", "output": "SELECT contract_id, MAX(transaction_count) AS max_transactions FROM (SELECT contract_id, COUNT(*) AS transaction_count FROM transactions JOIN smart_contracts ON transactions.contract_id = smart_contracts.contract_id GROUP BY contract_id, date) AS transactions_per_day GROUP BY contract_id;"}
{"input": " \uc2b9\ub960\uc774 60% \uc774\uc0c1\uc778 \ud300\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE games (game_id INT, team VARCHAR(50), position VARCHAR(50), wins INT);", "output": "SELECT team FROM (SELECT team, SUM(wins) AS wins, COUNT(*) AS total_games FROM games GROUP BY team) AS subquery WHERE wins / total_games > 0.6;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \uc815\uc2e0\uac74\uac15\uc13c\ud130 \uc0c1\ub2f4\uc0ac\ub85c\ubd80\ud130 \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_mental_health_centers (center_id INT, counselor_id INT, address VARCHAR(255)); CREATE TABLE counselors (counselor_id INT, name VARCHAR(255), age INT, gender VARCHAR(10)); CREATE TABLE therapy_sessions (session_id INT, patient_id INT, therapist_id INT, session_date DATE); CREATE TABLE patients (patient_id INT, name VARCHAR(255), age INT, gender VARCHAR(10));", "output": "SELECT AVG(patients.age) FROM patients JOIN therapy_sessions ON patients.patient_id = therapy_sessions.patient_id JOIN counselors ON therapy_sessions.therapist_id = counselors.counselor_id JOIN community_mental_health_centers ON counselors.counselor_id = community_mental_health_centers.counselor_id WHERE community_mental_health_centers.name = 'Community Wellness Center';"}
{"input": " Ethereum \ud50c\ub7ab\ud3fc\uc5d0 \ub300\ud574 \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4 ID\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\uac00 \ub9e4\uaca8\uc9c4 \ud574\ub2f9 \ube14\ub85d\uccb4\uc778 \ud68c\uc0ac\uac00 \uc788\ub294 \ub514\uc9c0\ud138 \uc544\ud2b8 \ub9c8\ucf13\ud50c\ub808\uc774\uc2a4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_art_marketplaces (marketplace_id INT, marketplace_name VARCHAR(50), company_id INT); INSERT INTO digital_art_marketplaces (marketplace_id, marketplace_name, company_id) VALUES (1, 'OpenSea', 1); INSERT INTO digital_art_marketplaces (marketplace_id, marketplace_name, company_id) VALUES (2, 'Rarible', 2); INSERT INTO digital_art_marketplaces (marketplace_id, marketplace_name, company_id) VALUES (3, 'SuperRare', 3); CREATE TABLE blockchain_companies (company_id INT, company_name VARCHAR(50), platform VARCHAR(50)); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (1, 'ConsenSys', 'Ethereum'); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (2, 'Chainalysis', 'Bitcoin'); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (3, 'MetaMask', 'Ethereum');", "output": "SELECT dam.marketplace_name, bc.company_name, dam.marketplace_id, ROW_NUMBER() OVER (PARTITION BY bc.platform ORDER BY dam.marketplace_id DESC) as rank FROM digital_art_marketplaces dam JOIN blockchain_companies bc ON dam.company_id = bc.company_id WHERE bc.platform = 'Ethereum';"}
{"input": " \uc791\ub144\uc5d0 \ud654\ubb3c\ucd94\uc801\uae30\ub85d\uc774 \uc5c6\ub294 \uc120\ubc15\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vessels (id INT, name VARCHAR(255)); CREATE TABLE cargo (vessel_id INT, weight INT, timestamp TIMESTAMP); INSERT INTO vessels VALUES (1, 'Vessel A'), (2, 'Vessel B'), (3, 'Vessel C'); INSERT INTO cargo VALUES (1, 10000, '2021-01-01 10:00:00'), (1, 12000, '2021-01-15 12:00:00'), (3, 15000, '2020-01-03 08:00:00');", "output": "DELETE FROM vessels v WHERE id NOT IN (SELECT c.vessel_id FROM cargo c WHERE c.timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 YEAR));"}
{"input": "\ubaa8\ub4e0 \ub178\ub3d9\uc870\ud569\uc758 \ucd1d \uc870\ud569\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_membership (id INT, union VARCHAR(20), member_count INT); INSERT INTO union_membership (id, union, member_count) VALUES (1, 'construction', 3500), (2, 'education', 8000), (3, 'manufacturing', 5000);", "output": "SELECT SUM(member_count) FROM union_membership;"}
{"input": " 2021\ub144 \ub274\uc695\uc8fc \uc911\uc18c\uae30\uc5c5\uccad\uc774 \uae30\uc5c5\uc5d0 \uc81c\uacf5\ud558\ub294 \ucd5c\ub300 \uc7ac\uc815 \uc9c0\uc6d0 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE financial_assistance(assistance_id INT, recipient_id INT, amount FLOAT, agency VARCHAR(255), state VARCHAR(255), year INT); INSERT INTO financial_assistance(assistance_id, recipient_id, amount, agency, state, year) VALUES (1, 1, 50000.0, 'Small Business Administration', 'New York', 2021);", "output": "SELECT MAX(amount) FROM financial_assistance WHERE agency = 'Small Business Administration' AND state = 'New York' AND year = 2021;"}
{"input": " \ucd1d\uacc4 \ud589\uc744 \uc0ac\uc6a9\ud558\uba74 \uac01 \uc6d0\uc778\uc5d0 \ub300\ud55c \uace0\uc720 \uae30\uc99d\uc790\uc758 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name VARCHAR(255), donation_date DATE, cause VARCHAR(255)); INSERT INTO donors (donor_id, donor_name, donation_date, cause) VALUES (1, 'John Doe', '2022-01-01', 'Education'); INSERT INTO donors (donor_id, donor_name, donation_date, cause) VALUES (2, 'Jane Smith', '2022-01-15', 'Health'); INSERT INTO donors (donor_id, donor_name, donation_date, cause) VALUES (3, 'Alice Johnson', '2022-03-01', 'Environment'); INSERT INTO donors (donor_id, donor_name, donation_date, cause) VALUES (1, 'John Doe', '2022-06-15', 'Education'); INSERT INTO donors (donor_id, donor_name, donation_date, cause) VALUES (5, 'David Kim', '2022-04-01', 'Health');", "output": "SELECT cause, COUNT(DISTINCT donor_id) AS num_unique_donors FROM donors GROUP BY cause WITH ROLLUP;"}
{"input": " \uc62c\ud574\ubd80\ud130 \ubcf4\uc874 \ub178\ub825\uc744 \ud1b5\ud574 \ubaa8\ub4e0 \ub3d9\ubb3c\uacfc \uc11c\uc2dd\uc9c0\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE animal (id INT, name VARCHAR(50), species VARCHAR(50), population INT, habitat_id INT); CREATE TABLE habitat (id INT, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE conservation_effort (id INT, habitat_id INT, animal_id INT, start_date DATE, end_date DATE); INSERT INTO animal (id, name, species, population, habitat_id) VALUES (1, 'Tiger', 'Panthera tigris', 250, 1), (2, 'Elephant', 'Loxodonta africana', 500, 2); INSERT INTO habitat (id, name, location) VALUES (1, 'Tropical Rainforest', 'Amazon'), (2, 'Savannah', 'Africa'); INSERT INTO conservation_effort (id, habitat_id, animal_id, start_date, end_date) VALUES (1, 1, 1, '2022-01-01', '2025-12-31'), (2, 2, 2, '2018-07-01', '2023-06-30');", "output": "SELECT a.name, a.species, h.name as habitat_name FROM animal a INNER JOIN habitat h ON h.id = a.habitat_id INNER JOIN conservation_effort ce ON ce.habitat_id = h.id WHERE YEAR(ce.start_date) = YEAR(CURDATE());"}
{"input": " 2022\ub144 \ud0c0\uc9c0\ub9c8\ud560\uc758 \ud55c \ub2ec \ucd5c\ub300 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE taj_mahal_visitors (id INT, visit_month DATE, visitors INT); INSERT INTO taj_mahal_visitors (id, visit_month, visitors) VALUES (1, '2022-01-01', 15000), (2, '2022-02-01', 18000), (3, '2022-03-01', 20000), (4, '2022-04-01', 22000); CREATE TABLE taj_mahal_info (id INT, country VARCHAR(50), name VARCHAR(50)); INSERT INTO taj_mahal_info (id, country, name) VALUES (1, 'India', 'Taj Mahal');", "output": "SELECT MAX(visitors) FROM taj_mahal_visitors WHERE visit_month >= '2022-01-01' AND visit_month < '2023-01-01';"}
{"input": " \ud611\uc0c1 ID 456\uc758 \uc0c1\ud0dc\ub97c '\ucde8\uc18c\ub428'\uc73c\ub85c \ubcc0\uacbd", "context": "CREATE TABLE contracts(id INT, negotiation_id INT, status TEXT);INSERT INTO contracts(id, negotiation_id, status) VALUES (2, 456, 'pending');", "output": "WITH updated_status AS (UPDATE contracts SET status = 'cancelled' WHERE negotiation_id = 456) SELECT * FROM updated_status;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE city_water_consumption (id INT, city VARCHAR(50), yearly_consumption FLOAT, year INT); INSERT INTO city_water_consumption (id, city, yearly_consumption, year) VALUES (1, 'New York', 1440000000, 2020), (2, 'Los Angeles', 720000000, 2020), (3, 'Chicago', 960000000, 2020);", "output": "SELECT city, yearly_consumption FROM (SELECT city, yearly_consumption, ROW_NUMBER() OVER (ORDER BY yearly_consumption DESC) as rn FROM city_water_consumption WHERE year = 2020) t WHERE rn <= 3;"}
{"input": " \uac01\uac01\uc758 \ucd1d \uae30\ubd80\uae08 \ubc0f \uc790\uc6d0 \ubd09\uc0ac \uc2dc\uac04 \uae08\uc561\uacfc \ud568\uaed8 \ubaa8\ub4e0 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE programs (program_id INT, program_name TEXT, location TEXT); CREATE TABLE donations (donation_id INT, program_id INT, donation_amount INT, donation_date DATE); CREATE TABLE volunteer_hours (volunteer_id INT, program_id INT, volunteer_hours INT, volunteer_date DATE);", "output": "SELECT programs.program_name, SUM(donations.donation_amount) as total_donations, SUM(volunteer_hours.volunteer_hours) as total_volunteer_hours FROM programs LEFT JOIN donations ON programs.program_id = donations.program_id LEFT JOIN volunteer_hours ON programs.program_id = volunteer_hours.program_id GROUP BY programs.program_name;"}
{"input": " \uc74c\uc545\uacfc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ucd1d \ud3b8\uc758 \uc2dc\uc124 \uc218\uc640 \uc218\ud559 \ubd80\uc11c\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ucd1d \ud3b8\uc758 \uc2dc\uc124 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MusicAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO MusicAccommodations (AccommodationID, Department) VALUES (1, 'Music'), (2, 'Music'), (3, 'Music'); CREATE TABLE MathematicsAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO MathematicsAccommodations (AccommodationID, Department) VALUES (4, 'Mathematics'), (5, 'Mathematics'), (6, 'Mathematics');", "output": "SELECT COUNT(*) FROM MusicAccommodations WHERE Department = 'Music' UNION SELECT COUNT(*) FROM MathematicsAccommodations WHERE Department = 'Mathematics';"}
{"input": " \uc2e0\uccb4 \uc7a5\uc560 \ubc0f \ud559\uc2b5 \uc7a5\uc560\uc5d0 \ub300\ud55c \ud3b8\uc758\ub97c \ubc1b\uc740 \ud559\uc0dd\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_accommodations (student_id INT, accommodation_type VARCHAR(255)); CREATE TABLE physical_impairments (student_id INT, impairment_type VARCHAR(255)); CREATE TABLE learning_disabilities (student_id INT, disability_type VARCHAR(255));", "output": "SELECT COUNT(*) FROM student_accommodations SA JOIN physical_impairments PI ON SA.student_id = PI.student_id JOIN learning_disabilities LD ON SA.student_id = LD.student_id WHERE SA.accommodation_type = 'Physical Impairment' AND LD.disability_type = 'Learning Disability';"}
{"input": " \uac01 \ubc1c\uc0ac\uc5d0 \uad00\ub828\ub41c \uc704\uc131 \uc218\uc640 \uad6d\uac00 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE satellites (satellite_id INT, country VARCHAR(50), launch_date DATE); INSERT INTO satellites (satellite_id, country, launch_date) VALUES (1, 'China', '2020-01-01'), (2, 'India', '2019-02-03'), (3, 'Japan', '2018-03-04'); CREATE TABLE launches (launch_id INT, mission_id INT, launch_date DATE); INSERT INTO launches (launch_id, mission_id, launch_date) VALUES (1, 1, '2021-01-01'), (2, 2, '2020-02-02'); CREATE TABLE missions (mission_id INT, mission_name VARCHAR(50), country VARCHAR(50)); INSERT INTO missions (mission_id, mission_name, country) VALUES (1, 'Mission1', 'China'), (2, 'Mission2', 'India');", "output": "SELECT s.launch_date, COUNT(DISTINCT s.country) AS countries, COUNT(DISTINCT satellites.satellite_id) AS satellites FROM satellites INNER JOIN launches ON satellites.launch_date = launches.launch_date INNER JOIN missions ON launches.mission_id = missions.mission_id GROUP BY s.launch_date;"}
{"input": "\uc9c0\ub09c 1\ub144\uac04 \uac01 \uc0ac\uc5c5\uc7a5\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ud3d0\uae30\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WasteData (SiteName VARCHAR(50), WasteQuantity INT, WasteDate DATE); INSERT INTO WasteData (SiteName, WasteQuantity, WasteDate) VALUES ('Site A', 2000, '2022-02-15');", "output": "SELECT SiteName, SUM(WasteQuantity) FROM WasteData WHERE WasteDate >= CURRENT_DATE - INTERVAL '1 year' GROUP BY SiteName;"}
{"input": " \uac01 \ubc14\ub2e4\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591 \uc885\uc774 \ubc1c\uacac\ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_species_ocean (species TEXT, ocean TEXT);", "output": "SELECT ocean, COUNT(species) FROM marine_species_ocean GROUP BY ocean;"}
{"input": " \uae30\uc220\ubd80 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc5d4\uc9c0\ub2c8\uc5b4\uc758 \uc5f0\ub839\ubcc4 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Position VARCHAR(50), Salary FLOAT, Age INT);", "output": "SELECT e.Age, AVG(e.Salary) FROM Employees e INNER JOIN (SELECT EmployeeID, 'Software Engineer' AS Position FROM TalentAcquisition WHERE Position = 'Software Engineer') ta ON e.EmployeeID = ta.EmployeeID WHERE e.Department = 'Technology' GROUP BY e.Age;"}
{"input": " \ub9bd\uc2a4\ud2f1 \uc81c\ud488\uc5d0 \uc5b4\ub5a4 \uc720\uae30\ub18d \uacf5\uae09\uc5c5\uccb4\uac00 \uc0ac\uc6a9\ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, name VARCHAR(50), organic BOOLEAN); INSERT INTO products (product_id, name, organic) VALUES (1, 'Lipstick A', true), (2, 'Lipstick B', false), (3, 'Eyeshadow C', false); CREATE TABLE ingredient_suppliers (ingredient_id INT, supplier_country VARCHAR(50), product_id INT, organic_source BOOLEAN); INSERT INTO ingredient_suppliers (ingredient_id, supplier_country, product_id, organic_source) VALUES (1, 'US', 1, true), (2, 'CA', 1, false), (3, 'US', 2, false), (4, 'MX', 3, false);", "output": "SELECT DISTINCT supplier_country FROM ingredient_suppliers WHERE organic_source = true AND ingredient_suppliers.product_id IN (SELECT product_id FROM products WHERE products.name = 'Lipstick A');"}
{"input": " \uac01 \ud300 \ud32c\uc758 \ud3c9\uade0 \uc5f0\ub839\uacfc \ud2f0\ucf13 \uc218\uc775\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE fans (fan_id INT, team_id INT, age INT); INSERT INTO fans (fan_id, team_id, age) VALUES (1, 1, 35), (2, 1, 45), (3, 2, 25), (4, 2, 30);", "output": "SELECT t.team_name, AVG(f.age) as avg_age, SUM(ts.revenue) as avg_revenue FROM teams t JOIN fans f ON t.team_id = f.team_id JOIN ticket_sales ts ON t.team_id = ts.team_id GROUP BY t.team_name;"}
{"input": " \ub9e4\ub2ec \uc5b4\ub5a4 \ub3d9\ubb3c \uc885\uc774 \uad6c\uc870\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE rescue_centers (center_id INT, center_name VARCHAR(50), region VARCHAR(50));CREATE TABLE animal_rescues (rescue_id INT, animal_id INT, center_id INT, rescue_date DATE); INSERT INTO rescue_centers (center_id, center_name, region) VALUES (1, 'Rescue Center A', 'North'), (2, 'Rescue Center B', 'South'), (3, 'Rescue Center C', 'East'); INSERT INTO animal_rescues (rescue_id, animal_id, center_id, rescue_date) VALUES (1001, 101, 1, '2021-01-01'), (1002, 102, 2, '2021-03-01'), (1003, 103, 3, '2021-05-01');", "output": "SELECT EXTRACT(MONTH FROM rescue_date) AS month, s.species_name, COUNT(ar.animal_id) AS total_rescued FROM animal_rescues ar JOIN rescue_centers rc ON ar.center_id = rc.center_id JOIN animal_species s ON ar.animal_id = s.species_id GROUP BY month, s.species_name;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uc7ac\ubc30\ub418\ub294 \uc815\ubc00 \ub18d\uc5c5 \uc791\ubb3c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Crops(state VARCHAR(255), name VARCHAR(255)); INSERT INTO Crops(state, name) VALUES('California', 'Corn'), ('California', 'Soybean'), ('California', 'Wheat'), ('Texas', 'Cotton'), ('Texas', 'Rice'), ('Texas', 'Corn');", "output": "SELECT name FROM Crops WHERE state = 'California' INTERSECT SELECT name FROM Crops WHERE state = 'Texas';"}
{"input": " \uc9c0\ub09c 3\ub144 \ub3d9\uc548 NATO\uac00 \uc2dc\uc791\ud55c \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Innovation_Project (project VARCHAR(255), sponsor VARCHAR(255), start_date DATE); INSERT INTO Innovation_Project (project, sponsor, start_date) VALUES ('Stealth Technology', 'NATO', '2020-01-01');", "output": "SELECT COUNT(project) FROM Innovation_Project WHERE sponsor = 'NATO' AND start_date >= DATE(NOW()) - INTERVAL 3 YEAR;"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uae34\uae09 \uc0ac\uac74\uc758 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_incidents (id INT, incident_type VARCHAR(50), incident_location VARCHAR(100), incident_date DATE, city VARCHAR(50), state VARCHAR(50)); INSERT INTO emergency_incidents (id, incident_type, incident_location, incident_date, city, state) VALUES (1, 'Medical Emergency', '123 Main St', '2021-01-01', 'Houston', 'TX');", "output": "SELECT COUNT(*) FROM emergency_incidents WHERE state = 'TX';"}
{"input": " \uac00\uc744 \ud559\uae30\uc5d0 \uc81c\uacf5\ub418\ub294 \ucd1d \uc219\ubc15 \uc2dc\uc124 \uc218\uc640 \ubd04 \ud559\uae30\uc5d0 \uc81c\uacf5\ub418\ub294 \ucd1d \uc219\ubc15 \uc2dc\uc124 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FallAccommodations (AccommodationDate DATE); INSERT INTO FallAccommodations (AccommodationDate) VALUES ('2022-08-01'), ('2022-09-01'), ('2022-10-01'); CREATE TABLE SpringAccommodations (AccommodationDate DATE); INSERT INTO SpringAccommodations (AccommodationDate) VALUES ('2023-01-01'), ('2023-02-01'), ('2023-03-01');", "output": "SELECT COUNT(*) FROM FallAccommodations WHERE EXTRACT(MONTH FROM AccommodationDate) BETWEEN 8 AND 12 UNION SELECT COUNT(*) FROM SpringAccommodations WHERE EXTRACT(MONTH FROM AccommodationDate) BETWEEN 1 AND 6;"}
{"input": " \uc601\uad6d\uc5d0\uc11c '\ucc9c\uc5f0' \uc131\ubd84 \ub77c\ubca8\uc774 \ud45c\uc2dc\ub41c \ud654\uc7a5\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ProductIngredients (ProductID INT, Ingredient VARCHAR(50), Label VARCHAR(50)); INSERT INTO ProductIngredients (ProductID, Ingredient, Label) VALUES (201, 'Aloe Vera', 'Natural'), (202, 'Parabens', 'Synthetic'), (203, 'Shea Butter', 'Natural'), (204, 'Fragrance', 'Synthetic'), (205, 'Coconut Oil', 'Natural');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM ProductIngredients WHERE Country = 'UK')) AS Percentage FROM ProductIngredients WHERE Label = 'Natural' AND Country = 'UK';"}
{"input": " \uc218\uac10\ub41c \uc9c0 3\ub144 \ubbf8\ub9cc\uc778 \ubaa8\ub4e0 \uc218\uac10\uc790\uc758 \uc774\ub984\uacfc \ubb38\uc7a5\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE inmates (inmate_id INT, inmate_name VARCHAR(255), sentence_length INT, PRIMARY KEY (inmate_id)); INSERT INTO inmates (inmate_id, inmate_name, sentence_length) VALUES (1, 'Inmate 1', 60), (2, 'Inmate 2', 36), (3, 'Inmate 3', 72);", "output": "SELECT inmate_name, sentence_length FROM inmates WHERE sentence_length < 36;"}
{"input": " 'The Rolling Stones' \ubc0f 'Led Zeppelin' \ubc34\ub4dc\uc758 \ub178\ub798\uac00 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uc7ac\uc0dd \ubaa9\ub85d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE playlists (playlist_id INT, playlist VARCHAR(50)); CREATE TABLE playlist_songs (playlist_id INT, song_id INT); CREATE TABLE songs (song_id INT, song VARCHAR(50), band VARCHAR(50)); INSERT INTO playlists VALUES (1, 'Classic Rock'), (2, 'Guitar Heroes'), (3, 'Rock Legends'); INSERT INTO playlist_songs VALUES (1, 1), (1, 2), (2, 2), (3, 3); INSERT INTO songs VALUES (1, 'Paint It Black', 'The Rolling Stones'), (2, 'Stairway To Heaven', 'Led Zeppelin'), (3, 'So What', 'Miles Davis');", "output": "SELECT p.playlist FROM playlists p JOIN playlist_songs ps1 ON p.playlist_id = ps1.playlist_id JOIN playlist_songs ps2 ON p.playlist_id = ps2.playlist_id JOIN songs s1 ON ps1.song_id = s1.song_id JOIN songs s2 ON ps2.song_id = s2.song_id WHERE s1.band = 'The Rolling Stones' AND s2.band = 'Led Zeppelin';"}
{"input": " \uc6d4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ud3c9\uade0 \uc0dd\uc0b0\uc728\ub85c \uc815\ub82c\ud558\uba74 \uac01 \uc81c\ud488\uc758 \ud3c9\uade0 \uc0dd\uc0b0\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (product_id INT, supplier_id INT, production_date DATE, production_rate INT); INSERT INTO production (product_id, supplier_id, production_date, production_rate) VALUES (1, 1, '2022-02-01', 500), (2, 1, '2022-02-05', 600);", "output": "SELECT product_id, DATE_TRUNC('month', production_date) AS month, AVG(production_rate) AS avg_production_rate, RANK() OVER (ORDER BY AVG(production_rate) DESC) AS ranking FROM production GROUP BY product_id, month ORDER BY avg_production_rate DESC;"}
{"input": " \uc544\uc2dc\uc544 \uc544\ud2f0\uc2a4\ud2b8\ubcc4 \ucd1d \uc74c\uc6d0 \uc218\uc640 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(50), Region VARCHAR(50)); CREATE TABLE Songs (SongID INT, ArtistID INT, SongName VARCHAR(50), Sales INT);", "output": "SELECT A.ArtistName, R.Region, COUNT(DISTINCT S.SongID) as SongCount, SUM(S.Sales) as TotalSales FROM Songs S JOIN Artists A ON S.ArtistID = A.ArtistID JOIN (SELECT ArtistID, Region FROM Artists WHERE Region = 'Asia') R ON A.ArtistID = R.ArtistID GROUP BY A.ArtistName, R.Region;"}
{"input": " \uad11\uc0b0 \ud604\uc7a5\ub2f9 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uacfc \uad11\uc0b0 \ud68c\uc0ac\ub2f9 \ucd1d \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_companies (company_id INT, company_name TEXT); INSERT INTO mining_companies (company_id, company_name) VALUES (1001, 'Mining Corp A'), (1002, 'Mining Corp B'), (1003, 'Mining Corp C'); CREATE TABLE mining_sites (site_id INT, site_name TEXT, country TEXT, energy_consumption FLOAT, company_id INT); INSERT INTO mining_sites (site_id, site_name, country, energy_consumption, company_id) VALUES (1, 'Porgera Mine', 'Papua New Guinea', 20000, 1001), (2, 'Cerro Verde Mine', 'Peru', 30000, 1001), (3, 'Gruyere Mine', 'Australia', 40000, 1002), (4, 'Veladero Mine', 'Argentina', 50000, 1002), (5, 'Kidd Mine', 'Canada', 60000, 1003), (6, 'Ducktown Mine', 'USA', 70000, 1003);", "output": "SELECT company_name, AVG(energy_consumption) AS avg_energy_consumption FROM mining_sites JOIN mining_companies ON mining_sites.company_id = mining_companies.company_id GROUP BY company_name; SELECT company_name, SUM(energy_consumption) AS total_energy_consumption FROM mining_sites JOIN mining_companies ON mining_sites.company_id = mining_companies.company_id GROUP BY company_name;"}
{"input": " \ub300\uc11c\uc591\uacfc \ud0dc\ud3c9\uc591\uc758 \uc2ec\ud574\ud0d0\uc0ac \ud69f\uc218\ub294 \ucd1d \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE deep_sea_expeditions (expedition_name VARCHAR(255), ocean VARCHAR(255)); INSERT INTO deep_sea_expeditions (expedition_name, ocean) VALUES ('Expedition 1', 'Atlantic Ocean'), ('Expedition 2', 'Pacific Ocean');", "output": "SELECT SUM(count) FROM (SELECT ocean, COUNT(*) as count FROM deep_sea_expeditions GROUP BY ocean) as subquery;"}
{"input": " \uad6d\uac00\ubcc4 \uacf5\uc815\ubb34\uc5ed \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), Country VARCHAR(50), ProductType VARCHAR(50)); INSERT INTO Products VALUES (1, 'Product 1', 'USA', 'Fair Trade'), (2, 'Product 2', 'Canada', 'Fair Trade'), (3, 'Product 3', 'USA', 'Regular'), (4, 'Product 4', 'Mexico', 'Fair Trade');", "output": "SELECT Country, 100.0 * COUNT(CASE WHEN ProductType = 'Fair Trade' THEN 1 END) / COUNT(*) as FairTradePercentage FROM Products GROUP BY Country;"}
{"input": " \uac01 \uad6d\uac00\uc5d0\ub294 \uba87 \uba85\uc758 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_id INT, country_name VARCHAR(50)); CREATE TABLE mobile_subscribers (subscriber_id INT, subscriber_name VARCHAR(50), country_id INT); CREATE TABLE broadband_subscribers (subscriber_id INT, subscriber_name VARCHAR(50), country_id INT);", "output": "SELECT c.country_name, COUNT(m.subscriber_id) AS mobile_subscribers, COUNT(b.subscriber_id) AS broadband_subscribers FROM countries c LEFT JOIN mobile_subscribers m ON c.country_id = m.country_id LEFT JOIN broadband_subscribers b ON c.country_id = b.country_id GROUP BY c.country_name;"}
{"input": " \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc544\ud504\ub9ac\uce74 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE subscribers (id INT, name VARCHAR(50), type VARCHAR(20), data_usage FLOAT, subscription_date DATE); INSERT INTO subscribers (id, name, type, data_usage, subscription_date) VALUES (6, 'Yusuf Oluwatobi', 'Mobile', 2.9, '2020-12-25'); CREATE TABLE regions (id INT, name VARCHAR(50), continent VARCHAR(50)); INSERT INTO regions (id, name, continent) VALUES (6, 'Africa', 'Africa'); CREATE TABLE subscriber_regions (subscriber_id INT, region_id INT); INSERT INTO subscriber_regions (subscriber_id, region_id) VALUES (6, 6);", "output": "SELECT r.name AS country, AVG(s.data_usage) AS avg_data_usage FROM subscribers s INNER JOIN subscriber_regions sr ON s.id = sr.subscriber_id INNER JOIN regions r ON sr.region_id = r.id WHERE s.type = 'Mobile' AND r.continent = 'Africa' GROUP BY r.name ORDER BY avg_data_usage DESC LIMIT 5;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \uad11\uc0b0\uc758 \uc0dd\uc0b0\uc131 \uc99d\uac00\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mine_productivity (id INT, mine_name VARCHAR(50), productivity FLOAT, year INT); INSERT INTO mine_productivity (id, mine_name, productivity, year) VALUES (1, 'Copper Mountain', 25.6, 2017), (2, 'Barrick Gold', 22.8, 2018), (3, 'Newmont Goldcorp', 28.5, 2019), (4, 'Copper Mountain', 27.3, 2018), (5, 'Barrick Gold', 24.5, 2019);", "output": "SELECT mine_name, year, (productivity - LAG(productivity) OVER (PARTITION BY mine_name ORDER BY year)) / LAG(productivity) OVER (PARTITION BY mine_name ORDER BY year) AS productivity_growth_rate FROM mine_productivity;"}
{"input": " \uad6d\uac00\ubcc4 \uc2a4\ud3ec\uce20\uce74\uc758 \uac24\ub7f0\ub2f9 \ud3c9\uade0 \ub9c8\uc77c \uacc4\uc0b0", "context": "CREATE TABLE vehicles (vehicle_id INT, vehicle_type VARCHAR(20), country VARCHAR(20), mpg INT); INSERT INTO vehicles VALUES (1, 'Sports Car', 'USA', 25), (2, 'SUV', 'Canada', 22), (3, 'Sports Car', 'USA', 30), (4, 'Hatchback', 'Mexico', 35), (5, 'Sports Car', 'Canada', 28);", "output": "SELECT country, AVG(mpg) FROM vehicles WHERE vehicle_type = 'Sports Car' GROUP BY country;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \ubcf4\uc870\uae08\uc744 \ubc1b\uc740 10\uac1c \uc870\uc9c1\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Organizations (OrgID INT, OrgName TEXT); CREATE TABLE Grants (GrantID INT, OrgID INT, Amount DECIMAL);", "output": "SELECT OrgName, COUNT(*) OVER (PARTITION BY OrgID ORDER BY COUNT(*) DESC) AS NumGrants FROM Organizations JOIN Grants ON Organizations.OrgID = Grants.OrgID GROUP BY OrgID ORDER BY NumGrants LIMIT 10;"}
{"input": " \uc131\uc7a5\uae30 \ub3d9\uc548 \uac01 \uc791\ubb3c \uc720\ud615\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc628\ub3c4\ub97c \ucc3e\uc73c\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE crop (id INT, name VARCHAR(255)); INSERT INTO crop (id, name) VALUES (1, 'Corn'), (2, 'Soybeans'), (3, 'Wheat'); CREATE TABLE growing_season (id INT, crop_id INT, start_date DATE, end_date DATE); CREATE TABLE weather (id INT, crop_id INT, temperature DECIMAL(5,2), timestamp TIMESTAMP); INSERT INTO crop (id, name) VALUES (1, 'Corn'), (2, 'Soybeans'), (3, 'Wheat'); INSERT INTO growing_season (id, crop_id, start_date, end_date) VALUES (1, 1, '2021-04-01', '2021-09-30'), (2, 2, '2021-05-01', '2021-10-15'), (3, 3, '2021-03-15', '2021-08-31'); INSERT INTO weather (id, crop_id, temperature, timestamp) VALUES (1, 1, 22.5, '2021-04-02 10:00:00'), (2, 2, 20.0, '2021-05-05 15:00:00'), (3, 3, 28.0, '2021-03-20 09:00:00');", "output": "SELECT c.name, MAX(w.temperature) AS max_temp, MIN(w.temperature) AS min_temp FROM crop c JOIN growing_season gs ON c.id = gs.crop_id JOIN weather w ON c.id = w.crop_id AND w.timestamp BETWEEN gs.start_date AND gs.end_date GROUP BY c.name;"}
{"input": " \ub7f0\ub358 \uc9c0\ud558\ucca0 \uc5ec\ud589\uc758 \ucd5c\ub300 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underground (id INT, line VARCHAR(20), fare DECIMAL(5,2)); INSERT INTO underground (id, line, fare) VALUES (1, 'Circle', 4.90), (2, 'District', 5.10), (3, 'Hammersmith', 6.00);", "output": "SELECT MAX(fare) FROM underground;"}
{"input": "\uc791\ub144 \uac19\uc740 \ubd84\uae30\uc640 \ube44\uad50\ud558\uc5ec \uc720\ub7fd \ub0b4 \uac01 \ubaa9\uc801\uc9c0\uc758 \ud574\uc678 \ubc29\ubb38\uac1d \uc218 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE european_tourism (destination VARCHAR(255), year INT, quarter INT, visitors INT); INSERT INTO european_tourism (destination, year, quarter, visitors) VALUES ('Barcelona', 2021, 1, 800000); INSERT INTO european_tourism (destination, year, quarter, visitors) VALUES ('Barcelona', 2021, 2, 900000); INSERT INTO european_tourism (destination, year, quarter, visitors) VALUES ('Barcelona', 2020, 1, 700000); INSERT INTO european_tourism (destination, year, quarter, visitors) VALUES ('Barcelona', 2020, 2, 800000);", "output": "SELECT destination, year, quarter, visitors, NTILE(4) OVER (ORDER BY visitors) as quartile, (visitors - LAG(visitors) OVER (PARTITION BY destination ORDER BY year, quarter))*100.0 / LAG(visitors) OVER (PARTITION BY destination ORDER BY year, quarter) as pct_change FROM european_tourism;"}
{"input": "\uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \uc7ac\ud65c\uc6a9\ud55c \ucd1d \ud3d0\uae30\ubb3c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c? \uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \uc7ac\ud65c\uc6a9\ub41c \ucd1d \ud3d0\uae30\ubb3c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\uae4c?", "context": "CREATE TABLE waste_recycled (recycled_id INT, supplier_id INT, waste_recycled INT, recycling_date DATE); INSERT INTO waste_recycled (recycled_id, supplier_id, waste_recycled, recycling_date) VALUES (1, 1, 1000, '2022-01-01'), (2, 1, 2000, '2022-02-01');", "output": "SELECT supplier_id, DATE_TRUNC('year', recycling_date) AS year, SUM(waste_recycled) AS total_waste_recycled, RANK() OVER (PARTITION BY supplier_id ORDER BY SUM(waste_recycled) DESC) AS ranking FROM waste_recycled GROUP BY supplier_id, year ORDER BY total_waste_recycled DESC;"}
{"input": " 2021\ub144\uc5d0\ub294 \ud55c \ub2ec\uc5d0 \uba87 \uac74\uc758 \ub3c5\uac10 \uc0ac\ub840\uac00 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE FluTracking (ID INT, Month DATE, Cases INT, Year INT); INSERT INTO FluTracking (ID, Month, Cases, Year) VALUES (1, '2021-01-01', 2500, 2021), (2, '2021-02-01', 3000, 2021), (3, '2021-03-01', 2000, 2021);", "output": "SELECT EXTRACT(MONTH FROM Month) as Month, SUM(Cases) as TotalCases FROM FluTracking WHERE Year = 2021 GROUP BY Month ORDER BY Month;"}
{"input": " \ubaa8\ub4e0 \ube0c\ub79c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Brands (BrandID INT, BrandName VARCHAR(50)); INSERT INTO Brands (BrandID, BrandName) VALUES (1, 'Brand1'), (2, 'Brand2'), (3, 'Brand3'); CREATE TABLE BrandMaterials (BrandID INT, MaterialID INT, Quantity INT); INSERT INTO BrandMaterials (BrandID, MaterialID, Quantity) VALUES (1, 1, 100), (1, 2, 200), (2, 1, 150);", "output": "SELECT SUM(Quantity) FROM BrandMaterials;"}
{"input": " \ud2b9\uc815 \uae30\uc0c1 \uad00\uce21\uc18c 'WS1'\uc5d0 \ub300\ud55c 3\uc6d4\uc758 \ub9e4\uc77c \uc0c1\uc704 3\uac1c \uc2b5\ub3c4 \uac12\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE weather_stations (id INT, name TEXT, country TEXT); INSERT INTO weather_stations (id, name, country) VALUES (1, 'WS1', 'US'), (2, 'WS2', 'CA'); CREATE TABLE humidity (id INT, station_id INT, timestamp TIMESTAMP, humidity FLOAT); INSERT INTO humidity (id, station_id, timestamp, humidity) VALUES (1, 1, '2021-03-01 12:00:00', 55), (2, 1, '2021-03-01 16:00:00', 60), (3, 1, '2021-03-01 20:00:00', 70), (4, 1, '2021-03-02 12:00:00', 45), (5, 1, '2021-03-02 16:00:00', 50), (6, 1, '2021-03-02 20:00:00', 55);", "output": "SELECT station_id, timestamp, humidity FROM (SELECT station_id, timestamp, humidity, RANK() OVER (PARTITION BY timestamp ORDER BY humidity DESC) rnk FROM humidity WHERE station_id = 1 AND EXTRACT(MONTH FROM timestamp) = 3) t WHERE rnk <= 3;"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \ud654\ud559 \ud3d0\uae30\ubb3c \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc138 \uacf3\uc758 \ud604\uc7a5\uacfc \ud574\ub2f9 \uc21c\uc704\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE chemical_waste (site_name VARCHAR(50), waste_amount FLOAT, region VARCHAR(50)); INSERT INTO chemical_waste (site_name, waste_amount, region) VALUES ('Site A', 150.5, 'South America'), ('Site B', 125.7, 'South America'), ('Site C', 200.3, 'South America'), ('Site D', 75.9, 'South America'), ('Site E', 175.4, 'South America');", "output": "SELECT site_name, waste_amount, RANK() OVER (PARTITION BY region ORDER BY waste_amount DESC) as waste_rank FROM chemical_waste WHERE region = 'South America' AND waste_rank <= 3;"}
{"input": " \ucf00\ub0d0\uc758 \uc800\ub834\ud55c \ubd80\ub3d9\uc0b0\uc5d0 \ub300\ud55c \uc18c\ub4dd \uacc4\uce35\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Property (id INT, address VARCHAR(255), city VARCHAR(255), state VARCHAR(255), country VARCHAR(255), price DECIMAL(10,2), size INT, sustainable_practices BOOLEAN, coop_owned BOOLEAN); CREATE TABLE Affordability (id INT, property_id INT, affordability_index DECIMAL(4,2), income_bracket VARCHAR(255), housing_cost_percentage DECIMAL(4,2));", "output": "SELECT DISTINCT Affordability.income_bracket FROM Affordability WHERE Affordability.property_id IN (SELECT Property.id FROM Property WHERE Property.country = 'Kenya') AND Affordability.housing_cost_percentage <= 30;"}
{"input": " 2020\ub144 \uccab \uae30\ubd80\uc790\uc758 \uae30\ubd80\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donations (donor_id INT, donation_date DATE, donation_amount FLOAT); INSERT INTO donations (donor_id, donation_date, donation_amount) VALUES (1, '2020-01-01', 50.00), (2, '2019-12-31', 100.00), (3, '2020-05-15', 25.00);", "output": "SELECT COUNT(*) FROM donations WHERE YEAR(donation_date) = 2020 AND donor_id NOT IN (SELECT donor_id FROM donations WHERE YEAR(donation_date) < 2020);"}
{"input": " \ud14d\uc0ac\uc2a4\uc640 \ud50c\ub85c\ub9ac\ub2e4\uc5d0\uc11c\ub294 \ub300\uccb4 \uc0ac\ubc95 \uc870\uce58\ub97c \ud1b5\ud574 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud615\uc0ac \uc0ac\uac74\uc774 \ud574\uacb0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE alternative_justice_tx (case_id INT, state VARCHAR(20)); INSERT INTO alternative_justice_tx VALUES (1, 'Texas'), (2, 'Texas'), (3, 'Texas'); CREATE TABLE alternative_justice_fl (case_id INT, state VARCHAR(20)); INSERT INTO alternative_justice_fl VALUES (4, 'Florida'), (5, 'Florida'), (6, 'Florida');", "output": "SELECT COUNT(*) FROM alternative_justice_tx UNION ALL SELECT COUNT(*) FROM alternative_justice_fl;"}
{"input": " \uc7ac\uace0\uac00 \uc788\ub294 \uac01 \ud328\ube0c\ub9ad \uc720\ud615\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fabric_stock (id INT PRIMARY KEY, fabric VARCHAR(20), quantity INT);", "output": "SELECT fabric, SUM(quantity) FROM fabric_stock GROUP BY fabric;"}
{"input": " 2019\ub144\uacfc 2020\ub144 '\ucc44\uad74' \ubc0f '\uc7ac\ud65c\uc6a9' \uc18c\uc2a4\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uac00\ub3cc\ub9ac\ub284\uc758 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining (year INT, element VARCHAR(10), quantity INT); INSERT INTO mining VALUES (2019, 'Gadolinium', 1400), (2020, 'Gadolinium', 1600); CREATE TABLE recycling (year INT, element VARCHAR(10), quantity INT); INSERT INTO recycling VALUES (2019, 'Gadolinium', 1000), (2020, 'Gadolinium', 1200);", "output": "SELECT year, SUM(quantity) FROM (SELECT year, quantity FROM mining WHERE element = 'Gadolinium' UNION ALL SELECT year, quantity FROM recycling WHERE element = 'Gadolinium') AS total_sources GROUP BY year HAVING year IN (2019, 2020);"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \ud68c\uc6d0\uc758 \uc6b4\ub3d9\uc73c\ub85c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workout_fees (id INT, member_id INT, fee DECIMAL(5,2)); INSERT INTO workout_fees (id, member_id, fee) VALUES (1, 1, 10.00), (2, 2, 15.00);", "output": "SELECT members.member_name, SUM(workout_fees.fee) AS total_revenue FROM members INNER JOIN workout_fees ON members.id = workout_fees.member_id INNER JOIN workouts ON workout_fees.id = workouts.id WHERE workouts.date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY members.member_name;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE corals (id INT, common_name TEXT, scientific_name TEXT, conservation_status TEXT); INSERT INTO corals (id, common_name, scientific_name, conservation_status) VALUES (1, 'Brain Coral', 'Diploria labyrinthiformis', 'Least Concern'), (2, 'Staghorn Coral', 'Acropora cervicornis', 'Critically Endangered'); CREATE TABLE seagrasses (id INT, common_name TEXT, scientific_name TEXT, conservation_status TEXT); INSERT INTO seagrasses (id, common_name, scientific_name, conservation_status) VALUES (1, 'Turtle Grass', 'Thalassia testudinum', 'Least Concern'), (2, 'Manatee Grass', 'Syringodium filiforme', 'Least Concern');", "output": "SELECT COUNT(*) FROM (SELECT * FROM marine_species UNION ALL SELECT * FROM corals UNION ALL SELECT * FROM seagrasses) AS all_species;"}
{"input": " \uac01 \uac1c\ubc1c\uc790\uc640 \uad00\ub828\ub41c \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE developers (developer_id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO developers (developer_id, name, country) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'China'); CREATE TABLE dapps (dapp_id INT, name VARCHAR(50), developer_id INT); INSERT INTO dapps (dapp_id, name, developer_id) VALUES (1, 'DApp1', 1), (2, 'DApp2', 2); CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(50), developer_id INT); INSERT INTO smart_contracts (contract_id, name, developer_id) VALUES (1, 'SmartContract1', 1), (2, 'SmartContract2', 2);", "output": "SELECT developers.name, COUNT(dapps.dapp_id) as dapp_count, COUNT(smart_contracts.contract_id) as contract_count FROM developers LEFT JOIN dapps ON developers.developer_id = dapps.developer_id LEFT JOIN smart_contracts ON developers.developer_id = smart_contracts.developer_id GROUP BY developers.name;"}
{"input": "\uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc0c1\uc704 10\uac1c \ub514\uc9c0\ud138 \uc9c0\uac11\uc758 \uc77c\uc77c \ud3c9\uade0 \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_wallets (id INT, name VARCHAR(50), daily_tx_volume INT); INSERT INTO digital_wallets (id, name, daily_tx_volume) VALUES (1, 'Wallet1', 1000), (2, 'Wallet2', 2000), (3, 'Wallet3', 3000), (4, 'Wallet4', 4000), (5, 'Wallet5', 5000), (6, 'Wallet6', 6000), (7, 'Wallet7', 7000), (8, 'Wallet8', 8000), (9, 'Wallet9', 9000), (10, 'Wallet10', 10000), (11, 'Wallet11', 11000);", "output": "SELECT name, AVG(daily_tx_volume) as avg_daily_tx_volume FROM (SELECT name, daily_tx_volume, RANK() OVER (ORDER BY daily_tx_volume DESC) as rank FROM digital_wallets WHERE region = 'Africa') x WHERE rank <= 10 GROUP BY name;"}
{"input": "\uc62c\ud574 \uac01 \uc0ac\uc5c5\uc5d0 \ub300\ud55c \uae30\ubd80\uc790\uc758 \uc131\ubcc4 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, initiative VARCHAR(255), donor_gender VARCHAR(255), donation_amount DECIMAL(10, 2), donation_date DATE); INSERT INTO donations (id, initiative, donor_gender, donation_amount, donation_date) VALUES (1, 'Women Empowerment', 'Female', 500, '2022-01-01'), (2, 'Healthcare Access', 'Male', 700, '2022-02-01'), (3, 'Environmental Conservation', 'Female', 600, '2022-03-01'), (4, 'Education Equality', 'Non-binary', 800, '2022-03-01'), (5, 'Food Security', 'Male', 700, '2022-04-01'), (6, 'Women Empowerment', 'Female', 600, '2022-04-01');", "output": "SELECT initiative, donor_gender, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM donations WHERE donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)) AS percentage FROM donations WHERE donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY initiative, donor_gender;"}
{"input": " \ud3d0\uc218 \ucc98\ub9ac\uc7a5\uc758 \ud6a8\uc728\uc131\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc8fc\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE WastewaterTreatmentPlants (ID INT, State VARCHAR(20), Efficiency FLOAT); INSERT INTO WastewaterTreatmentPlants (ID, State, Efficiency) VALUES (1, 'California', 0.92), (2, 'Texas', 0.91), (3, 'Florida', 0.89), (4, 'California', 0.93), (5, 'Texas', 0.90), (6, 'Florida', 0.88);", "output": "SELECT State, Efficiency FROM (SELECT State, Efficiency, ROW_NUMBER() OVER (ORDER BY Efficiency DESC) as rn FROM WastewaterTreatmentPlants) tmp WHERE rn <= 3"}
{"input": " \uc791\ub144\uc5d0 \uac80\ud1a0\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc815\ucc45\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE cybersecurity_policies (id INT, policy_name VARCHAR(50), review_date DATE);", "output": "SELECT policy_name FROM cybersecurity_policies WHERE review_date < DATEADD(year, -1, GETDATE());"}
{"input": " 2020\ub144\uc5d0 \uac1c\ucd5c\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ucc38\uc5ec \ud589\uc0ac\uc640 \ud574\ub2f9 \ub3c4\uc2dc\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE community_events (event_id INT, event_name TEXT, city TEXT, year INT); INSERT INTO community_events (event_id, event_name, city, year) VALUES (1, 'Cultural Festival', 'New York', 2020), (2, 'Traditional Music Concert', 'Los Angeles', 2019);", "output": "SELECT city, event_name FROM community_events WHERE year = 2020;"}
{"input": " \uc9c0\uad6c \uace0\uada4\ub3c4\uc5d0 \uc788\ub294 \uc6b0\uc8fc \uc4f0\ub808\uae30\uc758 \ucd1d \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_debris (id INT, debris_name VARCHAR(50), mass FLOAT, orbit VARCHAR(50)); INSERT INTO space_debris (id, debris_name, mass, orbit) VALUES (1, 'ENVISAT', 8212, 'LEO'); INSERT INTO space_debris (id, debris_name, mass, orbit) VALUES (2, 'FENYERS 3/4', 1520, 'GEO');", "output": "SELECT SUM(mass) FROM space_debris WHERE orbit = 'GEO';"}
{"input": " \ubd81\uadf9\ud574\uc640 \ub0a8\uadf9\ud574\uc758 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pollution_control_initiatives (id INT, name TEXT, location TEXT, year INT); INSERT INTO pollution_control_initiatives (id, name, location, year) VALUES (1, 'Ocean Plastic Reduction Project', 'Arctic Ocean', 2016), (2, 'Coral Reef Protection Program', 'Antarctic Ocean', 2017), (3, 'Marine Life Restoration Effort', 'Atlantic Ocean', 2015);", "output": "SELECT SUM(1) FROM pollution_control_initiatives WHERE location IN ('Arctic Ocean', 'Antarctic Ocean');"}
{"input": " 2021\ub144 \ud604\uc7ac \uc138\uacc4 5\ub300 \uc11d\uc720\ud68c\uc0ac\uc758 \uc2dc\uc7a5\uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE world_oil_companies (company VARCHAR(255), market_share DECIMAL(10,2), year INT);", "output": "SELECT company, market_share FROM world_oil_companies woc WHERE woc.year = 2021 ORDER BY market_share DESC LIMIT 5;"}
{"input": " 'energy_efficiency' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c '\ub274\uc695'\uc5d0 \uc704\uce58\ud55c \uac74\ubb3c\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA energy_efficiency;CREATE TABLE building_ratings (building_name VARCHAR(50), location VARCHAR(50), rating INT);INSERT INTO energy_efficiency.building_ratings (building_name, location, rating) VALUES ('BuildingA', 'New York', 80), ('BuildingB', 'California', 85);", "output": "SELECT rating FROM energy_efficiency.building_ratings WHERE location = 'New York';"}
{"input": " \uc790\uc2e0\uc744 \uc5ec\uc131\uc73c\ub85c \uc2dd\ubcc4\ud558\ub294 \uc6b4\ub3d9\uc120\uc218\uc758 \ud3c9\uade0 \uc6f0\ube59 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE athletes (athlete_id INT, well_being_score INT, gender VARCHAR(50));", "output": "SELECT AVG(athletes.well_being_score) FROM athletes WHERE athletes.gender = 'Female';"}
{"input": " 2022\ub144 1\uc6d4 '\uae30\ud6c4\ubcc0\ud654' \uad00\ub828 \uac8c\uc2dc\ubb3c\uc758 \uc88b\uc544\uc694 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, content TEXT, likes INT, timestamp TIMESTAMP);", "output": "SELECT SUM(likes) FROM posts WHERE content LIKE '%climate change%' AND timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';"}
{"input": "\uc791\ub144\uc5d0 \ub17c\ubb38\uc744 \ubc1c\ud45c\ud558\uace0 \uc218\ud559\uacfc\uc5d0 \ub4f1\ub85d\ud55c \ud559\uc0dd\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE students (id INT, name VARCHAR(50), department VARCHAR(50)); CREATE TABLE student_publications (student_id INT, publication_id INT); CREATE TABLE publications (id INT, title VARCHAR(100), year INT, citations INT); INSERT INTO students (id, name, department) VALUES (1, 'John Smith', 'Computer Science'), (2, 'Jane Doe', 'Mathematics'); INSERT INTO student_publications (student_id, publication_id) VALUES (1, 1), (1, 2), (2, 3); INSERT INTO publications (id, title, year, citations) VALUES (1, 'Publication 1', 2021, 5), (2, 'Publication 2', 2020, 15), (3, 'Publication 3', 2019, 8);", "output": "SELECT students.name FROM students INNER JOIN student_publications ON students.id = student_publications.student_id INNER JOIN publications ON student_publications.publication_id = publications.id WHERE publications.year >= YEAR(CURRENT_DATE()) - 1 AND students.department = 'Mathematics';"}
{"input": " '\uc911\uc559' \uad6c\uc5ed\uc758 \uc6d4\uac04 \ucd1d \ubc94\uc8c4 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE precinct (id INT, name VARCHAR(50)); INSERT INTO precinct (id, name) VALUES (1, 'Central'); CREATE TABLE incident (id INT, precinct_id INT, incident_date DATE);", "output": "SELECT DATEPART(year, incident_date) as year, DATEPART(month, incident_date) as month, COUNT(*) as total_incidents FROM incident WHERE precinct_id = 1 GROUP BY DATEPART(year, incident_date), DATEPART(month, incident_date);"}
{"input": " \uac01 \ud68c\uc0ac\uc758 \uac00\uc7a5 \ucd5c\uadfc \ud601\uc2e0\uacfc \uc774\uc804 \ud601\uc2e0 \uac04\uc758 \uc77c\uc218 \ucc28\uc774\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE InnovationDates (company_id INT, innovation_date DATE, is_most_recent BOOLEAN); INSERT INTO InnovationDates (company_id, innovation_date, is_most_recent) VALUES (1, '2022-01-01', TRUE), (1, '2021-01-01', FALSE), (2, '2022-01-01', TRUE), (2, '2021-01-01', FALSE);", "output": "SELECT company_id, innovation_date, LAG(innovation_date) OVER (PARTITION BY company_id ORDER BY innovation_date) as previous_innovation_date, innovation_date - LAG(innovation_date) OVER (PARTITION BY company_id ORDER BY innovation_date) as days_between FROM InnovationDates WHERE is_most_recent = TRUE;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uac00\uc7a5 \ub0ae\uc740 \ub4f1\uae09\uc758 \ubb34\uc790\ube44 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ProductReviews (ProductID INT, ProductType VARCHAR(20), IsCrueltyFree BOOLEAN, Rating INT, ReviewDate DATE); INSERT INTO ProductReviews (ProductID, ProductType, IsCrueltyFree, Rating, ReviewDate) VALUES (1, 'Moisturizer', TRUE, 2, '2022-09-15'); INSERT INTO ProductReviews (ProductID, ProductType, IsCrueltyFree, Rating, ReviewDate) VALUES (2, 'Cleanser', TRUE, 3, '2022-10-20'); INSERT INTO ProductReviews (ProductID, ProductType, IsCrueltyFree, Rating, ReviewDate) VALUES (3, 'Toner', TRUE, 4, '2022-11-05');", "output": "SELECT ProductID, ProductType, IsCrueltyFree, Rating, ReviewDate FROM (SELECT ProductID, ProductType, IsCrueltyFree, Rating, ReviewDate, ROW_NUMBER() OVER (PARTITION BY ProductID ORDER BY Rating ASC) as rn FROM ProductReviews WHERE ProductType = 'Skincare' AND ReviewDate >= DATEADD(MONTH, -3, CURRENT_DATE) AND IsCrueltyFree = TRUE) x WHERE rn = 1;"}
{"input": " \ubbf8\uc2dc\uc2dc\ud53c\uc758 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uc9c8\ubcd1 \uc720\ubcd1\ub960\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE disease_prevalence (disease_id INT, name VARCHAR(50), location VARCHAR(20), prevalence INT); INSERT INTO disease_prevalence (disease_id, name, location, prevalence) VALUES (1, 'Diabetes', 'Rural Mississippi', 1200); INSERT INTO disease_prevalence (disease_id, name, location, prevalence) VALUES (2, 'Heart Disease', 'Rural Mississippi', 900); INSERT INTO disease_prevalence (disease_id, name, location, prevalence) VALUES (3, 'Cancer', 'Urban Mississippi', 1500);", "output": "SELECT name, MAX(prevalence) FROM disease_prevalence WHERE location = 'Rural Mississippi' GROUP BY name;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\ubcf4\ub2e4 \ub274\uc695\uc5d0\uc11c \ub354 \ub9ce\uc740 \ucf58\uc11c\ud2b8\ub97c \ud3bc\uce5c \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (artist_name TEXT, location TEXT, num_concerts INTEGER); INSERT INTO Artists (artist_name, location, num_concerts) VALUES ('Artist A', 'New York', 300), ('Artist B', 'New York', 400), ('Artist A', 'Los Angeles', 500), ('Artist C', 'New York', 200), ('Artist C', 'Los Angeles', 600);", "output": "SELECT artist_name FROM Artists WHERE num_concerts > (SELECT num_concerts FROM Artists WHERE artist_name = Artists.artist_name AND location = 'Los Angeles') AND location = 'New York';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc124\uce58\ub41c \ud0dc\uc591 \uc5d0\ub108\uc9c0 \uc6a9\ub7c9\uc744 \ubcf4\uc720\ud55c \uc0c1\uc704 2\uac1c \uc8fc\ub97c \uc6a9\ub7c9 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE US_Solar_Energy (state VARCHAR(255), capacity INT); INSERT INTO US_Solar_Energy (state, capacity) VALUES ('California', 30000), ('Texas', 25000), ('Arizona', 20000), ('Nevada', 18000);", "output": "SELECT state, capacity FROM (SELECT state, capacity, RANK() OVER (ORDER BY capacity DESC) AS rank FROM US_Solar_Energy) AS ranked_states WHERE rank <= 2;"}
{"input": " \uad6d\ubc29 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ub300\ud55c \uc0ac\uc774\ubc84 \uacf5\uaca9\uacfc \uad00\ub828\ub41c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \uc9c0\ud45c\ub97c \uc5bb\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence (threat_id INT, threat_source VARCHAR(50), attack_vector VARCHAR(50), network_impact FLOAT, date DATE); INSERT INTO threat_intelligence (threat_id, threat_source, attack_vector, network_impact, date) VALUES (1, 'APT10', 'Phishing', 75, '2020-01-05'); INSERT INTO threat_intelligence (threat_id, threat_source, attack_vector, network_impact, date) VALUES (2, 'APT28', 'Malware', 90, '2020-04-10');", "output": "SELECT threat_source, attack_vector, network_impact, date FROM threat_intelligence;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790, \uc5b8\uc5b4, \uacbd\ub825 \uc5f0\uc218\ub97c \uc9c0\uc5ed\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE community_health_workers (worker_id INT, name VARCHAR(255), location VARCHAR(255), language VARCHAR(255), years_experience INT); INSERT INTO community_health_workers (worker_id, name, location, language, years_experience) VALUES (1, 'Ana Flores', 'Los Angeles, CA', 'Spanish', 10), (2, 'Han Kim', 'Seattle, WA', 'Korean', 7), (3, 'Leila Nguyen', 'Houston, TX', 'Vietnamese', 12), (4, 'Mohammad Ali', 'Dallas, TX', 'Urdu', 8), (5, 'Elizabeth Rodriguez', 'Miami, FL', 'Spanish', 9);", "output": "SELECT worker_id, location, language, years_experience, COUNT(*) OVER(PARTITION BY location, language) as num_workers FROM community_health_workers;"}
{"input": " \ucf00\uc774\ud504\ud0c0\uc6b4 \uac01 \uc9c0\uc5ed\uc758 \uc5f0\uc18d\uc801\uc778 \uac1c\uc6d4\uac04 \ubb3c \uc18c\ube44\ub7c9\uc758 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cape_town_water_consumption (id INT, date DATE, district VARCHAR(20), water_consumption FLOAT); INSERT INTO cape_town_water_consumption (id, date, district, water_consumption) VALUES (1, '2021-01-01', 'Atlantis', 1200.0), (2, '2021-01-02', 'Bishop Lavis', 1500.0);", "output": "SELECT district, LAG(water_consumption) OVER (PARTITION BY district ORDER BY date) - water_consumption FROM cape_town_water_consumption;"}
{"input": " \uccab \ubc88\uc9f8 \uc6b0\uc8fc \ube44\ud589 \ub2f9\uc2dc \uac01 \uad6d\uac00\uc758 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Astronauts (AstronautID INT, Name VARCHAR(50), Nationality VARCHAR(50), FirstFlightDate DATE); INSERT INTO Astronauts (AstronautID, Name, Nationality, FirstFlightDate) VALUES (1, 'Sergei Krikalev', 'Russia', '1988-05-30'); INSERT INTO Astronauts (AstronautID, Name, Nationality, FirstFlightDate) VALUES (2, 'John Young', 'USA', '1965-06-03'); INSERT INTO Astronauts (AstronautID, Name, Nationality, FirstFlightDate) VALUES (3, 'Roberta Bondar', 'Canada', '1992-01-22');", "output": "SELECT Nationality, AVG(DATEDIFF(day, BirthDate, FirstFlightDate)) / 365.25 AS AvgAgeAtFirstFlight FROM (SELECT AstronautID, Name, Nationality, BirthDate, MIN(FirstFlightDate) OVER (PARTITION BY AstronautID) FirstFlightDate FROM Astronauts) t GROUP BY Nationality;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \ubcf8\ubd80\ub97c \ub450\uace0 \uc788\uc73c\uba70 \uc870\ud569\uc6d0 \uc218\uac00 5000\uba85 \uc774\uc0c1\uc778 \ub178\ub3d9\uc870\ud569\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Union_Info (id INT, union VARCHAR(255), state VARCHAR(255), member_count INT); INSERT INTO Union_Info (id, union, state, member_count) VALUES (1, 'Union D', 'California', 7000);", "output": "SELECT union FROM Union_Info WHERE state = 'California' AND member_count > 5000;"}
{"input": "2020\ub144\uc5d0 \ud310\ub9e4\ub418\uc5c8\uc73c\uba70 \ud574\ub2f9 \uc5f0\ub3c4\uc5d0 15000\uba85 \uc774\uc0c1\uc758 \uad00\uad11\uac1d\uc774 \ubc29\ubb38\ud55c \ubaa8\ub4e0 \ubaa9\uc801\uc9c0\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marketing_campaigns (destination VARCHAR(20), year INT); CREATE TABLE tourism_stats (destination VARCHAR(20), year INT, tourists INT); INSERT INTO marketing_campaigns (destination, year) VALUES ('Japan', 2020), ('France', 2020), ('Germany', 2021), ('Italy', 2020); INSERT INTO tourism_stats (destination, year, tourists) VALUES ('Japan', 2020, 20000), ('Japan', 2021, 25000), ('France', 2020, 16000), ('France', 2021, 18000), ('Germany', 2021, 12000), ('Italy', 2020, 15000), ('Italy', 2021, 17000);", "output": "SELECT destination FROM marketing_campaigns WHERE year = 2020 INTERSECT SELECT destination FROM tourism_stats WHERE tourists > 15000 AND year = 2020;"}
{"input": " \uc791\ub144\uc5d0 \uac01 \ub2e4\uc774\ube59 \uc7a5\uc18c\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\ub300 \uc218\uc2ec\uacfc \ucd5c\uc800 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DiveData (DiveSite VARCHAR(100), Date DATE, Depth INT, Temperature FLOAT); INSERT INTO DiveData (DiveSite, Date, Depth, Temperature) VALUES ('Site A', '2022-01-01', 50, -2); INSERT INTO DiveData (DiveSite, Date, Depth, Temperature) VALUES ('Site B', '2022-01-05', 60, -3);", "output": "SELECT DiveSite, MAX(Depth) OVER (PARTITION BY DiveSite ORDER BY DiveSite ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS MaxDepth, MIN(Temperature) OVER (PARTITION BY DiveSite ORDER BY DiveSite ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS MinTemperature FROM DiveData WHERE Date >= DATEADD(year, -1, GETDATE());"}
{"input": " \ub300\uc11c\uc591 \uc720\uc5ed\uc5d0\ub294 \uc885 \uc774\ub984\ubcc4\ub85c \uba87 \uac1c\uc758 \ud574\uc591 \uc885\uc774 \ubc1c\uacac\ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_species_atlantic (name VARCHAR(255), basin VARCHAR(255)); INSERT INTO marine_species_atlantic (name, basin) VALUES ('Species1', 'Atlantic'), ('Species2', 'Pacific'), ('Species3', 'Indian'), ('Species4', 'Atlantic');", "output": "SELECT name, COUNT(*) as num_species  FROM marine_species_atlantic  WHERE basin = 'Atlantic'  GROUP BY name;"}
{"input": " \ubbf8\uad6d\uc758 \uac01 \ud22c\uc5b4 \uc720\ud615\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tours_us (id INT, country VARCHAR(50), type VARCHAR(50), revenue FLOAT); INSERT INTO tours_us (id, country, type, revenue) VALUES (1, 'US', 'Eco-friendly', 4000), (2, 'US', 'Regular', 6000);", "output": "SELECT type, SUM(revenue) FROM tours_us WHERE country = 'US' GROUP BY type;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uad70\uc0ac \uc7a5\ube44\ub97c \uc218\uc785\ud558\ub294 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE imports (country TEXT, import_value DECIMAL(10,2), import_date DATE); INSERT INTO imports VALUES ('Canada', 500000, '2021-01-01'), ('Mexico', 300000, '2021-02-01'), ('Brazil', 400000, '2021-03-01');", "output": "SELECT country, import_value FROM (SELECT country, import_value, RANK() OVER (PARTITION BY country ORDER BY import_value DESC) AS ranking FROM imports WHERE import_country = 'US') subquery WHERE ranking <= 3;"}
{"input": " '\ub274\uc695\ud0c0\uc784\uc2a4'\uc640 '\uc6cc\uc2f1\ud134\ud3ec\uc2a4\ud2b8'\uac00 \ubc1c\ud589\ud55c \ub274\uc2a4 \uae30\uc0ac\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ny_times (article_id INT, source VARCHAR(20), published_at TIMESTAMP); INSERT INTO ny_times (article_id, source, published_at) VALUES (1, 'The New York Times', '2021-01-01 12:00:00'), (2, 'The New York Times', '2021-01-02 12:00:00'); CREATE TABLE wa_post (article_id INT, source VARCHAR(20), published_at TIMESTAMP); INSERT INTO wa_post (article_id, source, published_at) VALUES (3, 'The Washington Post', '2021-01-01 12:00:00'), (4, 'The Washington Post', '2021-01-02 12:00:00');", "output": "SELECT COUNT(*) FROM ny_times UNION ALL SELECT COUNT(*) FROM wa_post;"}
{"input": " \ubbf8\uad6d\uc758 \uc8fc\ubcc4\ub85c \uccb4\uacb0\ub41c \uacc4\uc57d \uc218\uc640 \ud574\ub2f9 \uacc4\uc57d\uc758 \ucd1d \uac00\uce58\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Contract (CID INT, State VARCHAR(20), Value DECIMAL(10, 2)); INSERT INTO Contract (CID, State, Value) VALUES (1, 'Texas', 100000), (2, 'California', 200000), (3, 'Virginia', 300000);", "output": "SELECT State, COUNT(CID) as NumContracts, SUM(Value) as TotalValue FROM Contract GROUP BY State;"}
{"input": " 2020\ub144\uc5d0 \ub374\ubc84 \uc2dc\uc5d0\uc11c \ub9e4\uc6d4 \ubc1c\uae09\ub41c \uac74\ucd95 \ud5c8\uac00\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE building_permits (permit_id INT, permit_date DATE, city TEXT, state TEXT); INSERT INTO building_permits VALUES (1, '2020-01-01', 'Chicago', 'Illinois'), (2, '2019-12-15', 'New York', 'New York'), (3, '2020-06-20', 'Houston', 'Texas'), (4, '2021-02-03', 'Chicago', 'Illinois'), (5, '2020-07-10', 'Denver', 'Colorado'), (6, '2020-07-25', 'Denver', 'Colorado'), (7, '2020-01-05', 'Denver', 'Colorado'), (8, '2020-02-12', 'Denver', 'Colorado'), (9, '2020-03-20', 'Denver', 'Colorado');", "output": "SELECT EXTRACT(MONTH FROM permit_date) AS month, COUNT(*) FROM building_permits WHERE city = 'Denver' AND EXTRACT(YEAR FROM permit_date) = 2020 GROUP BY month;"}
{"input": " '\ubcf4\uc2a4\ud134' \uc0ac\ubb34\uc2e4\uc5d0\uc11c \ubcc0\ud638\uc0ac\ub4e4\uc774 \ucc98\ub9ac\ud55c \uc0ac\uac74 \uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE offices (office_id INT, office_name VARCHAR(20), city VARCHAR(20), state VARCHAR(20)); INSERT INTO offices (office_id, office_name, city, state) VALUES (1, 'Boston', 'Boston', 'MA'), (2, 'New York', 'New York', 'NY');", "output": "SELECT COUNT(*) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id JOIN offices ON attorneys.office_id = offices.office_id WHERE offices.city = 'Boston';"}
{"input": "2015\ub144 \uc774\ud6c4 \uc6cc\uc2f1\ud134 \uc8fc\uc5d0\uc11c \ud5c8\uac00\ub97c \ubc1b\uc558\uc9c0\ub9cc 2021\ub144 \ub9d0\uae4c\uc9c0 \ub9e4\ucd9c\uc774 \ubcf4\uace0\ub418\uc9c0 \uc54a\uc740 \uc9c4\ub8cc\uc18c\uc758 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT, license_date DATE, first_sale_date DATE); INSERT INTO dispensaries (id, name, state, license_date, first_sale_date) VALUES (1, 'Green Shelter', 'Washington', '2016-01-01', '2016-02-01'), (2, 'Purple Leaf', 'Washington', '2015-12-31', '2015-12-31'), (3, 'Bud Haven', 'Washington', '2017-06-15', '2017-07-01');", "output": "SELECT COUNT(*) FROM (SELECT * FROM dispensaries WHERE state = 'Washington' AND license_date <= '2015-12-31' AND first_sale_date > '2021-12-31' EXCEPT SELECT * FROM (SELECT DISTINCT * FROM dispensaries)) tmp;"}
{"input": " \uc544\uc9c1 \uc624\ud508\ub370\uc774\ud130 \uc815\ucc45\uc744 \ub3c4\uc785\ud558\uc9c0 \uc54a\uc558\uace0 \uc99d\uac70 \uae30\ubc18 \uc815\ucc45\uc744 1\uac1c \uc774\uc0c1 \ub9c8\ub828\ud55c \ubd80\uc11c\uc758 \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE departments (id INT, name VARCHAR(50), budget INT, open_data BOOLEAN); INSERT INTO departments (id, name, budget, open_data) VALUES (1, 'Education', 15000000, false), (2, 'Transportation', 20000000, false); CREATE TABLE policies (id INT, department_id INT, title VARCHAR(50), evidence_based BOOLEAN); INSERT INTO policies (id, department_id, title, evidence_based) VALUES (1, 1, 'Safe Routes to School', true), (2, 2, 'Mass Transit Expansion', false);", "output": "SELECT MIN(budget) as min_budget FROM departments d WHERE open_data = false AND (SELECT COUNT(*) FROM policies p WHERE d.id = p.department_id AND evidence_based = true) >= 1;"}
{"input": " \uc5ec\uc131\uc774 \uc774\ub044\ub294 \uc6b0\uc8fc \uc784\ubb34\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (id INT, name VARCHAR(255), leader VARCHAR(255), year INT); INSERT INTO space_missions (id, name, leader, year) VALUES (1, 'Mars Rover', 'Dr. Jessica Watkins', 2022); INSERT INTO space_missions (id, name, leader, year) VALUES (2, 'ISS Expedition', 'Anousheh Ansari', 2023);", "output": "SELECT COUNT(*) FROM space_missions WHERE leader IN (SELECT name FROM astronauts WHERE gender = 'Female');"}
{"input": " 12\uac1c\uc6d4 \uc774\ub3d9 \ud3c9\uade0 \uc7ac\ubb34 \uc6f0\ube59 \uc810\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE wellbeing_scores (customer_id INT, score INT, score_date DATE);", "output": "SELECT customer_id, AVG(score) OVER (PARTITION BY customer_id ORDER BY score_date ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) AS rolling_avg FROM wellbeing_scores;"}
{"input": " \ud574\ucd08\uc5d0 \ubbf8\uce58\ub294 \uae30\ud6c4 \ubcc0\ud654 \uc601\ud5a5\uc758 \ud3c9\uade0 \uaddc\ubaa8\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE climate_change_impacts (id INT, species VARCHAR(50), year INT, impact VARCHAR(50), magnitude INT); INSERT INTO climate_change_impacts (id, species, year, impact, magnitude) VALUES (1, 'Seagrass', 2000, 'Temperature Increase', 20); INSERT INTO climate_change_impacts (id, species, year, impact, magnitude) VALUES (2, 'Seagrass', 2010, 'Sea Level Rise', 15);", "output": "SELECT AVG(magnitude) FROM climate_change_impacts WHERE species = 'Seagrass';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ud3c9\uade0 \uc720\uc815\ubcf4\ub2e4 \uc0dd\uc0b0\uc728\uc774 \ub192\uc740 \ubaa8\ub4e0 \uc720\uc815\uc744 \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name TEXT, location TEXT, production_rate FLOAT); INSERT INTO wells (well_id, well_name, location, production_rate) VALUES (1, 'Well A', 'Texas', 500), (2, 'Well B', 'California', 700), (3, 'Well C', 'California', 600);", "output": "SELECT * FROM wells WHERE production_rate > (SELECT AVG(production_rate) FROM wells WHERE location = 'California')"}
{"input": " \ubbf8\uad6d \uc120\uc218\ub4e4\uc758 \ucd1d \uc2b9\ub9ac \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, name VARCHAR(50), country VARCHAR(50), wins INT); INSERT INTO players (id, name, country, wins) VALUES (1, 'Player1', 'USA', 100), (2, 'Player2', 'Canada', 80), (3, 'Player3', 'USA', 120);", "output": "SELECT SUM(wins) FROM players WHERE country = 'USA';"}
{"input": " \uac00\uc7a5 \uac00\ubcbc\uc6b4 \uc704\uc131 5\uac1c\uc758 \uc774\ub984\uacfc \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE light_satellites (satellite_name TEXT, satellite_weight REAL); INSERT INTO light_satellites (satellite_name, satellite_weight) VALUES ('Cubesat', 1.33), ('Kicksat', 1.1), ('Picosat', 0.85);", "output": "SELECT satellite_name, satellite_weight FROM light_satellites ORDER BY satellite_weight LIMIT 5;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \uad50\ub7c9\uacfc \ud130\ub110 \uc218 \ucc3e\uae30", "context": "CREATE TABLE Bridge (id INT, name VARCHAR(255), state VARCHAR(255)); INSERT INTO Bridge (id, name, state) VALUES (1, 'Bridge A', 'California'), (2, 'Bridge B', 'Texas'); CREATE TABLE Tunnel (id INT, name VARCHAR(255), state VARCHAR(255)); INSERT INTO Tunnel (id, name, state) VALUES (1, 'Tunnel A', 'New York'), (2, 'Tunnel B', 'California');", "output": "SELECT COUNT(*) FROM (SELECT * FROM Bridge WHERE state = 'California' UNION ALL SELECT * FROM Tunnel WHERE state = 'California') AS combined;"}
{"input": " \ud2b9\uc815 \uc778\uc99d\uc744 \ubc1b\uc740 \ud2b9\uc815 \uacf5\uae09\uc5c5\uccb4\uc758 \uc7ac\ub8cc\uc5d0 \ub300\ud55c \ud3c9\uade0 \uce7c\ub85c\ub9ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ingredients (id INT PRIMARY KEY, name VARCHAR(255), supplier_id INT, origin VARCHAR(255)); CREATE TABLE nutrition (ingredient_id INT, calories INT, protein INT, carbohydrates INT, fat INT); CREATE TABLE sustainability (id INT PRIMARY KEY, ingredient_id INT, certification VARCHAR(255));", "output": "SELECT AVG(nutrition.calories) FROM ingredients INNER JOIN nutrition ON ingredients.id = nutrition.ingredient_id INNER JOIN sustainability ON ingredients.id = sustainability.ingredient_id WHERE ingredients.supplier_id IN (1, 2) AND sustainability.certification = 'Organic';"}
{"input": " 2020\ub144 \ub9e4\ub2ec \uba87 \uac74\uc758 \uc0ac\ub840\uac00 \uac1c\uc124 \ubc0f \ub9c8\uac10\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE cases (case_id INT, open_date DATE, close_date DATE); INSERT INTO cases (case_id, open_date, close_date) VALUES (1, '2020-01-01', '2020-03-15'), (2, '2020-02-10', '2020-06-20'), (3, '2020-04-01', '2020-08-30'), (4, '2020-06-15', '2020-10-25');", "output": "SELECT EXTRACT(MONTH FROM open_date) as month, COUNT(*) as cases_opened FROM cases WHERE open_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY month; SELECT EXTRACT(MONTH FROM close_date) as month, COUNT(*) as cases_closed FROM cases WHERE close_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY month;"}
{"input": "2020\ub144 \uc11c\uc2a4\uce90\ucc98\uc6d0 \uc8fc \ub18d\uc5c5 \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE agricultural_projects (id INT, province VARCHAR(50), cost FLOAT, project_type VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO agricultural_projects (id, province, cost, project_type, start_date, end_date) VALUES (1, 'Saskatchewan', 60000.00, 'Precision Agriculture', '2020-01-01', '2020-12-31');", "output": "SELECT SUM(cost) FROM agricultural_projects WHERE province = 'Saskatchewan' AND start_date <= '2020-12-31' AND end_date >= '2020-01-01' AND project_type = 'Precision Agriculture';"}
{"input": "2021\ub144 1\ubd84\uae30\uc5d0 \ud569\ub958\ud55c \uc2e0\uaddc \uc790\uc6d0\ubd09\uc0ac\uc790\ub4e4\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE volunteers (volunteer_id INT, join_date DATE, hours_per_week FLOAT); INSERT INTO volunteers (volunteer_id, join_date, hours_per_week) VALUES (1, '2021-01-05', 5.0), (2, '2020-12-10', 8.0), (3, '2021-02-01', 3.0); CREATE TABLE donations_by_volunteers (volunteer_id INT, donation_amount FLOAT); INSERT INTO donations_by_volunteers (volunteer_id, donation_amount) VALUES (1, 75.00), (1, 100.00), (2, 50.00), (3, 25.00);", "output": "SELECT AVG(donation_amount) FROM donations_by_volunteers JOIN volunteers ON donations_by_volunteers.volunteer_id = volunteers.volunteer_id WHERE QUARTER(join_date) = 1 AND volunteers.volunteer_id NOT IN (SELECT volunteer_id FROM donations_by_volunteers JOIN volunteers ON donations_by_volunteers.volunteer_id = volunteers.volunteer_id WHERE join_date < '2021-01-01');"}
{"input": " \uac01 \uc8fc\ubbfc\uc870\uc815\uc13c\ud130\uc5d0\uc11c \ucc98\ub9ac\ud55c \uc0ac\uac74 \uc218\ub97c \uc804\uccb4 \uc0ac\uac74 \uc218 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE CommunityMediation (CenterID INT, CenterName VARCHAR(50), CaseID INT); INSERT INTO CommunityMediation (CenterID, CenterName, CaseID) VALUES (1, 'Boston Community Mediation', 100), (2, 'Chicago Community Justice Center', 150), (3, 'Seattle Neighborhood Mediation', 120), (4, 'Denver Community Mediation', 80);", "output": "SELECT CenterName, COUNT(*) AS TotalCases FROM CommunityMediation GROUP BY CenterName ORDER BY TotalCases DESC;"}
{"input": " 'Oceanic Harvest' \uacf5\uae09\uc5c5\uccb4\uac00 \ubc1c\uc1a1\ud558\ub294 \ubaa8\ub4e0 \ubc30\uc1a1\ud488\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (id INT, name VARCHAR(50)); CREATE TABLE Shipments (id INT, Supplier_id INT, weight INT); INSERT INTO Suppliers (id, name) VALUES (1, 'Oceanic Harvest'); INSERT INTO Shipments (id, Supplier_id, weight) VALUES (1, 1, 500), (2, 1, 300);", "output": "SELECT SUM(weight) FROM Shipments WHERE Supplier_id = (SELECT id FROM Suppliers WHERE name = 'Oceanic Harvest');"}
{"input": " \uc7ac\uc988 \uc7a5\ub974\uc5d0\uc11c song_length\uac00 220\ucd08\ubcf4\ub2e4 \ud070 song_id\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE genres (genre VARCHAR(10), song_id INT, song_length FLOAT);   INSERT INTO genres (genre, song_id, song_length) VALUES ('jazz', 4, 265.4), ('jazz', 5, 212.3), ('classical', 6, 320.1);", "output": "SELECT song_id FROM genres WHERE genre = 'jazz' AND song_length > 220;"}
{"input": " 2019-2020 \uc2dc\uc98c\uc5d0 \ub7a9\ud130\uc2a4\uac00 \ud648\uc5d0\uc11c \uba87 \uc2b9\uc744 \uac70\ub450\uc5c8\ub098\uc694?", "context": "CREATE TABLE teams (team_name VARCHAR(255), season_start_year INT, season_end_year INT); INSERT INTO teams (team_name, season_start_year, season_end_year) VALUES ('Raptors', 2019, 2020); CREATE TABLE games (team_name VARCHAR(255), location VARCHAR(255), won BOOLEAN);", "output": "SELECT COUNT(*) FROM games WHERE team_name = 'Raptors' AND location = 'home' AND won = TRUE AND season_start_year = 2019 AND season_end_year = 2020;"}
{"input": " \ub3c4\uc2dc\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Cities (id INT, city VARCHAR(50)); INSERT INTO Cities (id, city) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Chicago'); CREATE TABLE Donors (id INT, city INT, donation_id INT); INSERT INTO Donors (id, city, donation_id) VALUES (1, 1, 1001), (2, 2, 1002), (3, 3, 1003); CREATE TABLE Donations (id INT, donor_id INT, amount DECIMAL(10,2)); INSERT INTO Donations (id, donor_id, amount) VALUES (1001, 1, 50.00), (1002, 2, 75.00), (1003, 3, 100.00);", "output": "SELECT c.city, SUM(d.amount) as total_amount FROM Donors g JOIN Donations d ON g.id = d.donor_id JOIN Cities c ON g.city = c.id GROUP BY c.city;"}
{"input": " \uce90\ub098\ub2e4\uc640 \ubbf8\uad6d\uc758 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0 \uc788\ub294 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, country TEXT); INSERT INTO hospitals (id, name, location, country) VALUES (1, 'Hospital A', 'Rural Canada', 'Canada'), (2, 'Hospital B', 'Rural USA', 'USA'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, country TEXT); INSERT INTO clinics (id, name, location, country) VALUES (1, 'Clinic A', 'Rural Canada', 'Canada'), (2, 'Clinic B', 'Rural USA', 'USA');", "output": "SELECT COUNT(*) FROM hospitals WHERE location LIKE '%rural%' UNION ALL SELECT COUNT(*) FROM clinics WHERE location LIKE '%rural%'"}
{"input": " \uba54\uc774\uc800 \ub9ac\uadf8 \uc57c\uad6c\uc5d0\uc11c \uc77c\ubcf8 \uc120\uc218 \uc911 \ud1b5\uc0b0 \ud648\ub7f0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mlb_players (player_name VARCHAR(100), country VARCHAR(50), home_runs INT); INSERT INTO mlb_players VALUES ('Hideki Matsui', 'Japan', 175), ('Ichiro Suzuki', 'Japan', 117), ('Masahiro Tanaka', 'Japan', 1), ('Shohei Ohtani', 'Japan', 71);", "output": "SELECT player_name, home_runs FROM mlb_players WHERE country = 'Japan' ORDER BY home_runs DESC LIMIT 1;"}
{"input": " \ud0dc\ud3c9\uc591\uc758 \ud574\uc591 \uc0dd\ubb3c\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (name TEXT, min_depth FLOAT, ocean TEXT);   CREATE TABLE ocean_regions (name TEXT, area FLOAT);", "output": "SELECT MIN(min_depth)   FROM marine_species   WHERE ocean = (SELECT name FROM ocean_regions WHERE area = 'Pacific Ocean');"}
{"input": " \ud2b9\uc815 \ubaa9\uc801\uc9c0\ub85c \uac00\uc7a5 \ub9ce\uc740 \ud56d\uacf5\ud3b8\uc744 \uc6b4\ud56d\ud558\ub294 \ud56d\uacf5\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE airline (airline_code CHAR(2), airline_name VARCHAR(50)); INSERT INTO airline VALUES ('UA', 'United Airlines'), ('DL', 'Delta Air Lines'); CREATE TABLE flight (airline_code CHAR(2), flight_number INT, destination VARCHAR(50)); INSERT INTO flight VALUES ('UA', 123, 'New York'), ('UA', 456, 'Chicago'), ('DL', 789, 'New York'), ('DL', 321, 'Los Angeles');", "output": "SELECT airline_code, ROW_NUMBER() OVER (PARTITION BY destination ORDER BY COUNT(*) DESC) AS rank FROM flight GROUP BY airline_code, destination;"}
{"input": " \uc704\ud5d8 \ud3c9\uac00 \ubaa8\ub378\ubcc4 \uc815\ucc45 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underwriting_data (id INT, policy_number INT, policyholder_name VARCHAR(50), region VARCHAR(20), risk_assessment_model VARCHAR(20)); INSERT INTO underwriting_data (id, policy_number, policyholder_name, region, risk_assessment_model) VALUES (1, 1001, 'Juan Garcia', 'South', 'Model A'), (2, 1002, 'Marie Dupont', 'West', 'Model B'), (3, 1003, 'Li Wang', 'South', 'Model A'), (4, 1004, 'Oliver Park', 'East', 'Model C');", "output": "SELECT risk_assessment_model, COUNT(policy_number) as policy_count FROM underwriting_data GROUP BY risk_assessment_model;"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \uc77c\uc8fc\uc77c \ub3d9\uc548 \uc790\uc6d0\ubd09\uc0ac\ud55c \ucd5c\ub300 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc774\uba70, \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \ub204\uad6c\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (id INT, volunteer_id INT, hours DECIMAL, week INT); INSERT INTO volunteer_hours (id, volunteer_id, hours, week) VALUES (1, 1, 5.0, 1), (2, 2, 10.0, 1), (3, 3, 7.5, 1), (4, 1, 4.0, 2), (5, 3, 8.0, 2); CREATE TABLE volunteers (id INT, name TEXT); INSERT INTO volunteers (id, name) VALUES (1, 'Samir'), (2, 'Sophia'), (3, 'Taro');", "output": "SELECT MAX(hours) AS max_hours, volunteer_id FROM volunteer_hours GROUP BY volunteer_id; SELECT name, volunteer_id FROM volunteers WHERE volunteer_id IN (SELECT volunteer_id FROM (SELECT MAX(hours) AS max_hours, volunteer_id FROM volunteer_hours GROUP BY volunteer_id) AS subquery WHERE max_hours = (SELECT MAX(hours) FROM volunteer_hours));"}
{"input": " \ubbf8\uad6d\uacfc \uba55\uc2dc\ucf54 \uace0\uac1d\uc758 \uace0\uc720\ud55c \uaddc\ubaa8\ub97c \ubcf4\uc5ec\uc8fc\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE customers_us_mx (id INT, size VARCHAR(10), country VARCHAR(20)); INSERT INTO customers_us_mx (id, size, country) VALUES (1, 'M', 'USA'); INSERT INTO customers_us_mx (id, size, country) VALUES (2, 'L', 'Mexico');", "output": "SELECT size FROM customers_us_mx WHERE country = 'USA' INTERSECT SELECT size FROM customers_us_mx WHERE country = 'Mexico';"}
{"input": " '\uc6d0\uaca9 \ud559\uc2b5' \ud559\uad70 \ud559\uc0dd\ub4e4\uc758 \ucd5c\uc18c \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, district TEXT, mental_health_score INT); INSERT INTO students (id, district, mental_health_score) VALUES (1, 'Remote Learning', 80), (2, 'Remote Learning', 85), (3, 'Remote Learning', 90);", "output": "SELECT MIN(mental_health_score) FROM students WHERE district = 'Remote Learning';"}
{"input": " e\uc2a4\ud3ec\uce20 \ud589\uc0ac\ub97c \uc8fc\ucd5c\ud55c \ubaa8\ub4e0 \uacbd\uae30\uc7a5\uc758 \ucd1d \uc218\uc6a9 \uc778\uc6d0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE esports_events (id INT, event_name VARCHAR(50), date DATE, venue_id INT); CREATE TABLE venues (id INT, name VARCHAR(50), capacity INT); INSERT INTO esports_events (id, event_name, date, venue_id) VALUES (1, 'GameX', '2023-06-01', 101); INSERT INTO venues (id, name, capacity) VALUES (101, 'Staples Center', 20000); INSERT INTO venues (id, name, capacity) VALUES (102, 'Madison Square Garden', 18000);", "output": "SELECT SUM(capacity) FROM venues WHERE id IN (SELECT venue_id FROM esports_events);"}
{"input": " \uc778\ubb38\uacc4\uc5f4 \uad50\uc6d0 1\uc778\ub2f9 \ud3c9\uade0 \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50), position VARCHAR(50)); INSERT INTO faculty (id, name, department, position) VALUES (1, 'Gina Wilson', 'Humanities', 'Professor'); INSERT INTO faculty (id, name, department, position) VALUES (2, 'Harry Moore', 'Humanities', 'Assistant Professor'); CREATE TABLE publications (id INT, faculty_id INT, title VARCHAR(100)); INSERT INTO publications (id, faculty_id, title) VALUES (1, 1, 'Publication A'); INSERT INTO publications (id, faculty_id, title) VALUES (2, 1, 'Publication B'); INSERT INTO publications (id, faculty_id, title) VALUES (3, 2, 'Publication C');", "output": "SELECT AVG(num_publications) FROM (SELECT f.id, COUNT(p.id) as num_publications FROM faculty f LEFT JOIN publications p ON f.id = p.faculty_id WHERE f.department = 'Humanities' GROUP BY f.id) t;"}
{"input": " \ubd81\ubbf8 \uc2dc\uc7a5\uc5d0\uc11c \ud50c\ub7ec\uc2a4 \uc0ac\uc774\uc988 \uc758\ub958\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (sale_id INT, product_id INT, quantity INT, price DECIMAL(10, 2), customer_id INT); CREATE TABLE Inventory (product_id INT, product_name VARCHAR(255), available_sizes VARCHAR(255)); CREATE TABLE Geography (customer_id INT, country VARCHAR(255), region VARCHAR(255)); CREATE TABLE CustomerSize (customer_id INT, preferred_size VARCHAR(10));", "output": "SELECT SUM(quantity * price) AS total_revenue FROM Sales S INNER JOIN Inventory I ON S.product_id = I.product_id INNER JOIN Geography G ON S.customer_id = G.customer_id INNER JOIN CustomerSize CS ON S.customer_id = CS.customer_id WHERE G.region = 'North America' AND CS.preferred_size LIKE 'plus%';"}
{"input": " \ub9e4\ub144 \uba87 \uc7a5\uc758 \uc568\ubc94\uc774 \ubc1c\ub9e4\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE Album (AlbumID INT, ReleaseYear INT, GenreID INT); INSERT INTO Album (AlbumID, ReleaseYear, GenreID) VALUES (1, 2010, 1), (2, 2011, 1), (3, 2012, 2), (4, 2013, 2), (5, 2014, 3);", "output": "SELECT ReleaseYear, COUNT(*) OVER (PARTITION BY ReleaseYear) AS AlbumCount FROM Album;"}
{"input": " \ub3c4\uc2ec\uc9c0\uc5ed \uae34\uae09\uc804\ud654 \ubc0f \ud654\uc7ac\uc0ac\uace0 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, location VARCHAR(20), type VARCHAR(20)); INSERT INTO emergency_calls (id, location, type) VALUES (1, 'downtown', 'emergency call'); CREATE TABLE fire_incidents (id INT, location VARCHAR(20), type VARCHAR(20)); INSERT INTO fire_incidents (id, location, type) VALUES (1, 'downtown', 'fire incident');", "output": "SELECT COUNT(*) FROM emergency_calls WHERE location = 'downtown' UNION ALL SELECT COUNT(*) FROM fire_incidents WHERE location = 'downtown';"}
{"input": " \ubcf4\ud5d8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc9c0\ub09c 3\uac1c\uc6d4\uac04 \uccad\uad6c \uae08\uc561\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (ClaimID int, ClaimDate date, ClaimAmount decimal(10, 2), PolicyType varchar(50)); INSERT INTO Claims (ClaimID, ClaimDate, ClaimAmount, PolicyType) VALUES (1, '2022-01-15', 4500.00, 'Auto'), (2, '2022-02-03', 3200.00, 'Home'), (3, '2022-03-17', 5700.00, 'Auto'), (4, '2022-04-01', 6100.00, 'Life'), (5, '2022-05-12', 4200.00, 'Auto'), (6, '2022-06-20', 3800.00, 'Home');", "output": "SELECT PolicyType, AVG(ClaimAmount) OVER (PARTITION BY PolicyType ORDER BY ClaimDate ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MovingAverage FROM Claims WHERE ClaimDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);"}
{"input": " \ubd81\ubbf8\uc640 \ub0a8\ubbf8 \uc9c0\uc5ed\uc758 \uc608\ubc29\uc811\uc885 \ud504\ub85c\uadf8\ub7a8 \uc218\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE north_programs (region VARCHAR(255), program VARCHAR(255)); INSERT INTO north_programs (region, program) VALUES ('North', 'Childhood Immunization'); INSERT INTO north_programs (region, program) VALUES ('North', 'Flu Vaccination'); CREATE TABLE south_programs (region VARCHAR(255), program VARCHAR(255)); INSERT INTO south_programs (region, program) VALUES ('South', 'Measles Immunization'); INSERT INTO south_programs (region, program) VALUES ('South', 'Yellow Fever Vaccination');", "output": "SELECT COUNT(*) FROM north_programs UNION ALL SELECT COUNT(*) FROM south_programs;"}
{"input": " \uac01 \ud56d\uacf5\uc0ac\uc758 \ud56d\uacf5\ud3b8\ub2f9 \ud3c9\uade0 \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE airline (airline_code CHAR(2), airline_name VARCHAR(50)); INSERT INTO airline VALUES ('UA', 'United Airlines'), ('DL', 'Delta Air Lines'); CREATE TABLE flight (airline_code CHAR(2), flight_number INT, distance FLOAT, carbon_emission INT); INSERT INTO flight VALUES ('UA', 123, 3000, 120000), ('UA', 456, 2500, 100000), ('DL', 789, 2000, 80000), ('DL', 321, 2700, 90000);", "output": "SELECT airline_code, AVG(carbon_emission) OVER (PARTITION BY airline_code) FROM flight;"}
{"input": " \uae30\uc218 \uc591\uc2dd\uc7a5\uc5d0\uc11c \uc804\ub0a0\uc5d0 \ube44\ud574 \uc6a9\uc874 \uc0b0\uc18c\ub7c9\uc774 \uac10\uc18c\ud55c \uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_oxygen_levels_brackish (farm_id INT, date DATE, species VARCHAR(20), dissolved_oxygen FLOAT); INSERT INTO daily_oxygen_levels_brackish (farm_id, date, species, dissolved_oxygen) VALUES (1, '2022-01-01', 'Tilapia', 5.5), (1, '2022-01-02', 'Tilapia', 5.3), (2, '2022-01-01', 'Barramundi', 6.0), (2, '2022-01-02', 'Barramundi', 5.8);", "output": "SELECT species, date, dissolved_oxygen, LAG(dissolved_oxygen) OVER (PARTITION BY species ORDER BY date) prev_dissolved_oxygen, dissolved_oxygen - LAG(dissolved_oxygen) OVER (PARTITION BY species ORDER BY date) diff FROM daily_oxygen_levels_brackish WHERE diff < 0;"}
{"input": " \uac01 \uc8fc\uc758 \uc608\ubc29\uc811\uc885\uc744 \ubc1b\uc9c0 \uc54a\uc740 \uc5b4\ub9b0\uc774\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE states (state_id INT, state_name TEXT, unvaccinated_children INT); INSERT INTO states (state_id, state_name, unvaccinated_children) VALUES (1, 'California', 2500), (2, 'Texas', 3000), (3, 'New York', 1800);", "output": "SELECT state_name, (unvaccinated_children::float/SUM(unvaccinated_children) OVER ()) * 100 AS percentage FROM states;"}
{"input": " user_id \ubc0f \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ub41c 'online_learning' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub300\ud55c \uac01 \uc0ac\uc6a9\uc790\uc758 'online_time' \ub204\uc801 \ud569\uacc4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE online_learning (id INT, user_id INT, online_date DATE, online_time INT); INSERT INTO online_learning (id, user_id, online_date, online_time) VALUES (1, 1001, '2022-01-01', 60); INSERT INTO online_learning (id, user_id, online_date, online_time) VALUES (2, 1001, '2022-01-03', 90); INSERT INTO online_learning (id, user_id, online_date, online_time) VALUES (3, 1002, '2022-01-02', 45);", "output": "SELECT user_id, online_date, online_time, SUM(online_time) OVER (PARTITION BY user_id ORDER BY online_date) as running_total FROM online_learning;"}
{"input": " \ud3c9\uade0\ubcf4\ub2e4 \uae30\uac04\uc774 \uae34 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc784\ubb34 \uc774\ub984 \ubc0f \ubc1c\uc0ac \ub0a0\uc9dc\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Space_Missions (Mission VARCHAR(50), Duration INT, Launch_Date DATE); INSERT INTO Space_Missions (Mission, Duration, Launch_Date) VALUES ('Mission1', 123, '2021-01-01'), ('Mission2', 456, '2021-02-01'), ('Mission3', 789, '2021-03-01');", "output": "SELECT Mission, Duration, Launch_Date FROM Space_Missions WHERE Duration > (SELECT AVG(Duration) FROM Space_Missions);"}
{"input": " 2022\ub144 5\uc6d4 \ud55c \ub2ec \ub3d9\uc548 '\ub178\uc2a4\uc0ac\uc774\ub4dc'\uc5d0\uc11c \uae34\uae09\uc804\ud654\uac00 \uac00\uc7a5 \ub9ce\uc558\ub358 \ub0a0\uc740 \uc5b8\uc81c\uc600\ub098\uc694?", "context": "CREATE TABLE emergency_calls (id INT, call_time TIMESTAMP, district VARCHAR(20)); INSERT INTO emergency_calls (id, call_time, district) VALUES (1, '2022-05-01 10:30:00', 'Northside'), (2, '2022-05-02 15:45:00', 'Southside');", "output": "SELECT district, COUNT(*) AS num_calls, DATE(call_time) AS call_date FROM emergency_calls WHERE district = 'Northside' AND call_time >= '2022-05-01' AND call_time < '2022-06-01' GROUP BY call_date ORDER BY num_calls DESC LIMIT 1;"}
{"input": " \ud0dc\ud3c9\uc591\uc758 \uc5f0\uac04 \ud3c9\uade0 \ud574\uc218\uba74 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ocean(id INT, region VARCHAR(20), temperature DECIMAL(5,2)); INSERT INTO Ocean(id, region, temperature) VALUES (1, 'Pacific', 20.5), (2, 'Atlantic', 18.3), (3, 'Indian', 23.2);", "output": "SELECT AVG(temperature) FROM (SELECT temperature FROM Ocean WHERE region = 'Pacific' GROUP BY temperature, YEAR(STR_TO_DATE(region, '%Y'))) AS PacificAverage;"}
{"input": " \ud30c\ub9ac \uc9c0\ud558\ucca0 \uc2dc\uc2a4\ud15c\uc758 \uc6d4\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE paris_metro (fare DECIMAL(5,2), fare_date DATE); INSERT INTO paris_metro (fare, fare_date) VALUES (4.50, '2022-01-01'), (4.50, '2022-01-02'), (4.50, '2022-02-01');", "output": "SELECT EXTRACT(MONTH FROM fare_date), SUM(fare) FROM paris_metro GROUP BY EXTRACT(MONTH FROM fare_date);"}
{"input": " \uc8fc\ub2f9 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_parity (state VARCHAR(2), violations INT);", "output": "SELECT state, violations FROM mental_health_parity;"}
{"input": "\uae30\ud6c4 \ubcc0\ud654 \uc644\ud654 \uc804\ub7b5\uc744 \uc5f0\uad6c\ud558\ub294 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc640 \ud574\ub2f9 \ub9ac\ub354\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE research_projects (id INT PRIMARY KEY, name VARCHAR(50), topic VARCHAR(50)); CREATE TABLE researchers (id INT PRIMARY KEY, name VARCHAR(50), project_id INT, FOREIGN KEY (project_id) REFERENCES research_projects(id)); CREATE TABLE leader_roles (id INT PRIMARY KEY, researcher_id INT, project_id INT, FOREIGN KEY (researcher_id) REFERENCES researchers(id), FOREIGN KEY (project_id) REFERENCES research_projects(id));", "output": "SELECT research_projects.name, researchers.name FROM research_projects LEFT JOIN leaders_roles ON research_projects.id = leaders_roles.project_id LEFT JOIN researchers ON leaders_roles.researcher_id = researchers.id WHERE research_projects.topic LIKE '%climate change mitigation%';"}
{"input": "\uc778\ud504\ub77c' \uc2a4\ud0a4\ub9c8\uc758 \uc5b4\ub5a4 \ub3c4\ub85c\uac00 'Main Street'\ub77c\ub294 \ub3c4\ub85c\uc640 \uad50\ucc28\ud569\ub2c8\uae4c?", "context": "CREATE TABLE roads (name VARCHAR(255), intersects VARCHAR(255)); INSERT INTO roads (name, intersects) VALUES ('Road1', 'Main Street'), ('Road2', 'Second Street'), ('Road3', 'Main Street');", "output": "SELECT name FROM roads WHERE intersects = 'Main Street';"}
{"input": "\uc791\ub144\uc5d0 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \uc9d1\ub2e8\uc774 \uc800\uc220\ud558\uac70\ub098 \uacf5\ub3d9 \uc800\uc220\ud55c \ucd9c\ud310\ubb3c\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE authors (id INT, name VARCHAR(50), race_ethnicity VARCHAR(50)); INSERT INTO authors (id, name, race_ethnicity) VALUES (1, 'Carlos', 'Hispanic'); INSERT INTO authors (id, name, race_ethnicity) VALUES (2, 'Dana', 'African American'); CREATE TABLE publications (id INT, year INT, title VARCHAR(50)); INSERT INTO publications (id, year, title) VALUES (1, 2021, 'Artificial Intelligence'); INSERT INTO publications (id, year, title) VALUES (2, 2020, 'Machine Learning'); CREATE TABLE authorships (id INT, publication_id INT, author_id INT); INSERT INTO authorships (id, publication_id, author_id) VALUES (1, 1, 1); INSERT INTO authorships (id, publication_id, author_id) VALUES (2, 1, 2);", "output": "SELECT COUNT(a.id) FROM authorships a JOIN publications p ON a.publication_id = p.id JOIN authors au ON a.author_id = au.id WHERE p.year = 2021 AND au.race_ethnicity IN ('Hispanic', 'African American', 'Native American', 'Pacific Islander', 'Asian (Southeast)');"}
{"input": " 2018\ub144 '\ucc44\uad74' \ubc0f '\uc7ac\ud65c\uc6a9' \uc18c\uc2a4\uc5d0\uc11c \ud14c\ub974\ube00\uc758 \ucd5c\ub300 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining (year INT, element VARCHAR(10), quantity INT); INSERT INTO mining VALUES (2018, 'Terbium', 1300); CREATE TABLE recycling (year INT, element VARCHAR(10), quantity INT); INSERT INTO recycling VALUES (2018, 'Terbium', 1100);", "output": "SELECT MAX(total_quantity) FROM (SELECT SUM(quantity) AS total_quantity FROM mining WHERE element = 'Terbium' AND year = 2018 UNION ALL SELECT SUM(quantity) FROM recycling WHERE element = 'Terbium' AND year = 2018) AS total;"}
{"input": " \uac01 \uacf5\uae09\uc5c5\uccb4\uc758 \uc9c0\uc18d\uac00\ub2a5\ud558\uc9c0 \uc54a\uc740 \uc7ac\ub8cc\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c? \ud574\ub2f9 \uc7ac\ub8cc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc81c\ud488\uc774 3\uac1c \uc774\uc0c1\uc778 \uacf5\uae09\uc5c5\uccb4\ub9cc \ud45c\uc2dc\ub429\ub2c8\uae4c?", "context": "CREATE TABLE supplier (id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50), sustainable BOOLEAN); CREATE TABLE material (id INT PRIMARY KEY, name VARCHAR(100), supplier_id INT, price DECIMAL(5,2)); CREATE TABLE product (id INT PRIMARY KEY, name VARCHAR(100), manufacturer_id INT, price DECIMAL(5,2), sustainable BOOLEAN); CREATE TABLE manufacturer (id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50), sustainable BOOLEAN); CREATE VIEW sustainable_materials AS SELECT material.id, material.name, material.price, supplier.name as supplier_name FROM material INNER JOIN supplier ON material.supplier_id = supplier.id WHERE supplier.sustainable = TRUE;", "output": "SELECT supplier_name, AVG(material.price) as average_price FROM material INNER JOIN product ON material.id = product.material_id INNER JOIN supplier ON material.supplier_id = supplier.id WHERE supplier.sustainable = FALSE GROUP BY supplier.name HAVING COUNT(*) > 3;"}
{"input": " \uc911\ub7c9\uc774 \uc5c6\ub294 \ud654\ubb3c\uc744 \ud3ec\ud568\ud558\uc5ec \ud56d\ub9cc\ubcc4 \ud56d\ub9cc\uc9c1\uc6d0\uc774 \ucde8\uae09\ud558\ub294 \ud654\ubb3c\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50)); CREATE TABLE port_employees (employee_id INT, employee_name VARCHAR(50), port_id INT); CREATE TABLE cargo (cargo_id INT, cargo_weight INT, employee_id INT);", "output": "SELECT p.port_name, COALESCE(SUM(c.cargo_weight), 0) as total_weight FROM ports p LEFT JOIN port_employees pe ON p.port_id = pe.port_id LEFT JOIN cargo c ON pe.employee_id = c.employee_id GROUP BY p.port_name;"}
{"input": " AI \ube44\uc11c \uc0ac\uc6a9\ub7c9\uc774 \ud3c9\uade0 \uc774\ud558\uc774\uace0 \uc608\uc57d \uac00\uaca9\uc774 \ud3c9\uade0 \uc774\uc0c1\uc778 \ud638\ud154\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE hotel_bookings (hotel_id INT, user_id INT, booking_date DATE, price DECIMAL(5,2)); INSERT INTO hotel_bookings (hotel_id, user_id, booking_date, price) VALUES (1, 23, '2022-01-01', 120.00), (2, 45, '2022-01-05', 250.00); CREATE TABLE hotel_ai_usage (hotel_id INT, ai_usage INT); INSERT INTO hotel_ai_usage (hotel_id, ai_usage) VALUES (1, 500), (2, 1500), (3, 700);", "output": "SELECT hotel_id FROM hotel_bookings INNER JOIN hotel_ai_usage ON hotel_bookings.hotel_id = hotel_ai_usage.hotel_id WHERE ai_usage < (SELECT AVG(ai_usage) FROM hotel_ai_usage) AND price > (SELECT AVG(price) FROM hotel_bookings);"}
{"input": "\ud14d\uc0ac\uc2a4 \uc8fc \uc18c\ubc29\uc11c\uc758 \uce74\uc6b4\ud2f0\ubcc4 \ud3c9\uade0 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fire_department (id INT, county VARCHAR(255), response_time INT);", "output": "SELECT county, AVG(response_time) as avg_response_time FROM fire_department GROUP BY county;"}
{"input": " \uc7a5\uc560 \uc720\ud615\ubcc4 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE support_programs (program_id INT, program_name VARCHAR(50), budget INT, disability_type VARCHAR(50)); INSERT INTO support_programs (program_id, program_name, budget, disability_type) VALUES (1, 'Assistive Technology', 50000, 'Physical');", "output": "SELECT disability_type, SUM(budget) as total_budget FROM support_programs GROUP BY disability_type;"}
{"input": " \uc190\ud574\uc0ac\uc815\uc0ac '\ub2e4\ub098\uce74 \ud788\ub85c\uc2dc'\uac00 \ucc98\ub9ac\ud55c \uccad\uad6c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE claim (claim_id INT, processed_by VARCHAR(50)); INSERT INTO claim VALUES (1, 'Laura Smith'); INSERT INTO claim VALUES (2, 'Hiroshi Tanaka');", "output": "SELECT claim_id FROM claim WHERE processed_by = 'Hiroshi Tanaka';"}
{"input": " \ud574\ub2f9 \uad6d\uac00\uc5d0 \uac70\uc8fc\ud55c \uc9c0 5\ub144 \ubbf8\ub9cc\uc778 \uc774\ubbfc\uc790\uc758 \uc8fc\ubcc4 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE immigrants (id INT PRIMARY KEY, state VARCHAR(2), age INT, years_in_country INT); INSERT INTO immigrants (id, state, age, years_in_country) VALUES (1, 'CA', 30, 3);", "output": "SELECT AVG(age) FROM immigrants WHERE years_in_country < 5 GROUP BY state;"}
{"input": " \ud669\uc0b0\uc774 \ud658\uacbd\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (chemical_name VARCHAR(255), impact_description TEXT);", "output": "SELECT impact_description FROM environmental_impact WHERE chemical_name = 'sulfuric acid';"}
{"input": " \uc720\uae30\ub18d \uba74\uc73c\ub85c \ub9cc\ub4e0 \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id int, material varchar(20), price decimal(5,2)); INSERT INTO products (product_id, material, price) VALUES (1, 'organic cotton', 25.99), (2, 'recycled polyester', 19.99), (3, 'organic cotton', 34.99);", "output": "SELECT AVG(price) FROM products WHERE material = 'organic cotton';"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed \uad6d\uac00\uc758 \uc5f0\ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE temperature_data (country VARCHAR(50), year INT, temperature FLOAT); INSERT INTO temperature_data VALUES ('Canada', 2010, 1.5);", "output": "SELECT country, AVG(temperature - LAG(temperature) OVER (PARTITION BY country ORDER BY year)) AS avg_annual_temp_change FROM temperature_data WHERE country IN (SELECT DISTINCT country FROM temperature_data WHERE country LIKE 'Arctic%') GROUP BY country"}
{"input": " \uc2dc\uc791 \ub0a0\uc9dc \ubc0f \uc0c1\ud0dc\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uc784\uc0c1 \uc2dc\ud5d8\uc744 \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE clinical_trials (trial_id INT, drug_name VARCHAR(255), start_date DATE, status VARCHAR(255)); INSERT INTO clinical_trials (trial_id, drug_name, start_date, status) VALUES (1, 'DrugA', '2020-01-01', 'Completed'), (2, 'DrugB', '2019-06-15', 'In Progress'), (3, 'DrugC', '2021-03-03', 'Planned');", "output": "SELECT * FROM clinical_trials;"}
{"input": " \uc11c\uc544\ud504\ub9ac\uce74\uc5d0 \uc788\ub294 \uc0dd\uc120 \uac00\uacf5 \uacf5\uc7a5\uc758 \uc774\ub984\uacfc \uc704\uce58 \ubc0f \uc5f0\uacb0\ub41c \uc591\uc5b4\uc7a5\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE fish_processing_plants (id INT, name TEXT, region TEXT); CREATE TABLE plant_connections (id INT, plant_id INT, farm_id INT); INSERT INTO fish_processing_plants (id, name, region) VALUES (1, 'Plant A', 'West Africa'), (2, 'Plant B', 'West Africa'), (3, 'Plant C', 'Central Africa'); INSERT INTO plant_connections (id, plant_id, farm_id) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 3), (4, 3, 4);", "output": "SELECT FPP.name, FPP.region, TF.name AS farm_name FROM fish_processing_plants FPP JOIN plant_connections PC ON FPP.id = PC.plant_id JOIN tilapia_farms TF ON PC.farm_id = TF.id WHERE FPP.region = 'West Africa';"}
{"input": " \uac01 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud55c \ud310\ub9e4 \uc218\uc775\uc758 \ube44\uc728\uc740 \ud310\ub9e4 \uc218\uc775 \ube44\uc728\ub85c \ubd84\ud560\ub418\uace0 \ud310\ub9e4 \ub0a0\uc9dc\ubcc4\ub85c \uac01 \ud30c\ud2f0\uc158 \ub0b4\uc5d0\uc11c \uc815\ub82c\ub429\ub2c8\ub2e4.", "context": "CREATE TABLE Categories (CategoryID INT, CategoryName VARCHAR(255));CREATE TABLE Garments (GarmentID INT, CategoryID INT, SalePrice DECIMAL(10,2));CREATE TABLE Sales (SaleID INT, GarmentID INT, SaleDate DATE, Quantity INT);", "output": "SELECT c.CategoryName, 100.0 * SUM(g.SalePrice * s.Quantity) / SUM(g.SalePrice * s.Quantity) OVER (PARTITION BY NULL) AS PercentageRevenue, s.SaleDate FROM Categories c JOIN Garments g ON c.CategoryID = g.CategoryID JOIN Sales s ON g.GarmentID = s.GarmentID GROUP BY c.CategoryName, s.SaleDate ORDER BY s.SaleDate;"}
{"input": " ESA\uc640 NASA\uc758 \uc6b0\uc8fc \uc784\ubb34\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA space; USE space; CREATE TABLE agency (name VARCHAR(50), country VARCHAR(50), funding INT); INSERT INTO agency (name, country, funding) VALUES ('ESA', 'Europe', 6000000), ('NASA', 'USA', 22000000);", "output": "SELECT SUM(funding) FROM space.agency WHERE name IN ('ESA', 'NASA');"}
{"input": " \uc2a4\ud398\uc778\uc758 1\uc778\ub2f9 \ud3c9\uade0 \uc720\uae30 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicWasteData (country VARCHAR(50), population INT, organic_waste_kg FLOAT); INSERT INTO OrganicWasteData (country, population, organic_waste_kg) VALUES ('Spain', 47351247, 3.8);", "output": "SELECT AVG(organic_waste_kg/population) FROM OrganicWasteData WHERE country = 'Spain';"}
{"input": " \ud0c0\uc728\uc744 \uae30\uc900\uc73c\ub85c \uc120\uc218 \uc21c\uc704\ub97c \ub9e4\uae30\uace0 \uc0c1\uc704 3\uba85\uc758 \uc120\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE players (player_id INT, player_name VARCHAR(100), position VARCHAR(50), team VARCHAR(50), games_played INT, at_bats INT, hits INT, home_runs INT, rbi INT); INSERT INTO players (player_id, player_name, position, team, games_played, at_bats, hits, home_runs, rbi) VALUES (1, 'John Doe', 'Outfield', 'Red Sox', 120, 450, 120, 25, 75); INSERT INTO players (player_id, player_name, position, team, games_played, at_bats, hits, home_runs, rbi) VALUES (2, 'Jane Smith', 'Infield', 'Yankees', 130, 500, 145, 30, 80);", "output": "SELECT player_name, AVG(hits/at_bats) as batting_average, ROW_NUMBER() OVER (ORDER BY AVG(hits/at_bats) DESC) as rank  FROM players  GROUP BY player_name  ORDER BY rank  LIMIT 3;"}
{"input": " \uc778\ub3c4\ub124\uc2dc\uc544 \uace0\uac1d\uc758 \ucd5c\ub300 \ub300\ucd9c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE loans (loan_id INT, client_id INT, country VARCHAR(50), loan_amount DECIMAL(10,2));   INSERT INTO loans (loan_id, client_id, country, loan_amount) VALUES (1, 3, 'Indonesia', 25000);", "output": "SELECT MAX(loan_amount) FROM loans WHERE country = 'Indonesia';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc608\uc220\uac00\ub4e4\uc774 \uc81c\uc791\ud558\uace0 \uc720\ub7fd\uc5d0\uc11c \uc804\uc2dc \uc911\uc778 \ubaa8\ub4e0 \uc608\uc220 \uc791\ud488\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Artists (ArtistID INT, Name TEXT, Country TEXT);CREATE TABLE Artworks (ArtworkID INT, Title TEXT, ArtistID INT);CREATE TABLE GalleryArtworks (GalleryID INT, ArtworkID INT);CREATE TABLE GalleryLocations (GalleryID INT, Country TEXT);", "output": "SELECT Artworks.Title FROM Artists INNER JOIN Artworks ON Artworks.ArtistID = Artists.ArtistID INNER JOIN GalleryArtworks ON Artworks.ArtworkID = GalleryArtworks.ArtworkID INNER JOIN GalleryLocations ON GalleryArtworks.GalleryID = GalleryLocations.GalleryID WHERE Artists.Country = 'Africa' AND GalleryLocations.Country = 'Europe';"}
{"input": " \ud31c\uc720\uac00 \ud568\uc720\ub41c \ud654\uc7a5\ud488 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 RSPO \uc778\uc99d\uc744 \ubc1b\uc558\ub098\uc694?", "context": "CREATE TABLE Ingredients (Ingredient_ID INT, Product_ID INT, Ingredient_Name TEXT); INSERT INTO Ingredients (Ingredient_ID, Product_ID, Ingredient_Name) VALUES (1, 1, 'Water'), (2, 1, 'Palm Oil'), (3, 2, 'Glycerin'), (4, 2, 'Parabens'), (5, 3, 'Shea Butter'), (6, 3, 'Palm Oil'), (7, 4, 'Coconut Oil'), (8, 4, 'Essential Oils'); CREATE TABLE Certifications (Certification_ID INT, Product_ID INT, Certification_Name TEXT); INSERT INTO Certifications (Certification_ID, Product_ID, Certification_Name) VALUES (1, 1, 'RSPO'), (2, 3, 'EcoCert'), (3, 4, 'Cruelty-Free');", "output": "SELECT (COUNT(DISTINCT I.Product_ID) * 100.0 / (SELECT COUNT(DISTINCT Product_ID) FROM Ingredients WHERE Ingredient_Name = 'Palm Oil')) AS Percentage FROM Ingredients I INNER JOIN Certifications C ON I.Product_ID = C.Product_ID WHERE C.Certification_Name = 'RSPO';"}
{"input": " \"Naturelle\" \ube0c\ub79c\ub4dc\uc758 \"Lavender Body Wash\" \uc81c\ud488\uc5d0 \ub300\ud55c \uc131\ubd84 \ucd9c\ucc98 \uc815\ubcf4\ub97c \ubd88\uac00\ub9ac\uc544\uac00 \uc544\ub2cc \ud504\ub791\uc2a4\uc0b0\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ingredient_sources (id INT PRIMARY KEY, product_id INT, ingredient TEXT, country TEXT, source TEXT); CREATE TABLE products (id INT PRIMARY KEY, name TEXT, brand TEXT); INSERT INTO products (id, name, brand) VALUES (1, 'Lavender Body Wash', 'Naturelle'); INSERT INTO ingredient_sources (id, product_id, ingredient, country, source) VALUES (1, 1, 'Lavender Oil', 'Bulgaria', 'Local Farmer');", "output": "UPDATE ingredient_sources SET country = 'France' WHERE product_id = (SELECT id FROM products WHERE name = 'Lavender Body Wash' AND brand = 'Naturelle') AND ingredient = 'Lavender Oil';"}
{"input": " SpaceX\uc640 NASA \uc6b0\uc8fc\uc120\uc744 \ubaa8\ub450 \ud0c0\uace0 \ube44\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nasa_crafts (craft VARCHAR(50), manufacturer VARCHAR(50)); INSERT INTO nasa_crafts (craft, manufacturer) VALUES ('Apollo', 'NASA'), ('Shuttle', 'NASA'), ('Orion', 'NASA'); CREATE TABLE astronauts (astronaut_id INT, name VARCHAR(100), age INT, craft VARCHAR(50)); INSERT INTO astronauts (astronaut_id, name, age, craft) VALUES (1, 'John', 45, 'Dragon'), (2, 'Sarah', 36, 'Starship'), (3, 'Mike', 50, 'Falcon'), (4, 'Jane', 42, 'Apollo'), (5, 'Emma', 34, 'Shuttle');", "output": "SELECT DISTINCT a.name FROM astronauts a INNER JOIN spacex_crafts c ON a.craft = c.craft INNER JOIN nasa_crafts n ON a.craft = n.craft;"}
{"input": " Bakken\uce35\uc5d0 \uc788\ub294 \uc6b0\ubb3c\uc758 \uc6b0\ubb3c\ub2f9 \ud3c9\uade0 \uc0dd\uc0b0\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(255), well_type VARCHAR(255), location VARCHAR(255)); INSERT INTO wells VALUES (1, 'Well A', 'Onshore', 'Bakken Formation'); INSERT INTO wells VALUES (2, 'Well B', 'Onshore', 'Utica Shale');", "output": "SELECT AVG(production_rate) FROM (SELECT well_id, production_rate FROM well_production WHERE location LIKE 'Bakken%' ORDER BY production_rate DESC) WHERE row_number() OVER (ORDER BY production_rate DESC) <= 10;"}
{"input": " \uac01 \uae30\ubd80\uc790\uac00 \uc544\ud504\ub9ac\uce74\uc5d0 \uc704\uce58\ud55c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\ubd80\ud55c \ucd1d\uc561\uc740 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, name TEXT, total_donation FLOAT);CREATE TABLE projects (project_id INT, name TEXT, location TEXT);CREATE TABLE donations (donation_id INT, donor_id INT, project_id INT, amount FLOAT);INSERT INTO donors VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 7000.00);INSERT INTO projects VALUES (1, 'Water Wells', 'Africa'), (2, 'Education Center', 'Asia');INSERT INTO donations VALUES (1, 1, 1, 1000.00), (2, 1, 2, 2000.00), (3, 2, 1, 3000.00), (4, 2, 2, 4000.00);", "output": "SELECT d.name, SUM(donations.amount) as total_donated_africa FROM donors d INNER JOIN donations ON d.donor_id = donations.donor_id INNER JOIN projects ON donations.project_id = projects.project_id WHERE projects.location = 'Africa' GROUP BY d.name ORDER BY total_donated_africa DESC;"}
{"input": " '\uae00\ub8e8\ud150 \ud504\ub9ac' \uba54\ub274 \uce74\ud14c\uace0\ub9ac\uac00 \uc788\ub294 \ub808\uc2a4\ud1a0\ub791\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE vendors (id INT, name VARCHAR(50), type VARCHAR(50)); CREATE TABLE menus (id INT, vendor_id INT, category VARCHAR(50)); CREATE TABLE menu_items (id INT, name VARCHAR(50), category VARCHAR(50), price DECIMAL(5,2)); CREATE TABLE orders (id INT, menu_item_id INT, quantity INT, order_date DATE);", "output": "SELECT vendors.name FROM vendors JOIN menus ON vendors.id = menus.vendor_id JOIN menu_items ON menus.category = menu_items.category WHERE menu_items.category = 'Gluten-Free';"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uc720\uae30\ub18d \ud1a0\uc9c0 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE farm_regions (id INT, farm_id INT, region VARCHAR(20)); INSERT INTO farm_regions (id, farm_id, region) VALUES (1, 1, 'rural'), (2, 2, 'urban'), (3, 3, 'rural'), (4, 4, 'indigenous'); CREATE VIEW organic_farms_by_region AS SELECT fr.region, SUM(f.acres) AS total_organic_acres FROM organic_farms f JOIN farm_regions fr ON f.id = fr.farm_id GROUP BY fr.region;", "output": "SELECT region, (SUM(CASE WHEN is_organic = 'true' THEN f.acres ELSE 0 END) / total_organic_acres) * 100 AS organic_percentage FROM farm_regions fr JOIN farms f ON fr.farm_id = f.id JOIN organic_farms_by_region org ON fr.region = org.region GROUP BY region;"}
{"input": " \uc624\ud074\ub79c\ub4dc\uc640 \ud3ec\ud2c0\ub79c\ub4dc\uc758 \uc57d\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc0ac\ud2f0\ubc14 \uade0\uc8fc\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DispensarySales (dispensary_id INT, strain VARCHAR(20), quantity INT); INSERT INTO DispensarySales (dispensary_id, strain, quantity) VALUES (1, 'Sour Diesel', 50), (1, 'Blue Dream', 75), (2, 'Green Crack', 60), (2, 'Jack Herer', 80); CREATE TABLE OaklandDispensaries (dispensary_id INT, location VARCHAR(20)); INSERT INTO OaklandDispensaries (dispensary_id, location) VALUES (1, 'Oakland'); CREATE TABLE PortlandDispensaries (dispensary_id INT, location VARCHAR(20)); INSERT INTO PortlandDispensaries (dispensary_id, location) VALUES (2, 'Portland');", "output": "SELECT SUM(quantity) FROM DispensarySales ds JOIN OaklandDispensaries od ON ds.dispensary_id = od.dispensary_id WHERE strain LIKE '%Sativa%' UNION SELECT SUM(quantity) FROM DispensarySales ds JOIN PortlandDispensaries pd ON ds.dispensary_id = pd.dispensary_id WHERE strain LIKE '%Sativa%';"}
{"input": " \uc218\ub825 \ud504\ub85c\uc81d\ud2b8\uc640 \uadf8 \uc5ed\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), capacity FLOAT, start_date DATE, end_date DATE); INSERT INTO projects (id, name, location, type, capacity, start_date, end_date) VALUES (5, 'Hydroelectric Plant 2', 'Oregon', 'Hydro', 250.0, '2021-01-01', '2031-12-31');", "output": "SELECT * FROM projects WHERE type = 'Hydro';"}
{"input": " \ucd1d 500\ub2ec\ub7ec \uc774\uc0c1 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\uae08\uc744 \ubc1b\uc740 \uae30\uad00\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Organizations (OrganizationID int, OrganizationName varchar(50));   CREATE TABLE DonationRecipients (DonationID int, OrganizationID int);   INSERT INTO Organizations (OrganizationID, OrganizationName) VALUES (1, 'Effective Altruism'), (2, 'Impact Investing'), (3, 'Philanthropic Trends'), (4, 'Donor Demographics');   INSERT INTO DonationRecipients (DonationID, OrganizationID) VALUES (1, 1), (2, 1), (3, 2), (4, 3);", "output": "SELECT Organizations.OrganizationName FROM Organizations   INNER JOIN DonationRecipients ON Organizations.OrganizationID = DonationRecipients.OrganizationID   INNER JOIN Donors ON DonationRecipients.DonationID = Donors.DonorID   INNER JOIN Donations ON Donors.DonorID = Donations.DonorID   GROUP BY Organizations.OrganizationName   HAVING SUM(Donations.DonationAmount) > 500.00;"}
{"input": "\uba55\uc2dc\ucf54\uc758 \uac01 \uc8fc\uc5d0 \ub300\ud55c \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uc218\uc640 \ucd1d \ud22c\uc790\uc561\uc744 \ucd1d \ud22c\uc790\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc21c\uc11c\ub300\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE initiative (initiative_id INT, initiative_name VARCHAR(50), state VARCHAR(50), investment FLOAT); INSERT INTO initiative VALUES (1, 'Rural Roads', 'Chihuahua', 500000), (2, 'Clean Water', 'Chihuahua', 750000), (3, 'Irrigation', 'Sinaloa', 600000), (4, 'Education', 'Sinaloa', 800000), (5, 'Renewable Energy', 'Yucatan', 900000);", "output": "SELECT state, COUNT(initiative_name) as num_initiatives, SUM(investment) as total_investment FROM initiative GROUP BY state ORDER BY total_investment DESC;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uc774\uc9d1\ud2b8\uc640 \ubaa8\ub85c\ucf54\uc758 \uac00\uc0c1 \ud22c\uc5b4\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc870\ud68c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE virtual_tours(id INT, name TEXT, country TEXT); CREATE TABLE views(virtual_tour_id INT, date DATE, views INT); INSERT INTO virtual_tours(id, name, country) VALUES (1, 'Tour A', 'Egypt'), (2, 'Tour B', 'Morocco'), (3, 'Tour C', 'Tunisia'); INSERT INTO views(virtual_tour_id, date, views) VALUES (1, '2022-01-01', 1000), (1, '2022-02-01', 1200), (1, '2022-03-01', 1500), (2, '2022-01-01', 800), (2, '2022-02-01', 900), (2, '2022-03-01', 1000), (3, '2022-01-01', 1100), (3, '2022-02-01', 1300), (3, '2022-03-01', 1400), (1, '2022-04-01', 1600), (1, '2022-05-01', 1800);", "output": "SELECT virtual_tour_id, AVG(views) OVER (PARTITION BY virtual_tour_id ORDER BY date DESC ROWS BETWEEN 12 PRECEDING AND CURRENT ROW) FROM views WHERE country IN ('Egypt', 'Morocco');"}
{"input": " \ubbf8\uad6d \uac01 \uc8fc\uc5d0 \uc788\ub294 \uacf5\ub9bd\ubcd1\uc6d0\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name VARCHAR(100), state VARCHAR(20), public BOOLEAN); INSERT INTO hospitals (id, name, state, public) VALUES (1, 'Hospital 1', 'California', true); INSERT INTO hospitals (id, name, state, public) VALUES (2, 'Hospital 2', 'California', false);", "output": "SELECT state, COUNT(*) FROM hospitals WHERE public = true GROUP BY state;"}
{"input": "2021\ub144\uacfc 2022\ub144\uc5d0 \uc870\ub2ec\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c\uc758 \ucd1d\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uac01 \uad6d\uac00\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sourcing (year INT, country VARCHAR(20), fabric_type VARCHAR(20), quantity INT); INSERT INTO sourcing (year, country, fabric_type, quantity) VALUES (2022, 'India', 'sustainable', 3000), (2022, 'India', 'organic_cotton', 5000), (2021, 'Brazil', 'recycled_polyester', 4000), (2021, 'Brazil', 'sustainable', 6000), (2021, 'Nepal', 'organic_cotton', 2000), (2021, 'Nepal', 'sustainable', 4000), (2022, 'Brazil', 'sustainable', 7000), (2022, 'Nepal', 'sustainable', 5000), (2022, 'Nepal', 'organic_cotton', 6000), (2021, 'India', 'sustainable', 8000);", "output": "SELECT country, RANK() OVER (ORDER BY total_quantity DESC) as rank FROM (SELECT country, SUM(quantity) as total_quantity FROM sourcing WHERE year IN (2021, 2022) AND fabric_type LIKE 'sustainable%' GROUP BY country) as subquery;"}
{"input": "\uad6d\uac00\ubcc4 \uc9c0\uc18d\uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ucd1d \uacf5\uae09\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE supplier_countries (supplier_id INT, country VARCHAR(50), quantity INT); INSERT INTO supplier_countries (supplier_id, country, quantity) VALUES (1, 'China', 7000), (2, 'India', 4000), (3, 'United States', 5000), (4, 'Turkey', 8000), (5, 'Italy', 6000); CREATE TABLE suppliers (supplier_id INT, name VARCHAR(255)); INSERT INTO suppliers (supplier_id, name) VALUES (1, 'Green Fabrics'), (2, 'Eco Yarns'), (3, 'Blue Textiles'), (4, 'Sustainable Threads'), (5, 'Natural Fibers'); CREATE TABLE supplier_materials (supplier_id INT, material VARCHAR(50), quantity INT); INSERT INTO supplier_materials (supplier_id, material, quantity) VALUES (1, 'Recycled Polyester', 5000), (1, 'Organic Cotton', 2000), (2, 'Recycled Polyester', 3000), (2, 'Bamboo Viscose', 1000), (3, 'Cotton', 4000), (3, 'Hemp', 1000), (4, 'Recycled Polyester', 6000), (5, 'Organic Cotton', 7000), (5, 'Tencel', 3000);", "output": "SELECT country, SUM(quantity) FROM supplier_countries sc JOIN suppliers s ON sc.supplier_id = s.supplier_id JOIN supplier_materials sm ON sc.supplier_id = sm.supplier_id GROUP BY country;"}
{"input": " \ub3c4\ucfc4\uc758 \uac01 \ud638\ud154\uacfc \ub808\uc2a4\ud1a0\ub791\uc758 \ud3c9\uade0 \ud3c9\uc810\uacfc \ub9ac\ubdf0 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(50), city VARCHAR(50), review_count INT, rating DECIMAL(2,1)); CREATE TABLE restaurants (restaurant_id INT, restaurant_name VARCHAR(50), city VARCHAR(50), review_count INT, rating DECIMAL(2,1));", "output": "SELECT 'hotel' as location, hotel_name, AVG(rating) as avg_rating, SUM(review_count) as total_reviews FROM hotels WHERE city = 'Tokyo' GROUP BY hotel_name UNION SELECT 'restaurant' as location, restaurant_name, AVG(rating) as avg_rating, SUM(review_count) as total_reviews FROM restaurants WHERE city = 'Tokyo' GROUP BY restaurant_name;"}
{"input": "\ud398\uc2a4\ud2f0\ubc8c 'Z' \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE FestivalTicketSales (festival VARCHAR(255), year INT, revenue FLOAT);", "output": "SELECT SUM(revenue) FROM FestivalTicketSales WHERE festival = 'Z';"}
{"input": " \uc7a5\ube44 \uc720\ud615\ubcc4\ub85c \uad70\uc6a9 \uc7a5\ube44 \uc720\uc9c0 \uad00\ub9ac \uc774\ubca4\ud2b8 \uc0ac\uc774\uc758 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EquipmentMaintenance (id INT, EquipmentType VARCHAR(50), EventDate DATE); INSERT INTO EquipmentMaintenance (id, EquipmentType, EventDate) VALUES (1, 'Tank', '2020-01-01'), (2, 'Helicopter', '2020-01-15'), (3, 'Tank', '2020-03-01'), (4, 'Helicopter', '2020-04-01');", "output": "SELECT EquipmentType, AVG(DATEDIFF(EventDate, LAG(EventDate) OVER (PARTITION BY EquipmentType ORDER BY EventDate))) as AverageTimeBetweenEvents FROM EquipmentMaintenance GROUP BY EquipmentType;"}
{"input": "\ub274\uc695 \uc9c0\uc5ed\uc758 \ubc84\uc2a4 \ubc0f \uae30\ucc28 \ud0d1\uc2b9\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bus_fares (ride_id INT, fare FLOAT, region VARCHAR(20)); INSERT INTO bus_fares (ride_id, fare, region) VALUES (1, 2.50, 'NY'), (2, 3.00, 'NJ'), (3, 2.75, 'NY'); CREATE TABLE train_fares (ride_id INT, fare FLOAT, region VARCHAR(20)); INSERT INTO train_fares (ride_id, fare, region) VALUES (4, 5.00, 'NY'), (5, 6.00, 'NY'), (6, 4.50, 'NY');", "output": "SELECT SUM(fare) FROM (SELECT fare FROM bus_fares WHERE region = 'NY' UNION ALL SELECT fare FROM train_fares WHERE region = 'NY') AS total_fares;"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \uc774\uc6a9\ud560 \uc218 \uc788\ub294 \ub300\uc911\uad50\ud1b5 \uc11c\ube44\uc2a4\ub294 \uba87 \uac1c\uc774\uba70, \uc774\uc6a9 \uac00\ub2a5 \uc5ec\ubd80\uc5d0 \ub530\ub978 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE PublicTransit (Province VARCHAR(255), Service VARCHAR(255)); INSERT INTO PublicTransit (Province, Service) VALUES ('Alberta', 'Calgary Transit'), ('British Columbia', 'TransLink'), ('Ontario', 'Toronto Transit Commission'), ('Quebec', 'Soci\u00e9t\u00e9 de transport de Montr\u00e9al'), ('Alberta', 'Edmonton Transit Service');", "output": "SELECT Province, Service, ROW_NUMBER() OVER (PARTITION BY Province ORDER BY Service) AS Rank FROM PublicTransit;"}
{"input": " \uc720\ub7fd\uc5d0 \uc704\uce58\ud55c \ubc29\uc0b0\uc5c5\uccb4\uc758 \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE european_contractors (contractor_id INT, region VARCHAR(255)); INSERT INTO european_contractors (contractor_id, region) VALUES (6, 'Europe'), (7, 'Europe'), (8, 'Europe');", "output": "SELECT SUM(s.sale_value) as total_sales FROM defense_contractors d INNER JOIN european_contractors ec ON d.contractor_id = ec.contractor_id INNER JOIN military_sales s ON d.contractor_id = s.contractor_id WHERE ec.region = 'Europe';"}
{"input": " \ub2e8\uc77c \ud50c\ub7ab\ud3fc\uc5d0\uc11c 10\uc2dc\uac04 \uc774\uc0c1 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\ub97c \uc2dd\ubcc4\ud558\uace0 \ucd1d \uac8c\uc784 \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, GameDuration FLOAT, Platform VARCHAR(50)); INSERT INTO Players (PlayerID, GameDuration, Platform) VALUES (1, 345.6, 'PC'), (2, 456.7, 'Console'), (3, 234.5, 'Mobile');", "output": "SELECT * FROM (SELECT PlayerID, Platform, SUM(GameDuration) AS TotalGameDuration, RANK() OVER (ORDER BY SUM(GameDuration) DESC) AS PlayerRank FROM Players GROUP BY PlayerID, Platform) AS PlayerGameTime WHERE PlayerRank <= 3;"}
{"input": " \ub178\ucd9c\uc218\uac00 1000\ud68c\uac00 \ub118\ub294 \uac8c\uc2dc\ubb3c\uc758 \ub0b4\uc6a9\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE posts (id INT PRIMARY KEY, user_id INT, content TEXT, impressions INT); INSERT INTO posts (id, user_id, content, impressions) VALUES (1, 1, 'AI is cool!', 1500); INSERT INTO posts (id, user_id, content, impressions) VALUES (2, 2, 'Machine learning rocks!', 1200);", "output": "SELECT content FROM posts WHERE impressions > 1000;"}
{"input": " \uc720\uc801\uc9c0\uc640 \uc804\ud1b5 \uc608\uc220\uc774 \uc788\ub294 \uad6d\uac00\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uba78\uc885 \uc704\uae30 \uc5b8\uc5b4\uac00 \uc0ac\uc6a9\ub429\ub2c8\uae4c?", "context": "CREATE TABLE LanguageCountry (LanguageID int, CountryID int); INSERT INTO LanguageCountry (LanguageID, CountryID) VALUES (1, 1), (2, 2), (3, 3); CREATE TABLE Countries (CountryID int, CountryName text, HeritageSite BOOLEAN, TraditionalArt BOOLEAN); INSERT INTO Countries (CountryID, CountryName, HeritageSite, TraditionalArt) VALUES (1, 'France', TRUE, TRUE), (2, 'Spain', TRUE, TRUE), (3, 'Peru', TRUE, TRUE);", "output": "SELECT L.LanguageName FROM Languages L JOIN LanguageCountry LC ON L.LanguageID = LC.LanguageID JOIN Countries C ON LC.CountryID = C.CountryID WHERE C.HeritageSite = TRUE AND C.TraditionalArt = TRUE;"}
{"input": " \ub3c4\ucfc4\uc5d0\uc11c \uc9c0\ud558\ucca0\uc774 \ub3c4\ucc29\ud558\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE subway_arrivals (id INT, station_id INT, route_id INT, timestamp TIMESTAMP, delay INT);  CREATE VIEW avg_time_between_arrivals AS SELECT station_id, route_id, AVG(TIMESTAMPDIFF(MINUTE, timestamp, LEAD(timestamp) OVER (PARTITION BY station_id, route_id ORDER BY timestamp))) as avg_time_between_arrivals FROM subway_arrivals;", "output": "SELECT avg_time_between_arrivals FROM avg_time_between_arrivals;"}
{"input": " \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud55c \ucd5c\uc2e0 \uae30\uc220\uc758 \uc774\ub984\uacfc \ucd9c\uc2dc\uc77c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tech_for_social_good (id INT, name VARCHAR(50), release_date DATE); INSERT INTO tech_for_social_good (id, name, release_date) VALUES (1, 'Tech1', '2021-01-01'); INSERT INTO tech_for_social_good (id, name, release_date) VALUES (2, 'Tech2', '2021-04-20');", "output": "SELECT name, release_date, ROW_NUMBER() OVER (ORDER BY release_date DESC) AS rank FROM tech_for_social_good;"}
{"input": "\uc2ec\uac01\ud558\uac8c \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud55c \ud574\uc591 \uc0dd\ubb3c\uc885 \ubcf4\uc874\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc870\uc9c1\uc758 \uc774\ub984\uacfc \uc6f9\uc0ac\uc774\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (id INT PRIMARY KEY, name VARCHAR(255), conservation_status VARCHAR(255)); CREATE TABLE conservation_efforts (id INT PRIMARY KEY, species_id INT, location VARCHAR(255), FOREIGN KEY (species_id) REFERENCES marine_species(id)); CREATE TABLE organizations (id INT PRIMARY KEY, effort_id INT, organization_name VARCHAR(255), organization_website VARCHAR(255), FOREIGN KEY (effort_id) REFERENCES conservation_efforts(id));", "output": "SELECT marine_species.name, organizations.organization_name, organizations.organization_website FROM marine_species INNER JOIN conservation_efforts ON marine_species.id = conservation_efforts.species_id INNER JOIN organizations ON conservation_efforts.id = organizations.effort_id WHERE marine_species.conservation_status = 'critically endangered';"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \ubbf8\uad6d, \uce90\ub098\ub2e4, \uc601\uad6d\uc5d0\uc11c\ub294 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc774 \uc5bc\ub9c8\ub098 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE restorative_justice_programs (id INT, program_name VARCHAR(255), country VARCHAR(255), start_year INT, end_year INT); INSERT INTO restorative_justice_programs (id, program_name, country, start_year, end_year) VALUES (1, 'Victim Offender Mediation Program', 'United States', 2016, 2020), (2, 'Restorative Circles', 'Canada', 2017, 2020), (3, 'Family Group Conferencing', 'United Kingdom', 2015, 2018);", "output": "SELECT COUNT(*) AS total_programs FROM restorative_justice_programs WHERE country IN ('United States', 'Canada', 'United Kingdom') AND start_year BETWEEN 2015 AND 2020;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc774\ubca4\ud2b8\uc758 \uac01 \uc774\ubca4\ud2b8 \uc720\ud615\uc5d0 \ub300\ud574 \ud310\ub9e4\ub41c \ud2f0\ucf13\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (id INT, event_name VARCHAR(100), event_type VARCHAR(50), location VARCHAR(100), start_time TIMESTAMP); CREATE TABLE Tickets (id INT, ticket_number INT, event_id INT, purchaser_name VARCHAR(100), purchase_date DATE);", "output": "SELECT event_type, 100.0 * COUNT(ticket_number) / SUM(COUNT(ticket_number)) OVER (PARTITION BY NULL) as percentage FROM Events JOIN Tickets ON Events.id = Tickets.event_id WHERE location LIKE '%Los Angeles%' GROUP BY event_type;"}
{"input": " \uac01 \ud300\ubcc4 \uc5f0\ub839\ubcc4 \ud2f0\ucf13 \ud310\ub9e4\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE AgeGroups (AgeGroupID INT, AgeGroupName VARCHAR(50)); INSERT INTO AgeGroups VALUES (1, '18-24'), (2, '25-34'), (3, '35-44'), (4, '45-54'), (5, '55+'); CREATE TABLE TicketSalesByAge (SaleID INT, TeamID INT, AgeGroupID INT, TicketsSold INT); INSERT INTO TicketSalesByAge VALUES (1, 1, 1, 500), (2, 1, 2, 550), (3, 2, 3, 600), (4, 2, 4, 650), (5, 1, 5, 700), (6, 2, 1, 750);", "output": "SELECT TeamID, AgeGroupID, TicketsSold, PERCENTAGE_RANK() OVER (PARTITION BY TeamID ORDER BY SUM(TicketsSold)) as Percentage FROM TicketSalesByAge GROUP BY TeamID, AgeGroupID;"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544' \ub808\uc2a4\ud1a0\ub791\uc758 '\ube44\uac74' \uba54\ub274 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc77c\uc77c \ub9e4\ucd9c \ubc0f \uc218\uc775\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE state (id INT, name VARCHAR(255)); INSERT INTO state (id, name) VALUES (1, 'California'); CREATE TABLE restaurant (id INT, name VARCHAR(255), state_id INT, type VARCHAR(255)); INSERT INTO restaurant (id, name, state_id, type) VALUES (1, 'Green Vegan', 1, 'vegan'), (2, 'Steak House', 1, 'non-vegan'); CREATE TABLE menu (id INT, item VARCHAR(255), price DECIMAL(5,2), daily_sales INT, restaurant_id INT);", "output": "SELECT r.name, m.item, m.daily_sales, m.price * m.daily_sales as revenue FROM menu m JOIN restaurant r ON m.restaurant_id = r.id JOIN state s ON r.state_id = s.id WHERE s.name = 'California' AND r.type = 'vegan';"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ub179\uc0c9 \uac74\ubb3c \uc218\uc640 \ucd1d \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (building_id INT, building_name VARCHAR(50), city VARCHAR(50), certification_level VARCHAR(50), carbon_offsets FLOAT); INSERT INTO green_buildings (building_id, building_name, city, certification_level, carbon_offsets) VALUES (1, 'Green Building 1', 'CityA', 'Gold', 100.0), (2, 'Green Building 2', 'CityB', 'Platinum', 200.0), (3, 'Green Building 3', 'CityA', 'Silver', 150.0);", "output": "SELECT city, COUNT(*), SUM(carbon_offsets) FROM green_buildings GROUP BY city;"}
{"input": " \uac01 \ubcc0\ud638\uc0ac\uc758 \uc131\uacf5\ub960\uc740 \uadf8\ub4e4\uc774 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\ub85c \uc815\uc758\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT, Name VARCHAR(50)); CREATE TABLE Cases (CaseID INT, AttorneyID INT, CaseStatus VARCHAR(10));", "output": "SELECT A.Name, COUNT(*) * 100.0 / SUM(CASE WHEN C.CaseStatus = 'Won' THEN 1.0 ELSE 0.0 END) OVER (PARTITION BY NULL) AS WinRate FROM Attorneys A INNER JOIN Cases C ON A.AttorneyID = C.AttorneyID WHERE C.CaseStatus = 'Won';"}
{"input": " 2020\ub144 '\uc0ac\uc774\ubc84 \ubcf4\uc548' \ubd80\uc11c\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uae09\uc5ec\ub97c \ubc1b\uc740 \uc9c1\uc6d0 \uc0c1\uc704 3\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employee_salaries (employee_id INT, employee_name TEXT, department TEXT, salary INT, year INT); INSERT INTO employee_salaries (employee_id, employee_name, department, salary, year) VALUES (1, 'Alice', 'cybersecurity', 80000, 2020), (2, 'Bob', 'intelligence', 90000, 2020), (3, 'Charlie', 'cybersecurity', 85000, 2020), (4, 'David', 'cybersecurity', 95000, 2020), (5, 'Eve', 'cybersecurity', 90000, 2020);", "output": "SELECT employee_name, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary DESC) as rn FROM employee_salaries WHERE department = 'cybersecurity' AND year = 2020 AND rn <= 3;"}
{"input": " \uac01 \uad6d\uac00\uc758 \ucd1d \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_id INT PRIMARY KEY, country_name VARCHAR(255)); INSERT INTO countries (country_id, country_name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'); CREATE TABLE mobile_subscribers (subscriber_id INT PRIMARY KEY, country_id INT); INSERT INTO mobile_subscribers (subscriber_id, country_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3); CREATE TABLE broadband_subscribers (subscriber_id INT PRIMARY KEY, country_id INT); INSERT INTO broadband_subscribers (subscriber_id, country_id) VALUES (1, 1), (2, 2), (3, 2), (4, 3), (5, 3);", "output": "SELECT c.country_name, COUNT(m.subscriber_id) + COUNT(b.subscriber_id) as total_subscribers FROM countries c LEFT JOIN mobile_subscribers m ON c.country_id = m.country_id LEFT JOIN broadband_subscribers b ON c.country_id = b.country_id GROUP BY c.country_name;"}
{"input": " \uace0\uac1d\ubd88\ub9cc \uc720\ud615\ubcc4 \ud574\uacb0\uc5d0 \uc18c\uc694\ub418\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE customer_complaints (id INT, complaint_type VARCHAR(20), resolution_time DECIMAL(5,2)); INSERT INTO customer_complaints (id, complaint_type, resolution_time) VALUES (1, 'coverage', 5.3), (2, 'data_speed', 3.2), (3, 'customer_service', 4.5), (4, 'billing', 2.9), (5, 'technical_support', 6.1);", "output": "SELECT complaint_type, AVG(resolution_time) FROM customer_complaints GROUP BY complaint_type;"}
{"input": " \ubcf4\uc874\ub41c \uc5b8\uc5b4\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE languages (language_id INT, country_id INT, language_name VARCHAR(255), status VARCHAR(255));  INSERT INTO languages VALUES (1, 1, 'French', 'Preserved'), (2, 1, 'Occitan', 'Endangered'), (3, 2, 'English', 'Preserved'), (4, 2, 'Cherokee', 'Endangered'), (5, 3, 'Japanese', 'Preserved'), (6, 3, 'Ainu', 'Endangered');", "output": "SELECT COUNT(*) FROM languages WHERE status = 'Preserved';"}
{"input": " \ubbf8\uad6d\uacfc \ub7ec\uc2dc\uc544 \uc6b0\uc8fc \ud504\ub85c\uadf8\ub7a8\uc744 \uc704\ud574 \uc6b0\uc8fc \uc720\uc601\uc744 \ud55c \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE SCHEMA space; USE space; CREATE TABLE astronaut (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE spacewalk (id INT, astronaut_id INT, space_program VARCHAR(50)); INSERT INTO astronaut (id, name, country) VALUES (1, 'Joseph Acaba', 'USA'), (2, 'Sergey Krikalev', 'Russia'); INSERT INTO spacewalk (id, astronaut_id, space_program) VALUES (1, 1, 'USA'), (2, 1, 'Russia'), (3, 2, 'Russia'), (4, 2, 'USA');", "output": "SELECT DISTINCT a.name FROM space.astronaut a JOIN space.spacewalk s1 ON a.id = s1.astronaut_id JOIN space.spacewalk s2 ON a.id = s2.astronaut_id WHERE s1.space_program = 'USA' AND s2.space_program = 'Russia';"}
{"input": " \ubd88\ub9cc\uc0ac\ud56d\uc744 \uc811\uc218\ud558\uc9c0 \uc54a\uc740 \uc774\ub3d9\ud1b5\uc2e0 \uac00\uc785\uc790 \uc0ad\uc81c", "context": "CREATE TABLE mobile_subscribers (id INT, name VARCHAR(255), data_allowance INT, contract_start DATE); INSERT INTO mobile_subscribers (id, name, data_allowance, contract_start) VALUES (1, 'John Doe', 5000, '2020-01-01'), (2, 'Jane Doe', 3000, '2019-01-01'); CREATE TABLE customer_complaints (id INT, subscriber_id INT, complaint_date DATE, complaint_type VARCHAR(255)); INSERT INTO customer_complaints (id, subscriber_id, complaint_date, complaint_type) VALUES (1, 1, '2020-02-01', 'Network Downtime'), (2, 3, '2021-01-01', 'No Service');", "output": "DELETE FROM mobile_subscribers WHERE id NOT IN (SELECT subscriber_id FROM customer_complaints);"}
{"input": " \uc0c1\uc704 3\uba85\uc758 player_id\uc640 \uc774\ub4e4\uc758 \ucd1d \uc5c5\uc801\uc744 \ud3ec\ud568\ud558\ub294 'top_players' \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE TABLE player_achievements (player_id INT, achievement_name VARCHAR(255), achievement_date DATE);", "output": "CREATE VIEW top_players AS SELECT player_id, COUNT(*) as total_achievements FROM player_achievements GROUP BY player_id ORDER BY total_achievements DESC LIMIT 3;"}
{"input": " \ub274\uc695\uacfc \uc624\ud558\uc774\uc624\uc5d0\ub294 \ucd1d \uba87 \uac1c\uc758 \ub178\ub3d9\uc870\ud569\uc774 \uc788\uc73c\uba70, \ud574\ub2f9 \ub178\ub3d9\uc870\ud569\uc758 \ucd1d \uadfc\ub85c\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, state VARCHAR(2), workers INT);", "output": "SELECT COUNT(*), SUM(workers) FROM unions WHERE state IN ('NY', 'OH');"}
{"input": " \ubbf8\uad6d \ud2b9\ud5c8\ub97c \uc81c\uc678\ud558\uace0 \ucd5c\uadfc 3\ub144\uac04 \ucd9c\uc6d0\ub41c \uad70\uc0ac\uae30\uc220 \ud2b9\ud5c8\uc758 \ucd1d \uac1c\uc218\ub97c \ud45c\uc2dc\ud558\uc2dc\uc624.", "context": "CREATE TABLE patents (id INT, country VARCHAR(50), filed_date DATE, patent_type VARCHAR(50)); INSERT INTO patents (id, country, filed_date, patent_type) VALUES (1, 'USA', '2021-01-01', 'Military Tech'); INSERT INTO patents (id, country, filed_date, patent_type) VALUES (2, 'Canada', '2020-01-01', 'Military Tech');", "output": "SELECT COUNT(*) FROM patents WHERE country != 'USA' AND filed_date >= (SELECT DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR));"}
{"input": " '\ud30c\ub9ac'\uc5d0\uc11c \ubaa9\uc801\uc9c0\uae4c\uc9c0\uc758 \ubaa8\ub4e0 \ud654\ubb3c\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (ID INT, Origin VARCHAR(50), Destination VARCHAR(50), Weight INT); INSERT INTO Shipments (ID, Origin, Destination, Weight) VALUES (1, 'Tokyo', 'New York', 100), (2, 'Paris', 'London', 200), (3, 'Brazil', 'India', 300);", "output": "SELECT SUM(Shipments.Weight) FROM Shipments WHERE Shipments.Origin = 'Paris';"}
{"input": " 2019\ub144 '\ud0dc\uad6d \uc694\ub9ac'\uc5d0\ub294 \uba87 \uac74\uc758 \uc2dd\ud488 \uc548\uc804 \uc704\ubc18\uc774 \uc788\uc5c8\ub098\uc694?", "context": "CREATE TABLE food_safety (restaurant_name VARCHAR(255), violations INT, year INT); INSERT INTO food_safety (restaurant_name, violations, year) VALUES ('Thai Cuisine', 2, 2019), ('Thai Cuisine', 1, 2018), ('Thai Cuisine', 0, 2017);", "output": "SELECT SUM(violations) FROM food_safety WHERE restaurant_name = 'Thai Cuisine' AND year = 2019;"}
{"input": "\ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc758 \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac \uc704\ubc18 \ud69f\uc218\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nyc_inspections (inspection_id INT, borough VARCHAR(20), violation_date DATE, fine_amount INT);", "output": "SELECT borough, AVG(violation_count) as moving_average FROM (SELECT borough, DATEADD(month, DATEDIFF(month, 0, violation_date), 0) as month, COUNT(*) as violation_count FROM nyc_inspections GROUP BY borough, month) AS subquery WHERE month >= DATEADD(month, -12, GETDATE()) GROUP BY borough;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc9c0\uc18d\uac00\ub2a5\ud55c \ud328\uc158 \uc81c\ud488\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, product_type VARCHAR(20), country VARCHAR(20), revenue DECIMAL); INSERT INTO sales (id, product_type, country, revenue) VALUES (1, 'sustainable', 'USA', 100.00), (2, 'regular', 'USA', 200.00), (3, 'sustainable', 'Canada', 300.00), (4, 'regular', 'Canada', 400.00), (5, 'sustainable', 'Mexico', 500.00);", "output": "SELECT country, SUM(revenue) FROM sales WHERE product_type = 'sustainable' GROUP BY country;"}
{"input": "\ub8e8\ube0c\ub974 \ubc15\ubb3c\uad00\uc758 \uc8fc\uc694 \uacf5\ud5cc\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, Name varchar(50), City varchar(50)); CREATE TABLE Donations (DonationID int, DonorID int, MuseumID int, Amount int);", "output": "SELECT Donors.Name, SUM(Donations.Amount) AS TotalDonatedAmount FROM Donors INNER JOIN Donations ON Donors.DonorID = Donations.DonorID WHERE Donations.MuseumID = (SELECT MuseumID FROM Museums WHERE Name = 'Louvre') GROUP BY Donors.Name ORDER BY TotalDonatedAmount DESC;"}
{"input": " 2021\ub144 \ub9e4\ub2ec \uba87 \uba85\uc758 \ud68c\uc6d0\uc774 \uac00\uc785\ud588\ub098\uc694?", "context": "CREATE TABLE membership_data (member_id INT, join_date DATE); INSERT INTO membership_data (member_id, join_date) VALUES (1, '2021-01-05'), (2, '2021-02-12'), (3, '2021-03-20'), (4, '2021-04-28'), (5, '2021-05-03');", "output": "SELECT EXTRACT(MONTH FROM join_date) AS month, COUNT(*) AS members_joined FROM membership_data WHERE join_date >= '2021-01-01' AND join_date < '2022-01-01' GROUP BY month;"}
{"input": " \uc774\ubbf8 \uc885\ub8cc\ub41c \uc804\uc2dc\ub294 \uc81c\uc678\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Exhibitions (ExhibitionID INT, Title VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO Exhibitions (ExhibitionID, Title, StartDate, EndDate) VALUES (1, 'Impressionist Exhibition', '1874-04-15', '1874-05-15'), (2, 'Expressionist Exhibition', '1919-07-01', '1919-09-30');", "output": "SELECT Title FROM Exhibitions WHERE EndDate > CURDATE();"}
{"input": " \uc9c0\ub09c \ub2ec \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurant_sales (sale_date DATE, menu_category VARCHAR(255), sales DECIMAL(10,2)); INSERT INTO restaurant_sales (sale_date, menu_category, sales) VALUES ('2022-01-01', 'Appetizers', 500.00), ('2022-01-01', 'Entrees', 2000.00), ('2022-01-01', 'Desserts', 1000.00);", "output": "SELECT menu_category, SUM(sales) FROM restaurant_sales WHERE sale_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY menu_category;"}
{"input": " 2023\ub144 \uc0c1\ubc18\uae30 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc0dd\uc0b0\ub41c OG Kush \uade0\uc8fc\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE og_kush_production (id INT, production_weight INT, production_date DATE);", "output": "SELECT SUM(production_weight) FROM og_kush_production WHERE production_date BETWEEN '2023-01-01' AND '2023-06-30' AND production_weight > 0;"}
{"input": " \uac01 \uad11\uc0b0\uc758 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mines (MineID INT, MineName VARCHAR(50), Location VARCHAR(50)); INSERT INTO Mines (MineID, MineName, Location) VALUES (1, 'ABC Mine', 'Colorado'), (2, 'DEF Mine', 'Alaska'), (3, 'GHI Mine', 'Australia'); CREATE TABLE Operations (OperationID INT, MineID INT, OperationType VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO Operations (OperationID, MineID, OperationType, StartDate, EndDate) VALUES (1, 1, 'Drilling', '2020-01-01', '2020-01-15'), (2, 2, 'Exploration', '2020-02-01', '2020-03-01'), (3, 3, 'Extraction', '2020-04-01', '2020-06-01'); CREATE TABLE EnvironmentalImpact (OperationID INT, WaterUsage INT); INSERT INTO EnvironmentalImpact (OperationID, WaterUsage) VALUES (1, 5000), (2, 7000), (3, 6000);", "output": "SELECT Mines.MineName, SUM(EnvironmentalImpact.WaterUsage)  FROM Mines  INNER JOIN Operations ON Mines.MineID = Operations.MineID  INNER JOIN EnvironmentalImpact ON Operations.OperationID = EnvironmentalImpact.OperationID  GROUP BY Mines.MineName;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\uac00 4.5 \uc774\uc0c1\uc778 \ubaa9\uc801\uc9c0\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE destinations (destination TEXT, region TEXT, sustainability_score FLOAT); INSERT INTO destinations (destination, region, sustainability_score) VALUES ('Bali', 'Asia Pacific', 4.7), ('Paris', 'Europe', 4.5), ('New York', 'North America', 4.3);", "output": "SELECT region, 100.0 * AVG(CASE WHEN sustainability_score > 4.5 THEN 1.0 ELSE 0.0 END) OVER (PARTITION BY region) AS pct_sustainability_score FROM destinations;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \uc18c\uc678\ub41c \ucee4\ubba4\ub2c8\ud2f0 \uae30\uc5ec\uc790\uac00 \ucd9c\ud310\ud55c \uc724\ub9ac\uc801 AI \uc5f0\uad6c \ub17c\ubb38\uc758 \ucd1d \uc218\uc640 \uc774\ub4e4 \uc9c0\uc5ed\uc758 \uae30\uc5ec\uc790\uac00 \ucd9c\ud310\ud55c \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud55c \uae30\uc220 \uc5f0\uad6c \ub17c\ubb38\uc758 \ucd1d \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE contributors (id INT, name VARCHAR(100), region VARCHAR(50)); INSERT INTO contributors (id, name, region) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'Canada'), (3, 'Charlie', 'USA'), (4, 'Diana', 'Canada'); CREATE TABLE ethical_ai_papers (id INT, title VARCHAR(100), contributor_id INT); INSERT INTO ethical_ai_papers (id, title, contributor_id) VALUES (1, 'Ethical AI in Healthcare', 1), (2, 'Fair AI in Education', 3), (3, 'Accessible AI for All', 2); CREATE TABLE social_good_papers (id INT, title VARCHAR(100), contributor_id INT); INSERT INTO social_good_papers (id, title, contributor_id) VALUES (1, 'Tech for Social Good in Africa', 2), (2, 'Ethical Tech for Disability Rights', 3), (3, 'AI for Climate Change', 4);", "output": "SELECT COUNT(*) FROM ethical_ai_papers WHERE contributor_id IN (SELECT id FROM contributors WHERE region IN ('USA', 'Canada')) UNION SELECT COUNT(*) FROM social_good_papers WHERE contributor_id IN (SELECT id FROM contributors WHERE region IN ('USA', 'Canada'));"}
{"input": " \ubaa8\ub4e0 \uc9c0\uc5ed\uc5d0\uc11c \uc5b4\ub5a4 \uace0\uac1d\uc774 \uac70\ub798\ub97c \ud558\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Transactions (id INT, customer_id INT, region VARCHAR(10)); INSERT INTO Transactions (id, customer_id, region) VALUES (1, 10, 'Europe'), (2, 10, 'Asia'), (3, 11, 'Asia'), (4, 12, 'Europe'), (5, 13, 'Americas'), (6, 10, 'Americas'), (7, 14, 'Africa');", "output": "SELECT customer_id FROM Transactions GROUP BY customer_id HAVING COUNT(DISTINCT region) = (SELECT COUNT(DISTINCT region) FROM Transactions);"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc758 \uc804\uae30 \uc790\ub3d9\ucc28 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vehicle_sales (id INT, type VARCHAR(20), sales INT, city VARCHAR(20)); INSERT INTO vehicle_sales (id, type, sales, city) VALUES (1, 'Electric', 3000, 'Los Angeles');", "output": "SELECT (SUM(CASE WHEN type = 'Electric' THEN sales ELSE 0 END) / SUM(sales)) * 100 as market_share FROM vehicle_sales WHERE city = 'Los Angeles';"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ucc38\uc5ec\uc5d0 \ub530\ub77c \uc815\ub82c\ub41c \uac01 \uc704\uce58\uc758 \ud3c9\uade0 \uc9c0\uc5ed\uc0ac\ud68c \ucc38\uc5ec\uc640 \uacbd\ucc30 \ucd9c\uc11d\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE CommunityPolicing (Id INT, Location VARCHAR(20), PolicePresence INT, CommunityEngagement INT);", "output": "SELECT Location, AVG(CommunityEngagement) as AvgCommunityEngagement, AVG(PolicePresence) as AvgPolicePresence FROM CommunityPolicing GROUP BY Location ORDER BY AvgCommunityEngagement DESC;"}
{"input": " \ud68c\ud654 \ubc0f \uc870\uac01 \ub9e4\uccb4\uc5d0 \uc885\uc0ac\ud558\ub294 \uc608\uc220\uac00\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Artists (medium VARCHAR(20), age INT); INSERT INTO Artists (medium, age) VALUES ('Painting', 25), ('Painting', 45), ('Sculpture', 30), ('Sculpture', 50);", "output": "SELECT MIN(age), MAX(age) FROM Artists WHERE medium IN ('Painting', 'Sculpture');"}
{"input": " \uad6d\uac00 \ubc0f \ud3c9\uade0 \uac00\uc911\uce58\uc640 \ud568\uaed8 \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \uac00\uc911\uce58\uac00 \uac00\uc7a5 \ub192\uc740 \uc774\uc288 \uc720\ud615\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Artifacts (ArtifactID INT, ArtifactType VARCHAR(50), ArtifactWeight FLOAT, Country VARCHAR(50)); INSERT INTO Artifacts (ArtifactID, ArtifactType, ArtifactWeight, Country) VALUES (1, 'Pottery', 2.3, 'USA'), (2, 'Stone Tool', 1.8, 'Mexico'), (3, 'Bone Tool', 3.1, 'USA'), (4, 'Ceramic Figurine', 4.7, 'Canada'), (5, 'Metal Artifact', 5.9, 'Canada');", "output": "SELECT Country, ArtifactType, AVG(ArtifactWeight) AS AvgWeight FROM Artifacts GROUP BY Country, ArtifactType HAVING COUNT(*) = (SELECT COUNT(*) FROM Artifacts GROUP BY ArtifactType HAVING COUNT(*) = (SELECT COUNT(*) FROM Artifacts GROUP BY Country, ArtifactType));"}
{"input": " 2023\ub144\uc5d0 \ub2e8\uccb4\uad50\uc12d\uc774 \ub9cc\ub8cc\ub418\ub294 \ub178\ub3d9\uc870\ud569\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, name TEXT, cba_expiration_year INT); INSERT INTO unions (id, name, cba_expiration_year) VALUES (1, 'Union A', 2023), (2, 'Union B', 2024), (3, 'Union C', 2023);", "output": "SELECT name FROM unions WHERE cba_expiration_year = 2023;"}
{"input": " \uc778\ub3c4\uc5d0\uc11c \uc81c\uc791\ub41c \uc601\ud654 \uc911 \ucd9c\uc5f0\ud55c \uc601\ud654 \uc218 \uae30\uc900 \uc0c1\uc704 5\uba85\uc758 \ubc30\uc6b0\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE actors (id INT, name VARCHAR(255), gender VARCHAR(8)); CREATE TABLE movies_actors (movie_id INT, actor_id INT, PRIMARY KEY (movie_id, actor_id), FOREIGN KEY (movie_id) REFERENCES movies(id), FOREIGN KEY (actor_id) REFERENCES actors(id)); CREATE TABLE movies (id INT, title VARCHAR(255), production_country VARCHAR(64), PRIMARY KEY (id)); INSERT INTO actors (id, name, gender) VALUES (1, 'Actor1', 'Male'), (2, 'Actor2', 'Female'), (3, 'Actor3', 'Male'); INSERT INTO movies_actors (movie_id, actor_id) VALUES (1, 1), (1, 2), (2, 1), (3, 3); INSERT INTO movies (id, title, production_country) VALUES (1, 'Movie1', 'India'), (2, 'Movie2', 'India'), (3, 'Movie3', 'USA');", "output": "SELECT a.name, COUNT(ma.movie_id) AS num_movies FROM actors a INNER JOIN movies_actors ma ON a.id = ma.actor_id INNER JOIN movies m ON ma.movie_id = m.id WHERE m.production_country = 'India' GROUP BY a.name ORDER BY num_movies DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c \ud574 \uc548\uc804 \uc0ac\uace0 \uac74\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc0ac\uc6a9\ub41c \ud654\ud559 \ubb3c\uc9c8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemicals (id INT PRIMARY KEY, chemical_name VARCHAR(255), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); CREATE TABLE manufacturing_projects (id INT PRIMARY KEY, name VARCHAR(255), site_id INT, start_date DATE, end_date DATE, FOREIGN KEY (site_id) REFERENCES manufacturing_sites(id)); CREATE TABLE project_chemicals (id INT PRIMARY KEY, project_id INT, chemical_name VARCHAR(255), FOREIGN KEY (project_id) REFERENCES manufacturing_projects(id), FOREIGN KEY (chemical_name) REFERENCES chemicals(chemical_name)); CREATE TABLE safety_incidents (id INT PRIMARY KEY, site_id INT, incident_type VARCHAR(255), date DATE, FOREIGN KEY (site_id) REFERENCES manufacturing_sites(id));", "output": "SELECT chemicals.chemical_name, COUNT(safety_incidents.id) AS incident_count FROM chemicals INNER JOIN project_chemicals ON chemicals.chemical_name = project_chemicals.chemical_name INNER JOIN manufacturing_projects ON project_chemicals.project_id = manufacturing_projects.id INNER JOIN safety_incidents ON manufacturing_projects.site_id = safety_incidents.site_id WHERE safety_incidents.date >= DATEADD(year, -1, GETDATE()) GROUP BY chemicals.chemical_name ORDER BY incident_count DESC;"}
{"input": " 2022\ub144 \ud3d0\uae30\ubb3c \ucc98\ub9ac \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Budget_Allocation( allocation_id INT PRIMARY KEY, category VARCHAR(255), amount FLOAT, fiscal_year INT, FOREIGN KEY (category) REFERENCES Public_Services(service_name));  INSERT INTO Budget_Allocation (allocation_id, category, amount, fiscal_year) VALUES (1, 'Road Maintenance', 5500000.00, 2022), (2, 'Waste Management', 7500000.00, 2022), (3, 'Street Lighting', 3500000.00, 2022);  CREATE TABLE Public_Services( service_id INT PRIMARY KEY, service_name VARCHAR(255), location VARCHAR(255), budget FLOAT, created_date DATE);", "output": "SELECT SUM(amount) FROM Budget_Allocation WHERE fiscal_year = 2022 AND category IN (SELECT service_name FROM Public_Services WHERE service_name = 'Waste Management');"}
{"input": " \uae30\ubd80\uc790\ubcc4 \ucd5c\uadfc 3\uac1c\uc6d4\uac04 \uae30\ubd80\uae08\uc561\uc758 \uc774\ub3d9\ud3c9\uade0\uc744 \uae30\ubd80\uc77c\uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Donors (DonorID int, Name varchar(50)); CREATE TABLE Donations (DonationID int, DonorID int, Amount decimal(10,2), DonationDate date); INSERT INTO Donors (DonorID, Name) VALUES (1, 'James'), (2, 'Michelle'), (3, 'David'); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (1, 1, 500.00, '2022-01-15'), (2, 1, 300.00, '2022-02-01'), (3, 2, 200.00, '2022-03-01'), (4, 3, 1500.00, '2022-04-01'), (5, 1, 800.00, '2022-05-01'), (6, 2, 400.00, '2022-06-01');", "output": "SELECT D.DonorID, D.Name, D.DonationDate, AVG(D.Amount) OVER (PARTITION BY D.DonorID ORDER BY D.DonationDate ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MovingAverage FROM Donors D JOIN Donations DD ON D.DonorID = DD.DonorID ORDER BY DD.DonationDate;"}
{"input": " \uc791\ub144\uc5d0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc744 10% \uc774\uc0c1 \uc904\uc778 \uc81c\uc870\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HistoricalWaste (HistoricalWasteID INT, ManufacturerID INT, WastePerGarment DECIMAL(5,2), Year INT); INSERT INTO HistoricalWaste (HistoricalWasteID, ManufacturerID, WastePerGarment, Year) VALUES (1, 1, 5.3, 2020), (2, 1, 4.8, 2021), (3, 2, 6.1, 2020), (4, 2, 5.9, 2021);", "output": "SELECT m.ManufacturerName, (hw1.WastePerGarment - hw2.WastePerGarment) / hw1.WastePerGarment * 100.0 AS WasteReductionPercentage FROM Manufacturers m JOIN HistoricalWaste hw1 ON m.ManufacturerID = hw1.ManufacturerID JOIN HistoricalWaste hw2 ON m.ManufacturerID = hw2.ManufacturerID WHERE hw1.Year = (SELECT MAX(Year) FROM HistoricalWaste) AND hw2.Year = (SELECT MAX(Year) - 1 FROM HistoricalWaste) AND (hw1.WastePerGarment - hw2.WastePerGarment) / hw1.WastePerGarment * 100.0 > 10.0;"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30 \ubb34\ub8cc \uc785\uc7a5 \uc774\ubca4\ud2b8\uc758 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE EventAttendance (event_id INT, attendance INT, free_admission BOOLEAN); INSERT INTO EventAttendance (event_id, attendance, free_admission) VALUES (1, 100, true), (2, 150, false), (3, 200, true), (4, 250, false), (5, 300, true), (6, 350, false), (7, 400, true), (8, 450, false);", "output": "SELECT SUM(attendance) AS total_attendance FROM EventAttendance WHERE free_admission = true AND event_id IN (SELECT event_id FROM Events WHERE event_date BETWEEN '2022-01-01' AND '2022-06-30');"}
{"input": " \ub3c5\uc77c \ud48d\ub825\ubc1c\uc804\ub2e8\uc9c0\uc758 \ucd1d \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE wind_farms (id INT, name TEXT, country TEXT, capacity FLOAT); INSERT INTO wind_farms (id, name, country, capacity) VALUES (1, 'Windfarm 1', 'Germany', 150.0), (2, 'Windfarm 2', 'Germany', 200.0);", "output": "SELECT SUM(capacity) FROM wind_farms WHERE country = 'Germany';"}
{"input": " \ubcf4\ud5d8 \uc720\ud615\ubcc4 \ubcf4\ud5d8 \uac00\uc785\uc790 \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Policyholder (PolicyholderID INT, Age INT, PolicyType VARCHAR(20)); INSERT INTO Policyholder (PolicyHolderID, Age, PolicyType) VALUES (1, 35, 'Auto'), (2, 45, 'Home'), (3, 55, 'Life'), (4, 65, 'Auto'), (5, 75, 'Home'), (6, 85, 'Life');", "output": "SELECT PolicyType, Age, COUNT(*) OVER (PARTITION BY PolicyType, Age) AS CountByTypeAge, ROW_NUMBER() OVER (PARTITION BY PolicyType ORDER BY Age) AS RankByPolicyType FROM Policyholder;"}
{"input": " 2022\ub144 \ub3c5\uc77c \ud310\ub9e4 \uac00\uce58 10% \uc99d\uac00", "context": "CREATE TABLE sales(id INT, year INT, country TEXT, value FLOAT);INSERT INTO sales(id, year, country, value) VALUES (1, 2022, 'Germany', 15000000);", "output": "WITH updated_sales AS (UPDATE sales SET value = value * 1.10 WHERE year = 2022 AND country = 'Germany') SELECT * FROM updated_sales;"}
{"input": "\uc778\ub825 \ub2e4\uc591\uc131 \uc9c0\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diversity (id INT, state VARCHAR(20), diversity_index FLOAT); INSERT INTO diversity (id, state, diversity_index) VALUES (1, 'Queensland', 0.65), (2, 'NewSouthWales', 0.72), (3, 'Victoria', 0.70);", "output": "SELECT state, MIN(diversity_index) as min_index FROM diversity GROUP BY state;"}
{"input": "\uc9c0\ub09c \ub2ec \ucd1d \uce68\uc785 \uc2dc\ub3c4 \ud69f\uc218\ub97c \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc0c1\uc704 5\uba85\uc758 \uc704\ud611 \ud589\uc704\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_actors (id INT, actor_name VARCHAR(255), intrusion_attempts INT, detection_date DATE); INSERT INTO threat_actors (id, actor_name, intrusion_attempts, detection_date) VALUES (1, 'Actor1', 100, '2022-05-01'), (2, 'Actor2', 150, '2022-05-02');", "output": "SELECT actor_name, SUM(intrusion_attempts) as total_intrusion_attempts, RANK() OVER (ORDER BY SUM(intrusion_attempts) DESC) as rank FROM threat_actors WHERE detection_date >= DATE(NOW()) - INTERVAL '1 month' GROUP BY actor_name HAVING rank <= 5;"}
{"input": " VR\uc774 \uc544\ub2cc \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\ub294 \uc77c\ubcf8 \ud50c\ub808\uc774\uc5b4\uc758 \ucd5c\ub300 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Country) VALUES (1, 25, 'USA'), (2, 30, 'Canada'), (3, 22, 'Germany'), (4, 35, 'Japan'); CREATE TABLE GameLibrary (GameID INT, GameName VARCHAR(50), GameType VARCHAR(50)); INSERT INTO GameLibrary (GameID, GameName, GameType) VALUES (1, 'GameA', 'VR'), (2, 'GameB', 'Non-VR'), (3, 'GameC', 'Non-VR'); CREATE TABLE PlayerGameLibrary (PlayerID INT, GameID INT); INSERT INTO PlayerGameLibrary (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 2), (4, 3);", "output": "SELECT MAX(Players.Age) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE Players.Country = 'Japan' AND GameLibrary.GameType = 'Non-VR';"}
{"input": " \ud574\uc591 \uc0dd\ubb3c \uc5f0\uad6c \uae30\uc9c0\uc640 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_life_research_stations (id INT, name VARCHAR(255), region VARCHAR(255)); CREATE TABLE pollution_control_initiatives (id INT, name VARCHAR(255), region VARCHAR(255));", "output": "SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM marine_life_research_stations UNION ALL SELECT COUNT(*) FROM pollution_control_initiatives) x;"}
{"input": " \uac8c\uc784\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uc810\uc218\ub97c \ubc1b\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uc774\ub984\uacfc \uac8c\uc784\uc744 \uc120\ud0dd\ud558\uc138\uc694.", "context": "CREATE TABLE Players (PlayerID INT, Name VARCHAR(50), Game VARCHAR(50), Score INT); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (1, 'John Doe', 'GameA', 1000); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (2, 'Jane Doe', 'GameB', 2000); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (3, 'Alice', 'GameA', 1500); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (4, 'Bob', 'GameA', 1200); INSERT INTO Players (PlayerID, Name, Game, Score) VALUES (5, 'Charlie', 'GameB', 1800);", "output": "SELECT Name, Game FROM Players P1 WHERE Score = (SELECT MAX(Score) FROM Players P2 WHERE P1.Game = P2.Game);"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc\uc758 \ubb34\uc790\ube44 \uc778\uc99d\uacfc \ud574\ub2f9 \ud3c9\uade0 \uc120\ud638\ub3c4 \uc810\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ConsumerPreferences (ProductID INT, ConsumerID INT, PreferenceScore INT, PRIMARY KEY (ProductID, ConsumerID)); INSERT INTO ConsumerPreferences (ProductID, ConsumerID, PreferenceScore) VALUES (1, 1, 5), (1, 2, 4), (2, 1, 3), (2, 2, 5); CREATE TABLE CrueltyFreeCertifications (ProductID INT, CertificationDate DATE, Certifier VARCHAR(50), PRIMARY KEY (ProductID, CertificationDate)); INSERT INTO CrueltyFreeCertifications (ProductID, CertificationDate, Certifier) VALUES (1, '2020-12-01', 'Leaping Bunny'), (2, '2021-03-01', 'PETA');", "output": "SELECT MostRecentCertifications.ProductID, AVG(ConsumerPreferences.PreferenceScore) as AvgScore FROM (SELECT ProductID, MAX(CertificationDate) as MaxCertificationDate FROM CrueltyFreeCertifications GROUP BY ProductID) AS MostRecentCertifications JOIN CrueltyFreeCertifications ON ProductID = MostRecentCertifications.ProductID AND CertificationDate = MostRecentCertifications.MaxCertificationDate JOIN ConsumerPreferences ON ProductID = ConsumerPreferences.ProductID GROUP BY MostRecentCertifications.ProductID;"}
{"input": " \uc219\ubc15 \uc720\ud615\ubcc4\ub85c \uc81c\uacf5\ub418\ub294 \ucd1d \uc219\ubc15 \uc2dc\uc124 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodations (ID INT PRIMARY KEY, Country VARCHAR(50), AccommodationType VARCHAR(50), Quantity INT); INSERT INTO Accommodations (ID, Country, AccommodationType, Quantity) VALUES (1, 'USA', 'Sign Language Interpretation', 300), (2, 'Canada', 'Wheelchair Ramp', 250), (3, 'Mexico', 'Assistive Listening Devices', 150);", "output": "SELECT AccommodationType, SUM(Quantity) as Total FROM Accommodations GROUP BY AccommodationType;"}
{"input": " \uc77c\ubcf8\uc5d0\uc11c \uc5f0\uc18d\uc801\uc73c\ub85c \uc2dd\uc0ac\ub97c \ud55c \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE meals (user_id INT, meal_date DATE); INSERT INTO meals (user_id, meal_date) VALUES (1, '2022-01-01'), (1, '2022-01-02'), (1, '2022-01-03'), (2, '2022-01-01'), (2, '2022-01-04'); CREATE TABLE users (user_id INT, country VARCHAR(255)); INSERT INTO users (user_id, country) VALUES (1, 'Japan'), (2, 'USA'), (3, 'Japan');", "output": "SELECT user_id FROM (SELECT user_id, meal_date, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY meal_date) - ROW_NUMBER() OVER (ORDER BY user_id, meal_date) AS grp FROM meals JOIN users ON meals.user_id = users.user_id WHERE users.country = 'Japan') t GROUP BY grp, user_id HAVING COUNT(*) > 1;"}
{"input": " \uac00\ub2a5\ud55c \uacbd\uc6b0 '\uc544\uc2dc\uc544'\uc5d0\uc11c \uac74\uc124\ub41c \uac00\uc7a5 \ube44\uc2fc \ub310 \uc0c1\uc704 3\uac1c\uc640 \uac74\uc124 \ub0a0\uc9dc\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Dams (id INT, country VARCHAR(20), continent VARCHAR(20), year INT, cost FLOAT); INSERT INTO Dams (id, country, continent, year, cost) VALUES (1, 'China', 'Asia', 2008, 8000000); INSERT INTO Dams (id, country, continent, year, cost) VALUES (2, 'India', 'Asia', 2012, 7000000); INSERT INTO Dams (id, country, continent, year, cost) VALUES (3, 'China', 'Asia', 2015, 9000000);", "output": "SELECT country, year, cost FROM (SELECT country, year, cost, RANK() OVER (PARTITION BY continent ORDER BY cost DESC) as dam_rank FROM Dams WHERE continent = 'Asia') tmp WHERE dam_rank <= 3;"}
{"input": " 2022\ub144\uc5d0 \ucc3d\uc758\uc801\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud574 \uc0dd\uc131\ub41c AI \ubaa8\ub378\uc758 \ucd1d \uc218\ub294 \uc6d4\ubcc4\ub85c \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CreativeAIs (ID INT, AI VARCHAR(255), Type VARCHAR(255), Date DATE); INSERT INTO CreativeAIs (ID, AI, Type, Date) VALUES (1, 'AI1', 'Creative', '2022-01-01'), (2, 'AI2', 'Non-Creative', '2022-01-05'), (3, 'AI3', 'Creative', '2022-02-12'), (4, 'AI4', 'Creative', '2022-03-01'), (5, 'AI5', 'Non-Creative', '2022-03-05'), (6, 'AI6', 'Creative', '2022-04-01'), (7, 'AI7', 'Creative', '2022-05-01'), (8, 'AI8', 'Non-Creative', '2022-05-05'), (9, 'AI9', 'Creative', '2022-06-01');", "output": "SELECT EXTRACT(MONTH FROM Date) as Month, COUNT(*) as Total_AI_Models FROM CreativeAIs WHERE Type = 'Creative' AND Date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Month;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ub178\uc778\uc73c\ub85c \uc2dd\ubcc4\ub41c \uc21c \ubc29\ubb38\uc790 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (EventID int, EventName varchar(50), Attendance int, VisitorAge numeric); INSERT INTO Events VALUES (1, 'Art Exhibit', 200, 65), (2, 'Music Concert', 300, 45), (3, 'Theater Play', 150, 70);", "output": "SELECT COUNT(DISTINCT VisitorAge) FROM Events WHERE EXTRACT(MONTH FROM EventDate) >= (EXTRACT(MONTH FROM CURRENT_DATE) - 6) AND VisitorAge >= 65"}
{"input": " \uce74\uc774\ub85c\uc640 \uc774\uc2a4\ud0c4\ubd88\uc758 \ud3d0\uc218 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE WasteWaterFacilities (Location VARCHAR(100), Capacity FLOAT); INSERT INTO WasteWaterFacilities (Location, Capacity) VALUES ('Cairo', 200), ('Istanbul', 250);", "output": "SELECT Location, Capacity FROM WasteWaterFacilities;"}
{"input": "\ub274\uc695\uc2dc\uc5d0\uc11c \uac00\uc7a5 \uc624\ub798\ub41c FOIA \uc694\uccad\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FoiaRequests ( RequestId INT, RequestDate DATE, RequestCity VARCHAR(255) ); INSERT INTO FoiaRequests (RequestId, RequestDate, RequestCity) VALUES (1, '2021-01-01', 'New York'), (2, '2020-01-01', 'New York'), (3, '2019-01-01', 'New York');", "output": "SELECT RequestCity, MIN(RequestDate) OVER (PARTITION BY RequestCity) as OldestRequestDate FROM FoiaRequests WHERE RequestCity = 'New York';"}
{"input": " \uac01 \uc774\ubca4\ud2b8 \uc720\ud615\ubcc4\ub85c \ucc38\uc11d\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Events (ID INT, City VARCHAR(50), EventType VARCHAR(50), AttendeeCount INT);", "output": "SELECT City, EventType, RANK() OVER(PARTITION BY EventType ORDER BY AttendeeCount DESC) FROM Events;"}
{"input": " \uba55\uc2dc\ucf54\uc640 \ube0c\ub77c\uc9c8\uc758 \uac00\uc0c1 \ud22c\uc5b4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_id INT, country TEXT); INSERT INTO countries (country_id, country) VALUES (1, 'Mexico'), (2, 'Brazil'); CREATE TABLE virtual_tours (tour_id INT, country_id INT, views INT, revenue FLOAT); INSERT INTO virtual_tours (tour_id, country_id, views, revenue) VALUES (1, 1, 500, 200.0), (2, 1, 600, 300.0), (3, 2, 700, 400.0), (4, 2, 800, 500.0);", "output": "SELECT SUM(revenue) FROM virtual_tours WHERE country_id IN (SELECT country_id FROM countries WHERE country IN ('Mexico', 'Brazil'));"}
{"input": " \uc5ec\ub7ec \ubc15\ubb3c\uad00 \uc704\uce58\uc5d0\uc11c \uc5f4\ub9ac\ub294 \ud589\uc0ac\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc29\ubb38\uac1d\uc774 \ucc38\uc11d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MuseumLocations (LocationID INT, LocationName VARCHAR(255)); INSERT INTO MuseumLocations (LocationID, LocationName) VALUES (1, 'Location 1'); INSERT INTO MuseumLocations (LocationID, LocationName) VALUES (2, 'Location 2'); CREATE TABLE Events (EventID INT, LocationID INT); INSERT INTO Events (EventID, LocationID) VALUES (1, 1); INSERT INTO Events (EventID, LocationID) VALUES (2, 1); INSERT INTO Events (EventID, LocationID) VALUES (3, 2); CREATE TABLE Visitors (VisitorID INT, VisitedMultipleLocations BOOLEAN); INSERT INTO Visitors (VisitorID, VisitedMultipleLocations) VALUES (1, true); INSERT INTO Visitors (VisitorID, VisitedMultipleLocations) VALUES (2, false); INSERT INTO Visitors (VisitorID, VisitedMultipleLocations) VALUES (3, true); CREATE TABLE VisitorEvents (VisitorID INT, EventID INT); INSERT INTO VisitorEvents (VisitorID, EventID) VALUES (1, 1); INSERT INTO VisitorEvents (VisitorID, EventID) VALUES (1, 2); INSERT INTO VisitorEvents (VisitorID, EventID) VALUES (3, 3);", "output": "SELECT COUNT(V.VisitorID) as TotalVisitors FROM Visitors V INNER JOIN VisitorEventsVE ON V.VisitorID = VE.VisitorID INNER JOIN Events E ON VE.EventID = E.EventID INNER JOIN MuseumLocations ML ON E.LocationID = ML.LocationID GROUP BY V.VisitorID HAVING COUNT(DISTINCT ML.LocationID) > 1;"}
{"input": " \uc124\uce58 \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ud0dc\uc591\uad11 \ubc1c\uc804\uc18c\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE solar_plants (name VARCHAR(255), location VARCHAR(255), capacity FLOAT); INSERT INTO solar_plants VALUES ('Plant X', 'China', 300), ('Plant Y', 'India', 250), ('Plant Z', 'USA', 200), ('Plant W', 'Australia', 180);", "output": "SELECT name, capacity FROM (SELECT name, capacity, ROW_NUMBER() OVER (ORDER BY capacity DESC) as rn FROM solar_plants) t WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uac01 \ub18d\uc7a5\uc758 \ud3c9\uade0 \uc778\uc0b0\uc5fc \ub18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farm_phosphate (farm_id INT, phosphate FLOAT, date DATE); INSERT INTO farm_phosphate (farm_id, phosphate, date) VALUES (1, 1.2, '2022-02-01'), (2, 1.5, '2022-02-01'), (3, 1.3, '2022-02-01'), (1, 1.1, '2022-02-02'), (2, 1.4, '2022-02-02'), (3, 1.6, '2022-02-02');", "output": "SELECT farm_id, AVG(phosphate) FROM farm_phosphate WHERE date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY farm_id;"}
{"input": "\uc774\ud0c8\ub9ac\uc544 \ubb38\ud654\uc720\uc0b0 \ud22c\uc5b4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cultural_tours (tour_id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO cultural_tours VALUES (1, 'Roman Colosseum Tour', 'Italy', 50000), (2, 'Italian Art Tour', 'Italy', 70000);", "output": "SELECT SUM(revenue) FROM cultural_tours WHERE country = 'Italy';"}
{"input": " \ud574\ub2f9 \uc9c1\uc704 \ubc0f \ubd80\uc11c\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uc9c1\uc6d0\uc744 \ubd80\uc11c\ubcc4\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE employee (id INT, name VARCHAR(50), gender VARCHAR(50), department_id INT, position_id INT); CREATE TABLE position (id INT, title VARCHAR(50), department_id INT); CREATE TABLE department (id INT, name VARCHAR(50));", "output": "SELECT employee.name, position.title, department.name AS department_name FROM employee INNER JOIN position ON employee.position_id = position.id INNER JOIN department ON position.department_id = department.id ORDER BY department.name ASC;"}
{"input": "APAC \ubc0f EMEA \uc9c0\uc5ed\uc758 AI \ub3c4\uad6c \ub4f1\uae09 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE ai_tools (tool_id INT, tool_name VARCHAR(50), region VARCHAR(50), rating FLOAT); INSERT INTO ai_tools (tool_id, tool_name, region, rating) VALUES (1, 'AITSG1', 'APAC', 4.3), (2, 'AITSG2', 'EMEA', 4.6), (3, 'AITSG3', 'APAC', 4.1), (4, 'AITSG4', 'EMEA', 4.4);", "output": "SELECT region, NTILE(5) OVER (PARTITION BY region ORDER BY rating) as rating_group FROM ai_tools;"}
{"input": " \uae08\uc561\uc774 $1000 \ubbf8\ub9cc\uc778 \uccad\uad6c\ub97c \uc81c\uc678\ud558\uace0 \uac01 \uc8fc\uc758 \ucd1d \uccad\uad6c \uac74\uc218\uc640 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (ClaimID INT, State VARCHAR(10), ClaimAmount INT); INSERT INTO Claims (ClaimID, State, ClaimAmount) VALUES (1, 'California', 2000);", "output": "SELECT State, COUNT(*) AS TotalClaims, AVG(ClaimAmount) AS AverageClaimAmount FROM Claims WHERE ClaimAmount >= 1000 GROUP BY State;"}
{"input": " \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uae30\uc220 \ucc44\ud0dd \ud504\ub85c\uc81d\ud2b8 \uc774\uc804\uc5d0 \uc644\ub8cc\ub41c \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE energy_projects (project_name VARCHAR(30), completion_year INT); INSERT INTO energy_projects (project_name, completion_year) VALUES ('Solar Farm 1', 2010), ('Wind Farm 2', 2015); CREATE TABLE smart_city_projects (project_name VARCHAR(30), adoption_year INT); INSERT INTO smart_city_projects (project_name, adoption_year) VALUES ('Smart Grid 1', 2020), ('Smart Transport 2', 2025);", "output": "SELECT project_name FROM energy_projects WHERE completion_year < (SELECT adoption_year FROM smart_city_projects ORDER BY adoption_year ASC LIMIT 1);"}
{"input": " 'CA' \uc9c0\uc5ed \uc0ac\uc6a9\uc790\uc758 \uac8c\uc2dc\ubb3c\ub2f9 \ud3c9\uade0 \uc88b\uc544\uc694 \uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE likes (id INT, post_id INT, user_id INT, like_count INT); INSERT INTO likes (id, post_id, user_id, like_count) VALUES (1, 1, 1, 50), (2, 2, 1, 100);", "output": "SELECT AVG(likes.like_count) FROM posts JOIN likes ON posts.id = likes.post_id JOIN users ON posts.user_id = users.id WHERE users.region = 'CA' GROUP BY posts.id;"}
{"input": " '2022\ub144 1\ubd84\uae30'\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ud314\ub808\ud2b8\ub97c \ucc98\ub9ac\ud55c \ucc3d\uace0\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Warehouse (name varchar(20), quarter int, year int, pallets_handled int); INSERT INTO Warehouse (name, quarter, year, pallets_handled) VALUES ('Warehouse A', 1, 2022, 500), ('Warehouse B', 1, 2022, 800);", "output": "SELECT name, MAX(pallets_handled) FROM Warehouse WHERE quarter = 1 AND year = 2022 GROUP BY name;"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uc0ac\ud68c\uc801 \uc774\uc775\uc5d0 \uc8fc\ub825\ud558\ub294 \uc0c1\uc704 3\uac1c \uc870\uc9c1\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE social_good (name VARCHAR(50), focus VARCHAR(50), region VARCHAR(50)); INSERT INTO social_good (name, focus, region) VALUES ('Tech for Good Europe', 'Social Good', 'Europe'), ('AI for Social Impact', 'Social Good', 'Europe'), ('Coding for Change', 'Social Good', 'Europe'), ('Data for Social Good', 'Social Good', 'Europe');", "output": "SELECT name FROM social_good WHERE region = 'Europe' ORDER BY ROW_NUMBER() OVER (ORDER BY focus DESC) LIMIT 3;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ud654\ud559\ubb3c\uc9c8 \uc81c\uc870 \uc2dc\uc124\uc744 \uac01\uac01\uc758 \uc548\uc804 \ub2f4\ub2f9\uc790 \uc774\ub984 \ubc0f \uc5f0\ub77d\ucc98 \uc804\ud654\ubc88\ud638\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE africa_facilities (facility_id INT, facility_name TEXT, safety_officer_name TEXT, safety_officer_phone TEXT); INSERT INTO africa_facilities (facility_id, facility_name, safety_officer_name, safety_officer_phone) VALUES (1, 'Facility K', 'Sara Njeri', '+254 712 345678'), (2, 'Facility L', 'Musa Seko', '+27 81 9876543'), (3, 'Facility M', 'Fatou Diop', '+221 77 1234567');", "output": "SELECT facility_name, safety_officer_name, safety_officer_phone FROM africa_facilities;"}
{"input": " \uc804\uccb4 \ud3c9\uade0\ubcf4\ub2e4 \uc7ac\ud65c\uc6a9\ub960\uc774 \ub192\uc740 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates (region VARCHAR(50), year INT, recycling_rate FLOAT); INSERT INTO recycling_rates (region, year, recycling_rate) VALUES ('North America', 2020, 0.35), ('South America', 2020, 0.30), ('Europe', 2020, 0.45), ('Asia', 2020, 0.25), ('Africa', 2020, 0.20);", "output": "SELECT region FROM recycling_rates WHERE recycling_rate > (SELECT AVG(recycling_rate) FROM recycling_rates);"}
{"input": " \ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc758 \ubc94\uc8c4 \uc0ac\uac74, \uae34\uae09 \uc804\ud654, \ud654\uc7ac \uc0ac\uac74\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE crime_incidents (id INT, borough VARCHAR(20), type VARCHAR(20)); INSERT INTO crime_incidents (id, borough, type) VALUES (1, 'Brooklyn', 'theft'), (2, 'Queens', 'burglary'); CREATE TABLE emergency_calls (id INT, borough VARCHAR(20), type VARCHAR(20)); INSERT INTO emergency_calls (id, borough, type) VALUES (1, 'Bronx', 'emergency call'); CREATE TABLE fire_incidents (id INT, borough VARCHAR(20), type VARCHAR(20)); INSERT INTO fire_incidents (id, borough, type) VALUES (1, 'Manhattan', 'fire incident');", "output": "SELECT borough, 'crime incidents' AS type, COUNT(*) FROM crime_incidents GROUP BY borough UNION ALL SELECT borough, 'emergency calls' AS type, COUNT(*) FROM emergency_calls GROUP BY borough UNION ALL SELECT borough, 'fire incidents' AS type, COUNT(*) FROM fire_incidents GROUP BY borough;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc548\uc804\uc131 \ud14c\uc2a4\ud2b8\ub97c \ubc1b\uc740 \uc790\ub3d9\ucc28 \ubaa8\ub378\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Safety_Tests (Id INT, Vehicle_Make VARCHAR(255), Vehicle_Model VARCHAR(255), Test_Year INT, Test_Result VARCHAR(255)); INSERT INTO Safety_Tests (Id, Vehicle_Make, Vehicle_Model, Test_Year, Test_Result) VALUES (1, 'Tesla', 'Model S', 2018, 'Passed'); INSERT INTO Safety_Tests (Id, Vehicle_Make, Vehicle_Model, Test_Year, Test_Result) VALUES (2, 'Toyota', 'Corolla', 2020, 'Passed'); INSERT INTO Safety_Tests (Id, Vehicle_Make, Vehicle_Model, Test_Year, Test_Result) VALUES (3, 'Honda', 'Civic', 2017, 'Failed');", "output": "SELECT Vehicle_Make, Vehicle_Model FROM Safety_Tests WHERE Test_Year BETWEEN YEAR(CURRENT_DATE) - 3 AND YEAR(CURRENT_DATE);"}
{"input": " \ucd1d \uc790\uae08\uc744 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\ub2f9 \ucd1d \uc790\uae08\uacfc \ud574\ub2f9 \uc0ac\ubd84\uc704\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists funding_data;CREATE TABLE if not exists funding_data.startups (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), year INT, funding DECIMAL(10, 2)); INSERT INTO funding_data.startups (id, name, country, year, funding) VALUES (1, 'StartupA', 'Brazil', 2018, 500000.00), (2, 'StartupB', 'Canada', 2020, 300000.00), (3, 'StartupC', 'India', 2019, 700000.00), (4, 'StartupD', 'Nigeria', 2021, 400000.00);", "output": "SELECT name, funding, NTILE(4) OVER (ORDER BY funding DESC) AS quartile FROM funding_data.startups;"}
{"input": " \uc6b0\uc8fc \uc784\ubb34\ub97c \uac00\uc7a5 \ub9ce\uc774 \uc218\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (Id INT, Name VARCHAR(50), NumberOfMissions INT); INSERT INTO Astronauts (Id, Name, NumberOfMissions) VALUES (1, 'John Glenn', 3), (2, 'Neil Armstrong', 2), (3, 'Sally Ride', 3);", "output": "SELECT Name FROM (SELECT Name, ROW_NUMBER() OVER (ORDER BY NumberOfMissions DESC) AS Rank FROM Astronauts) AS Subquery WHERE Rank = 1"}
{"input": " 2022\ub144 5\uc6d4\uc5d0 \ubc30\uc1a1\ub41c \uac00\uc7a5 \ubb34\uac70\uc6b4 \ud328\ud0a4\uc9c0 \uc0c1\uc704 5\uac1c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE package_types (id INT, name VARCHAR(255), max_weight FLOAT); INSERT INTO package_types (id, name, max_weight) VALUES (1, 'Envelope', 1.0), (2, 'Small Box', 50.0), (3, 'Medium Box', 100.0), (4, 'Large Box', 200.0), (5, 'Pallet', 500.0);", "output": "SELECT packages.id, packages.weight, package_types.name FROM packages JOIN package_types ON packages.id = package_types.id WHERE packages.weight IN (SELECT weight FROM (SELECT packages.weight FROM packages JOIN warehouse_routes ON packages.id = warehouse_routes.package_id JOIN warehouses ON warehouse_routes.warehouse_id = warehouses.id JOIN countries ON warehouses.country = countries.name WHERE countries.name = 'United States' AND packages.weight IS NOT NULL GROUP BY packages.weight ORDER BY SUM(packages.weight) DESC LIMIT 5) AS subquery) ORDER BY packages.weight DESC;"}
{"input": " \ubaa8\ub4e0 \ubaa8\ub2c8\ud130\ub9c1 \uc2a4\ud14c\uc774\uc158\uacfc \ud574\ub2f9 \ud3c9\uade0 \uc628\ub3c4 \ubc0f \uc2b5\ub3c4 \ud310\ub3c5\uac12\uc744 \ud3c9\uade0 \uc628\ub3c4\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE monitoring_stations (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE temperature_readings (id INT PRIMARY KEY, station_id INT, value FLOAT, timestamp TIMESTAMP); CREATE TABLE humidity_readings (id INT PRIMARY KEY, station_id INT, value FLOAT, timestamp TIMESTAMP);", "output": "SELECT monitoring_stations.name, AVG(temperature_readings.value) AS avg_temperature, AVG(humidity_readings.value) AS avg_humidity FROM monitoring_stations INNER JOIN temperature_readings ON monitoring_stations.id = temperature_readings.station_id INNER JOIN humidity_readings ON monitoring_stations.id = humidity_readings.station_id GROUP BY monitoring_stations.name ORDER BY avg_temperature;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ub178\ud6c4\ud654\ub85c \uc778\ud55c \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE SecurityIncidents (id INT, incident_name VARCHAR(255), cause VARCHAR(255), date DATE); INSERT INTO SecurityIncidents (id, incident_name, cause, date) VALUES (5, 'Data Breach', 'Outdated Software', '2021-03-12');", "output": "SELECT SUM(incidents) FROM (SELECT COUNT(*) AS incidents FROM SecurityIncidents WHERE cause = 'Outdated Software' AND date >= '2021-01-01' AND date < '2021-07-01' GROUP BY cause) AS subquery;"}
{"input": " 2010\ub144 \uc774\uc804\uc5d0 \uac74\uc124\ub41c \uac74\ubb3c\uc5d0 \ub300\ud574 \uac01 \uc8fc\uc5d0\ub294 \uba87 \uac1c\uc758 \ub179\uc0c9 \uac74\ubb3c\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (building_id INT, building_name VARCHAR(255), state VARCHAR(255), construction_year INT, is_green BOOLEAN); INSERT INTO green_buildings (building_id, building_name, state, construction_year, is_green) VALUES (1, 'Green Building 1', 'NY', 2008, true); INSERT INTO green_buildings (building_id, building_name, state, construction_year, is_green) VALUES (2, 'Green Building 2', 'CA', 2009, true); INSERT INTO green_buildings (building_id, building_name, state, construction_year, is_green) VALUES (3, 'Building 3', 'NY', 2012, false);", "output": "SELECT state, COUNT(*) as green_buildings_count FROM green_buildings WHERE construction_year < 2010 AND is_green = true GROUP BY state;"}
{"input": " \uc7a5\ub974\ubcc4 \uc568\ubc94\ub2f9 \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE AlbumRevenue (AlbumID INT, GenreID INT, Revenue DECIMAL(10,2)); INSERT INTO AlbumRevenue (AlbumID, GenreID, Revenue) VALUES (1, 1, 150000.00), (2, 1, 125000.00), (3, 2, 150000.00), (4, 2, 100000.00), (5, 3, 100000.00);", "output": "SELECT GenreID, AVG(Revenue) OVER (PARTITION BY GenreID) AS AvgRevenuePerAlbum FROM AlbumRevenue;"}
{"input": " \"GreenTech Solutions\"\uc5d0 \ub300\ud55c 2021\ub144\ubcf4\ub2e4 \uc624\ub798\ub41c \uc790\uae08 \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE funding (id INT PRIMARY KEY AUTO_INCREMENT, company_id INT, amount FLOAT, funding_date DATE);", "output": "DELETE FROM funding WHERE funding_date < '2021-01-01' AND company_id IN (SELECT id FROM company WHERE name = 'GreenTech Solutions');"}
{"input": " \uc720\uae30 \ud3d0\uae30\ubb3c \ube44\uc728\uc774 \ub192\uc740 \uc9c0\uc5ed\uc758 \ub9e4\ub9bd \uc6a9\ub7c9 \ud1b5\uacc4\ub294 \ubb34\uc5c7\uc774\uba70, \uc774\ub97c \uc804 \uc138\uacc4 \ud3c9\uade0\uacfc \uc5b4\ub5bb\uac8c \ube44\uad50\ud569\ub2c8\uae4c?", "context": "CREATE TABLE LandfillCapacity (Region TEXT, Capacity INTEGER, OrganicWastePercentage FLOAT); INSERT INTO LandfillCapacity (Region, Capacity, OrganicWastePercentage) VALUES ('NorthEast', 5000, 0.5), ('SouthEast', 7000, 0.4), ('MidWest', 6000, 0.3), ('SouthWest', 4000, 0.2), ('NorthWest', 8000, 0.6), ('Europe', 9000, 0.1), ('Asia', 10000, 0.7), ('GlobalAvg', 7500, 0.4);", "output": "SELECT Capacity, OrganicWastePercentage FROM LandfillCapacity WHERE OrganicWastePercentage >= (SELECT AVG(OrganicWastePercentage) FROM LandfillCapacity) UNION SELECT Capacity, OrganicWastePercentage FROM LandfillCapacity WHERE Region = 'GlobalAvg';"}
{"input": " \uc778\ub3c4\uc5d0\uc11c \uacf5\uae09\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SustainableFabrics (fabric_id INT, fabric_name VARCHAR(50), source_country VARCHAR(50), price DECIMAL(5,2), quantity INT); INSERT INTO SustainableFabrics (fabric_id, fabric_name, source_country, price, quantity) VALUES (1, 'Organic Cotton', 'India', 3.50, 200), (2, 'Recycled Polyester', 'China', 4.25, 150), (3, 'Tencel', 'Japan', 5.00, 100);", "output": "SELECT SUM(quantity) FROM SustainableFabrics WHERE source_country = 'India';"}
{"input": " 2022\ub144 5\uc6d4 \ub3d9\uc548 \ud504\ub791\uc2a4 \ud30c\ub9ac\uc5d0 \uc788\ub294 \uc544\ud504\ub9ac\uce74 \uc694\ub9ac \ub808\uc2a4\ud1a0\ub791\uc758 \uc694\ub9ac\ub2f9 \ud3c9\uade0 \uc9c0\ubc29 \ud568\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dishes (restaurant_name TEXT, cuisine TEXT, dish TEXT, fat INTEGER, dish_date DATE); INSERT INTO dishes (restaurant_name, cuisine, dish, fat, dish_date) VALUES ('Parisian Delights', 'African', 'Jollof Rice', 20, '2022-05-01');", "output": "SELECT cuisine, AVG(fat) as avg_fat FROM (SELECT restaurant_name, cuisine, dish, fat, dish_date, ROW_NUMBER() OVER (PARTITION BY cuisine, dish_date ORDER BY fat) as rn FROM dishes WHERE restaurant_name LIKE 'Paris%' AND cuisine = 'African' AND dish_date >= '2022-05-01' AND dish_date < '2022-06-01') t WHERE rn = 1 GROUP BY cuisine;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uad6c\ub3c5\uc790\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE subscribers (id INT, name VARCHAR(50), city VARCHAR(50)); INSERT INTO subscribers (id, name, city) VALUES (1, 'John Doe', 'New York'), (2, 'Jane Smith', 'Los Angeles');", "output": "SELECT city, COUNT(*) as subscriber_count FROM subscribers GROUP BY city;"}
{"input": " 2022\ub144 \ud558\ubc18\uae30 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uad11\uc0b0 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE water_consumption (mine_id INT, date DATE, water_consumption INT); INSERT INTO water_consumption (mine_id, date, water_consumption) VALUES (1, '2022-07-10', 50000); INSERT INTO water_consumption (mine_id, date, water_consumption) VALUES (2, '2022-12-05', 80000);", "output": "SELECT mine_id, water_consumption FROM (SELECT mine_id, water_consumption, ROW_NUMBER() OVER (PARTITION BY DATE_PART('year', date) * 100 + DATE_PART('quarter', date) ORDER BY water_consumption DESC) AS rank FROM water_consumption WHERE date >= '2022-07-01' AND date < '2023-01-01') subquery WHERE rank <= 3;"}
{"input": " \uc758\ub8cc \uc81c\uacf5\uc790 \uc720\ud615\ubcc4\ub85c \ud14d\uc0ac\uc2a4 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uba87 \uac1c\uc758 \ucf54\ub85c\ub09819 \ubc31\uc2e0\uc774 \ud22c\uc5ec\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE vaccinations (id INT, patient_name VARCHAR(50), healthcare_provider VARCHAR(50), provider_type VARCHAR(30), region VARCHAR(20), vaccine_type VARCHAR(50), date DATE); INSERT INTO vaccinations (id, patient_name, healthcare_provider, provider_type, region, vaccine_type, date) VALUES (1, 'Alex', 'Houston General Hospital', 'Public', 'Houston', 'Pfizer', '2021-03-15'); INSERT INTO vaccinations (id, patient_name, healthcare_provider, provider_type, region, vaccine_type, date) VALUES (2, 'Bella', 'Austin Medical Center', 'Public', 'Austin', 'Moderna', '2021-03-27'); INSERT INTO vaccinations (id, patient_name, healthcare_provider, provider_type, region, vaccine_type, date) VALUES (3, 'Charlie', 'Dallas Primary Care', 'Private', 'Dallas', 'Johnson & Johnson', '2021-04-09');", "output": "SELECT region, provider_type, COUNT(*) as num_vaccines FROM vaccinations WHERE vaccine_type = 'COVID-19' GROUP BY region, provider_type;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc640 \uc624\ub808\uace4\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \uc0dd\uc0b0 \ub77c\uc774\uc13c\uc2a4\uac00 \ubc1c\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Licenses (LicenseID INT, State TEXT, Type TEXT); INSERT INTO Licenses (LicenseID, State, Type) VALUES (1, 'Colorado', 'Production'); INSERT INTO Licenses (LicenseID, State, Type) VALUES (2, 'Oregon', 'Production');", "output": "SELECT COUNT(*) FROM Licenses WHERE State IN ('Colorado', 'Oregon') AND Type = 'Production';"}
{"input": "\uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \ud504\ub85c\uadf8\ub7a8 \ube44\uc6a9 \uae30\ub85d\uc744 \uc0bd\uc785\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE programs (id INT, name VARCHAR(255)); INSERT INTO programs (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Social Services');", "output": "INSERT INTO program_expenses (id, program_id, amount) SELECT ROW_NUMBER() OVER (ORDER BY p.id) AS id, p.id AS program_id, 1000 AS amount FROM programs p;"}
{"input": " \uace0\uc720\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 ID\uc640 \uac01 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \ucf00\uc774\uc2a4 \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cases (id INT, client_id INT); INSERT INTO cases (id, client_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (6, 3);", "output": "SELECT client_id, COUNT(*) AS num_cases FROM cases GROUP BY client_id ORDER BY num_cases DESC;"}
{"input": " \uad6d\uac00\ubcc4 2019\ub144\uacfc 2020\ub144 \uac00\ub3cc\ub9ac\ub284 \uc0dd\uc0b0\ub7c9\uc744 \ube44\uad50\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE gadolinium_production (country VARCHAR(50), year INT, quantity INT);", "output": "SELECT country, 2019 AS year, quantity AS production_2019, NULL AS production_2020 FROM gadolinium_production WHERE year = 2019 UNION ALL SELECT country, 2020 AS year, NULL AS production_2019, quantity AS production_2020 FROM gadolinium_production WHERE year = 2020;"}
{"input": " \ubd84\uae30\ubcc4\ub85c \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program_quarters (program_quarter DATE, program_id INT);", "output": "SELECT p.program_name, QUARTER(pq.program_quarter) AS program_quarter, SUM(pr.revenue) FROM programs p JOIN program_quarters pq ON p.program_id = pq.program_id JOIN program_revenue pr ON p.program_id = pr.program_id GROUP BY program_quarter, p.program_name;"}
{"input": " \uc9c8\ubcd1\ubd84\uc57c\ubcc4 \ucd1d R&D \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rd_expenditure (drug_name TEXT, disease_area TEXT, rd_cost INTEGER); INSERT INTO rd_expenditure (drug_name, disease_area, rd_cost) VALUES ('DrugA', 'Oncology', 20000000), ('DrugB', 'Cardiovascular', 15000000), ('DrugC', 'Oncology', 30000000), ('DrugD', 'Neurology', 25000000);", "output": "SELECT disease_area, SUM(rd_cost) FROM rd_expenditure GROUP BY disease_area;"}
{"input": " \uc9c0\ub09c \ub2ec 'ACME Carriers'\ub97c \ud1b5\ud574 '\ub3c4\ucfc4' \ucc3d\uace0\uc5d0\uc11c '\uc77c\ubcf8'\uc73c\ub85c \ubc30\uc1a1\ub41c \ud314\ub808\ud2b8\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ud574\ub2f9 \ubc30\uc1a1 \uc911 \uc190\uc0c1\ub41c \ud314\ub808\ud2b8\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(50), city VARCHAR(50));CREATE TABLE carrier (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE shipment (id INT PRIMARY KEY, warehouse_id INT, carrier_id INT, pallet_count INT, damaged_count INT, shipped_date DATE);", "output": "SELECT SUM(shipment.pallet_count), SUM(shipment.damaged_count) FROM shipment WHERE shipment.warehouse_id = (SELECT id FROM warehouse WHERE city = 'Tokyo') AND shipment.carrier_id = (SELECT id FROM carrier WHERE name = 'ACME Carriers') AND shipment.shipped_date BETWEEN (CURRENT_DATE - INTERVAL '30 days') AND CURRENT_DATE;"}
{"input": " VR \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ub2e8\uc77c \uc138\uc158\ub2f9 \ucd5c\ub300 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE player_sessions (id INT, player_id INT, playtime INT, uses_vr BOOLEAN); INSERT INTO player_sessions (id, player_id, playtime, uses_vr) VALUES (1, 1, 120, true), (2, 2, 90, false), (3, 3, 150, true), (4, 4, 300, true), (5, 5, 60, false), (6, 6, 700, true);", "output": "SELECT MAX(playtime) FROM player_sessions WHERE uses_vr = true;"}
{"input": " \uc6cc\uc2f1\ud134\uc758 \ub300\ub9c8\ucd08 \uaf43 \ud488\uc885\uc744 \uadf8\ub7a8\ub2f9 \ud3c9\uade0 \uc18c\ub9e4 \uac00\uaca9\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Sales (Sale_ID INT, Strain TEXT, Retail_Price DECIMAL); INSERT INTO Sales (Sale_ID, Strain, Retail_Price) VALUES (1, 'White Widow', 18.00); CREATE TABLE Dispensaries (Dispensary_ID INT, Dispensary_Name TEXT, State TEXT); INSERT INTO Dispensaries (Dispensary_ID, Dispensary_Name, State) VALUES (1, 'Washington Weed', 'WA');", "output": "SELECT Strain, AVG(Retail_Price) as Avg_Price, RANK() OVER (ORDER BY AVG(Retail_Price) DESC) as Rank FROM Sales JOIN Dispensaries ON Sales.State = Dispensaries.State WHERE State = 'WA' GROUP BY Strain;"}
{"input": " \uc804\ub144\ub3c4\uc5d0\ub9cc \uae30\ubd80\ub97c \ubc1b\uc740 \ubc94\uc8fc\ub97c \uc81c\uc678\ud558\uace0 \uae08\ub144\uc5d0 \uae30\ubd80\ub97c \ubc1b\uc740 \ud504\ub85c\uadf8\ub7a8 \ubc94\uc8fc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donation_dates (donation_id INT, donation_year INT, program_category VARCHAR(20)); INSERT INTO donation_dates VALUES (1, 2021, 'Arts'), (2, 2022, 'Education'), (3, 2022, 'Health'), (4, 2021, 'Science'), (5, 2022, 'Arts');", "output": "SELECT program_category FROM donation_dates WHERE donation_year = YEAR(CURRENT_DATE) AND program_category NOT IN (SELECT program_category FROM donation_dates WHERE donation_year = YEAR(CURRENT_DATE) - 1) GROUP BY program_category;"}
{"input": " \ud3c9\uade0 \uae30\ubd80\uae08\uc561\ubcf4\ub2e4 \ub354 \ub9ce\uc774 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorName VARCHAR(50), DonationAmount DECIMAL(10,2)); INSERT INTO Donors (DonorName, DonationAmount) VALUES ('John Smith', 5000.00), ('Jane Doe', 3000.00), ('Mike Johnson', 7000.00), ('Sara Connor', 6000.00);", "output": "SELECT DonorName FROM Donors WHERE DonationAmount > (SELECT AVG(DonationAmount) FROM Donors);"}
{"input": " 'The New York Times'\uc640 'The Washington Post'\uc758 '\uae30\ud6c4 \ubcc0\ud654' \uad00\ub828 \uae30\uc0ac\uc5d0 \uc0ac\uc6a9\ub41c \uace0\uc720 \ud0dc\uadf8\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE nytimes (id INT, title VARCHAR(255), content TEXT, tags TEXT, pub_date DATE); INSERT INTO nytimes (id, title, content, tags, pub_date) VALUES (1, 'Title1', 'Content1', 'climate change,tag1', '2022-01-01'); CREATE TABLE wa_post (id INT, title VARCHAR(255), content TEXT, tags TEXT, pub_date DATE); INSERT INTO wa_post (id, title, content, tags, pub_date) VALUES (1, 'Title2', 'Content2', 'climate change,tag2', '2022-01-02');", "output": "SELECT DISTINCT trim(SPLIT_PART(tags, ',', n)) as tag FROM (SELECT tags, generate_series(1, ARRAY_LENGTH(string_to_array(tags, ','))) as n FROM (SELECT tags FROM nytimes WHERE lower(tags) like '%climate change%' UNION ALL SELECT tags FROM wa_post WHERE lower(tags) like '%climate change%') subquery) sq;"}
{"input": " \uc544\uc2dc\uc544\uc758 '\uc624\ud06c' \uc885\uc758 \ucd1d \ud0c4\uc18c \uaca9\ub9ac\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255)); INSERT INTO regions (id, name) VALUES (1, 'Europe'); INSERT INTO regions (id, name) VALUES (2, 'North America'); INSERT INTO regions (id, name) VALUES (3, 'Asia'); CREATE TABLE species (id INT PRIMARY KEY, name VARCHAR(255)); INSERT INTO species (id, name) VALUES (1, 'Spruce'); INSERT INTO species (id, name) VALUES (2, 'Pine'); INSERT INTO species (id, name) VALUES (3, 'Oak'); CREATE TABLE carbon_sequestration (region_id INT, species_id INT, sequestration INT); INSERT INTO carbon_sequestration (region_id, species_id, sequestration) VALUES (3, 3, 12000000);", "output": "SELECT SUM(carbon_sequestration.sequestration) FROM carbon_sequestration INNER JOIN regions ON carbon_sequestration.region_id = regions.id INNER JOIN species ON carbon_sequestration.species_id = species.id WHERE species.name = 'Oak' AND regions.name = 'Asia';"}
{"input": " 2018\ub144\ubd80\ud130 2019\ub144 \uc0ac\uc774\uc5d0 \uc5b4\ub5a4 AI \uc54c\uace0\ub9ac\uc998\uc774 \ub9cc\ub4e4\uc5b4\uc84c\ub098\uc694?", "context": "CREATE TABLE safe_algorithm (id INT, name VARCHAR(50), description TEXT, created_date DATE); INSERT INTO safe_algorithm (id, name, description, created_date) VALUES (1, 'SHAP', 'An explainable AI technique...', '2018-05-01'), (2, 'Lime', 'Another explainable AI technique...', '2019-02-03');", "output": "SELECT * FROM safe_algorithm WHERE created_date BETWEEN '2018-01-01' AND '2019-12-31';"}
{"input": " \uac01 \uc120\ubc15\uc774 \uc774\ub3d9\ud55c \ud654\ubb3c\uc758 \ucd1d \uc911\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ships (id INT, name VARCHAR(50)); CREATE TABLE visits (ship_id INT, port_id INT, visit_date DATE); CREATE TABLE cargo_weights (id INT, visit_id INT, weight INT); INSERT INTO ships (id, name) VALUES (1, 'Sealand Pride'), (2, 'Cosco Hope'), (3, 'MSC Anna'), (4, 'Ever Given'), (5, 'HMM Algeciras'); INSERT INTO visits (ship_id, port_id, visit_date) VALUES (1, 1, '2020-01-01'), (1, 2, '2020-02-01'), (2, 3, '2019-01-15'), (3, 1, '2020-03-01'), (4, 4, '2020-04-01'), (5, 5, '2020-05-01'); INSERT INTO cargo_weights (id, visit_id, weight) VALUES (1, 1, 500), (2, 1, 800), (3, 2, 1200), (4, 3, 1000), (5, 4, 1500), (6, 5, 2000);", "output": "SELECT ships.name, SUM(cargo_weights.weight) FROM ships INNER JOIN visits ON ships.id = visits.ship_id INNER JOIN cargo_weights ON visits.id = cargo_weights.visit_id GROUP BY ships.name;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uadf8\ub9bc\uc774 \ud558\ub098\ub9cc \uc788\ub294 \uc608\uc220\uac00\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (ArtistID INT, Name VARCHAR(255), BirthYear INT, DeathYear INT); CREATE TABLE Paintings (PaintingID INT, Title VARCHAR(255), ArtistID INT, YearCreated INT); INSERT INTO Artists (ArtistID, Name, BirthYear, DeathYear) VALUES (1, 'Vincent van Gogh', 1853, 1890), (2, 'Pablo Picasso', 1881, 1973); INSERT INTO Paintings (PaintingID, Title, ArtistID, YearCreated) VALUES (1, 'Starry Night', 1, 1889), (2, 'Wheat Field with Cypresses', 1, 1889), (3, 'The Weeping Woman', 2, 1937);", "output": "SELECT Artists.Name FROM Artists INNER JOIN (SELECT ArtistID, COUNT(*) as Paintings FROM Paintings GROUP BY ArtistID HAVING COUNT(*) = 1) as OnePainting ON Artists.ArtistID = OnePainting.ArtistID;"}
{"input": " image_date > '2021-07-01'\uc778 'Field15' \ubc0f 'Field16'\uc5d0 \ub300\ud55c \ud1a0\uc591 \uc0d8\ud50c \uc218\uc640 \ud574\ub2f9 \uc704\uc131 \uc774\ubbf8\uc9c0 \ud68d\ub4dd \ub0a0\uc9dc\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Field15 (soil_sample_id INT, image_date DATETIME); INSERT INTO Field15 (soil_sample_id, image_date) VALUES (1, '2021-07-02 14:30:00'), (2, '2021-07-03 09:15:00'); CREATE TABLE Field16 (soil_sample_id INT, image_date DATETIME); INSERT INTO Field16 (soil_sample_id, image_date) VALUES (3, '2021-07-04 10:00:00'), (4, '2021-07-05 11:00:00');", "output": "SELECT COUNT(*) FROM (SELECT soil_sample_id FROM Field15 WHERE image_date > '2021-07-01' UNION SELECT soil_sample_id FROM Field16 WHERE image_date > '2021-07-01');"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc\uc758 \uae30\ubd80\uc790 1\uc778\ub2f9 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount DECIMAL, DonationDate DATE, City TEXT); INSERT INTO Donors (DonorID, DonorName, DonationAmount, DonationDate, City) VALUES (1, 'John Doe', 50.00, '2022-01-01', 'New York'), (2, 'Jane Smith', 100.00, '2022-01-05', 'Los Angeles'), (3, 'Mike Johnson', 75.00, '2022-01-10', 'Chicago'), (4, 'Sara Brown', 150.00, '2022-01-15', 'New York'), (5, 'David Williams', 25.00, '2022-01-20', 'Los Angeles');", "output": "SELECT City, DonorName, SUM(DonationAmount) AS TotalDonationAmount FROM Donors GROUP BY City, DonorName HAVING City = 'New York';"}
{"input": " 2021\ub144\uc5d0\ub294 \uc544\uc2dc\uc544\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uc774\ub2c8\uc154\ud2f0\ube0c\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainability_initiatives (location VARCHAR(50), year INT); INSERT INTO sustainability_initiatives (location, year) VALUES ('Bali, Indonesia', 2021), ('Bangkok, Thailand', 2021), ('Siem Reap, Cambodia', 2021), ('Hanoi, Vietnam', 2021);", "output": "SELECT COUNT(*) as total_initiatives FROM sustainability_initiatives WHERE location LIKE '%Asia%' AND year = 2021;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc6d4\ubcc4 \ucd1d \uc218\uc775\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE membership (id INT, user_id INT, region VARCHAR(20), monthly_fee INT);", "output": "SELECT region, TO_CHAR(session_date, 'Month') as month, SUM(monthly_fee) as total_revenue FROM membership GROUP BY region, month ORDER BY total_revenue DESC;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \ube44\uc6a9\uc744 \uacc4\uc0b0\ud558\uace0 \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE community_development_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), sector VARCHAR(255), cost FLOAT); INSERT INTO community_development_projects (id, project_name, location, sector, cost) VALUES (1, 'Community Center', 'Village A', 'Community', 18000.00), (2, 'Community Health Center', 'Village B', 'Community', 35000.00), (3, 'Sports Facility', 'Village C', 'Community', 12000.00), (4, 'Public Library', 'Village D', 'Community', 24000.00);", "output": "SELECT location, AVG(cost) AS avg_cost, RANK() OVER (ORDER BY AVG(cost)) AS location_rank FROM community_development_projects GROUP BY location ORDER BY avg_cost ASC;"}
{"input": " 2023\ub144 1\ubd84\uae30\uc640 2\ubd84\uae30\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\uae30 \uc790\ub3d9\ucc28\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SalesData (SaleID INT, VehicleID INT, Country TEXT, SaleDate DATE);", "output": "SELECT COUNT(*) FROM SalesData WHERE Country = 'United States' AND SaleDate >= '2023-01-01' AND SaleDate < '2023-07-01';"}
{"input": " 2015\ub144\uacfc 2018\ub144 \ubaa8\ub450 \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc744 \ubcf4\uc778 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region_timber_2015 (region VARCHAR(255), production FLOAT); INSERT INTO region_timber_2015 (region, production) VALUES ('Region A', 1000.0), ('Region B', 1500.0), ('Region C', 800.0); CREATE TABLE region_timber_2018 (region VARCHAR(255), production FLOAT); INSERT INTO region_timber_2018 (region, production) VALUES ('Region A', 1200.0), ('Region B', 1800.0), ('Region D', 1600.0);", "output": "SELECT region FROM region_timber_2015 WHERE production > (SELECT AVG(production) FROM region_timber_2015) INTERSECT SELECT region FROM region_timber_2018 WHERE production > (SELECT AVG(production) FROM region_timber_2018);"}
{"input": "\uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uac01 \ud56d\uacf5\uae30 \ubaa8\ub378\uc758 \uc5f0\uc18d \ube44\ud589 \uac04 \ube44\ud589 \uc2dc\uac04 \ucc28\uc774\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE AircraftFlightHours (AircraftID INT, Model VARCHAR(50), Manufacturer VARCHAR(50), FlightHours INT, PreviousFlightHours INT); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours, PreviousFlightHours) VALUES (1, '747', 'Boeing', 55000, NULL); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours, PreviousFlightHours) VALUES (2, 'A320', 'Airbus', 35000, NULL); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours, PreviousFlightHours) VALUES (3, 'CRJ', 'Bombardier', 20000, NULL); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours, PreviousFlightHours) VALUES (4, '747', 'Boeing', 60000, 55000); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours, PreviousFlightHours) VALUES (5, 'A320', 'Airbus', 38000, 35000);", "output": "SELECT Model, Manufacturer, FlightHours, PreviousFlightHours, FlightHours - LAG(FlightHours) OVER (PARTITION BY Manufacturer ORDER BY FlightHours) AS Flight_Hour_Difference FROM AircraftFlightHours;"}
{"input": " UNION\uc744 \uc0ac\uc6a9\ud558\uc5ec 'Rural Area X'\uc758 \ubaa8\ub4e0 \ubcf4\uc874 \uacc4\ud68d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Conservation_Initiatives (id INT, location VARCHAR(255), initiative_type VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO Conservation_Initiatives (id, location, initiative_type, start_date, end_date) VALUES (1, 'City C', 'Rainwater Harvesting', '2021-01-01', '2021-12-31'), (2, 'City D', 'Water Recycling', '2021-01-01', '2021-12-31'), (3, 'Rural Area X', 'Soil Moisture Conservation', '2021-01-01', '2021-12-31'), (4, 'Rural Area X', 'Drip Irrigation', '2021-01-01', '2021-12-31');", "output": "SELECT location, initiative_type FROM Conservation_Initiatives WHERE location = 'Rural Area X' UNION SELECT location, initiative_type FROM Conservation_Initiatives WHERE initiative_type = 'Soil Moisture Conservation' OR initiative_type = 'Drip Irrigation';"}
{"input": " \uc720\uae30\ub18d \ud654\uc7a5\ud488 \uc0c1\uc704 3\uac1c \uace0\uac1d\uc758 \uc774\ub984\uacfc \uad6d\uac00\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE purchases (id INT, customer_id INT, product_id INT, quantity INT); CREATE TABLE products (id INT, name VARCHAR(50), organic BOOLEAN);", "output": "SELECT customers.name, customers.country FROM customers JOIN purchases ON customers.id = purchases.customer_id JOIN products ON purchases.product_id = products.id WHERE products.organic = TRUE GROUP BY customers.id ORDER BY SUM(purchases.quantity) DESC LIMIT 3;"}
{"input": " \ud3c9\uc0dd\ud559\uc2b5 \uc9c4\ucc99\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \ud559\uc0dd\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning (student_id INT, progress INT); INSERT INTO lifelong_learning (student_id, progress) VALUES (1, 25), (2, 50), (3, 75), (4, 100);", "output": "SELECT student_id, RANK() OVER (ORDER BY progress DESC) as rank FROM lifelong_learning WHERE rank = 1;"}
{"input": " ride_distance\ub97c \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ube44\uc2fc \uc804\uae30 \ud0dd\uc2dc \ud0d1\uc2b9 \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE taxi_trips (ride_id INT, ride_start_time TIMESTAMP, ride_end_time TIMESTAMP, ride_distance FLOAT, fare FLOAT, vehicle_type VARCHAR(10));", "output": "SELECT ride_id, ride_distance, fare FROM (SELECT ride_id, ride_distance, fare, ROW_NUMBER() OVER (PARTITION BY vehicle_type ORDER BY ride_distance DESC, fare DESC) AS rank FROM taxi_trips WHERE vehicle_type = 'Electric Taxi') AS subquery WHERE rank <= 3;"}
{"input": " 2022\ub144 fieldE\uc5d0\uc11c \uc2b5\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE fieldE (humidity FLOAT, date DATE); INSERT INTO fieldE (humidity, date) VALUES (78.5, '2022-01-01'), (81.3, '2022-01-02');", "output": "SELECT date FROM (SELECT date, RANK() OVER (ORDER BY humidity DESC) as rnk FROM fieldE WHERE EXTRACT(YEAR FROM date) = 2022) WHERE rnk <= 2;"}
{"input": " GB \ubc0f \uad6d\uac00\ubcc4 \uc0ac\uc6a9\ub7c9\uc744 \ud3ec\ud568\ud558\uc5ec \uc9c0\ub09c \ubd84\uae30\uc758 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uba85\uc758 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, country VARCHAR(50), data_usage DECIMAL(10,2));CREATE VIEW last_quarter_data AS SELECT subscriber_id, MAX(date_time) AS max_date_time FROM mobile_usages WHERE date_time >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY subscriber_id;", "output": "SELECT ms.subscriber_id, ms.country, mu.data_usage FROM mobile_subscribers ms JOIN last_quarter_data lqd ON ms.subscriber_id = lqd.subscriber_id JOIN mobile_usages mu ON ms.subscriber_id = mu.subscriber_id AND lqd.max_date_time = mu.date_time ORDER BY mu.data_usage DESC LIMIT 5;"}
{"input": " 2021\ub144 \uac01 \ubd84\uae30\uc5d0 \uad6c\ub9e4\ud55c \uc2e0\uaddc \uace0\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, purchase_date DATE); INSERT INTO customers (customer_id, purchase_date) VALUES (1, '2021-01-01'), (2, '2021-02-01'), (3, '2021-01-15'), (4, '2021-04-01'), (5, '2021-07-01');", "output": "SELECT DATE_TRUNC('quarter', purchase_date) as quarter, COUNT(DISTINCT customer_id) as new_customers FROM customers WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY quarter;"}
{"input": " \uac01 \uce74\uc6b4\ud2f0\uc5d0 \ub300\ud574 90\uc810\uc744 \ucd08\uacfc\ud558\ub294 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc810\uc218\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MentalHealthParity (WorkerID INT, County CHAR(20), ParityScore INT); INSERT INTO MentalHealthParity (WorkerID, County, ParityScore) VALUES (1, 'Los Angeles', 95), (2, 'Harris', 88), (3, 'Los Angeles', 92), (4, 'Harris', 85);", "output": "SELECT County, 100.0 * COUNT(CASE WHEN ParityScore > 90 THEN 1 END) OVER (PARTITION BY County) / COUNT(*) OVER (PARTITION BY County) AS Percentage FROM MentalHealthParity;"}
{"input": " \ud658\uacbd \uc601\ud5a5 \ud3c9\uac00\uac00 60\uc810 \ubbf8\ub9cc\uc778 \uc778\ub3c4\uc758 \ud0c4\uad11 \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mines (id INT, name TEXT, location TEXT, eia_score INT); INSERT INTO mines (id, name, location, eia_score) VALUES (1, 'Indian Coal Mine', 'India', 55); INSERT INTO mines (id, name, location, eia_score) VALUES (2, 'Mumbai Coal Mine', 'India', 65);", "output": "SELECT COUNT(*) FROM mines WHERE location = 'India' AND eia_score < 60;"}
{"input": " \uacf5\uae09\uc5c5\uccb4 \uc704\uce58\ubcc4\ub85c \uad6c\ubd84\ub418\uace0 \uacf5\uae09\uc5c5\uccb4 \uc774\ub984\ubcc4\ub85c \uc815\ub82c\ub41c \uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c \uc81c\ud488\uc758 \ud3c9\uade0 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vendor (VendorID INT, VendorName VARCHAR(50), Location VARCHAR(50), QuantitySold INT); INSERT INTO Vendor VALUES (1, 'VendorA', 'LocationA', 50), (2, 'VendorB', 'LocationB', 75);", "output": "SELECT VendorName, AVG(QuantitySold) OVER (PARTITION BY Location ORDER BY VendorName) AS AvgQuantitySoldByVendor FROM Vendor;"}
{"input": " 'Fessel F'\uac00 \ud654\ubb3c\uc744 \uc6b4\uc1a1\ud55c \ud56d\uad6c\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (port_id INT, port_name VARCHAR(50)); CREATE TABLE vessel (vessel_id INT, vessel_name VARCHAR(50)); CREATE TABLE transport (transport_id INT, cargo_id INT, vessel_id INT, port_id INT); INSERT INTO port (port_id, port_name) VALUES (1, 'Port of New York'), (2, 'Port of Miami'), (3, 'Port of Boston'); INSERT INTO vessel (vessel_id, vessel_name) VALUES (1, 'Vessel F'), (2, 'Vessel G'); INSERT INTO transport (transport_id, cargo_id, vessel_id, port_id) VALUES (1, 1, 1, 1), (2, 2, 1, 2), (3, 3, 2, 3);", "output": "SELECT port_name FROM port WHERE port_id IN (SELECT port_id FROM transport WHERE vessel_id = (SELECT vessel_id FROM vessel WHERE vessel_name = 'Vessel F'))"}
{"input": " \uc9c0\ub09c 7\uc77c \ub3d9\uc548 '\uc559\ud2b8\ub808' \uce74\ud14c\uace0\ub9ac\uc758 \uc77c\uc77c \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_engineering (menu_category VARCHAR(255), date DATE, daily_revenue DECIMAL(10,2)); INSERT INTO menu_engineering (menu_category, date, daily_revenue) VALUES ('Entrees', '2022-01-01', 200.00), ('Entrees', '2022-01-02', 250.00), ('Entrees', '2022-01-03', 300.00), ('Entrees', '2022-01-04', 350.00), ('Entrees', '2022-01-05', 400.00), ('Entrees', '2022-01-06', 450.00), ('Entrees', '2022-01-07', 500.00);", "output": "SELECT daily_revenue FROM menu_engineering WHERE menu_category = 'Entrees' AND date >= (SELECT DATE(NOW()) - INTERVAL 7 DAY);"}
{"input": " '\uc5d4\ud130\ud14c\uc778\uba3c\ud2b8' \uce74\ud14c\uace0\ub9ac\uc5d0 \ud558\ub8e8\uc5d0 \uac8c\uc2dc\ub418\ub294 \uae30\uc0ac \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE articles_by_day (day DATE, category TEXT, article_count INT); INSERT INTO articles_by_day (day, category, article_count) VALUES ('2022-01-01', 'Entertainment', 3), ('2022-01-02', 'Sports', 2), ('2022-01-01', 'Entertainment', 1);", "output": "SELECT day, category, SUM(article_count) as total FROM articles_by_day WHERE category = 'Entertainment' GROUP BY day;"}
{"input": " 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ud3ec\ud2b8\ud3f4\ub9ac\uc624\uc758 \uc870\uac01\ud488 \uc218\uac00 \uac00\uc7a5 \ud06c\uac8c \uc99d\uac00\ud55c \uc608\uc220\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ArtistSculptures (ArtistID INT, Year INT, TotalSculptures INT); INSERT INTO ArtistSculptures (ArtistID, Year, TotalSculptures) VALUES (1, 2020, 450), (1, 2021, 550), (2, 2020, 220), (2, 2021, 180), (3, 2020, 290), (3, 2021, 310);", "output": "SELECT ArtistID, (LAG(TotalSculptures, 1) OVER (PARTITION BY ArtistID ORDER BY Year) - TotalSculptures) AS Increase FROM ArtistSculptures WHERE Year = 2021 ORDER BY Increase DESC LIMIT 1;"}
{"input": " \ubc15\ubb3c\uad00 A\uc640 \ubc15\ubb3c\uad00 B\uc758 \ubbf8\uc220\ud488\uacfc \uc5ed\uc0ac\uc801 \uc720\ubb3c\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE MuseumA(id INT, type VARCHAR(20), artist VARCHAR(30)); CREATE TABLE MuseumB(id INT, type VARCHAR(20), artist VARCHAR(30)); INSERT INTO MuseumA(id, type, artist) VALUES (1, 'Painting', 'Van Gogh'), (2, 'Sculpture', 'Rodin'); INSERT INTO MuseumB(id, type, artist) VALUES (1, 'Painting', 'Monet'), (2, 'Installation', 'Kusama');", "output": "SELECT COUNT(*) FROM MuseumA UNION ALL SELECT COUNT(*) FROM MuseumB;"}
{"input": " '\uc790\uc804\uac70 \ub300\uc5ec' \uc2dc\uc2a4\ud15c\uc758 '\uc2dc\uccad'\uc5ed\uc5d0\uc11c \ub300\uc5ec \uac00\ub2a5\ud55c \ucd1d \uc790\uc804\uac70 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE BikeRental (id INT, station VARCHAR(20), num_bikes INT); INSERT INTO BikeRental (id, station, num_bikes) VALUES (1, 'City Hall', 30), (2, 'Penn Station', 25);", "output": "SELECT SUM(num_bikes) FROM BikeRental WHERE station = 'City Hall';"}
{"input": " 2020\ub144 \uac01 \uc720\uc815\uc758 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE production_figures (well_name VARCHAR(255), year INT, monthly_production INT); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well A', 2018, 90000); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well A', 2019, 110000); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well A', 2020, 130000); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well B', 2018, 105000); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well B', 2019, 125000); INSERT INTO production_figures (well_name, year, monthly_production) VALUES ('Well B', 2020, 145000);", "output": "SELECT well_name, SUM(monthly_production) FROM production_figures WHERE year = 2020 GROUP BY well_name"}
{"input": " \uc9c0\ub09c \ubd84\uae30 '\uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158' \uc790\uc0b0 \uc720\ud615\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uc0c1\uc704 5\uac1c \ucde8\uc57d\uc810\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE webapp_vulnerabilities (id INT, asset_type VARCHAR(50), vulnerability_count INT, vulnerability_date DATE);", "output": "SELECT asset_type, vulnerability_count, vulnerability_date, RANK() OVER (PARTITION BY asset_type ORDER BY vulnerability_count DESC) as rank FROM webapp_vulnerabilities WHERE asset_type = 'web application' AND vulnerability_date >= DATEADD(quarter, -1, GETDATE()) AND rank <= 5;"}
{"input": " 2019\ub144 '\ud2b8\ub85c\uc774' \ubc1c\uad74\ud604\uc7a5\uc5d0\uc11c \ubc1c\uacac\ub41c \uc720\ubb3c\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSites (site_id INT, site_name VARCHAR(50)); CREATE TABLE Artifacts (artifact_id INT, site_id INT, discovered_year INT); INSERT INTO ExcavationSites (site_id, site_name) VALUES (2, 'Troy'); INSERT INTO Artifacts (artifact_id, site_id, discovered_year) VALUES (1, 2, 2019), (2, 2, 2018), (3, 2, 2019), (4, 2, 2017);", "output": "SELECT COUNT(*) FROM Artifacts WHERE site_id = (SELECT site_id FROM ExcavationSites WHERE site_name = 'Troy') AND discovered_year = 2019;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uc778\uad6c\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc640 \uac00\uc7a5 \ub0ae\uc740 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE IndigenousCommunities (name VARCHAR(50), country VARCHAR(50), population INT); INSERT INTO IndigenousCommunities (name, country, population) VALUES ('Community A', 'Canada', 1500), ('Community B', 'Canada', 2000), ('Community C', 'Canada', 2500), ('Community D', 'Canada', 1000), ('Community E', 'Canada', 1800);", "output": "SELECT name, population FROM (SELECT name, population, ROW_NUMBER() OVER (ORDER BY population DESC) AS rank FROM IndigenousCommunities WHERE country = 'Canada') tmp WHERE rank = 1 OR rank = (SELECT COUNT(*) FROM IndigenousCommunities WHERE country = 'Canada' AND population != (SELECT MAX(population) FROM IndigenousCommunities WHERE country = 'Canada'));"}
{"input": " 2022\ub144 \ub098\uc774\ub85c\ube44\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud50c\ub77c\uc2a4\ud2f1 \ud3d0\uae30\ubb3c \uae30\ub85d\uc774 \uc0bd\uc785\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE waste_data (city VARCHAR(50), waste_type VARCHAR(50), year INT, records INT); INSERT INTO waste_data (city, waste_type, year, records) VALUES ('Nairobi', 'Plastic', 2022, 1200), ('Nairobi', 'Paper', 2022, 1500), ('Nairobi', 'Glass', 2022, 800);", "output": "SELECT SUM(records) FROM waste_data WHERE city = 'Nairobi' AND waste_type = 'Plastic' AND year = 2022;"}
{"input": " \uc591\uc2dd\uc7a5 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \ub2f4\uc218 \uc591\uc2dd\uc7a5\uc758 \uc5b4\ub958 \ud3c9\uade0 \uc785\uc2dd \ubc00\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farm (farm_id INT, farm_type VARCHAR(20), water_type VARCHAR(10), stocking_density FLOAT); INSERT INTO farm VALUES (1, 'Pond', 'Freshwater', 5000), (2, 'Cage', 'Freshwater', 20000), (3, 'Recirculating', 'Freshwater', 30000);", "output": "SELECT farm_type, AVG(stocking_density) FROM farm WHERE water_type = 'Freshwater' GROUP BY farm_type;"}
{"input": " '\ubbf8\uc220\uc804\uc2dc\ud68c' \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud55c \ucd1d \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE event_attendance_3 (event VARCHAR(255), attendees INT); INSERT INTO event_attendance_3 (event, attendees) VALUES ('Art Exhibit', 500), ('Art Exhibit', 200), ('Dance Performance', 300);", "output": "SELECT event, SUM(attendees) FROM event_attendance_3 GROUP BY event HAVING event = 'Art Exhibit';"}
{"input": " \uac01 \ud559\uacfc\ubcc4 \uc5ec\uc131 \uad50\uc218\uc9c4\uacfc \ub17c\ubc14\uc774\ub108\ub9ac \uad50\uc218\uc9c4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE departments (id INT, name VARCHAR(255)); INSERT INTO departments (id, name) VALUES (1, 'Biology'), (2, 'Mathematics'), (3, 'Sociology'); CREATE TABLE faculty (id INT, name VARCHAR(255), department_id INT, gender VARCHAR(10)); INSERT INTO faculty (id, name, department_id, gender) VALUES (1, 'Alice', 1, 'Female'), (2, 'Bob', 2, 'Male'), (3, 'Charlie', 3, 'Non-binary'), (4, 'Dave', 1, 'Male'), (5, 'Eve', 3, 'Female');", "output": "SELECT d.name, g.gender, COUNT(f.id) * 100.0 / SUM(COUNT(f.id)) OVER (PARTITION BY d.name)  FROM faculty f JOIN departments d ON f.department_id = d.id JOIN (VALUES ('Female'), ('Non-binary')) AS g(gender) ON f.gender = g.gender GROUP BY d.name, g.gender;"}
{"input": " \uac01 \uc2a4\ud3ec\uce20\uc758 \ucd1d \ud2f0\ucf13 \uc218\uc775\uc744 \ubd84\uae30 \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \ub098\ub204\uc5b4 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ticket_sales (ticket_sale_id INT, team_id INT, sale_quarter INT, sale_year INT, quantity INT, sale_price DECIMAL(10,2)); CREATE TABLE teams (team_id INT, team_name VARCHAR(255), sport_id INT); CREATE TABLE sports (sport_id INT, sport_name VARCHAR(255)); INSERT INTO ticket_sales VALUES (1, 101, 1, 2020, 50, 100.00), (2, 102, 2, 2020, 75, 120.00), (3, 101, 3, 2020, 80, 95.00), (4, 103, 4, 2020, 60, 70.00); INSERT INTO teams VALUES (101, 'TeamA', 1), (102, 'TeamB', 2), (103, 'TeamC', 3); INSERT INTO sports VALUES (1, 'Basketball'), (2, 'Football'), (3, 'Soccer');", "output": "SELECT sp.sport_name, sale_year, sale_quarter, SUM(quantity * sale_price) as total_revenue FROM ticket_sales ts JOIN teams t ON ts.team_id = t.team_id JOIN sports sp ON t.sport_id = sp.sport_id GROUP BY sp.sport_name, sale_year, sale_quarter;"}
{"input": " \uce90\ub098\ub2e4\uc758 \uc790\uc5f0\uc720\uc0b0 \uc9c0\uc5ed\uc5d0 \ub300\ud574 \uc81c\uacf5\ub418\ub294 \uac00\uc0c1 \ud22c\uc5b4\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE TourTypes (tour_id INT, tour_type TEXT); INSERT INTO TourTypes (tour_id, tour_type) VALUES (1, 'Virtual Tour of Niagara Falls'); INSERT INTO TourTypes (tour_id, tour_type) VALUES (2, 'Virtual Tour of Banff National Park'); CREATE TABLE Providers (provider_id INT, provider_name TEXT, country TEXT); INSERT INTO Providers (provider_id, provider_name, country) VALUES (1, 'Canada Virtual Tours', 'Canada'); INSERT INTO Providers (provider_id, provider_name, country) VALUES (2, 'Global Canada Tours', 'Canada'); CREATE TABLE ProviderTours (provider_id INT, tour_id INT, tour_type TEXT); INSERT INTO ProviderTours (provider_id, tour_id, tour_type) VALUES (1, 1, 'Virtual Tour of Niagara Falls'); INSERT INTO ProviderTours (provider_id, tour_id, tour_type) VALUES (1, 2, 'Virtual Tour of Banff National Park');", "output": "SELECT COUNT(*) FROM ProviderTours JOIN TourTypes ON ProviderTours.tour_id = TourTypes.tour_id JOIN Providers ON ProviderTours.provider_id = Providers.provider_id WHERE country = 'Canada' AND tour_type = 'Virtual Tour';"}
{"input": " \ucd1d \uc790\uae08 \uae30\uc900\uc73c\ub85c \uc911\ub3d9\uacfc \uc544\ud504\ub9ac\uce74\uc758 \uc0ac\ud68c \ubcf5\uc9c0 \uc0ac\uc5c5\uc744 \uc704\ud55c \uc0c1\uc704 2\uac1c \uae30\uc220\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE ts_funding_me(initiative VARCHAR(50), funding INT); INSERT INTO ts_funding_me VALUES ('Tech for Peace', 5000000), ('Tech for Refugees', 4000000); CREATE TABLE ts_funding_africa(initiative VARCHAR(50), funding INT); INSERT INTO ts_funding_africa VALUES ('Africa Tech for All', 6000000), ('Tech for Rural Africa', 3000000);", "output": "SELECT initiative, SUM(funding) AS total_funding FROM ts_funding_me GROUP BY initiative UNION ALL SELECT initiative, SUM(funding) AS total_funding FROM ts_funding_africa GROUP BY initiative ORDER BY total_funding DESC LIMIT 2;"}
{"input": " \uc9c0\ub09c \ub2ec \ud504\ub85c\ud544 \uc0ac\uc9c4\uc744 \uc5c5\ub370\uc774\ud2b8\ud55c \uc544\uc2dc\uc544 \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc774\uba70, \uc774\ub4e4\uc774 \uc791\uc131\ud55c \ud3c9\uade0 \uac8c\uc2dc\ubb3c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (user_id INT, region VARCHAR(50), profile_picture_update_date DATE, gender VARCHAR(50));CREATE TABLE posts (post_id INT, user_id INT, post_date DATE); INSERT INTO users (user_id, region, profile_picture_update_date, gender) VALUES (1, 'Asia', '2023-03-25', 'female'), (2, 'Asia', '2023-03-23', 'male'); INSERT INTO posts (post_id, user_id, post_date) VALUES (1, 1, '2023-03-28'), (2, 1, '2023-03-30'), (3, 2, '2023-03-27'), (4, 2, '2023-03-28'), (5, 2, '2023-03-29');", "output": "SELECT AVG(post_count) as avg_posts, COUNT(DISTINCT user_id) as num_users FROM (SELECT user_id, COUNT(*) as post_count FROM posts WHERE post_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY user_id) as post_counts JOIN users ON post_counts.user_id = users.user_id WHERE region = 'Asia' AND profile_picture_update_date >= DATEADD(month, -1, CURRENT_DATE);"}
{"input": " \uc120\ubc15\ub2f9 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ud56d\uad6c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE PortCargo (port_id INT, vessel_id INT, cargo_weight INT);", "output": "SELECT port_id, AVG(cargo_weight) FROM (SELECT port_id, vessel_id, AVG(cargo_weight) AS cargo_weight FROM PortCargo GROUP BY port_id, vessel_id) t GROUP BY port_id ORDER BY AVG(cargo_weight) DESC LIMIT 3;"}
{"input": " 2022\ub144 '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c \uac1c\ucd5c\ub418\ub294 '\uc9c0\uc18d\uac00\ub2a5\ud55c \ud328\uc158' \uad00\ub828 \ud589\uc0ac\uc758 \uc218\ub294?", "context": "CREATE TABLE africa_events (id INT, event_type VARCHAR(30), event_year INT);INSERT INTO africa_events (id, event_type, event_year) VALUES (1, 'Sustainable Fashion', 2022), (2, 'Fashion Trend', 2021), (3, 'Sustainable Fashion', 2023), (4, 'Fashion Trend', 2020);", "output": "SELECT COUNT(*) FROM africa_events WHERE event_type = 'Sustainable Fashion' AND event_year = 2022;"}
{"input": " \uce90\ub098\ub2e4\uc758 \uc8fc\uc694 \uc0ac\ub9dd \uc6d0\uc778\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Deaths (Country TEXT, Cause TEXT, Deaths INT); INSERT INTO Deaths (Country, Cause, Deaths) VALUES ('Canada', 'Heart Disease', 5000), ('Canada', 'Cancer', 7000);", "output": "SELECT Cause, MAX(Deaths) FROM Deaths WHERE Country = 'Canada' GROUP BY Cause;"}
{"input": " '\uc804\uc790\uc0c1\uac70\ub798' \ubd80\ubb38\uc5d0\uc11c \uc5ec\uc131\uc774 \ucc3d\uc5c5\ud55c \uae30\uc5c5\uc758 \ud3c9\uade0 \ud22c\uc790 \ub77c\uc6b4\ub4dc \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, industry TEXT, founders TEXT); INSERT INTO company (id, industry, founders) VALUES (1, 'e-commerce', 'female'), (2, 'fintech', 'male, female'), (3, 'e-commerce', 'non-binary'), (4, 'healthcare', 'male, female, female'), (5, 'e-commerce', 'male'), (6, 'transportation', 'male, female, non-binary');", "output": "SELECT AVG(total_rounds) FROM (SELECT company.id, COUNT(round_data.round) AS total_rounds FROM company LEFT JOIN round_data ON company.id = round_data.company_id WHERE company.industry = 'e-commerce' AND founders LIKE '%female%' GROUP BY company.id) AS subquery;"}
{"input": " \ubaa8\ub4e0 \uba54\ub274 \ud56d\ubaa9\uc758 \ud3c9\uade0 \uac00\uaca9\ubcf4\ub2e4 \uac00\uaca9\uc774 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), price DECIMAL(5,2), restaurant_id INT); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (1, 'Big Burger', 12.99, 1); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (2, 'Chicken Teriyaki', 15.99, 2); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (3, 'Garden Salad', 7.99, 1);", "output": "SELECT name, price FROM menu_items WHERE price > (SELECT AVG(price) FROM menu_items);"}
{"input": " 2022\ub144 2\ubd84\uae30\uc640 3\ubd84\uae30\uc5d0 \uc811\uadfc\uc131 \uad00\ub828 \uc9c1\uc6d0 \ucc44\uc6a9\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE StaffHires (hire_date DATE, staff_type VARCHAR(255)); INSERT INTO StaffHires (hire_date, staff_type) VALUES ('2022-04-05', 'Accessibility Specialist'); INSERT INTO StaffHires (hire_date, staff_type) VALUES ('2022-08-10', 'Accessibility Coordinator');", "output": "SELECT SUM(total_hires) as q2_q3_hires FROM (SELECT CASE WHEN hire_date BETWEEN '2022-04-01' AND LAST_DAY('2022-06-30') THEN 1 WHEN hire_date BETWEEN '2022-07-01' AND LAST_DAY('2022-09-30') THEN 1 ELSE 0 END as total_hires FROM StaffHires) AS subquery;"}
{"input": " 2021\ub144 \ubd84\uae30\ubcc4\ub85c \ud53c\ubc97\ud305\ud558\uba74 \uac01 \ub178\ub3d9\uc870\ud569\uc758 \uc0b0\uc5c5\uc7ac\ud574 \uac74\uc218\ub97c \ub178\ub3d9\uc870\ud569\uba85\ubcc4\ub85c \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_table_2021 (union_name VARCHAR(255), total_injuries INT, incident_date DATE); INSERT INTO union_table_2021 (union_name, total_injuries, incident_date) VALUES ('Union A', 350, '2021-01-01'), ('Union B', 450, '2021-02-01'), ('Union C', 550, '2021-03-01'), ('Union D', 600, '2021-04-01');", "output": "SELECT union_name, SUM(CASE WHEN QUARTER(incident_date) = 1 THEN total_injuries ELSE 0 END) as q1, SUM(CASE WHEN QUARTER(incident_date) = 2 THEN total_injuries ELSE 0 END) as q2, SUM(CASE WHEN QUARTER(incident_date) = 3 THEN total_injuries ELSE 0 END) as q3, SUM(CASE WHEN QUARTER(incident_date) = 4 THEN total_injuries ELSE 0 END) as q4 FROM union_table_2021 GROUP BY union_name;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uac01 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud574 \uac01 \uc0ac\uc774\uc988 \ubc94\uc704\uc758 \uc758\ub958 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GarmentSales (SaleID INT, GarmentID INT, Size VARCHAR(255), Category VARCHAR(255), Country VARCHAR(255)); INSERT INTO GarmentSales (SaleID, GarmentID, Size, Category, Country) VALUES (1, 1, 'Small', 'Tops', 'USA');", "output": "SELECT Category, Size, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY Category) as Percentage FROM GarmentSales WHERE Country = 'USA' GROUP BY Category, Size;"}
{"input": " '\ub3c4\ucfc4'\uc5d0\ub294 \ub18d\ubd80\uac00 \uba87 \uba85\uc774\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE farmers (id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10), location VARCHAR(50)); INSERT INTO farmers (id, name, age, gender, location) VALUES (3, 'Hiroshi Tanaka', 50, 'Male', 'Tokyo');", "output": "SELECT COUNT(*) FROM farmers WHERE location = 'Tokyo';"}
{"input": " \uc608\uc0b0\uc774 500\ub9cc \ub2ec\ub7ec\uac00 \ub118\ub294 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE autonomous_projects (project_name VARCHAR(50), budget DECIMAL(10,2), year INT); INSERT INTO autonomous_projects (project_name, budget, year) VALUES ('Project Apollo', 7000000, 2018), ('Wayve', 6000000, 2020), ('Project Baidu', 5500000, 2017), ('Project Zoox', 9000000, 2019);", "output": "SELECT * FROM autonomous_projects WHERE budget > 5000000;"}
{"input": " \ubaa8\ub4e0 \ub3c4\uc2dc\uc758 \uac01 \ubd80\uc11c\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CityBudget (CityName VARCHAR(50), Department VARCHAR(50), Budget INT); INSERT INTO CityBudget (CityName, Department, Budget) VALUES ('CityA', 'Parks', 5000000), ('CityA', 'Roads', 7000000), ('CityB', 'Parks', 6000000), ('CityB', 'Roads', 8000000);", "output": "SELECT Department, SUM(Budget) OVER(PARTITION BY Department) as TotalBudget FROM CityBudget;"}
{"input": " \uac01 \uc8fc\ub9c8\ub2e4 \uba87 \uac1c\uc758 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE state_health_equity_metrics (state VARCHAR(20), num_metrics INT); INSERT INTO state_health_equity_metrics (state, num_metrics) VALUES ('California', 15), ('Texas', 12), ('Florida', 8);", "output": "SELECT state, SUM(num_metrics) FROM state_health_equity_metrics GROUP BY state;"}
{"input": " \uac01 \uc704\uce58\uc5d0 \uba87 \uba85\uc758 \ub18d\ubd80\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50), age INT, location VARCHAR(50)); INSERT INTO farmers (id, name, age, location) VALUES (1, 'John Doe', 45, 'Ruralville'); INSERT INTO farmers (id, name, age, location) VALUES (2, 'Jane Smith', 50, 'Farmtown');", "output": "SELECT location, COUNT(*) FROM farmers GROUP BY location;"}
{"input": " \ud2b9\uc815 \uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub300\ud574 2021\ub144\uc5d0 \ub9e4\uc6d4 \uc0dd\uc131\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc218\ub97c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (contract_id INT, creation_date DATE, regulatory_framework VARCHAR(255)); INSERT INTO smart_contracts (contract_id, creation_date, regulatory_framework) VALUES (1, '2021-01-01', 'SEC'), (2, '2021-01-15', 'EU'), (3, '2021-02-03', 'SEC'), (4, '2021-03-20', 'EU'), (5, '2021-04-01', 'SEC');", "output": "SELECT MONTH(creation_date) as month, COUNT(*) as smart_contracts_created FROM smart_contracts WHERE regulatory_framework = 'SEC' AND YEAR(creation_date) = 2021 GROUP BY month;"}
{"input": " \uae30\uc220 \ubd80\ubb38 \uae30\uc5c5\uc758 ESG \ub4f1\uae09 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name TEXT, sector TEXT, ESG_rating FLOAT); INSERT INTO companies (id, name, sector, ESG_rating) VALUES (1, 'Apple', 'Technology', 8.2), (2, 'Microsoft', 'Technology', 8.5), (3, 'Google', 'Technology', 8.3), (4, 'Amazon', 'Technology', 7.9), (5, 'Facebook', 'Technology', 7.7);", "output": "SELECT sector, ESG_rating, COUNT(*) AS rating_count FROM companies GROUP BY sector, ESG_rating ORDER BY sector, ESG_rating;"}
{"input": " 'Delhi'\uc5d0\uc11c \ucd9c\ubc1c\ud558\uc5ec 'Rio de Janeiro'\ub85c \ubc30\uc1a1\ub41c \ubaa8\ub4e0 \ubc1c\uc1a1\ubb3c\uc758 \ucd1d \ud654\ubb3c \uc911\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Warehouses (WarehouseID INT, City VARCHAR(50)); INSERT INTO Warehouses (WarehouseID, City) VALUES (4, 'Delhi'), (5, 'Rio de Janeiro'); CREATE TABLE Shipments (ShipmentID INT, OriginWarehouseID INT, DestinationWarehouseID INT, CargoWeight INT); INSERT INTO Shipments (ShipmentID, OriginWarehouseID, DestinationWarehouseID, CargoWeight) VALUES (3, 4, 5, 1200);", "output": "SELECT SUM(Shipments.CargoWeight) AS TotalCargoWeight FROM Shipments JOIN Warehouses ON Shipments.OriginWarehouseID = Warehouses.WarehouseID WHERE Warehouses.City = 'Delhi' JOIN Warehouses AS DestinationWarehouses ON Shipments.DestinationWarehouseID = DestinationWarehouses.WarehouseID WHERE DestinationWarehouses.City = 'Rio de Janeiro';"}
{"input": " 2021\ub144 \uad6d\uac00\ubcc4 \uad70\uc0ac\ud601\uc2e0 \ud2b9\ud5c8 \ucd9c\uc6d0 \uac74\uc218\ub294?", "context": "CREATE TABLE military_patents (patent_name VARCHAR(255), country VARCHAR(255), year INT); INSERT INTO military_patents (patent_name, country, year) VALUES ('Patent 1', 'USA', 2021), ('Patent 2', 'China', 2021), ('Patent 3', 'Russia', 2021);", "output": "SELECT country, COUNT(patent_name) FROM military_patents WHERE year = 2021 GROUP BY country;"}
{"input": " \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uad11\ub300\uc5ed \uac00\uc785\uc790\uc758 \uc774\ub984\uacfc \uac00\uc785 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_subscribers (subscriber_id INT, subscription_type VARCHAR(50), revenue DECIMAL(10, 2)); INSERT INTO broadband_subscribers (subscriber_id, subscription_type, revenue) VALUES (1, 'Residential', 100.00), (2, 'Business', 150.00);", "output": "SELECT name, subscription_type FROM broadband_subscribers WHERE revenue = (SELECT MAX(revenue) FROM broadband_subscribers);"}
{"input": " \ucd5c\uadfc 3\ub144\uac04 \uc9c0\uc5ed\ubcc4\ub85c \uc7a5\uc560\uc778 \uc9c1\uc6d0\uc744 \ucc44\uc6a9\ud55c \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, FirstName varchar(50), LastName varchar(50), HireDate date, Disability bit, Region varchar(50)); INSERT INTO Employees (EmployeeID, FirstName, LastName, HireDate, Disability, Region) VALUES (1, 'John', 'Doe', '2020-01-01', 1, 'North'), (2, 'Jane', 'Doe', '2021-05-15', 0, 'South'), (3, 'Jim', 'Smith', '2019-09-30', 1, 'East');", "output": "SELECT Employees.Region, COUNT(Employees.EmployeeID) as Count_of_Employees FROM Employees WHERE Employees.HireDate >= DATEADD(year, -3, GETDATE()) AND Employees.Disability = 1 GROUP BY Employees.Region;"}
{"input": "\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \ubc1c\uacac\ub41c \ucde8\uc57d\uc810\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, region VARCHAR(20), severity VARCHAR(10));INSERT INTO vulnerabilities (id, region, severity) VALUES (1, 'Asia Pacific', 'High');INSERT INTO vulnerabilities (id, region, severity) VALUES (2, 'Europe', 'Medium');INSERT INTO vulnerabilities (id, region, severity) VALUES (3, 'North America', 'Low');", "output": "SELECT COUNT(*) FROM vulnerabilities WHERE region = 'Asia Pacific';"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc704\ud611 \ubc94\uc8fc\uc5d0 \ub300\ud574 \uc131\uacf5\ud55c \uacf5\uaca9\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence (id INT, category VARCHAR(255), success_bool BOOLEAN); INSERT INTO threat_intelligence (id, category, success_bool) VALUES (1, 'Phishing', TRUE), (2, 'Ransomware', FALSE), (3, 'Phishing', TRUE), (4, 'Ransomware', TRUE), (5, 'Phishing', FALSE);", "output": "SELECT category, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY NULL) as percentage FROM threat_intelligence WHERE success_bool = TRUE AND category IN ('Phishing', 'Ransomware') GROUP BY category;"}
{"input": " \uac01 \ud68c\uc0ac\uc758 \uc804\uae30\uc790\ub3d9\ucc28\uc640 \uc790\uc728\uc8fc\ud589\uc790\ub3d9\ucc28\uc758 \ub300\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE AutonomousVehicles (id INT, company VARCHAR(20), vehicle_type VARCHAR(20), num_vehicles INT); INSERT INTO AutonomousVehicles (id, company, vehicle_type, num_vehicles) VALUES (1, 'Waymo', 'Self-Driving Car', 500), (2, 'Tesla', 'Autopilot Car', 800), (3, 'Cruise', 'Self-Driving Car', 300); CREATE TABLE ElectricVehicles (id INT, company VARCHAR(20), vehicle_type VARCHAR(20), num_vehicles INT); INSERT INTO ElectricVehicles (id, company, vehicle_type, num_vehicles) VALUES (1, 'Tesla', 'EV', 1500000), (2, 'Nissan', 'Leaf', 500000), (3, 'Chevrolet', 'Bolt', 300000);", "output": "SELECT company, num_vehicles FROM AutonomousVehicles WHERE vehicle_type = 'Self-Driving Car' INTERSECT SELECT company, num_vehicles FROM ElectricVehicles WHERE vehicle_type = 'EV';"}
{"input": " \ucee4\ubba4\ub2c8\ud2f0 \ucc38\uc5ec \uc774\ubca4\ud2b8\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \uc2dd\ubcc4\ud558\uace0 \uc774\ubca4\ud2b8 \uc218, \uac01 \uc774\ubca4\ud2b8\uc758 \uc2dc\uc791 \ubc0f \uc885\ub8cc \ub0a0\uc9dc, \uc774\ubca4\ud2b8 \uc720\ud615\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Country (Id INT, Name VARCHAR(100)); CREATE TABLE CommunityEvent (Id INT, CountryId INT, EventType VARCHAR(50), StartDate DATE, EndDate DATE, Quantity INT);", "output": "SELECT CountryId, Name, EventType, StartDate, EndDate, Quantity FROM (SELECT CountryId, Name, EventType, StartDate, EndDate, Quantity, ROW_NUMBER() OVER (PARTITION BY CountryId ORDER BY Quantity DESC) as RowNum FROM Country c JOIN CommunityEvent ce ON c.Id = ce.CountryId) x WHERE RowNum <= 3 ORDER BY Quantity DESC, StartDate;"}
{"input": "\uc2a4\ud398\uc778\uc5d0\uc11c \uc138 \ubc88\uc9f8\ub85c \ud070 \ubd80\ub3d9\uc0b0 \uaddc\ubaa8\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE properties (id INT, size INT, country VARCHAR(255)); INSERT INTO properties (id, size, country) VALUES (1, 1500, 'Spain'), (2, 2000, 'Spain'), (3, 1800, 'Spain');", "output": "SELECT size FROM (SELECT size, ROW_NUMBER() OVER (ORDER BY size DESC) as rn FROM properties WHERE country = 'Spain') t WHERE rn = 3;"}
{"input": " \uc2dc\uc791\uc77c\uacfc \uc885\ub8cc\uc77c\uc744 \ud3ec\ud568\ud558\uc5ec \ub274\uc695\uacfc \uc2dc\uce74\uace0 \uc2dc\uc758 \ubaa8\ub4e0 \ub300\uc911\uad50\ud1b5 \ud504\ub85c\uc81d\ud2b8\ub97c \ub098\uc5f4\ud558\uace0 \uc608\uc0c1 \uc608\uc0b0\uc774 5\ucc9c\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE TransitProjects (project VARCHAR(50), city VARCHAR(20), start_date DATE, end_date DATE, budget INT); INSERT INTO TransitProjects (project, city, start_date, end_date, budget) VALUES ('ProjectA', 'New York', '2020-01-01', '2022-12-31', 60000000), ('ProjectB', 'Chicago', '2019-01-01', '2021-12-31', 55000000);", "output": "SELECT project, city, start_date, end_date FROM TransitProjects WHERE city IN ('New York', 'Chicago') AND budget > 50000000;"}
{"input": " \uacbd\ucc30 \uc0c1\ud638 \uc791\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed \uc0ac\ud68c \uacbd\ucc30 \uad6c\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityPolicing (id INT, district VARCHAR(255), police_interactions INT);", "output": "SELECT district, MAX(police_interactions) FROM CommunityPolicing GROUP BY district;"}
{"input": " \uc9c0\ub09c \ud574 \uac00\uc7a5 \ub098\uc774 \ub9ce\uc740 \uad50\uc0ac\uac00 \uc774\uc218\ud55c \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc758 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (id INT, name VARCHAR(50), age INT, last_pd_course DATE);", "output": "SELECT COUNT(*) FROM (SELECT * FROM teachers WHERE age = (SELECT MAX(age) FROM teachers) AND last_pd_course >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) as subquery;"}
{"input": " \uc77c\ubcf8\uacfc \ud55c\uad6d\uc5d0\uc11c e\uc2a4\ud3ec\uce20 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\ub294 \ud50c\ub808\uc774\uc5b4 \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, age INT, country VARCHAR(20)); INSERT INTO players (id, age, country) VALUES (1, 22, 'JP'), (2, 25, 'KR'), (3, 30, 'US'), (4, 19, 'JP');", "output": "SELECT country, AVG(age) AS avg_age FROM players WHERE country IN ('JP', 'KR') AND EXISTS (SELECT 1 FROM esports_games WHERE players.id = esports_games.player_id) GROUP BY country;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc640 \uc870\uc9c0\uc544\uc5d0\uc11c \uc790\uae08 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uc608\uc220 \ub2e8\uccb4 \uc218\uc640 \ucd1d \ud589\uc0ac \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE arts_orgs (id INT, state VARCHAR(2), org_name VARCHAR(20)); CREATE TABLE org_events (id INT, org_name VARCHAR(20), num_events INT); CREATE TABLE funding_info (id INT, org_name VARCHAR(20), amount INT); INSERT INTO arts_orgs (id, state, org_name) VALUES (1, 'CO', 'OrgA'), (2, 'GA', 'OrgB'); INSERT INTO org_events (id, org_name, num_events) VALUES (1, 'OrgA', 3), (2, 'OrgB', 4); INSERT INTO funding_info (id, org_name, amount) VALUES (1, 'OrgA', 10000), (2, 'OrgB', 15000);", "output": "SELECT COUNT(DISTINCT ao.org_name), SUM(oe.num_events) FROM arts_orgs ao INNER JOIN org_events oe ON ao.org_name = oe.org_name INNER JOIN funding_info fi ON ao.org_name = fi.org_name WHERE ao.state IN ('CO', 'GA');"}
{"input": "\uacf5\uac1c\uad50\uc721\ud559 \uac15\uc88c\uc5d0 \ucc38\uc5ec\ud55c \uc801\uc774 \uc5c6\ub294 \ud559\uc0dd\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, student_name VARCHAR(255)); INSERT INTO students VALUES (1, 'Alex Lee'), (2, 'Yasmine Khalil'), (3, 'James Chen'), (4, 'Sophia Kim'); CREATE TABLE student_courses (student_id INT, course_id INT); INSERT INTO student_courses VALUES (1, 1), (1, 2), (2, 1), (3, 2), (3, 3), (4, 1), (4, 2); CREATE TABLE open_pedagogy_courses (course_id INT, course_name VARCHAR(255)); INSERT INTO open_pedagogy_courses VALUES (1, 'Open Course 1'), (2, 'Open Course 2'), (3, 'Closed Course');", "output": "SELECT COUNT(s.student_id) as no_open_pedagogy_courses FROM students s LEFT JOIN student_courses sc ON s.student_id = sc.student_id LEFT JOIN open_pedagogy_courses opc ON sc.course_id = opc.course_id WHERE opc.course_id IS NULL;"}
{"input": " \uac01 \ud654\ud559\ubb3c\uc9c8\uc758 \uc77c\uc77c \ud3c9\uade0 \uacb0\ud568 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Quality_Control (id INT, chemical_name VARCHAR(255), date DATE, defects INT); INSERT INTO Quality_Control (id, chemical_name, date, defects) VALUES (1, 'Acetic Acid', '2022-01-02', 5); INSERT INTO Quality_Control (id, chemical_name, date, defects) VALUES (2, 'Nitric Acid', '2022-01-04', 3); INSERT INTO Quality_Control (id, chemical_name, date, defects) VALUES (3, 'Acetic Acid', '2022-01-05', 2);", "output": "SELECT chemical_name, AVG(defects) as avg_defects FROM Quality_Control GROUP BY chemical_name;"}
{"input": " \ud638\uc8fc \uad11\uc0b0 \uc6b4\uc601\uc5d0 \uc885\uc0ac\ud558\ub294 \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc774\uba70, \uadf8\ub4e4\uc758 \uc5ed\ud560\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE australian_states (id INT, name VARCHAR(50)); CREATE TABLE mining_operations (id INT, state_id INT, region VARCHAR(20)); CREATE TABLE employees (id INT, operation_id INT, role VARCHAR(20)); INSERT INTO australian_states (id, name) VALUES (1, 'Queensland'), (2, 'New South Wales'); INSERT INTO mining_operations (id, state_id, region) VALUES (1, 1, 'Australia'), (2, 2, 'Australia'); INSERT INTO employees (id, operation_id, role) VALUES (1, 1, 'Driller'), (2, 1, 'Supervisor'), (3, 2, 'Engineer');", "output": "SELECT e.role, COUNT(DISTINCT e.id) as total_employees FROM employees e INNER JOIN mining_operations m ON e.operation_id = m.id INNER JOIN australian_states s ON m.state_id = s.id WHERE s.name IN ('Queensland', 'New South Wales');"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 SpaceAirlines\uac00 \uc6b4\ud56d\ud558\ub294 \ud56d\uacf5\ud3b8\uc758 \uc548\uc804 \uc810\uc218 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE flights (flight_id INT, airline VARCHAR(255), flight_date DATE, safety_score INT); INSERT INTO flights (flight_id, airline, flight_date, safety_score) VALUES (1, 'SpaceAirlines', '2020-02-03', 95), (2, 'SpaceAirlines', '2020-06-15', 92), (3, 'SpaceAirlines', '2019-11-18', 97), (4, 'SpaceAirlines', '2021-03-25', 93), (5, 'SpaceAirlines', '2018-09-01', 96);", "output": "SELECT flight_date, safety_score, ROW_NUMBER() OVER (ORDER BY flight_date) as rank FROM flights WHERE airline = 'SpaceAirlines' AND flight_date >= DATEADD(year, -2, CURRENT_DATE) ORDER BY flight_date;"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74\uacf5\ud654\uad6d\uc5d0\uc11c \uc9c0\ub09c 10\ub144\uac04 \uac00\ubb44\uc758 \uc601\ud5a5\uc774 \uac00\uc7a5 \ucef8\ub358 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drought_impact_south_africa(id INT, location VARCHAR(50), impact FLOAT, year INT); INSERT INTO drought_impact_south_africa(id, location, impact, year) VALUES (1, 'Cape Town', 28.1, 2018);", "output": "SELECT location, MAX(impact) as max_impact FROM drought_impact_south_africa WHERE year BETWEEN (SELECT MAX(year) - 10 FROM drought_impact_south_africa) AND MAX(year) GROUP BY location ORDER BY max_impact DESC;"}
{"input": "Acura NSX\uc758 \ub9c8\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE luxury_cars (make VARCHAR(255), model VARCHAR(255), horsepower INT); INSERT INTO luxury_cars (make, model, horsepower) VALUES ('Acura', 'NSX', 573), ('Acura', 'RLX', 310);", "output": "SELECT horsepower FROM luxury_cars WHERE make = 'Acura' AND model = 'NSX';"}
{"input": " 7\uc6d4 \ubd81\uadf9\uc758 \ud3c9\uade0 \uae30\uc628\uacfc \uc2b5\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ClimateData (id INT PRIMARY KEY, location VARCHAR(100), temperature DECIMAL(5,2), humidity DECIMAL(5,2), date DATE); INSERT INTO ClimateData (id, location, temperature, humidity, date) VALUES (1, 'Arctic', 10.50, 75.00, '2022-07-01');", "output": "SELECT AVG(c.temperature), AVG(c.humidity) FROM ClimateData c WHERE c.location = 'Arctic' AND c.date BETWEEN '2022-07-01' AND '2022-07-31';"}
{"input": " 2019\ub144\uacfc 2020\ub144 \ubaa9\uc801\uc9c0\ubcc4 \ud0c4\uc18c \ubc30\ucd9c \uac10\uc18c \uc11c\uc57d \uac74\uc218\ub294 \ud3c9\uade0 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE destinations_pledges (destination VARCHAR(50), year INT, pledges INT);", "output": "SELECT AVG(pledges) FROM (SELECT destination, AVG(pledges) AS pledges FROM destinations_pledges WHERE year IN (2019, 2020) GROUP BY destination, year HAVING COUNT(*) > 1);"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc2a4\ud0c0\ud2b8\uc5c5\uacfc \uac00\uc7a5 \uc801\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc2a4\ud0c0\ud2b8\uc5c5 \uac04\uc758 \uc790\uae08 \uc870\ub2ec \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.startups(id INT, name VARCHAR(50), country VARCHAR(50), funding DECIMAL(10,2));INSERT INTO biotech.startups(id, name, country, funding) VALUES (1, 'StartupA', 'US', 1500000.00), (2, 'StartupB', 'Canada', 2000000.00), (3, 'StartupC', 'Mexico', 500000.00), (4, 'StartupD', 'US', 1000000.00), (5, 'StartupE', 'Brazil', 750000.00), (6, 'StartupF', 'Canada', 250000.00);", "output": "SELECT s1.country, s1.funding - s2.funding diff FROM biotech.startups s1 JOIN (SELECT country, MAX(funding) max_funding, MIN(funding) min_funding FROM biotech.startups GROUP BY country) s2 ON s1.country = s2.country WHERE s1.funding = s2.max_funding OR s1.funding = s2.min_funding;"}
{"input": " \uacf5\uc815\ud55c \ub178\ub3d9 \uad00\ud589\uc5d0 \uad00\uc2ec\uc744 \ubcf4\uc600\uc73c\uba70 \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74\uc5d0 \uac70\uc8fc\ud558\ub294 \uc18c\ube44\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE consumers (consumer_id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO consumers (consumer_id, name, region) VALUES (1, 'Ana Lopez', 'Latin America'), (2, 'Berta Garcia', 'Europe'); CREATE TABLE interests (interest_id INT, name VARCHAR(255), is_fair_labor BOOLEAN); INSERT INTO interests (interest_id, name, is_fair_labor) VALUES (1, 'Fair Trade', TRUE), (2, 'Fast Fashion', FALSE); CREATE TABLE consumer_interests (consumer_id INT, interest_id INT); INSERT INTO consumer_interests (consumer_id, interest_id) VALUES (1, 1), (1, 2), (2, 2);", "output": "SELECT c.name FROM consumers c JOIN consumer_interests ci ON c.consumer_id = ci.consumer_id JOIN interests i ON ci.interest_id = i.interest_id WHERE i.is_fair_labor = TRUE AND c.region = 'Latin America';"}
{"input": "\uc9c0\ub09c \ubd84\uae30\uc5d0 \ubd80\ubb38\ubcc4\ub85c \ubcf4\uace0\ub41c \ubcf4\uc548 \uc0ac\uace0\uc758 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE incidents (incident_id INT, incident_date DATE, incident_sector VARCHAR(255));", "output": "SELECT incident_sector, COUNT(*) as count FROM incidents WHERE incident_date >= DATEADD(quarter, -1, GETDATE()) GROUP BY incident_sector;"}
{"input": " \uac00\uc7a5 \ube60\ub978 \ubc1c\uc0ac \ub0a0\uc9dc\uc640 \uac01 \uc870\uc9c1\uc5d0 \ub300\ud574 \ubc1c\uc0ac\ub41c \uc704\uc131\uc758 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4. \ud55c \ub2ec\uc5d0 \ucd5c\ub300 1\uac1c\uc758 \uc704\uc131\uc774 \ubc1c\uc0ac\ub429\ub2c8\ub2e4.", "context": "CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(20), Organization VARCHAR(20), LaunchDate DATE); INSERT INTO Satellites (SatelliteID, Name, Organization, LaunchDate) VALUES (1, 'Sentinel-1A', 'ESA', '2014-04-03'), (2, 'Sentinel-2A', 'ESA', '2015-06-23'), (3, 'Jason-3', 'NASA', '2016-01-17'), (4, 'WorldView-4', 'DigitalGlobe', '2016-11-11'), (5, 'Sentinel-1B', 'ESA', '2016-04-25'), (6, 'Himawari-9', 'JMA', '2016-11-02');", "output": "SELECT Organization, MIN(LaunchDate) as 'Earliest Launch Date', COUNT(*) as 'Number of Satellites Launched' FROM (SELECT Organization, LaunchDate, ROW_NUMBER() OVER (PARTITION BY Organization, YEAR(LaunchDate) * 100 + MONTH(LaunchDate) ORDER BY LaunchDate) as RowNumber FROM Satellites) AS Subquery WHERE Subquery.RowNumber = 1 GROUP BY Organization;"}
{"input": " \uc601\uc5c5\ubd80\uc11c\uc5d0\uc11c \uac00\uc7a5 \uc5b4\ub9b0 \uc9c1\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (Employee_ID INT, First_Name VARCHAR(20), Last_Name VARCHAR(20), Department VARCHAR(20), Salary DECIMAL(10,2), Date_Hired DATE); CREATE VIEW Youngest_Employee AS SELECT Employee_ID, First_Name, Last_Name, Department, Salary, Date_Hired FROM Employees WHERE Date_Hired = (SELECT MIN(Date_Hired) FROM Employees); CREATE VIEW Youngest_Sales_Employee AS SELECT * FROM Youngest_Employee WHERE Department = 'Sales';", "output": "SELECT * FROM Youngest_Sales_Employee;"}
{"input": " \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uae30\uc220 \uc218\uc900\uc744 \ud45c\uc2dc\ud558\ub294 \ubdf0 \ub9cc\ub4e4\uae30", "context": "CREATE TABLE employee_skills (skill_id INTEGER, employee_id INTEGER, department VARCHAR(50), skill VARCHAR(50), skill_level INTEGER); INSERT INTO employee_skills (skill_id, employee_id, department, skill, skill_level) VALUES (1, 101, 'Engineering', 'Python', 4), (2, 102, 'Engineering', 'JavaScript', 3), (3, 103, 'Marketing', 'Graphic Design', 5), (4, 104, 'Human Resources', 'Diversity & Inclusion', 4);", "output": "CREATE VIEW avg_skill_level_by_dept AS SELECT department, AVG(skill_level) as avg_skill_level FROM employee_skills GROUP BY department;"}
{"input": " \ubb38\ud654 \uc5ed\ub7c9 \uad50\uc721\uc744 \uc774\uc218\ud558\uc9c0 \uc54a\uc740 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uad50\uc721 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE worker_training (worker_id INT, cultural_competency_training DATE, mental_health_parity_training DATE); INSERT INTO worker_training (worker_id, cultural_competency_training, mental_health_parity_training) VALUES (1, '2022-01-01', '2022-02-01'), (2, '2022-02-01', '2022-03-01'), (3, NULL, '2022-04-01');", "output": "DELETE FROM worker_training WHERE worker_id IN (SELECT worker_id FROM worker_training WHERE cultural_competency_training IS NULL);"}
{"input": " \uc778\uad6c\uac00 300\ub9cc \uba85 \ubbf8\ub9cc\uc778 \ub3c4\uc2dc\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\uae30 \ubc0f \uc790\uc728\uc8fc\ud589\ucc28 \ubaa8\ub378\uc744 \uc774\uc6a9\ud560 \uc218 \uc788\ub098\uc694?", "context": "CREATE TABLE City (id INT, name VARCHAR, population INT, PRIMARY KEY(id)); INSERT INTO City (id, name, population) VALUES (1, 'NYC', 8500000); INSERT INTO City (id, name, population) VALUES (2, 'LA', 4000000); INSERT INTO City (id, name, population) VALUES (3, 'Sydney', 2500000); CREATE TABLE ElectricVehicle (id INT, city_id INT, model VARCHAR, PRIMARY KEY(id)); INSERT INTO ElectricVehicle (id, city_id, model) VALUES (1, 1, 'Tesla Model S'); INSERT INTO ElectricVehicle (id, city_id, model) VALUES (2, 2, 'Tesla Model 3'); INSERT INTO ElectricVehicle (id, city_id, model) VALUES (3, 3, 'Rivian R1T'); CREATE TABLE AutonomousVehicle (id INT, city_id INT, model VARCHAR, PRIMARY KEY(id)); INSERT INTO AutonomousVehicle (id, city_id, model) VALUES (1, 1, 'Wayve'); INSERT INTO AutonomousVehicle (id, city_id, model) VALUES (2, 2, 'NVIDIA'); INSERT INTO AutonomousVehicle (id, city_id, model) VALUES (3, 3, 'Zoox');", "output": "SELECT COUNT(DISTINCT E.model) + COUNT(DISTINCT A.model) as total_models FROM City C LEFT JOIN ElectricVehicle E ON C.id = E.city_id LEFT JOIN AutonomousVehicle A ON C.id = A.city_id WHERE C.population < 3000000;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc724\ub9ac\uc801\uc778 AI \uc774\ub2c8\uc154\ud2f0\ube0c\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai (name VARCHAR(50), location VARCHAR(50), initiatives INT); INSERT INTO ethical_ai (name, location, initiatives) VALUES ('AI Ethics Australia', 'Oceania', 5), ('Ethical Tech NZ', 'Oceania', 7);", "output": "SELECT SUM(initiatives) FROM ethical_ai WHERE location = 'Oceania';"}
{"input": " 'The Guardian'\uacfc 'The New York Times'\uc5d0 \uac8c\uc7ac\ub41c \ucd1d \uae30\uc0ac \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE the_guardian (article_id INT, title TEXT, publish_date DATE, source TEXT); INSERT INTO the_guardian (article_id, title, publish_date, source) VALUES (1, 'Article Title 1', '2022-01-01', 'The Guardian'), (2, 'Article Title 2', '2022-01-02', 'The Guardian'); CREATE TABLE the_new_york_times (article_id INT, title TEXT, publish_date DATE, source TEXT); INSERT INTO the_new_york_times (article_id, title, publish_date, source) VALUES (3, 'Article Title 3', '2022-01-03', 'The New York Times'), (4, 'Article Title 4', '2022-01-04', 'The New York Times');", "output": "SELECT COUNT(*) FROM (SELECT * FROM the_guardian UNION ALL SELECT * FROM the_new_york_times) AS combined"}
{"input": " \ub9f9\uadf8\ub85c\ube0c \uc232\uc5d0\uc11c \ud5e5\ud0c0\ub974\ub2f9 \ud3c9\uade0 \ubaa9\uc7ac \uc218\ud655\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mangrove_forests (id INT, name VARCHAR(255), country VARCHAR(255), hectares INT, volume DECIMAL(10,2)); INSERT INTO mangrove_forests (id, name, country, hectares, volume) VALUES (1, 'Mangrove Forest 1', 'India', 500, 7500), (2, 'Mangrove Forest 2', 'India', 700, 10500);", "output": "SELECT AVG(volume / hectares) FROM mangrove_forests;"}
{"input": " 2015\ub144 \uc774\ud6c4 \uacbd\uc81c\uc131 \uc810\uc218\uac00 50\uc810 \ubbf8\ub9cc\uc778 \ub3d9\ub124\uc5d0\uc11c \uc644\ub8cc\ub41c \uc800\ub834\ud55c \uc8fc\ud0dd \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT PRIMARY KEY, name VARCHAR(50), population INT); CREATE TABLE Neighborhood (id INT PRIMARY KEY, city_id INT, name VARCHAR(50), affordability_score INT); CREATE TABLE Property (id INT PRIMARY KEY, neighborhood_id INT, type VARCHAR(50), price INT, completion_date DATE); CREATE VIEW Affordable_Housing_Properties AS SELECT * FROM Property WHERE type = 'Affordable Housing';", "output": "SELECT Affordable_Housing_Properties.id, Neighborhood.name, Affordable_Housing_Properties.completion_date FROM Affordable_Housing_Properties INNER JOIN Neighborhood ON Affordable_Housing_Properties.neighborhood_id = Neighborhood.id INNER JOIN City ON Neighborhood.city_id = City.id WHERE Neighborhood.affordability_score < 50 AND Affordable_Housing_Properties.completion_date >= '2015-01-01' AND City.id IN (SELECT id FROM City WHERE population > 500000);"}
{"input": " \uc9c0\ub09c \ud574 \ud3c9\uade0 \uae30\uc628\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc791\ubb3c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE crop_temperature (crop_id INT, crop_type VARCHAR(50), timestamp TIMESTAMP, temperature INT);", "output": "SELECT crop_type, AVG(temperature) AS avg_temperature FROM crop_temperature WHERE timestamp >= NOW() - INTERVAL '1 year' GROUP BY crop_type ORDER BY avg_temperature DESC LIMIT 3;"}
{"input": " \uc815\ucc45 \ubd84\uc11d \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ub530\ub974\uba74 \ubaa8\ub4e0 \ubd80\uc11c\uc758 \uacf5\ud1b5 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc815\ucc45\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PolicyAnalysis (id INT, policy VARCHAR(100), department VARCHAR(50)); INSERT INTO PolicyAnalysis (id, policy, department) VALUES (1, 'Data Access Policy', 'Sales'), (2, 'Password Policy', 'Marketing');", "output": "SELECT policy FROM PolicyAnalysis GROUP BY policy HAVING COUNT(DISTINCT department) = (SELECT COUNT(DISTINCT department) FROM PolicyAnalysis);"}
{"input": " 2021\ub144 3\ubd84\uae30\uc5d0 \uccab \uae30\ubd80\ub97c \ud55c \uc2e0\uaddc \uae30\ubd80\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, DonationDate date);", "output": "SELECT COUNT(DISTINCT DonorID) FROM Donors WHERE DonationDate BETWEEN '2021-10-01' AND '2021-12-31' AND DonorID NOT IN (SELECT DonorID FROM Donors WHERE DonationDate < '2021-10-01');"}
{"input": " \uac1c\ubc29\ud615 \uad50\uc721\ud559\uc744 \uc0ac\uc6a9\ud558\uac70\ub098 11\ud559\ub144 \ud559\uc0dd\ub4e4\uc774 \uc218\uac15\ud558\ub294 \uac15\uc88c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Courses (CourseID INT, Name VARCHAR(50), OpenPedagogy BOOLEAN); INSERT INTO Courses (CourseID, Name, OpenPedagogy) VALUES (3, 'Physics', TRUE); INSERT INTO Courses (CourseID, Name, OpenPedagogy) VALUES (4, 'Calculus', FALSE); INSERT INTO Students (StudentID, Name, MentalHealthScore, GradeLevel) VALUES (5, 'Oliver Black', 80, 11);", "output": "SELECT Name FROM Courses WHERE OpenPedagogy = TRUE UNION SELECT Name FROM Students WHERE GradeLevel = 11;"}
{"input": " \uc758\ub8cc \uc751\uae09\uc0c1\ud669 \ubc0f \uc808\ub3c4\ub97c \uc81c\uc678\ud55c \ubc94\uc8c4 \uc720\ud615\uacfc \uc751\uae09 \uc0ac\uac74 \uc720\ud615 \uac04\uc758 \uacb0\ud569\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE emergency_incidents (id INT, incident_type VARCHAR(255)); INSERT INTO emergency_incidents (id, incident_type) VALUES (1, 'Medical Emergency'), (2, 'Fire'), (3, 'Traffic Accident'); CREATE TABLE crime_reports (id INT, report_type VARCHAR(255)); INSERT INTO crime_reports (id, report_type) VALUES (1, 'Theft'), (2, 'Vandalism'), (3, 'Assault');", "output": "SELECT incident_type as event_type FROM emergency_incidents WHERE incident_type NOT IN ('Medical Emergency') UNION SELECT report_type FROM crime_reports WHERE report_type NOT IN ('Theft');"}
{"input": " \uc5ec\uc131 \ud50c\ub808\uc774\uc5b4 \uc911 \uc561\uc158 \uac8c\uc784\uc744 \ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, gender VARCHAR(10), game_genre VARCHAR(20)); INSERT INTO players (id, gender, game_genre) VALUES (1, 'male', 'action'), (2, 'female', 'adventure'), (3, 'male', 'racing'), (4, 'non-binary', 'action'), (5, 'female', 'action');", "output": "SELECT ROUND(100.0 * COUNT(*) / (SELECT COUNT(*) FROM players WHERE game_genre = 'action') , 2) as percentage FROM players WHERE gender = 'female' AND game_genre = 'action';"}
{"input": " 'oceania_hotels' \ubcf4\uae30\uc758 \ud638\ud154\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE VIEW oceania_hotels AS SELECT * FROM hotels WHERE continent = 'Oceania'; CREATE VIEW virtual_tour_stats AS SELECT hotel_id, COUNT(*) as views, DATE_TRUNC('month', timestamp) as month FROM virtual_tours GROUP BY hotel_id, month;", "output": "SELECT l.name, LAG(v.views) OVER (PARTITION BY l.id ORDER BY v.month) as previous_month_views, v.views as current_month_views FROM oceania_hotels l JOIN virtual_tour_stats v ON l.id = v.hotel_id ORDER BY v.month;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ud2b9\uc815 \uac8c\uc784 '\uc5d0\uc774\uc9c0 \uc624\ube0c \ub4dc\ub798\uace4\uc988'\ub97c \ud50c\ub808\uc774\ud55c \uac01 \ud50c\ub7ab\ud3fc \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameSessions (SessionID INT, PlayerID INT, Game VARCHAR(20), Platform VARCHAR(10), StartDate DATETIME); INSERT INTO GameSessions (SessionID, PlayerID, Game, Platform, StartDate) VALUES (1, 1, 'Age of Dragons', 'PC', '2022-01-01 12:00:00');", "output": "SELECT Platform, COUNT(PlayerID) as UsersPlayed FROM GameSessions WHERE Game = 'Age of Dragons' AND StartDate >= CURRENT_DATE - INTERVAL 1 WEEK GROUP BY Platform;"}
{"input": " 2021\ub144 \ub7f0\ub358\uc5d0\uc11c \uacf5\uacf5\ubc84\uc2a4\ub85c \uc774\ub3d9\ud55c \ucd1d \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE public_buses( bus_id INT, route_id INT, start_time TIMESTAMP, end_time TIMESTAMP, total_distance DECIMAL(10,2), city VARCHAR(50));", "output": "SELECT SUM(total_distance) FROM public_buses WHERE city = 'London' AND YEAR(start_time) = 2021;"}
{"input": " \uac01 \uc219\ubc15\uc2dc\uc124 \uc720\ud615\ubcc4, \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \uc81c\uacf5\ub418\ub294 \uc219\ubc15\uc2dc\uc124 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodations (ID INT PRIMARY KEY, Region VARCHAR(50), AccommodationType VARCHAR(50), Quantity INT); INSERT INTO Accommodations (ID, Region, AccommodationType, Quantity) VALUES (1, 'North America', 'Sign Language Interpretation', 300), (2, 'North America', 'Wheelchair Ramp', 250), (3, 'South America', 'Assistive Listening Devices', 150), (4, 'Asia', 'Mobility Assistance', 200), (5, 'Europe', 'Sign Language Interpretation', 400), (6, 'Africa', 'Wheelchair Ramp', 100);", "output": "SELECT Region, AccommodationType, AVG(Quantity) as Average FROM Accommodations GROUP BY Region, AccommodationType;"}
{"input": " 2022\ub144 1\uc6d4 \uc774\ud6c4 \uce90\ub098\ub2e4\uc5d0\uc11c \uba55\uc2dc\ucf54\ub85c \uac00\uc7a5 \ubb34\uac70\uc6b4 \ud654\ubb3c \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (id INT, source VARCHAR(50), destination VARCHAR(50), weight FLOAT, ship_date DATE); INSERT INTO Shipments (id, source, destination, weight, ship_date) VALUES (3, 'Canada', 'Mexico', 900, '2022-01-05'); INSERT INTO Shipments (id, source, destination, weight, ship_date) VALUES (4, 'Canada', 'Mexico', 1200, '2022-02-10'); INSERT INTO Shipments (id, source, destination, weight, ship_date) VALUES (5, 'Canada', 'Mexico', 1500, '2022-03-20');", "output": "SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY weight DESC) as rn FROM Shipments WHERE source = 'Canada' AND destination = 'Mexico' AND ship_date >= '2022-01-01') t WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c\uc8fc 'Field002'\uc5d0 \uae30\ub85d\ub41c \ucd5c\uace0 \uae30\uc628\uc740 \uba87 \ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE temperature_data (id INT, field_id VARCHAR(10), temperature FLOAT, timestamp TIMESTAMP); INSERT INTO temperature_data (id, field_id, temperature, timestamp) VALUES (1, 'Field002', 30.2, '2022-01-01 10:00:00'), (2, 'Field002', 31.0, '2022-01-03 10:00:00');", "output": "SELECT MAX(temperature) FROM temperature_data WHERE field_id = 'Field002' AND timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 7 DAY) AND CURRENT_TIMESTAMP;"}
{"input": " \ub3c4\uc2dc\ubcc4 \ucd1d \uc774\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE users (id INT, name VARCHAR(50), age INT, city VARCHAR(50)); INSERT INTO users (id, name, age, city) VALUES (1, 'Alice', 30, 'New York'); INSERT INTO users (id, name, age, city) VALUES (2, 'Bob', 25, 'Los Angeles'); INSERT INTO users (id, name, age, city) VALUES (3, 'Charlie', 35, 'New York');", "output": "SELECT city, COUNT(*) as total_users FROM users GROUP BY city;"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \"loamy\" \ud1a0\uc591 \uc720\ud615 \uce74\ud14c\uace0\ub9ac\uc758 \ucd1d \ub4e4\ud310 \uba74\uc801\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fields (id INT, field_name VARCHAR(255), area FLOAT, soil_type VARCHAR(255), region VARCHAR(255)); INSERT INTO fields (id, field_name, area, soil_type, region) VALUES (1, 'field1', 10.5, 'loamy', 'Northeast'), (2, 'field2', 12.3, 'sandy', 'South'), (3, 'field3', 8.9, 'loamy', 'Northeast'), (4, 'field4', 15.7, 'clay', 'Midwest');", "output": "SELECT region, SUM(area) FROM fields WHERE soil_type = 'loamy' GROUP BY region;"}
{"input": " \uc5ec\uc131 \ubcc0\ud638\uc0ac\uac00 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT, Gender VARCHAR(255), Specialization VARCHAR(255)); INSERT INTO Attorneys (AttorneyID, Gender, Specialization) VALUES (1, 'Female', 'Civil Law'), (2, 'Male', 'Criminal Law'), (3, 'Female', 'Family Law'); CREATE TABLE Cases (CaseID INT, AttorneyID INT, Outcome VARCHAR(255)); INSERT INTO Cases (CaseID, AttorneyID, Outcome) VALUES (101, 1, 'Won'), (102, 1, 'Lost'), (103, 2, 'Won'), (104, 3, 'Won');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID)) AS Percentage FROM Cases INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Gender = 'Female' AND Outcome = 'Won';"}
{"input": " 'Organic Bistro'\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uc694\ub9ac\uc758 \ud3c9\uade0 \uce7c\ub85c\ub9ac \ud568\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicBistro (dish_name VARCHAR(50), calories INT); INSERT INTO OrganicBistro (dish_name, calories) VALUES ('Quinoa Salad', 400), ('Tofu Stir Fry', 600), ('Veggie Wrap', 500);", "output": "SELECT AVG(calories) FROM OrganicBistro;"}
{"input": " 500\uac1c \uc774\uc0c1\uc758 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \ub3c5\ud2b9\ud55c \uc7a5\ub974\ub97c \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE player_games (player_id INT, genre VARCHAR(10), game VARCHAR(20)); INSERT INTO player_games (player_id, genre, game) VALUES (1, 'RPG', 'Game1'); INSERT INTO player_games (player_id, genre, game) VALUES (1, 'RPG', 'Game2'); INSERT INTO player_games (player_id, genre, game) VALUES (2, 'Strategy', 'Game3');", "output": "SELECT DISTINCT genre FROM player_games WHERE player_id IN (SELECT player_id FROM player_games GROUP BY player_id HAVING COUNT(*) > 500);"}
{"input": " \uc2a4\ub9c8\ud2b8\uc6cc\uce58\ub97c \ubcf4\uc720\ud558\uace0 \uc788\uc73c\uba70 \uc791\ub144\uc5d0 \uac00\uc785\ud55c \ud68c\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Members (MemberID INT, JoinDate DATE, HasSmartwatch BOOLEAN);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Members)) AS Percentage FROM Members WHERE Members.JoinDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND Members.HasSmartwatch = TRUE;"}
{"input": " \ub9cc\uc131\uc9c8\ud658\uc744 \uc553\uace0 \uc788\ub294 \uc778\uad6c\uc758 \uc5f0\ub839\ubcc4 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE population (id INT, age_group VARCHAR(255), chronic_condition BOOLEAN); INSERT INTO population VALUES (1, '0-10', false), (2, '11-20', false), (3, '21-30', true);", "output": "SELECT age_group, (COUNT(*) FILTER (WHERE chronic_condition) * 100.0 / COUNT(*)) AS pct_chronic_condition FROM population GROUP BY age_group;"}
{"input": " 60\uc138 \uc774\uc0c1\uc774\uba70 \uc640\uc774\uc624\ubc0d \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uad00\uc808\uc5fc \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc758 \uc774\ub984\uacfc \uc9c4\ub2e8\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE patients (patient_id INT, patient_name TEXT, age INT, diagnosis TEXT, state TEXT); INSERT INTO patients (patient_id, patient_name, age, diagnosis, state) VALUES (4, 'Wyoming Senior Patient', 65, 'Arthritis', 'Wyoming');", "output": "SELECT patient_name, diagnosis FROM patients WHERE age > 60 AND diagnosis = 'Arthritis' AND state = 'Wyoming';"}
{"input": " \uc81c2\uacf5\uc7a5 '\uae08\uc18d' \ubd80\uc11c\uc758 '\ud558\uae09' \ub178\ub3d9\uc790\ub4e4\uc740 \ub204\uad6c\uc778\uac00?", "context": "CREATE TABLE factories (factory_id INT, department VARCHAR(20)); INSERT INTO factories VALUES (1, 'textile'), (2, 'metal'), (3, 'textile'); CREATE TABLE roles (role_id INT, role_name VARCHAR(20)); INSERT INTO roles VALUES (1, 'junior'), (2, 'senior'), (3, 'manager'); CREATE TABLE workers (worker_id INT, factory_id INT, role_id INT); INSERT INTO workers VALUES (1, 1, 2), (2, 1, 1), (3, 2, 1), (4, 3, 3);", "output": "SELECT w.worker_id, w.factory_id, r.role_name FROM workers w INNER JOIN roles r ON w.role_id = r.role_id INNER JOIN factories f ON w.factory_id = f.factory_id WHERE f.department = 'metal' AND r.role_name = 'junior';"}
{"input": "\uc9c0\ub09c\ub2ec\uc5d0 \uc2ec\uac01\ub3c4\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc704\ud611\uc744 \ubcf4\uace0\ud55c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \uc18c\uc2a4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_intelligence (id INT, source TEXT, severity TEXT, reported_date DATE); INSERT INTO threat_intelligence (id, source, severity, reported_date) VALUES (1, 'FSB', 'low', '2021-02-01'); INSERT INTO threat_intelligence (id, source, severity, reported_date) VALUES (2, 'MI5', 'medium', '2021-03-10'); INSERT INTO threat_intelligence (id, source, severity, reported_date) VALUES (3, 'AIS', 'high', '2021-04-15');", "output": "SELECT source, severity FROM threat_intelligence WHERE reported_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND severity = (SELECT MIN(severity) FROM threat_intelligence WHERE reported_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH));"}
{"input": " 2022\ub144\uc5d0\ub294 \ud55c \ub2ec\uc5d0 \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\ub098\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerDate DATE, VolunteerHours DECIMAL);", "output": "SELECT DATE_TRUNC('month', VolunteerDate) as Month, COUNT(*) as Volunteers FROM Volunteers WHERE VolunteerDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Month;"}
{"input": " \uc8fc\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \ub0a8\ub300\uc11c\uc591 \uc9c0\uc5ed\uc758 1\uc778\ub2f9 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE south_atlantic_water_usage(state VARCHAR(20), usage NUMERIC(10,2), population NUMERIC(10,2)); INSERT INTO south_atlantic_water_usage VALUES ('Delaware', 50.67, 954678), ('Florida', 60.78, 2056789), ('Georgia', 70.89, 1067890), ('Maryland', 80.90, 6178901), ('North Carolina', 90.10, 1089012), ('South Carolina', 100.20, 490123);", "output": "SELECT state, AVG(usage) FROM south_atlantic_water_usage GROUP BY state;"}
{"input": " \uac01 \uc6b0\uc8fc\uad6d\ubcc4\ub85c \uac00\uc7a5 \uc624\ub79c \uc2dc\uac04 \ub3d9\uc548 \uc784\ubb34\ub97c \uc644\uc218\ud55c \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE AstronautMissions (MissionID INT, AstronautID INT, Agency VARCHAR(50), MissionDuration INT); INSERT INTO AstronautMissions (MissionID, AstronautID, Agency, MissionDuration) VALUES (1, 1, 'NASA', 300); INSERT INTO AstronautMissions (MissionID, AstronautID, Agency, MissionDuration) VALUES (2, 2, 'NASA', 400); INSERT INTO AstronautMissions (MissionID, AstronautID, Agency, MissionDuration) VALUES (3, 3, 'Roscosmos', 500); INSERT INTO AstronautMissions (MissionID, AstronautID, Agency, MissionDuration) VALUES (4, 4, 'Roscosmos', 200); INSERT INTO AstronautMissions (MissionID, AstronautID, Agency, MissionDuration) VALUES (5, 5, 'ESA', 250);", "output": "SELECT AstronautID, Agency, MAX(MissionDuration) AS Max_Mission_Duration, RANK() OVER (PARTITION BY Agency ORDER BY MAX(MissionDuration) DESC) AS Max_Mission_Duration_Rank FROM AstronautMissions GROUP BY AstronautID, Agency;"}
{"input": " 2021\ub144 \uac01 \uc120\ub2e8\ubcc4\ub85c \ubc14\ub2e4\uc5d0\uc11c \uc190\uc2e4\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fleets (fleet_id INT, name VARCHAR(255)); INSERT INTO fleets (fleet_id, name) VALUES (1, 'Fleet A'), (2, 'Fleet B'); CREATE TABLE vessels (vessel_id INT, fleet_id INT, type VARCHAR(255)); INSERT INTO vessels (vessel_id, fleet_id, type) VALUES (1, 1, 'Cargo Ship'), (2, 2, 'Cargo Ship'); CREATE TABLE container_losses (vessel_id INT, loss_date DATE, lost_containers INT); INSERT INTO container_losses (vessel_id, loss_date, lost_containers) VALUES (1, '2021-01-01', 50), (1, '2021-02-01', 30), (2, '2021-03-01', 80);", "output": "SELECT f.name, SUM(cl.lost_containers) FROM container_losses cl JOIN vessels v ON cl.vessel_id = v.vessel_id JOIN fleets f ON v.fleet_id = f.fleet_id WHERE cl.loss_date >= '2021-01-01' AND cl.loss_date < '2022-01-01' GROUP BY f.name;"}
{"input": " 2018\ub144\uc5d0 \uc644\ub8cc\ub418\uc9c0 \uc54a\uc740 \ud398\ub8e8\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uacc4\ud68d\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_development (id INT, country VARCHAR(50), year INT, initiative VARCHAR(50), completed BOOLEAN); INSERT INTO community_development (id, country, year, initiative, completed) VALUES (1, 'Peru', 2018, 'Education', FALSE);", "output": "SELECT COUNT(*) FROM community_development WHERE country = 'Peru' AND year = 2018 AND completed = FALSE;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc778\ub3c4\uc5d0\uc11c \uc9c4\ud589\ub41c \uad6d\ubc29 \uc678\uad50 \ud589\uc0ac\uc758 \ud3c9\uade0 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE defense_diplomacy (country VARCHAR(50), year INT, event_count INT); INSERT INTO defense_diplomacy (country, year, event_count) VALUES ('India', 2015, 5), ('India', 2016, 6), ('India', 2017, 7), ('India', 2018, 8), ('India', 2019, 9), ('India', 2020, 10);", "output": "SELECT AVG(event_count) FROM defense_diplomacy WHERE country = 'India' AND year BETWEEN 2015 AND 2020;"}
{"input": " \uc9c0\uc911\ud574\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc9c0\uc5ed\uc758 \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site (site_id INT, name TEXT, depth FLOAT); INSERT INTO site (site_id, name, depth) VALUES (1, 'Mediterranean', 5000.0);", "output": "SELECT MAX(depth) FROM site WHERE name = 'Mediterranean'"}
{"input": " \uc774\ub3d9\ud1b5\uc2e0\uc0ac\ubcc4 \uace0\uac1d\ubd88\ub9cc \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE customer_complaints (complaint_id INT, carrier VARCHAR(50)); INSERT INTO customer_complaints (complaint_id, carrier) VALUES (1, 'Verizon'), (2, 'AT&T'), (3, 'Verizon'), (4, 'T-Mobile'); CREATE VIEW complaint_count_view AS SELECT carrier, COUNT(*) as complaint_count FROM customer_complaints GROUP BY carrier;", "output": "SELECT carrier, complaint_count, complaint_count/SUM(complaint_count) OVER (PARTITION BY carrier) as complaint_percentage FROM complaint_count_view;"}
{"input": " \uac01 \uae30\uacc4 \ubaa8\ub378\uc758 \ud3c9\uade0 \uc720\uc9c0 \uad00\ub9ac \uae30\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE machines (id INT, model VARCHAR(50), year INT, status VARCHAR(50), maintenance_start_date DATE, maintenance_end_date DATE); INSERT INTO machines (id, model, year, status, maintenance_start_date, maintenance_end_date) VALUES (1, 'CNC Mill', 2015, 'Operational', '2021-02-01', '2021-02-03'); INSERT INTO machines (id, model, year, status, maintenance_start_date, maintenance_end_date) VALUES (2, '3D Printer', 2018, 'Under Maintenance', '2022-05-10', '2022-05-12');", "output": "SELECT model, AVG(DATEDIFF(day, maintenance_start_date, maintenance_end_date)) as avg_maintenance_duration FROM machines GROUP BY model;"}
{"input": " '\ud574\uc800\ud0d0\uc0ac\ud559\ud68c'\uac00 \uc8fc\ub3c4\ud558\ub294 \ubaa8\ub4e0 \ud0d0\ud5d8\uc758 \ud3c9\uade0 \uc218\uc2ec\uc740 \uc5b4\ub290 \uc815\ub3c4\uc778\uac00?", "context": "CREATE TABLE Expeditions (ExpeditionID INT, Society VARCHAR(25)); INSERT INTO Expeditions (ExpeditionID, Society) VALUES (1, 'Undersea Exploration Society'), (2, 'Oceanic Research Foundation');", "output": "SELECT AVG(Depth) FROM (SELECT Depth FROM Expeditions JOIN ExpeditionDetails ON Expeditions.ExpeditionID = ExpeditionDetails.ExpeditionID WHERE Society = 'Undersea Exploration Society' GROUP BY ExpeditionID) AS Subquery;"}
{"input": " \ub3c4\uc790\uae30 \uc804\ubb38 \uc804\ubb38\uac00\uac00 \ubd84\uc11d\ud55c \uc720\ubb3c\uc758 \ucd1d \uac1c\uc218\uc640, \uac00\uc7a5 \ub9ce\uc774 \ubd84\uc11d\ub41c \uc720\ubb3c\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Artifacts (id INT, site VARCHAR(50), artifact_name VARCHAR(50), date_found DATE, description TEXT, analyzed_by VARCHAR(50), analyzed_date DATE); INSERT INTO Artifacts (id, site, artifact_name, date_found, description, analyzed_by, analyzed_date) VALUES (1, 'Site1', 'Pottery', '2020-01-01', 'Fine pottery with unique symbols', 'Expert3', '2021-01-01'), (2, 'Site2', 'Clay Figurine', '2019-02-01', 'Small clay figure of a human', 'Expert4', '2021-02-01'); CREATE TABLE Experts (id INT, name VARCHAR(50), expertise VARCHAR(50), country VARCHAR(50)); INSERT INTO Experts (id, name, expertise, country) VALUES (3, 'Expert3', 'Ceramics', 'Country1'), (4, 'Expert4', 'Sculpture', 'Country2');", "output": "SELECT SUM(a.artifact_count) as total_artifacts, e.name as expert_name FROM (SELECT analyzed_by, COUNT(id) as artifact_count FROM Artifacts WHERE analyzed_by IN (SELECT name FROM Experts WHERE expertise = 'Ceramics') GROUP BY analyzed_by) a JOIN (SELECT name, MAX(artifact_count) as max_artifacts FROM (SELECT analyzed_by, COUNT(id) as artifact_count FROM Artifacts WHERE analyzed_by IN (SELECT name FROM Experts WHERE expertise = 'Ceramics') GROUP BY analyzed_by) b GROUP BY name) c ON a.artifact_count = c.max_artifacts JOIN Experts e ON a.analyzed_by = e.name;"}
{"input": " 2020\ub144\uc5d0 \uc784\uc0c1\uc2dc\ud5d8\uc774 \uac00\uc7a5 \ub9ce\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clinical_trials (country TEXT, year INTEGER, trials INTEGER); INSERT INTO clinical_trials (country, year, trials) VALUES ('United States', 2020, 1200); INSERT INTO clinical_trials (country, year, trials) VALUES ('Germany', 2020, 300);", "output": "SELECT country, SUM(trials) FROM clinical_trials WHERE year = 2020 GROUP BY country ORDER BY SUM(trials) DESC;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ub9e4\ucd9c \uc131\uc7a5\uc774 \uac00\uc7a5 \ub192\uc740 \ucc9c\uc5f0 \uc2a4\ud0a8\ucf00\uc5b4 \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE skincare_revenue (id INT, brand VARCHAR(50), revenue DECIMAL(10,2), year INT, country VARCHAR(50)); INSERT INTO skincare_revenue (id, brand, revenue, year, country) VALUES (1, 'Brand C', 1000.00, 2021, 'USA');", "output": "SELECT brand, (revenue - LAG(revenue, 1) OVER (PARTITION BY brand ORDER BY year)) / ABS(LAG(revenue, 1) OVER (PARTITION BY brand ORDER BY year)) * 100.0 AS growth_percentage FROM skincare_revenue WHERE country = 'USA' AND revenue IS NOT NULL GROUP BY brand, revenue, year HAVING growth_percentage IS NOT NULL ORDER BY growth_percentage DESC;"}
{"input": " \uac01 \ub514\uc790\uc774\ub108\uac00 \uc0dd\uc0b0\ud55c \uc758\ub958\uc758 \ucd1d \uc218\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE designer (id INT PRIMARY KEY, name VARCHAR(255), country_origin VARCHAR(255)); CREATE TABLE garment (id INT PRIMARY KEY, garment_name VARCHAR(255), quantity INT, price DECIMAL(5,2)); CREATE TABLE designer_garments (id INT PRIMARY KEY, designer_id INT, garment_id INT, FOREIGN KEY (designer_id) REFERENCES designer(id), FOREIGN KEY (garment_id) REFERENCES garment(id)); INSERT INTO designer (id, name, country_origin) VALUES (1, 'Neha', 'India'), (2, 'Alex', 'USA'); INSERT INTO garment (id, garment_name, quantity, price) VALUES (1, 'Rayon', 100, 15.00), (2, 'Silk', 0, 0), (3, 'Cotton', 200, 20.00); INSERT INTO designer_garments (id, designer_id, garment_id) VALUES (1, 1, 1), (2, 1, 3), (3, 2, 1), (4, 2, 3);", "output": "SELECT designer.name, SUM(garment.quantity) as total_quantity FROM designer INNER JOIN designer_garments ON designer.id = designer_garments.designer_id INNER JOIN garment ON designer_garments.garment_id = garment.id GROUP BY designer.name;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc2a4\ud2b8\ub9ac\ubc0d\ub41c K-pop \ub178\ub798 \uc0c1\uc704 5\uac1c\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE music_streaming (id INT, user_id INT, artist VARCHAR(50), song VARCHAR(50), genre VARCHAR(20), streamed_on DATE, streams INT); CREATE VIEW song_streams AS SELECT song, streamed_on, SUM(streams) AS total_streams FROM music_streaming GROUP BY song, streamed_on;", "output": "SELECT song, total_streams FROM song_streams WHERE genre = 'K-pop' AND user_id IN (SELECT id FROM users WHERE country = 'United States') ORDER BY total_streams DESC LIMIT 5;"}
{"input": " \uc138\uacc4\uc5d0\uc11c \uc778\uad6c\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\uc758 \uc815\ucc45 \uc900\uc218\uc728\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE policy_compliance (id INT, country VARCHAR(255), policy_name VARCHAR(255), compliance_percentage DECIMAL(5,2)); INSERT INTO policy_compliance (id, country, policy_name, compliance_percentage) VALUES (1, 'China', 'Data Encryption', 90.5), (2, 'India', 'Access Control', 85.2), (3, 'USA', 'Incident Response', 92.7);", "output": "SELECT country, AVG(compliance_percentage) AS avg_compliance_rate FROM policy_compliance WHERE country IN ('China', 'India', 'USA') GROUP BY country ORDER BY avg_compliance_rate DESC LIMIT 3;"}
{"input": " \uc5f0\uad6c\ube44 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub300\ud559\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc218\uc5ec\ub41c \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE graduate_programs (program_id INT, program_name VARCHAR(50), discipline VARCHAR(50)); INSERT INTO graduate_programs (program_id, program_name, discipline) VALUES (1, 'Physics', 'sciences'), (2, 'Biology', 'sciences'), (3, 'Chemistry', 'sciences'); CREATE TABLE research_grants (grant_id INT, program_id INT, grant_amount DECIMAL(10,2)); INSERT INTO research_grants (grant_id, program_id, grant_amount) VALUES (1, 1, 50000), (2, 1, 75000), (3, 2, 35000), (4, 3, 10000), (5, 3, 15000);", "output": "SELECT program_name, SUM(grant_amount) as total_grant_amount FROM (SELECT program_name, grant_amount, ROW_NUMBER() OVER (ORDER BY SUM(grant_amount) DESC) as program_rank FROM graduate_programs JOIN research_grants ON graduate_programs.program_id = research_grants.program_id GROUP BY program_name) as top_programs WHERE program_rank <= 3 GROUP BY program_name;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8 \ud56d\ubaa9\uc5d0 \uae30\ubd80\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DonorPrograms (DonorID INT, ProgramID INT); INSERT INTO DonorPrograms (DonorID, ProgramID) VALUES (1, 101), (1, 102), (2, 102), (3, 103), (3, 104); CREATE TABLE ProgramCategories (CategoryID INT, Category TEXT); INSERT INTO ProgramCategories (CategoryID, Category) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'), (4, 'Other'); CREATE TABLE Donations (DonationID INT, DonorID INT, Amount DECIMAL); INSERT INTO Donations (DonationID, DonorID, Amount) VALUES (1, 1, 500), (2, 1, 750), (3, 2, 1000), (4, 3, 200), (5, 3, 300);", "output": "SELECT PC.Category, COUNT(DP.DonorID) AS NumVolunteers, SUM(D.Amount) AS TotalDonated  FROM DonorPrograms DP  INNER JOIN Donations D ON DP.DonorID = D.DonorID  INNER JOIN Programs P ON DP.ProgramID = P.ProgramID  INNER JOIN ProgramCategories PC ON P.CategoryID = PC.CategoryID  GROUP BY PC.Category;"}
{"input": " \ud3c9\uade0 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc744 \uae30\uc900\uc73c\ub85c \uc544\uc2dc\uc544\uc5d0\uc11c \uac00\uc7a5 \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc801\uc778 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE countries (name VARCHAR(255), energy_efficiency_rating FLOAT); INSERT INTO countries (name, energy_efficiency_rating) VALUES ('Japan', 5.5), ('China', 3.2), ('India', 4.1), ('Singapore', 5.9), ('Thailand', 4.7);", "output": "SELECT name FROM (SELECT name, ROW_NUMBER() OVER (ORDER BY energy_efficiency_rating DESC) as rn FROM countries WHERE name IN ('Japan', 'China', 'India', 'Singapore', 'Thailand')) t WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \uad6d\uac00\ubcc4\ub85c \ubc30\ud3ec\ub41c \ube44\uc0c1\uc6a9\ud488\uc758 \ud3c9\uade0 \uc218\ub7c9\uc744 \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Emergency_Supplies ( id INT PRIMARY KEY, supply VARCHAR(255), country_id INT, quantity INT, supply_date DATE ); INSERT INTO Emergency_Supplies (id, supply, country_id, quantity, supply_date) VALUES (1, 'Tents', 1, 100, '2021-01-01'), (2, 'Food', 2, 200, '2021-02-01');", "output": "SELECT country_id, AVG(quantity) FROM Emergency_Supplies WHERE EXTRACT(MONTH FROM supply_date) = EXTRACT(MONTH FROM CURRENT_DATE - INTERVAL '1' MONTH) GROUP BY country_id;"}
{"input": " 2022\ub144 1\ubd84\uae30 \ub3c5\uc77c\uc5d0\uc11c \ud310\ub9e4\ub41c \uc0c1\uc704 3\ub300 \uc804\uae30 \uc790\ub3d9\ucc28\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EV_Sales (Country VARCHAR(20), Quarter INT, Model VARCHAR(30), Sales INT); INSERT INTO EV_Sales (Country, Quarter, Model, Sales) VALUES ('Germany', 1, 'Tesla Model 3', 5000), ('Germany', 1, 'Volkswagen ID.4', 4000), ('Germany', 1, 'Nissan Leaf', 3000), ('Germany', 1, 'Audi e-Tron', 2500), ('Germany', 1, 'BMW i3', 2000), ('Germany', 1, 'Ford Mustang Mach-E', 1500);", "output": "SELECT Model, Sales FROM EV_Sales WHERE Country = 'Germany' AND Quarter = 1 ORDER BY Sales DESC LIMIT 3;"}
{"input": "Apple Music\uc5d0\uc11c \ub0a8\uc131 \uc194\ub85c \uc544\ud2f0\uc2a4\ud2b8\uc640 \uc5ec\uc131 \uc194\ub85c \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc2a4\ud2b8\ub9ac\ubc0d \uc218\uc5d0 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE ArtistStreamingData (ArtistID INT, ArtistGender VARCHAR(10), Platform VARCHAR(50), Streams INT); INSERT INTO ArtistStreamingData (ArtistID, ArtistGender, Platform, Streams) VALUES (1, 'Female', 'Apple Music', 1000000), (2, 'Male', 'Apple Music', 1500000);", "output": "SELECT (SELECT SUM(Streams) FROM ArtistStreamingData WHERE ArtistGender = 'Female') - (SELECT SUM(Streams) FROM ArtistStreamingData WHERE ArtistGender = 'Male') AS Difference;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visitors (id INT, name TEXT, country TEXT, age INT); INSERT INTO visitors VALUES (1, 'John', 'USA', 30);", "output": "SELECT SUM(visitors.rows) FROM (SELECT * FROM visitors WHERE country = 'USA' UNION ALL SELECT * FROM visitors WHERE country = 'Canada') AS visitors;"}
{"input": " \uc774\ubca4\ud2b8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c '\ub304\uc2a4' \uce74\ud14c\uace0\ub9ac \uc774\ubca4\ud2b8\uc758 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE event_attendance (id INT, event_name TEXT, event_type TEXT, attendee_count INT); INSERT INTO event_attendance (id, event_name, event_type, attendee_count) VALUES (1, 'Ballet Performance', 'Performance', 100), (2, 'Dance Workshop', 'Workshop', 50);", "output": "SELECT event_type, SUM(attendee_count) FROM event_attendance WHERE event_name IN (SELECT event_name FROM events WHERE event_category = 'dance') GROUP BY event_type;"}
{"input": " \uc8fc\ubcc4 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc704\ubc18 \ubc8c\uae08 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE violations (violation_id INT, violation_date DATE, violation_details VARCHAR(255), fine_amount INT, state_id INT);", "output": "SELECT AVG(fine_amount) as avg_fine_amount, state_id FROM violations GROUP BY state_id;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ud3c9\uc0dd \ud559\uc2b5 \ud504\ub85c\uadf8\ub7a8 \ub4f1\ub85d\uc774 \uac10\uc18c\ud55c \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning (student_id INT, district_id INT, year INT, enrolled BOOLEAN); INSERT INTO lifelong_learning (student_id, district_id, year, enrolled) VALUES (1, 1001, 2016, true), (2, 1001, 2017, true), (3, 1001, 2018, false), (4, 1001, 2019, false), (5, 1001, 2020, true), (6, 1002, 2016, true), (7, 1002, 2017, true), (8, 1002, 2018, false), (9, 1002, 2019, false), (10, 1002, 2020, false);", "output": "SELECT district_id, year, CASE WHEN LAG(enrolled) OVER (PARTITION BY district_id ORDER BY year) = true AND enrolled = false THEN 1 ELSE 0 END as enrollment_decreased FROM lifelong_learning WHERE year BETWEEN 2016 AND 2020 GROUP BY district_id, year HAVING SUM(enrollment_decreased) > 0;"}
{"input": " \uacf5\uacfc\ub300\ud559\uc5d0 \uc5f0\uad6c\ube44\ub97c 1\ud68c \uc774\uc0c1 \uc9c0\uc6d0\ud558\ub294 \uc5ec\uad50\uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE department (name VARCHAR(255), id INT);CREATE TABLE professor (name VARCHAR(255), gender VARCHAR(255), department_id INT, grant_amount DECIMAL(10,2));", "output": "SELECT COUNT(DISTINCT name) FROM professor WHERE gender = 'Female' AND department_id IN (SELECT id FROM department WHERE name = 'Engineering') AND grant_amount IS NOT NULL;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc9c0\uc5ed\uc758 \ucd1d \uac15\uc6b0\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Rainfall (id INT, timestamp DATE, region TEXT, rainfall REAL);", "output": "SELECT region, SUM(rainfall) as total_rainfall FROM Rainfall WHERE timestamp >= DATEADD(MONTH, -3, CURRENT_DATE) GROUP BY region;"}
{"input": "\ud559\uc220 \ub17c\ubb38\uc744 \ubc1c\ud45c\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ub300\ud559\uc6d0\uc0dd\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE paper (id INT, student_id INT); INSERT INTO paper (id, student_id) VALUES (1, 1), (2, 2), (3, 3); CREATE TABLE student (id INT, name TEXT); INSERT INTO student (id, name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'), (4, 'Diana');", "output": "SELECT name FROM student WHERE id NOT IN (SELECT student_id FROM paper);"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uae30\ub300 \uc218\uba85\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_name VARCHAR(50), region VARCHAR(50), life_expectancy FLOAT); INSERT INTO countries (country_name, region, life_expectancy) VALUES ('Canada', 'North America', 82.2), ('Mexico', 'North America', 75.5);", "output": "SELECT region, AVG(life_expectancy) as avg_life_expectancy FROM countries GROUP BY region;"}
{"input": " '\ub274\uc695' \uc0ac\ubb34\uc2e4\uc5d0\uc11c \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE offices (office_id INT, office_name VARCHAR(20), city VARCHAR(20), state VARCHAR(20)); INSERT INTO offices (office_id, office_name, city, state) VALUES (1, 'Boston', 'Boston', 'MA'), (2, 'New York', 'New York', 'NY'); CREATE TABLE attorneys (attorney_id INT, office_id INT); INSERT INTO attorneys (attorney_id, office_id) VALUES (1, 1), (2, 2); CREATE TABLE cases (case_id INT, attorney_id INT); INSERT INTO cases (case_id, attorney_id) VALUES (1, 1), (2, 2);", "output": "SELECT COUNT(*) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id JOIN offices ON attorneys.office_id = offices.office_id WHERE offices.city = 'New York';"}
{"input": " \uac01 \ubd80\uc11c\uc758 \ub0a8\uc9c1\uc6d0\uacfc \uc5ec\uc9c1\uc6d0\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name VARCHAR(255)); INSERT INTO departments (department_id, department_name) VALUES (1, 'HR'), (2, 'IT'), (3, 'Marketing'); CREATE TABLE employees (employee_id INT, employee_name VARCHAR(255), department_id INT, gender VARCHAR(10)); INSERT INTO employees (employee_id, employee_name, department_id, gender) VALUES (1, 'John Doe', 1, 'Male'), (2, 'Jane Smith', 2, 'Female'), (3, 'Alice Johnson', 3, 'Female'), (4, 'Bob Brown', 1, 'Male');", "output": "SELECT department_id, department_name, gender, COUNT(*) OVER (PARTITION BY department_id, gender) as total_per_gender FROM departments d JOIN employees e ON d.department_id = e.department_id;"}
{"input": " \ubd80\uc11c\ubcc4 \ucd1d\uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CityBudget (CityName VARCHAR(50), Department VARCHAR(50), Budget INT); INSERT INTO CityBudget (CityName, Department, Budget) VALUES ('CityA', 'Parks', 5000000), ('CityA', 'Roads', 7000000), ('CityB', 'Parks', 6000000), ('CityB', 'Roads', 8000000);", "output": "SELECT CityName, Department, SUM(Budget) OVER(PARTITION BY Department ORDER BY SUM(Budget) DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as TotalBudget FROM CityBudget GROUP BY CityName, Department;"}
{"input": " \uc9c0\ub09c \ub2ec \ub370\uc774\ud130 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \uc911\ub3d9\uc758 \ubaa8\ub4e0 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE mobile_subscribers (id INT, region VARCHAR(20), data_usage INT, usage_date DATE);", "output": "SELECT m.id, m.region, m.data_usage, m.usage_date FROM mobile_subscribers m LEFT JOIN (SELECT subscriber_id FROM mobile_subscribers WHERE usage_date > DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)) d ON m.id = d.subscriber_id WHERE m.region = 'Middle East' AND d.subscriber_id IS NULL;"}
{"input": " 2022\ub144 \uc9c0\uc5ed\ubcc4 \uad70\uc7a5\ube44 \ud310\ub9e4 \ud3c9\uade0\uac12\uc744 \uad6c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE military_sales_9 (id INT, region VARCHAR, year INT, value FLOAT);", "output": "SELECT region, AVG(value) AS avg_value FROM military_sales_9 WHERE year = 2022 GROUP BY region;"}
{"input": " 2018\ub144 \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uad6d\uac00\uc5d0\uc11c \uc911\uad6d\uc73c\ub85c \uc218\uc785\ub41c \uac00\ub3cc\ub9ac\ub284\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE imports (id INT, element TEXT, source TEXT, quantity INT, import_date DATE);", "output": "SELECT SUM(quantity) FROM imports WHERE element = 'Gadolinium' AND source IN (SELECT name FROM countries WHERE region = 'Asia Pacific') AND YEAR(import_date) = 2018;"}
{"input": " 2020\ub144 LGBTQ+ \ucee4\ubba4\ub2c8\ud2f0 \ubc29\ubb38\uc790\uc758 \ud3c9\uade0 \ub514\uc9c0\ud138 \uc0c1\ud638 \uc791\uc6a9 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Interaction_Scores (visitor_id INT, community_name VARCHAR(100), year INT, score INT);", "output": "SELECT AVG(score) FROM Interaction_Scores WHERE community_name = 'LGBTQ+' AND year = 2020;"}
{"input": " 2021\ub144 3\uc6d4\uacfc 4\uc6d4\uc5d0 '\uc911\ub3d9' \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4\uc5d0 \ucc38\uc5ec\ud55c \uc0ac\uc6a9\uc790 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users(user_id INT, user_region TEXT); INSERT INTO users(user_id, user_region) VALUES (1, 'Middle East'); CREATE TABLE virtual_tours(tour_id INT, tour_date DATE); CREATE TABLE user_tour_interactions(user_id INT, tour_id INT);", "output": "SELECT COUNT(DISTINCT u.user_id) FROM users u INNER JOIN user_tour_interactions uti ON u.user_id = uti.user_id INNER JOIN virtual_tours vt ON uti.tour_id = vt.tour_id WHERE u.user_region = 'Middle East' AND MONTH(vt.tour_date) IN (3, 4) AND YEAR(vt.tour_date) = 2021;"}
{"input": " \uc804\uad6d \ud3c9\uade0\ubcf4\ub2e4 \uc8fc\ud0dd \uac00\uaca9 \uc911\uc559\uac12\uc774 \ub192\uc740 \uc6b0\ud3b8\ubc88\ud638\uc5d0 \uac70\uc8fc\ud558\ub294 \uac01 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uc774\ub984\uacfc \uc8fc\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policyholder (policyholder_id INT, name VARCHAR(50), address VARCHAR(100), zip_code INT); CREATE TABLE zip_codes (zip_code INT, median_home_value INT);", "output": "SELECT policyholder.name, policyholder.address FROM policyholder JOIN zip_codes ON policyholder.zip_code = zip_codes.zip_code WHERE median_home_value > (SELECT AVG(median_home_value) FROM zip_codes);"}
{"input": "\uc720\ub7fd \uc21c\ud658 \uacbd\uc81c\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac \ube0c\ub79c\ub4dc\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (sale_id INT, material_id INT, revenue DECIMAL(10,2)); CREATE TABLE Materials (material_id INT, material_name VARCHAR(50), sustainable BOOLEAN); CREATE TABLE CircularEconomy (material_id INT, circular_economy BOOLEAN); CREATE TABLE Brands (brand_id INT, brand_name VARCHAR(50), ethical BOOLEAN); CREATE TABLE BrandMaterials (brand_id INT, material_id INT);", "output": "SELECT M.material_name, SUM(S.revenue) as total_revenue FROM Sales S INNER JOIN Materials M ON S.material_id = M.material_id INNER JOIN CircularEconomy CE ON M.material_id = CE.material_id INNER JOIN BrandMaterials BM ON M.material_id = BM.material_id INNER JOIN Brands B ON BM.brand_id = B.brand_id WHERE M.sustainable = TRUE AND CE.circular_economy = TRUE AND B.region = 'Europe' GROUP BY M.material_name;"}
{"input": " e\uc2a4\ud3ec\uce20 \uacbd\uae30\uc5d0 \ucc38\uac00\ud558\uc9c0 \uc54a\uc740 25\uc138 \uc774\uc0c1\uc758 \ud50c\ub808\uc774\uc5b4\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10));CREATE TABLE EsportsEvents (EventID INT, PlayerID INT, EventType VARCHAR(20));", "output": "DELETE FROM Players WHERE PlayerID NOT IN (SELECT EsportsEvents.PlayerID FROM EsportsEvents) AND Age > 25;"}
{"input": " Tier 1 \ud22c\uc790\uc790\ub85c\ubd80\ud130 \uc790\uae08\uc744 \ubc1b\uc9c0 \ubabb\ud55c \ud68c\uc0ac\ub97c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Founders (id INT, name TEXT); INSERT INTO Founders (id, name) VALUES (1, 'First Founders'); INSERT INTO Founders (id, name) VALUES (2, 'Green Startup'); CREATE TABLE Investors (id INT, tier TEXT, name TEXT); INSERT INTO Investors (id, tier, name) VALUES (1, 'Tier 1', 'Sequoia'); CREATE TABLE Investments (investor_id INT, company_name TEXT); INSERT INTO Investments (investor_id, company_name) VALUES (1, 'First Founders');", "output": "SELECT Founders.name FROM Founders LEFT JOIN Investments ON Founders.name = Investments.company_name LEFT JOIN Investors ON Investments.investor_id = Investors.id WHERE Investors.tier IS NULL;"}
{"input": " \uac01 \ubd84\uc0b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc77c\uc77c \uac70\ub798\ub7c9\uc5d0 \ub300\ud55c 3\uac1c\uc6d4 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dapps (id INT, name VARCHAR(50), daily_tx_volume INT); INSERT INTO dapps (id, name, daily_tx_volume) VALUES (1, 'App1', 1000), (2, 'App2', 2000), (3, 'App3', 3000);", "output": "SELECT name, AVG(daily_tx_volume) OVER (PARTITION BY name ORDER BY id ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as moving_avg FROM dapps;"}
{"input": " \ubaa8\ub4e0 \uc774\ub2c8\uc154\ud2f0\ube0c \uc720\ud615\uc5d0 \ub300\ud574 \ubcf4\uc870\uae08\uc744 \ubc1b\uc740 \uc870\uc9c1\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE initiative_types (id INT, initiative_type TEXT); INSERT INTO initiative_types (id, initiative_type) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'), (4, 'Social Services');", "output": "SELECT organization_id FROM grants GROUP BY organization_id HAVING COUNT(DISTINCT initiative_type) = (SELECT COUNT(*) FROM initiative_types);"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud14d\uc0ac\uc2a4 \ub0b4 \ub808\uc2a4\ud1a0\ub791\uc5d0 \ub300\ud55c \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac \ud69f\uc218\uc640 \uc704\ubc18 \uac80\uc0ac \ube44\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Inspections (InspectionID INT, RestaurantID INT, InspectionDate DATETIME, ViolationCount INT);", "output": "SELECT RestaurantID, COUNT(*) OVER (PARTITION BY RestaurantID) as TotalInspections, (COUNT(*) FILTER (WHERE ViolationCount > 0) OVER (PARTITION BY RestaurantID) * 100.0 / COUNT(*) OVER (PARTITION BY RestaurantID)) as ViolationPercentage FROM Inspections WHERE RestaurantID IN (SELECT RestaurantID FROM Restaurants WHERE State = 'Texas') AND InspectionDate > CURRENT_DATE - INTERVAL '6 months';"}
{"input": " \ubc88\ud638\ud310 XYZ123 \ucc28\ub7c9\uc758 \ub2e4\uc74c \uc815\ube44\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicles (vehicle_id INT PRIMARY KEY, license_plate VARCHAR(255), model VARCHAR(255), year INT); INSERT INTO Vehicles (vehicle_id, license_plate, model, year) VALUES (2, 'XYZ123', 'Bus', 2018); CREATE TABLE Maintenance (maintenance_id INT PRIMARY KEY, vehicle_id INT, last_maintenance_date DATE, next_maintenance_date DATE); INSERT INTO Maintenance (maintenance_id, vehicle_id, last_maintenance_date, next_maintenance_date) VALUES (1, 2, '2022-02-01', '2022-05-01');", "output": "SELECT m.next_maintenance_date FROM Maintenance m WHERE m.vehicle_id = (SELECT v.vehicle_id FROM Vehicles v WHERE v.license_plate = 'XYZ123');"}
{"input": " \ubb38\ud654 \uc5ed\ub7c9 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(50), cultural_competency_score INT); INSERT INTO community_health_workers (id, name, cultural_competency_score) VALUES (1, 'John Doe', 90), (2, 'Jane Smith', 85);", "output": "SELECT name, cultural_competency_score, RANK() OVER (ORDER BY cultural_competency_score DESC) as rank FROM community_health_workers;"}
{"input": " \uad6d\uc81c\uc6b0\uc8fc\uc815\uac70\uc7a5\uc5d0 \uac04 \ucd5c\ucd08\uc774\uc790 \ub9c8\uc9c0\ub9c9 \uc5ec\uc131 \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE astronauts (id INT, name VARCHAR(50), gender VARCHAR(10), nationality VARCHAR(50)); CREATE TABLE space_missions (id INT, mission_name VARCHAR(50), launch_date DATE, return_date DATE, astronaut_id INT);", "output": "SELECT astronauts.name FROM astronauts INNER JOIN space_missions ON astronauts.id = space_missions.astronaut_id WHERE gender = 'Female' AND space_missions.mission_name = 'International Space Station' GROUP BY astronauts.name ORDER BY launch_date LIMIT 1; SELECT astronauts.name FROM astronauts INNER JOIN space_missions ON astronauts.id = space_missions.astronaut_id WHERE gender = 'Female' AND space_missions.mission_name = 'International Space Station' GROUP BY astronauts.name ORDER BY return_date DESC LIMIT 1;"}
{"input": " \ubaa8\ub4e0 \uace0\uac1d\uc758 \ub204\uacc4 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(255), country VARCHAR(255), balance DECIMAL(10, 2)); INSERT INTO customers (id, name, country, balance) VALUES (1, 'John Doe', 'USA', 5000.00), (2, 'Jane Smith', 'Canada', 7000.00), (3, 'Alice Johnson', 'UK', 8000.00);", "output": "SELECT id, SUM(balance) OVER (ORDER BY id) FROM customers;"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc544\ud504\ub9ac\uce74 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE africa_emissions (country VARCHAR(50), year INT, co2_emissions INT); INSERT INTO africa_emissions (country, year, co2_emissions) VALUES ('South Africa', 2011, 450000), ('South Africa', 2012, 460000), ('Egypt', 2011, 250000), ('Egypt', 2012, 260000);", "output": "SELECT country, SUM(co2_emissions) as total_emissions, RANK() OVER (ORDER BY SUM(co2_emissions) DESC) as rank FROM africa_emissions WHERE country IN ('South Africa', 'Egypt', 'Nigeria') AND year BETWEEN 2012 AND 2021 GROUP BY country;"}
{"input": " \uac01 \ub300\ub959\uc758 \ud0dc\uc591\uad11 \ubc1c\uc804\uc18c\uc758 \ucd5c\ub300 \uc804\ub825 \ucd9c\ub825\uc740 MW \ub2e8\uc704\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE solar_farms (id INT, farm VARCHAR(50), country VARCHAR(50), continent VARCHAR(50), capacity FLOAT); INSERT INTO solar_farms (id, farm, country, continent, capacity) VALUES (1, 'Desert Sunlight', 'United States', 'North America', 550.0), (2, 'Bhadla Solar Park', 'India', 'Asia', 2245.0);", "output": "SELECT continent, MAX(capacity) FROM solar_farms WHERE farm LIKE '%Solar%' GROUP BY continent;"}
{"input": " \ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc758 \ucd1d \ud654\uc7ac \uc0ac\uac74 \uc218\uc640 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE nyc_boroughs (id INT, name TEXT); INSERT INTO nyc_boroughs (id, name) VALUES (1, 'Manhattan'), (2, 'Bronx'), (3, 'Brooklyn'); CREATE TABLE emergency_response (id INT, borough_id INT, incident_id INT, response_time INT); INSERT INTO emergency_response (id, borough_id, incident_id, response_time) VALUES (1, 1, 1, 300), (2, 1, 2, 450), (3, 3, 3, 600); CREATE TABLE emergency_incidents (id INT, type TEXT, date DATE); INSERT INTO emergency_incidents (id, type, date) VALUES (1, 'Fire', '2021-01-01'), (2, 'Theft', '2021-01-02'), (3, 'Fire', '2021-01-03');", "output": "SELECT b.name, COUNT(er.incident_id) as total_incidents, AVG(er.response_time) as avg_response_time FROM nyc_boroughs b JOIN emergency_response er ON b.id = er.borough_id JOIN emergency_incidents e ON er.incident_id = e.id WHERE e.type = 'Fire' GROUP BY b.id;"}
{"input": " \ub9b0\ub128\uc73c\ub85c \ub9cc\ub4e0 \ud488\ubaa9\uc758 \ucd5c\uc18c \uc0dd\uc0b0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (id INT, name TEXT, material TEXT, production_cost FLOAT); INSERT INTO products (id, name, material, production_cost) VALUES (1, 'Dress', 'Linen', 40.0), (2, 'Skirt', 'Linen', 30.0);", "output": "SELECT MIN(production_cost) FROM products WHERE material = 'Linen';"}
{"input": "2021\ub144\uacfc 2022\ub144\uc5d0 \ucd9c\ud310\ub41c \ubbf8\uad6d\uc758 \uc0ac\ud68c \uc815\uc758 \ubb38\uc81c\uc640 \uad00\ub828\ub41c \uae30\uc0ac\ub97c \ubd84\uae30\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title TEXT, category TEXT, publish_date DATE, location TEXT, word_count INT); INSERT INTO articles (id, title, category, publish_date, location, word_count) VALUES (1, 'Social Justice Issue 1', 'social_justice', '2021-01-01', 'USA', 800), (2, 'Social Justice Issue 2', 'social_justice', '2022-06-05', 'USA', 1200);", "output": "SELECT AVG(word_count) OVER (PARTITION BY EXTRACT(YEAR_QUARTER FROM publish_date)) AS avg_word_count FROM articles WHERE category = 'social_justice' AND location = 'USA' AND YEAR(publish_date) BETWEEN 2021 AND 2022;"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \ud2b9\uc815 \ud300\uc758 \ud2f0\ucf13 \ud310\ub9e4 \uc218\uc775 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE tickets (id INT, game_id INT, team VARCHAR(50), tickets_sold INT, price DECIMAL(5, 2), year INT); INSERT INTO tickets (id, game_id, team, tickets_sold, price, year) VALUES (1, 101, 'Chicago Bulls', 50, 50.00, 2022), (2, 102, 'Chicago Bulls', 30, 75.00, 2022), (3, 103, 'New York Knicks', 40, 40.00, 2022), (4, 104, 'New York Knicks', 60, 30.00, 2022);", "output": "SELECT team, ((SUM(tickets_sold * price) / (SELECT SUM(tickets_sold * price) FROM tickets WHERE year = 2022)) * 100) as revenue_percentage FROM tickets WHERE team = 'Chicago Bulls' AND year = 2022 GROUP BY team;"}
{"input": " \uc9c0\ub09c \ub2ec \uac00\uc7a5 \ub9ce\uc740 \uc704\ud611\uc774 \ubc1c\uc0dd\ud55c \uc0c1\uc704 5\uac1c \uc704\ud611 \uc18c\uc2a4\ub97c \uc704\ud611 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uc5ec \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ThreatIntel (id INT, ThreatType VARCHAR(20), Source VARCHAR(20), Target VARCHAR(20), Timestamp DATETIME);", "output": "SELECT ThreatType, Source, COUNT(*) as num_of_threats, ROW_NUMBER() OVER(PARTITION BY ThreatType ORDER BY COUNT(*) DESC) as rank FROM ThreatIntel WHERE Timestamp >= DATEADD(month, -1, GETDATE()) GROUP BY ThreatType, Source;"}
{"input": " \ubbf8\uad6d\uacfc \ub7ec\uc2dc\uc544 \uc911 \ub204\uac00 \ub354 \ub9ce\uc740 \uc704\uc131\uc744 \ubc1c\uc0ac\ud588\ub098\uc694?", "context": "CREATE TABLE satellites_usa (id INT, name VARCHAR(50), country VARCHAR(50), launch_date DATE); INSERT INTO satellites_usa (id, name, country, launch_date) VALUES (1, 'USA-103', 'USA', '2001-01-26'); INSERT INTO satellites_usa (id, name, country, launch_date) VALUES (2, 'USA-184', 'USA', '2006-03-22');   CREATE TABLE satellites_russia (id INT, name VARCHAR(50), country VARCHAR(50), launch_date DATE); INSERT INTO satellites_russia (id, name, country, launch_date) VALUES (1, 'Express-A1', 'Russia', '2003-08-30'); INSERT INTO satellites_russia (id, name, country, launch_date) VALUES (2, 'Express-AM11', 'Russia', '2008-12-01');", "output": "SELECT SUM(CASE WHEN country = 'USA' THEN 1 ELSE 0 END) AS usa_total, SUM(CASE WHEN country = 'Russia' THEN 1 ELSE 0 END) AS russia_total FROM ( (SELECT * FROM satellites_usa) UNION ALL (SELECT * FROM satellites_russia) );"}
{"input": " 2021\ub144 3\uc6d4 'The Guardian'\uacfc 'El Pa\u00eds'\uac00 \uac8c\uc7ac\ud55c \uae30\uc0ac\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE guardian (article_id INT, article_date DATE, source VARCHAR(10)); INSERT INTO guardian (article_id, article_date, source) VALUES (1, '2021-03-01', 'The Guardian'), (2, '2021-03-02', 'The Guardian'); CREATE TABLE el_pais (article_id INT, article_date DATE, source VARCHAR(10)); INSERT INTO el_pais (article_id, article_date, source) VALUES (3, '2021-03-01', 'El Pa\u00eds'), (4, '2021-03-02', 'El Pa\u00eds');", "output": "SELECT COUNT(*) FROM guardian WHERE article_date BETWEEN '2021-03-01' AND '2021-03-31' UNION ALL SELECT COUNT(*) FROM el_pais WHERE article_date BETWEEN '2021-03-01' AND '2021-03-31';"}
{"input": " \ud560\ub784 \ud654\uc7a5\ud488 \uc0c1\uc704 5\uba85\uc758 \uace0\uac1d \uc774\ub984\uacfc \uad6d\uac00\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE purchases (id INT, customer_id INT, product_id INT, quantity INT); CREATE TABLE products (id INT, name VARCHAR(50), halal BOOLEAN);", "output": "SELECT customers.name, customers.country FROM customers JOIN purchases ON customers.id = purchases.customer_id JOIN products ON purchases.product_id = products.id WHERE products.halal = TRUE GROUP BY customers.id ORDER BY SUM(purchases.quantity) DESC LIMIT 5;"}
{"input": " \ubbf8\uad6d \ub0b4 \uc7ac\ub09c \uad6c\ud638\uc5d0 \uc911\uc810\uc744 \ub450\uace0 \ube44\uc601\ub9ac \ub2e8\uccb4\uac00 \uc8fc\ucd5c\ud558\ub294 \uc774\ubca4\ud2b8 \uc218\ub294 \ubd84\uae30\ubcc4\ub85c \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE event_quarters (event_quarter_id INT, quarter INT); INSERT INTO event_quarters VALUES (1, 1);", "output": "SELECT e.quarter, COUNT(*) as num_events FROM nonprofit_events ne JOIN events e ON ne.event_id = e.event_id JOIN nonprofits n ON ne.nonprofit_id = n.nonprofit_id JOIN event_quarters eq ON e.quarter = eq.quarter WHERE n.sector = 'disaster relief' GROUP BY e.quarter;"}
{"input": " \ubd81\ubbf8 AI \uc724\ub9ac\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, budget FLOAT, focus VARCHAR(255), location VARCHAR(255)); INSERT INTO projects (id, budget, focus, location) VALUES (1, 200000.00, 'AI ethics', 'North America'), (2, 150000.00, 'climate change', 'Europe'), (3, 180000.00, 'technology accessibility', 'Asia'), (4, 120000.00, 'AI ethics', 'North America'), (5, 100000.00, 'digital divide', 'Africa');", "output": "SELECT SUM(budget) FROM projects WHERE focus = 'AI ethics' AND location = 'North America';"}
{"input": "\ubbf8\uad6d \uac01 \uc8fc\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_efficiency (id INT, state VARCHAR(255), score INT); INSERT INTO energy_efficiency (id, state, score) VALUES (1, 'California', 90), (2, 'Texas', 70), (3, 'California', 95), (4, 'Texas', 75), (5, 'California', 85);", "output": "SELECT state, score FROM energy_efficiency;"}
{"input": "\ud574\ub2f9 \uc704\uce58 \ub0b4 \uac01 \uc0ac\ubb34\uc2e4 \uc6a9\ub7c9\uc758 PERCENT_RANK\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE offices (id INT PRIMARY KEY, name VARCHAR(50), capacity INT, location VARCHAR(50)); INSERT INTO offices (id, name, capacity, location) VALUES (1, 'Headquarters', 500, 'Washington D.C.'); INSERT INTO offices (id, name, capacity, location) VALUES (2, 'Branch', 200, 'Washington D.C.'); INSERT INTO offices (id, name, capacity, location) VALUES (3, 'Branch', 300, 'New York');", "output": "SELECT name, capacity, PERCENT_RANK() OVER (PARTITION BY location ORDER BY capacity DESC) AS percent_rank FROM offices;"}
{"input": " \ub450 \ubc88\uc758 \uc5f0\uc18d \uc6b4\ub3d9 \uc0ac\uc774\uc5d0 \uc2ec\ubc15\uc218\uac00 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE HeartRates (user_id INT, workout_date DATE, heart_rate INT); INSERT INTO HeartRates (user_id, workout_date, heart_rate) VALUES (1, '2022-01-01', 80), (1, '2022-01-02', 90), (2, '2022-01-01', 70), (2, '2022-01-02', 80);", "output": "SELECT user_id, MAX(heart_rate - LAG(heart_rate) OVER (PARTITION BY user_id ORDER BY workout_date)) as max_increase FROM HeartRates GROUP BY user_id;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 \uc5c6\ub294 \ubcf4\ud5d8\uc5c5\uc790\ub97c \uc81c\uc678\ud558\uace0, \ud14d\uc0ac\uc2a4 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubcf4\ud5d8\uc5c5\uc790 \ubc0f \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ud3c9\uade0 \ubcf4\ud5d8 \uc5f0\ub839\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE underwriters (id INT, name VARCHAR(100)); CREATE TABLE policies (id INT, underwriter_id INT, issue_date DATE); CREATE TABLE policyholders (id INT, policy_id INT, state VARCHAR(20)); INSERT INTO underwriters (id, name) VALUES (1, 'David'), (2, 'Eve'), (3, 'Frank'); INSERT INTO policies (id, underwriter_id, issue_date) VALUES (1, 1, '2020-01-01'), (2, 1, '2020-02-01'), (3, 2, '2019-01-01'), (4, 3, '2021-01-01'); INSERT INTO policyholders (id, policy_id, state) VALUES (1, 1, 'TX'), (2, 1, 'CA'), (3, 2, 'TX'), (4, 4, 'NY');", "output": "SELECT underwriters.name, AVG(DATEDIFF(CURDATE(), policies.issue_date) / 365) as avg_policy_age FROM underwriters JOIN policies ON underwriters.id = policies.underwriter_id JOIN policyholders ON policies.id = policyholders.policy_id WHERE policyholders.state = 'TX' GROUP BY underwriters.id HAVING COUNT(DISTINCT policyholders.id) > 0;"}
{"input": " \uc544\ud2f0\uc2a4\ud2b8\ubcc4 \ucd1d \uc218\ub85d\uace1 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Artist (ArtistID INT, ArtistName VARCHAR(50)); CREATE TABLE Song (SongID INT, SongName VARCHAR(50), ArtistID INT); INSERT INTO Artist (ArtistID, ArtistName) VALUES (1, 'Taylor Swift'), (2, 'BTS'), (3, 'Adele'); INSERT INTO Song (SongID, SongName, ArtistID) VALUES (1, 'Shake it Off', 1), (2, 'Blank Space', 1), (3, 'Dynamite', 2), (4, 'Butter', 2), (5, 'Rolling in the Deep', 3);", "output": "SELECT ArtistName, COUNT(SongName) OVER (PARTITION BY ArtistID) AS SongCount FROM Artist JOIN Song ON Artist.ArtistID = Song.ArtistID;"}
{"input": " AI \uc74c\uc131 \ube44\uc11c\ub97c \ucc44\ud0dd\ud55c \uc778\ub3c4 \ud638\ud154\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT, ai_voice_assistant BOOLEAN); INSERT INTO hotels VALUES (6, 'Hotel G', 'India', true);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM hotels WHERE country = 'India')) AS percentage FROM hotels WHERE country = 'India' AND ai_voice_assistant = true;"}
{"input": " \uc815\uc2e0 \uac74\uac15 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc740 \uba87 \uba85\uc774\ub098 \uc9c0\uc6d0 \uadf8\ub8f9\uc5d0 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc73c\uba70 \uac01\uac01\uc758 \uc790\uae08\uc774 \uc9c0\uc6d0\ub429\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealth (StudentID INT, StudentName VARCHAR(50), Disability VARCHAR(20), Group VARCHAR(20), Funding INT); INSERT INTO MentalHealth (StudentID, StudentName, Disability, Group, Funding) VALUES (9, 'Grace Lee', 'Anxiety', 'Support Group', 3000); INSERT INTO MentalHealth (StudentID, StudentName, Disability, Group, Funding) VALUES (10, 'Lucas Kim', 'Depression', 'Support Group', 3500);", "output": "SELECT Disability, COUNT(StudentID), SUM(Funding) FROM MentalHealth GROUP BY Disability;"}
{"input": " '\uc2f1\uac00\ud3ec\ub974'\uc758 \uac01 \ud06c\ub808\uc778\uc774 \ub9e4\uc77c \ucc98\ub9ac\ud558\ub294 \uac00\uc7a5 \ubb34\uac70\uc6b4 \ucee8\ud14c\uc774\ub108\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE port (port_id INT, name TEXT);CREATE TABLE crane (crane_id INT, port_id INT, name TEXT);CREATE TABLE container (container_id INT, crane_id INT, weight INT, handled_at DATETIME);INSERT INTO port VALUES (8, 'Singapore');", "output": "SELECT crane.name, DATE(container.handled_at) AS handling_date, MAX(container.weight) AS heaviest_weight FROM crane JOIN port ON crane.port_id = port.port_id JOIN container ON crane.crane_id = container.crane_id WHERE port.name = 'Singapore' GROUP BY crane.name, handling_date;"}
{"input": " \ubcf4\ud5d8 \uacc4\uc57d\uc790 \uc8fc\ubcc4 \ucd5c\uc18c \ubcf4\ud5d8 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policy_start_date (policy_id INT, policy_start_date DATE); CREATE TABLE policies (policy_id INT, policyholder_id INT); INSERT INTO policy_start_date VALUES (1, '2019-01-01'); INSERT INTO policies VALUES (1, 1);", "output": "SELECT policyholder_state, MIN(policy_start_date) as min_policy_start_date FROM policies JOIN policy_start_date ON policies.policy_id = policy_start_date.policy_id JOIN policyholder_state ON policies.policyholder_id = policyholder_state.policyholder_id GROUP BY policyholder_state;"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ub3c5\uc77c\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 PTSD \ud658\uc790\uac00 \uce58\ub8cc\ub97c \ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, has_ptsd BOOLEAN, treatment_date DATE, country VARCHAR(50)); INSERT INTO patients (patient_id, has_ptsd, treatment_date, country) VALUES (1, TRUE, '2022-01-01', 'Germany'), (2, FALSE, '2021-12-25', 'Germany'), (3, TRUE, '2022-03-15', 'Canada');", "output": "SELECT COUNT(*) FROM patients WHERE has_ptsd = TRUE AND treatment_date >= '2021-07-01' AND country = 'Germany';"}
{"input": " 2021\ub144 \ube0c\ub9ac\ud2f0\uc2dc\uceec\ub7fc\ube44\uc544 \uc8fc \uace0\uce35 \uac74\ubb3c\uacfc \uc800\uce35 \uac74\ubb3c\uc758 \ud3c9\uade0 \ud5c8\uac00 \ube44\uc6a9 \ucc28\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE permit_cost_comparison (cost_id INT, province VARCHAR(50), building_type VARCHAR(50), permit_cost FLOAT, structure_height INT, issue_date DATE); INSERT INTO permit_cost_comparison (cost_id, province, building_type, permit_cost, structure_height, issue_date) VALUES (7, 'British Columbia', 'High-rise', 1000000.00, 50, '2021-01-01'); INSERT INTO permit_cost_comparison (cost_id, province, building_type, permit_cost, structure_height, issue_date) VALUES (8, 'British Columbia', 'Low-rise', 500000.00, 10, '2021-01-10');", "output": "SELECT AVG(permit_cost) - LAG(AVG(permit_cost)) OVER (PARTITION BY province ORDER BY EXTRACT(YEAR FROM issue_date)) FROM permit_cost_comparison WHERE province = 'British Columbia' AND building_type IN ('High-rise', 'Low-rise') AND issue_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"input": " '\uc2a4\ud3ec\uce20' \ub610\ub294 '\uae30\uc220'\uc5d0 \uad00\uc2ec\uc774 \uc788\ub294 \ub3c5\uc790\uc758 \uc778\uad6c\ud1b5\uacc4\ud559\uc801 \ubd84\uc11d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE demographics (city VARCHAR(255), gender VARCHAR(255), interest VARCHAR(255));", "output": "SELECT city, gender, COUNT(*) AS readers FROM demographics WHERE interest IN ('sports', 'technology') GROUP BY city, gender;"}
{"input": "\ud3c9\uade0\ubcf4\ub2e4 \ubb3c \uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uc740 \uc218\ucc98\ub9ac \uacf5\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_treatment_plants (id INT, name TEXT, water_usage FLOAT); INSERT INTO water_treatment_plants (id, name, water_usage) VALUES (1, 'Plant A', 1000000), (2, 'Plant B', 1500000), (3, 'Plant C', 800000);", "output": "SELECT name FROM water_treatment_plants WHERE water_usage > (SELECT AVG(water_usage) FROM water_treatment_plants);"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \uc0c1\uc704 5\uac1c \ud574\uc591 \ud574\uad6c\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_trenches (name VARCHAR(255), depth FLOAT); INSERT INTO marine_trenches (name, depth) VALUES ('Trench1', 10000.5), ('Trench2', 11000.0);", "output": "SELECT AVG(depth) as avg_depth FROM (SELECT depth, ROW_NUMBER() OVER (ORDER BY depth DESC) as rn FROM marine_trenches) t WHERE rn <= 5;"}
{"input": " '\uc2a4\ud3ec\uce20'\uc5d0 \ub300\ud55c \uae30\uc0ac\ub97c \uc88b\uc544\ud558\uace0 '\uc608\ub2a5'\uc5d0 \ub300\ud55c \uae30\uc0ac\ub3c4 \uc88b\uc544\ud55c \uc0ac\uc6a9\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, name TEXT, likes INT); CREATE TABLE user_likes (user_id INT, article_id INT); CREATE TABLE articles (id INT, title TEXT, category TEXT);", "output": "SELECT (COUNT(*) / (SELECT COUNT(*) FROM users)) * 100.0 AS percentage FROM user_likes JOIN users ON user_likes.user_id = users.id JOIN articles ON user_likes.article_id = articles.id WHERE articles.category = 'sports' INTERSECT SELECT user_likes.user_id FROM user_likes JOIN users ON user_likes.user_id = users.id JOIN articles ON user_likes.article_id = articles.id WHERE articles.category = 'entertainment';"}
{"input": " \uac01 \uc8fc\uc758 \uacf5\uae09\uc790 \uc218\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE suppliers (id INT, name VARCHAR(50), state VARCHAR(50)); INSERT INTO suppliers (id, name, state) VALUES (1, 'Acme Supplies', 'California'), (2, 'Beta Supplies', 'New York'), (3, 'Gamma Supplies', 'California'), (4, 'Delta Supplies', 'New York'), (5, 'Epsilon Supplies', 'Texas');", "output": "SELECT state, COUNT(*) FROM suppliers GROUP BY state;"}
{"input": " 2021\ub144 \uc804\uc2dc\ud68c\uc5d0 \ucc38\uc11d\ud55c \ubbf8\uad6d \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (visitor_id INT, visitor_name VARCHAR(50), country VARCHAR(50)); INSERT INTO Visitors (visitor_id, visitor_name, country) VALUES (1, 'John Doe', 'USA'); INSERT INTO Visitors (visitor_id, visitor_name, country) VALUES (2, 'Jane Doe', 'Canada'); CREATE TABLE Exhibitions (exhibition_id INT, exhibition_name VARCHAR(50), exhibition_year INT); INSERT INTO Exhibitions (exhibition_id, exhibition_name, exhibition_year) VALUES (1, 'Art of the 20th Century', 2021); INSERT INTO Exhibitions (exhibition_id, exhibition_name, exhibition_year) VALUES (2, 'Nature Photography', 2020); CREATE TABLE Attendance (attendance_id INT, visitor_id INT, exhibition_id INT, attendance_date DATE); INSERT INTO Attendance (attendance_id, visitor_id, exhibition_id, attendance_date) VALUES (1, 1, 1, '2021-06-01'); INSERT INTO Attendance (attendance_id, visitor_id, exhibition_id, attendance_date) VALUES (2, 2, 2, '2020-07-01');", "output": "SELECT COUNT(*) FROM Visitors v JOIN Attendance a ON v.visitor_id = a.visitor_id JOIN Exhibitions e ON a.exhibition_id = e.exhibition_id WHERE v.country = 'USA' AND e.exhibition_year = 2021;"}
{"input": " 2021\ub144 \uc784\uc2dc \uc804\uc2dc\ud68c \ucc38\uc11d\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \ubc15\ubb3c\uad00\uc740 \uc5b4\ub514\uc600\ub098\uc694?", "context": "CREATE TABLE museums (id INT, name VARCHAR(255), city VARCHAR(255));CREATE TABLE exhibitions (id INT, title VARCHAR(255), start_date DATE, end_date DATE, museum_id INT);CREATE TABLE attendance (id INT, exhibition_id INT, date DATE, attendees INT);", "output": "SELECT m.name, SUM(a.attendees) as total_attendance FROM museums m JOIN exhibitions e ON m.id = e.museum_id JOIN attendance a ON e.id = a.exhibition_id WHERE e.type = 'temporary' AND a.date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY m.name ORDER BY total_attendance DESC;"}
{"input": " 2020\ub144 \uac00\uc7a5 \ub192\uc740 \ub9e4\ucd9c\uc744 \uc62c\ub9b0 \uc0c1\uc704 5\uac1c \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE TopSkincareSales (sale_id INT, product_name TEXT, sale_amount FLOAT, sale_date DATE); INSERT INTO TopSkincareSales (sale_id, product_name, sale_amount, sale_date) VALUES (1, 'Cleanser', 50.00, '2020-01-01'); INSERT INTO TopSkincareSales (sale_id, product_name, sale_amount, sale_date) VALUES (2, 'Moisturizer', 75.00, '2019-12-20'); INSERT INTO TopSkincareSales (sale_id, product_name, sale_amount, sale_date) VALUES (3, 'Toner', 40.00, '2020-03-15');", "output": "SELECT product_name, SUM(sale_amount) AS total_sales FROM TopSkincareSales WHERE sale_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY product_name ORDER BY total_sales DESC LIMIT 5;"}
{"input": "\uc2dc\ub4dc\ub2c8' \ucc3d\uace0\uc5d0\uc11c \ucc98\ub9ac\ub41c \ubaa8\ub4e0 \ubc30\uc1a1\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Warehouse (id INT, name VARCHAR(20), city VARCHAR(20)); INSERT INTO Warehouse (id, name, city) VALUES (1, 'Sydney Warehouse', 'Sydney'); CREATE TABLE Handling (id INT, shipment_id INT, warehouse_id INT); INSERT INTO Handling (id, shipment_id, warehouse_id) VALUES (1, 101, 1), (2, 102, 1), (3, 103, 2); CREATE TABLE Shipment (id INT, weight INT); INSERT INTO Shipment (id, weight) VALUES (101, 10000), (102, 15000), (103, 8000);", "output": "DELETE FROM Shipment WHERE id IN (SELECT Handling.shipment_id FROM Handling JOIN Warehouse ON Handling.warehouse_id = Warehouse.id WHERE Warehouse.city = 'Sydney');"}
{"input": " \ucd1d \uae30\ubd80\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8\uacfc \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \uacb0\uacfc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(50), TotalDonations DECIMAL(10,2)); CREATE TABLE Outcomes (ProgramID INT, ProgramOutcome VARCHAR(20)); INSERT INTO Programs (ProgramID, ProgramName, TotalDonations) VALUES (1, 'Feeding America', 15000.00), (2, 'Education for All', 5000.00), (3, 'Feeding America', 2000.00); INSERT INTO Outcomes (ProgramID, ProgramOutcome) VALUES (1, 'Completed'), (2, 'In Progress'), (3, 'Completed');", "output": "SELECT Programs.ProgramName, ProgramOutcome, TotalDonations FROM Programs INNER JOIN Outcomes ON Programs.ProgramID = Outcomes.ProgramID WHERE Programs.TotalDonations IN (SELECT MAX(TotalDonations) FROM Programs);"}
{"input": " 2022\ub144 \uac01 \uc74c\uc2dd\uc810 \uce74\ud14c\uace0\ub9ac\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE revenue (restaurant_name TEXT, category TEXT, revenue NUMERIC, date DATE); INSERT INTO revenue (restaurant_name, category, revenue, date) VALUES ('ABC Bistro', 'Italian', 5000, '2022-01-01'), ('ABC Bistro', 'Italian', 6000, '2022-01-02'), ('XYZ Caf\u00e9', 'Coffee Shop', 3000, '2022-01-01'), ('XYZ Caf\u00e9', 'Coffee Shop', 3500, '2022-01-02');", "output": "SELECT category, SUM(revenue) as total_revenue FROM revenue GROUP BY category;"}
{"input": " \uae30\ubd80\uc790 \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubd84\ub958\ud588\uc744 \ub54c, 2022\ub144 3\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub192\uc740 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ubc1b\uc740 \ube44\uc601\ub9ac \ub2e8\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name TEXT, donor_category TEXT); INSERT INTO donors (donor_id, donor_name, donor_category) VALUES (1, 'Jane Smith', 'Individual'), (2, 'XYZ Foundation', 'Foundation'), (3, 'Greenpeace', 'Nonprofit'); CREATE TABLE donations (donation_id INT, donor_id INT, donation_amount DECIMAL, donation_date DATE); INSERT INTO donations (donation_id, donor_id, donation_amount, donation_date) VALUES (1, 1, 150, '2022-07-05'), (2, 2, 3000, '2022-07-10'), (3, 3, 500, '2022-09-15'), (4, 1, 200, '2022-08-12'), (5, 2, 6500, '2022-08-20'), (6, 3, 900, '2022-10-01');", "output": "SELECT donor_category, p.program_name, SUM(d.donation_amount) as total_donation_amount FROM donations d JOIN donors don ON d.donor_id = don.donor_id JOIN programs p ON don.donor_category = p.program_name WHERE d.donation_date BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY donor_category, p.program_name;"}
{"input": " \ubd81\uadf9\uc758 \ubaa8\ub4e0 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \ucea0\ud398\uc778\uacfc \uc885\ub8cc\uc77c\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE climate_communication_campaigns (id INT, campaign VARCHAR(50), location VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO climate_communication_campaigns (id, campaign, location, start_date, end_date) VALUES (1, 'Permafrost Thaw Awareness', 'Arctic', '2010-01-01', '2011-01-01'), (2, 'Polar Bear Conservation', 'Arctic', '2015-01-01', '2016-01-01'), (3, 'Ocean Acidification Education', 'Arctic', '2008-01-01', '2009-01-01');", "output": "SELECT campaign, end_date FROM climate_communication_campaigns WHERE location = 'Arctic';"}
{"input": " \uac01 \uc8fc\uc758 \ucd1d \ucc44\uad74 \ud604\uc7a5 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_sites (site_id INT, site_name VARCHAR(50), state VARCHAR(20));", "output": "SELECT s.state, COUNT(*) FROM mining_sites s GROUP BY s.state;"}
{"input": " \uc9c0\uc911\ud574\uc5d0\ub294 \uba87 \ucc99\uc758 \uc5f0\uad6c\uc120\uc774 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE research_vessels (id INT, name TEXT, registry TEXT); INSERT INTO research_vessels (id, name, registry) VALUES (1, 'Oceanus', 'Mediterranean'), (2, 'Nautilus', 'Caribbean');", "output": "SELECT COUNT(*) FROM research_vessels WHERE registry = 'Mediterranean';"}
{"input": " \ud53c\ubc97\ub418\uc9c0 \uc54a\uc740 \ucd1d \ud589\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01 \uc57d\ud488\uc5d0 \ub300\ud55c \ucd1d R&D \uc9c0\ucd9c \ubc0f \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RnDExpenditures (drug_name VARCHAR(255), rnd_expenditure DECIMAL(10,2)); INSERT INTO RnDExpenditures (drug_name, rnd_expenditure) VALUES ('DrugD', 60000.00), ('DrugE', 80000.00), ('DrugF', 40000.00); CREATE TABLE SalesData (drug_name VARCHAR(255), sales_quantity INT, sales_amount DECIMAL(10,2)); INSERT INTO SalesData (drug_name, sales_quantity, sales_amount) VALUES ('DrugD', 120, 18000.00), ('DrugE', 150, 22500.00), ('DrugF', 75, 10500.00);", "output": "SELECT drug_name, 'rnd_expenditure' as metric, SUM(rnd_expenditure) as value FROM RnDExpenditures GROUP BY drug_name UNION ALL SELECT drug_name, 'sales_amount' as metric, SUM(sales_amount) as value FROM SalesData GROUP BY drug_name UNION ALL SELECT 'Total', SUM(value) as value FROM (SELECT drug_name, 'rnd_expenditure' as metric, SUM(rnd_expenditure) as value FROM RnDExpenditures GROUP BY drug_name UNION ALL SELECT drug_name, 'sales_amount' as metric, SUM(sales_amount) as value FROM SalesData GROUP BY drug_name) sub;"}
{"input": "\ub9e4\uc7a5 \uc704\uce58, \uc778\uc99d \ub0a0\uc9dc\uc640 \ud568\uaed8 \uac01 \ub9e4\uc7a5\uc758 \ud3c9\uade0 \uc81c\ud488 \ud22c\uba85\uc131 \uc810\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stores (store_id INT, store_location VARCHAR(255));CREATE TABLE products (product_id INT, product_name VARCHAR(255), store_id INT, transparency_score DECIMAL(3, 2), FK_store_id REFERENCES stores(store_id));CREATE TABLE certifications (certification_id INT, certification_date DATE, FK_product_id REFERENCES products(product_id));", "output": "SELECT s.store_location, AVG(p.transparency_score) as avg_transparency_score, c.certification_date FROM stores s JOIN products p ON s.store_id = p.store_id JOIN certifications c ON p.product_id = c.product_id GROUP BY s.store_id, c.certification_date;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uac01 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc6b0\uc8fc \uc784\ubb34 \ud3c9\uade0 \uae30\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SpaceMissions (Id INT, Astronaut VARCHAR(20), Year INT, Duration INT); INSERT INTO SpaceMissions VALUES (1, 'Astronaut1', 2019, 300), (2, 'Astronaut2', 2019, 250), (3, 'Astronaut3', 2019, 400), (4, 'Astronaut4', 2020, 500), (5, 'Astronaut5', 2020, 200), (6, 'Astronaut1', 2020, 350), (7, 'Astronaut2', 2020, 280), (8, 'Astronaut3', 2021, 450), (9, 'Astronaut4', 2021, 550), (10, 'Astronaut5', 2021, 250);", "output": "SELECT Astronaut, AVG(Duration) as AvgDuration FROM SpaceMissions WHERE Year >= 2019 GROUP BY Astronaut;"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \ubdf0\ud2f0 \uc81c\ud488\uc758 \ucd5c\uc800 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (id INT, name VARCHAR(255), sustainable BOOLEAN, price FLOAT, region VARCHAR(255)); INSERT INTO products (id, name, sustainable, price, region) VALUES (1, 'Shampoo', true, 20.99, 'Asia'), (2, 'Conditioner', false, 15.99, 'Asia'), (3, 'Face Mask', true, 8.99, 'Asia');", "output": "SELECT MIN(price) FROM products WHERE sustainable = true AND region = 'Asia';"}
{"input": " \uc21c\ud658 \uacf5\uae09\ub9dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01 \uad6d\uac00\uc5d0\uc11c \uc81c\uc870\ub41c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country_circular_chains (country VARCHAR(255), product_id INT, quantity INT, FOREIGN KEY (product_id) REFERENCES circular_supply_chains(product_id));", "output": "SELECT country, SUM(quantity) FROM country_circular_chains GROUP BY country;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ucc28\ub7c9 \ub300\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Vehicles (VehicleID INT, VehicleType VARCHAR(50), City VARCHAR(50)); INSERT INTO Vehicles (VehicleID, VehicleType, City) VALUES (1, 'Bus', 'CityA'), (2, 'Tram', 'CityA'), (3, 'Train', 'CityB');", "output": "SELECT City, COUNT(*) as NumberOfVehicles FROM Vehicles GROUP BY City;"}
{"input": " 'renewable_energy' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc124\uce58 \uc6a9\ub7c9\uc774 100MW\ub97c \ucd08\uacfc\ud558\ub294 \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE renewable_energy_projects (id INT, name VARCHAR(50), location VARCHAR(50), installed_capacity FLOAT); INSERT INTO renewable_energy_projects (id, name, location, installed_capacity) VALUES (1, 'Project 1', 'Location A', 150.5), (2, 'Project 2', 'Location B', 120.2), (3, 'Project 3', 'Location C', 180.0);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM renewable_energy_projects)) AS percentage FROM renewable_energy_projects WHERE installed_capacity > 100;"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uce58\ub8cc\ub41c \uc815\uc2e0 \uac74\uac15 \uc9c8\ud658\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, country VARCHAR(255), condition VARCHAR(255)); INSERT INTO patients (id, country, condition) VALUES (1, 'China', 'Depression'), (2, 'Japan', 'Anxiety'), (3, 'India', 'Depression'); CREATE TABLE therapy (patient_id INT, therapy_type VARCHAR(255)); INSERT INTO therapy (patient_id, therapy_type) VALUES (1, 'Talk Therapy'), (2, 'Medication'), (3, 'Talk Therapy');", "output": "SELECT country as region, condition, COUNT(*) as treatment_count FROM patients WHERE country IN ('China', 'Japan', 'India') GROUP BY region, condition;"}
{"input": " \uc9c0\ub09c \ub2ec \uc7a0\uc7ac\uc801\uc778 \ubb3c \uc2a4\ud2b8\ub808\uc2a4 \ubb38\uc81c\uac00 \uc788\ub294 \ubaa8\ub4e0 \uc704\uc131 \uc774\ubbf8\uc9c0\ub97c \ub098\uc5f4\ud558\uace0 \uc774\ubbf8\uc9c0\uc758 \ud544\ub4dc \uc774\ub984\uacfc \ud0c0\uc784\uc2a4\ud0ec\ud504\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.", "context": "CREATE TABLE field (id INT, name VARCHAR(255)); CREATE TABLE satellite_image (id INT, field_id INT, brightness INT, contrast INT, ndvi FLOAT, timestamp TIMESTAMP); INSERT INTO field VALUES (1, 'Field A'), (2, 'Field B'); INSERT INTO satellite_image VALUES (1, 1, 100, 50, 0.6, '2022-02-01 10:00:00'), (2, 2, 80, 60, 0.5, '2022-02-01 10:00:00');", "output": "SELECT f.name, si.timestamp FROM field f INNER JOIN satellite_image si ON f.id = si.field_id WHERE si.ndvi < (SELECT AVG(ndvi) - 2 * STDDEV(ndvi) FROM satellite_image WHERE timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW()) AND si.timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW();"}
{"input": " 2022\ub144 1\uc6d4\uc5d0\ub294 \uba87 \ubc88\uc758 \uc6b4\ub3d9\uc774 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Workouts (id INT, workout_date DATE); INSERT INTO Workouts (id, workout_date) VALUES (1, '2022-01-01'), (2, '2022-01-05');", "output": "SELECT COUNT(*) FROM Workouts WHERE workout_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"input": " \uc568\ubc94 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ubc1c\ub9e4 \uc5f0\ub3c4\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Albums (AlbumID INT, ReleaseYear INT); INSERT INTO Albums VALUES (1, 2018), (2, 2019), (3, 2020), (4, 2021), (5, 2018), (6, 2020), (7, 2021), (8, 2022), (9, 2019), (10, 2022);", "output": "SELECT ReleaseYear, COUNT(*) FROM Albums GROUP BY ReleaseYear ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " \uc11c\ubd80 \ubc0f \ub3d9\ub0a8\uc544\uc2dc\uc544 \uc9c0\uc5ed\uc758 \uc804\uccb4 \uc758\ub8cc \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE west_providers (region VARCHAR(255), provider VARCHAR(255)); INSERT INTO west_providers (region, provider) VALUES ('Western', 'General Practitioner'); INSERT INTO west_providers (region, provider) VALUES ('Western', 'Nurse Practitioner'); CREATE TABLE southeast_providers (region VARCHAR(255), provider VARCHAR(255)); INSERT INTO southeast_providers (region, provider) VALUES ('Southeast', 'Community Health Worker'); INSERT INTO southeast_providers (region, provider) VALUES ('Southeast', 'Public Health Nurse');", "output": "SELECT COUNT(*) FROM west_providers UNION ALL SELECT COUNT(*) FROM southeast_providers;"}
{"input": " 2021\ub144 \ud589\uc0ac\uc5d0 \ucc38\uc5ec\ud55c \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \uc774\ub4e4\uc774 \uae30\uc5ec\ud55c \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, EventID int, Hours decimal(5,2)); INSERT INTO Volunteers (VolunteerID, EventID, Hours) VALUES (1, 100, 5.5), (2, 101, 7.2), (3, 100, 3.8), (4, 102, 6.5), (5, 101, 8.0);", "output": "SELECT COUNT(DISTINCT VolunteerID), AVG(Hours) FROM Volunteers INNER JOIN (SELECT EventID FROM Events WHERE EXTRACT(YEAR FROM EventDate) = 2021) AS EventLocations ON Volunteers.EventID = EventLocations.EventID;"}
{"input": "\uc804\uccb4 \ud56d\ubaa9\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0 \ud560\ub2f9\uc744 \uae30\uc900\uc73c\ub85c \ub3c4\uc2dc\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc774\uba70, \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\uc758 \ud56d\ubaa9\ubcc4 \ucd1d \uc608\uc0b0 \ud560\ub2f9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BudgetAllocation (CityId INT, Category VARCHAR(50), Amount DECIMAL(10,2)); INSERT INTO BudgetAllocation (CityId, Category, Amount) VALUES (1, 'Transportation', 5000000), (1, 'Infrastructure', 3000000), (1, 'Education', 4000000), (2, 'Transportation', 6000000), (2, 'Infrastructure', 5000000), (2, 'Education', 4500000), (3, 'Transportation', 7000000), (3, 'Infrastructure', 6500000), (3, 'Education', 5500000);", "output": "SELECT CityId, ROW_NUMBER() OVER (ORDER BY SUM(Amount) DESC) AS CityRank, SUM(Amount) AS TotalBudget FROM BudgetAllocation GROUP BY CityId HAVING CityRank <= 3;"}
{"input": " \ud68c\uc0ac\uc758 \uace0\uac1d \uaddc\ubaa8 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE CustomerSizes (id INT, customer_id INT, size TEXT); INSERT INTO CustomerSizes (id, customer_id, size) VALUES (1, 1, 'S'), (2, 2, 'M'), (3, 3, 'L'), (4, 4, 'XL'), (5, 5, 'XXL');", "output": "SELECT size, COUNT(*) AS size_count FROM CustomerSizes GROUP BY size;"}
{"input": " 2018\ub144\ubd80\ud130 2019\ub144 \uc0ac\uc774\uc5d0 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc774 \uac10\uc18c\ud55c \uc885\uc744 \uc2dd\ubcc4\ud558\uace0 \uac00\uc7a5 \ud06c\uac8c \uac10\uc18c\ud55c \uac83\ubd80\ud130 \uc21c\uc11c\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE species_timber_2 (species_id INT, species_name VARCHAR(50), year INT, volume INT); INSERT INTO species_timber_2 (species_id, species_name, year, volume) VALUES (1, 'Oak', 2018, 1000), (2, 'Pine', 2018, 2000), (3, 'Maple', 2018, 3000), (4, 'Birch', 2018, 4000), (1, 'Oak', 2019, 900), (2, 'Pine', 2019, 2200), (3, 'Maple', 2019, 3300), (4, 'Birch', 2019, 4200);", "output": "SELECT species_name, (LAG(volume, 1) OVER (PARTITION BY species_name ORDER BY year)) - volume AS volume_decrease FROM species_timber_2 WHERE year = 2019 GROUP BY species_name, volume ORDER BY volume_decrease DESC;"}
{"input": " SpaceX\uac00 \ubc30\uce58\ud55c \ubaa8\ub4e0 \uc704\uc131\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, name TEXT, country TEXT, launch_date DATE, mass FLOAT); INSERT INTO satellites (id, name, country, launch_date, mass) VALUES (1, 'Starlink 1', 'USA', '2018-11-19', 470);", "output": "SELECT AVG(DATEDIFF('2022-10-01', launch_date)) FROM satellites WHERE country = 'USA';"}
{"input": " \ud734\uc2a4\ud134\uc5d0\uc11c \uac1c\ucd5c\ub418\ub294 \uc7ac\ub09c \ub300\ube44 \uc6cc\ud06c\uc20d\uc758 \ud69f\uc218\uc640 \ucc38\uc11d\uc790 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?\"", "context": "CREATE TABLE houston_disaster_preparedness (id INT, workshop_name VARCHAR(255), city VARCHAR(255), attendance INT); INSERT INTO houston_disaster_preparedness (id, workshop_name, city, attendance) VALUES (1, 'Hurricane Preparedness', 'Houston', 30);", "output": "SELECT workshop_name, SUM(attendance) as total_attendance FROM houston_disaster_preparedness WHERE city = 'Houston' GROUP BY workshop_name;"}
{"input": " \uac01 \uc0ac\uc6a9\uc790\uc758 \uccab \ubc88\uc9f8 \uac8c\uc2dc\ubb3c\uacfc \ub9c8\uc9c0\ub9c9 \uac8c\uc2dc\ubb3c\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (id INT, user_id INT, title VARCHAR(100), content TEXT, created_at TIMESTAMP); INSERT INTO posts (id, user_id, title, content, created_at) VALUES (3, 3, 'Bienvenido', 'Hola a todos!', '2021-01-03 12:00:00'), (4, 4, 'Ol\u00e1 Mundo', 'Ol\u00e1, mundo virtual!', '2021-01-04 13:00:00');", "output": "SELECT p.*, LEAD(p.id, 1) OVER (PARTITION BY p.user_id ORDER BY p.created_at) as next_post_id, LAG(p.id, 1) OVER (PARTITION BY p.user_id ORDER BY p.created_at) as prev_post_id FROM posts p;"}
{"input": " \uad6d\uac00\uac00 '\ub3c5\uc77c'\uc778 \ub9e4\ub9bd\uc9c0 \uc6a9\ub7c9\uc758 \ub808\ucf54\ub4dc \uc0ad\uc81c", "context": "CREATE TABLE landfill_capacity (id INT, country VARCHAR(20), year INT, capacity INT);", "output": "WITH data_to_delete AS (DELETE FROM landfill_capacity WHERE country = 'Germany' RETURNING *) DELETE FROM landfill_capacity WHERE id IN (SELECT id FROM data_to_delete);"}
{"input": " \ud734\uc2a4\ud134\uc758 \ud3c9\uade0 \ube44\uc0c1 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE houston_emergency_responses (id INT, response_time INT, location VARCHAR(20)); INSERT INTO houston_emergency_responses (id, response_time, location) VALUES (1, 120, 'Houston'), (2, 90, 'Houston');", "output": "SELECT AVG(response_time) FROM houston_emergency_responses WHERE location = 'Houston';"}
{"input": " \ub3c4\ucfc4 \ud504\ub85c\uc81d\ud2b8\uc758 \uac01 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ucd1d \ube44\uc6a9\uacfc \ucd1d \uc808\uac10\uc561\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE SmartCityInitiatives (InitiativeID INT, InitiativeName VARCHAR(50));CREATE TABLE SmartCityCosts (CostID INT, InitiativeID INT, Cost FLOAT, CityID INT);CREATE TABLE SmartCitySavings (SavingsID INT, InitiativeID INT, Savings FLOAT, CityID INT);", "output": "SELECT SmartCityInitiatives.InitiativeName, SUM(SmartCityCosts.Cost) AS TotalCost, SUM(SmartCitySavings.Savings) AS TotalSavings FROM SmartCityInitiatives INNER JOIN SmartCityCosts ON SmartCityInitiatives.InitiativeID = SmartCityCosts.InitiativeID INNER JOIN SmartCitySavings ON SmartCityInitiatives.InitiativeID = SmartCitySavings.InitiativeID WHERE SmartCityCosts.CityID = 3 AND SmartCitySavings.CityID = 3 GROUP BY SmartCityInitiatives.InitiativeName;"}
{"input": " \uac01 \uc8fc\uc758 \ucc9c\uc2dd \uc720\ubcd1\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patient (patient_id INT, state VARCHAR(20), diagnosis VARCHAR(20));", "output": "SELECT state, COUNT(*) / (SELECT COUNT(*) FROM patient) * 100.0 AS prevalence FROM patient WHERE diagnosis = 'asthma' GROUP BY state;"}
{"input": " \ub9bd\uc2a4\ud2f1\uacfc \ud30c\uc6b4\ub370\uc774\uc158 \uc81c\ud488\uc5d0 \uc5b4\ub5a4 \uc131\ubd84\uc774 \uc0ac\uc6a9\ub418\ub098\uc694?", "context": "CREATE TABLE ingredients (ingredient_id INT PRIMARY KEY, ingredient_name VARCHAR(50)); CREATE TABLE lipsticks (product_id INT, ingredient_id INT, FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)); INSERT INTO lipsticks (product_id, ingredient_id) VALUES (1, 1), (1, 2), (2, 2), (2, 3); CREATE TABLE foundation (product_id INT, ingredient_id INT, FOREIGN KEY (ingredient_id) REFERENCES ingredients(ingredient_id)); INSERT INTO foundation (product_id, ingredient_id) VALUES (1, 2), (1, 3), (2, 3), (2, 4);", "output": "SELECT ingredient_name FROM ingredients WHERE ingredient_id IN (SELECT ingredient_id FROM lipsticks INTERSECT SELECT ingredient_id FROM foundation);"}
{"input": " 2021\ub144 \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \ub2e8\uc77c \ud310\uc0ac\uac00 \ucc98\ub9ac\ud558\ub294 \uc0ac\uac74\uc758 \ucd5c\ub300 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cases (case_id INT, judge_id INT, state VARCHAR(20), year INT); INSERT INTO cases (case_id, judge_id, state, year) VALUES (1, 1, 'Texas', 2021), (2, 1, 'Texas', 2021), (3, 2, 'Texas', 2022), (4, 2, 'Texas', 2021);", "output": "SELECT MAX(count) FROM (SELECT judge_id, COUNT(*) as count FROM cases WHERE state = 'Texas' AND year = 2021 GROUP BY judge_id) as subquery;"}
{"input": " \ub274\uc695 \ub300\ub3c4\uc2dc \uc9c0\uc5ed\uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\uac00 \ud544\uc694\ud55c \uc811\uadfc \uac00\ub2a5\ud55c \ucc28\ub7c9\uc740 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vehicles (vehicle_id INT, type VARCHAR(10), accessibility VARCHAR(10)); CREATE TABLE maintenance (vehicle_id INT, status VARCHAR(10)); CREATE TABLE regions (region_id INT, name VARCHAR(20), capital VARCHAR(20));", "output": "SELECT COUNT(*) FROM vehicles v JOIN maintenance m ON v.vehicle_id = m.vehicle_id JOIN regions r ON r.region_id = v.region_id WHERE type = 'accessible' AND status = 'required' AND r.name = 'New York';"}
{"input": " \ud604\uc7ac \uc2dc\uc98c\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc2b9\ub9ac\ub97c \uac70\ub454 \uc0c1\uc704 3\uba85\uc758 \uc120\uc218\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE athlete_wins (athlete_id INT, wins INT); INSERT INTO athlete_wins (athlete_id, wins) VALUES (1, 25), (2, 28), (3, 30), (4, 26), (5, 29), (6, 27), (7, 24), (8, 22), (9, 32), (10, 21); CREATE TABLE athlete_stats (athlete_id INT, season VARCHAR(50)); INSERT INTO athlete_stats (athlete_id, season) VALUES (1, 'current'), (2, 'current'), (3, 'current'), (4, 'current'), (5, 'current'), (6, 'current'), (7, 'current'), (8, 'current'), (9, 'current'), (10, 'current');", "output": "SELECT athlete_id FROM (SELECT athlete_id, wins, ROW_NUMBER() OVER (ORDER BY wins DESC) AS rank FROM athlete_wins INNER JOIN athlete_stats ON athlete_wins.athlete_id = athlete_stats.athlete_id WHERE season = 'current') AS subquery WHERE rank <= 3;"}
{"input": " \uac01 \uacf5\uc7a5\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \uace0\uc720\ud55c \ud654\ud559\ubb3c\uc9c8\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE factories (id INT, name TEXT); INSERT INTO factories (id, name) VALUES (1, 'Factory A'), (2, 'Factory B'); CREATE TABLE chemical_produced (factory_id INT, chemical_name TEXT); INSERT INTO chemical_produced (factory_id, chemical_name) VALUES (1, 'Chemical X'), (1, 'Chemical X'), (2, 'Chemical Y'), (2, 'Chemical Z');", "output": "SELECT factory_id, COUNT(DISTINCT chemical_name) AS unique_chemicals_produced FROM chemical_produced GROUP BY factory_id;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, Name varchar(100), Program varchar(50), Hours int, VolunteerDate date); INSERT INTO Volunteers (VolunteerID, Name, Program, Hours, VolunteerDate) VALUES (1, 'Fatima Ahmed', 'Education Support', 20); INSERT INTO Volunteers (VolunteerID, Name, Program, Hours, VolunteerDate) VALUES (2, 'Grayson Johnson', 'Health Clinic', 30);", "output": "SELECT Program, AVG(Hours) as AverageHoursPerVolunteer FROM Volunteers GROUP BY Program;"}
{"input": " \uc9c0\ub09c\ub2ec\uc5d0 \uc18c\uc678\ub41c \ucee4\ubba4\ub2c8\ud2f0\uc5d0 \uad00\ud55c \uae30\uc0ac\uc758 \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Articles (article_id INT, title VARCHAR(255), topic VARCHAR(255), word_count INT, publication_date DATE); INSERT INTO Articles (article_id, title, topic, word_count, publication_date) VALUES (1, 'Article1', 'underrepresented communities', 800, '2022-05-01'), (2, 'Article2', 'media literacy', 1200, '2022-03-15'), (3, 'Article3', 'disinformation detection', 900, '2022-04-20');", "output": "SELECT AVG(word_count) FROM Articles WHERE topic = 'underrepresented communities' AND publication_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"input": " \uac01 \uacc4\uc57d \ud611\uc0c1\uc5d0 \ub300\ud55c \ud611\uc0c1\uac00\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uc774\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ContractNegotiations (Id INT, Contract VARCHAR(255), NegotiationDate DATE, Negotiator VARCHAR(255)); INSERT INTO ContractNegotiations (Id, Contract, NegotiationDate, Negotiator) VALUES (5, 'Communications Equipment', '2021-03-01', 'Michael Brown'); INSERT INTO ContractNegotiations (Id, Contract, NegotiationDate, Negotiator) VALUES (6, 'Training Services', '2022-02-15', 'Taylor Green');", "output": "SELECT Contract, NegotiationDate, Negotiator, LAG(Negotiator, 1) OVER (PARTITION BY Contract ORDER BY NegotiationDate) as PreviousNegotiator FROM ContractNegotiations;"}
{"input": "\uc9c0\ub09c \ub2ec\uc5d0 \uc0ac\uc774\ud074\ub9c1 \uc6b4\ub3d9\uc744 \ud55c 45\uc138 \uc774\uc0c1\uc758 \ud68c\uc6d0\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc6b4\ub3d9 \ubc0f \ud574\ub2f9 \ud68c\uc6d0 ID\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workouts (id INT, member_id INT, workout_type VARCHAR(50), duration INT, date DATE); INSERT INTO workouts (id, member_id, workout_type, duration, date) VALUES (1, 1, 'Cycling', 60, '2022-03-10'), (2, 3, 'Yoga', 45, '2022-03-15');", "output": "SELECT w.member_id, w.workout_type FROM workouts w INNER JOIN (SELECT member_id FROM members WHERE DATEDIFF(CURDATE(), birthdate) > 45 * 365.25) m ON w.member_id = m.member_id WHERE w.workout_type = 'Cycling' AND w.date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"input": " \uc2a4\ud398\uc778\uacfc \uc774\ud0c8\ub9ac\uc544\uc758 \ucd1d \uc601\ud654 \ubc0f TV \ud504\ub85c\uadf8\ub7a8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, views INT, country VARCHAR(50)); INSERT INTO movies (id, title, release_year, views, country) VALUES (1, 'Movie1', 2010, 10000, 'Spain'), (2, 'Movie2', 2015, 15000, 'Spain'), (3, 'Movie3', 2020, 20000, 'Spain'); CREATE TABLE tv_shows (id INT, title VARCHAR(255), release_year INT, views INT, country VARCHAR(50)); INSERT INTO tv_shows (id, title, release_year, views, country) VALUES (1, 'TVShow1', 2005, 20000, 'Spain'), (2, 'TVShow2', 2018, 25000, 'Spain'), (3, 'TVShow3', 2021, 30000, 'Spain'), (4, 'TVShow4', 2012, 18000, 'Italy'), (5, 'TVShow5', 2017, 22000, 'Italy');", "output": "SELECT COUNT(*) FROM movies WHERE country = 'Spain' UNION SELECT COUNT(*) FROM tv_shows WHERE country = 'Spain' UNION SELECT COUNT(*) FROM tv_shows WHERE country = 'Italy';"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uac00\uc7a5 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uae30\uc220\uc744 \ucc44\ud0dd\ud55c \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE smart_cities_canada (id INT, city VARCHAR(255), technology VARCHAR(255)); INSERT INTO smart_cities_canada (id, city, technology) VALUES (1, 'Toronto', 'smart buildings'), (2, 'Montreal', 'smart transportation'), (3, 'Vancouver', 'smart grids'), (4, 'Calgary', 'smart buildings'), (5, 'Ottawa', 'smart transportation');", "output": "SELECT city, COUNT(*) FROM smart_cities_canada GROUP BY city ORDER BY COUNT(*) DESC LIMIT 3;"}
{"input": " \ud540\ud14c\ud06c \ubd84\uc57c\uc5d0\uc11c \uc18c\uc218 \uc9d1\ub2e8\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE startups (id INT, name TEXT, industry TEXT, founder_minority TEXT); INSERT INTO startups (id, name, industry, founder_minority) VALUES (1, 'FinCheck', 'FinTech', 'Yes');", "output": "SELECT COUNT(*) FROM startups WHERE founder_minority = 'Yes' AND industry = 'FinTech';"}
{"input": " \uc544\uc2dc\uc544 \uc804\uc790\uc0b0\uc5c5\uc758 \uacf5\uc815\ubb34\uc5ed \uad00\ud589\uc744 \uc900\uc218\ud558\ub294 \uacf5\uc7a5\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE factories (id INT, industry VARCHAR(50), region VARCHAR(50), fair_trade BOOLEAN);", "output": "SELECT COUNT(*) FROM factories WHERE industry = 'electronics' AND region = 'Asia' AND fair_trade = TRUE;"}
{"input": " \ubd81\ubbf8\uc5d0\uc11c \uc6b4\uc601\ub418\ub294 \ud68c\uc0ac\ub294 \uc5b4\ub5a4 \uad11\ubb3c\uc744 \ucd94\ucd9c\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Companies (CompanyID INT, CompanyName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Companies (CompanyID, CompanyName, Country) VALUES (1, 'ABC Mining', 'Canada'), (2, 'XYZ Excavations', 'USA'), (3, 'MNO Drilling', 'Mexico'); CREATE TABLE Minerals (MineralID INT, MineralName VARCHAR(50), CompanyID INT); INSERT INTO Minerals (MineralID, MineralName, CompanyID) VALUES (1, 'Gold', 1), (2, 'Silver', 1), (3, 'Copper', 2), (4, 'Iron', 3); CREATE TABLE CountryMinerals (Country VARCHAR(50), MineralID INT); INSERT INTO CountryMinerals (Country, MineralID) VALUES ('Canada', 1), ('Canada', 2), ('USA', 3), ('Mexico', 4);", "output": "SELECT MineralName FROM Minerals JOIN CountryMinerals ON Minerals.MineralID = CountryMinerals.MineralID JOIN Companies ON Companies.CompanyID = Minerals.CompanyID WHERE Companies.Country IN ('Canada', 'USA', 'Mexico');"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uac00 \uce58\ub8cc\ud558\ub294 \uace0\uc720\ud55c \uc815\uc2e0 \uac74\uac15 \uc9c8\ud658\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_conditions (condition_id INT, condition_name VARCHAR(50)); INSERT INTO mental_health_conditions (condition_id, condition_name) VALUES (1, 'Anxiety'), (2, 'Depression'), (3, 'Bipolar Disorder'); CREATE TABLE providers (provider_id INT, provider_name VARCHAR(50), region_id INT); INSERT INTO providers (provider_id, provider_name, region_id) VALUES (1, 'Dr. Smith', 1), (2, 'Dr. Johnson', 2); CREATE TABLE provider_patients (provider_id INT, condition_id INT, patient_id INT);", "output": "SELECT p.region_id, COUNT(DISTINCT mhc.condition_id) as num_conditions FROM mental_health_conditions mhc JOIN provider_patients pp ON mhc.condition_id = pp.condition_id JOIN providers p ON pp.provider_id = p.provider_id GROUP BY p.region_id;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ud0d0\uc0ac \uc800\ub110\ub9ac\uc998 \ud504\ub85c\uc81d\ud2b8\uc758 \uad6c\ub3c5 \ubc0f \uad11\uace0\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscriptions (id INT, type VARCHAR(50), start_date DATE, end_date DATE, revenue DECIMAL(10,2)); CREATE TABLE ads (id INT, type VARCHAR(50), placement VARCHAR(50), start_date DATE, end_date DATE, revenue DECIMAL(10,2));", "output": "SELECT 'subscriptions' as source, SUM(revenue) FROM subscriptions WHERE start_date <= CURDATE() AND end_date >= CURDATE() - INTERVAL 3 MONTH UNION ALL SELECT 'ads' as source, SUM(revenue) FROM ads WHERE start_date <= CURDATE() AND end_date >= CURDATE() - INTERVAL 3 MONTH;"}
{"input": " 2020\ub144 Zakat Bank\uc5d0\uc11c \ubc1c\ud589\ud55c \uc0e4\ub9ac\uc544 \uc900\uc218 \ub300\ucd9c \ucd1d\uc561\uc744 \ub300\ucd9c \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ZakatBank (id INT, loan_type VARCHAR(20), amount DECIMAL(10,2), issue_date DATE);", "output": "SELECT loan_type, SUM(amount) FROM ZakatBank WHERE YEAR(issue_date) = 2020 GROUP BY loan_type;"}
{"input": " \ud3c9\uc77c \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE menu (menu_id INT, menu_name VARCHAR(255), menu_category VARCHAR(255)); CREATE TABLE orders (order_id INT, order_date DATE, menu_id INT, quantity INT); CREATE TABLE prices (price_id INT, menu_id INT, price FLOAT); INSERT INTO menu (menu_id, menu_name, menu_category) VALUES (1, 'Cheese Burger', 'Main Courses'), (2, 'French Fries', 'Side Dishes'), (3, 'Caesar Salad', 'Salads'), (4, 'Coke', 'Beverages'); INSERT INTO orders (order_id, order_date, menu_id, quantity) VALUES (1, '2022-03-01', 1, 2), (2, '2022-03-01', 3, 1), (3, '2022-03-02', 2, 3), (4, '2022-03-02', 4, 4); INSERT INTO prices (price_id, menu_id, price) VALUES (1, 1, 10), (2, 2, 5), (3, 3, 12), (4, 4, 3);", "output": "SELECT menu_category, SUM(quantity * price) as total_revenue FROM orders o JOIN menu m ON o.menu_id = m.menu_id JOIN prices p ON o.menu_id = p.menu_id WHERE DATEPART(dw, order_date) < 6 GROUP BY menu_category;"}
{"input": " \ub2e8\uc704\ub2f9 \uc81c\uc870 \ube44\uc6a9\uc774 100\ub2ec\ub7ec \ubbf8\ub9cc\uc778 \uc758\uc57d\ud488\uc758 \uc804\uccb4 \uc2dc\uc7a5 \uc811\uadfc\uc131\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE drug_approval (drug_name TEXT, approval_status TEXT); INSERT INTO drug_approval (drug_name, approval_status) VALUES ('Drug1', 'approved'), ('Drug2', 'approved'), ('Drug3', 'pending'), ('Drug4', 'approved'); CREATE TABLE manufacturing_costs (drug_name TEXT, cost_per_unit INTEGER); INSERT INTO manufacturing_costs (drug_name, cost_per_unit) VALUES ('Drug1', 125), ('Drug2', 175), ('Drug3', 190), ('Drug4', 85); CREATE TABLE drug_market_access (drug_name TEXT, market_access INTEGER); INSERT INTO drug_market_access (drug_name, market_access) VALUES ('Drug1', 60000000), ('Drug2', 70000000), ('Drug3', 0), ('Drug4', 85000000);", "output": "SELECT SUM(market_access) FROM drug_market_access INNER JOIN drug_approval ON drug_market_access.drug_name = drug_approval.drug_name INNER JOIN manufacturing_costs ON drug_market_access.drug_name = manufacturing_costs.drug_name WHERE manufacturing_costs.cost_per_unit < 100 AND drug_approval.approval_status = 'approved';"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 \ud3c9\uade0 \uc774\ud558\uc758 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc744 \ubcf4\uc774\ub294 \ubaa8\ub4e0 \uc9c0\uc5ed\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE timber_production (region VARCHAR(255), production INTEGER, year INTEGER);", "output": "SELECT region FROM timber_production WHERE year BETWEEN YEAR(CURRENT_DATE)-10 AND YEAR(CURRENT_DATE) GROUP BY region HAVING AVG(production) < (SELECT AVG(production) FROM timber_production WHERE year BETWEEN YEAR(CURRENT_DATE)-10 AND YEAR(CURRENT_DATE));"}
{"input": " \ubb3c \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc5f0\ub3c4 \ud655\uc778", "context": "CREATE TABLE water_usage (year INT, usage FLOAT); INSERT INTO water_usage (year, usage) VALUES (2018, 1234.56), (2019, 2345.67), (2020, 3456.78), (2021, 4567.89);", "output": "SELECT year FROM water_usage WHERE usage = (SELECT MAX(usage) FROM water_usage);"}
{"input": " '\uc544\uc2dc\uc544' \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uc815\ubcf4 \ud65c\ub3d9\uacfc \ud574\ub2f9 \ube44\uc6a9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE intelligence_ops (operation TEXT, region TEXT, cost INTEGER); INSERT INTO intelligence_ops (operation, region, cost) VALUES ('Operation Red', 'Asia', 10000), ('Operation Blue', 'Europe', 8000), ('Operation Green', 'Asia', 12000);", "output": "SELECT operation, cost FROM intelligence_ops WHERE region = 'Asia'"}
{"input": " \ub3c5\uc77c\uc5d0\uc11c \uc81c\uc791\ub41c TV \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uc2dc\uccad\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tv_shows (title VARCHAR(255), rating FLOAT, production_country VARCHAR(64));", "output": "SELECT AVG(rating) FROM tv_shows WHERE production_country = 'Germany';"}
{"input": " \uac00\ub098\uc5d0 \uc704\uce58\ud55c 'african_mines'\uc758 \ubaa8\ub4e0 \ucc44\uad74 \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA if not exists africa_schema_3;CREATE TABLE africa_schema_3.african_mines (id INT, name VARCHAR, location VARCHAR);INSERT INTO africa_schema_3.african_mines (id, name, location) VALUES (1, 'Ghana mining', 'Ghana'), (2, 'South Africa mining', 'South Africa');", "output": "SELECT name FROM africa_schema_3.african_mines WHERE location = 'Ghana';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ai_applications (app_id INT, name TEXT, country TEXT, category TEXT); INSERT INTO ai_applications (app_id, name, country, category) VALUES (1, 'ArtBot', 'Nigeria', 'Creative'), (2, 'MusicGen', 'South Africa', 'Creative'), (3, 'DataViz', 'US', 'Analytical'), (4, 'ChatAssist', 'Canada', 'Assistive');", "output": "SELECT COUNT(*) FROM ai_applications WHERE country IN (SELECT country FROM ai_applications WHERE category = 'Creative') AND category = 'Creative';"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \ub3d9\uc77c\ud55c \uc218\uc758 \ucc38\uac00\uc790\uac00 \uc788\ub294 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE programs (id INT, name TEXT, participants INT); INSERT INTO programs (id, name, participants) VALUES (1, 'Education', 60), (2, 'Health', 40), (3, 'Environment', 70), (4, 'Arts', 30); CREATE TABLE volunteers (id INT, program_id INT); INSERT INTO volunteers (id, program_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 3), (7, 3), (8, 4);", "output": "SELECT programs.name FROM programs INNER JOIN (SELECT program_id, COUNT(*) AS num_volunteers FROM volunteers GROUP BY program_id) AS volunteer_counts ON programs.id = volunteer_counts.program_id WHERE programs.participants = volunteer_counts.num_volunteers;"}
{"input": "\ucd5c\ub300 \uc18d\ub3c4\uac00 30\ub178\ud2b8\ub97c \ub118\ub294 \uc120\ubc15\uc758 \ucd5c\uc18c \uc801\uc7ac \uc6a9\ub7c9\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Vessels (VesselID INT, VesselName VARCHAR(100), MaxSpeed FLOAT, LoadingCapacity FLOAT); INSERT INTO Vessels (VesselID, VesselName, MaxSpeed, LoadingCapacity) VALUES (1, 'Ocean Titan', 33.5, 75000), (2, 'Sea Giant', 31.3, 45000), (3, 'Marine Unicorn', 34.8, 62000), (4, 'Sky Wanderer', 30.2, 80000), (5, 'River Princess', 28.0, 40000), (6, 'Lake Explorer', 36.0, 10000);", "output": "SELECT MIN(LoadingCapacity) FROM Vessels WHERE MaxSpeed > 30;"}
{"input": " \ud68c\uc0ac \ub0b4 \uc9c1\uc704\ubcc4\ub85c \uc9c1\uc6d0\uc758 \ucd5c\ub300 \uae09\uc5ec\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Employees (id INT, name VARCHAR(50), position VARCHAR(50), left_company BOOLEAN, salary DECIMAL(10,2));", "output": "SELECT position, MAX(salary) FROM Employees WHERE left_company = FALSE GROUP BY position;"}
{"input": " \ub9c8\uc774\uc560\ubbf8 '\uc2dc\ub2c8\uc5b4 \uc544\ud2b8 \ud398\uc2a4\ud2f0\ubc8c'\uc5d0 65\uc138 \uc774\uc0c1 \ucc38\uc11d\uc790 \ube44\uc728\uc740 \uba87 \ud37c\uc13c\ud2b8\uc600\ub098\uc694?", "context": "CREATE TABLE age_distribution_2 (event_name VARCHAR(50), city VARCHAR(50), age_group VARCHAR(10), attendees INT); INSERT INTO age_distribution_2 (event_name, city, age_group, attendees) VALUES ('Senior Arts Festival', 'Miami', 'Over 65', 150);", "output": "SELECT (attendees * 100.0 / (SELECT SUM(attendees) FROM age_distribution_2 WHERE event_name = 'Senior Arts Festival' AND city = 'Miami')) AS percentage FROM age_distribution_2 WHERE event_name = 'Senior Arts Festival' AND city = 'Miami' AND age_group = 'Over 65';"}
{"input": " \ud3ec\uad04\uc801\uc778 \uc8fc\ud0dd \uc815\ucc45\uc744 \uac16\ucd98 \ub3c4\uc2dc\uc758 \ubd80\ub3d9\uc0b0\uacfc \uac01\uac01\uc758 \ud3c9\uade0 \ud06c\uae30\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE InclusiveCities(id INT, city VARCHAR(20));INSERT INTO InclusiveCities(id, city) VALUES (1, 'Portland'), (2, 'SanFrancisco'), (3, 'NewYork'); CREATE TABLE Properties(id INT, size FLOAT, city VARCHAR(20));INSERT INTO Properties(id, size, city) VALUES (1, 1200, 'Seattle'), (2, 1500, 'SanFrancisco'), (3, 1000, 'Portland'), (4, 2000, 'SanFrancisco'), (5, 1000, 'NewYork');", "output": "SELECT a.city, AVG(a.size) FROM Properties a, InclusiveCities b WHERE a.city = b.city GROUP BY a.city;"}
{"input": " \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc801\uc778 \uc870\uce58\ub97c \uc2dc\ud589\ud55c \uacf5\uc7a5 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE EnergyEfficientFactories (id INT, country VARCHAR(50), percentage DECIMAL(4,2));", "output": "SELECT country, AVG(percentage) as avg_percentage FROM EnergyEfficientFactories GROUP BY country ORDER BY avg_percentage DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 'United Launch Alliance'\uc758 \ub85c\ucf13 \ubc1c\uc0ac \uc131\uacf5 \ubc0f \uc2e4\ud328 \ud69f\uc218\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE RocketLaunches (id INT, company VARCHAR(50), launch_date DATE, launch_status VARCHAR(50), number_of_satellites INT);", "output": "SELECT company, launch_status, COUNT(*) FROM RocketLaunches WHERE company = 'United Launch Alliance' AND launch_date >= DATEADD(year, -2, GETDATE()) GROUP BY company, launch_status;"}
{"input": "\ud3c9\uc0dd\ud559\uc2b5 \uc6cc\ud06c\uc20d\uc5d0 \ucc38\uc5ec\ud55c \ud559\uc0dd\ub4e4\uc758 \ud559\uad70\ubcc4 \ud3c9\uade0 \uc815\uc2e0\uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name VARCHAR(255)); CREATE TABLE student_mental_health (student_id INT, district_id INT, mental_health_score INT); CREATE TABLE workshops (workshop_id INT, district_id INT, workshop_topic VARCHAR(255), participant_id INT); INSERT INTO districts (district_id, district_name) VALUES (1, 'Downtown'), (2, 'Uptown'); INSERT INTO student_mental_health (student_id, district_id, mental_health_score) VALUES (1, 1, 80), (2, 1, 70), (3, 2, 90), (4, 2, 60); INSERT INTO workshops (workshop_id, district_id, workshop_topic, participant_id) VALUES (1, 1, 'Lifelong Learning', 1), (2, 1, 'Lifelong Learning', 2), (3, 2, 'Lifelong Learning', 3), (4, 2, 'Lifelong Learning', 4);", "output": "SELECT sd.district_name, AVG(smh.mental_health_score) as avg_score FROM districts sd JOIN student_mental_health smh ON sd.district_id = smh.district_id JOIN workshops w ON smh.student_id = w.participant_id WHERE w.workshop_topic = 'Lifelong Learning' GROUP BY sd.district_name;"}
{"input": " \uc791\ub144\uc758 \uc5ec\ud589 \uad8c\uace0\ub97c \ud1b5\ud574 \uc720\ub7fd\uacfc \ud638\uc8fc \ubaa9\uc801\uc9c0\uc758 \uad50\ucc28\uc810\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE europe_travel_advisories (country VARCHAR(50), date DATE); INSERT INTO europe_travel_advisories VALUES ('France', '2022-03-01'), ('Germany', '2022-02-15'), ('Italy', '2022-03-10'), ('Spain', '2022-02-20'), ('Greece', '2022-03-15'); CREATE TABLE australia_travel_advisories (country VARCHAR(50), date DATE); INSERT INTO australia_travel_advisories VALUES ('Australia', '2022-02-01'), ('New Zealand', '2022-01-10'), ('Fiji', '2022-03-12'), ('Papua New Guinea', '2022-02-25');", "output": "SELECT country FROM (SELECT * FROM europe_travel_advisories INTERSECT SELECT * FROM australia_travel_advisories) WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " \ub178\ucc9c\uad11\uc0b0\uacfc \uc9c0\ud558\uad11\uc0b0 \ubc29\uc2dd\uc744 \ubaa8\ub450 \uace0\ub824\ud588\uc744 \ub54c \uac01 \uae30\uc5c5\uc774 \ucc44\uad74\ud55c \uad11\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mining_companies (company_id INT, company_name TEXT); INSERT INTO mining_companies (company_id, company_name) VALUES (1, 'CompanyA'), (2, 'CompanyB'); CREATE TABLE mining_methods (method_id INT, method_name TEXT); INSERT INTO mining_methods (method_id, method_name) VALUES (1, 'Open-pit'), (2, 'Underground'); CREATE TABLE extraction_data (company_id INT, method_id INT, amount_extracted INT); INSERT INTO extraction_data (company_id, method_id, amount_extracted) VALUES (1, 1, 500), (1, 2, 300), (2, 1, 700), (2, 2, 400);", "output": "SELECT mc.company_name, SUM(ed.amount_extracted) AS total_amount_extracted FROM extraction_data ed JOIN mining_companies mc ON ed.company_id = mc.company_id JOIN mining_methods mm ON ed.method_id = mm.method_id WHERE mm.method_name IN ('Open-pit', 'Underground') GROUP BY mc.company_name;"}
{"input": " \uc5b4\ub4dc\ubca4\ucc98 \uc7a5\ub974\uc758 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\uace0 VR \ud5e4\ub4dc\uc14b\uc744 \uc18c\uc720\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players_vr (player_id INT, vr_headset TEXT); INSERT INTO players_vr VALUES (1, 'Oculus Rift'), (2, 'HTC Vive'), (3, 'Valve Index'); CREATE TABLE games (game_id INT, game_name TEXT, genre TEXT); INSERT INTO games VALUES (1, 'Game 1', 'Adventure'), (2, 'Game 2', 'Action'); CREATE TABLE player_games (player_id INT, game_id INT, playtime INT); INSERT INTO player_games VALUES (1, 1, 10), (1, 2, 5), (2, 1, 8), (3, 1, 12);", "output": "SELECT AVG(player_games.playtime) FROM player_games JOIN players_vr ON player_games.player_id = players_vr.player_id JOIN games ON player_games.game_id = games.game_id WHERE players_vr.vr_headset IS NOT NULL AND games.genre = 'Adventure';"}
{"input": " \uac01 \ud68c\uc120\ub9c8\ub2e4 \uba87 \uac1c\uc758 \ube44\uc0c1 \uc720\uc9c0\ubcf4\uc218 \uae30\ub85d\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE maintenance (line VARCHAR(10), date DATE, type VARCHAR(20)); INSERT INTO maintenance (line, date, type) VALUES ('red', '2022-01-01', 'routine'), ('red', '2022-02-01', 'emergency'), ('blue', '2022-03-01', 'routine'), ('yellow', '2022-04-01', 'emergency'), ('yellow', '2022-05-01', 'emergency');", "output": "SELECT line, COUNT(*) FROM maintenance WHERE type = 'emergency' GROUP BY line;"}
{"input": " \uac01 \uc724\ub9ac\uc801 \ud328\uc158 \ube0c\ub79c\ub4dc\uc758 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Deliveries (delivery_id INT, delivery_date DATE, brand_id INT); CREATE TABLE Brands (brand_id INT, brand_name VARCHAR(50), ethical BOOLEAN);", "output": "SELECT B.brand_name, AVG(DATEDIFF(delivery_date, order_date)) FROM Deliveries D INNER JOIN (SELECT order_id, MIN(order_date) as order_date FROM Orders GROUP BY order_id) O ON D.delivery_id = O.order_id INNER JOIN Brands B ON D.brand_id = B.brand_id WHERE B.ethical = TRUE GROUP BY B.brand_name;"}
{"input": " \uc720\ub7fd \uad6d\ub0b4\uc120\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), region_id INT, FOREIGN KEY (region_id) REFERENCES regions(id));CREATE TABLE flights (id INT PRIMARY KEY, origin_country_id INT, destination_country_id INT, flight_type VARCHAR(50), CO2_emission INT, FOREIGN KEY (origin_country_id) REFERENCES countries(id), FOREIGN KEY (destination_country_id) REFERENCES countries(id));", "output": "SELECT SUM(CO2_emission) FROM flights WHERE flight_type = 'domestic' AND origin_country_id IN (SELECT id FROM countries WHERE region_id = (SELECT id FROM regions WHERE name = 'Europe'));"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\ub294 \uc5b4\ub5a4 \uc9c0\uc18d \uac00\ub2a5\ud55c \uacf5\uae09\uc5c5\uccb4\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE Suppliers (id INT, country VARCHAR(20), supplier VARCHAR(20), sustainable BOOLEAN); INSERT INTO Suppliers (id, country, supplier, sustainable) VALUES (1, 'USA', 'Acme', true), (2, 'Canada', 'Beta', false), (3, 'Mexico', 'Charlie', true), (4, 'China', 'Delta', false), (5, 'Egypt', 'Epsilon', true);", "output": "SELECT supplier FROM Suppliers WHERE sustainable = true AND country LIKE 'Africa%';"}
{"input": " \uc544\uc774\ud2f0 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \uae30\ubd80\ud55c \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc774\uba70, \uc774\ub4e4\uc774 \ucd1d \uae30\ubd80\ud55c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (id INT, donor_name VARCHAR(50), donation_amount INT, initiative_type VARCHAR(50)); INSERT INTO Donors (id, donor_name, donation_amount, initiative_type) VALUES (1, 'Donor1', 5000, 'education'), (2, 'Donor2', 10000, 'education'); CREATE TABLE Initiatives (initiative_id INT, initiative_type VARCHAR(50)); INSERT INTO Initiatives (initiative_id, initiative_type) VALUES (1, 'education'), (2, 'health');", "output": "SELECT Donors.donor_name, SUM(Donors.donation_amount) AS total_donated FROM Donors JOIN Initiatives ON Donors.initiative_type = Initiatives.initiative_type WHERE Initiatives.initiative_type = 'education' AND Donors.donor_name IN (SELECT Donors.donor_name FROM Donors WHERE Donors.initiative_type = 'education' GROUP BY Donors.donor_name ORDER BY SUM(Donors.donation_amount) DESC LIMIT 5);"}
{"input": "2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ub3d9\ub0a8\uc544\uc2dc\uc544\uc758 \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \ud22c\uc790\uc5d0 \uc5b4\ub5a4 \ubcc0\ud654\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE shariah_compliant_finance (id INT, year INT, country VARCHAR(50), investment DECIMAL(10,2)); INSERT INTO shariah_compliant_finance (id, year, country, investment) VALUES (1, 2020, 'Malaysia', 10000.00), (2, 2021, 'Malaysia', 12000.00), (3, 2020, 'Indonesia', 8000.00), (4, 2021, 'Indonesia', 9000.00);", "output": "SELECT LAG(investment, 1, 0) OVER (PARTITION BY country ORDER BY year) as prev_investment, investment, investment - LAG(investment, 1, 0) OVER (PARTITION BY country ORDER BY year) as change FROM shariah_compliant_finance WHERE year = 2021 AND country IN ('Malaysia', 'Indonesia');"}
{"input": " 2019\ub144\uc5d0 \uac01 \ubd80\uc11c\uc5d0\uc11c \ubc31\uc778\uc774 \uc544\ub2cc \uc9c1\uc6d0\uc744 \uba87 \uba85\uc774\ub098 \uace0\uc6a9\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Race VARCHAR(20), HireYear INT, Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, Race, HireYear, Department) VALUES (1, 'White', 2020, 'IT'), (2, 'Black', 2019, 'HR'), (3, 'Asian', 2018, 'IT');", "output": "SELECT Department, COUNT(*) FROM Employees WHERE HireYear = 2019 AND Race != 'White' GROUP BY Department;"}
{"input": " \uc5d0\ub108\uc9c0 \ubd80\ubb38\uc758 \ubaa8\ub4e0 \ubc1c\uc804\uc18c \uc774\ub984\uacfc \ucd1d \uc5d0\ub108\uc9c0 \uc0dd\uc0b0\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE power_plants (id INT, name VARCHAR(50), division VARCHAR(50), energy_production FLOAT); INSERT INTO power_plants (id, name, division, energy_production) VALUES (1, 'Power Plant A', 'Energy', 5000), (2, 'Power Plant B', 'Energy', 6000), (3, 'Power Plant C', 'Energy', 4500);", "output": "SELECT name, SUM(energy_production) FROM power_plants WHERE division = 'Energy' GROUP BY name;"}
{"input": " \uac01 \ud559\uacfc\uc758 \ud559\uc0dd 1\uc778\ub2f9 \uc815\uc2e0\uac74\uac15 \uc9c0\uc6d0 \uc138\uc158\uc5d0 \uc18c\uc694\ub418\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name TEXT); CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, department_id INT); CREATE TABLE sessions (session_id INT, teacher_id INT, student_id INT, session_date DATE, support_type TEXT, hours_spent INT); INSERT INTO departments VALUES (1, 'Mathematics'), (2, 'Science'), (3, 'English'); INSERT INTO teachers VALUES (1, 'Ms. Acevedo', 1), (2, 'Mr. Chen', 2), (3, 'Mx. Patel', 3); INSERT INTO sessions VALUES (1, 1, 1, '2022-01-01', 'mental health', 2), (2, 2, 2, '2022-01-02', 'mental health', 3), (3, 3, 3, '2022-01-03', 'mental health', 4);", "output": "SELECT d.department_name, AVG(s.hours_spent) FROM departments d INNER JOIN teachers t ON d.department_id = t.department_id INNER JOIN sessions s ON t.teacher_id = s.teacher_id WHERE s.support_type = 'mental health' GROUP BY d.department_id;"}
{"input": " \uacc4\uc57d \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \ud14d\uc0ac\uc2a4 \ud68c\uc0ac\uc5d0 \uc218\uc8fc\ub41c \ubc29\uc0b0 \uacc4\uc57d\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE defense_contracts (contract_id INT, company_name TEXT, state TEXT, contract_type TEXT, contract_value FLOAT); INSERT INTO defense_contracts (contract_id, company_name, state, contract_type, contract_value) VALUES (1, 'ABC Corp', 'Texas', 'Research', 5000000), (2, 'XYZ Inc', 'California', 'Procurement', 3000000), (3, 'DEF Industries', 'Texas', 'Logistics', 7000000);", "output": "SELECT contract_type, SUM(contract_value) as total_value FROM defense_contracts WHERE state = 'Texas' GROUP BY contract_type;"}
{"input": " 2020\ub144 \ucd1d \ud574\uc678 \uad00\uad11\uac1d \uae30\uc900\uc73c\ub85c \uce90\ub098\ub2e4, \ube0c\ub77c\uc9c8, \ub7ec\uc2dc\uc544\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TotalTourists2020 (country VARCHAR(255), tourists INT); INSERT INTO TotalTourists2020 (country, tourists) VALUES ('Canada', 1200000), ('Brazil', 1500000), ('Russia', 1000000);", "output": "SELECT country, RANK() OVER (ORDER BY tourists DESC) AS rank FROM TotalTourists2020 WHERE country IN ('Canada', 'Brazil', 'Russia');"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ubc94\uc8c4 \uc720\ud615\ubcc4\ub85c \ud558\ub8e8\uc5d0 \uc800\uc9c0\ub978 \ucd5c\ub300 \ubc94\uc8c4 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crimes (crime_id INT, crime_type VARCHAR(255), committed_date DATE); INSERT INTO crimes (crime_id, crime_type, committed_date) VALUES (1, 'Theft', '2022-01-01'), (2, 'Assault', '2022-01-02'), (3, 'Theft', '2022-01-03'), (4, 'Vandalism', '2022-01-04'), (5, 'Theft', '2022-01-05');", "output": "SELECT c.crime_type, MAX(COUNT(c.crime_id)) FROM crimes c WHERE c.committed_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY c.crime_type;"}
{"input": " 2020\ub144 \uc774\uc804\uc5d0 \uc2dc\uc791\ub41c \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE genetic_research (project TEXT, start_date DATE); INSERT INTO genetic_research (project, start_date) VALUES ('ProjectX', '2018-01-01'); INSERT INTO genetic_research (project, start_date) VALUES ('ProjectY', '2020-03-10');", "output": "SELECT project FROM genetic_research WHERE start_date < '2020-01-01';"}
{"input": " \uc5ec\uc131 \ud50c\ub808\uc774\uc5b4\uac00 \uac8c\uc784\uc744 \ud558\ub294 \ub370 \uc18c\ube44\ud55c \ucd1d \uc2dc\uac04\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, Gender VARCHAR(10), HoursPlayed INT); INSERT INTO Players (PlayerID, Gender, HoursPlayed) VALUES (1, 'Female', 50); INSERT INTO Players (PlayerID, Gender, HoursPlayed) VALUES (2, 'Male', 100);", "output": "SELECT SUM(HoursPlayed) FROM Players WHERE Gender = 'Female';"}
{"input": "\uc554 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uc720\uc804\uc801 \ub3cc\uc5f0\ubcc0\uc774 \uc0c1\uc704 5\uac1c\uc640 \ud574\ub2f9 \uce58\ub8cc \uc720\ud615\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA if not exists genetic; USE genetic; CREATE TABLE if not exists patients (id INT, name VARCHAR(100), diagnosis VARCHAR(100)); CREATE TABLE if not exists mutations (id INT, patient_id INT, mutation VARCHAR(100)); CREATE TABLE if not exists treatments (id INT, patient_id INT, treatment_type VARCHAR(100)); INSERT INTO patients (id, name, diagnosis) VALUES (1, 'PatientA', 'Cancer'), (2, 'PatientB', 'Cancer'), (3, 'PatientC', 'Cancer'); INSERT INTO mutations (id, patient_id, mutation) VALUES (1, 1, 'MutationA'), (2, 1, 'MutationB'), (3, 2, 'MutationA'), (4, 3, 'MutationC'), (5, 3, 'MutationD'); INSERT INTO treatments (id, patient_id, treatment_type) VALUES (1, 1, 'TreatmentX'), (2, 1, 'TreatmentY'), (3, 2, 'TreatmentX'), (4, 3, 'TreatmentZ');", "output": "SELECT mutations.mutation, treatments.treatment_type FROM genetic.mutations INNER JOIN genetic.patients ON mutations.patient_id = patients.id INNER JOIN genetic.treatments ON patients.id = treatments.patient_id WHERE patients.diagnosis = 'Cancer' GROUP BY mutations.mutation, treatments.treatment_type ORDER BY COUNT(mutations.mutation) DESC LIMIT 5;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud558\ub294 \ubaa8\ub4e0 \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Community_Programs (program_id INT, program_name VARCHAR(100), location VARCHAR(100), PRIMARY KEY (program_id));CREATE TABLE Program_Participants (participant_id INT, participant_name VARCHAR(100), program_id INT, PRIMARY KEY (participant_id), FOREIGN KEY (program_id) REFERENCES Community_Programs(program_id));CREATE TABLE Program_Volunteers (volunteer_id INT, volunteer_name VARCHAR(100), program_id INT, PRIMARY KEY (volunteer_id), FOREIGN KEY (program_id) REFERENCES Community_Programs(program_id));", "output": "SELECT Program_Volunteers.volunteer_name FROM Program_Volunteers;"}
{"input": " \uac01 \uc568\ubc94\uc758 \uac00\uc7a5 \uae34 \ud2b8\ub799 \uc0c1\uc704 3\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tracks (id INT, name VARCHAR(50), length INT, album_id INT); INSERT INTO tracks (id, name, length, album_id) VALUES (1, 'Track1', 200, 1); INSERT INTO tracks (id, name, length, album_id) VALUES (2, 'Track2', 150, 2); INSERT INTO tracks (id, name, length, album_id) VALUES (3, 'Track3', 250, 1); INSERT INTO tracks (id, name, length, album_id) VALUES (4, 'Track4', 100, 2); INSERT INTO tracks (id, name, length, album_id) VALUES (5, 'Track5', 300, 1);", "output": "SELECT id, name, length, album_id, rank() over (partition by album_id order by length desc) as length_rank FROM tracks WHERE length_rank <= 3"}
{"input": " \uc791\ub144\uc5d0 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud55c \uad50\uc0ac\uac00 \ud3c9\uc0dd \ud559\uc2b5 \ud65c\ub3d9\uc5d0 \uc18c\ube44\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning_activities (activity_id INT, teacher_id INT, hours_spent INT); INSERT INTO lifelong_learning_activities (activity_id, teacher_id, hours_spent) VALUES (1, 1, 5), (2, 1, 6), (3, 2, 7), (4, 2, 8), (5, 3, 9), (6, 3, 10);", "output": "SELECT SUM(lifelong_learning_activities.hours_spent) as total_hours FROM lifelong_learning_activities JOIN teachers ON teachers.teacher_id = lifelong_learning_activities.teacher_id JOIN professional_development_courses ON teachers.teacher_id = professional_development_courses.teacher_id WHERE professional_development_courses.completion_date >= DATEADD(year, -1, GETDATE());"}
{"input": " 'city_NY'\uc5d0\uc11c 'nonprofit_1'\uc744 \uc704\ud574 \uc790\uc6d0\ubd09\uc0ac\ud55c \ubaa8\ub4e0 \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \uadf8\ub4e4\uc774 \uc790\uc6d0\ubd09\uc0ac\ud55c \ucd1d \uc2dc\uac04\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE volunteer (volunteer_id INT, name VARCHAR(50), city VARCHAR(50)); INSERT INTO volunteer (volunteer_id, name, city) VALUES (1, 'Alice Johnson', 'city_NY'); INSERT INTO volunteer (volunteer_id, name, city) VALUES (2, 'Bob Brown', 'city_LA'); CREATE TABLE volunteer_hours (volunteer_hours_id INT, volunteer_id INT, nonprofit_id INT, hours DECIMAL(10, 2), hours_date DATE); INSERT INTO volunteer_hours (volunteer_hours_id, volunteer_id, nonprofit_id, hours, hours_date) VALUES (1, 1, 1, 5, '2021-01-01'); INSERT INTO volunteer_hours (volunteer_hours_id, volunteer_id, nonprofit_id, hours, hours_date) VALUES (2, 1, 1, 3, '2021-02-15');", "output": "SELECT v.name, SUM(vh.hours) as total_hours FROM volunteer v INNER JOIN volunteer_hours vh ON v.volunteer_id = vh.volunteer_id INNER JOIN nonprofit n ON vh.nonprofit_id = n.nonprofit_id WHERE n.nonprofit_id = 1 AND v.city = 'city_NY' GROUP BY v.name;"}
{"input": " 2021\ub144 \ub3c4\uc2dc, \uc9c0\uc5ed, \uad6d\uac00\ubcc4 \ud50c\ub77c\uc2a4\ud2f1 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE WasteGeneration (city VARCHAR(255), region VARCHAR(255), country VARCHAR(255), year INT, waste_quantity INT, waste_type VARCHAR(255)); INSERT INTO WasteGeneration (city, region, country, year, waste_quantity, waste_type) VALUES ('CityA', 'RegionA', 'CountryA', 2021, 1500, 'Plastic'), ('CityB', 'RegionA', 'CountryA', 2021, 1200, 'Plastic'), ('CityC', 'RegionB', 'CountryB', 2021, 1800, 'Plastic');", "output": "SELECT city, region, country, SUM(waste_quantity) FROM WasteGeneration WHERE year = 2021 AND waste_type = 'Plastic' GROUP BY city, region, country;"}
{"input": " \uc591\uc2dd \uc5b4\ub958\uc758 \ubc14\uc774\uc624\ub9e4\uc2a4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE country_biomass (id INT, country VARCHAR(255), biomass FLOAT); INSERT INTO country_biomass (id, country, biomass) VALUES (1, 'Norway', 4000.0), (2, 'Chile', 5000.0), (3, 'China', 7000.0), (4, 'Scotland', 3500.0);", "output": "SELECT country, biomass FROM (SELECT country, biomass, ROW_NUMBER() OVER (ORDER BY biomass DESC) AS rn FROM country_biomass) tmp WHERE rn <= 3;"}
{"input": " TESS \ubc0f Cheops \uc784\ubb34\ub97c \ud1b5\ud574 \ubc1c\uacac\ub41c \uc678\uacc4 \ud589\uc131\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE exoplanets (id INT, name VARCHAR(255), discovery_mission VARCHAR(255), discovery_date DATE); INSERT INTO exoplanets (id, name, discovery_mission, discovery_date) VALUES (1, 'TESS-1b', 'TESS', '2019-07-25'); INSERT INTO exoplanets (id, name, discovery_mission, discovery_date) VALUES (2, 'CHEOPS-1a', 'CHEOPS', '2022-11-11'); CREATE VIEW tess_exoplanets AS SELECT * FROM exoplanets WHERE discovery_mission = 'TESS'; CREATE VIEW cheops_exoplanets AS SELECT * FROM exoplanets WHERE discovery_mission = 'CHEOPS';", "output": "SELECT COUNT(*) as num_discoveries FROM exoplanets e INNER JOIN tess_exoplanets t ON e.id = t.id INNER JOIN cheops_exoplanets c ON e.id = c.id;"}
{"input": " \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uc8fc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE StateWaterUsage (State VARCHAR(20), Usage FLOAT); INSERT INTO StateWaterUsage (State, Usage) VALUES ('California', 25000), ('Texas', 22000), ('Florida', 20000), ('New York', 18000);", "output": "SELECT State, Usage FROM (SELECT State, Usage, ROW_NUMBER() OVER (ORDER BY Usage DESC) as rank FROM StateWaterUsage) AS subquery WHERE rank <= 3;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\ub294 \uba87 \uac1c\uc758 \uce5c\ud658\uacbd \uc219\ubc15\uc2dc\uc124\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE accommodations (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), region_id INT); ALTER TABLE accommodations ADD FOREIGN KEY (region_id) REFERENCES regions(id); CREATE TABLE eco_friendly_accommodations (id INT PRIMARY KEY, accommodation_id INT, FOREIGN KEY (accommodation_id) REFERENCES accommodations(id));", "output": "SELECT regions.name, COUNT(eco_friendly_accommodations.id) FROM regions INNER JOIN accommodations ON regions.id = accommodations.region_id INNER JOIN eco_friendly_accommodations ON accommodations.id = eco_friendly_accommodations.accommodation_id GROUP BY regions.name;"}
{"input": " \uacf5\uccad\ud68c\uc5d0 \uc2dc\ubbfc\uc758 50% \uc774\uc0c1\uc774 \ucc38\uc5ec\ud55c \uc790\uce58\uad6c \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Districts (DistrictID INT, District TEXT, TotalCitizens INT, CitizensParticipated INT); INSERT INTO Districts (DistrictID, District, TotalCitizens, CitizensParticipated) VALUES (1, 'District1', 1000, 600), (2, 'District2', 2000, 1200), (3, 'District3', 1500, 800);", "output": "SELECT District FROM Districts WHERE CitizensParticipated > (TotalCitizens * 0.5);"}
{"input": " 'AeroCorp'\uc5d0\uc11c \uc81c\uc791\ud558\ub294 \ud56d\uacf5\uae30 \ubaa8\ub378\ubcc4 \ucd1d \uc0dd\uc0b0\ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Aircraft(id INT, model VARCHAR(50), manufacturer VARCHAR(50), production_cost INT); INSERT INTO Aircraft(id, model, manufacturer, production_cost) VALUES (1, 'A320', 'Airbus', 120000000), (2, '737', 'Boeing', 130000000), (3, 'A220', 'AeroCorp', 90000000), (4, 'CSeries', 'AeroCorp', 80000000);", "output": "SELECT model, SUM(production_cost) as total_cost FROM Aircraft WHERE manufacturer = 'AeroCorp' GROUP BY model;"}
{"input": " 2020\ub144 \uac01 \uad11\uc0b0\uc9c0\ubcc4 \uc77c\uc77c \ud3c9\uade0 \uad11\ubb3c \ucd94\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \ubaa8\ub4e0 \uad11\uc0b0\uc9c0\uc758 \uc804\uccb4 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_sites (site_id INT, site_name TEXT, state TEXT);CREATE TABLE mineral_extraction (extraction_id INT, site_id INT, extraction_day DATE, tons_extracted INT);", "output": "SELECT s.site_name, AVG(me.tons_extracted / DATEDIFF('2020-12-31', me.extraction_day)) AS avg_tons_extracted_per_day FROM mining_sites s INNER JOIN mineral_extraction me ON s.site_id = me.site_id WHERE me.extraction_day BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY s.site_id, s.site_name;SELECT 'Overall Average' AS site_name, AVG(me.tons_extracted / DATEDIFF('2020-12-31', me.extraction_day)) AS avg_tons_extracted_per_day FROM mining_sites s INNER JOIN mineral_extraction me ON s.site_id = me.site_id WHERE me.extraction_day BETWEEN '2020-01-01' AND '2020-12-31';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \uae30\uc99d\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, DonorName text, Country text); INSERT INTO Donors VALUES (1, 'John Doe', 'United States'); INSERT INTO Donors VALUES (2, 'Jane Smith', 'Nigeria');", "output": "SELECT COUNT(*) FROM Donors WHERE Country IN (SELECT Country FROM Countries WHERE Continent = 'Africa');"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \uac10\uc9c0\ub41c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc704\ud611 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threats (id INT, threat_type VARCHAR(50), date DATE); INSERT INTO threats (id, threat_type, date) VALUES (1, 'phishing', '2021-03-01'), (2, 'malware', '2021-03-02'), (3, 'phishing', '2021-03-03');", "output": "SELECT threat_type, ROW_NUMBER() OVER (PARTITION BY threat_type ORDER BY date DESC) as rank FROM threats WHERE date >= DATEADD(month, -1, GETDATE()) GROUP BY threat_type HAVING rank = 1;"}
{"input": " \uc791\ub144\uc5d0 1\uac1c \uc774\uc0c1\uc758 \uad00\ub828 \ud589\uc0ac\uac00 \uc788\uace0 \ud3c9\uade0 \ucc38\uc11d\uc790\uac00 25\uba85 \uc774\uc0c1\uc778 \uc778\ub3c4\ub124\uc2dc\uc544\uc758 \uc804\ud1b5 \ubb34\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HeritageDance (id INT, name VARCHAR(255), country VARCHAR(255), UNIQUE (id)); CREATE TABLE Events (id INT, name VARCHAR(255), heritage_dance_id INT, year INT, UNIQUE (id), FOREIGN KEY (heritage_dance_id) REFERENCES HeritageDance(id)); CREATE TABLE Attendance (id INT, event_id INT, attendees INT, UNIQUE (id), FOREIGN KEY (event_id) REFERENCES Events(id));", "output": "SELECT hd.name FROM HeritageDance hd JOIN Events e ON hd.id = e.heritage_dance_id JOIN Attendance a ON e.id = a.event_id WHERE hd.country = 'Indonesia' GROUP BY hd.name HAVING COUNT(DISTINCT e.id) > 1 AND AVG(a.attendees) > 25 AND e.year = 2022;"}
{"input": " 2019\ub144 \uc9c0\uc5ed\ubcc4 \uc804\uae30\uc790\ub3d9\ucc28 \ubc0f \uc790\uc728\uc8fc\ud589\ucc28 \ud310\ub9e4 \ub300\uc218\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE region_sales (id INT, region VARCHAR(20), vehicle_type VARCHAR(20), year INT, quantity INT); INSERT INTO region_sales (id, region, vehicle_type, year, quantity) VALUES (1, 'North', 'ev', 2018, 1500), (2, 'North', 'ev', 2019, 2500), (3, 'North', 'autonomous', 2018, 800), (4, 'North', 'autonomous', 2019, 1500), (5, 'South', 'ev', 2018, 1000), (6, 'South', 'ev', 2019, 2000), (7, 'South', 'autonomous', 2018, 600), (8, 'South', 'autonomous', 2019, 1200), (9, 'East', 'ev', 2018, 800), (10, 'East', 'ev', 2019, 3000), (11, 'East', 'autonomous', 2018, 700), (12, 'East', 'autonomous', 2019, 1400), (13, 'West', 'ev', 2018, 2000), (14, 'West', 'ev', 2019, 4000), (15, 'West', 'autonomous', 2018, 900), (16, 'West', 'autonomous', 2019, 1800);", "output": "SELECT region, year, SUM(quantity) FROM region_sales WHERE vehicle_type IN ('ev', 'autonomous') AND year = 2019 GROUP BY region, year;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\ub294 \uba87 \uac1c\uc758 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE IndigenousCommunities (id INT, name VARCHAR(50), region VARCHAR(50), population INT); INSERT INTO IndigenousCommunities (id, name, region, population) VALUES (1, 'Community A', 'Arctic', 500); INSERT INTO IndigenousCommunities (id, name, region, population) VALUES (2, 'Community B', 'Arctic', 1500); INSERT INTO IndigenousCommunities (id, name, region, population) VALUES (3, 'Community C', 'Antarctic', 800); INSERT INTO IndigenousCommunities (id, name, region, population) VALUES (4, 'Community D', 'Antarctic', 900);", "output": "SELECT region, COUNT(name) FROM IndigenousCommunities GROUP BY region;"}
{"input": " 2022\ub144 \ub274\uc695 \ub304\uc2a4 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc5f0\ub839\ubcc4 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Events (id INT, event_name VARCHAR(100), event_type VARCHAR(50), location VARCHAR(100), start_time TIMESTAMP, end_time TIMESTAMP); CREATE TABLE Attendees (id INT, attendee_age INT, event_id INT);", "output": "SELECT attendee_age_group, SUM(attendance) as total_attendance FROM (SELECT attendee_age AS attendee_age_group, COUNT(*) AS attendance FROM Attendees JOIN Events ON Attendees.event_id = Events.id WHERE Events.event_type = 'dance' AND Events.location LIKE '%New York%' AND DATE_TRUNC('year', Events.start_time) = DATE_TRUNC('year', '2022-01-01') GROUP BY attendee_age) AS subquery GROUP BY attendee_age_group;"}
{"input": " 2021\ub144 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uae30\uad00\uacfc \uac01 \uae30\uad00\uc758 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE org_avg_donations (org_id INT, org_name VARCHAR(50), avg_donation DECIMAL(10,2), donation_year INT); INSERT INTO org_avg_donations (org_id, org_name, avg_donation, donation_year) VALUES (1, 'Red Cross', 200.00, 2021), (2, 'UNICEF', 150.00, 2021), (3, 'Greenpeace', 125.00, 2021);", "output": "SELECT donation_year, org_name, AVG(avg_donation) avg_donation, SUM(avg_donation) total_donations, RANK() OVER (ORDER BY AVG(avg_donation) DESC) org_rank FROM org_avg_donations WHERE donation_year = 2021 AND org_rank <= 2 GROUP BY donation_year, org_name;"}
{"input": " \ub178\ub3d9 \uc0dd\uc0b0\uc131\uc774 \uac00\uc7a5 \ub192\uc740 \uad11\uc0b0 \ud68c\uc0ac\uc640 \uac00\uc7a5 \ub0ae\uc740 \uad11\uc0b0 \ud68c\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Companies (CompanyID INT, CompanyName VARCHAR(50), LaborProductivity DECIMAL(5,2)); INSERT INTO Companies (CompanyID, CompanyName, LaborProductivity) VALUES (1, 'ABC Mining', 15.5), (2, 'XYZ Excavations', 12.3), (3, 'MNO Drilling', 18.7), (4, 'PQR Quarrying', 10.1);", "output": "SELECT CompanyName FROM Companies WHERE LaborProductivity = (SELECT MAX(LaborProductivity) FROM Companies) OR LaborProductivity = (SELECT MIN(LaborProductivity) FROM Companies);"}
{"input": " \ud589\uc0ac \uce74\ud14c\uace0\ub9ac\ubcc4 \uc790\uae08 \ucd9c\ucc98 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE funding (id INT, program_id INT, source VARCHAR(255), amount DECIMAL(10, 2), date DATE); CREATE TABLE events (id INT, name VARCHAR(255), category VARCHAR(255), date DATE);", "output": "SELECT e.category, f.source, SUM(f.amount) FROM funding f INNER JOIN (programs p INNER JOIN events e ON p.id = e.program_id) ON f.program_id = p.id GROUP BY e.category, f.source;"}
{"input": " '\uad50\uc721' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc790\uc6d0\ubd09\uc0ac\uc790\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Programs (ProgramID int, Name varchar(50), Budget money); CREATE TABLE Volunteers (VolunteerID int, Name varchar(50), Age int, ProgramID int); INSERT INTO Programs (ProgramID, Name, Budget) VALUES (1, 'Education', 10000), (2, 'Healthcare', 15000); INSERT INTO Volunteers (VolunteerID, Name, Age, ProgramID) VALUES (1, 'Alice', 25, 1), (2, 'Bob', 22, 1), (3, 'Charlie', 30, 2), (4, 'David', 28, 2);", "output": "SELECT AVG(V.Age) as AvgAge FROM Volunteers V WHERE V.ProgramID = (SELECT P.ProgramID FROM Programs P WHERE P.Name = 'Education');"}
{"input": " \uc5b4\ub5a4 \uc740\ud589\uc774 \uac00\uc7a5 \ub192\uc740 \uc774\uc790\uc728\ub85c \uc0e4\ub9ac\uc544 \uc900\uc218 \ub300\ucd9c\uc744 \uc81c\uacf5\ud569\ub2c8\uae4c?", "context": "CREATE TABLE rates (id INT, loan_id INT, bank_id INT, rate DECIMAL(4, 2)); INSERT INTO rates (id, loan_id, bank_id, rate) VALUES (1, 1, 1, 0.07), (2, 2, 1, 0.08), (3, 3, 2, 0.06), (4, 4, 2, 0.09); CREATE TABLE loans (id INT, bank_id INT, amount DECIMAL(10, 2)); INSERT INTO loans (id, bank_id, amount) VALUES (1, 1, 5000.00), (2, 1, 7000.00), (3, 2, 3000.00), (4, 2, 8000.00);", "output": "SELECT b.name, MAX(r.rate) as highest_rate FROM rates r JOIN loans l ON r.loan_id = l.id JOIN bank b ON l.bank_id = b.id GROUP BY b.name;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc778\ub3c4\uc8fc\uc758\uc801 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uc0c1\uc704 3\uac00\uad6c\ub97c \uac00\uc7a5 \ub9ce\uc740 \uae08\uc561 \uc21c\uc73c\ub85c \ub098\uc5f4\ud574 \ubcf4\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE aid_distribution (family_id INT, region VARCHAR(20), amount_aid FLOAT); INSERT INTO aid_distribution (family_id, region, amount_aid) VALUES (1, 'Africa', 10000), (2, 'Africa', 15000), (3, 'Africa', 12000), (4, 'Africa', 8000), (5, 'Africa', 9000);", "output": "SELECT family_id, amount_aid, ROW_NUMBER() OVER (ORDER BY amount_aid DESC) as rank FROM aid_distribution WHERE region = 'Africa' AND rank <= 3;"}
{"input": " \ud31d \uc7a5\ub974\uc758 \ucd1d \uace1 \uae38\uc774\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE songs (song_id INT, genre VARCHAR(20), album VARCHAR(30), artist VARCHAR(30), length FLOAT); CREATE TABLE genres (genre VARCHAR(20)); INSERT INTO genres (genre) VALUES ('pop'), ('rock'), ('jazz'), ('hip-hop'); ALTER TABLE songs ADD CONSTRAINT fk_genre FOREIGN KEY (genre) REFERENCES genres(genre);", "output": "SELECT SUM(length) as total_length FROM songs WHERE genre = (SELECT genre FROM genres WHERE genre = 'pop');"}
{"input": "\uce74\uc6b4\ud2f0 \ubc0f \uc720\uc815 \uc774\ub984\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 Eagle Ford \uc170\uc77c\uc758 \uac01 \uc720\uc815\uc758 \uc77c\uc77c \ucd5c\ub300 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eagle_ford_wells (well_id INT, well_name VARCHAR(100), county VARCHAR(50), shale VARCHAR(50), production FLOAT);INSERT INTO eagle_ford_wells (well_id, well_name, county, shale, production) VALUES (1, 'Well D', 'La Salle', 'Eagle Ford', 20000), (2, 'Well E', 'Fayette', 'Eagle Ford', 22000), (3, 'Well F', 'De Witt', 'Eagle Ford', 25000);", "output": "SELECT county, well_name, MAX(production) FROM eagle_ford_wells WHERE shale = 'Eagle Ford' GROUP BY county, well_name;"}
{"input": "\uc704\ud5d8 \ud3c9\uac00 \uc810\uc218\uac00 60\uc810 \ubbf8\ub9cc\uc774\uace0 \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ucd1d \ubcf4\ud5d8\ub8cc \uae08\uc561\uacfc \ubcf4\ud5d8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, Gender VARCHAR(10), State VARCHAR(50)); CREATE TABLE Policies (Id INT PRIMARY KEY, PolicyholderId INT, PolicyType VARCHAR(50), CoverageAmount DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id)); CREATE TABLE Underwriting (Id INT PRIMARY KEY, PolicyholderId INT, RiskAssessmentScore INT, Premium DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id));", "output": "SELECT P.State, U.RiskAssessmentScore, SUM(U.Premium) as TotalPremiumAmount, COUNT(P.Id) as NumberOfPolicies FROM Policyholders P JOIN Policies PL ON P.Id = PL.PolicyholderId JOIN Underwriting U ON P.Id = U.PolicyholderId WHERE P.State = 'Texas' AND U.RiskAssessmentScore < 60 GROUP BY P.State ORDER BY TotalPremiumAmount DESC;"}
{"input": " 'EU' \uc9c0\uc5ed \uc0ac\uc6a9\uc790\uc758 \ud574\uc2dc\ud0dc\uadf8 '#nature'\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hashtags (id INT, post_id INT, tag TEXT); INSERT INTO hashtags (id, post_id, tag) VALUES (1, 1, '#nature'), (2, 2, '#test');", "output": "SELECT COUNT(posts.id) FROM posts JOIN hashtags ON posts.id = hashtags.post_id JOIN users ON posts.user_id = users.id WHERE users.region = 'EU' AND hashtags.tag = '#nature';"}
{"input": " \ud3c9\uade0 \ubc29\ubb38\uc790 \uc218\uac00 \uac00\uc7a5 \ub192\uc740 \ub300\ub959\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE continent (continent_code CHAR(2), continent_name VARCHAR(50)); INSERT INTO continent VALUES ('AF', 'Africa'), ('AS', 'Asia'); CREATE TABLE visit_summary (continent_code CHAR(2), year INT, visitor_count INT); INSERT INTO visit_summary VALUES ('AF', 2020, 1000), ('AF', 2019, 1200), ('AS', 2020, 2000), ('AS', 2019, 2500);", "output": "SELECT continent_code, AVG(visitor_count) OVER (PARTITION BY continent_code) AS avg_visitor_count FROM visit_summary;"}
{"input": " 2019\ub144 \ub274\uc695\uc2dc\uc758 \ubb3c\uc9c8 \uc720\ud615\ubcc4 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE recycling_rates (city VARCHAR(20), year INT, material VARCHAR(20), recycling_rate FLOAT); INSERT INTO recycling_rates (city, year, material, recycling_rate) VALUES ('New York', 2019, 'Plastic', 0.3), ('New York', 2019, 'Paper', 0.6), ('New York', 2019, 'Glass', 0.4);", "output": "SELECT material, AVG(recycling_rate) as avg_recycling_rate FROM recycling_rates WHERE city = 'New York' AND year = 2019 GROUP BY material;"}
{"input": " \ud574\ubcd1\ub300\uc640 \uc721\uad70\uc774 \ud568\uaed8 \ucc38\uc5ec\ud55c \ud3c9\ud654\uc720\uc9c0\uc791\uc804\uc758 \uc218\ub97c \uad6c\ud558\uc2dc\uc624.", "context": "CREATE TABLE peacekeeping (id INT, operation VARCHAR(50), service1 VARCHAR(10), service2 VARCHAR(10), year INT); INSERT INTO peacekeeping (id, operation, service1, service2, year) VALUES (1, 'Op1', 'Marine Corps', 'Army', 2017);", "output": "SELECT COUNT(*) FROM peacekeeping WHERE (service1 = 'Marine Corps' AND service2 = 'Army') OR (service1 = 'Army' AND service2 = 'Marine Corps');"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uc9c0\ud558\ucca0 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \ub0a0\uc9dc\uc21c\uc73c\ub85c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE metro_trips (id INT, user_id INT, trip_date DATE); INSERT INTO metro_trips (id, user_id, trip_date) VALUES (1, 1, '2022-01-01'), (2, 2, '2022-01-01'), (3, 1, '2022-01-02');", "output": "SELECT COUNT(DISTINCT user_id) OVER (ORDER BY trip_date DESC) as active_users, trip_date FROM metro_trips WHERE trip_date >= DATEADD(day, -7, GETDATE());"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \uaddc\uc81c \uccb4\uacc4\uc758 \ucd1d \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (tx_id INT, rf_id INT, transaction_volume DECIMAL(10,2), transaction_date DATE); CREATE TABLE regulatory_frameworks (rf_id INT, name VARCHAR(255));", "output": "SELECT rf_id, name, SUM(transaction_volume) OVER (PARTITION BY rf_id) as total_transaction_volume FROM transactions t JOIN regulatory_frameworks rf ON t.rf_id = rf.rf_id WHERE transaction_date >= DATEADD(day, -30, CURRENT_DATE);"}
{"input": " \uc911\ubd80 \ubc0f \ub0a8\uadf9 \uc9c0\uc5ed\uc5d0\uc11c \uc758\ub8cc \uc811\uadfc\uc131 \ubb38\uc81c\uac00 \uc5bc\ub9c8\ub098 \ub9ce\uc774 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE central_access (region VARCHAR(255), issue VARCHAR(255)); INSERT INTO central_access (region, issue) VALUES ('Central', 'Lack of Primary Care Physicians'); INSERT INTO central_access (region, issue) VALUES ('Central', 'Long Wait Times'); CREATE TABLE antarctic_access (region VARCHAR(255), issue VARCHAR(255)); INSERT INTO antarctic_access (region, issue) VALUES ('Antarctic', 'Lack of Medical Specialists'); INSERT INTO antarctic_access (region, issue) VALUES ('Antarctic', 'Emergency Response Time');", "output": "SELECT COUNT(*) FROM central_access UNION ALL SELECT COUNT(*) FROM antarctic_access;"}
{"input": " 2022\ub144\uc5d0\ub294 \uc5b4\ub5a4 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uc774 \uad6c\ud604\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE cyber_strategies (strategy_id INT PRIMARY KEY, strategy_name VARCHAR(255), implementation_year INT); INSERT INTO cyber_strategies (strategy_id, strategy_name, implementation_year) VALUES (1, 'Firewall Implementation', 2020), (2, 'Intrusion Detection System', 2019), (3, 'Penetration Testing', 2022), (4, 'Security Information and Event Management', 2021);", "output": "SELECT strategy_name FROM cyber_strategies WHERE implementation_year = 2022;"}
{"input": " \ub0a8\ube59\uc591\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE oceans (id INT, name TEXT, area FLOAT); CREATE TABLE regions (id INT, region TEXT); CREATE TABLE pollution_control (id INT, initiative TEXT, ocean_id INT, region_id INT); INSERT INTO oceans (id, name, area) VALUES (1, 'Pacific Ocean', 165200000); INSERT INTO oceans (id, name, area) VALUES (5, 'Southern Ocean', 20327000); INSERT INTO regions (id, region) VALUES (1, 'North America'); INSERT INTO regions (id, region) VALUES (2, 'South America'); INSERT INTO pollution_control (id, initiative, ocean_id, region_id) VALUES (1, 'Clean Beach Initiative', 1, 1); INSERT INTO pollution_control (id, initiative, ocean_id, region_id) VALUES (2, 'Ocean Cleanup Project', 5, 2);", "output": "SELECT COUNT(*) FROM pollution_control WHERE ocean_id = (SELECT id FROM oceans WHERE name = 'Southern Ocean') AND region_id = (SELECT id FROM regions WHERE region = 'South America');"}
{"input": "\uc9c0\ub09c 5\ub144\uac04 \uc77c\ubcf8, \ud55c\uad6d, \uc911\uad6d\uc744 \ubc29\ubb38\ud55c \ucd1d \uad00\uad11\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c? \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uace0 \ucd1d \ubc29\ubb38\uac1d \uc218\ub97c \uae30\uc900\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uacbc\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE tourism_stats (country VARCHAR(255), year INT, visitors INT); INSERT INTO tourism_stats (country, year, visitors) VALUES ('Japan', 2017, 25000000), ('Japan', 2018, 26000000), ('Japan', 2019, 30000000), ('Japan', 2020, 5000000), ('Japan', 2021, 7000000), ('South Korea', 2017, 15000000), ('South Korea', 2018, 17000000), ('South Korea', 2019, 19000000), ('South Korea', 2020, 3000000), ('South Korea', 2021, 4000000), ('China', 2017, 60000000), ('China', 2018, 65000000), ('China', 2019, 70000000), ('China', 2020, 10000000), ('China', 2021, 12000000);", "output": "SELECT year, SUM(visitors) AS total_visitors, RANK() OVER (ORDER BY SUM(visitors) DESC) as rank FROM tourism_stats WHERE country IN ('Japan', 'South Korea', 'China') GROUP BY year ORDER BY year;"}
{"input": " \uc2dc\uac01 \uc608\uc220 \ubc0f \uc601\ud654 \ud504\ub85c\uadf8\ub7a8\uc758 \uace0\uc720 \ucc38\uc11d\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE cities (id INT, name VARCHAR(255)); CREATE TABLE programs (id INT, name VARCHAR(255)); CREATE TABLE attendances (city_id INT, program_id INT); INSERT INTO cities (id, name) VALUES (1, 'CityA'), (2, 'CityB'), (3, 'CityC'), (4, 'CityD'), (5, 'CityE'); INSERT INTO programs (id, name) VALUES (1, 'Visual Arts'), (2, 'Film');", "output": "SELECT c.name, COUNT(DISTINCT a.city_id) AS unique_attendees FROM cities c JOIN attendances a ON c.id = a.city_id JOIN programs p ON a.program_id = p.id WHERE p.name IN ('Visual Arts', 'Film') GROUP BY c.name ORDER BY unique_attendees DESC LIMIT 5"}
{"input": " VR \ud5e4\ub4dc\uc14b\uc744 \uc18c\uc720\ud558\uace0 \uc561\uc158 \uc7a5\ub974\uc758 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players_vr (player_id INT, vr_headset TEXT); INSERT INTO players_vr VALUES (1, 'Oculus Rift'), (2, 'HTC Vive'), (3, 'Valve Index'); CREATE TABLE games (game_id INT, game_name TEXT, genre TEXT); INSERT INTO games VALUES (1, 'Game 1', 'Action'), (2, 'Game 2', 'Simulation'); CREATE TABLE player_games (player_id INT, game_id INT, playtime INT); INSERT INTO player_games VALUES (1, 1, 10), (1, 2, 5), (2, 1, 8), (3, 1, 12);", "output": "SELECT SUM(player_games.playtime) FROM player_games JOIN players_vr ON player_games.player_id = players_vr.player_id JOIN games ON player_games.game_id = games.game_id WHERE players_vr.vr_headset IS NOT NULL AND games.genre = 'Action';"}
{"input": "2020\ub144 3\ub300 \ub300\uc911 \ucc38\uc5ec \uc624\ud508 \ub370\uc774\ud130 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uc774\ub984\uacfc \ub3c4\uc2dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public_participation (initiative_name VARCHAR(255), city VARCHAR(50), init_year INT, public_participants INT); INSERT INTO public_participation (initiative_name, city, init_year, public_participants) VALUES ('Initiative A', 'NYC', 2020, 1000), ('Initiative B', 'LA', 2020, 800), ('Initiative C', 'SF', 2020, 1200), ('Initiative D', 'CHI', 2020, 900), ('Initiative E', 'HOU', 2020, 700);", "output": "SELECT initiative_name, city FROM (SELECT initiative_name, city, public_participants, ROW_NUMBER() OVER (ORDER BY public_participants DESC) as rank FROM public_participation WHERE init_year = 2020) t WHERE rank <= 3;"}
{"input": " 2021\ub144 \uac01 \uc120\ubc15\uc774 \ucc98\ub9ac\ud558\ub294 \uace0\uc720 \ud654\ubb3c \uc720\ud615\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cargo_type (cargo_id INT, cargo_type VARCHAR(50)); INSERT INTO cargo_type VALUES (1, 'Container'); INSERT INTO cargo_type VALUES (2, 'Bulk'); CREATE TABLE ship_cargo (ship_id INT, cargo_id INT, cargo_weight INT, handling_date DATE); INSERT INTO ship_cargo VALUES (1, 1, 5000, '2021-06-15'); INSERT INTO ship_cargo VALUES (2, 2, 7000, '2021-08-12');", "output": "SELECT s.ship_name, COUNT(DISTINCT ct.cargo_type) as unique_cargo_types FROM ship s JOIN ship_cargo sc ON s.ship_id = sc.ship_id JOIN cargo_type ct ON sc.cargo_id = ct.cargo_id WHERE sc.handling_date >= '2021-01-01' AND sc.handling_date < '2022-01-01' GROUP BY s.ship_name;"}
{"input": " \uce90\ub098\ub2e4\uc640 \ubbf8\uad6d\uc758 \uc804\uae30 \uc5f4\ucc28\uc758 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Trains (id INT, name VARCHAR(50), speed FLOAT, country VARCHAR(50)); INSERT INTO Trains (id, name, speed, country) VALUES (1, 'TrainA', 120.5, 'Canada'), (2, 'TrainB', 150.7, 'Canada'), (3, 'TrainC', 180.9, 'USA'), (4, 'TrainD', 200.2, 'USA');", "output": "SELECT context.country, AVG(context.speed) FROM (SELECT * FROM Trains WHERE Trains.country IN ('Canada', 'USA')) AS context GROUP BY context.country;"}
{"input": " 2021\ub144 \ucd1d \ub9e4\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE sales_by_region (region VARCHAR(255), revenue FLOAT); INSERT INTO sales_by_region (region, revenue) VALUES ('North America', 35000), ('Europe', 30000), ('Asia', 25000), ('South America', 15000), ('Africa', 10000);", "output": "SELECT region, SUM(revenue) FROM sales_by_region WHERE revenue IS NOT NULL AND region IS NOT NULL GROUP BY region ORDER BY SUM(revenue) DESC LIMIT 3;"}
{"input": " \ucc44\uad8c\uc5d0 \ud22c\uc790\ud55c \uace0\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name TEXT, region TEXT); INSERT INTO clients (client_id, name, region) VALUES (1, 'John Doe', 'US'), (2, 'Jane Smith', 'CA'); CREATE TABLE investments (client_id INT, fund_id INT, amount DECIMAL(10, 2)); INSERT INTO investments (client_id, fund_id, amount) VALUES (1, 1, 15000.00), (1, 2, 20000.00), (2, 1, 30000.00); CREATE TABLE funds (fund_id INT, fund_name TEXT, category TEXT); INSERT INTO funds (fund_id, fund_name, category) VALUES (1, 'US Equity Fund', 'Equity'), (2, 'US Bond Fund', 'Bond');", "output": "SELECT COUNT(DISTINCT c.client_id) FROM clients c JOIN investments i ON c.client_id = i.client_id JOIN funds f ON i.fund_id = f.fund_id WHERE f.category = 'Bond';"}
{"input": " \uc608\uc0b0\uc774 1,000\ub9cc \ub2ec\ub7ec\uac00 \ub118\ub294 \ubbf8\uc8fc \uc9c0\uc5ed\uc758 \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Military_Innovation (Nation VARCHAR(50), Continent VARCHAR(50), Project VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO Military_Innovation (Nation, Continent, Project, Budget) VALUES ('USA', 'Americas', 'Stealth Drone Project', 15000000.00), ('Brazil', 'Americas', 'Cyber Defense System', 12000000.00);", "output": "SELECT SUM(Budget) FROM Military_Innovation WHERE Continent = 'Americas' AND Budget > 10000000;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc758 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc5d0\ub294 \ucda9\uc804\uc18c\uac00 \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE charging_stations (id INT, system_type VARCHAR(20), city VARCHAR(20), num_stations INT); INSERT INTO charging_stations (id, system_type, city, num_stations) VALUES (1, 'Public Transportation', 'Los Angeles', 500), (2, 'Highway', 'Los Angeles', 1000);", "output": "SELECT num_stations FROM charging_stations WHERE system_type = 'Public Transportation' AND city = 'Los Angeles';"}
{"input": " \uac01 \ubcf4\ud5d8 \uc720\ud615\uc758 \ud3c9\uade0 \ubcf4\ud5d8\ub8cc\ub97c \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policy_4 (policy_id INT, policy_type VARCHAR(20), premium FLOAT); INSERT INTO policy_4 (policy_id, policy_type, premium) VALUES (5, 'Home', 1400.00), (6, 'Auto', 850.00), (7, 'Life', 650.00), (8, 'Rent', 1450.00), (9, 'Travel', 900.00);", "output": "SELECT policy_type, AVG(premium) AS avg_premium, RANK() OVER (ORDER BY AVG(premium) DESC) AS policy_rank FROM policy_4 GROUP BY policy_type ORDER BY policy_rank;"}
{"input": " '15'\uac1c \uc774\uc0c1\uc758 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc744 \ubc30\ud3ec\ud55c \uac1c\ubc1c\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE developers (id INT, name TEXT); CREATE TABLE smart_contracts (id INT, name TEXT, developer INT, deployment_date DATE); INSERT INTO developers (id, name) VALUES (1, 'Developer1'), (2, 'Developer2'); INSERT INTO smart_contracts (id, name, developer, deployment_date) VALUES (1, 'Contract1', 1, '2022-01-01'), (2, 'Contract2', 1, '2021-12-01'), (3, 'Contract3', 2, '2021-11-01');", "output": "SELECT developers.name FROM developers INNER JOIN (SELECT developer, COUNT(*) AS contract_count FROM smart_contracts GROUP BY developer) AS smart_contracts ON developers.id = smart_contracts.developer WHERE smart_contracts.contract_count > 15"}
{"input": " \uc724\ub9ac\uc801 \ub178\ub3d9 \uc778\uc99d\uc744 \ubc1b\uc740 \uc81c\ud488\uc744 \ucde8\uae09\ud558\ub294 \ub274\uc695 \uc18c\uc7ac \ubaa8\ub4e0 \ub9e4\uc7a5\uacfc \ud574\ub2f9 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stores (id INT, name VARCHAR(255), city VARCHAR(255), state VARCHAR(255)); CREATE TABLE products (id INT, name VARCHAR(255), price DECIMAL(10,2), is_ethically_sourced BOOLEAN, supplier_id INT); CREATE TABLE supplier_location (supplier_id INT, country VARCHAR(255)); CREATE TABLE certifications (product_id INT, certification_type VARCHAR(255));", "output": "SELECT s.name, p.name, sl.country FROM stores s JOIN products p ON s.id = p.store_id JOIN supplier_location sl ON p.supplier_id = sl.supplier_id JOIN certifications c ON p.id = c.product_id WHERE s.state = 'New York' AND p.is_ethically_sourced = TRUE;"}
{"input": "\ubd81\uadf9 \uc9c0\uc5ed\uc758 \uac01 \uad6d\uac00\uc758 \uc804\uccb4 \uc778\uad6c\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Countries (CountryName VARCHAR(50), Population INT); INSERT INTO Countries (CountryName, Population) VALUES ('Canada', 38000000), ('United States', 331000000), ('Greenland', 56000), ('Finland', 5540000), ('Norway', 5391000), ('Sweden', 10330000), ('Russia', 145934462);", "output": "SELECT CountryName, SUM(Population) FROM Countries GROUP BY CountryName;"}
{"input": " '\uadf8\ub9b0\ud53c\uc2a4'\uc640 '\uc138\uacc4\uc57c\uc0dd\uc0dd\ubb3c\uae30\uae08'\uc774 \uc8fc\ucd5c\ud558\ub294 '\uc778\uc2dd' \ud589\uc0ac\uc5d0 \uae30\ubd80\ud55c \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), DonationAmount DECIMAL(10,2), DonationDate DATE); CREATE TABLE DonationEvents (EventID INT PRIMARY KEY, EventName VARCHAR(100), EventType VARCHAR(100), DonationID INT, FOREIGN KEY (DonationID) REFERENCES Donors(DonorID)); CREATE TABLE Organizations (OrganizationID INT PRIMARY KEY, OrganizationName VARCHAR(100), VolunteerID INT, FOREIGN KEY (VolunteerID) REFERENCES Donors(DonorID));", "output": "SELECT SUM(DonationAmount) as TotalDonationAmount FROM Donors d JOIN DonationEvents e ON d.DonorID = e.DonationID JOIN Organizations o ON d.DonorID = o.VolunteerID WHERE e.EventType = 'Awareness' AND o.OrganizationName IN ('Greenpeace', 'World Wildlife Fund');"}
{"input": " '\uae30\uc5c5 \ud6c4\uc6d0\uc790'\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 '\uadf9\uc7a5' \uce74\ud14c\uace0\ub9ac\uc758 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud558\ub294 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (EventID INT, EventName VARCHAR(20), EventCategory VARCHAR(20));CREATE TABLE FundingSources (FundingSourceID INT, FundingSourceName VARCHAR(20));CREATE TABLE EventFunding (EventID INT, FundingSourceID INT, FundingAmount INT);CREATE TABLE Attendees (AttendeeID INT, Age INT, EventID INT);", "output": "SELECT AVG(A.Age) AS Avg_Age FROM Events E INNER JOIN EventFunding EF ON E.EventID = EF.EventID INNER JOIN FundingSources FS ON EF.FundingSourceID = FS.FundingSourceID INNER JOIN Attendees A ON E.EventID = A.EventID WHERE E.EventCategory = 'Theater' AND FS.FundingSourceName = 'Corporate Sponsors';"}
{"input": " \ud68c\uc0ac\ubcc4, \uc9c1\ubb34\ubcc4 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Salaries (id INT, company_id INT, job_role VARCHAR(50), salary INT); INSERT INTO Salaries (id, company_id, job_role, salary) VALUES (1, 1, 'Engineer', 90000), (2, 1, 'Manager', 120000), (3, 2, 'Engineer', 95000);", "output": "SELECT company_id, job_role, AVG(salary) as avg_salary, RANK() OVER (PARTITION BY AVG(salary) ORDER BY AVG(salary) DESC) as salary_rank FROM Salaries GROUP BY company_id, job_role;"}
{"input": " \ub300\ub959 \uc804\uccb4\uc5d0 \uac78\uccd0 \ud3ec\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc758 \ud61c\ud0dd\uc744 \ubc1b\ub294 \ud559\uc0dd\ub4e4\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE program (id INT, name VARCHAR(255)); INSERT INTO program (id, name) VALUES (1, 'Accommodations'), (2, 'Support Programs'), (3, 'Policy Advocacy'), (4, 'Inclusion'); CREATE TABLE student_program (program_id INT, student_id INT, continent VARCHAR(255)); INSERT INTO student_program (program_id, student_id, continent) VALUES (1, 1, 'North America'), (2, 2, 'Africa'), (3, 3, 'Asia'), (4, 4, 'Europe'), (5, 5, 'South America');", "output": "SELECT p.name, c.continent, COUNT(sp.student_id) as total_students FROM program p JOIN student_program sp ON p.id = sp.program_id JOIN student s ON sp.student_id = s.id JOIN (SELECT 'Inclusion' as name, continent FROM student GROUP BY continent) c ON s.continent = c.continent WHERE p.name = 'Inclusion' GROUP BY p.name, c.continent;"}
{"input": " \uc601\uad6d\uacfc \ud504\ub791\uc2a4\uc0b0 \uc131\ubd84\uc744 \uc0ac\uc6a9\ud558\ub294 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \uc81c\ud488\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE IngredientSources (ProductID INT, Ingredient VARCHAR(50), SourceCountry VARCHAR(50), PRIMARY KEY (ProductID, Ingredient)); INSERT INTO IngredientSources (ProductID, Ingredient, SourceCountry) VALUES (1, 'Water', 'Canada'), (1, 'Glycerin', 'UK'), (2, 'Water', 'Mexico'), (2, 'Glycerin', 'France'); CREATE TABLE CrueltyFreeCertifications (ProductID INT, CertificationDate DATE, Certifier VARCHAR(50), PRIMARY KEY (ProductID, CertificationDate)); INSERT INTO CrueltyFreeCertifications (ProductID, CertificationDate, Certifier) VALUES (1, '2020-12-01', 'Leaping Bunny'), (2, '2021-03-01', 'PETA');", "output": "SELECT ProductID FROM IngredientSources WHERE SourceCountry IN ('UK', 'France') GROUP BY ProductID HAVING COUNT(DISTINCT SourceCountry) = 2 INTERSECT SELECT ProductID FROM CrueltyFreeCertifications;"}
{"input": "\uac01 \uc9c0\uc5ed\ubcc4 \ucd1d \ud654\uc7ac \uc751\uae09 \uc0c1\ud669\uc740 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emergency_incidents (id INT, district VARCHAR(20), type VARCHAR(20), date DATE); INSERT INTO emergency_incidents (id, district, type, date) VALUES (1, 'Downtown', 'Fire', '2022-01-01'); INSERT INTO emergency_incidents (id, district, type, date) VALUES (2, 'Uptown', 'Medical', '2022-01-02'); INSERT INTO emergency_incidents (id, district, type, date) VALUES (3, 'North', 'Fire', '2022-01-03'); INSERT INTO emergency_incidents (id, district, type, date) VALUES (4, 'North', 'Medical', '2022-01-04');", "output": "SELECT district, COUNT(*) AS total FROM emergency_incidents WHERE type = 'Fire' GROUP BY district;"}
{"input": " \uc885\ub8cc\ub41c \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \uc704\uce58\ubcc4\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc", "context": "CREATE TABLE programs (id INT, name VARCHAR(50), location VARCHAR(50), type VARCHAR(50), start_date DATE, end_date DATE);", "output": "SELECT name, location FROM programs WHERE type = 'Restorative Justice' AND end_date IS NOT NULL ORDER BY location;"}
{"input": " \uae30\ubd80\ucd1d\uc561 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE donors (id INT, name VARCHAR(100), donation_amount DECIMAL(10,2)); INSERT INTO donors (id, name, donation_amount) VALUES (1, 'Jane Smith', 1500.00), (2, 'John Doe', 800.00), (3, 'Bob Brown', 1200.00), (4, 'Charlie Green', 900.00);", "output": "SELECT name, SUM(donation_amount) AS total_donated FROM donors GROUP BY name ORDER BY total_donated DESC LIMIT 3;"}
{"input": "\ub0a8\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uacbd\ucc30 \uc9c0\uc6d0\uc744 \uc704\ud55c \ucd5c\uc18c \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (id INT, name VARCHAR(255)); CREATE TABLE police_responses (id INT, district_id INT, response_time INT); INSERT INTO districts (id, name) VALUES (1, 'South'); INSERT INTO police_responses (id, district_id, response_time) VALUES (1, 1, 7);", "output": "SELECT MIN(response_time) FROM police_responses WHERE district_id = (SELECT id FROM districts WHERE name = 'South');"}
{"input": " 2021\ub144 \ud55c \ud574 \ub3d9\uc548 5\uac1c \uc774\uc0c1\uc758 \ub2e4\uc591\ud55c \uc218\uc5c5\uc744 \uac00\ub974\uce5c \ubaa8\ub4e0 \uac15\uc0ac\uc758 \uace0\uc720\ud55c \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Instructors (InstructorID int, FirstName varchar(20)); INSERT INTO Instructors (InstructorID, FirstName) VALUES (1, 'John'); CREATE TABLE Classes (ClassID int, InstructorID int, ClassType varchar(10)); INSERT INTO Classes (ClassID, InstructorID, ClassType) VALUES (1, 1, 'Yoga');", "output": "SELECT DISTINCT FirstName FROM Instructors i WHERE i.InstructorID IN (SELECT c.InstructorID FROM Classes c GROUP BY c.InstructorID HAVING COUNT(DISTINCT c.ClassType) > 5);"}
{"input": " 2021\ub144\uc5d0 \uc6b0\uc8fc \ud0d0\uc0ac \uc608\uc0b0\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Space_Exploration_Budgets (id INT, country VARCHAR(50), year INT, budget DECIMAL(10,2)); INSERT INTO Space_Exploration_Budgets (id, country, year, budget) VALUES (1, 'USA', 2020, 44.52); INSERT INTO Space_Exploration_Budgets (id, country, year, budget) VALUES (2, 'China', 2020, 8.93); INSERT INTO Space_Exploration_Budgets (id, country, year, budget) VALUES (3, 'Japan', 2021, 3.36); INSERT INTO Space_Exploration_Budgets (id, country, year, budget) VALUES (4, 'India', 2021, 1.85);", "output": "SELECT country, budget FROM Space_Exploration_Budgets WHERE year = 2021 ORDER BY budget DESC LIMIT 2;"}
{"input": " \ud604\uc7ac IoT \uc218\ubd84 \uc13c\uc11c\ub294 \uba87 \uac1c\ub098 \uc124\uce58\ub418\uc5b4 \uc788\ub098\uc694?", "context": "CREATE TABLE sensor_installation (sensor_id INT, install_date DATE); INSERT INTO sensor_installation (sensor_id, install_date) VALUES (1001, '2021-04-03'), (1002, '2021-04-17'), (1003, '2021-04-01'), (1004, '2021-04-15'), (1005, '2021-03-30');", "output": "SELECT COUNT(*) FROM sensor_installation WHERE install_date <= CURDATE();"}
{"input": " 2021\ub144 2\ubd84\uae30 \uc911\uc11c\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uc804\ub825 \uce21\uba74\uc5d0\uc11c \ud48d\ub825 \uc5d0\ub108\uc9c0 \uacf5\uae09\uc5c5\uccb4 \uc0c1\uc704 5\uc704\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE provider (id INT PRIMARY KEY, name VARCHAR(50), region_id INT, FOREIGN KEY (region_id) REFERENCES region(id));CREATE TABLE renewable_source (id INT PRIMARY KEY, name VARCHAR(50), provider_id INT, FOREIGN KEY (provider_id) REFERENCES provider(id));CREATE TABLE power_generation (id INT PRIMARY KEY, date DATE, source_id INT, FOREIGN KEY (source_id) REFERENCES renewable_source(id), power_generated INT);", "output": "SELECT p.name AS provider_name, SUM(pg.power_generated) AS total_power_generated  FROM power_generation pg  JOIN renewable_source rs ON pg.source_id = rs.id  JOIN provider p ON rs.provider_id = p.id  JOIN renewable_source wind ON rs.id = wind.id AND wind.name = 'Wind' WHERE p.region_id = (SELECT id FROM region WHERE name = 'Midwest') AND pg.date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY p.name ORDER BY total_power_generated DESC LIMIT 5;"}
{"input": " \ud654\ubb3c\uc758 \uc218\ub7c9\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c, \uc18c\uc18d \uc120\ubc15\ubcc4\ub85c, \ud56d\uad6c\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Cargo (CargoID INT, CargoName VARCHAR(50), Quantity INT, VesselID INT, PortID INT); INSERT INTO Cargo (CargoID, CargoName, Quantity, VesselID, PortID) VALUES (1, 'Electronics', 5000, 1, 1); INSERT INTO Cargo (CargoID, CargoName, Quantity, VesselID, PortID) VALUES (2, 'Clothing', 3000, 2, 2); CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(50), GrossTonnage INT); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage) VALUES (1, 'Ever Ace', 235000); INSERT INTO Vessel (VesselID, VesselName, GrossTonnage) VALUES (2, 'Algeciras', 128000); CREATE TABLE Port (PortID INT, PortName VARCHAR(50), City VARCHAR(50), Country VARCHAR(50)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands');", "output": "SELECT CargoName, Quantity, RANK() OVER (PARTITION BY v.VesselID, p.PortID ORDER BY Quantity DESC) AS Rank FROM Cargo c JOIN Vessel v ON c.VesselID = v.VesselID JOIN Port p ON c.PortID = p.PortID;"}
{"input": " \uc778\uc885 \ubc0f \uc131\ubcc4\uc5d0 \ub530\ub978 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CommunityHealthWorkersRG (WorkerID INT, Age INT, Race VARCHAR(255), Gender VARCHAR(255)); INSERT INTO CommunityHealthWorkersRG (WorkerID, Age, Race, Gender) VALUES (1, 35, 'Hispanic', 'Female'), (2, 40, 'African American', 'Male'), (3, 50, 'Caucasian', 'Female'), (4, 45, 'Asian', 'Male');", "output": "SELECT Race, Gender, AVG(Age) as AvgAge FROM CommunityHealthWorkersRG GROUP BY Race, Gender;"}
{"input": " 2021\ub144 \ucd9c\uc2dc\ub41c \ubdf0\ud2f0 \uc81c\ud488\uc758 \ube0c\ub79c\ub4dc\ubcc4 \ud3c9\uade0 \ud3c9\uc810\uc740 \uba87 \uc810\uc778\uac00\uc694?", "context": "CREATE TABLE product_reviews (product_id INT, brand VARCHAR(50), launch_date DATE, rating FLOAT); INSERT INTO product_reviews (product_id, brand, launch_date, rating) VALUES (1, 'Loreal', '2021-01-01', 4.2), (2, 'Garnier', '2021-03-15', 3.9), (3, 'Loreal', '2021-07-01', 4.5);", "output": "SELECT brand, AVG(rating) as avg_rating FROM (SELECT brand, rating, ROW_NUMBER() OVER (PARTITION BY brand ORDER BY launch_date) as rn FROM product_reviews WHERE EXTRACT(YEAR FROM launch_date) = 2021) t WHERE rn = 1 GROUP BY brand;"}
{"input": "\ub3c4\uc2dc \uc9c0\uc5ed\uacfc \ube44\uad50\ud558\uc5ec \ub18d\ucd0c \uc9c0\uc5ed\uc758 \uc815\uc2e0 \uac74\uac15 \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uc758 \ucd1d \uc218\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE providers (id INT, specialty VARCHAR(20), location VARCHAR(20), state VARCHAR(10)); INSERT INTO providers (id, specialty, location, state) VALUES (1, 'psychiatrist', 'rural', 'NY'), (2, 'therapist', 'urban', 'NY'), (3, 'psychologist', 'rural', 'CA'), (4, 'social worker', 'urban', 'TX');", "output": "SELECT (SELECT COUNT(*) FROM providers WHERE specialty LIKE '%mental health%' AND location LIKE '%rural%') AS rural_count, (SELECT COUNT(*) FROM providers WHERE specialty LIKE '%mental health%' AND location LIKE '%urban%') AS urban_count;"}
{"input": " \uac19\uc740 \uc800\ub110\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \uac8c\uc7ac\ub41c \ucc9c\uccb4\ubb3c\ub9ac\ud559 \uc5f0\uad6c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astrophysics_Research (id INT, title VARCHAR(100), researcher VARCHAR(50), publication_year INT, journal VARCHAR(50)); INSERT INTO Astrophysics_Research (id, title, researcher, publication_year, journal) VALUES (1, 'The Formation of Stars', 'Isabelle Baraffe', 2015, 'The Astrophysical Journal'); INSERT INTO Astrophysics_Research (id, title, researcher, publication_year, journal) VALUES (2, 'The Evolution of Galaxies', 'Francois Hammer', 2018, 'Astronomy & Astrophysics'); INSERT INTO Astrophysics_Research (id, title, researcher, publication_year, journal) VALUES (3, 'The Formation of Stars', 'Isabelle Baraffe', 2016, 'The Astrophysical Journal');", "output": "SELECT journal, COUNT(*) as research_count FROM Astrophysics_Research GROUP BY journal ORDER BY research_count DESC;"}
{"input": " '\uc720\ub2c8\ubc84\uc124 \ud53d\uccd0\uc2a4' \ub4f1 \ud2b9\uc815 \uc2a4\ud29c\ub514\uc624\uc758 \uc7a5\ub974\ubcc4 \uc601\ud654 \ubc30\uae09\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE movie_data (id INT, studio VARCHAR(255), genre VARCHAR(255)); INSERT INTO movie_data (id, studio, genre) VALUES (1, 'Universal Pictures', 'Action'); INSERT INTO movie_data (id, studio, genre) VALUES (2, 'Universal Pictures', 'Comedy'); INSERT INTO movie_data (id, studio, genre) VALUES (3, 'Universal Pictures', 'Drama'); INSERT INTO movie_data (id, studio, genre) VALUES (4, 'Universal Pictures', 'Sci-Fi'); INSERT INTO movie_data (id, studio, genre) VALUES (5, 'Warner Bros. Pictures', 'Action');", "output": "SELECT studio, genre, COUNT(*) as count FROM movie_data WHERE studio = 'Universal Pictures' GROUP BY studio, genre;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc628\ud0c0\ub9ac\uc624\uc640 \ube0c\ub9ac\ud2f0\uc2dc \uceec\ub7fc\ube44\uc544\uc5d0\uc11c \ubc95\ub960\uad6c\uc870\uac00 \uc81c\uacf5\ub418\uc5c8\ub358 \uace0\uc720\ud55c \ubc95\uc6d0 \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE legal_aid_ontario (court_location VARCHAR(50), date DATE); INSERT INTO legal_aid_ontario VALUES ('Toronto', '2022-02-01'), ('Ottawa', '2021-06-15'), ('Kingston', '2020-09-03'); CREATE TABLE legal_aid_bc (court_location VARCHAR(50), date DATE); INSERT INTO legal_aid_bc VALUES ('Vancouver', '2022-03-10'), ('Victoria', '2021-12-20'), ('Surrey', '2020-07-25');", "output": "SELECT DISTINCT court_location FROM legal_aid_ontario WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) UNION ALL SELECT DISTINCT court_location FROM legal_aid_bc WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);"}
{"input": " 2021\ub144 \ub274\uc695\uc758 \uac01 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\uc5d0 \ub300\ud55c \ucd5c\uc18c \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Infrastructure_Projects (Project_ID INT, Project_Name VARCHAR(255), Project_Type VARCHAR(255), Cost FLOAT, Year INT, State VARCHAR(255));", "output": "SELECT Project_Type, MIN(Cost) FROM Infrastructure_Projects WHERE Year = 2021 AND State = 'New York' GROUP BY Project_Type;"}
{"input": "2021\ub144\uc5d0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc774 \uac00\uc7a5 \uc801\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (volunteer_id INT, program_id INT, hours DECIMAL(10, 2), hour_date DATE); INSERT INTO volunteer_hours VALUES (4, 101, 1.00, '2021-01-01'), (5, 101, 1.50, '2021-02-01'), (6, 103, 0.50, '2021-01-10');", "output": "SELECT program_id, MIN(SUM(hours)) FROM volunteer_hours GROUP BY program_id;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uba54\ub274 \ud56d\ubaa9\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (restaurant_id INT, is_sustainable BOOLEAN); INSERT INTO menu_items (restaurant_id, is_sustainable) VALUES (1, TRUE), (1, FALSE), (2, TRUE), (2, TRUE), (3, FALSE), (3, TRUE);", "output": "SELECT restaurant_id, (COUNT(*) FILTER (WHERE is_sustainable = TRUE) * 100.0 / COUNT(*)) AS percentage FROM menu_items GROUP BY restaurant_id;"}
{"input": " '\ub7f0\ub358' \uc9c0\uc5ed\uc5d0\uc11c \uacb0\uc81c \ubc29\ubc95\ubcc4\ub85c \uc628\ub77c\uc778\uc73c\ub85c \ud310\ub9e4\ub41c '\uc6b8' \uc18c\uc7ac \uc758\ub958\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT PRIMARY KEY, transaction_date DATE, quantity_sold INT, payment_method VARCHAR(255), region VARCHAR(255), garment_material VARCHAR(255));", "output": "SELECT payment_method, SUM(quantity_sold) as total_quantity_sold_online FROM sales WHERE region = 'London' AND garment_material = 'wool' AND transaction_date >= '2022-01-01' AND transaction_date <= '2022-12-31' AND payment_method IS NOT NULL GROUP BY payment_method;"}
{"input": " \"\uc2a4\ud0c0\uc27d \uc1fc\ub2e4\uc6b4\"\uc758 \ub2e8\uc77c \uac8c\uc784 \uc138\uc158\uc5d0\uc11c \ud50c\ub808\uc774\uc5b4\uac00 \ub2ec\uc131\ud55c \ucd5c\ub300 \ud0ac \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Kills (SessionID INT, PlayerID INT, Game TEXT, Kills INT); INSERT INTO Kills (SessionID, PlayerID, Game, Kills) VALUES (1, 1, 'Starship Showdown', 25), (2, 2, 'Starship Showdown', 30), (3, 3, 'Starship Showdown', 15);", "output": "SELECT MAX(Kills) FROM Kills WHERE Game = 'Starship Showdown';"}
{"input": "\ud1a0\ub860\ud1a0'\uc640 '\ubaac\ud2b8\ub9ac\uc62c'\uc758 \ucd1d \uc804\uae30\uc790\ub3d9\ucc28 \ubc0f \uc790\uc728\uc8fc\ud589\ucc28 \ub300\uc218 \ud45c\uc2dc", "context": "CREATE TABLE public.vehicles (id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO public.vehicles (id, type, city) VALUES (1, 'electric_car', 'Toronto'), (2, 'conventional_car', 'Toronto'), (3, 'autonomous_bus', 'Toronto'), (4, 'autonomous_car', 'Montreal'), (5, 'conventional_car', 'Montreal'), (6, 'electric_bus', 'Montreal');", "output": "SELECT SUM(cnt) FROM (SELECT city, COUNT(*) AS cnt FROM public.vehicles WHERE city IN ('Toronto', 'Montreal') AND (type LIKE 'electric%' OR type LIKE 'autonomous%') GROUP BY city) AS subquery;"}
{"input": " '\uae08'\uacfc '\ubc31\uae08' \uad11\uc0b0 \uadfc\ub85c\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine (id INT, name TEXT, location TEXT); CREATE TABLE worker (id INT, name TEXT, birthdate DATE, mine_id INT);", "output": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(worker.birthdate)) as average_age FROM worker WHERE worker.mine_id IN (SELECT id FROM mine WHERE name IN ('Gold', 'Platinum'));"}
{"input": " \uc778\ub3c4\uc591\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE indian_ocean (id INT, min_depth FLOAT, max_depth FLOAT); INSERT INTO indian_ocean (id, min_depth, max_depth) VALUES (1, 3646, 7906);", "output": "SELECT MIN(min_depth) AS min_depth, MAX(max_depth) AS max_depth FROM indian_ocean WHERE id = 1;"}
{"input": "\ucd1d \ub9ac\ubdf0 \uc218 \uc911 \uac01 \uc720\uc801\uc9c0\uc5d0 \ub300\ud55c \ubc29\ubb38\uac1d \ub9ac\ubdf0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE HeritageSitesReviews (ID INT, SiteName VARCHAR(100), Reviews INT); INSERT INTO HeritageSitesReviews (ID, SiteName, Reviews) VALUES (1, 'Machu Picchu', 5000); INSERT INTO HeritageSitesReviews (ID, SiteName, Reviews) VALUES (2, 'Taj Mahal', 8000);", "output": "SELECT SiteName, Reviews, 100.0 * Reviews / SUM(Reviews) OVER () AS Percentage FROM HeritageSitesReviews;"}
{"input": "\uc9c0\ub09c 3\ub144\uac04 LGBTQ+ \ucc3d\uc5c5\uc790\uc640 \ud568\uaed8 \uc124\ub9bd\ub41c \ud68c\uc0ac\uc5d0 \ub300\ud574 \ubaa8\uae08\ub41c \uc790\uae08\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name TEXT, founding_year INT, founder_gender TEXT, founder_lgbtq BOOLEAN); INSERT INTO company (id, name, founding_year, founder_gender, founder_lgbtq) VALUES (1, 'GreenTech Inc', 2021, 'non-binary', true); INSERT INTO company (id, name, founding_year, founder_gender, founder_lgbtq) VALUES (2, 'Fintech Boost', 2019, 'male', false);", "output": "SELECT SUM(funding_raised) FROM investment_rounds INNER JOIN company ON investment_rounds.company_id = company.id WHERE company.founding_year >= (SELECT YEAR(CURRENT_DATE()) - 3) AND company.founder_lgbtq = true;"}
{"input": " \uc9c0\ub09c\ud574 \ud30c\ub9ac \uce5c\ud658\uacbd \ud638\ud154\uc774 \uc9c0\uc5ed \uacbd\uc81c\uc5d0 \ubbf8\uce58\ub294 \ucd1d \uc601\ud5a5\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE economic_impact (impact_id INT, hotel_id INT, city TEXT, amount DECIMAL(10,2)); INSERT INTO economic_impact (impact_id, hotel_id, city, amount) VALUES (1, 1, 'Paris', 50000.00), (2, 2, 'Paris', 75000.00);", "output": "SELECT SUM(amount) FROM economic_impact WHERE city = 'Paris' AND DATE_TRUNC('year', timestamp) = DATE_TRUNC('year', NOW() - INTERVAL '1 year') AND hotel_id IN (SELECT hotel_id FROM eco_hotels WHERE city = 'Paris');"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc5d0\uc11c \uac1c\ucd5c\ud55c \uad6d\ubc29\uc678\uad50 \ud589\uc0ac\uc758 \ucd1d \ud69f\uc218\ub97c \uac00\uc7a5 \uc790\uc8fc \ud589\uc0ac\ub97c \uc8fc\ucd5c\ud558\ub294 \uc21c\uc11c\ub300\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DefenseDiplomacyEvents (country VARCHAR(255), event VARCHAR(255), year INT); INSERT INTO DefenseDiplomacyEvents (country, event, year) VALUES ('Algeria', 'Military Expo 2020', 2020); INSERT INTO DefenseDiplomacyEvents (country, event, year) VALUES ('Egypt', 'Defense Summit 2019', 2019);", "output": "SELECT country, COUNT(event) as event_count, ROW_NUMBER() OVER (ORDER BY COUNT(event) DESC) as host_rank FROM DefenseDiplomacyEvents WHERE country LIKE 'Africa%' AND year >= 2016 GROUP BY country ORDER BY host_rank;"}
{"input": " \"\uc544\ud504\ub9ac\uce74\"\uc640 \"\uc624\uc138\uc544\ub2c8\uc544\" \ucd9c\uc2e0\uc758 \uc120\uc218\ub85c \uad6c\uc131\ub41c e\uc2a4\ud3ec\uce20 \ud300\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE teams (id INT, region VARCHAR(10)); INSERT INTO teams (id, region) VALUES (1, 'Africa'); INSERT INTO teams (id, region) VALUES (2, 'Oceania');", "output": "SELECT id FROM teams WHERE region = 'Africa' INTERSECT SELECT id FROM teams WHERE region = 'Oceania';"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ubbf8\uad6d \ub0b4 \ub450 \uac1c \uc774\uc0c1\uc758 \ud56d\uad6c\ub97c \ubc29\ubb38\ud55c \ubaa8\ub4e0 \uc120\ubc15\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE vessels (vessel_id INT, vessel_name TEXT, flag TEXT);CREATE TABLE visits (visit_id INT, vessel_id INT, port_id INT, visit_date DATE);CREATE TABLE ports (port_id INT, port_name TEXT, country TEXT);", "output": "SELECT DISTINCT vessels.vessel_name FROM vessels JOIN visits ON vessels.vessel_id = visits.vessel_id JOIN ports ON visits.port_id = ports.port_id WHERE ports.country = 'US' AND visits.visit_date BETWEEN DATEADD(month, -3, CURRENT_DATE) AND CURRENT_DATE GROUP BY vessels.vessel_id HAVING COUNT(DISTINCT ports.port_id) > 1;"}
{"input": " \ubb3c\ub9ac\ud559\uacfc \ub300\ud559\uc6d0\uc0dd 1\uc778\ub2f9 \ud3c9\uade0 \uc5f0\uad6c\ub17c\ubb38 \uc218\ub294 \uba87 \ud3b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO students (id, name, department) VALUES (1, 'Grace', 'Chemistry'); INSERT INTO students (id, name, department) VALUES (2, 'Harry', 'Physics'); CREATE TABLE publications (student_id INT, year INT, title VARCHAR(100), department VARCHAR(50)); INSERT INTO publications (student_id, year, title, department) VALUES (1, 2020, 'Organic Chemistry', 'Chemistry'); INSERT INTO publications (student_id, year, title, department) VALUES (2, 2019, 'Particle Physics', 'Physics'); INSERT INTO publications (student_id, year, title, department) VALUES (1, 2019, 'Inorganic Chemistry', 'Chemistry');", "output": "SELECT AVG(pubs_per_student) FROM (SELECT COUNT(p.id) AS pubs_per_student FROM students s JOIN publications p ON s.id = p.student_id WHERE s.department = 'Physics' GROUP BY s.id) t;"}
{"input": " \uac00\uc7a5 \ub192\uc740 \uc7ac\uc815 \ub2a5\ub825\uc744 \uac16\ucd98 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE financial_capability (id INT, country VARCHAR(20), capability DECIMAL(3, 2)); INSERT INTO financial_capability (id, country, capability) VALUES (1, 'Canada', 0.85), (2, 'Australia', 0.83), (3, 'Sweden', 0.82), (4, 'Norway', 0.81), (5, 'Finland', 0.80);", "output": "SELECT country, capability FROM (SELECT country, capability, ROW_NUMBER() OVER (ORDER BY capability DESC) rn FROM financial_capability) t WHERE rn <= 3;"}
{"input": " \ubaa8\ub4e0 \uc9c0\uc5ed\uc5d0 \uac78\uccd0 \ud574\uc591 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc774 \ucd1d \uba87 \uac1c\ub098 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE marine_pollution_control (id INT, initiative_name TEXT, region TEXT);INSERT INTO marine_pollution_control (id, initiative_name, region) VALUES (1, 'Ocean Cleanup Project', 'Arctic'), (2, 'Coastal Waste Management', 'Antarctic'), (3, 'Plastic Pollution Reduction', 'Atlantic'), (4, 'Bio-diversity Protection', 'Pacific');", "output": "SELECT COUNT(*) FROM (SELECT region FROM marine_pollution_control GROUP BY region) r;"}
{"input": " '\uc11c\ubd80'\uc640 '\ub3d9\ubd80' \uc9c0\uc5ed\uc758 \ubcd1\uc758\uc6d0 \uc218\ub294 \ubaa8\ub450 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, region TEXT); INSERT INTO hospitals (id, name, region) VALUES (1, 'Hospital A', 'west'); INSERT INTO hospitals (id, name, region) VALUES (2, 'Hospital B', 'east'); CREATE TABLE clinics (id INT, name TEXT, region TEXT); INSERT INTO clinics (id, name, region) VALUES (1, 'Clinic A', 'west'); INSERT INTO clinics (id, name, region) VALUES (2, 'Clinic B', 'east');", "output": "SELECT 'Total Hospitals and Clinics', COUNT(*) FROM ( (SELECT * FROM hospitals WHERE region IN ('west', 'east')) UNION (SELECT * FROM clinics WHERE region IN ('west', 'east')) );"}
{"input": " \ud2b9\uc815 \ud638\ud154\uc758 \uc6d4\uac04 \uc5d0\ub108\uc9c0 \uc18c\ube44 \ucd94\uc138\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, country TEXT, energy_consumption FLOAT, month INT); INSERT INTO hotels (hotel_id, hotel_name, city, country, energy_consumption, month) VALUES (1, 'Hotel A', 'Rome', 'Italy', 12000.0, 1), (1, 'Hotel A', 'Rome', 'Italy', 13000.0, 2);", "output": "SELECT month, energy_consumption, ROW_NUMBER() OVER (ORDER BY month) as rank FROM hotels WHERE hotel_name = 'Hotel A' ORDER BY month;"}
{"input": " 2022\ub144 FIFA \uc6d4\ub4dc\ucef5\uc5d0 \ucc38\uac00\ud55c \uc120\uc218\ub4e4\uc758 \uc2e0\uae30\ub85d\uc744 \uc0bd\uc785\ud558\ub2e4", "context": "CREATE TABLE athletes (athlete_id INT, name VARCHAR(50), sport VARCHAR(50)); INSERT INTO athletes (athlete_id, name, sport) VALUES (1, 'John Doe', 'Basketball'), (2, 'Jane Smith', 'Soccer'); CREATE TABLE events (event_id INT, event_name VARCHAR(50), year INT); INSERT INTO events (event_id, event_name, year) VALUES (1, 'FIFA World Cup', 2022), (2, 'NBA Finals', 2023);", "output": "INSERT INTO athletes (athlete_id, name, sport) SELECT 3, 'Ronaldo', 'Soccer' WHERE NOT EXISTS (SELECT 1 FROM athletes WHERE name = 'Ronaldo'); INSERT INTO athletes (athlete_id, name, sport, event_id) SELECT 4, 'Messi', 'Soccer', (SELECT event_id FROM events WHERE event_name = 'FIFA World Cup' AND year = 2022) WHERE NOT EXISTS (SELECT 1 FROM athletes WHERE name = 'Messi');"}
{"input": " \ub274\uc695 \ub808\uc2a4\ud1a0\ub791\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uce74\ud14c\uace0\ub9ac\uc758 \uc774\uc804 \ud56d\ubaa9\ubcf4\ub2e4 \uc778\uae30\uac00 \ub354 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MenuItems (MenuID INT, RestaurantID INT, MenuItem VARCHAR(255), Category VARCHAR(255), Popularity INT);", "output": "SELECT MenuID, MenuItem, Category, Popularity, LAG(Popularity) OVER (PARTITION BY Category ORDER BY Popularity DESC) as PrevItemPopularity FROM MenuItems WHERE RestaurantID IN (SELECT RestaurantID FROM Restaurants WHERE State = 'New York');"}
{"input": " 2023\ub144 \uc0c1\ubc18\uae30\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud0d0\uc0ac \uc800\ub110\ub9ac\uc998 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE investigative_projects (id INT, title VARCHAR(100), category VARCHAR(50), completed_date DATE); INSERT INTO investigative_projects (id, title, category, completed_date) VALUES (1, 'Investigation 1', 'Corruption', '2023-03-15'), (2, 'Investigation 2', 'Environment', '2023-01-05'), (3, 'Investigation 3', 'Politics', '2022-12-31');", "output": "SELECT COUNT(*) FROM investigative_projects WHERE MONTH(completed_date) <= 6 AND YEAR(completed_date) = 2023;"}
{"input": " \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \uad11\ub300\uc5ed \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_speeds (speed_id INT, country VARCHAR(255), speed DECIMAL(10,2)); INSERT INTO broadband_speeds (speed_id, country, speed) VALUES (1, 'USA', 100.00), (2, 'Canada', 150.00), (3, 'Mexico', 75.00);", "output": "SELECT country, AVG(speed) AS avg_speed FROM broadband_speeds GROUP BY country;"}
{"input": " \uac01 \uc790\uce58\uad6c\ubcc4 \ubc94\uc8c4 \uc0ac\uac74, \uae34\uae09\uc804\ud654, \ud654\uc7ac \uc0ac\uac74\uc758 \ucd1d \ubc1c\uc0dd \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE crime_incidents (id INT, district VARCHAR(20), type VARCHAR(20)); INSERT INTO crime_incidents (id, district, type) VALUES (1, 'district1', 'theft'), (2, 'district2', 'burglary'); CREATE TABLE emergency_calls (id INT, district VARCHAR(20), type VARCHAR(20)); INSERT INTO emergency_calls (id, district, type) VALUES (1, 'district1', 'emergency call'); CREATE TABLE fire_incidents (id INT, district VARCHAR(20), type VARCHAR(20)); INSERT INTO fire_incidents (id, district, type) VALUES (1, 'district2', 'fire incident');", "output": "SELECT district, 'crime incidents' AS type, COUNT(*) FROM crime_incidents GROUP BY district UNION ALL SELECT district, 'emergency calls' AS type, COUNT(*) FROM emergency_calls GROUP BY district UNION ALL SELECT district, 'fire incidents' AS type, COUNT(*) FROM fire_incidents GROUP BY district;"}
{"input": " 2010\ub144 \uc774\ud6c4\uc5d0 \ubc1c\ub9e4\ub41c '\ud31d' \uc7a5\ub974\uc758 \uace1 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE songs (id INT, title TEXT, release_year INT, genre TEXT); INSERT INTO songs (id, title, release_year, genre) VALUES (1, 'Song1', 2011, 'pop'), (2, 'Song2', 2009, 'rock');", "output": "SELECT COUNT(*) FROM songs WHERE release_year > 2010 AND genre = 'pop';"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc77c\ubcf8\uc744 \ubc29\ubb38\ud55c \ud574\uc678 \uad00\uad11\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourists (tourist_id INT, visited_date DATE, country TEXT); INSERT INTO tourists (tourist_id, visited_date, country) VALUES (1, '2020-01-01', 'Japan'), (2, '2019-05-05', 'USA'), (3, '2018-12-31', 'Japan');", "output": "SELECT COUNT(*) FROM tourists WHERE country = 'Japan' AND visited_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR);"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud558\ub294 \ubc94\uc8c4 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crimes (id INT PRIMARY KEY, crime VARCHAR(255), district VARCHAR(255), date DATE); INSERT INTO crimes (id, crime, district, date) VALUES (1, 'Murder', 'Downtown', '2021-01-01'); INSERT INTO crimes (id, crime, district, date) VALUES (2, 'Theft', 'Uptown', '2021-02-01');", "output": "SELECT district, crime, COUNT(*) as count, RANK() OVER(PARTITION BY district ORDER BY count DESC) as rank FROM crimes GROUP BY district, crime;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uc2e0\uaddc \ucc44\uc6a9\uc758 \ub2e4\uc591\uc131 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE NewHires (HireID INT, Gender VARCHAR(10), Ethnicity VARCHAR(20), HireDate DATE); INSERT INTO NewHires (HireID, Gender, Ethnicity, HireDate) VALUES (1, 'Male', 'Hispanic', '2022-02-22'), (2, 'Female', 'Asian', '2022-04-11'), (3, 'Non-binary', 'White', '2021-12-15');", "output": "SELECT Gender, Ethnicity, COUNT(*) FROM NewHires WHERE HireDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) AND CURRENT_DATE GROUP BY Gender, Ethnicity;"}
{"input": " \ubd80\uc11c\ubcc4 \ub2e4\uc591\uc131 \ubc0f \ud3ec\uc6a9\uc131 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeTraining(EmployeeID INT, Department VARCHAR(255), TrainingType VARCHAR(255), CompletionDate DATE);", "output": "SELECT Department, (COUNT(CASE WHEN TrainingType = 'Diversity and Inclusion' THEN 1 END) / COUNT(*)) * 100 AS Percentage FROM EmployeeTraining GROUP BY Department;"}
{"input": "\ub274\uc695\uc2dc' \uc778\uad6c \uc911 \uc678\uad6d \ud0dc\uc0dd\uc778 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE population_data (city VARCHAR(255), foreign_born_population INT, total_population INT); INSERT INTO population_data (city, foreign_born_population, total_population) VALUES ('New York City', 3697345, 8601269);", "output": "SELECT (foreign_born_population * 100.0 / total_population) AS percentage FROM population_data WHERE city = 'New York City';"}
{"input": " 2020\ub144 2\ubd84\uae30\uc5d0 \ubbf8 \uacf5\uad70\uacfc \ubbf8 \ud574\uad70\uc774 \ubcf4\uace0\ud55c \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0\uc758 \ucd1d \uac74\uc218\uc640 \uc0ac\uace0 \uc720\ud615\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cybersecurity_incidents (incident_id INT, incident_date DATE, incident_type VARCHAR(255), reported_by VARCHAR(255)); INSERT INTO cybersecurity_incidents (incident_id, incident_date, incident_type, reported_by) VALUES (1, '2020-04-01', 'Phishing', 'US Air Force'); INSERT INTO cybersecurity_incidents (incident_id, incident_date, incident_type, reported_by) VALUES (2, '2020-06-15', 'Malware', 'US Navy');", "output": "SELECT incident_type, COUNT(*) FROM cybersecurity_incidents WHERE incident_date BETWEEN '2020-04-01' AND '2020-06-30' AND reported_by IN ('US Air Force', 'US Navy') GROUP BY incident_type;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc804\uccb4 \uc11c\uc2dd\uc9c0\uc5d0 \ub300\ud55c \ubcf4\ud638 \uc11c\uc2dd\uc9c0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE habitats (id INT, name VARCHAR(50), region VARCHAR(50), protected BOOLEAN); INSERT INTO habitats (id, name, region, protected) VALUES (1, 'Rainforest', 'South America', TRUE), (2, 'Savannah', 'Africa', FALSE), (3, 'Mangrove', 'Asia', TRUE);", "output": "SELECT region, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM habitats WHERE region = h.region) as ratio FROM habitats h WHERE protected = TRUE GROUP BY region;"}
{"input": " \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0 \uae30\ubc18\uc744 \ub454 \uc870\uc9c1\uc774 \uac1c\ubc1c\ud55c AI \ubaa8\ub378\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc774\ub4e4 \ubaa8\ub378 \uc911 \ucd5c\ub300 \uc548\uc804 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AIModels (id INT, model_name VARCHAR(50), organization VARCHAR(50), application_type VARCHAR(50), safety_rating INT); INSERT INTO AIModels (id, model_name, organization, application_type, safety_rating) VALUES (1, 'AI4Welfare', 'Microsoft', 'Social Welfare', 85), (2, 'AI4Empowerment', 'Google', 'Social Welfare', 90), (3, 'AI4Assistance', 'IBM', 'Social Welfare', 88), (4, 'AI4Support', 'Alibaba', 'Social Welfare', 92), (5, 'AI4Access', 'Tencent', 'Social Welfare', 80), (6, 'AI4Education', 'Baidu', 'Education', 95);", "output": "SELECT organization, COUNT(model_name) as model_count FROM AIModels WHERE organization IN (SELECT DISTINCT organization FROM AIModels WHERE country IN (SELECT country FROM AIContinents WHERE continent = 'Asia-Pacific')) GROUP BY organization ORDER BY model_count DESC LIMIT 1; SELECT MAX(safety_rating) as max_safety_rating FROM AIModels WHERE organization IN (SELECT DISTINCT organization FROM AIModels WHERE country IN (SELECT country FROM AIContinents WHERE continent = 'Asia-Pacific'));"}
{"input": " \uc5ec\ud589\uacbd\ubcf4 3\ub2e8\uacc4 \uc774\uc0c1 \uad6d\uac00\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE travel_advisory (id INT, country VARCHAR(20), level INT); INSERT INTO travel_advisory (id, country, level) VALUES (1, 'Mexico', 2), (2, 'Brazil', 3), (3, 'Spain', 1), (4, 'Italy', 3), (5, 'Germany', 1);", "output": "SELECT SUM(tourists) FROM (SELECT 1 AS tourists FROM travel_advisory WHERE level >= 3);"}
{"input": " 2022-12-31 \ud604\uc7ac \ucd1d \uc790\uc0b0 \uac00\uce58\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uba85\uc758 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name VARCHAR(50), total_assets DECIMAL(10,2)); INSERT INTO clients (client_id, name, total_assets) VALUES (1, 'Min Aung', 600000.00), (2, 'Maria Rodriguez', 750000.00), (3, 'Ali Al-Hashimi', 800000.00), (4, 'Kim Jong-un', 900000.00), (5, 'Vladimir Putin', 1000000.00);", "output": "SELECT name, SUM(total_assets) as total_assets FROM clients WHERE DATE(client_timestamp) = '2022-12-31' GROUP BY name ORDER BY total_assets DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548\uc758 \ud310\ub9e4 \ucd94\uc138\ub97c \uc8fc\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (sale_id INT, sale_date DATE, sale_amount DECIMAL(10,2)); INSERT INTO sales (sale_id, sale_date, sale_amount) VALUES (1, '2022-01-01', 1000.00), (2, '2022-01-08', 1200.00), (3, '2022-01-15', 1500.00), (4, '2022-01-22', 1800.00), (5, '2022-01-29', 2000.00), (6, '2022-02-05', 2200.00), (7, '2022-02-12', 2500.00), (8, '2022-02-19', 2800.00), (9, '2022-02-26', 3000.00), (10, '2022-03-05', 3200.00), (11, '2022-03-12', 3500.00), (12, '2022-03-19', 3800.00), (13, '2022-03-26', 4000.00);", "output": "SELECT DATE_TRUNC('week', sale_date) as week, SUM(sale_amount) as total_sales FROM sales WHERE sale_date >= DATEADD(month, -3, CURRENT_DATE) GROUP BY week ORDER BY week;"}
{"input": " \ud559\uc5c5 \ubc0f \uae30\uc219\uc0ac \ubd80\uc11c \ubaa8\ub450\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc740 \ud559\uc0dd\uc758 \uc774\ub984\uacfc ID\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE student_info (student_id INT, name VARCHAR(255)); INSERT INTO student_info (student_id, name) VALUES (1, 'Jane Doe'); INSERT INTO student_info (student_id, name) VALUES (2, 'Jim Smith'); CREATE TABLE student_accommodations (student_id INT, department VARCHAR(255), date DATE); INSERT INTO student_accommodations (student_id, department, date) VALUES (1, 'Academic', '2021-03-01'); INSERT INTO student_accommodations (student_id, department, date) VALUES (1, 'Residential', '2021-03-02');", "output": "SELECT s.student_id, s.name FROM student_info s JOIN student_accommodations sa1 ON s.student_id = sa1.student_id JOIN student_accommodations sa2 ON s.student_id = sa2.student_id WHERE sa1.department <> sa2.department AND sa1.department IN ('Academic', 'Residential') GROUP BY s.student_id, s.name HAVING COUNT(DISTINCT sa1.department) = 2;"}
{"input": " 8\uc6d4 \uc9c0\uc911\ud574\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE temperature_med (id INT, location TEXT, date DATE, value FLOAT); INSERT INTO temperature_med (id, location, date, value) VALUES (1, 'Mediterranean Sea', '2022-08-01', 24); INSERT INTO temperature_med (id, location, date, value) VALUES (2, 'Mediterranean Sea', '2022-08-15', 26);", "output": "SELECT AVG(value) FROM temperature_med WHERE location = 'Mediterranean Sea' AND EXTRACT(MONTH FROM date) = 8;"}
{"input": " \ubaa8\ub4e0 \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \ucd1d \uac70\ub798 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE digital_assets (asset_id varchar(10), asset_name varchar(10)); INSERT INTO digital_assets (asset_id, asset_name) VALUES ('ETH', 'Ethereum'), ('BTC', 'Bitcoin'); CREATE TABLE transactions (transaction_id serial, asset_id varchar(10), transaction_amount numeric); INSERT INTO transactions (asset_id, transaction_amount) VALUES ('ETH', 120), ('ETH', 230), ('BTC', 500), ('ETH', 100);", "output": "SELECT COUNT(*) FROM transactions;"}
{"input": " \ub274\uc695\uacfc \ub274\uc800\uc9c0\uc758 \uc815\ucc45 \uc720\ud615 \ubc0f \uc9c0\uc5ed\ubcc4\ub85c \uc815\ucc45 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policy_types (id INT, policy_type TEXT); INSERT INTO policy_types (id, policy_type) VALUES (1, 'Auto'); INSERT INTO policy_types (id, policy_type) VALUES (2, 'Home'); CREATE TABLE regions (id INT, region TEXT); INSERT INTO regions (id, region) VALUES (1, 'NYC'); INSERT INTO regions (id, region) VALUES (2, 'New Jersey'); CREATE TABLE policies (id INT, policy_type_id INT, region_id INT, issue_date DATE); INSERT INTO policies (id, policy_type_id, region_id) VALUES (1, 1, 1); INSERT INTO policies (id, policy_type_id, region_id) VALUES (2, 2, 2);", "output": "SELECT policy_types.policy_type, regions.region, COUNT(*) AS num_policies FROM policies JOIN policy_types ON policies.policy_type_id = policy_types.id JOIN regions ON policies.region_id = regions.id WHERE regions.region IN ('NYC', 'New Jersey') GROUP BY policy_types.policy_type, regions.region;"}
{"input": " 2021\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc \uacf5\uacf5 \uc548\uc804 \ubc0f \ud658\uacbd \ubcf4\ud638 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE budget_allocation (year INT, state VARCHAR(20), service VARCHAR(20), amount INT); INSERT INTO budget_allocation VALUES (2021, 'California', 'Public Safety', 3000000), (2021, 'California', 'Environmental Protection', 4000000);", "output": "SELECT SUM(amount) FROM budget_allocation WHERE state = 'California' AND (service = 'Public Safety' OR service = 'Environmental Protection') AND year = 2021;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc81c\uc791\ub418\uc5b4 2010\ub144\uc5d0\uc11c 2020\ub144 \uc0ac\uc774\uc5d0 \uac1c\ubd09\ub41c \uc601\ud654\ub97c \uc7a5\ub974\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(255), release_year INT, rating FLOAT, genre VARCHAR(255), country VARCHAR(255)); INSERT INTO movies (id, title, release_year, rating, genre, country) VALUES (1, 'Movie1', 2015, 7.8, 'Action', 'USA'), (2, 'Movie2', 2018, 6.4, 'Drama', 'USA');", "output": "SELECT genre, AVG(rating) FROM movies WHERE release_year BETWEEN 2010 AND 2020 AND country = 'USA' GROUP BY genre;"}
{"input": " \uc791\ub144\uc5d0 \uc720\ub7fd\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc218\uc775\uc744 \ucc3d\ucd9c\ud55c OTA \ud50c\ub7ab\ud3fc\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ota_revenue (revenue_id INT, ota_platform VARCHAR(50), region VARCHAR(20), revenue_date DATE, revenue FLOAT);", "output": "SELECT ota_platform, region, SUM(revenue) as total_revenue FROM ota_revenue WHERE region = 'Europe' AND revenue_date >= DATE(NOW()) - INTERVAL 1 YEAR GROUP BY ota_platform ORDER BY total_revenue DESC;"}
{"input": " 2019\ub144 \uacb0\ud575 \uac10\uc5fc\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE infections (id INT, patient_id INT, infection_type VARCHAR(20), infection_date DATE);", "output": "SELECT COUNT(*) * 100000 / (SELECT COUNT(*) FROM infections WHERE YEAR(infection_date) = 2019) AS infection_rate FROM infections WHERE infection_type = 'Tuberculosis' AND YEAR(infection_date) = 2019;"}
{"input": " \ubbf8\uad6d\uc5d0 \uc18c\uc7ac\ud55c \uc7ac\ub2e8\uc774 \uc9c0\uc6d0\ud55c \ubcf4\uc870\uae08 \ucd1d\uc561\uc744 \uc6d0\uc778 \ubd84\uc57c\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE foundations (id INT, name TEXT, country TEXT, total_grants_given FLOAT); INSERT INTO foundations (id, name, country, total_grants_given) VALUES (1, 'Gates Foundation', 'USA', 5000000);", "output": "SELECT f.country, c.cause_area, SUM(f.total_grants_given) FROM foundations f INNER JOIN grants g ON f.id = g.foundation_id INNER JOIN cause_areas c ON g.cause_area_id = c.id GROUP BY f.country, c.cause_area;"}
{"input": " 150\ubd84 \ubbf8\ub9cc \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE player_sessions (id INT, player_name TEXT, playtime INT); INSERT INTO player_sessions (id, player_name, playtime) VALUES (1, 'Olivia', 120); INSERT INTO player_sessions (id, player_name, playtime) VALUES (2, 'Olivia', 150); INSERT INTO player_sessions (id, player_name, playtime) VALUES (3, 'William', 200);", "output": "SELECT COUNT(*) FROM player_sessions WHERE playtime < 150;"}
{"input": " 2020\ub144\uc5d0\ub294 \uac01 \uc870\uc9c1\uc5d0\uc11c \uba87 \uac1c\uc758 \uc704\uc131\uc744 \ubc30\uce58\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (ID INT, Organization VARCHAR(50), Year INT, Number_Of_Satellites INT); INSERT INTO Satellites (ID, Organization, Year, Number_Of_Satellites) VALUES (1, 'NASA', 2018, 21), (2, 'SpaceX', 2018, 18), (3, 'ESA', 2019, 15), (4, 'NASA', 2020, 32), (5, 'SpaceX', 2020, 60);", "output": "SELECT Organization, Number_Of_Satellites FROM Satellites WHERE Year = 2020 GROUP BY Organization;"}
{"input": " 1\uc6d4\uacfc 2\uc6d4 \uc0ac\uc774\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \ud638\uc8fc\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d \uc218\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tourism (date DATE, host_country VARCHAR(50), visitor_country VARCHAR(50), number_of_tourists INT); INSERT INTO tourism (date, host_country, visitor_country, number_of_tourists) VALUES ('2022-01-01', 'Australia', 'United States', 10000), ('2022-02-01', 'Australia', 'United States', 11000);", "output": "SELECT (SUM(number_of_tourists) - LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date)) / LAG(SUM(number_of_tourists)) OVER (PARTITION BY visitor_country ORDER BY date) * 100.0 as percentage_change FROM tourism WHERE host_country = 'Australia' AND visitor_country = 'United States';"}
{"input": "CO2 \ubc30\ucd9c\ub7c9\uc774 1000\ubcf4\ub2e4 \ub192\uc740 'smart_cities' \uc2a4\ud0a4\ub9c8\uc758 \ubaa8\ub4e0 \uac74\ubb3c\uc744 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE smart_cities.buildings (id INT, city VARCHAR(255), co2_emissions INT); CREATE VIEW smart_cities.buildings_view AS SELECT id, city, co2_emissions FROM smart_cities.buildings;", "output": "DELETE FROM smart_cities.buildings WHERE id IN ( SELECT id FROM smart_cities.buildings_view WHERE co2_emissions > 1000 );"}
{"input": " 2020\ub144 '\ucc44\uad74' \ubc0f '\uc7ac\ud65c\uc6a9' \uc18c\uc2a4\uc5d0\uc11c \ub124\uc624\ub514\ubbb4\uc758 \uc6d4 \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining(year INT, element VARCHAR(10), quantity INT); INSERT INTO mining VALUES(2020, 'Neodymium', 1200); CREATE TABLE recycling(year INT, element VARCHAR(10), quantity INT); INSERT INTO recycling VALUES(2020, 'Neodymium', 400);", "output": "SELECT AVG(quantity) FROM (SELECT quantity FROM mining WHERE element = 'Neodymium' AND year = 2020 UNION ALL SELECT quantity FROM recycling WHERE element = 'Neodymium' AND year = 2020) AS total"}
{"input": " hotel_id 123\uc758 \ud3c9\uade0 \ub9ac\ubdf0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotel_reviews (hotel_id INT, review_date DATE, review_score INT);", "output": "SELECT AVG(review_score) FROM hotel_reviews WHERE hotel_id = 123;"}
{"input": " \uc218\ub839\uc774 50\ub144 \uc774\uc0c1\uc778 \ub098\ubb34\uac00 100\uadf8\ub8e8 \uc774\uc0c1 \uc788\ub294 \uc232\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE forests (id INT, name VARCHAR(255)); INSERT INTO forests (id, name) VALUES (1, 'Forest 1'), (2, 'Forest 2'), (3, 'Forest 3'); CREATE TABLE trees (id INT, forest_id INT, age INT); INSERT INTO trees (id, forest_id, age) VALUES (1, 1, 60), (2, 1, 45), (3, 2, 55), (4, 2, 65), (5, 3, 35), (6, 3, 30);", "output": "SELECT f.name FROM forests f  JOIN (SELECT forest_id FROM trees WHERE age > 50 GROUP BY forest_id HAVING COUNT(*) > 100) t ON f.id = t.forest_id;"}
{"input": " 2020\ub144 \ucd1d \ud504\ub85c\uc81d\ud2b8 \uc218 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\uc124 \ud504\ub85c\uc81d\ud2b8\uac00 \uc788\ub294 \uc0c1\uc704 2\uac1c \uc8fc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ProjectsByState (ProjectID int, State varchar(20), Year int, Sustainable bit); INSERT INTO ProjectsByState (ProjectID, State, Year, Sustainable) VALUES (1, 'California', 2020, 1), (2, 'New York', 2020, 1), (3, 'Texas', 2020, 0);", "output": "SELECT State, Sustainable, COUNT(*) as TotalProjects FROM (SELECT State, Sustainable, ROW_NUMBER() OVER (PARTITION BY State ORDER BY Year DESC) as rn FROM ProjectsByState WHERE Sustainable = 1 AND Year = 2020) t WHERE rn <= 2 GROUP BY State, Sustainable;"}
{"input": " \uc2e0\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uc885\ub958\ubcc4 \ucd1d \uc124\uce58\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, name TEXT, type TEXT, capacity INT);", "output": "SELECT type, SUM(capacity) FROM projects GROUP BY type;"}
{"input": " \ub9e4\ub2ec \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, ProgramID INT, VolunteerDate DATE); INSERT INTO Volunteers (VolunteerID, VolunteerName, ProgramID, VolunteerDate) VALUES (1, 'John Doe', 1, '2022-01-01'), (2, 'Jane Smith', 2, '2022-01-15'), (3, 'Alice Johnson', 2, '2022-02-01'), (4, 'Bob Brown', 3, '2022-02-15'), (5, 'Charlie Davis', 1, '2022-02-01');", "output": "SELECT ProgramID, EXTRACT(MONTH FROM VolunteerDate) AS Month, COUNT(VolunteerID) OVER (PARTITION BY ProgramID, EXTRACT(MONTH FROM VolunteerDate) ORDER BY ProgramID, EXTRACT(MONTH FROM VolunteerDate)) AS VolunteerCount FROM Volunteers;"}
{"input": " \uc624\ud558\uc774\uc624 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c 65\uc138 \ubbf8\ub9cc \ub2f9\ub1e8\ubcd1 \ud658\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), diagnosis VARCHAR(50), location VARCHAR(50)); INSERT INTO patients (id, name, age, gender, diagnosis, location) VALUES (1, 'Jane Doe', 65, 'Female', 'Diabetes', 'Ohio'), (2, 'John Doe', 45, 'Male', 'Diabetes', 'Ohio'), (3, 'Jim Brown', 55, 'Male', 'Diabetes', 'Ohio');", "output": "SELECT COUNT(*) FROM patients WHERE diagnosis = 'Diabetes' AND location = 'Ohio' AND age < 65;"}
{"input": " \uc5ed\uc0ac\uc801\uc73c\ub85c \uacfc\uc18c\ub300\ud45c\ub41c \uc9c0\uc5ed\uc0ac\ud68c\uc758 \uc77c\ubd80\ub85c \ud655\uc778\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityHealthWorker (WorkerID INT, Identity VARCHAR(50)); INSERT INTO CommunityHealthWorker (WorkerID, Identity) VALUES (1, 'African American'), (2, 'Hispanic'), (3, 'Asian American'), (4, 'Native American'), (5, 'Caucasian'), (6, 'African American'), (7, 'Hispanic'), (8, 'Asian American'), (9, 'Native American'), (10, 'Caucasian');", "output": "SELECT COUNT(*) as Total FROM CommunityHealthWorker WHERE Identity IN ('African American', 'Hispanic', 'Asian American', 'Native American');"}
{"input": " 2020\ub144 \uc774\ud6c4 \uc2b9\uac1d \uc218\uac00 20% \uc774\uc0c1 \uac10\uc18c\ud55c \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE public_transportation_2 (system_id INT, system_name VARCHAR(255), ridership INT, year INT);", "output": "SELECT system_name, ridership, year FROM public_transportation_2 WHERE year > 2020 AND ridership < 0.8 * (SELECT ridership FROM public_transportation_2 WHERE system_id = system_id AND year = 2020);"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c \uc81c\ud488 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE suppliers (supplier_id INT, name VARCHAR(255)); INSERT INTO suppliers (supplier_id, name) VALUES (1, 'Green Supplies'), (2, 'Eco Goods'); CREATE TABLE products (product_id INT, name VARCHAR(255), supplier_id INT); INSERT INTO products (product_id, name, supplier_id) VALUES (1, 'Refurbished Laptop', 1), (2, 'Bamboo Toothbrush', 2); CREATE TABLE sales (sale_id INT, product_id INT, sale_date DATE); INSERT INTO sales (sale_id, product_id, sale_date) VALUES (1, 1, '2022-01-05'), (2, 2, '2022-02-10'), (3, 1, '2022-03-20');", "output": "SELECT suppliers.name, COUNT(*) FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN sales ON products.product_id = sales.product_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY suppliers.name;"}
{"input": "\uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubd84\ub958\ub41c \uc81c\ud488 \ub0b4 \ucc9c\uc5f0 \uc131\ubd84\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ingredients (IngredientID INT, ProductID INT, IngredientName VARCHAR(50), Natural BOOLEAN, Category VARCHAR(50)); INSERT INTO Ingredients (IngredientID, ProductID, IngredientName, Natural, Category) VALUES (1, 1, 'Rose Oil', TRUE, 'Skincare'), (2, 1, 'Paraben', FALSE, 'Skincare'), (3, 2, 'Silicone', FALSE, 'Hair Care'), (4, 3, 'Aloe Vera', TRUE, 'Skincare'), (5, 3, 'Fragrance', FALSE, 'Skincare');", "output": "SELECT Category, COUNT(*) FROM Ingredients WHERE Natural = TRUE GROUP BY Category;"}
{"input": "\uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc0c1\uc704 3\uac1c \uc7ac\ub8cc\uc758 \ud3c9\uade0 \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_footprint(material VARCHAR(20), carbon_footprint DECIMAL(5,2)); INSERT INTO carbon_footprint(material, carbon_footprint) VALUES('organic cotton', 2.50), ('recycled polyester', 3.20), ('tencel', 1.80);", "output": "SELECT AVG(carbon_footprint) FROM carbon_footprint WHERE material IN (SELECT material FROM carbon_footprint ORDER BY carbon_footprint LIMIT 3);"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \ucc98\ubc29\ub41c \ud56d\uc0dd\uc81c\uc758 \ucd1d \ub9ac\ud544 \ud69f\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE medications (id INT, patient_id INT, medication VARCHAR(30), prescription_date DATE, refills INT); INSERT INTO medications (id, patient_id, medication, prescription_date, refills) VALUES (1, 3, 'Amoxicillin', '2022-02-01', 2), (2, 4, 'Ciprofloxacin', '2022-03-15', 1);", "output": "SELECT SUM(refills) FROM medications WHERE medication LIKE '%antibiotic%' AND prescription_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": "\ud604\uc7ac \uac24\ub7ec\ub9ac\uc5d0 \uc804\uc2dc\ub418\uc5b4 \uc788\ub294 \uac01 \uc608\uc220\uac00\uc758 \uc791\ud488 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Art (id INT, title VARCHAR(255), artist_id INT, gallery_id INT); CREATE TABLE Artist (id INT, name VARCHAR(255)); CREATE TABLE Gallery (id INT, name VARCHAR(255));", "output": "SELECT Artist.name, COUNT(DISTINCT Art.id) AS on_display_count FROM Artist JOIN Art ON Artist.id = Art.artist_id JOIN Gallery ON Art.gallery_id = Gallery.id GROUP BY Artist.name;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubb38\ud654\uc5ed\ub7c9 \uad50\uc721\uc740 \ucd1d \uba87 \ud68c \uc2e4\uc2dc\ub418\ub098\uc694?", "context": "CREATE TABLE cultural_competency_training (region VARCHAR(255), sessions INT); INSERT INTO cultural_competency_training (region, sessions) VALUES ('Northeast', 400), ('Southeast', 500), ('Midwest', 350), ('West', 600);", "output": "SELECT region, SUM(sessions) FROM cultural_competency_training GROUP BY region;"}
{"input": " \uace0\uae09 \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uc644\uc804 \ucc44\uc2dd \uc2dd\uc0ac\uc758 \ucd5c\ub300 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE meals (id INT, name TEXT, vegan BOOLEAN, restaurant_type TEXT, price INT); INSERT INTO meals (id, name, vegan, restaurant_type, price) VALUES (1, 'Veggie Curry', true, 'fine dining', 35), (2, 'Steak Dinner', false, 'fine dining', 65), (3, 'Grilled Tofu', true, 'fine dining', 28);", "output": "SELECT MAX(meals.price) FROM meals WHERE meals.vegan = true AND meals.restaurant_type = 'fine dining';"}
{"input": " 2022\ub144\uc5d0\ub294 '\ub0a8\ubbf8'\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac\uac00 \uc5f4\ub838\ub098\uc694?", "context": "CREATE TABLE defense_diplomacy (id INT, event_name VARCHAR(50), date DATE, location VARCHAR(50)); INSERT INTO defense_diplomacy (id, event_name, date, location) VALUES (1, 'Defense Symposium', '2022-06-01', 'Asia'); INSERT INTO defense_diplomacy (id, event_name, date, location) VALUES (2, 'Military Diplomacy Conference', '2022-05-15', 'Europe'); INSERT INTO defense_diplomacy (id, event_name, date, location) VALUES (3, 'Defense Dialogue', '2022-03-01', 'South America');", "output": "SELECT COUNT(*) FROM defense_diplomacy WHERE location = 'South America' AND YEAR(date) = 2022;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \uad6d\uac00\ub2f9 \ubcf4\uc874\ub41c \uc804\ud1b5 \uc608\uc220\uc758 \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE arts_preservation (id INT, art_name VARCHAR(255), country VARCHAR(255), year INT); INSERT INTO arts_preservation (id, art_name, country, year) VALUES (1, 'Hopi Kachina Dolls', 'USA', 2005), (2, 'Totem Poles', 'Canada', 2010);", "output": "SELECT AVG(COUNT(*)) FROM arts_preservation GROUP BY country;"}
{"input": " 2000\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \uad6d\uac00\uc758 \uc5f0\ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weather_data (country VARCHAR(50), year INT, temperature FLOAT); INSERT INTO weather_data (country, year, temperature) VALUES ('Canada', 2000, 10.5), ('Canada', 2001, 10.7), ('Mexico', 2000, 25.3), ('Mexico', 2001, 25.5);", "output": "SELECT country, AVG(temperature - LAG(temperature) OVER (PARTITION BY country ORDER BY year)) AS avg_annual_temp_change FROM weather_data WHERE year BETWEEN 2000 AND 2020 GROUP BY country, temperature ORDER BY country;"}
{"input": " 2023\ub144 3\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uac01 \ub178\uc120\uc744 \uc5ec\ud589\ud55c \uc21c \uc2b9\uac1d \uc218\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE passengers (passenger_id INT, passenger_name VARCHAR(20)); CREATE TABLE passenger_trips (trip_id INT, passenger_id INT, route_id INT, trip_date DATE);", "output": "SELECT routes.route_name, COUNT(DISTINCT passengers.passenger_id) FROM passengers JOIN passenger_trips ON passengers.passenger_id = passenger_trips.passenger_id JOIN routes ON passenger_trips.route_id = routes.route_id WHERE passenger_trips.trip_date BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY routes.route_id, routes.route_name;"}
{"input": " \uce90\ub098\ub2e4\uc640 \ubbf8\uad6d\uc5d0\uc11c \uad11\uc0b0 \uc0ac\uc5c5\uc744 \uc6b4\uc601\ud558\ub294 \ud68c\uc0ac\uc758 \uc9c1\uc6d0 \uc218\uc640 \ucd1d \uae09\uc5ec \ube44\uc6a9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE company (id INT, name VARCHAR(255), country VARCHAR(255), num_employees INT, avg_salary DECIMAL(10,2));CREATE VIEW canadian_companies AS SELECT * FROM company WHERE country = 'Canada';CREATE VIEW us_companies AS SELECT * FROM company WHERE country = 'USA';CREATE VIEW mining_companies AS SELECT * FROM company WHERE industry = 'Mining';", "output": "SELECT mc.name, SUM(mc.num_employees) as total_employees, SUM(mc.num_employees * mc.avg_salary) as total_salary_costs FROM (SELECT * FROM canadian_companies UNION ALL SELECT * FROM us_companies) mc JOIN mining_companies m ON mc.id = m.id GROUP BY mc.name;"}
{"input": " \uc218\ub3c4\uad8c \uac01 \uc9c0\uc5ed\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uacf5\uacf5\uc11c\ube44\uc2a4\uac00 \uc81c\uacf5\ub418\ub098\uc694?", "context": "CREATE TABLE public_services (district VARCHAR(20), service_count INT); INSERT INTO public_services (district, service_count) VALUES ('downtown', 10), ('north', 15), ('south', 12), ('east', 18), ('west', 13);", "output": "SELECT district, service_count FROM public_services"}
{"input": "\ud2f0\ucf13 \ud310\ub9e4\ub7c9 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc74c\uc545 \ucd95\uc81c\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Festivals (FestivalID INT, FestivalName VARCHAR(100), Location VARCHAR(50), Date DATE, TicketSales INT); INSERT INTO Festivals (FestivalID, FestivalName, Location, Date, TicketSales) VALUES (1, 'Coachella', 'Indio', '2023-04-14', 150000); INSERT INTO Festivals (FestivalID, FestivalName, Location, Date, TicketSales) VALUES (2, 'Lollapalooza', 'Chicago', '2023-08-04', 120000);", "output": "SELECT FestivalName, MAX(TicketSales) FROM Festivals;"}
{"input": " \ub514\uc9c0\ud138 \uc790\uc0b0 '\uce74\ub974\ub2e4\ub178'\uc758 \uc77c\uc77c \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE transaction_data (asset_name TEXT, transactions INT, transaction_volume REAL); INSERT INTO transaction_data (asset_name, transactions, transaction_volume) VALUES ('Cardano', 50000, 1000000);", "output": "SELECT SUM(transaction_volume) FROM transaction_data WHERE asset_name = 'Cardano' AND transaction_date = CURDATE();"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc\uc758 \uc601\ud654\uad00 \uc218\ub294?", "context": "CREATE TABLE Theaters (id INT, theater_name VARCHAR(100), city VARCHAR(50), state VARCHAR(50));", "output": "SELECT city, COUNT(*) FROM Theaters GROUP BY city;"}
{"input": "\ucc3d\uace0 Q\uc640 \ucc3d\uace0 R\uc5d0 'G' \uc720\ud615 \ub610\ub294 'H' \uc720\ud615 \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_q(item_id INT, item_type VARCHAR(10), quantity INT);CREATE TABLE warehouse_r(item_id INT, item_type VARCHAR(10), quantity INT);INSERT INTO warehouse_q(item_id, item_type, quantity) VALUES (1, 'G', 200), (2, 'H', 300), (3, 'G', 50), (4, 'H', 400);INSERT INTO warehouse_r(item_id, item_type, quantity) VALUES (1, 'G', 150), (2, 'H', 250), (3, 'G', 40), (4, 'H', 350);", "output": "SELECT quantity FROM warehouse_q WHERE item_type IN ('G', 'H') UNION ALL SELECT quantity FROM warehouse_r WHERE item_type IN ('G', 'H');"}
{"input": " \uac01 \uacf5\uae09\uc5c5\uccb4 \ud488\ubaa9\uc758 \uc774\uc724\ud3ed\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inventory(item_id INT, supplier_id INT, quantity INT, cost_price DECIMAL); CREATE TABLE menu_items(menu_item_id INT, name TEXT, supplier_id INT, type TEXT, price DECIMAL);", "output": "SELECT suppliers.name, SUM((menu_items.price - inventory.cost_price) * inventory.quantity) / SUM(menu_items.price * inventory.quantity) as profit_margin FROM inventory JOIN menu_items ON inventory.item_id = menu_items.menu_item_id JOIN suppliers ON menu_items.supplier_id = suppliers.supplier_id GROUP BY suppliers.name;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc5f0\ub839\ub300\ubcc4\ub85c \uc801\uc751\ud615 \uc758\ub958\ub97c \uad6c\ub9e4\ud55c \uace0\uc720 \uace0\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (customer_id INT, age_group VARCHAR(20), registration_date DATE); CREATE TABLE Orders (order_id INT, customer_id INT, order_date DATE); CREATE TABLE Order_Items (item_id INT, order_id INT, product_size VARCHAR(10), product_category VARCHAR(20)); INSERT INTO Customers (customer_id, age_group, registration_date) VALUES (1, '30-40', '2021-01-01');", "output": "SELECT age_group, COUNT(DISTINCT customer_id) as num_customers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE product_category = 'Adaptive Clothing' AND Orders.order_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE GROUP BY age_group;"}
{"input": " 2021\ub144\uc5d0\ub294 \uba87 \ud37c\uc13c\ud2b8\uc758 \uc0ac\uac74\uc774 \ud68c\ubcf5\uc801 \uc0ac\ubc95\uc744 \ud1b5\ud574 \ud574\uacb0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE cases (id INT, case_name VARCHAR(255), resolution_type VARCHAR(255), year INT); INSERT INTO cases (id, case_name, resolution_type, year) VALUES (1, 'Case A', 'Restorative Justice', 2021), (2, 'Case B', 'Court Proceedings', 2021);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cases WHERE year = 2021)) as Percentage FROM cases WHERE resolution_type = 'Restorative Justice' AND year = 2021;"}
{"input": " \uac01 \uc2dc\uc124\uc758 \uc218\uac10\uc790\uc5d0\uac8c \uc124\uc815\ub41c \ubcf4\uc11d\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Inmates (ID INT, Facility VARCHAR(20), Bail FLOAT); INSERT INTO Inmates (ID, Facility, Bail) VALUES (1, 'Facility1', 5000.0), (2, 'Facility2', 7500.0), (3, 'Facility1', 10000.0);", "output": "SELECT Facility, SUM(Bail) OVER (PARTITION BY Facility) AS TotalBail FROM Inmates;"}
{"input": " \ud50c\ub7ec\uc2a4 \uc0ac\uc774\uc988 \uc758\ub958\uc758 \ud3c9\uade0 \uc758\ub958 \uac00\uaca9\uc774 \uac00\uc7a5 \ub192\uc740 \ub514\uc790\uc774\ub108\uc640 \uac00\uc7a5 \ub0ae\uc740 \ub514\uc790\uc774\ub108\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE designers (designer_id INT, designer_name VARCHAR(255));CREATE TABLE garments (garment_id INT, garment_name VARCHAR(255), designer_id INT, price DECIMAL(10,2), size VARCHAR(10));", "output": "SELECT d.designer_name, AVG(g.price) AS avg_price FROM garments g JOIN designers d ON g.designer_id = d.designer_id WHERE g.size = 'plus-size' GROUP BY d.designer_name ORDER BY avg_price DESC, d.designer_name ASC LIMIT 1;  SELECT d.designer_name, AVG(g.price) AS avg_price FROM garments g JOIN designers d ON g.designer_id = d.designer_id WHERE g.size = 'plus-size' GROUP BY d.designer_name ORDER BY avg_price ASC, d.designer_name ASC LIMIT 1;"}
{"input": " \uc601\uad6d\uc758 \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub300\ucd9c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE socially_responsible_lending (id INT, country VARCHAR(255), loan_amount DECIMAL(10,2));", "output": "SELECT AVG(loan_amount) FROM socially_responsible_lending WHERE country = 'United Kingdom';"}
{"input": "clinic_5'\uc640 'clinic_6'\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE clinic_5 (patient_id INT, therapy_received BOOLEAN); INSERT INTO clinic_5 (patient_id, therapy_received) VALUES (1, true), (2, false), (3, true), (12, false); CREATE TABLE clinic_6 (patient_id INT, therapy_received BOOLEAN); INSERT INTO clinic_6 (patient_id, therapy_received) VALUES (4, true), (5, true), (6, false), (13, true);", "output": "SELECT clinic, COUNT(*) * 100.0 / total_patients AS therapy_percentage FROM (SELECT 'clinic_5' AS clinic, therapy_received FROM clinic_5 UNION ALL SELECT 'clinic_6' AS clinic, therapy_received FROM clinic_6) AS all_clinics CROSS JOIN (SELECT COUNT(*) AS total_patients FROM (SELECT patient_id FROM clinic_5 UNION SELECT patient_id FROM clinic_6)) AS totals GROUP BY clinic;"}
{"input": " 'GalacticAirlines'\uac00 \uc6b4\ud56d\ud558\ub294 \ud56d\uacf5\ud3b8 \uc911 \uc548\uc804 \ubb38\uc81c\uac00 \uc788\ub294 \ud56d\uacf5\ud3b8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE flights (id INT, airline VARCHAR(255), safety_issue BOOLEAN); INSERT INTO flights (id, airline, safety_issue) VALUES (1, 'GalacticAirlines', true), (2, 'GalacticAirlines', false), (3, 'AstroFlights', true), (4, 'GalacticAirlines', false), (5, 'AstroFlights', false);", "output": "SELECT 100.0 * COUNT(*) FILTER (WHERE safety_issue = true) / COUNT(*) as percentage FROM flights WHERE airline = 'GalacticAirlines';"}
{"input": " '\uc81c\uc870\uc5c5' \ubd80\ubb38\uc758 \uc0b0\uc5c5\uc548\uc804\uc0ac\uace0 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ub2e8\uccb4\uad50\uc12d\uc744 \ud1b5\ud574 \ud574\uacb0\ub41c \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE incidents (id INT, union_id INT, sector TEXT, type TEXT, resolved_through_collective_bargaining BOOLEAN);", "output": "SELECT sector, COUNT(id) as total_incidents, SUM(resolved_through_collective_bargaining) as resolved_through_cb FROM incidents WHERE sector = 'manufacturing' GROUP BY sector;"}
{"input": " \ud608\ub2f9 \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud574 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc14\uc774\uc624\uc13c\uc11c\uac00 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE biosensors (id INT, name VARCHAR(50), target VARCHAR(50)); INSERT INTO biosensors VALUES (1, 'BioSensorA', 'Glucose'); INSERT INTO biosensors VALUES (2, 'BioSensorB', 'Cholesterol'); INSERT INTO biosensors VALUES (3, 'BioSensorC', 'Glucose');", "output": "SELECT COUNT(*) FROM biosensors WHERE target = 'Glucose';"}
{"input": "\ubaa8\ub4e0 \uc120\uc218\uc5d0 \ub300\ud574 \ub9e4 \uc2dc\uc98c \uac00\uc7a5 \ub9ce\uc740 \ud648\ub7f0\uc744 \uae30\ub85d\ud55c \uc120\uc218\ub97c \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE players (player_id INT, player_name VARCHAR(100), position VARCHAR(50), team VARCHAR(50), games_played INT, at_bats INT, hits INT, home_runs INT, rbi INT); INSERT INTO players (player_id, player_name, position, team, games_played, at_bats, hits, home_runs, rbi) VALUES (1, 'John Doe', 'Outfield', 'Red Sox', 120, 450, 120, 25, 75); INSERT INTO players (player_id, player_name, position, team, games_played, at_bats, hits, home_runs, rbi) VALUES (2, 'Jane Smith', 'Infield', 'Yankees', 130, 500, 145, 30, 80);", "output": "SELECT player_name, season, MAX(home_runs) as max_homeruns  FROM (SELECT player_name, DATE_PART('year', game_date) as season, home_runs  FROM games  JOIN players ON games.player_id = players.player_id) subquery  GROUP BY player_name, season;"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uc138\ubd80\uc815\ubcf4\uc640 \ud568\uaed8 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc2dc\uac04\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE programs (id INT, name TEXT, location TEXT, budget INT); CREATE TABLE volunteer_hours (id INT, volunteer_id INT, program_id INT, hours INT); CREATE TABLE volunteers (id INT, name TEXT, email TEXT);", "output": "SELECT programs.name as program_name, COUNT(DISTINCT volunteers.id) as num_volunteers, SUM(volunteer_hours.hours) as total_hours FROM programs INNER JOIN volunteer_hours ON programs.id = volunteer_hours.program_id INNER JOIN volunteers ON volunteer_hours.volunteer_id = volunteers.id GROUP BY programs.id;"}
{"input": " 7\uc6d4 \ud55c\ub2ec \ucd5c\ub300 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationAmount) VALUES (1, 1, '2021-07-01', 500.00), (2, 2, '2021-07-15', 250.00), (3, 3, '2021-06-01', 1000.00);", "output": "SELECT MAX(DonationAmount) FROM Donations WHERE MONTH(DonationDate) = 7;"}
{"input": " \ube0c\ub77c\uc9c8\uc740 FIFA \uc6d4\ub4dc\ucef5 \ud0c0\uc774\ud2c0\uc744 \uba87 \ubc88\uc774\ub098 \ud68d\ub4dd\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE fifa_world_cup (year INT, winner VARCHAR(50)); INSERT INTO fifa_world_cup (year, winner) VALUES (1958, 'Brazil'); INSERT INTO fifa_world_cup (year, winner) VALUES (1962, 'Brazil');", "output": "SELECT COUNT(*) FROM fifa_world_cup WHERE winner = 'Brazil';"}
{"input": " '\ud50c\ub85c\ub9ac\ub2e4'\uc5d0\uc11c \ud504\ub85c\uc81d\ud2b8\ub97c \uc644\ub8cc\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uacc4\uc57d\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE contractors (contractor_id INT, name VARCHAR(50)); INSERT INTO contractors (contractor_id, name) VALUES (1, 'ABC Construction'), (2, 'DEF Construction'), (3, 'GHI Construction'), (4, 'JKL Construction'), (5, 'MNO Construction'); CREATE TABLE projects (project_id INT, contractor_id INT, state VARCHAR(2)); INSERT INTO projects (project_id, contractor_id, state) VALUES (101, 1, 'CA'), (102, 2, 'TX'), (103, 3, 'CA'), (104, 4, 'TX'), (105, 5, 'IL');", "output": "SELECT c.name FROM contractors c WHERE c.contractor_id NOT IN (SELECT p.contractor_id FROM projects p WHERE p.state = 'FL') ORDER BY c.name;"}
{"input": " \ud654\ubb3c \uc885\ub958\ubcc4 \ucd5c\ub300 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cargo (cargo_id INT, cargo_type VARCHAR(50), cargo_weight INT); INSERT INTO cargo VALUES (1, 'CargoA', 1000), (2, 'CargoA', 1200), (3, 'CargoB', 1500), (4, 'CargoB', 1800), (5, 'CargoC', 2000);", "output": "SELECT cargo_type, MAX(cargo_weight) FROM cargo GROUP BY cargo_type;"}
{"input": " \ubc14\ub974\uc140\ub85c\ub098\uc5d0\uc11c \ucd5c\uace0 \ud3c9\uc810\uc744 \ubc1b\uc740 \uce5c\ud658\uacbd \ud638\ud154\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE hotels (id INT, name TEXT, city TEXT, rating FLOAT); INSERT INTO hotels (id, name, city, rating) VALUES (1, 'Eco Hotel', 'Barcelona', 4.6), (2, 'Green Lodge', 'Barcelona', 4.7), (3, 'Sustainable Suites', 'Barcelona', 4.5);", "output": "SELECT name FROM hotels WHERE city = 'Barcelona' AND rating = (SELECT MAX(rating) FROM hotels WHERE city = 'Barcelona' AND name IN ('Eco Hotel', 'Green Lodge', 'Sustainable Suites'));"}
{"input": " \ub0a8\uc131\uc774\uace0 \ubcf4\ud5d8 \uc720\ud615\uc774 '\uc790\ub3d9\ucc28'\uc778 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uacfc \uccad\uad6c \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, Gender VARCHAR(10)); CREATE TABLE Policies (Id INT PRIMARY KEY, PolicyholderId INT, PolicyType VARCHAR(50), CoverageAmount DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id)); CREATE TABLE Claims (Id INT PRIMARY KEY, PolicyId INT, ClaimAmount DECIMAL(10,2), ClaimDate DATE, FOREIGN KEY (PolicyId) REFERENCES Policies(Id));", "output": "SELECT P.Gender, PL.PolicyType, AVG(C.ClaimAmount) as AverageClaimAmount, COUNT(C.Id) as NumberOfClaims FROM Policyholders P JOIN Policies PL ON P.Id = PL.PolicyholderId JOIN Claims C ON PL.Id = C.PolicyId WHERE P.Gender = 'Male' AND PL.PolicyType = 'Auto' GROUP BY P.Gender, PL.PolicyType ORDER BY AverageClaimAmount DESC;"}
{"input": " \ub3c4\uc785\uc77c \uae30\uc900 \uc778\ub3c4\uc758 \uad70\uc0ac\uae30\uc220 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE military_tech (id INT, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255), date DATE); INSERT INTO military_tech (id, name, type, country, date) VALUES (1, 'F-35', 'Fighter Jet', 'USA', '2005-06-01'); INSERT INTO military_tech (id, name, type, country, date) VALUES (2, 'Type 45 Destroyer', 'Warship', 'UK', '2006-02-22'); INSERT INTO military_tech (id, name, type, country, date) VALUES (3, 'Arjun Mk1', 'Main Battle Tank', 'India', '2004-04-12');", "output": "SELECT name, type, country, date, ROW_NUMBER() OVER (PARTITION BY country ORDER BY date DESC) as ranking FROM military_tech WHERE country = 'India';"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \ucc38\uac00\uc790\uac00 \ucc38\uc11d\ud558\ub294 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \uc138\uc158\uc758 \ucd5c\ub300 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RestorativeJusticeSessions (SessionID INT, ParticipantName VARCHAR(50), Country VARCHAR(20), NumberOfSessions INT); INSERT INTO RestorativeJusticeSessions VALUES (1, 'Participant A', 'Canada', 3); INSERT INTO RestorativeJusticeSessions VALUES (2, 'Participant B', 'Canada', 5); INSERT INTO RestorativeJusticeSessions VALUES (3, 'Participant C', 'Australia', 4);", "output": "SELECT Country, MAX(NumberOfSessions) FROM RestorativeJusticeSessions GROUP BY Country;"}
{"input": " \uac00\uc7a5 \uc790\uc8fc \uc5ec\ud589\ud558\ub294 \uc0c1\uc704 5\uac1c \uad6c\uac04\uc758 \uc5ec\ud589 \uad6c\uac04\ub2f9 \ud3c9\uade0 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE trip_segments (segment_id INT, route_id INT, fare DECIMAL(5,2), passenger_count INT); INSERT INTO trip_segments (segment_id, route_id, fare, passenger_count) VALUES (1, 101, 2.50, 1000), (2, 101, 2.00, 1200), (3, 102, 3.00, 800), (4, 103, 1.50, 1500), (5, 104, 4.00, 600), (6, 105, 1.75, 500), (7, 106, 2.25, 700);", "output": "SELECT AVG(fare) FROM (SELECT fare, ROW_NUMBER() OVER (ORDER BY passenger_count DESC) rn FROM trip_segments) t WHERE rn <= 5;"}
{"input": " \uc77c\ubcf8\uacfc \ud55c\uad6d\uc744 \uc81c\uc678\ud55c \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud574 \uc2ec\uac01\ub3c4 \ub4f1\uae09\uc774 '\ub192\uc74c' \ub610\ub294 '\uae34\uae09'\uc778 \ubaa8\ub4e0 \ucde8\uc57d\uc810\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vulnerabilities (system_name VARCHAR(255), severity VARCHAR(255), region VARCHAR(255));", "output": "SELECT system_name, severity FROM vulnerabilities WHERE region IN ('Asia-Pacific', 'APAC') AND severity IN ('High', 'Critical') EXCEPT (SELECT system_name FROM vulnerabilities WHERE region IN ('Japan', 'Korea'));"}
{"input": " 2\ud68c \uc774\uc0c1 \uae30\ubd80\ud558\uc2e0 \ubd84\ub4e4\uc758 2021\ub144 \ucd5c\uc18c \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE donors (donor_id INT PRIMARY KEY, donation_amount DECIMAL(10, 2), donation_date DATE, first_donation_date DATE); INSERT INTO donors (donor_id, donation_amount, donation_date, first_donation_date) VALUES (1, 250, '2021-01-01', '2020-01-01'), (2, 750, '2021-01-03', '2019-01-01'), (3, 900, '2021-02-05', '2021-01-01'), (4, 400, '2021-03-01', '2020-01-01');", "output": "SELECT MIN(donation_amount) FROM donors WHERE YEAR(donation_date) = 2021 AND donor_id IN (SELECT donor_id FROM donors GROUP BY donor_id HAVING COUNT(*) > 2);"}
{"input": " '\ud3ec\uc2a4\ud2b8\uc778\uc0c1\uc8fc\uc758' \ubd80\ubb38\uc5d0\uc11c \uc791\ud488 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uba85\uc758 \uc608\uc220\uac00\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artist_Data (artist_id INT, artist_name VARCHAR(255), category VARCHAR(255), num_pieces INT); INSERT INTO Artist_Data (artist_id, artist_name, category, num_pieces) VALUES (1, 'Paul Cezanne', 'Post-Impressionism', 80), (2, 'Claude Monet', 'Impressionism', 120), (3, 'Georges Seurat', 'Pointillism', 70);", "output": "SELECT artist_name, num_pieces FROM (SELECT artist_name, category, num_pieces, RANK() OVER (PARTITION BY category ORDER BY num_pieces DESC) AS rank FROM Artist_Data) tmp WHERE rank <= 3 AND category = 'Post-Impressionism';"}
{"input": " \uc9c0\uc911\ud574 \uad00\uce21\uc18c\uc758 \ub9e4\ub2ec \ucd5c\ub300 \uc218\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mediterranean_ocean_monitoring_station (date DATE, temperature FLOAT);", "output": "SELECT EXTRACT(MONTH FROM date) AS month, MAX(temperature) AS max_temperature FROM mediterranean_ocean_monitoring_station GROUP BY month;"}
{"input": "2021\ub144 1\uc6d4 1\uc77c\ubd80\ud130 2021\ub144 12\uc6d4 31\uc77c \uc0ac\uc774\uc5d0 '#climatechange' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uc0ac\uc6a9\uc790 \uac8c\uc2dc\ubb3c\uc758 \uc77c\uc77c \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE posts (id INT, user_id INT, datetime DATETIME, hashtags VARCHAR(255)); INSERT INTO posts (id, user_id, datetime, hashtags) VALUES (1, 123, '2021-01-01 12:00:00', '#climatechange, #eco'), (2, 456, '2021-12-31 23:59:59', '#climatechange');", "output": "SELECT AVG(count) as avg_daily_posts FROM (SELECT DATE(datetime) as date, COUNT(*) as count FROM posts WHERE hashtags LIKE '%#climatechange%' AND datetime BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY date) as daily_posts;"}
{"input": " \ud2b9\uc815 \uc0ac\uc6a9\uc790\uc758 \uc2dc\uac04 \uacbd\uacfc\uc5d0 \ub530\ub978 \uc2ec\ubc15\uc218 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE heart_rate_data (id INT, user_id INT, heart_rate INT, date DATE); INSERT INTO heart_rate_data (id, user_id, heart_rate, date) VALUES (1, 1, 75, '2022-01-01'), (2, 1, 76, '2022-01-02'), (3, 1, 77, '2022-01-03');", "output": "SELECT date, heart_rate, LEAD(heart_rate) OVER (PARTITION BY user_id ORDER BY date) as next_heart_rate FROM heart_rate_data WHERE user_id = 1;"}
{"input": " \ud48d\ub825 \uc5d0\ub108\uc9c0\uc640 \ud0dc\uc591 \uc5d0\ub108\uc9c0 \uc2dc\uc2a4\ud15c \ubaa8\ub450\uc5d0 \uc7ac\ub8cc\ub97c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(50), energy_type VARCHAR(50)); INSERT INTO suppliers (supplier_id, supplier_name, energy_type) VALUES (1, 'SupplierA', 'Wind'), (2, 'SupplierB', 'Solar'), (3, 'SupplierC', 'Wind'), (4, 'SupplierD', 'Solar'), (5, 'SupplierE', 'Wind'), (6, 'SupplierF', 'Solar'), (7, 'SupplierG', 'Both');", "output": "SELECT supplier_name FROM suppliers WHERE energy_type = 'Wind' INTERSECT SELECT supplier_name FROM suppliers WHERE energy_type = 'Solar';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc5f0\uad6c\uc790\ub4e4\uc758 \ucc3d\uc758\uc801\uc778 AI \uc5f0\uad6c \uc8fc\uc81c\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ai_research (researcher_id SERIAL PRIMARY KEY, researcher_name TEXT, researcher_location TEXT, research_topic TEXT, published_date DATE); INSERT INTO ai_research (researcher_name, researcher_location, research_topic, published_date) VALUES ('Adebola Adeleke', 'Nigeria', 'AI-generated music', '2022-07-22'), ('Fatima Aden', 'Kenya', 'AI-painted art', '2021-11-15');", "output": "SELECT researcher_name, research_topic FROM ai_research WHERE researcher_location LIKE 'Africa%' AND research_topic LIKE 'Creative AI%';"}
{"input": " '\ud2f8\ub77c\ud53c\uc544' \uc885\uc5d0\ub294 \uc5f0\ub839\ubcc4\ub85c \uba87 \ub9c8\ub9ac\uc758 \ubb3c\uace0\uae30\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Farm (id INT, species TEXT, weight FLOAT, age INT); INSERT INTO Farm (id, species, weight, age) VALUES (1, 'Tilapia', 500.3, 2), (2, 'Salmon', 300.1, 1), (3, 'Tilapia', 600.5, 3), (4, 'Tilapia', 700.2, 2), (5, 'Tilapia', 800.1, 4);", "output": "SELECT age, COUNT(*) as num_fish FROM Farm WHERE species = 'Tilapia' GROUP BY age;"}
{"input": " 2021\ub144 \uac01 \uacf5\uae09\uc5c5\uccb4\uc758 \ubd80\ud488 \uc81c\uc870 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Supplier_Parts (supplier_id INT, supplier_name VARCHAR(50), part_id INT, part_cost DECIMAL(10, 2), year INT); INSERT INTO Supplier_Parts (supplier_id, supplier_name, part_id, part_cost, year) VALUES (1, 'Supplier-E', 101, 5000, 2021), (2, 'Supplier-F', 102, 3500, 2021), (3, 'Supplier-G', 103, 7000, 2021), (4, 'Supplier-H', 104, 2200, 2021);", "output": "SELECT supplier_name, SUM(part_cost) as total_cost FROM Supplier_Parts WHERE year = 2021 GROUP BY supplier_name;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc5ec\uc131 \uc8fc\ub3c4 \uc2a4\ud0c0\ud2b8\uc5c5\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08 \uc870\ub2ec\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE FemaleStartups(id INT, name TEXT, country TEXT, founding_year INT, funding_amount INT);   INSERT INTO FemaleStartups VALUES (1, 'FemTech', 'USA', 2018, 8000000), (2, 'GreenCity', 'Canada', 2019, 9000000), (3, 'AI-Health', 'UK', 2020, 7000000), (4, 'SolarEnergy', 'Australia', 2017, 6000000), (5, 'DataAnalytics', 'Germany', 2016, 5000000), (6, 'SmartGrid', 'USA', 2021, 10000000), (7, 'CloudServices', 'India', 2018, 4000000), (8, 'RenewableEnergy', 'Brazil', 2019, 11000000), (9, 'WasteManagement', 'SouthAfrica', 2020, 3000000);", "output": "SELECT country, SUM(funding_amount) AS total_funding FROM FemaleStartups WHERE founding_year >= YEAR(CURRENT_DATE) - 5 GROUP BY country ORDER BY total_funding DESC LIMIT 5;"}
{"input": " \uc2a4\ubc1c\ubc14\ub974 \uc81c\ub3c4\uc5d0\uc11c \uac00\uc7a5 \ucd94\uc6b4 5\ub144\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE svalbard_weather(year INT, temperature FLOAT); INSERT INTO svalbard_weather(year, temperature) VALUES (2000, 2.5), (2001, 3.2), (2002, 1.8);", "output": "SELECT year, temperature FROM (SELECT year, temperature, ROW_NUMBER() OVER (ORDER BY temperature ASC) rn FROM svalbard_weather) WHERE rn <= 5;"}
{"input": " '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4' \ub808\uc2a4\ud1a0\ub791\uc758 \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac\ub294 \uba87 \ubc88\uc774\ub098 \ud1b5\uacfc\ub418\uace0 \uc2e4\ud328\ud588\ub098\uc694?", "context": "CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255), city VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name, city) VALUES (9, 'Taqueria Los Angeles', 'Los Angeles'), (10, 'Sushi LA', 'Los Angeles'); CREATE TABLE inspections (inspection_id INT, restaurant_id INT, inspection_date DATE, passed BOOLEAN); INSERT INTO inspections (inspection_id, restaurant_id, inspection_date, passed) VALUES (7, 9, '2022-01-01', true), (8, 9, '2022-02-01', false), (9, 10, '2022-03-01', true), (10, 10, '2022-04-01', true);", "output": "SELECT 'Passed' AS inspection_result, COUNT(*) AS count FROM inspections WHERE passed = true AND restaurant_id IN (SELECT restaurant_id FROM restaurants WHERE city = 'Los Angeles') UNION ALL SELECT 'Failed', COUNT(*) FROM inspections WHERE passed = false AND restaurant_id IN (SELECT restaurant_id FROM restaurants WHERE city = 'Los Angeles');"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc5ed\uc0ac\uc801\uc73c\ub85c \uc18c\uc678\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ucd9c\uc2e0\uc758 \uc608\uc220\uac00 \uc911 \uba87 \uba85\uc774 \uc790\uc2e0\uc758 \uc791\ud488\uc744 \uac24\ub7ec\ub9ac\uc5d0 \uc804\uc2dc\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE artists (id INT, name VARCHAR(255), community VARCHAR(255), year_of_birth INT); CREATE TABLE gallery_exhibits (id INT, artist_id INT, gallery_id INT, exhibit_date DATE); CREATE TABLE galleries (id INT, name VARCHAR(255), city VARCHAR(255));", "output": "SELECT COUNT(*) FROM artists a JOIN gallery_exhibits ge ON a.id = ge.artist_id JOIN galleries g ON ge.gallery_id = g.id WHERE a.community IN ('Historically Underrepresented Group 1', 'Historically Underrepresented Group 2') AND ge.exhibit_date >= DATE(YEAR(CURRENT_DATE) - 5);"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \ub18d\ucd0c \uc9c0\uc5ed\uc758 \ubb3c \uc18c\ube44\ub7c9 \ubcc0\ud654\uc728\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE rural_water_consumption (id INT, city VARCHAR(50), year INT, monthly_consumption FLOAT); INSERT INTO rural_water_consumption (id, city, year, monthly_consumption) VALUES (1, 'Smalltown', 2019, 120000), (2, 'Smalltown', 2020, 130000);", "output": "SELECT (SUM(t2.monthly_consumption) - SUM(t1.monthly_consumption)) * 100.0 / SUM(t1.monthly_consumption) FROM rural_water_consumption t1, rural_water_consumption t2 WHERE t1.city = t2.city AND t1.year = 2019 AND t2.year = 2020;"}
{"input": "\ucd95\uad6c \uacbd\uae30\ub97c \uad00\ub78c\ud55c 25\uc138 \uc774\uc0c1\uc758 \ud32c\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE fans (fan_id INT, game_id INT, age INT);", "output": "SELECT AVG(age) FROM fans WHERE game_id IN (SELECT game_id FROM games WHERE game_type = 'Football') AND age > 25;"}
{"input": " \ubc1c\uad74\ud604\uc7a5\ubcc4\ub85c \uc5f0\uac04 \uba87 \uc810\uc758 \uc720\ubb3c\uc774 \ubc1c\uad74\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ancient_artifacts (id INT, artifact_name VARCHAR(50), year INT, excavation_site VARCHAR(50));", "output": "SELECT excavation_site, year, COUNT(id) OVER (PARTITION BY excavation_site, year) as artifacts_excavated FROM ancient_artifacts ORDER BY excavation_site, year;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0\uc11c \uc628 \ubc29\ubb38\uac1d \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Visitors (id INT, name VARCHAR(100), country VARCHAR(50)); INSERT INTO Visitors (id, name, country) VALUES (1, 'Alice', 'USA'); INSERT INTO Visitors (id, name, country) VALUES (2, 'Bob', 'Canada');", "output": "SELECT COUNT(*) FROM Visitors WHERE country IN ('USA', 'Canada');"}
{"input": " \uc9c0\ub09c 3\ub144 \ub3d9\uc548 \ubaa8\ub4e0 \ubc29\uc0b0\uc5c5\uccb4\uac00 \ube0c\ub77c\uc9c8 \uc815\ubd80\uc5d0 \ud310\ub9e4\ud55c \ubaa8\ub4e0 \uad70\uc0ac \uc7a5\ube44\ub97c \ud310\ub9e4 \ub0a0\uc9dc\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE military_sales (id INT, company VARCHAR(255), country VARCHAR(255), sale_value DECIMAL(10,2), sale_date DATE); INSERT INTO military_sales (id, company, country, sale_value, sale_date) VALUES (1, 'Lockheed Martin', 'Brazil', 300000, '2020-01-01'); INSERT INTO military_sales (id, company, country, sale_value, sale_date) VALUES (2, 'Boeing', 'Brazil', 400000, '2019-01-01');", "output": "SELECT * FROM military_sales WHERE country = 'Brazil' AND sale_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR) ORDER BY sale_date DESC;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ubc84\uc640 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc11c\ubc84 \ubaa8\ub450\uc5d0 \uc5f0\uacb0\uc744 \uc2dc\ub3c4\ud55c \uace0\uc720 IP \uc8fc\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE database_server (ip_address VARCHAR(255), connection_time TIMESTAMP); CREATE TABLE web_application_server (ip_address VARCHAR(255), connection_time TIMESTAMP);", "output": "SELECT ip_address FROM database_server WHERE connection_time >= NOW() - INTERVAL '1 week' INTERSECT SELECT ip_address FROM web_application_server WHERE connection_time >= NOW() - INTERVAL '1 week';"}
{"input": " 2021\ub144 4\ubd84\uae30 \uac01 \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uc5d0\uc11c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255), City varchar(255)); CREATE TABLE Menu (MenuID int, RestaurantID int, MenuItem varchar(255), Price decimal(5,2)); CREATE TABLE Sales (SaleID int, MenuID int, Quantity int, SaleDate date);", "output": "SELECT R.RestaurantName, M.MenuItem, SUM(M.Price * S.Quantity) as TotalRevenue FROM (SELECT MenuID, RestaurantID, ROW_NUMBER() OVER (PARTITION BY RestaurantID ORDER BY SUM(Quantity) DESC) as Ranking FROM Sales S INNER JOIN Menu M ON S.MenuID = M.MenuID WHERE YEAR(SaleDate) = 2021 AND QUARTER(SaleDate) = 4 GROUP BY MenuID, RestaurantID) T INNER JOIN Sales S ON T.MenuID = S.MenuID AND T.RestaurantID = S.MenuID INNER JOIN Menu M ON S.MenuID = M.MenuID INNER JOIN Restaurants R ON S.MenuID = R.RestaurantID WHERE T.Ranking <= 3 GROUP BY R.RestaurantName, M.MenuItem;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \uc2dd\ud488 \uc815\uc758 \uc774\ubca4\ud2b8\uc640 \ucc38\uc11d\uc790 \uc218\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE food_justice (event_name VARCHAR(255), location VARCHAR(255), attendees INT);", "output": "SELECT location, event_name, SUM(attendees) as total_attendees FROM food_justice WHERE location = 'California' GROUP BY event_name;"}
{"input": "5\ud68c \uc774\uc0c1\uc758 \ucf58\uc11c\ud2b8\ub97c \ubcf4\uc720\ud55c \uc7a5\ub974\uc758 \uacbd\uc6b0, \uc7a5\ub974\ubcc4 \ucd1d \uc218\uc775\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists music_schema;CREATE TABLE if not exists concerts (id INT, name VARCHAR, city VARCHAR, genre VARCHAR, revenue FLOAT);INSERT INTO concerts (id, name, city, genre, revenue) VALUES (1, 'Music Festival', 'New York', 'Pop', 50000.00), (2, 'Rock Concert', 'Chicago', 'Rock', 75000.00), (3, 'Jazz Festival', 'Los Angeles', 'Jazz', 125000.00), (4, 'Hip Hop Concert', 'Miami', 'Hip Hop', 60000.00), (5, 'Country Music Festival', 'Nashville', 'Country', 40000.00), (6, 'EDM Festival', 'Las Vegas', 'EDM', 80000.00), (7, 'Pop Concert', 'New York', 'Pop', 70000.00), (8, 'Rock Festival', 'Chicago', 'Rock', 65000.00), (9, 'Jazz Concert', 'Los Angeles', 'Jazz', 110000.00), (10, 'Hip Hop Festival', 'Miami', 'Hip Hop', 75000.00);", "output": "SELECT genre, (SUM(revenue) OVER (PARTITION BY genre) / SUM(revenue) OVER ()) * 100 as percentage_of_total FROM music_schema.concerts GROUP BY genre HAVING COUNT(*) > 5 ORDER BY percentage_of_total DESC;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc81c\ud488\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\ub294 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sustainable_practices BOOLEAN); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), supplier_id INT, sustainable BOOLEAN, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); INSERT INTO suppliers (id, name, location, sustainable_practices) VALUES (4, 'Green Harvest', 'California', TRUE); INSERT INTO products (id, name, category, supplier_id, sustainable) VALUES (4, 'Lentils', 'Legumes', 4, TRUE);", "output": "SELECT name FROM suppliers WHERE id NOT IN (SELECT supplier_id FROM products WHERE sustainable = TRUE);"}
{"input": "\ud504\ub85c\uadf8\ub7a8\ub2f9 \ud3c9\uade0 \ub300\ud559\uc6d0\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program (id INT, name TEXT);CREATE TABLE student (id INT, program_id INT, enrollment_status TEXT);", "output": "SELECT AVG(s.count) FROM (SELECT program_id, COUNT(*) AS count FROM student s GROUP BY program_id) s;"}
{"input": " \ud2b9\uc815 \uae30\uad00\uc5d0\uc11c \ubc1c\ud589\ud558\ub294 \uae30\uc0ac\uc758 \ucd5c\ub300 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Articles (id INT, agency VARCHAR(255), word_count INT); INSERT INTO Articles (id, agency, word_count) VALUES (1, 'ABC News', 700), (2, 'CNN', 500), (3, 'BBC', 800), (4, 'ABC News', 900);", "output": "SELECT agency, MAX(word_count) as max_word_count FROM Articles GROUP BY agency HAVING COUNT(*) > 1;"}
{"input": " '\uc778\ud130\uc2a4\ud154\ub77c'\uac00 \uc81c\uc791\ud55c \uc6b0\uc8fc\uc120\uc758 \ud3c9\uade0 \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE spacecraft (id INT, name VARCHAR(255), manufacturer VARCHAR(255), mass FLOAT); INSERT INTO spacecraft (id, name, manufacturer, mass) VALUES (1, 'Voyager 1', 'Galactic Pioneers Inc.', 770.), (2, 'Voyager 2', 'Galactic Pioneers Inc.', 780.), (3, 'New Horizons', 'Space Explorers Ltd.', 1010.), (4, 'ISS', 'Interstellar Inc.', 420.);", "output": "SELECT AVG(mass) FROM spacecraft WHERE manufacturer = 'Interstellar Inc.';"}
{"input": " \ub274\uc695\uc758 \uc0ac\uc5c5 \uc720\ud615\ubcc4 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation(business_type VARCHAR(50), location VARCHAR(50), waste_quantity INT); INSERT INTO waste_generation(business_type, location, waste_quantity) VALUES ('Restaurant', 'New York', 500), ('Store', 'New York', 300), ('Office', 'New York', 200);", "output": "SELECT business_type, SUM(waste_quantity) FROM waste_generation WHERE location = 'New York' GROUP BY business_type;"}
{"input": " \uc5b4\ub5a4 \uc870\uc9c1\uc774 \uae08\uc131\uc5d0 \uc784\ubb34\ub97c \uc2dc\uc791\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE missions_venus (id INT, mission_name VARCHAR(255), launch_date DATE, organization VARCHAR(255)); INSERT INTO missions_venus (id, mission_name, launch_date, organization) VALUES (1, 'Mariner 2', '1962-08-27', 'NASA');", "output": "SELECT DISTINCT organization FROM missions_venus WHERE mission_name IS NOT NULL;"}
{"input": " '\uc2dc\ub9ac\uc544'\uc640 '\uc608\uba58'\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 '\uad50\uc721' \ubc0f '\ubc95\ub960 \uc9c0\uc6d0' \uc11c\ube44\uc2a4\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Education (country VARCHAR(255), num_services INT); INSERT INTO Education (country, num_services) VALUES ('Syria', 1000), ('Yemen', 800), ('Afghanistan', 1200); CREATE TABLE Legal_Support (country VARCHAR(255), num_services INT); INSERT INTO Legal_Support (country, num_services) VALUES ('Syria', 500), ('Yemen', 700), ('Iraq', 900);", "output": "SELECT SUM(num_services) FROM (SELECT num_services FROM Education WHERE country IN ('Syria', 'Yemen') UNION ALL SELECT num_services FROM Legal_Support WHERE country IN ('Syria', 'Yemen')) AS combined_countries;"}
{"input": " \uad6d\uac00\ubcc4 \ucd1d \ucde8\uc57d\uc810 \uc218\uc640 \uc2ec\uac01\ub3c4\uac00 \ub192\uc740 \ucde8\uc57d\uc810\uc758 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, title TEXT, description TEXT, country TEXT, severity TEXT, created_at DATETIME); INSERT INTO vulnerabilities (id, title, description, country, severity, created_at) VALUES (1, 'Vuln1', 'Desc1', 'USA', 'High', '2022-01-01 10:00:00'), (2, 'Vuln2', 'Desc2', 'Canada', 'Medium', '2022-01-02 11:00:00'); CREATE TABLE systems (id INT, name TEXT, vulnerability_id INT, country TEXT); INSERT INTO systems (id, name, vulnerability_id, country) VALUES (1, 'Sys1', 1, 'USA'), (2, 'Sys2', 2, 'Canada');", "output": "SELECT country, COUNT(*) as total_vulnerabilities, SUM(CASE WHEN severity = 'High' THEN 1 ELSE 0 END) as high_severity_vulnerabilities FROM vulnerabilities GROUP BY country;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \ucc44\ud0dd\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ub18d\uc5c5 \ud601\uc2e0\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Innovations (id INT PRIMARY KEY, name VARCHAR(50), region VARCHAR(20), adoption_rate FLOAT);", "output": "SELECT name, adoption_rate FROM (SELECT name, adoption_rate, ROW_NUMBER() OVER (PARTITION BY region ORDER BY adoption_rate DESC) rn FROM Innovations WHERE region = 'Africa') tmp WHERE rn <= 5;"}
{"input": " \uccad\uad6c \uae30\ub85d\uc774 \uc5c6\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholders (PolicyID INT, CoverageLimit DECIMAL(10,2)); INSERT INTO Policyholders (PolicyID, CoverageLimit) VALUES (1, 750000.00), (2, 400000.00), (4, 50000.00); CREATE TABLE Claims (ClaimID INT, PolicyID INT, ClaimAmount DECIMAL(10,2)); INSERT INTO Claims (ClaimID, PolicyID, ClaimAmount) VALUES (1, 1, 5000.00), (2, 4, 2500.00);", "output": "WITH NoClaimPolicyholders AS (DELETE FROM Policyholders WHERE PolicyID NOT IN (SELECT PolicyID FROM Claims) RETURNING *) SELECT * FROM NoClaimPolicyholders;"}
{"input": " \ud14d\uc0ac\uc2a4\uc640 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \uc2dc\uace8 \uc758\ub8cc \uc2dc\uc124\uc5d0\uc11c \uadfc\ubb34\ud558\ub294 \uc8fc\uce58\uc758\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE VIEW primary_care_physicians AS SELECT * FROM healthcare_staff WHERE role = 'Primary Care Physician'; CREATE TABLE healthcare_staff (id INT, name TEXT, role TEXT, location TEXT); INSERT INTO healthcare_staff (id, name, role, location) VALUES (1, 'Dr. Johnson', 'Primary Care Physician', 'Texas'), (2, 'Dr. Smith', 'Primary Care Physician', 'California'), (3, 'Dr. Brown', 'Nurse', 'Texas');", "output": "SELECT COUNT(*) FROM primary_care_physicians WHERE location IN ('Texas', 'California');"}
{"input": " \ub274\uc695\uc5d0\uc11c \ub450 \ubc88\uc9f8\ub85c \ud070 \ubd80\ub3d9\uc0b0 \uaddc\ubaa8\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE properties (id INT, size FLOAT, city VARCHAR(20)); INSERT INTO properties (id, size, city) VALUES (1, 1500, 'New York'), (2, 2000, 'New York'), (3, 1000, 'New York');", "output": "SELECT size FROM (SELECT size, ROW_NUMBER() OVER (ORDER BY size DESC) as rn FROM properties WHERE city = 'New York') t WHERE rn = 2;"}
{"input": " ID\uac00 '2'\uc778 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc640 \ub3d9\uc77c\ud55c \uc790\ub3d9\ucc28 \ube0c\ub79c\ub4dc\ub97c \ubcf4\uc720\ud55c \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholder (PolicyholderID INT, Age INT, Gender VARCHAR(10), CarMake VARCHAR(20), State VARCHAR(20)); INSERT INTO Policyholder (PolicyholderID, Age, Gender, CarMake, State) VALUES (1, 35, 'Female', 'Toyota', 'CA'); INSERT INTO Policyholder (PolicyholderID, Age, Gender, CarMake, State) VALUES (2, 42, 'Male', 'Honda', 'CA');", "output": "SELECT CarMake FROM Policyholder WHERE PolicyholderID IN (SELECT PolicyholderID FROM Policy WHERE PolicyholderID = 2) GROUP BY CarMake;"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \ucd5c\uc18c \ud55c \uba85 \uc774\uc0c1\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \ucc38\uac00\ud55c \uace0\uc720 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8 \uc218\uc640 \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\uc5d0\uc11c \ud50c\ub808\uc774\ub41c \uace0\uc720 FPS \uac8c\uc784 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE EsportsEvents (EventID INT, EventName VARCHAR(50)); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Region VARCHAR(20)); CREATE TABLE PlayerEvent (PlayerID INT, EventID INT); CREATE TABLE Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20)); CREATE TABLE GameEvent (GameID INT, EventID INT, GameType VARCHAR(10)); CREATE TABLE VR_Games (GameID INT, IsVR INT);", "output": "SELECT COUNT(DISTINCT EsportsEvents.EventID), COUNT(DISTINCT Games.GameID) FROM EsportsEvents INNER JOIN PlayerEvent ON EsportsEvents.EventID = PlayerEvent.EventID INNER JOIN Players ON PlayerEvent.PlayerID = Players.PlayerID INNER JOIN Games ON GameEvent.GameID = Games.GameID INNER JOIN GameEvent ON EsportsEvents.EventID = GameEvent.EventID INNER JOIN VR_Games ON Games.GameID = VR_Games.GameID WHERE Players.Region = 'Asia' AND Games.Genre = 'FPS';"}
{"input": " \ud2b9\uc815 \uc5b8\uc5b4\ub85c \ub9e4\uc6d4 \uac8c\uc2dc\ub418\ub294 \ucd1d \uae30\uc0ac \uc218\ub294 \ub0a0\uc9dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Dates (id INT PRIMARY KEY, date DATE); INSERT INTO Dates (id, date) VALUES (1, '2022-01-01'), (2, '2022-02-01'), (3, '2022-03-01'); CREATE TABLE Articles (id INT PRIMARY KEY, title TEXT, language_id INT, date_id INT, FOREIGN KEY (language_id) REFERENCES Languages(id), FOREIGN KEY (date_id) REFERENCES Dates(id)); INSERT INTO Articles (id, title, language_id, date_id) VALUES (1, 'Article 1', 1, 1), (2, 'Article 2', 2, 2), (3, 'Article 3', 1, 3);", "output": "SELECT l.language, DATE_FORMAT(d.date, '%Y-%m-%d') as date, COUNT(a.id) as num_articles FROM Articles a JOIN Languages l ON a.language_id = l.id JOIN Dates d ON a.date_id = d.id GROUP BY l.language, date;"}
{"input": " \ubcd1\uacfc\ubcc4 \uad70\uc778 \uc218\uc640 \ud3c9\uade0 \ubcf5\ubb34 \uc5f0\uc218\ub97c \uacc4\uae09\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \uad70\uc778 \uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE military_personnel (id INT, branch_id INT, rank_id INT, years_of_service INT, personnel_date DATE); INSERT INTO military_personnel (id, branch_id, rank_id, years_of_service, personnel_date) VALUES (1, 1, 1, 4, '2021-03-15'); INSERT INTO military_personnel (id, branch_id, rank_id, years_of_service, personnel_date) VALUES (2, 2, 2, 2, '2022-01-10'); CREATE TABLE branch (id INT, name VARCHAR(255)); INSERT INTO branch (id, name) VALUES (1, 'Army'); INSERT INTO branch (id, name) VALUES (2, 'Navy'); CREATE TABLE rank (id INT, name VARCHAR(255)); INSERT INTO rank (id, name) VALUES (1, 'Private'); INSERT INTO rank (id, name) VALUES (2, 'Petty Officer');", "output": "SELECT b.name as branch, r.name as rank, COUNT(mp.id) as num_military_personnel, AVG(mp.years_of_service) as avg_years_of_service, ROW_NUMBER() OVER (PARTITION BY b.name ORDER BY COUNT(mp.id) DESC) as rank FROM military_personnel mp JOIN branch b ON mp.branch_id = b.id JOIN rank r ON mp.rank_id = r.id GROUP BY b.name, r.name ORDER BY num_military_personnel DESC;"}
{"input": " \ubaa8\ub4e0 \ud654\ud559\ubb3c\uc9c8\uc758 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemicals (id INT, name TEXT, production_volume INT); INSERT INTO chemicals (id, name, production_volume) VALUES (1, 'Chemical A', 500), (2, 'Chemical B', 300), (3, 'Chemical C', 700);", "output": "SELECT SUM(production_volume) FROM chemicals;"}
{"input": " \ub370\uc774\ud130\uc138\ud2b8\uc5d0 \ud3ec\ud568\ub41c \uac01 \uad6d\uac00\uc758 \uc0ac\uc6a9\uc790 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE users (id INT, country VARCHAR(50)); INSERT INTO users (id, country) VALUES (1, 'USA'), (2, 'Canada'), (3, 'USA'), (4, 'Mexico'), (5, 'Brazil');", "output": "SELECT country, 100.0 * COUNT(*) OVER(PARTITION BY country) / SUM(COUNT(*)) OVER() AS percentage FROM users GROUP BY country;"}
{"input": " \uac00\uc7a5 \uc778\uae30\uac00 \ub192\uc740 \uc81c\ud488 \ud2b8\ub80c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES Suppliers(id)); CREATE TABLE Trends (id INT PRIMARY KEY, product_id INT, trend VARCHAR(255), popularity INT); INSERT INTO Products (id, name, category, supplier_id) VALUES (1, 'Product A', 'Tops', 1); INSERT INTO Products (id, name, category, supplier_id) VALUES (2, 'Product B', 'Bottoms', 2); INSERT INTO Trends (id, product_id, trend, popularity) VALUES (1, 1, 'Color Blocking', 20); INSERT INTO Trends (id, product_id, trend, popularity) VALUES (2, 2, 'Sustainable Fabrics', 25); INSERT INTO Trends (id, product_id, trend, popularity) VALUES (3, 1, 'Animal Print', 18); INSERT INTO Trends (id, product_id, trend, popularity) VALUES (4, 2, 'Neutrals', 22);", "output": "SELECT Trends.product_id, Trends.trend FROM Trends INNER JOIN (SELECT product_id, MAX(popularity) as max_popularity FROM Trends GROUP BY product_id) as MaxTrends ON Trends.product_id = MaxTrends.product_id AND Trends.popularity = MaxTrends.max_popularity"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub41c \ud14d\uc0ac\uc2a4 \uae30\ubc18 \uc2dc\uc124 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \ubcf5\uc6d0\ub825 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE InfrastructureResilienceTX (State TEXT, ProjectType TEXT, ResilienceRating INTEGER); INSERT INTO InfrastructureResilienceTX (State, ProjectType, ResilienceRating) VALUES ('Texas', 'Bridge', 81), ('Texas', 'Highway', 76), ('Texas', 'Tunnel', 86), ('Texas', 'Rail', 83);", "output": "SELECT ProjectType, AVG(ResilienceRating) as AvgResilience FROM InfrastructureResilienceTX WHERE State = 'Texas' GROUP BY ProjectType;"}
{"input": "\uc591\uadf9\uc131 \uc7a5\uc560\ub85c \uc77c\ucc28 \uc9c4\ub2e8\ub41c \ud658\uc790\uac00 \ucc38\uc11d\ud558\ub294 \ucd5c\uc18c \uce58\ub8cc \uc138\uc158 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, name TEXT, age INT, condition TEXT, therapy_sessions INT);", "output": "SELECT MIN(therapy_sessions) FROM patients WHERE condition = 'bipolar_disorder';"}
{"input": "\ucd1d \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uac01 \uc8fc\uc758 \ucd1d \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uacfc \uac1c\ubcc4 \uacc4\ud68d\uc758 \uc218\uac00 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_offset_initiatives (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), country VARCHAR(50), offset_quantity INT, PRIMARY KEY (id));", "output": "SELECT state, SUM(offset_quantity) as total_offset_quantity, COUNT(DISTINCT id) as initiative_count, ROW_NUMBER() OVER (ORDER BY SUM(offset_quantity) DESC) as ranking FROM carbon_offset_initiatives GROUP BY state;"}
{"input": " \uc608\uba58\uc758 \uc2dd\ub7c9\uc548\ubcf4 \ubc0f \ubcf4\uac74 \ud504\ub85c\uadf8\ub7a8\uc73c\ub85c\ubd80\ud130 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uc218\ud61c\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recipients (id INT, name TEXT, age INT, gender TEXT); CREATE TABLE aid (id INT, recipient_id INT, program_id INT); CREATE TABLE programs (id INT, name TEXT, location TEXT); INSERT INTO recipients VALUES (1, 'Ahmed Al-Sayed', 30, 'Male'), (2, 'Fatima Al-Hamadi', 25, 'Female'); INSERT INTO aid VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1), (4, 2, 2); INSERT INTO programs VALUES (1, 'Food Security', 'Yemen'), (2, 'Health', 'Yemen');", "output": "SELECT r.name FROM recipients r INNER JOIN aid a1 ON r.id = a1.recipient_id INNER JOIN programs p1 ON a1.program_id = p1.id INNER JOIN aid a2 ON r.id = a2.recipient_id INNER JOIN programs p2 ON a2.program_id = p2.id WHERE p1.name = 'Food Security' AND p2.name = 'Health' AND p1.location = 'Yemen' AND p2.location = 'Yemen' GROUP BY r.name HAVING COUNT(DISTINCT p1.id) > 1;"}
{"input": " Indica \ud488\uc885\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \ucf5c\ub85c\ub77c\ub3c4\uc758 \uc57d\uad6d \uc21c\uc704\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DispensarySales(id INT, dispensary VARCHAR(255), state VARCHAR(255), strain_type VARCHAR(255), sales_amount DECIMAL(10,2));", "output": "SELECT dispensary, SUM(sales_amount) as total_sales FROM DispensarySales WHERE state = 'Colorado' AND strain_type = 'Indica' GROUP BY dispensary ORDER BY total_sales DESC;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ud559\uc0dd\ub4e4\uc774 \uc561\uc138\uc2a4\ud558\ub294 \uacf5\uac1c \uad50\uc721\ud559 \ub9ac\uc18c\uc2a4\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, city TEXT);CREATE TABLE open_pedagogy_resources (id INT, access_date DATE);CREATE TABLE resource_access (student_id INT, resource_id INT);", "output": "SELECT students.city, COUNT(DISTINCT open_pedagogy_resources.id) as resources_accessed FROM students INNER JOIN resource_access ON students.id = resource_access.student_id INNER JOIN open_pedagogy_resources ON resource_access.resource_id = open_pedagogy_resources.id GROUP BY students.city;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc758\ub958\uc5d0 \ub300\ud55c \uc218\uc775\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GarmentSales (garment_id INT, date DATE, revenue DECIMAL(10,2)); INSERT INTO GarmentSales (garment_id, date, revenue) VALUES (1, '2020-01-01', 1000.00), (1, '2020-02-01', 2000.00), (1, '2020-03-01', 3000.00), (2, '2020-01-01', 4000.00), (2, '2020-02-01', 5000.00);", "output": "SELECT garment_id, date, AVG(revenue) OVER (PARTITION BY garment_id ORDER BY date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS moving_average FROM GarmentSales;"}
{"input": " '\uc544\uc2dc\uc544' \uc694\ub9ac \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uaca9\uc774 10% \uc774\uc0c1 \uc778\uc0c1\ub41c \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (id INT, name VARCHAR(50), cuisine VARCHAR(50), price DECIMAL(5,2)); INSERT INTO menu_items (id, name, cuisine, price) VALUES (1, 'Pad Thai', 'asian', 12.99); INSERT INTO menu_items (id, name, cuisine, price) VALUES (2, 'Sushi Roll', 'asian', 15.99);", "output": "SELECT name, cuisine, price, (price - LAG(price) OVER (PARTITION BY cuisine ORDER BY name))/LAG(price) OVER (PARTITION BY cuisine ORDER BY name) as price_increase_percentage FROM menu_items WHERE cuisine = 'asian' AND (price - LAG(price) OVER (PARTITION BY cuisine ORDER BY name))/LAG(price) OVER (PARTITION BY cuisine ORDER BY name) > 0.10;"}
{"input": " \uc804\uc6d4 \ub300\ube44 \ub9e4\uc6d4 \ud658\uacbd\uc601\ud5a5\ud3c9\uac00\uc758 \ubcc0\ud654\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Environmental_Impact_Assessments (Assessment_Date DATE, Impact_Score INT); INSERT INTO Environmental_Impact_Assessments (Assessment_Date, Impact_Score) VALUES ('2021-01-01', 100), ('2021-02-01', 110), ('2021-03-01', 120), ('2021-04-01', 130);", "output": "SELECT Assessment_Date, (LAG(Impact_Score) OVER (ORDER BY Assessment_Date) - Impact_Score) * 100.0 / LAG(Impact_Score) OVER (ORDER BY Assessment_Date) as Percentage_Change FROM Environmental_Impact_Assessments;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548\uc758 \ubaa8\ub4e0 \uc815\ucc45 \uc639\ud638 \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \ud6c4\uc6d0\ud55c \uc870\uc9c1 \ubc0f \uc601\ud5a5\uc744 \ubc1b\uc740 \ud559\uc0dd \uc218\uc640 \ud568\uaed8 \uc601\ud5a5\uc744 \ubc1b\uc740 \ud559\uc0dd \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE initiatives (initiative_id INT, initiative_name VARCHAR(255), initiative_date DATE, organization_id INT); CREATE TABLE organizations (organization_id INT, organization_name VARCHAR(255)); CREATE TABLE impact (initiative_id INT, student_id INT);", "output": "SELECT i.initiative_name, o.organization_name, COUNT(DISTINCT i.student_id) as students_impacted FROM initiatives i JOIN organizations o ON i.organization_id = o.organization_id JOIN impact imp ON i.initiative_id = imp.initiative_id WHERE i.initiative_date >= DATEADD(year, -2, CURRENT_DATE) GROUP BY i.initiative_name, o.organization_name ORDER BY students_impacted DESC;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \ub300\uc911\uad50\ud1b5\uc73c\ub85c \uc774\ub3d9\ud55c \ucd1d \uc774\ub3d9 \ud69f\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE public_transportation (city VARCHAR(50), trips INT); INSERT INTO public_transportation (city, trips) VALUES ('New York', 500000), ('Los Angeles', 300000), ('Chicago', 400000);", "output": "SELECT city, SUM(trips) as total_trips FROM public_transportation GROUP BY city;"}
{"input": " 'south_america_hotels' \ubcf4\uae30\uc5d0 \uc788\ub294 \ud638\ud154\uc758 \ud3c9\uade0 \ub4f1\uae09\ubcc4 \ud638\ud154 \uc720\ud615 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE VIEW south_america_hotels AS SELECT * FROM hotels WHERE continent = 'South America'; CREATE VIEW hotel_ratings AS SELECT hotel_id, AVG(rating) as avg_rating FROM hotel_reviews GROUP BY hotel_id;", "output": "SELECT type, ROW_NUMBER() OVER (ORDER BY avg_rating DESC) as ranking FROM south_america_hotels JOIN hotel_ratings ON south_america_hotels.id = hotel_ratings.hotel_id GROUP BY type;"}
{"input": " 2022\ub144 1\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \ud560\uc778\uc744 \ud3ec\ud568\ud558\uc5ec \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255), City varchar(255)); CREATE TABLE Menu (MenuID int, RestaurantID int, MenuItem varchar(255), Price decimal(5,2)); CREATE TABLE Sustainability (SustainabilityID int, RestaurantID int, Discount decimal(5,2)); CREATE TABLE Time (TimeID int, Date date, Sales decimal(5,2));", "output": "SELECT R.RestaurantName, SUM(M.Price * (1 - ISNULL(S.Discount, 0))) as TotalRevenue FROM Restaurants R INNER JOIN Time T ON 1=1 INNER JOIN Menu M ON R.RestaurantID = M.RestaurantID LEFT JOIN Sustainability S ON R.RestaurantID = S.RestaurantID WHERE T.Date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY R.RestaurantName;"}
{"input": " 2021\ub144 2\ubd84\uae30 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Revenue (program_category VARCHAR(50), date DATE, revenue DECIMAL(10,2)); INSERT INTO Revenue (program_category, date, revenue) VALUES ('Dance', '2021-04-01', 15000.00), ('Theater', '2021-04-01', 20000.00), ('Music', '2021-04-01', 12000.00), ('Art', '2021-04-01', 18000.00), ('Dance', '2021-07-01', 17000.00), ('Theater', '2021-07-01', 22000.00), ('Music', '2021-07-01', 13000.00), ('Art', '2021-07-01', 19000.00);", "output": "SELECT SUM(revenue) AS total_revenue, program_category FROM Revenue WHERE date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY program_category;"}
{"input": "\ubcf4\uc7a5 \ud55c\ub3c4\uac00 $100,000 \ubbf8\ub9cc\uc778 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uccad\uad6c \uae30\ub85d\uc744 \uc0ad\uc81c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Claims (ClaimID INT, PolicyID INT, ClaimAmount DECIMAL(10,2)); INSERT INTO Claims (ClaimID, PolicyID, ClaimAmount) VALUES (1, 1, 5000.00), (2, 2, 120000.00), (3, 4, 7500.00); CREATE TABLE Policyholders (PolicyID INT, CoverageLimit DECIMAL(10,2)); INSERT INTO Policyholders (PolicyID, CoverageLimit) VALUES (1, 750000.00), (2, 400000.00), (4, 50000.00);", "output": "WITH LowLimitClaims AS (DELETE FROM Claims WHERE PolicyID IN (SELECT PolicyID FROM Policyholders WHERE CoverageLimit < 100000) RETURNING *) SELECT * FROM LowLimitClaims;"}
{"input": " \ubbf8\uad6d\uacfc \ub7ec\uc2dc\uc544 \uc774\uc678\uc758 \uad6d\uac00\uac00 \uc8fc\ub3c4\ud55c \uc6b0\uc8fc \uc784\ubb34\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (mission_id INT, mission_name VARCHAR(255), launch_country VARCHAR(50)); INSERT INTO space_missions (mission_id, mission_name, launch_country) VALUES (1, 'Apollo 11', 'USA'), (2, 'Sputnik 1', 'Russia');", "output": "SELECT COUNT(*) FROM space_missions WHERE launch_country NOT IN ('USA', 'Russia');"}
{"input": " \uc0e4\ub9ac\uc544 \uc900\uc218 \uc2e0\uc6a9\uce74\ub4dc\uc640 \uc0ac\ud68c\uc801 \ucc45\uc784 \ud22c\uc790 \uacc4\uc88c\ub97c \ubaa8\ub450 \ubcf4\uc720\ud55c \uace0\uac1d\uc758 \uc774\ub984\uacfc \uc7ac\uc815 \ub2a5\ub825 \uc810\uc218\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE shariah_credit_cards (card_id INT, customer_id INT, customer_name TEXT, financial_capability_score INT); CREATE TABLE socially_responsible_investments (investment_id INT, customer_id INT, customer_name TEXT, financial_capability_score INT); CREATE TABLE shariah_investments (investment_id INT, card_id INT);", "output": "SELECT scc.customer_name, scc.financial_capability_score FROM shariah_credit_cards scc JOIN shariah_investments si ON scc.card_id = si.card_id JOIN socially_responsible_investments sri ON scc.customer_id = sri.customer_id;"}
{"input": " '\uba54\uc774\ud06c\uc5c5' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc120\ud638\ub3c4\uac00 200\uc744 \ub118\uace0 \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\uac00 85 \uc774\uc0c1\uc778 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud558\ub294 \ubbf8\uc6a9 \uc81c\ud488\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE consumer_preferences (id INT PRIMARY KEY, customer_id INT, product VARCHAR(100), preference INT, FOREIGN KEY (customer_id) REFERENCES customers(id)); CREATE TABLE beauty_products (id INT PRIMARY KEY, product VARCHAR(100), category VARCHAR(100), price FLOAT); CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(100), product VARCHAR(100), country VARCHAR(100), sustainability_score INT);", "output": "SELECT bp.product, bp.category FROM beauty_products bp JOIN consumer_preferences cp ON bp.product = cp.product JOIN suppliers s ON bp.product = s.product WHERE bp.category = 'makeup' AND cp.preference > 200 AND s.sustainability_score >= 85;"}
{"input": " \ud2b9\uc815 \uce74\ud14c\uace0\ub9ac\uc758 \uc81c\ud488 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, category TEXT, price DECIMAL(5,2)); INSERT INTO products (product_id, category, price) VALUES (1, 'Electronics', 500.00), (2, 'Clothing', 100.00), (3, 'Electronics', 600.00), (4, 'Furniture', 300.00), (5, 'Clothing', 150.00);", "output": "SELECT category, AVG(price) FROM products GROUP BY category;"}
{"input": " 2022\ub144 1\uc6d4\uc5d0 \ubc1b\uc740 \ucd1d \uc88b\uc544\uc694 \uc218 \uae30\uc900\uc73c\ub85c '\ucc45' \uad00\uc2ec \uadf8\ub8f9\uc758 \uc0c1\uc704 5\uc704 \ucf58\ud150\uce20 \uc81c\uc791\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE SCHEMA content; CREATE TABLE creators(creator_id INT, name VARCHAR(255), interest_group VARCHAR(255), total_likes INT); INSERT INTO content.creators (creator_id, name, interest_group, total_likes) VALUES (1, 'Charlie', 'books', 6000); INSERT INTO content.creators (creator_id, name, interest_group, total_likes) VALUES (2, 'Dana', 'books', 4000);", "output": "SELECT name, SUM(total_likes) AS total_likes_january FROM content.creators WHERE interest_group = 'books' AND MONTH(created_date) = 1 GROUP BY name ORDER BY total_likes_january DESC LIMIT 5;"}
{"input": "\ub124\ud2b8\uc6cc\ud06c' \ubc94\uc8fc\uc758 \ucde8\uc57d\uc810\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc704\ud5d8 \uc810\uc218\ub294 '\ub9c8\uc9c0\ub9c9 \uad00\ucc30' \ub0a0\uc9dc\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, category VARCHAR(20), risk_score INT, last_observed DATE); INSERT INTO vulnerabilities (id, category, risk_score, last_observed) VALUES (1, 'network', 8, '2021-01-01'); INSERT INTO vulnerabilities (id, category, risk_score, last_observed) VALUES (2, 'network', 6, '2021-01-02');", "output": "SELECT last_observed, AVG(risk_score) OVER (PARTITION BY category ORDER BY last_observed) FROM vulnerabilities WHERE category = 'network';"}
{"input": " \uc0e4\ub9ac\uc544 \uc900\uc218 \uc800\ucd95 \uacc4\uc88c\uc5d0\uc11c \uc794\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uace0\uac1d\uc744 \ucc3e\uc544 \uacc4\uc88c \ubc88\ud638, \uc774\ub984 \ubc0f \uc794\uc561\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE savings_acct (acct_number INT, name VARCHAR(50), balance DECIMAL(10,2), is_shariah BOOLEAN); INSERT INTO savings_acct (acct_number, name, balance, is_shariah) VALUES (1001, 'Ahmed', 15000.00, true), (1002, 'Sara', 20000.00, false), (1003, 'Mohammed', 12000.00, true);", "output": "SELECT acct_number, name, balance FROM (SELECT acct_number, name, balance, ROW_NUMBER() OVER (PARTITION BY is_shariah ORDER BY balance DESC) as rn FROM savings_acct WHERE is_shariah = true) t WHERE rn = 1;"}
{"input": " \uc6a9\ub7c9\ubcc4\ub85c \uc21c\uc704\ub97c \ub9e4\uae34 EMEA \uc9c0\uc5ed \ucc3d\uace0\uc758 \ucd1d \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, city VARCHAR, capacity INT, region VARCHAR); INSERT INTO Warehouse (id, city, capacity, region) VALUES (1, 'London', 5000, 'EMEA'); INSERT INTO Warehouse (id, city, capacity, region) VALUES (2, 'Paris', 7000, 'EMEA');", "output": "SELECT region, SUM(capacity) as total_capacity, ROW_NUMBER() OVER(ORDER BY SUM(capacity) DESC) as rank FROM Warehouse GROUP BY region;"}
{"input": " \ubd80\uc11c\uc640 \uac01 \ubd80\uc11c\uc758 \uc9c1\uc6d0 \uc218\ub97c \uc9c1\uc6d0 \uc218\uc5d0 \ub530\ub77c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, Department) VALUES (1, 'HR'), (2, 'IT'), (3, 'IT'), (4, 'HR'), (5, 'Marketing'), (6, 'Finance'), (7, 'Finance');", "output": "SELECT Department, COUNT(*) AS EmployeeCount FROM Employees GROUP BY Department ORDER BY EmployeeCount DESC;"}
{"input": " \ud37c\ubbf8\uc548 \ubd84\uc9c0\uc640 \uc774\uae00 \ud3ec\ub4dc \uc9c0\uce35\uc5d0 \uc788\ub294 \uc720\uc815\uc758 \ucd1d \uc11d\uc720 \ubc0f \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774\ub294 \ubbf8\uad6d \ucd1d \uc0dd\uc0b0\ub7c9\uc758 \uba87 \ud37c\uc13c\ud2b8\ub97c \ub098\ud0c0\ub0c5\ub2c8\uae4c?", "context": "CREATE TABLE basin_oil_gas_production (well_name TEXT, basin TEXT, oil_production INTEGER, gas_production INTEGER); INSERT INTO basin_oil_gas_production (well_name, basin, oil_production, gas_production) VALUES ('Well1', 'Permian Basin', 150000, 7000000), ('Well2', 'Permian Basin', 180000, 8000000), ('Well3', 'Eagle Ford', 120000, 5000000), ('Well4', 'Eagle Ford', 100000, 4000000); CREATE TABLE us_oil_gas_production (region TEXT, oil_production INTEGER, gas_production INTEGER); INSERT INTO us_oil_gas_production (region, oil_production, gas_production) VALUES ('US', 3000000, 15000000);", "output": "SELECT basin, SUM(oil_production) + SUM(gas_production) AS total_production FROM basin_oil_gas_production WHERE basin IN ('Permian Basin', 'Eagle Ford') GROUP BY basin; SELECT region, (SELECT SUM(oil_production) + SUM(gas_production) FROM basin_oil_gas_production WHERE basin IN ('Permian Basin', 'Eagle Ford')) / (oil_production + gas_production) * 100 AS us_production_percentage FROM us_oil_gas_production;"}
{"input": " \ub808\ub4dc \ub77c\uc778 \uc5ec\ud589\uc758 \ucd5c\ub300 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists metro_lines (line_id serial primary key,name varchar(255));CREATE TABLE if not exists metro_stations (station_id serial primary key,name varchar(255),line_id int);CREATE TABLE if not exists routes (route_id serial primary key,line_id int,start_station_id int,end_station_id int);CREATE TABLE if not exists fares (fare_id serial primary key,route_id int,price decimal);", "output": "SELECT MAX(f.price) FROM fares f JOIN routes r ON f.route_id = r.route_id JOIN metro_stations s ON r.start_station_id = s.station_id WHERE s.line_id = 1;"}
{"input": " \ub300\uc11c\uc591\uc5d0\uc11c \uc624\uc5fc \uc0ac\uace0 \uac74\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc120\ubc15\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc120\ubc15\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE pollution_incidents (vessel_name TEXT, incident_count INT, ocean TEXT); INSERT INTO pollution_incidents (vessel_name, incident_count, ocean) VALUES ('VesselD', 5, 'Atlantic'), ('VesselE', 2, 'Atlantic'), ('VesselF', 8, 'Atlantic');", "output": "SELECT vessel_name, incident_count FROM (SELECT vessel_name, incident_count, DENSE_RANK() OVER (ORDER BY incident_count DESC) as high_rank, DENSE_RANK() OVER (ORDER BY incident_count ASC) as low_rank FROM pollution_incidents WHERE ocean = 'Atlantic') ranked_incidents WHERE high_rank = 1 OR low_rank = 1;"}
{"input": " \ucd5c\uadfc\ud559\ub144\ub3c4 \uac01 \ud559\uacfc\ubcc4 \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE research_grants (id INT, department TEXT, amount INT, grant_date DATE); INSERT INTO research_grants (id, department, amount, grant_date) VALUES (1, 'CS', 15000, '2021-08-01'); INSERT INTO research_grants (id, department, amount, grant_date) VALUES (2, 'Math', 20000, '2021-09-01');", "output": "SELECT department, SUM(amount) FROM research_grants WHERE grant_date BETWEEN '2021-08-01' AND '2022-07-31' GROUP BY department"}
{"input": " \uc911\ub7c9\uc774 150\uc744 \ucd08\uacfc\ud558\ub294 \ubc30\uc1a1\uc744 \ubc1b\uc740 \uc801\uc774 \uc5c6\ub294 \uace0\uac1d\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Shipment (id INT PRIMARY KEY, customer_id INT, weight FLOAT, shipped_date DATE); INSERT INTO Shipment (id, customer_id, weight, shipped_date) VALUES (1, 1, 120.5, '2022-01-01'), (2, 2, 150.3, '2022-01-05'), (3, 3, 180.7, '2022-01-07'), (4, 1, 90.2, '2022-02-10'), (5, 2, 135.6, '2022-03-14'); CREATE TABLE Customer (id INT PRIMARY KEY, name VARCHAR(100), address VARCHAR(200), phone VARCHAR(15)); INSERT INTO Customer (id, name, address, phone) VALUES (1, 'John Doe', '123 Main St, Miami, FL', '305-555-1212'), (2, 'Jane Smith', '456 Oak St, San Francisco, CA', '415-555-3434'), (3, 'Mike Johnson', '789 Elm St, Dallas, TX', '214-555-5656');", "output": "SELECT c.name FROM Customer c WHERE c.id NOT IN (SELECT s.customer_id FROM Shipment s WHERE s.weight > 150) GROUP BY c.id;"}
{"input": " \ud68c\uc0ac\ub2f9 \ud3c9\uade0 \uc791\uc5c5\uc7a5 \uc548\uc804\uc0ac\uace0 \uc2ec\uac01\ub3c4\ub294 \uc5b4\ub290 \uc815\ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplace_safety (id INT, company VARCHAR, incident_date DATE, description VARCHAR, severity VARCHAR); INSERT INTO workplace_safety (id, company, incident_date, description, severity) VALUES (13, 'LMN Inc', '2022-04-07', 'Equipment damage', 'Minor'); INSERT INTO workplace_safety (id, company, incident_date, description, severity) VALUES (14, 'PQR Corp', '2021-09-28', 'Falls', 'Major');", "output": "SELECT company, AVG(CASE WHEN severity IN ('Minor', 'Moderate', 'Major') THEN severity END) OVER (PARTITION BY company) as avg_severity FROM workplace_safety;"}
{"input": "2022\ub144\uc5d0 \uad11\ub300\uc5ed \ud22c\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE network_investments (year INT, city TEXT, investment FLOAT); INSERT INTO network_investments (year, city, investment) VALUES (2022, 'New York', 5000000); INSERT INTO network_investments (year, city, investment) VALUES (2022, 'Los Angeles', 6000000); INSERT INTO network_investments (year, city, investment) VALUES (2022, 'Chicago', 4500000);", "output": " SELECT city, investment FROM (  SELECT city, investment,  ROW_NUMBER() OVER (ORDER BY investment DESC) as rn  FROM network_investments  WHERE year = 2022  ) x  WHERE rn <= 5; "}
{"input": " \uc7ac\ud65c\uc6a9\ub960\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc640 \uac01 \uad6d\uac00\uc758 \uc7ac\ud65c\uc6a9\ub960\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE country_recycling (country VARCHAR(50), recycling_rate DECIMAL(5,2)); INSERT INTO country_recycling (country, recycling_rate) VALUES ('USA', 0.35), ('China', 0.20), ('India', 0.15), ('Germany', 0.65), ('Australia', 0.50);", "output": "SELECT country, recycling_rate FROM (SELECT country, recycling_rate, ROW_NUMBER() OVER (ORDER BY recycling_rate ASC) AS rank FROM country_recycling) ranked WHERE rank <= 5;"}
{"input": " \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc5d0\ub294 \ud720\uccb4\uc5b4\ub85c \uc811\uadfc \uac00\ub2a5\ud55c \ubc84\uc2a4 \uc815\ub958\uc7a5\uc774 \uba87 \uac1c \uc788\uc73c\uba70, \uc804\uccb4 \ubc84\uc2a4 \uc815\ub958\uc7a5 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sf_bus_stops (stop_id INT, stop_name VARCHAR(100), wheelchair_accessible BOOLEAN);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM sf_bus_stops) AS percentage FROM sf_bus_stops WHERE wheelchair_accessible = TRUE;"}
{"input": " \uc810\uc2ec \uba54\ub274\uc758 \ube44\uac74 \uc694\ub9ac \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE LunchMenu(menu_item VARCHAR(50), dish_type VARCHAR(20), price DECIMAL(5,2)); INSERT INTO LunchMenu VALUES('Quinoa Salad', 'vegan', 12.99), ('Chickpea Curry', 'vegan', 11.99), ('Grilled Cheese Sandwich', 'non-vegan', 8.99), ('Vegetable Stir Fry', 'vegan', 10.99);", "output": "SELECT AVG(price) FROM LunchMenu WHERE dish_type = 'vegan';"}
{"input": " \ubca0\ub97c\ub9b0\uc758 \uac01 \uc804\uc2dc\ud68c\uc5d0 \ub300\ud55c \ud558\ub8e8 \ud3c9\uade0 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Exhibitions (ExhibitionID INT, Name VARCHAR(255), City VARCHAR(255)); CREATE TABLE Visits (VisitID INT, VisitorID INT, ExhibitionID INT, VisitDate DATE);", "output": "SELECT e.Name, AVG(COUNT(vi.VisitID)) OVER(PARTITION BY e.Name) as AvgVisitorsPerDay FROM Exhibitions e JOIN Visits vi ON e.ExhibitionID = vi.ExhibitionID WHERE e.City = 'Berlin' GROUP BY e.Name, vi.VisitDate;"}
{"input": " 2022\ub144 \ud558\ub8e8\uc5d0 100\ub2ec\ub7ec \uc774\uc0c1 \uae30\ubd80\ub97c \ubc1b\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DailyDonations (DonationID int, ProgramName varchar(255), DonationAmount decimal(10,2), DonationDate date); INSERT INTO DailyDonations VALUES (1, 'Education', 150, '2022-01-01'), (2, 'Healthcare', 100, '2022-02-01'), (3, 'Environment', 125, '2022-03-01'), (4, 'Education', 175, '2022-04-01'), (5, 'Healthcare', 200, '2022-05-01');", "output": "SELECT ProgramName FROM (SELECT ProgramName, ROW_NUMBER() OVER (PARTITION BY ProgramName ORDER BY DonationDate) as Rank FROM DailyDonations WHERE DonationAmount > 100) as DonationRanks WHERE Rank = 1;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uace0\uac1d\uc5d0 \ub300\ud55c \ud3c9\uade0 \uacc4\uc815 \uc794\uc561\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (client_id INT, region VARCHAR(20), balance DECIMAL(10, 2)); INSERT INTO accounts (client_id, region, balance) VALUES (1, 'Northeast', 5000.00), (2, 'Southeast', 7000.00), (3, 'Northeast', 3000.00), (4, 'Southeast', 8000.00), (5, 'Midwest', 6000.00), (6, 'West', 9000.00);", "output": "SELECT region, AVG(balance) FROM accounts GROUP BY region;"}
{"input": " \ucd5c\uace0 \ub4f1\uae09\uc758 \uacf5\uacf5 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE feedback (id INT, service VARCHAR(20), rating INT, comment TEXT); INSERT INTO feedback (id, service, rating, comment) VALUES (1, 'Parks and Recreation', 5, 'Great job!'), (2, 'Parks and Recreation', 3, 'Could improve'), (3, 'Waste Management', 4, 'Good but room for improvement'), (4, 'Libraries', 5, 'Awesome!'), (5, 'Libraries', 4, 'Very helpful'), (6, 'Transportation', 2, 'Needs work'); CREATE TABLE budget_allocations (id INT, service VARCHAR(20), amount INT); INSERT INTO budget_allocations (id, service, amount) VALUES (1, 'Parks and Recreation', 60000), (2, 'Parks and Recreation', 30000), (3, 'Waste Management', 55000), (4, 'Libraries', 80000), (5, 'Libraries', 25000), (6, 'Transportation', 40000);", "output": "SELECT SUM(ba.amount) FROM budget_allocations ba JOIN (SELECT service FROM feedback WHERE rating = (SELECT MAX(rating) FROM feedback)) f ON ba.service = f.service;"}
{"input": " \uac00\uc815\ubc95 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c 5\uac74 \uc774\uc0c1\uc758 \uc0ac\uac74\uc744 \ubcf4\uc720\ud55c \uac01 \ubcc0\ud638\uc0ac\uc758 \uc0ac\uac74 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50)); CREATE TABLE cases (case_id INT, attorney_id INT, category VARCHAR(20));", "output": "SELECT attorney_id, COUNT(*) FROM cases WHERE category = 'family' GROUP BY attorney_id HAVING COUNT(*) > 5;"}
{"input": " \uac01 \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04 \ud45c\uc2dc", "context": "CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), TotalPlaytime INT); INSERT INTO Players (PlayerID, PlayerName, TotalPlaytime) VALUES (1, 'John Doe', 100); INSERT INTO Players (PlayerID, PlayerName, TotalPlaytime) VALUES (2, 'Jane Smith', 200); INSERT INTO Players (PlayerID, PlayerName, TotalPlaytime) VALUES (3, 'Mike Johnson', 150);", "output": "SELECT PlayerName, TotalPlaytime FROM Players;"}
{"input": " \ucd1d \uacf5\uc815 \ub178\ub3d9 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \uc758\ub958 \uacf5\uc7a5\uc758 \uc21c\uc704\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE garment_factories (factory_id INT, country VARCHAR(255), score INT); INSERT INTO garment_factories (factory_id, country, score) VALUES (1, 'Bangladesh', 85), (2, 'Cambodia', 92), (3, 'Vietnam', 88), (4, 'Indonesia', 78);", "output": "SELECT factory_id, country, score, RANK() OVER (ORDER BY score DESC) as labor_rank FROM garment_factories;"}
{"input": " \ubbf8\uad6d\uacfc \uc720\ub7fd\uc5f0\ud569\uc774 \ubc1c\uc0ac\ud55c \uc704\uc131 \uc218\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, country VARCHAR(255), launch_date DATE);", "output": "SELECT US_launches - EU_launches AS difference FROM (SELECT COUNT(*) AS US_launches FROM satellites WHERE country = 'US') AS subquery1, (SELECT COUNT(*) AS EU_launches FROM satellites WHERE country = 'European Union') AS subquery2;"}
{"input": " \uc9c0\ub09c \ud574 \uac00\uc7a5 \uac74\uc870\ud55c \uc0c1\uc704 5\uac1c \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uac15\uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE precipitation_data (region VARCHAR(255), precipitation INT, date DATE); INSERT INTO precipitation_data (region, precipitation, date) VALUES ('Africa', 50, '2022-01-01'), ('Asia', 75, '2022-01-01'), ('Australia', 100, '2022-01-01'), ('South America', 125, '2022-01-01'), ('Antarctica', 150, '2022-01-01');", "output": "SELECT region, AVG(precipitation) as avg_precipitation FROM (SELECT region, precipitation, RANK() OVER (PARTITION BY NULL ORDER BY precipitation ASC) as rain_rank FROM precipitation_data WHERE date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY region) subquery WHERE rain_rank <= 5 GROUP BY region;"}
{"input": "\ucd1d \uae30\uac04\ubcc4\ub85c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc6b4\ub3d9 \uc720\ud615 3\uac00\uc9c0\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Workouts (WorkoutID INT, MemberID INT, Duration INT, WorkoutType VARCHAR(20)); INSERT INTO Workouts (WorkoutID, MemberID, Duration, WorkoutType) VALUES (1, 1, 60, 'Yoga'), (2, 2, 90, 'Weightlifting'), (3, 3, 60, 'Yoga'), (4, 1, 45, 'Running');", "output": "SELECT WorkoutType, SUM(Duration) AS TotalDuration FROM Workouts GROUP BY WorkoutType ORDER BY TotalDuration DESC LIMIT 3;"}
{"input": "\uc9c0\uc18d \uac00\ub2a5\ud55c \ubc29\ubc95\ub9cc\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc791\ubb3c\uc744 \uc7ac\ubc30\ud558\ub294 \ub18d\ubd80\uc758 \uc774\ub984\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50)); CREATE TABLE crops (id INT, name VARCHAR(50), is_sustainable BOOLEAN); CREATE TABLE farmers_crops (farmer_id INT, crop_id INT); INSERT INTO farmers (id, name) VALUES (1, 'Sarah'), (2, 'Tom'), (3, 'Emma'), (4, 'Lucas'); INSERT INTO crops (id, name, is_sustainable) VALUES (1, 'Carrots', true), (2, 'Beans', true), (3, 'Corn', false), (4, 'Potatoes', true), (5, 'Soybeans', true); INSERT INTO farmers_crops (farmer_id, crop_id) VALUES (1, 1), (1, 2), (2, 2), (2, 3), (3, 1), (3, 4), (4, 4), (4, 5);", "output": "SELECT f.name FROM farmers f JOIN farmers_crops fc ON f.id = fc.farmer_id JOIN crops c ON fc.crop_id = c.id WHERE c.is_sustainable = true;"}
{"input": "\uad6d\uac00\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc81c\ud488\ub2f9 \uc81c\uc870\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ud3c9\uade0 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Manufacturing (product_id INT, material VARCHAR(20), quantity INT, country VARCHAR(20)); INSERT INTO Manufacturing (product_id, material, quantity, country) VALUES (1, 'Organic Cotton', 50, 'India');", "output": "SELECT country, AVG(quantity) as avg_quantity FROM Manufacturing WHERE material IN ('Organic Cotton', 'Recycled Polyester') GROUP BY country;"}
{"input": " 2015\ub144\ubd80\ud130 SpaceX\uac00 \ubc30\uce58\ud55c \uc704\uc131\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellite_Deployments (id INT, satellite_name VARCHAR(50), launch_date DATE, company VARCHAR(50)); INSERT INTO Satellite_Deployments (id, satellite_name, launch_date, company) VALUES (1, 'Starlink 1', '2018-05-24', 'SpaceX'), (2, 'Starlink 2', '2019-11-11', 'SpaceX'), (3, 'Iridium NEXT 1', '2017-01-14', 'SpaceX');", "output": "SELECT satellite_name FROM Satellite_Deployments WHERE YEAR(launch_date) >= 2015 AND company = 'SpaceX';"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ub3c5\uac10 \uc608\ubc29 \uc8fc\uc0ac\ub97c \ub9de\uc740 \ub274\uc695\uc758 \ub0a8\uc131\uacfc \uc5ec\uc131 \ud658\uc790\uc758 \ube44\uc728\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patient (patient_id INT, age INT, gender VARCHAR(10), state VARCHAR(10)); INSERT INTO patient (patient_id, age, gender, state) VALUES (1, 45, 'Female', 'New York'); INSERT INTO patient (patient_id, age, gender, state) VALUES (2, 50, 'Male', 'New York');", "output": "SELECT (SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) OVER (PARTITION BY state ORDER BY flu_shot_date DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) / (SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) OVER (PARTITION BY state ORDER BY flu_shot_date DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) AS ratio FROM patient WHERE state = 'New York' AND flu_shot_date >= DATEADD(week, -1, GETDATE());"}
{"input": " ny_fitness \ubc0f la_wellness \uc13c\ud130\uc758 \ucd1d \ud68c\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ny_fitness(member_id INT, name VARCHAR(50), age INT, gender VARCHAR(10)); INSERT INTO ny_fitness(member_id, name, age, gender) VALUES (1, 'John Doe', 25, 'Male'), (2, 'Jane Smith', 30, 'Female'); CREATE TABLE la_wellness(member_id INT, name VARCHAR(50), age INT, gender VARCHAR(10)); INSERT INTO la_wellness(member_id, name, age, gender) VALUES (3, 'Alice Johnson', 35, 'Female'), (4, 'Bob Brown', 40, 'Male');", "output": "SELECT COUNT(*) FROM ny_fitness UNION ALL SELECT COUNT(*) FROM la_wellness;"}
{"input": " '2022 \ubd04' \uceec\ub809\uc158\uc758 \uc9c0\uc18d\uac00\ub2a5\uc131 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE garment_data_3 (garment_id INT, collection VARCHAR(20), sustainability_score FLOAT); INSERT INTO garment_data_3 (garment_id, collection, sustainability_score) VALUES (1, 'Spring 2022', 8.2), (2, 'Summer 2022', 8.7), (3, 'Autumn 2022', 9.0);", "output": "SELECT AVG(sustainability_score) FROM garment_data_3 WHERE collection = 'Spring 2022';"}
{"input": " \uc9c0\uc5ed\ubcc4 \ud574\uc800 \ub9e4\ud551 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_floor_map (id INT, project_name VARCHAR(255), region VARCHAR(255), budget FLOAT);", "output": "SELECT region, avg(budget) FROM ocean_floor_map GROUP BY region;"}
{"input": "\uac01 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_policing (id INT PRIMARY KEY, program_name VARCHAR(50), start_date DATE, end_date DATE, average_response_time INT);", "output": "SELECT program_name, AVG(average_response_time) as avg_response_time FROM community_policing GROUP BY program_name;"}
{"input": " \uac01 \uc544\ud2f0\uc2a4\ud2b8\ub294 \uc74c\uc545 \ud398\uc2a4\ud2f0\ubc8c\uc5d0\uc11c \uba87 \ubc88\uc774\ub098 \uacf5\uc5f0\ud588\ub098\uc694?", "context": "CREATE TABLE artist_festivals (artist_id INT, festival_name VARCHAR(30)); INSERT INTO artist_festivals (artist_id, festival_name) VALUES (1, 'Coachella'), (2, 'Osheaga'), (3, 'Bonnaroo'), (1, 'Lollapalooza'), (2, 'Glastonbury');", "output": "SELECT artist_id, COUNT(DISTINCT festival_name) as festival_count FROM artist_festivals GROUP BY artist_id;"}
{"input": "\uc2dc\ubca0\ub9ac\uc544 \uc6b0\ubb3c\uc758 \ud3c9\uade0 \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE exploration_data (data_id INT, well_id INT, date DATE, gas_production FLOAT, oil_production FLOAT); INSERT INTO exploration_data (data_id, well_id, date, gas_production, oil_production) VALUES (6, 6, '2020-01-01', 80.3, 250.2), (7, 7, '2020-02-15', 90.1, 300.5), (8, 8, '2019-12-10', 75.8, 275.3);", "output": "SELECT well_id, AVG(gas_production) FROM exploration_data WHERE location = 'Siberia' GROUP BY well_id;"}
{"input": " \uc778\ubb38\ub300\ud559 \uad50\uc9c1\uc6d0\uc5d0\uac8c \uc9c0\uae09\ub418\ub294 \ucd5c\ub300 \ubcf4\uc870\uae08 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(100), department VARCHAR(50), grant_amount DECIMAL(10,2)); INSERT INTO faculty (id, name, department, grant_amount) VALUES (1, 'Fiona', 'English', 20000.00); CREATE VIEW arts_humanities_faculty AS SELECT * FROM faculty WHERE department LIKE 'Arts%' OR department LIKE 'Humanities%';", "output": "SELECT MAX(grant_amount) FROM arts_humanities_faculty;"}
{"input": " '\uad00\ub9ac' \ubd80\uc11c\uc5d0 \ube44\ud574 '\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1' \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE salaries (id INT, worker_id INT, department VARCHAR(50), salary DECIMAL(10,2)); INSERT INTO salaries (id, worker_id, department, salary) VALUES (1, 1, 'Engineering', 80000.00), (2, 2, 'Management', 95000.00), (3, 3, 'Engineering', 82000.00);", "output": "SELECT department, AVG(salary) as avg_salary FROM salaries GROUP BY department;"}
{"input": " \ube0c\ub77c\uc9c8\uc5d0\uc11c \uc74c\uc545 \uc2a4\ud2b8\ub9ac\ubc0d \uc11c\ube44\uc2a4\uc5d0 \ub4f1\ub85d\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Users (user_id INT, username VARCHAR(50), registration_date DATE, country VARCHAR(50)); INSERT INTO Users (user_id, username, registration_date, country) VALUES (1, 'UserA', '2022-01-01', 'Brazil'); INSERT INTO Users (user_id, username, registration_date, country) VALUES (2, 'UserB', '2022-01-02', 'USA');", "output": "SELECT COUNT(*) FROM Users WHERE country = 'Brazil';"}
{"input": "\uac01 \ubc15\ubb3c\uad00\uc774 \ubcf4\uc720\ud55c \uc804\uccb4 \uc608\uc220 \uc791\ud488\uc758 \ube44\uc728\uc744 \uac00\uc7a5 \uac00\uae4c\uc6b4 \uc815\uc218\ub85c \ubc18\uc62c\ub9bc\ud558\uc5ec \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Museums (MuseumID INT, MuseumName VARCHAR(100), TotalArtworks INT); INSERT INTO Museums (MuseumID, MuseumName, TotalArtworks) VALUES (1, 'Metropolitan Museum of Art', 190000), (2, 'British Museum', 8000000), (3, 'Louvre Museum', 480000);", "output": "SELECT MuseumName, ROUND(100.0 * TotalArtworks / (SELECT SUM(TotalArtworks) FROM Museums), 0) AS Percentage FROM Museums;"}
{"input": " \ud658\uacbd \ubcf4\ud638\ub97c \uc704\ud55c \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount INT, Cause TEXT); INSERT INTO Donors (DonorID, DonorName, DonationAmount, Cause) VALUES (1, 'John Doe', 5000, 'Environment'), (2, 'Jane Smith', 7000, 'Health'), (3, 'Bob Johnson', 3000, 'Environment'), (4, 'Alice Williams', 8000, 'Education');", "output": "SELECT DonorName FROM (SELECT DonorName, ROW_NUMBER() OVER (PARTITION BY Cause ORDER BY DonationAmount DESC) AS Rank FROM Donors WHERE Cause = 'Environment') DonorRanks WHERE Rank <= 3;"}
{"input": " \ud310\ub9e4 \uc0c1\uc704 2\uac1c \uc694\ub9ac\uc758 \uc77c\uc77c \uc218\uc775\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE sales_data (sale_id INT, dish_id INT, sale_date DATE, revenue DECIMAL(10, 2)); INSERT INTO sales_data (sale_id, dish_id, sale_date, revenue) VALUES (1, 1, '2022-01-01', 15.99), (2, 2, '2022-01-01', 7.99), (3, 1, '2022-01-02', 12.99), (4, 3, '2022-01-02', 6.99); CREATE TABLE menu (dish_id INT, dish_name VARCHAR(255), dish_type VARCHAR(255)); INSERT INTO menu (dish_id, dish_name, dish_type) VALUES (1, 'Quinoa Salad', 'Vegetarian'), (2, 'Chicken Sandwich', 'Non-Vegetarian'), (3, 'Pumpkin Soup', 'Vegetarian');", "output": "SELECT m.dish_id, m.dish_name, DATE(s.sale_date) AS sale_date, SUM(s.revenue) AS daily_revenue FROM sales_data s JOIN menu m ON s.dish_id = m.dish_id WHERE m.dish_id IN (SELECT m1.dish_id FROM menu m1 JOIN sales_data s1 ON m1.dish_id = s1.dish_id GROUP BY m1.dish_id ORDER BY SUM(s1.revenue) DESC LIMIT 2) GROUP BY sale_date, m.dish_id;"}
{"input": " '\uac00\ubb38\ube44\ub098\ubb34' \uc778\uad6c\uac00 4,500,000\uba85\ubcf4\ub2e4 \ub9ce\uc740 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255)); INSERT INTO regions (id, name) VALUES (1, 'Europe'); INSERT INTO regions (id, name) VALUES (2, 'North America'); CREATE TABLE population_by_region (region_id INT, species_id INT, population INT); INSERT INTO population_by_region (region_id, species_id, population) VALUES (1, 1, 5000000); INSERT INTO population_by_region (region_id, species_id, population) VALUES (2, 1, 4000000);", "output": "SELECT regions.name FROM regions INNER JOIN population_by_region ON regions.id = population_by_region.region_id INNER JOIN species ON population_by_region.species_id = species.id WHERE species.name = 'Spruce' AND population_by_region.population > 4500000;"}
{"input": "\uc9c0\ub09c \ubd84\uae30 \ub3d9\uc548 \uc724\ub9ac\uc801 \ud328\uc158 \ube0c\ub79c\ub4dc\uc5d0\uc11c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (sale_id INT, sale_date DATE, sale_amount FLOAT, brand_name VARCHAR(50));", "output": "SELECT SUM(Sales.sale_amount) as total_revenue FROM Sales WHERE Sales.sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND Sales.brand_name IN (SELECT DISTINCT brand_name FROM Ethical_Fashion_Brands);"}
{"input": "\ucc9c\uc5f0 \uc131\ubd84\uc774 \ud3ec\ud568\ub41c \uc81c\ud488\uc5d0 \ub300\ud574 \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ub97c \uc120\ud638\ud558\ub294 \uc0ac\uc6a9\uc790 \uc218\ub97c \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ProductPreferences (UserID INT, PreferredCategory VARCHAR(50), PreferredProduct VARCHAR(50), PreferredIngredients VARCHAR(255)); INSERT INTO ProductPreferences (UserID, PreferredCategory, PreferredProduct, PreferredIngredients) VALUES (1, 'Skincare', 'Ginzing Energy-Boosting Gel Moisturizer', 'Water, Glycerin, Natural Extracts'); INSERT INTO ProductPreferences (UserID, PreferredCategory, PreferredProduct, PreferredIngredients) VALUES (2, 'Haircare', 'Tea Totaler Hair Mask', 'Water, Glycerin, Natural Oils');", "output": "SELECT PreferredCategory, PreferredProduct, PreferredIngredients, COUNT(*) OVER (PARTITION BY PreferredCategory) as 'CategoryPopularity' FROM ProductPreferences WHERE PreferredIngredients LIKE '%Natural%';"}
{"input": " \uc9c0\ub09c 180\uc77c \ub3d9\uc548 \uc544\uba54\ub9ac\uce74 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\ub97c \uae0d\uc815\uc801\uc73c\ub85c \ud45c\ud604\ud55c TV \ud504\ub85c\uadf8\ub7a8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tv_shows_data (id INT, title VARCHAR(100), positive_representation BOOLEAN, country VARCHAR(50), air_date DATE); INSERT INTO tv_shows_data (id, title, positive_representation, country, air_date) VALUES (1, 'Show1', TRUE, 'Canada', '2022-01-01'), (2, 'Show2', FALSE, 'USA', '2022-01-05'), (3, 'Show3', TRUE, 'Brazil', '2022-01-10'), (4, 'Show4', FALSE, 'Mexico', '2022-02-01'), (5, 'Show5', TRUE, 'Canada', '2022-02-05'), (6, 'Show6', FALSE, 'USA', '2022-02-10'), (7, 'Show7', TRUE, 'Brazil', '2022-02-15'), (8, 'Show8', FALSE, 'Mexico', '2022-02-20');", "output": "SELECT (COUNT(*) * 100 / (SELECT COUNT(*) FROM tv_shows_data WHERE air_date >= DATEADD(day, -180, GETDATE()))) AS percentage FROM tv_shows_data WHERE positive_representation = TRUE AND country IN ('Canada', 'USA', 'Brazil', 'Mexico');"}
{"input": " \uad6d\uac00\ubcc4 \uc804\ub144\ub3c4 \ub300\ube44 \ud0dc\uc591\uc5d0\ub108\uc9c0 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc758 \uc5f0\uac04 \ubcc0\ud654\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE SolarCapacity (Year INT, Country VARCHAR(50), Capacity INT); INSERT INTO SolarCapacity (Year, Country, Capacity) VALUES (2018, 'Country1', 100), (2018, 'Country2', 200), (2018, 'Country3', 300), (2019, 'Country1', 120), (2019, 'Country2', 250), (2019, 'Country3', 350), (2020, 'Country1', 150), (2020, 'Country2', 300), (2020, 'Country3', 400);", "output": "SELECT Year, Country, LAG(SUM(Capacity)) OVER (PARTITION BY Country ORDER BY Year) AS PreviousYearCapacity, SUM(Capacity) AS CurrentYearCapacity, SUM(Capacity) - LAG(SUM(Capacity)) OVER (PARTITION BY Country ORDER BY Year) AS YearlyChange FROM SolarCapacity GROUP BY Year, Country;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc704\ud5d8 \uc810\uc218\uac00 500\uc810 \ubbf8\ub9cc\uc778 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 \uc81c\uae30\ud55c \uccad\uad6c \uac74\uc740 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (PolicyID INT, RiskScore INT); INSERT INTO Policyholders VALUES (1, 400); INSERT INTO Policyholders VALUES (2, 700); CREATE TABLE Claims (ClaimID INT, PolicyID INT, ClaimDate DATE); INSERT INTO Claims VALUES (1, 1, '2022-01-01'); INSERT INTO Claims VALUES (2, 2, '2022-02-15'); CREATE TABLE Calendar (Date DATE); INSERT INTO Calendar VALUES ('2022-01-01'); INSERT INTO Calendar VALUES ('2022-02-01'); INSERT INTO Calendar VALUES ('2022-03-01');", "output": "SELECT COUNT(c.ClaimID) as ClaimCount FROM Claims c INNER JOIN Policyholders p ON c.PolicyID = p.PolicyID INNER JOIN Calendar cal ON c.ClaimDate >= cal.Date AND cal.Date >= DATE_SUB(curdate(), INTERVAL 6 MONTH) WHERE p.RiskScore < 500;"}
{"input": " 2022\ub144 2\ubd84\uae30 \ud604\uc7ac \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc6b4\uc6a9 \uc911\uc778 \uad70\uc0ac \uc7a5\ube44\uc758 \ucd1d \uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Equipment_Inventory (inventory_id INT, equipment_type TEXT, state TEXT, in_service INT, quarter INT, year INT); INSERT INTO Equipment_Inventory (inventory_id, equipment_type, state, in_service, quarter, year) VALUES (1, 'Helicopter', 'California', 50, 2, 2022), (2, 'Tank', 'California', 30, 2, 2022);", "output": "SELECT SUM(in_service) FROM Equipment_Inventory WHERE state = 'California' AND quarter = 2 AND year = 2022;"}
{"input": " \uc628\uc2e4\uac00\uc2a4 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uc704\uad8c\uacfc \uc778\uad6c \uc99d\uac00\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uc704 \uc548\uc5d0 \ub4dc\ub294 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_emissions (city VARCHAR(50), ghg_emissions FLOAT); CREATE TABLE city_population (city VARCHAR(50), population_growth FLOAT); ; INSERT INTO city_emissions VALUES ('CityA', 5000); INSERT INTO city_population VALUES ('CityA', 2.5);", "output": "SELECT city FROM city_emissions WHERE ghg_emissions = (SELECT MAX(ghg_emissions) FROM city_emissions LIMIT 5) INTERSECT SELECT city FROM city_population WHERE population_growth = (SELECT MAX(population_growth) FROM city_population LIMIT 5)"}
{"input": " \uc2dc\uac00\ucd1d\uc561 \uae30\uc900\uc73c\ub85c \uc138 \ubc88\uc9f8\ub85c \ud070 \ub514\uc9c0\ud138 \uc790\uc0b0\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists blockchain; CREATE TABLE if not exists blockchain.digital_assets ( asset_id INT AUTO_INCREMENT, asset_name VARCHAR(255), market_cap DECIMAL(18,2), PRIMARY KEY (asset_id)); INSERT INTO blockchain.digital_assets (asset_name, market_cap) VALUES ('Bitcoin', 80000000000.00), ('Ethereum', 32000000000.00), ('Binance Coin', 6000000000.00), ('Cardano', 5000000000.00), ('Solana', 4500000000.00);", "output": "SELECT asset_name, market_cap FROM ( SELECT asset_name, market_cap, ROW_NUMBER() OVER (ORDER BY market_cap DESC) AS row_num FROM blockchain.digital_assets ) AS subquery WHERE row_num = 3;"}
{"input": " \uc5b4\ub5a4 \uc720\uc804 \uc5f0\uad6c \uc2e4\ud5d8\uc5d0\uc11c \uc628\ub3c4\uac00 \uac00\uc7a5 \ub9ce\uc774 \uc0c1\uc2b9\ud588\ub098\uc694?", "context": "CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.experiments (id INT, experiment_name VARCHAR(255), temperature_delta INT); INSERT INTO genetics.experiments (id, experiment_name, temperature_delta) VALUES (1, 'CRISPR-Cas9', 15), (2, 'Gene Editing', 22), (3, 'Genetic Fusion', 18);", "output": "SELECT experiment_name, temperature_delta FROM (SELECT experiment_name, temperature_delta, RANK() OVER (ORDER BY temperature_delta DESC) AS rank FROM genetics.experiments) ranked_experiments WHERE rank = 1;"}
{"input": " \uc704\ubc18 \uac74\uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc8fc\ubcc4 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc704\ubc18 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE parity_violations (state VARCHAR(2), violations INT); INSERT INTO parity_violations (state, violations) VALUES ('NY', 40), ('CA', 35), ('TX', 50), ('FL', 25), ('IL', 30);", "output": "SELECT state, SUM(violations) OVER (PARTITION BY 1) as total_violations FROM parity_violations ORDER BY total_violations DESC;"}
{"input": " \uc5ec\ub7ec \uc7a5\ub974\uc758 \uc74c\uc545\uc744 \ubc1c\ud45c\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE artist_genre (artist_id INT, artist_name VARCHAR(255), genre VARCHAR(255)); CREATE TABLE artist (artist_id INT, artist_name VARCHAR(255));", "output": "SELECT artist_name FROM artist_genre GROUP BY artist_name HAVING COUNT(DISTINCT genre) > 1;"}
{"input": " \uac01 \uc704\uce58\uc758 \uc804\uae30 \uc790\ub3d9\ucc28\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc548\uc804 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VehicleSafetyTesting (VehicleID INT, TestName VARCHAR(20), Score INT, VehicleType VARCHAR(10)); CREATE TABLE ElectricVehicleAdoption (Location VARCHAR(10), Year INT, AdoptionRate FLOAT);", "output": "SELECT E.Location, AVG(V.Score) FROM VehicleSafetyTesting V INNER JOIN ElectricVehicleAdoption E ON V.VehicleID = (SELECT VehicleID FROM VehicleTypes WHERE VehicleType = 'Electric') GROUP BY E.Location;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ub18d\ucd0c \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \uc218, \uadf8\ub9ac\uace0 \uac01 \uc9c0\uc5ed\uc5d0 \ud5ec\uae30\uc7a5\uc744 \uac16\ucd98 \ubcd1\uc6d0\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT, territory TEXT, has_helipad BOOLEAN); INSERT INTO hospitals (id, name, location, num_beds, territory, has_helipad) VALUES (1, 'Hospital A', 'Rural Nunavut', 20, 'Nunavut', true), (2, 'Hospital B', 'Rural Northwest Territories', 25, 'Northwest Territories', false); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_beds INT, territory TEXT); INSERT INTO clinics (id, name, location, num_beds, territory) VALUES (1, 'Clinic A', 'Rural Nunavut', 10, 'Nunavut'), (2, 'Clinic B', 'Rural Northwest Territories', 15, 'Northwest Territories');", "output": "SELECT t.territory, COUNT(h.id) AS num_hospitals, COUNT(c.id) AS num_clinics, COUNT(h2.id) AS num_hospitals_with_helipad FROM hospitals h INNER JOIN clinics c ON h.territory = c.territory INNER JOIN hospitals h2 ON h.territory = h2.territory AND h2.has_helipad = true GROUP BY t.territory;"}
{"input": " '\uc561\uc158' \uce74\ud14c\uace0\ub9ac\uc5d0 \ud3ec\ud568\ub41c \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\ub294 \uc778\ub3c4 \ud50c\ub808\uc774\uc5b4\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Country) VALUES (1, 25, 'India'), (2, 30, 'Canada'), (3, 22, 'Germany'), (4, 35, 'Japan'); CREATE TABLE GameLibrary (GameID INT, GameName VARCHAR(50), GameType VARCHAR(50), Category VARCHAR(50)); INSERT INTO GameLibrary (GameID, GameName, GameType, Category) VALUES (1, 'GameA', 'VR', 'Action'), (2, 'GameB', 'Non-VR', 'Strategy'), (3, 'GameC', 'VR', 'Action'); CREATE TABLE PlayerGameLibrary (PlayerID INT, GameID INT); INSERT INTO PlayerGameLibrary (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 1), (4, 3);", "output": "SELECT COUNT(Players.PlayerID) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE Players.Country = 'India' AND GameLibrary.Category = 'Action';"}
{"input": " \ud638\uc8fc\uc5d0\uc11c \ud658\uc790 \uce58\ub8cc\uc758 \uac00\uc7a5 \ube60\ub978 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE therapy (id INT, patient_id INT, start_date DATE); INSERT INTO therapy (id, patient_id, start_date) VALUES (1, 1, '2022-01-01'), (2, 2, '2021-12-31');", "output": "SELECT MIN(start_date) FROM therapy WHERE patient_id IN (SELECT id FROM patients WHERE country = 'Australia');"}
{"input": " \ubbf8\uad6d \ud658\uc790 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc778\uc9c0 \ud589\ub3d9 \uce58\ub8cc 3\uac1c\uc6d4 \ud6c4 \uac1c\uc120\uc744 \ubcf4\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, country VARCHAR(255)); CREATE TABLE treatments (id INT, patient_id INT, type VARCHAR(255), start_date DATE); CREATE TABLE outcomes (id INT, patient_id INT, treatment_id INT, improvement BOOLEAN, follow_up_date DATE); INSERT INTO patients (id, country) VALUES (1, 'USA'), (2, 'USA'), (3, 'USA'); INSERT INTO treatments (id, patient_id, type) VALUES (1, 1, 'cognitive behavioral therapy'), (2, 2, 'cognitive behavioral therapy'), (3, 3, 'cognitive behavioral therapy'); INSERT INTO outcomes (id, patient_id, treatment_id, improvement, follow_up_date) VALUES (1, 1, 1, true, '2022-04-01'), (2, 1, 1, true, '2022-07-01'), (3, 2, 2, false, '2022-06-01'), (4, 3, 3, true, '2022-03-15');", "output": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN outcomes.follow_up_date < treatments.start_date + INTERVAL '3 month' AND outcomes.improvement THEN patients.id END) / COUNT(DISTINCT patients.id) AS percentage FROM patients JOIN treatments ON patients.id = treatments.patient_id JOIN outcomes ON treatments.id = outcomes.treatment_id WHERE patients.country = 'USA' AND treatments.type = 'cognitive behavioral therapy';"}
{"input": " \uacf5\uc815\ubb34\uc5ed \uacf5\uc7a5\uc5d0\ub294 \uba87 \uba85\uc758 \uadfc\ub85c\uc790\uac00 \uadfc\ubb34\ud558\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE factories (id INT, name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), PRIMARY KEY(id)); INSERT INTO factories (id, name, location, type) VALUES (3, 'Fair Trade Factories', 'Global', 'Factory'); CREATE TABLE workers (id INT, name VARCHAR(255), position VARCHAR(255), factory_id INT, PRIMARY KEY(id), FOREIGN KEY (factory_id) REFERENCES factories(id)); INSERT INTO workers (id, name, position, factory_id) VALUES (4, 'Jane Doe', 'Seamstress', 3), (5, 'John Smith', 'Quality Control', 3);", "output": "SELECT COUNT(*) FROM workers WHERE factory_id = (SELECT id FROM factories WHERE name = 'Fair Trade Factories' AND type = 'Factory');"}
{"input": " \uad6d\uac00\ubcc4 \uc7ac\uc0dd\uc5d0\ub108\uc9c0\uc6d0\uc758 \ucd5c\uc18c \uc124\uce58\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE renewable_energy (id INT, country VARCHAR(255), source VARCHAR(255), installed_capacity INT); INSERT INTO renewable_energy (id, country, source, installed_capacity) VALUES (1, 'Germany', 'Solar', 500), (2, 'France', 'Wind', 600), (3, 'Spain', 'Hydro', 700), (4, 'Italy', 'Geothermal', 800);", "output": "SELECT country, MIN(installed_capacity) FROM renewable_energy GROUP BY country;"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \ucc98\ub9ac\ub418\ub294 \ud3d0\uc218 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wastewater_volume (country VARCHAR(50), treated_volume INT, total_volume INT); INSERT INTO wastewater_volume (country, treated_volume, total_volume) VALUES ('USA', 1200, 1500), ('Canada', 800, 1000), ('Mexico', 600, 900), ('Brazil', 1000, 1300);", "output": "SELECT wv.country, (wv.treated_volume*100.0/wv.total_volume) as percentage_treated FROM wastewater_volume wv;"}
{"input": " '\uc544\uc2dc\uc544' \uc9c0\uc5ed\uc758 \uce5c\ud658\uacbd \ud638\ud154 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE eco_hotels (hotel_id INT, hotel_name TEXT, country TEXT, certification_level INT, occupancy_rate DECIMAL); INSERT INTO eco_hotels (hotel_id, hotel_name, country, certification_level, occupancy_rate) VALUES (401, 'Asia Eco Lodge', 'India', 4, 0.85), (402, 'Bali Green Resort', 'Indonesia', 5, 0.90), (403, 'Japan Eco Hotel', 'Japan', 3, 0.75), (404, 'Thailand Eco Retreat', 'Thailand', 4, 0.80);", "output": "SELECT AVG(occupancy_rate) as avg_occupancy_rate FROM eco_hotels WHERE country IN ('India', 'Indonesia', 'Japan', 'Thailand');"}
{"input": " \uc778\ub3c4\uc640 \uba55\uc2dc\ucf54\uc758 \uce5c\ud658\uacbd \ud638\ud154\uc758 \uc6d4 \ud3c9\uade0 \uc218\uc775\uacfc \uc774 \ub450 \uad6d\uac00\uc758 \uc6d4 \ud3c9\uade0 \ubc15\ubb3c\uad00 \ubc29\ubb38\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE hotel_revenue (hotel_id INT, country VARCHAR(20), monthly_revenue FLOAT); INSERT INTO hotel_revenue (hotel_id, country, monthly_revenue) VALUES (1, 'India', 33000), (2, 'India', 35000), (3, 'Mexico', 40000), (4, 'Mexico', 42000); CREATE TABLE museum_visitors (visit_id INT, country VARCHAR(20), monthly_visitors INT); INSERT INTO museum_visitors (visit_id, country, monthly_visitors) VALUES (1, 'India', 15000), (2, 'India', 16000), (3, 'Mexico', 18000), (4, 'Mexico', 20000);", "output": "SELECT AVG(monthly_revenue) FROM hotel_revenue WHERE country IN ('India', 'Mexico') UNION ALL SELECT AVG(monthly_visitors) FROM museum_visitors WHERE country IN ('India', 'Mexico');"}
{"input": " \uc721\ub958 \uc81c\ud488\uc744 \ub3c5\uc810\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uacf5\uae09\uc5c5\uccb4\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers(SupplierID INT, Name VARCHAR(50), Type VARCHAR(50));CREATE TABLE MeatProducts(ProductID INT, SupplierID INT, ProductName VARCHAR(50), Quantity INT);INSERT INTO Suppliers VALUES (1, 'MeatCo', 'Meat Supplier'), (2, 'FreshFruits', 'Fruit Supplier');INSERT INTO MeatProducts VALUES (1, 1, 'Beef', 200), (2, 1, 'Chicken', 300), (3, 2, 'Apples', 500);", "output": "SELECT Name FROM Suppliers WHERE SupplierID NOT IN (SELECT SupplierID FROM MeatProducts EXCEPT SELECT SupplierID FROM MeatProducts WHERE ProductName = 'Beef' OR ProductName = 'Chicken');"}
{"input": " \uc9c0\uc5ed\ubcc4, \uc5f0\ub3c4\ubcc4 \uc778\uad6c \uc99d\uac00\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE animal_population (region VARCHAR(50), population INT, year INT); INSERT INTO animal_population (region, population, year) VALUES ('Africa', 500, 2020), ('Africa', 510, 2021), ('Asia', 800, 2020), ('Asia', 820, 2021), ('Americas', 300, 2020), ('Americas', 310, 2021);", "output": "SELECT region, year, (LAG(population) OVER (PARTITION BY region ORDER BY year) - population) * 100.0 / population as growth_rate FROM animal_population ORDER BY region, year;"}
{"input": " \uc644\uc804 \ucc44\uc2dd \uc694\ub9ac\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc9c0\ucd9c\uc744 \ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50)); INSERT INTO customers VALUES (1, 'James Doe'), (2, 'Jane Smith'), (3, 'Alice Johnson'); CREATE TABLE orders (order_id INT, customer_id INT, menu_id INT, order_date DATE, total_cost DECIMAL(5,2)); INSERT INTO orders VALUES (1, 1, 1, '2022-01-01', 25.00), (2, 2, 3, '2022-01-02', 18.50), (3, 3, 2, '2022-01-03', 12.50), (4, 1, 4, '2022-01-04', 32.00); CREATE TABLE menu (menu_id INT, item_name VARCHAR(50), is_vegan BOOLEAN, price DECIMAL(5,2)); INSERT INTO menu VALUES (1, 'Veggie Burger', true, 8.99), (2, 'Cheeseburger', false, 7.99), (3, 'Tofu Stir Fry', true, 11.99), (4, 'Quinoa Salad', true, 9.01);", "output": "SELECT customers.customer_name, SUM(orders.total_cost) as total_spent FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id INNER JOIN menu ON orders.menu_id = menu.menu_id WHERE menu.is_vegan = true GROUP BY customers.customer_name ORDER BY total_spent DESC LIMIT 1;"}
{"input": " \ud2b9\uc815 \ub0a0\uc9dc \uc774\ud6c4\uc5d0 \uac00\uc785\ud55c \uc870\ud569\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_members (id INT, name VARCHAR, state VARCHAR, union_since DATE); INSERT INTO union_members (id, name, state, union_since) VALUES (15, 'Karen White', 'IL', '2021-07-01'); INSERT INTO union_members (id, name, state, union_since) VALUES (16, 'David Black', 'TX', '2019-12-25');", "output": "SELECT name, state, union_since, ROW_NUMBER() OVER (ORDER BY union_since DESC) as seniority_rank FROM union_members WHERE union_since > '2021-01-01';"}
{"input": " \uc9c0\ub09c \ub2ec \uc815\uce58 \uad00\ub828 \uae30\uc0ac\ub97c \uc8fc\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(255), word_count INT, publish_date DATE, topic VARCHAR(255)); INSERT INTO articles (id, title, word_count, publish_date, topic) VALUES (1, 'Article 1', 500, '2022-01-01', 'politics'), (2, 'Article 2', 700, '2022-01-05', 'politics');", "output": "SELECT AVG(word_count), WEEKOFYEAR(publish_date) AS Week FROM articles WHERE topic = 'politics' AND publish_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH) GROUP BY Week;"}
{"input": " '\uac77\uae30'\ub9cc \ud55c \uba64\ubc84\ub97c \uc81c\uc678\ud55c \uba64\ubc84\ubcc4 \uc6b4\ub3d9 \uc720\ud615\uc740 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE Members (Id INT, Name VARCHAR(50), Age INT, Nationality VARCHAR(50)); INSERT INTO Members (Id, Name, Age, Nationality) VALUES (8, 'Emma Wilson', 27, 'Australia'), (9, 'Liam Thompson', 38, 'New Zealand'); CREATE TABLE Workouts (Id INT, MemberId INT, WorkoutType VARCHAR(50), Duration INT, Date DATE); INSERT INTO Workouts (Id, MemberId, WorkoutType, Duration, Date) VALUES (9, 8, 'Running', 30, '2022-01-09'), (10, 9, 'Walking', 45, '2022-01-10'), (11, 8, 'Cycling', 60, '2022-01-11');", "output": "SELECT w.MemberId, COUNT(DISTINCT w.WorkoutType) as DistinctWorkoutTypes FROM Workouts w WHERE w.MemberId IN (SELECT m.Id FROM Members m EXCEPT (SELECT m.Id FROM Members m JOIN Workouts w ON m.Id = w.MemberId WHERE w.WorkoutType = 'Walking')) GROUP BY w.MemberId;"}
{"input": " \ud504\ub85c\uadf8\ub7a8\ubcc4 \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE programs (id INT, name VARCHAR, budget DECIMAL); CREATE TABLE volunteers (id INT, name VARCHAR, email VARCHAR, phone VARCHAR); CREATE TABLE volunteer_assignments (id INT, volunteer_id INT, program_id INT, hours DECIMAL);", "output": "SELECT programs.name, COUNT(DISTINCT volunteers.id) as num_volunteers, SUM(volunteer_assignments.hours) as total_volunteer_hours FROM programs JOIN volunteer_assignments ON programs.id = volunteer_assignments.program_id JOIN volunteers ON volunteer_assignments.volunteer_id = volunteers.id GROUP BY programs.id;"}
{"input": " \ub3d9\ubd81\ubd80 \uc9c0\uc5ed \uac8c\uc784 \ud2f0\ucf13\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT, name VARCHAR(255), games_hosted INT); INSERT INTO regions (id, name, games_hosted) VALUES (1, 'Northeast', 10); INSERT INTO regions (id, name, games_hosted) VALUES (2, 'Southeast', 8);", "output": "SELECT COUNT(*) FROM tickets t JOIN games g ON t.game_id = g.id JOIN regions r ON g.region_id = r.id WHERE r.name = 'Northeast';"}
{"input": "\uc778\uad6c 1\uc5b5 \uba85\uc774 \ub118\ub294 \uad6d\uac00\uc5d0 \uc704\uce58\ud55c \uc804\uccb4 \uc0ac\uc6a9\uc790 \uc911 \uc9c0\ub09c\ub2ec\uc5d0 \ud2b8\uc717\uc744 \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790 \uc911 \uc778\uad6c 1\uc5b5 \uba85\uc774 \ub118\ub294 \uad6d\uac00\uc5d0 \uac70\uc8fc\ud558\ub294 \uc0ac\uc6a9\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tweets (tweet_id INT, user_id INT, tweet_date DATE);CREATE TABLE users (user_id INT, country VARCHAR(50), registration_date DATE);CREATE TABLE country_populations (country VARCHAR(50), population INT);", "output": "SELECT 100.0 * COUNT(DISTINCT t.user_id) / (SELECT COUNT(DISTINCT u.user_id) FROM users u JOIN country_populations cp ON u.country = cp.country WHERE cp.population > 100000000) as pct_users FROM tweets t JOIN users u ON t.user_id = u.user_id JOIN country_populations cp ON u.country = cp.country WHERE t.tweet_date >= DATE(NOW()) - INTERVAL 1 MONTH AND cp.population > 100000000;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uad50\uc0ac\uac00 \uc218\uac15\ud558\ub294 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, country TEXT, professional_development_course INT); INSERT INTO teachers (teacher_id, country, professional_development_course) VALUES (1, 'USA', 2), (2, 'Canada', 1), (3, 'Mexico', 3), (4, 'Brazil', 2), (5, 'Argentina', 1);", "output": "SELECT country, SUM(professional_development_course) as total_courses FROM teachers GROUP BY country;"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30 \uc0c1\uc704 3\ub300 \uc0ac\uc774\ubc84\ubcf4\uc548 \uc704\ud611\uc740 \ubb34\uc5c7\uc774\uc5c8\ub098\uc694?", "context": "CREATE TABLE cyber_threats (threat VARCHAR(100), first_half FLOAT, impact_score FLOAT); INSERT INTO cyber_threats (threat, first_half, impact_score) VALUES ('Log4j Vulnerability', 1.5, 9.1), ('RansomEXX Attacks', 1.5, 8.4), ('WhatsApp Vulnerability', 2, 7.6), ('Hafnium Attacks', 1, 7.5), ('Kaseya Supply-Chain Attack', 2.5, 7.3);", "output": "SELECT threat, impact_score FROM cyber_threats WHERE first_half BETWEEN 1 AND 2 ORDER BY impact_score DESC LIMIT 3;"}
{"input": " \uc7a5\uc560\uc720\ud615\ubcc4\ub85c \ucd5c\ucd08\ub85c \ub4f1\ub85d\ud55c \ud559\uc0dd\uc740 \ub204\uad6c\uc774\uba70, \ub4f1\ub85d\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, name VARCHAR(255), disability_type VARCHAR(255), enrollment_date DATE); INSERT INTO students (id, name, disability_type, enrollment_date) VALUES (5, 'Alex Chen', 'Mobility', '2022-02-01'), (6, 'Jamie Park', 'Communication', '2022-03-01');", "output": "SELECT s.name, s.disability_type, s.enrollment_date FROM students s WHERE (SELECT COUNT(*) FROM students s2 WHERE s2.disability_type = s.disability_type AND s2.enrollment_date <= s.enrollment_date) = 1;"}
{"input": " \uc0ac\uc6a9\ub7c9\uc774 250\ubcf4\ub2e4 \ud070 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Materials (material_id INT PRIMARY KEY, material VARCHAR(50), usage INT); INSERT INTO Materials (material_id, material, usage) VALUES (1, 'Organic Cotton', 500), (2, 'Recycled Polyester', 300), (3, 'Hemp', 100);", "output": "SELECT material FROM Materials WHERE usage > 250;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c \uc2e0\uccad\uc774 \uc2b9\uc778\ub418\uac70\ub098 \uac70\ubd80\ub41c \ucd94\uc138\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE lending_trend (application_date DATE, approved BOOLEAN); INSERT INTO lending_trend (application_date, approved) VALUES ('2021-04-02', FALSE), ('2021-05-15', TRUE), ('2021-06-01', FALSE), ('2021-07-01', TRUE), ('2021-08-15', FALSE), ('2021-09-01', TRUE), ('2021-10-15', FALSE), ('2021-11-01', TRUE), ('2021-12-15', FALSE);", "output": "SELECT MONTH(application_date) as month, YEAR(application_date) as year, SUM(approved) as num_approved, SUM(NOT approved) as num_rejected FROM lending_trend WHERE application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY YEAR(application_date), MONTH(application_date);"}
{"input": " \uc544\ud504\ub9ac\uce74\uc640 \ub0a8\ubbf8 \uae30\uc5c5\ub9cc\uc744 \ub300\uc0c1\uc73c\ub85c 2019\ub144 \uc774\ud6c4 FDA \uc2b9\uc778\uc744 \ubc1b\uc740 \uc2ec\uc7a5\ub0b4\uacfc \ub9e4\ucd9c \uc0c1\uc704 2\uac1c \uc758\uc57d\ud488\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE drugs (id INT, name VARCHAR(255), company VARCHAR(255), department VARCHAR(255), fda_approval_date DATE, sales FLOAT); INSERT INTO drugs (id, name, company, department, fda_approval_date, sales) VALUES (1, 'DrugA', 'African Pharma', 'Cardiology', '2020-01-01', 10000000), (2, 'DrugB', 'Brazilian BioTech', 'Cardiology', '2021-06-15', 12000000), (3, 'DrugC', 'Asian Pharma', 'Cardiology', '2018-03-23', 8000000), (4, 'DrugD', 'European Pharma', 'Cardiology', '2014-11-11', 14000000), (5, 'DrugE', 'South American Pharma', 'Cardiology', '2016-09-10', 9000000);", "output": "SELECT * FROM (SELECT * FROM drugs WHERE department = 'Cardiology' AND fda_approval_date > '2019-01-01' AND company IN ('Africa', 'South America') GROUP BY name ORDER BY sales DESC LIMIT 2) a;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc7ac\uc815\uc801 \ub2a5\ub825\uc774 \uc788\ub294 \uac1c\uc778\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud558\uace0 \uad6d\uac00\uc640 \ube44\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE individuals (individual_id INT, country VARCHAR(50), financial_capability_score DECIMAL(5, 2)); INSERT INTO individuals (individual_id, country, financial_capability_score) VALUES (1, 'India', 75.50), (2, 'Brazil', 80.25), (3, 'China', 68.75), (4, 'USA', 90.00), (5, 'India', 72.25), (6, 'Brazil', 85.00), (7, 'China', 65.00), (8, 'USA', 92.50);", "output": "SELECT country, AVG(financial_capability_score) OVER (PARTITION BY country) * 100.0 AS percentage FROM individuals;"}
{"input": " \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uae30\uc5c5\uc774 \ubc1c\ud589\ud55c \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Digital_Assets (Asset_ID INT, Asset_Name VARCHAR(100), Issuer_Country VARCHAR(50)); INSERT INTO Digital_Assets (Asset_ID, Asset_Name, Issuer_Country) VALUES (1, 'Asset1', 'Japan'), (2, 'Asset2', 'Singapore'), (3, 'Asset3', 'Australia');", "output": "SELECT COUNT(*) FROM Digital_Assets WHERE Issuer_Country IN ('Asia-Pacific');"}
{"input": "\ud14d\uc0ac\uc2a4 \uc0c1\uc704 3\uba85\uc758 \uc18c\ube44\uc790\uc758 \uc77c\uc77c \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_water_consumption (consumer_id INT, date DATE, water_consumption INT); CREATE TABLE consumer_info (consumer_id INT, consumer_name VARCHAR(30), state VARCHAR(20));", "output": "SELECT dwc.date, dwc.water_consumption, ci.consumer_name FROM daily_water_consumption dwc JOIN (SELECT consumer_id, consumer_name, ROW_NUMBER() OVER (ORDER BY SUM(water_consumption) DESC) as rank FROM daily_water_consumption JOIN consumer_info ON daily_water_consumption.consumer_id = consumer_info.consumer_id WHERE state = 'Texas' GROUP BY consumer_id, consumer_name) tmp ON dwc.consumer_id = tmp.consumer_id WHERE tmp.rank <= 3;"}
{"input": " \ube0c\ub77c\uc9c8 \uad11\uc0b0\uc5d0 \ub300\ud55c \uc9c0\ub09c 3\ub144\uac04\uc758 \ub178\ub3d9 \uc0dd\uc0b0\uc131 \uc9c0\ud45c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE labor_productivity (id INT, mine_id INT, year INT, productivity INT);CREATE TABLE mine (id INT, name VARCHAR(255), location VARCHAR(255)); INSERT INTO mine (id, name, location) VALUES (1, 'Brazilian Gold', 'Brazil'); INSERT INTO labor_productivity (id, mine_id, year, productivity) VALUES (1, 1, 2020, 100);", "output": "SELECT year, productivity FROM labor_productivity JOIN mine ON labor_productivity.mine_id = mine.id WHERE mine.location = 'Brazil' AND year >= (SELECT MAX(year) - 3 FROM labor_productivity);"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ud30c\ub9ac\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE paris_visitors (id INT, name VARCHAR(50), age INT, nationality VARCHAR(50)); INSERT INTO paris_visitors (id, name, age, nationality) VALUES (1, 'James Brown', 45, 'American'), (2, 'Pierre Dupont', 30, 'French');", "output": "SELECT COUNT(*) FROM paris_visitors WHERE nationality = 'American';"}
{"input": " 2019\ub144 \ud3d0\uae30\ubb3c \ubc1c\uc0dd \ud558\uc704 3\uac1c\uad6d\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ud3d0\uae30\ubb3c \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE yearly_waste (country VARCHAR(50), year INT, total_waste FLOAT); INSERT INTO yearly_waste (country, year, total_waste) VALUES ('USA', 2019, 250), ('China', 2019, 230), ('India', 2019, 150), ('Indonesia', 2019, 110), ('Pakistan', 2019, 90), ('Mexico', 2019, 80);", "output": "SELECT SUM(total_waste) FROM yearly_waste WHERE country IN (SELECT country FROM (SELECT country, ROW_NUMBER() OVER (ORDER BY total_waste DESC) rn FROM yearly_waste WHERE year = 2019) t WHERE rn > 3);"}
{"input": " \ucc9c\uc5f0 \uc131\ubd84\uc774 \ud3ec\ud568\ub41c \uc81c\ud488\uc774 \uc5c6\ub294 \ube0c\ub79c\ub4dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE brands (id INT, brand VARCHAR(255)); INSERT INTO brands (id, brand) VALUES (1, 'Lush'), (2, 'Burt\u2019s Bees'), (3, 'Maybelline'), (4, 'Est\u00e9e Lauder'), (5, 'MAC'); CREATE TABLE brand_products (id INT, brand VARCHAR(255), product VARCHAR(255), has_natural_ingredients BOOLEAN); INSERT INTO brand_products (id, brand, product, has_natural_ingredients) VALUES (1, 'Lush', 'Lip Balm', true), (2, 'Burt\u2019s Bees', 'Face Cream', true), (3, 'Maybelline', 'Mascara', false), (4, 'Est\u00e9e Lauder', 'Foundation', false), (5, 'MAC', 'Lipstick', false);", "output": "SELECT brand FROM brands WHERE id NOT IN (SELECT brand FROM brand_products WHERE has_natural_ingredients = true);"}
{"input": " \uc0ac\uace0\uac00 1\ud68c \uc774\uc0c1 \ubc1c\uc0dd\ud55c \uc120\ubc15\uc758 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (ID INT PRIMARY KEY, Name TEXT, CargoWeight FLOAT); INSERT INTO Vessels (ID, Name, CargoWeight) VALUES (1, 'Cargo Ship 1', 5500), (2, 'Cargo Ship 2', 7000), (3, 'Cargo Ship 3', 4800);", "output": "SELECT AVG(CargoWeight) FROM Vessels INNER JOIN (SELECT VesselID, COUNT(*) FROM Accidents GROUP BY VesselID HAVING COUNT(*) > 0) AS Accidents ON Vessels.ID = Accidents.VesselID;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc720\uc0c9\uc778\uc885\uc774 \uc124\ub9bd\ud55c \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups(name VARCHAR(50), founder_race VARCHAR(20), budget DECIMAL(10,2));INSERT INTO startups(name, founder_race, budget) VALUES('StartupA', 'African American', 5000000.00), ('StartupB', 'Asian American', 6000000.00), ('StartupC', 'Caucasian', 7000000.00);", "output": "SELECT MAX(budget) FROM startups WHERE founder_race IS NOT NULL;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uc720\uae30\ub18d \ub18d\uc0b0\ubb3c\uc744 \uad6c\ub9e4\ud55c \uc624\uc138\uc544\ub2c8\uc544 \uace0\uac1d\uc758 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Customers (customerID INT, customerName VARCHAR(50), country VARCHAR(50)); CREATE TABLE Purchases (purchaseID INT, customerID INT, productID INT, purchaseDate DATE); CREATE TABLE Products (productID INT, productName VARCHAR(50), organic BOOLEAN, productType VARCHAR(50));", "output": "SELECT COUNT(DISTINCT C.customerID) FROM Customers C JOIN Purchases P ON C.customerID = P.customerID JOIN Products PR ON P.productID = PR.productID WHERE C.country = 'Oceania' AND PR.organic = TRUE AND PR.productType = 'produce' AND P.purchaseDate BETWEEN '2022-04-01' AND '2022-06-30';"}
{"input": " '\uc544\ud504\ub9ac\uce74'\uc5d0 \ub300\ud55c \ucd5c\uace0 \uc608\uc0b0\uc73c\ub85c \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c \uc774\ub984\uacfc \uc2dc\uc791 \ub0a0\uc9dc\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE circular_initiatives (region VARCHAR(50), initiative_name VARCHAR(50), budget NUMERIC(10,2), start_date DATE); INSERT INTO circular_initiatives (region, initiative_name, budget, start_date) VALUES ('Africa', 'Green Cities', 500000, '2020-01-01'), ('Africa', 'Waste-to-Energy', 800000, '2019-01-01');", "output": "SELECT initiative_name, start_date FROM (SELECT initiative_name, start_date, ROW_NUMBER() OVER (PARTITION BY region ORDER BY budget DESC) AS rn FROM circular_initiatives WHERE region = 'Africa') x WHERE rn = 1;"}
{"input": " 2022\ub144 field_2\uc5d0\uc11c \uac15\uc218\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE field_2 (rainfall FLOAT, date DATE); INSERT INTO field_2 (rainfall, date) VALUES (23.5, '2022-01-01'), (25.3, '2022-01-02');", "output": "SELECT date FROM (SELECT date, RANK() OVER (ORDER BY rainfall DESC) as rnk FROM field_2 WHERE EXTRACT(YEAR FROM date) = 2022) WHERE rnk <= 3;"}
{"input": " \ube44OTA \uc608\uc57d\uacfc \ube44\uad50\ud558\uc5ec 'CountryZ'\uc5d0\uc11c OTA \uc608\uc57d\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Hotels (hotel_id INT, hotel_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE Bookings (booking_id INT, hotel_id INT, booking_amt FLOAT, ota_source BOOLEAN); INSERT INTO Hotels (hotel_id, hotel_name, country) VALUES (1, 'Hotel1', 'CountryZ'), (2, 'Hotel2', 'CountryX'); INSERT INTO Bookings (booking_id, hotel_id, booking_amt, ota_source) VALUES (1, 1, 500, TRUE), (2, 2, 400, FALSE), (3, 1, 300, FALSE);", "output": "SELECT 'OTA' as source, SUM(booking_amt) as total_amt FROM Bookings WHERE ota_source = TRUE UNION SELECT 'Non-OTA' as source, SUM(booking_amt) as total_amt FROM Bookings WHERE ota_source = FALSE;"}
{"input": " \uac01 \uc778\uc885 \uadf8\ub8f9\uc5d0 \ub300\ud55c \uac00\uc11d\ubc29 \uccad\ubb38\ud68c \ud69f\uc218\uc640 \uac00\uc11d\ubc29 \ud5c8\uac00 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE parole_hearings (id INT, race VARCHAR(50), parole_granted BOOLEAN, hearing_date DATE);", "output": "SELECT race, COUNT(*) number_of_hearings, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY NULL) AS percentage_granted FROM parole_hearings WHERE parole_granted = TRUE GROUP BY race;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uae30\uc220\ubcc4 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubd80\ubb38\uc5d0 \uace0\uc6a9\ub41c \ucd1d \uadfc\ub85c\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE renewable_workforce_history (year INT, technology VARCHAR(50), workers NUMERIC); INSERT INTO renewable_workforce_history (year, technology, workers) VALUES (2019, 'Solar', 10000), (2019, 'Wind', 8000), (2019, 'Hydro', 6000), (2020, 'Solar', 12000), (2020, 'Wind', 9000), (2020, 'Hydro', 7000), (2021, 'Solar', 14000), (2021, 'Wind', 10000), (2021, 'Hydro', 8000);", "output": "SELECT technology, SUM(workers) as total_workers FROM renewable_workforce_history WHERE year BETWEEN 2019 AND 2021 GROUP BY technology;"}
{"input": " \uc124\uce58\uc6a9\ub7c9\uc774 40,000 \ubbf8\ub9cc\uc778 \ud504\ub85c\uc81d\ud2b8\ub97c \uc81c\uc678\ud558\uace0 \uac01 \uc704\uce58\uc758 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc124\uce58\uc6a9\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE renewable_energy ( id INT PRIMARY KEY, location VARCHAR(255), project_name VARCHAR(255), installed_capacity INT ); INSERT INTO renewable_energy (id, location, project_name, installed_capacity) VALUES (1, 'Germany', 'Solarpark Finow Tower', 45000); INSERT INTO renewable_energy (id, location, project_name, installed_capacity) VALUES (2, 'France', 'La Plaine Wind Farm', 60000);", "output": "SELECT location, SUM(installed_capacity) FROM renewable_energy WHERE installed_capacity >= 40000 GROUP BY location;"}
{"input": " \uc560\ub9ac\uc870\ub098\uc640 \uc870\uc9c0\uc544\uc5d0\uc11c\ub294 \ub300\uccb4 \uc0ac\ubc95 \uc870\uce58\ub97c \ud1b5\ud574 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud615\uc0ac \uc0ac\uac74\uc774 \ud574\uacb0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE alternative_justice_az (case_id INT, state VARCHAR(20)); INSERT INTO alternative_justice_az VALUES (1, 'Arizona'), (2, 'Arizona'), (3, 'Arizona'); CREATE TABLE alternative_justice_ga (case_id INT, state VARCHAR(20)); INSERT INTO alternative_justice_ga VALUES (4, 'Georgia'), (5, 'Georgia'), (6, 'Georgia');", "output": "SELECT COUNT(*) FROM alternative_justice_az UNION ALL SELECT COUNT(*) FROM alternative_justice_ga;"}
{"input": " \uac01 \ubc1c\uad74\ud604\uc7a5\uc5d0\uc11c \ubc1c\uacac\ub41c \uc720\ubb3c\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artifacts_count (site_id INT, artifact_count INT); INSERT INTO artifacts_count (site_id, artifact_count) VALUES (1, 20), (2, 15), (3, 12);", "output": "SELECT site_id, COUNT(*) OVER (PARTITION BY site_id) AS artifact_count FROM artifacts;"}
{"input": " 2025\ub144 \ub0a8\uadf9 \ub300\ub959\uc5d0\uc11c \uc544\uc2dc\uc544\ub85c \uc218\ucd9c\ub418\ub294 \ud574\uc0b0\ubb3c\uc758 \ube44\uc728\uc744 \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE seafood_export (product VARCHAR(255), quantity INT, year INT, country VARCHAR(255), PRIMARY KEY (product, year, country)); INSERT INTO seafood_export (product, quantity, year, country) VALUES ('Shrimp', 1500, 2025, 'Antarctica'), ('Tuna', 2000, 2025, 'Antarctica'), ('Salmon', 1000, 2025, 'Antarctica');", "output": "SELECT (SUM(quantity) * 100.0 / (SELECT SUM(quantity) FROM seafood_export WHERE year = 2025)) FROM seafood_export WHERE year = 2025 AND country = 'Antarctica' AND region = 'Asia';"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2fc \uba54\ub274 \ud56d\ubaa9\uc758 \uc77c\uc77c \ud310\ub9e4\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE restaurant (id INT, name VARCHAR(255)); INSERT INTO restaurant (id, name) VALUES (1, 'Bistro'), (2, 'Grill'), (3, 'Cafe'); CREATE TABLE menu (id INT, item VARCHAR(255), price DECIMAL(5,2), daily_sales INT, restaurant_id INT);", "output": "SELECT r.name, m.item, m.daily_sales FROM menu m JOIN (SELECT restaurant_id, MAX(price) as max_price FROM menu GROUP BY restaurant_id) mm ON m.restaurant_id = mm.restaurant_id AND m.price = mm.max_price JOIN restaurant r ON m.restaurant_id = r.id;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uc81c\uacf5\ub418\ub294 \ucd5c\ub300 \uc219\ubc15 \uc2dc\uc124 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodations (ID INT PRIMARY KEY, Country VARCHAR(50), AccommodationType VARCHAR(50), Quantity INT); INSERT INTO Accommodations (ID, Country, AccommodationType, Quantity) VALUES (1, 'USA', 'Sign Language Interpretation', 300), (2, 'Canada', 'Wheelchair Ramp', 250), (3, 'Mexico', 'Assistive Listening Devices', 150);", "output": "SELECT Country, MAX(Quantity) as Maximum FROM Accommodations GROUP BY Country;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ud65c\uc131 \ud50c\ub808\uc774\uc5b4 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uac8c\uc784\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE GameSessions (PlayerID INT, GameID INT, SessionDuration FLOAT, SessionDate DATE); INSERT INTO GameSessions (PlayerID, GameID, SessionDuration, SessionDate) VALUES (1, 1001, 50.5, '2022-02-01'), (2, 1002, 130.3, '2022-03-10');", "output": "SELECT GameID, COUNT(PlayerID) as PlayerCount, RANK() OVER (ORDER BY COUNT(PlayerID) DESC) as Rank FROM GameSessions WHERE SessionDate BETWEEN DATEADD(month, -1, CURRENT_DATE) AND CURRENT_DATE GROUP BY GameID HAVING Rank <= 2;"}
{"input": " \ub274\uc695\uc2dc\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sustainable_Projects (project_id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO Sustainable_Projects VALUES (1, 'Green Tower', 'New York', 15000000);", "output": "SELECT SUM(cost) FROM Sustainable_Projects WHERE location = 'New York';"}
{"input": " \ucf00\ub0d0\uc640 \uc6b0\uac04\ub2e4\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uacc4\ud68d\uc5d0 \ucc38\uc5ec\ud55c \ub18d\ubd80\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name TEXT, country TEXT); INSERT INTO farmers (id, name, country) VALUES (1, 'John', 'Kenya'), (2, 'Jane', 'Uganda'); CREATE TABLE initiatives (id INT, name TEXT, location TEXT); INSERT INTO initiatives (id, name, location) VALUES (1, 'Training', 'Kenya'), (2, 'Workshop', 'Uganda'); CREATE TABLE participation (farmer_id INT, initiative_id INT); INSERT INTO participation (farmer_id, initiative_id) VALUES (1, 1), (2, 2);", "output": "SELECT COUNT(DISTINCT f.id) FROM farmers f INNER JOIN participation p ON f.id = p.farmer_id INNER JOIN initiatives i ON p.initiative_id = i.id WHERE f.country IN ('Kenya', 'Uganda');"}
{"input": " 2020-01-01 \uc774\ud6c4\uc5d0 \uac00\uc785\ud558\uace0 \ud14d\uc0ac\uc2a4 \ub610\ub294 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uac70\uc8fc\ud558\ub294 \ud68c\uc6d0\uc758 \ud68c\uc6d0 \uc0c1\ud0dc\uc640 \uac00\uc785 \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE members (id INT, name VARCHAR(50), membership_status VARCHAR(20), join_date DATE, state VARCHAR(20));", "output": "SELECT membership_status, join_date FROM members WHERE state IN ('Texas', 'California') AND join_date > '2020-01-01' ORDER BY join_date;"}
{"input": " \ubbf8\uad6d \ub0b4 \uc911\uc18c\uae30\uc5c5\uc5d0 \uccb4\uacb0\ub41c \uad70\uc0ac \uacc4\uc57d\uc758 \ucd1d \uac00\uce58\ub294 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_contracts (contract_id INT, company_size TEXT, country TEXT, contract_value FLOAT); INSERT INTO military_contracts (contract_id, company_size, country, contract_value) VALUES (1, 'Small Business', 'United States', 5000000);", "output": "SELECT SUM(contract_value) FROM military_contracts WHERE country = 'United States' AND company_size = 'Small Business' ORDER BY contract_value DESC;"}
{"input": " \uc720\uae30\ub18d \uba74\uc73c\ub85c \ub9cc\ub4e0 \uc758\ub958\uc758 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE materials (id INT, garment_type VARCHAR(255), material VARCHAR(255), price DECIMAL(10,2)); INSERT INTO materials (id, garment_type, material, price) VALUES (1, 'T-Shirt', 'Organic Cotton', 25.99), (2, 'Pants', 'Organic Cotton', 49.99), (3, 'Jacket', 'Organic Cotton', 79.99);", "output": "SELECT material, AVG(price) as avg_price, country FROM materials m JOIN (SELECT garment_type, material, country FROM garments g JOIN country_data cd ON g.manufacturer_id = cd.id) sub ON m.garment_type = sub.garment_type AND m.material = sub.material GROUP BY material, country;"}
{"input": " 'OceanExplorer' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uac00\uc7a5 \uae4a\uc740 \ud574\uc591 \uc0dd\ubb3c \uc5f0\uad6c \ub370\uc774\ud130 \uc0ac\uc774\ud2b8 \uc0c1\uc704 3\uac1c\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE SCHEMA OceanExplorer; CREATE TABLE MarineLifeResearch (site_id INT, depth FLOAT); INSERT INTO MarineLifeResearch (site_id, depth) VALUES (1, 5000.1), (2, 6000.2), (3, 7000.3), (4, 4000.4), (5, 3000.5);", "output": "SELECT site_id, depth FROM OceanExplorer.MarineLifeResearch ORDER BY depth DESC LIMIT 3;"}
{"input": " \uac01 \uc9c0\uc5ed\uacbd\ucc30\uc11c\uc5d0\uc11c \ubcf4\uace0\ud55c \uae34\uae09 \uc0ac\uac74\uc758 \ucd1d \uac74\uc218\ub97c \uc0ac\uac74 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_policing_centers (id INT, center_name TEXT); INSERT INTO community_policing_centers (id, center_name) VALUES (1, 'Center A'), (2, 'Center B'), (3, 'Center C'); CREATE TABLE emergency_incidents (id INT, center_id INT, incident_type TEXT, incident_count INT); INSERT INTO emergency_incidents (id, center_id, incident_type, incident_count) VALUES (1, 1, 'Fire', 30), (2, 1, 'Medical', 40), (3, 2, 'Fire', 50), (4, 2, 'Medical', 60), (5, 3, 'Fire', 20), (6, 3, 'Medical', 15);", "output": "SELECT center_id, incident_type, SUM(incident_count) AS total_incidents FROM emergency_incidents GROUP BY center_id, incident_type;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc5d0 \ub4f1\ub85d\ub41c \uc778\ub3c4\uc591 \uc120\ubc15\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vessels (name VARCHAR(255), country VARCHAR(255), ocean VARCHAR(255)); INSERT INTO vessels (name, country, ocean) VALUES ('Vessel 1', 'Country 1', 'Indian Ocean'), ('Vessel 2', 'Country 2', 'Indian Ocean');   CREATE TABLE countries (name VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (name, continent) VALUES ('Country 1', 'Africa'), ('Country 2', 'Asia');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM vessels WHERE ocean = 'Indian Ocean')) as percentage FROM vessels INNER JOIN countries ON vessels.country = countries.name WHERE countries.continent = 'Africa';"}
{"input": " \ub274\uc695\uc5d0 \uc788\ub294 \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uac00\uc7a5 \ub0ae\uc740 \uc2dd\ud488 \uc548\uc804 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RestaurantInspections (restaurant_id INT, inspection_date DATE, score INT, location VARCHAR(50)); INSERT INTO RestaurantInspections (restaurant_id, inspection_date, score, location) VALUES (1, '2022-01-01', 90, 'New York'), (1, '2022-02-01', 95, 'New York'), (2, '2022-01-01', 85, 'New York'), (2, '2022-02-01', 88, 'New York');", "output": "SELECT restaurant_id, MIN(score) AS lowest_score FROM RestaurantInspections WHERE location = 'New York' GROUP BY restaurant_id;"}
{"input": " 2018\ub144 \uad50\ud1b5\ubd80\ubb38 CO2 \ubc30\ucd9c\ub7c9", "context": "CREATE TABLE co2_emissions (id INT, sector VARCHAR(255), year INT, co2_emissions FLOAT);", "output": "SELECT sector, SUM(co2_emissions) FROM co2_emissions WHERE sector = 'Transportation' AND year = 2018 GROUP BY sector;"}
{"input": " 2022\ub144\uc5d0 \uad6d\uc81c \ucc38\uac00\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Events (EventID INT, Name VARCHAR(50), Country VARCHAR(50), StartDate DATE, EndDate DATE, Participants INT); INSERT INTO Events (EventID, Name, Country, StartDate, EndDate, Participants) VALUES (1, 'Evo', 'USA', '2022-08-06', '2022-08-07', 1000); INSERT INTO Events (EventID, Name, Country, StartDate, EndDate, Participants) VALUES (2, 'DreamHack', 'Sweden', '2022-11-25', '2022-11-27', 750);", "output": "SELECT Name, Participants FROM Events WHERE YEAR(StartDate) = 2022 GROUP BY Name ORDER BY Participants DESC LIMIT 1;"}
{"input": " \ube0c\ub79c\ub4dc \"HerbalFusion\"\uc758 \"Neem Soap\" \uc81c\ud488\uc5d0 \ub300\ud55c \uc120\ud638\ub3c4 \ub4f1\uae09 8\uacfc \uc120\ud638\ub3c4 \uba54\ubaa8 \"\uac15\ud558\uc9c0\ub9cc \uae30\ubd84 \uc88b\uc740 \ud5a5\uae30\"\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \uc18c\ube44\uc790 \uc120\ud638\ub3c4 \uae30\ub85d\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE consumer_preferences (id INT PRIMARY KEY, product_id INT, preference_rating INT, preference_note TEXT); CREATE TABLE products (id INT PRIMARY KEY, name TEXT, brand TEXT); INSERT INTO products (id, name, brand) VALUES (1, 'Neem Soap', 'HerbalFusion');", "output": "INSERT INTO consumer_preferences (id, product_id, preference_rating, preference_note) VALUES (1, (SELECT id FROM products WHERE name = 'Neem Soap' AND brand = 'HerbalFusion'), 8, 'Strong but pleasant scent');"}
{"input": " \ub9e4\uc6d4 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ud574\ube59 \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sea_ice_extent (month INT, year INT, extent FLOAT);", "output": "SELECT month, MIN(extent), MAX(extent) FROM sea_ice_extent GROUP BY month;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\uc740 \uc5ec\uc131 \ud658\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, age INT, gender TEXT, state TEXT, therapy TEXT); INSERT INTO patients (patient_id, age, gender, state, therapy) VALUES (1, 30, 'Female', 'California', 'Yes'); INSERT INTO patients (patient_id, age, gender, state, therapy) VALUES (2, 45, 'Male', 'Texas', 'No'); INSERT INTO patients (patient_id, age, gender, state, therapy) VALUES (3, 50, 'Non-binary', 'California', 'Yes');", "output": "SELECT (COUNT(*) FILTER (WHERE gender = 'Female' AND therapy = 'Yes')) * 100.0 / (SELECT COUNT(*) FROM patients WHERE state = 'California') AS percentage FROM patients WHERE state = 'California';"}
{"input": " \uc8fc\ubb38 \ucc98\ub9ac \uc13c\ud130\uac00 5\uac1c \uc774\uc0c1\uc778 \uad6d\uac00\uc5d0 \uc704\uce58\ud55c \ucc3d\uace0\ub97c \ubaa8\ub450 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (WarehouseID INT, WarehouseName TEXT, Country TEXT); INSERT INTO Warehouse (WarehouseID, WarehouseName, Country) VALUES (1, 'Central Warehouse', 'USA'), (2, 'East Coast Warehouse', 'USA'), (3, 'West Coast Warehouse', 'USA'), (4, 'Toronto Warehouse', 'Canada'); CREATE TABLE FulfillmentCenter (FCID INT, FCName TEXT, Country TEXT); INSERT INTO FulfillmentCenter (FCID, FCName, Country) VALUES (1, 'Chicago FC', 'USA'), (2, 'New York FC', 'USA'), (3, 'Los Angeles FC', 'USA'), (4, 'Toronto FC', 'Canada');", "output": "SELECT Country FROM Warehouse GROUP BY Country HAVING COUNT(DISTINCT WarehouseID) <= (SELECT COUNT(DISTINCT FCID) FROM FulfillmentCenter GROUP BY Country HAVING COUNT(DISTINCT FCID) > 5);"}
{"input": " \uc9c0\ub09c \ub2ec \uc774\uc0c1 \ud604\uc0c1\uc744 \ubcf4\uace0\ud55c '\ub3d9\ub0a8\uc544\uc2dc\uc544' IoT \uc7a5\uce58\uc758 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE iot_data (device_id INT, anomaly BOOLEAN, region VARCHAR(20)); INSERT INTO iot_data (device_id, anomaly, region) VALUES (123, TRUE, 'Southeast Asia');", "output": "SELECT COUNT(*) FROM iot_data WHERE region = 'Southeast Asia' AND anomaly = TRUE AND time >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \ub3d9\uc720\ub7fd\uc5d0\uc11c \uc644\ub8cc\ub41c \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE rural_infrastructure (id INT, project_status TEXT, completion_date DATE, country TEXT); INSERT INTO rural_infrastructure (id, project_status, completion_date, country) VALUES (1, 'completed', '2018-03-15', 'Poland'), (2, 'in_progress', '2019-12-31', 'Romania'), (3, 'completed', '2020-08-01', 'Hungary');", "output": "SELECT YEAR(completion_date) AS \"Completion Year\", COUNT(*) FROM rural_infrastructure WHERE project_status = 'completed' AND country IN ('Eastern Europe') AND completion_date >= DATE_SUB(NOW(), INTERVAL 5 YEAR) GROUP BY YEAR(completion_date);"}
{"input": " 2020\ub144\uc5d0 \ub3c5\uc77c\uc5d0\uc11c \uac00\uc7a5 \uc790\uc8fc \uce58\ub8cc\ub41c \uc815\uc2e0\uac74\uac15 \uc9c8\ud658\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, country VARCHAR(255)); CREATE TABLE treatments (id INT, patient_id INT, treatment_date DATE); CREATE TABLE conditions (id INT, patient_id INT, condition VARCHAR(255)); INSERT INTO patients (id, country) VALUES (1, 'Germany'), (2, 'Germany'), (3, 'Germany'), (4, 'Germany'); INSERT INTO treatments (id, patient_id, treatment_date) VALUES (1, 1, '2020-01-01'), (2, 1, '2020-02-15'), (3, 2, '2020-06-30'), (4, 3, '2020-12-31'); INSERT INTO conditions (id, patient_id, condition) VALUES (1, 1, 'depression'), (2, 1, 'anxiety'), (3, 2, 'anxiety'), (4, 3, 'bipolar');", "output": "SELECT conditions.condition, COUNT(conditions.condition) AS count FROM conditions JOIN patients ON conditions.patient_id = patients.id JOIN treatments ON patients.id = treatments.patient_id WHERE patients.country = 'Germany' AND treatments.treatment_date >= '2020-01-01' AND treatments.treatment_date < '2021-01-01' GROUP BY conditions.condition ORDER BY count DESC LIMIT 1;"}
{"input": " \ubd81\uadf9 \ud230\ub4dc\ub77c\uc5d0 \uc11c\uc2dd\ud558\ub294 \uc885\uc758 \uc774\ub984\uacfc \ubaa9\uaca9 \ud69f\uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE species_observations (id INT, species_name VARCHAR, region VARCHAR, sighting_count INT);", "output": "SELECT species_name, SUM(sighting_count) as total_sightings FROM species_observations WHERE region = 'Arctic tundra' GROUP BY species_name;"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 100\uba85 \ubbf8\ub9cc\uc778 \uc870\uc9c1\uc744 \uc81c\uc678\ud558\uace0 \ucd1d \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE countries (country_id INT, country_name TEXT);CREATE TABLE organizations (org_id INT, org_name TEXT, country_id INT);CREATE TABLE donations (donation_id INT, org_id INT, donation_amount INT, donation_date DATE);CREATE TABLE volunteers (vol_id INT, org_id INT, vol_country TEXT);", "output": "SELECT c.country_name, SUM(donation_amount) AS total_donations FROM countries c JOIN organizations o ON c.country_id = o.country_id JOIN donations don ON o.org_id = don.org_id JOIN volunteers vol ON o.org_id = vol.org_id GROUP BY c.country_name HAVING COUNT(vol.vol_id) >= 100 ORDER BY total_donations DESC LIMIT 5;"}
{"input": " \ubc30\uc1a1 ID\uac00 12345\uc778 \ucc3d\uace0\ub97c \uacf5\uc720\ud558\ub294 \ubaa8\ub4e0 \ubc30\uc1a1\uc758 \uc774\ub984\uacfc \ucd1d \ud654\ubb3c \uc911\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Warehouses (WarehouseID int, WarehouseName varchar(50)); CREATE TABLE Shipments (ShipmentID int, WarehouseID int, CargoWeight int); INSERT INTO Warehouses VALUES (1, 'WarehouseA'), (2, 'WarehouseB'), (3, 'WarehouseC'); INSERT INTO Shipments VALUES (12345, 1, 5000), (67890, 1, 7000), (11121, 2, 6000), (22232, 3, 8000)", "output": "SELECT Warehouses.WarehouseName, SUM(Shipments.CargoWeight) as TotalCargoWeight FROM Warehouses INNER JOIN Shipments ON Warehouses.WarehouseID = Shipments.WarehouseID WHERE Shipments.ShipmentID <> 12345 AND Warehouses.WarehouseID = (SELECT WarehouseID FROM Shipments WHERE ShipmentID = 12345) GROUP BY Warehouses.WarehouseName;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 #sustainability\uc5d0 \ub300\ud574 \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790\uc758 \uad11\uace0 \ud074\ub9ad \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (id INT, user_id INT, content TEXT, timestamp TIMESTAMP); INSERT INTO posts (id, user_id, content, timestamp) VALUES (1, 1, 'Reducing waste is so important #sustainability', '2021-06-28 14:00:00'); INSERT INTO posts (id, user_id, content, timestamp) VALUES (2, 2, 'Just signed up for a #sustainability workshop!', '2021-06-29 09:30:00'); CREATE TABLE ads (id INT, post_id INT, clicks INT); INSERT INTO ads (id, post_id, clicks) VALUES (1, 1, 3); INSERT INTO ads (id, post_id, clicks) VALUES (2, 2, 5); CREATE TABLE post_topics (post_id INT, topic_id INT); INSERT INTO post_topics (post_id, topic_id) VALUES (1, 1); INSERT INTO post_topics (post_id, topic_id) VALUES (2, 1); CREATE TABLE topics (id INT, name VARCHAR(50)); INSERT INTO topics (id, name) VALUES (1, '#sustainability');", "output": "SELECT SUM(ads.clicks) AS total_clicks FROM ads INNER JOIN post_topics ON ads.post_id = post_topics.post_id INNER JOIN posts ON post_topics.post_id = posts.id INNER JOIN topics ON post_topics.topic_id = topics.id WHERE topics.name = '#sustainability' AND posts.timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 WEEK);"}
{"input": " \uce90\ub098\ub2e4 \uad11\uc0b0 \uc6b4\uc601\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MiningOperations (id INT, location TEXT, impact_score INT);INSERT INTO MiningOperations (id, location, impact_score) VALUES (1, 'Canada', 60), (2, 'USA', 50), (3, 'Mexico', 70), (4, 'Canada', 65);", "output": "SELECT AVG(impact_score) FROM MiningOperations WHERE location = 'Canada';"}
{"input": " 30\ud68c \uc774\uc0c1 \uccb4\ud06c\uc778\ud55c \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \ub098\uc5f4", "context": "CREATE TABLE user_check_ins (user_id INT, check_in_id INT);", "output": "SELECT user_id FROM user_check_ins GROUP BY user_id HAVING COUNT(check_in_id) > 30;"}
{"input": "\uc720\ub7fd\uc758 \uc5b4\ub5a4 \ud68c\uc0ac\uac00 \uc7ac\ud65c\uc6a9 \uc7ac\ub8cc\ub97c \uc0ac\uc6a9\ud558\uace0 \uacf5\uc815\ud55c \ub178\ub3d9 \uad00\ud589\uc744 \uac16\uace0 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Companies (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO Companies (id, name, region) VALUES (1, 'CompanyA', 'Asia-Pacific'), (2, 'CompanyB', 'Europe'), (3, 'CompanyC', 'Asia-Pacific'); CREATE TABLE Materials (id INT, company_id INT, material VARCHAR(255), quantity INT, recycled BOOLEAN); INSERT INTO Materials (id, company_id, material, quantity, recycled) VALUES (1, 1, 'Organic cotton', 500, FALSE), (2, 1, 'Recycled polyester', 300, TRUE), (3, 2, 'Organic linen', 400, FALSE), (4, 3, 'Organic cotton', 600, FALSE), (5, 3, 'Tencel', 700, FALSE); CREATE TABLE Labor (id INT, company_id INT, fair BOOLEAN); INSERT INTO Labor (id, company_id, fair) VALUES (1, 1, FALSE), (2, 2, TRUE), (3, 3, TRUE);", "output": "SELECT Companies.name FROM Companies JOIN Materials ON Companies.id = Materials.company_id JOIN Labor ON Companies.id = Labor.company_id WHERE region = 'Europe' AND recycled = TRUE AND fair = TRUE;"}
{"input": " \ud658\uacbd \uc601\ud5a5 \uc810\uc218\uac00 \ub0ae\uace0 \uc9c1\uc6d0 \uc218\uac00 \ub9ce\uc740 \uad11\uc0b0 \uc791\uc5c5\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE mining_operations (id INT, name VARCHAR(50), num_employees INT, environmental_impact_score INT);", "output": "SELECT name FROM mining_operations WHERE num_employees > (SELECT AVG(num_employees) FROM mining_operations) AND environmental_impact_score < (SELECT AVG(environmental_impact_score) FROM mining_operations);"}
{"input": " \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uc608\uc220 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\ub2f9 \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE arts_education_programs (id INT, program_name VARCHAR(255), region VARCHAR(255), funding FLOAT);", "output": "SELECT region, AVG(funding) as avg_funding FROM arts_education_programs WHERE region = 'Pacific' GROUP BY region;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ud56d\uad6c\ub97c \ubc29\ubb38\ud55c \uc120\ubc15\uc758 \uc120\ubc15\ub2f9 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (VesselID INT, Name VARCHAR(255), Type VARCHAR(255), Flag VARCHAR(255)); CREATE TABLE PortVisits (VisitID INT, VesselID INT, Port VARCHAR(255), VisitDate DATE); CREATE TABLE Cargo (CargoID INT, VesselID INT, Weight INT); INSERT INTO Vessels (VesselID, Name, Type, Flag) VALUES (1, 'Sea Serpent', 'Cargo', 'Panama'); INSERT INTO PortVisits (VisitID, VesselID, Port, VisitDate) VALUES (1, 1, 'Cape Town', '2022-01-02'); INSERT INTO Cargo (CargoID, VesselID, Weight) VALUES (1, 1, 5000), (2, 1, 3000);", "output": "SELECT AVG(Cargo.Weight) FROM Vessels INNER JOIN PortVisits ON Vessels.VesselID = PortVisits.VesselID INNER JOIN Cargo ON Vessels.VesselID = Cargo.VesselID WHERE PortVisits.Port LIKE 'Africa%' GROUP BY Vessels.VesselID;"}
{"input": " 2019\ub144 \uc544\ud2f0\uc2a4\ud2b8\ubcc4 \ucd1d \uc2a4\ud2b8\ub9ac\ubc0d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Streams (artist_name VARCHAR(50), year INT, streams INT); INSERT INTO Streams (artist_name, year, streams) VALUES ('Taylor Swift', 2019, 10000000), ('Drake', 2019, 12000000), ('BTS', 2019, 15000000), ('Billie Eilish', 2019, 8000000);", "output": "SELECT artist_name, SUM(streams) FROM Streams WHERE year = 2019 GROUP BY artist_name;"}
{"input": " \uc0dd\uc0b0\ub41c \ud654\ud559\ubb3c\uc9c8 1\ub9ac\ud130\ub2f9 \ubb3c \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc138 \uac00\uc9c0 \ud654\ud559\ubb3c\uc9c8\uacfc \ud574\ub2f9 \uc21c\uc704\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_water_usage (compound_name VARCHAR(50), water_usage FLOAT, liter_of_chemical FLOAT); INSERT INTO chemical_water_usage (compound_name, water_usage, liter_of_chemical) VALUES ('Compound A', 15, 10), ('Compound B', 18, 10), ('Compound C', 12, 10), ('Compound D', 14, 10), ('Compound E', 19, 10), ('Compound F', 16, 10), ('Compound G', 13, 10), ('Compound H', 20, 10), ('Compound I', 17, 10), ('Compound J', 11, 10);", "output": "SELECT compound_name, water_usage, RANK() OVER (ORDER BY water_usage/liter_of_chemical DESC) as water_usage_rank FROM chemical_water_usage WHERE water_usage_rank <= 3;"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544' \uc8fc\uc5d0\ub294 \uacf5\ub9bd\ud559\uad50\uac00 \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE school_data (state VARCHAR(255), school_type VARCHAR(255), count INT); INSERT INTO school_data (state, school_type, count) VALUES ('California', 'Public', 10000), ('California', 'Private', 2000);", "output": "SELECT SUM(count) FROM school_data WHERE state = 'California' AND school_type = 'Public';"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uc0ac\ud68c\uc801\uc73c\ub85c \ucc45\uc784 \uc788\ub294 \ub300\ucd9c\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d\uc561 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uba85\uc758 \uace0\uac1d\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(50)); CREATE TABLE transactions (id INT PRIMARY KEY, customer_id INT, loan_id INT, transaction_date DATE, amount DECIMAL(10,2), is_socially_responsible BOOLEAN); CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255)); CREATE VIEW customer_transaction_views AS SELECT customers.id, customers.name, transactions.id AS transaction_id, transactions.amount, transactions.is_socially_responsible, regions.country FROM customers INNER JOIN transactions ON customers.id = transactions.customer_id INNER JOIN regions ON TRUE; CREATE VIEW total_customer_spending AS SELECT customer_transaction_views.name, SUM(customer_transaction_views.amount) AS total_amount FROM customer_transaction_views WHERE customer_transaction_views.is_socially_responsible = TRUE GROUP BY customer_transaction_views.name;", "output": "SELECT total_customer_spending.name, total_customer_spending.total_amount FROM total_customer_spending WHERE total_customer_spending.total_amount IN (SELECT total_amount FROM (SELECT total_customer_spending.total_amount FROM total_customer_spending WHERE total_customer_spending.country = 'Europe' AND total_customer_spending.is_socially_responsible = TRUE ORDER BY total_amount DESC LIMIT 5) AS subquery);"}
{"input": " \uc5b4\ub5a4 \ubbf8\ub514\uc5b4 \ub9ac\ud130\ub7ec\uc2dc \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uace0 \uac00\uc7a5 \ub0ae\uc73c\uba70, \uadf8 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (id INT, name VARCHAR(50), score INT); INSERT INTO programs (id, name, score) VALUES (1, 'Media Matters', 85), (2, 'News Literacy Project', 88), (3, 'Common Sense Media', 82);", "output": "SELECT name, score as highest_score FROM programs WHERE score = (SELECT MAX(score) FROM programs) UNION SELECT name, score as lowest_score FROM programs WHERE score = (SELECT MIN(score) FROM programs);"}
{"input": " \uc77c\ubcf8\uc73c\ub85c \ubc30\uc1a1\ub418\ub294 \ubaa8\ub4e0 \ubc30\uc1a1\uc758 \ucd1d \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (id INT, delivery_time INT, destination VARCHAR(20)); INSERT INTO Shipments (id, delivery_time, destination) VALUES (1, 5, 'Japan'), (2, 7, 'USA'), (3, 3, 'Japan');", "output": "SELECT SUM(delivery_time) FROM Shipments WHERE destination = 'Japan'"}
{"input": " \uc124\uba85 \uac00\ub2a5\ud55c AI \ub370\uc774\ud130 \uc138\ud2b8\uc758 \uac01 AI \uc54c\uace0\ub9ac\uc998\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc124\uba85 \uac00\ub2a5\uc131 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE explainable_ai (id INT, algorithm VARCHAR, explainability FLOAT);", "output": "SELECT algorithm, MAX(explainability) OVER (PARTITION BY algorithm) FROM explainable_ai;"}
{"input": " \ucf58\uc11c\ud2b8\ub97c \uac1c\ucd5c\ud55c \uc801\uc774 \uc5c6\ub294 \uc544\ud2f0\uc2a4\ud2b8\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE artists (artist_id INT, name VARCHAR(100), genre VARCHAR(50)); CREATE TABLE concert_artists (concert_id INT, artist_id INT); INSERT INTO artists (artist_id, name, genre) VALUES (101, 'Taylor Swift', 'Pop'), (102, 'Billie Eilish', 'Pop'), (103, 'The Weeknd', 'R&B'); INSERT INTO concert_artists (concert_id, artist_id) VALUES (1, 101), (2, 102), (3, 101);", "output": "DELETE FROM artists WHERE artist_id NOT IN (SELECT artist_id FROM concert_artists);"}
{"input": " \uc601\uad6d\uc758 \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uc784\ud329\ud2b8 \ud22c\uc790 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uae30\ubd80\ub97c \ubc1b\uc740 \uace0\uc720\ud55c \ube44\uc601\ub9ac \ub2e8\uccb4\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE donations (donation_id INT, donor_id INT, donation_amount FLOAT, donation_category TEXT); INSERT INTO donations (donation_id, donor_id, donation_amount, donation_category) VALUES (1, 1, 1000.00, 'Impact Investing'), (2, 2, 500.00, 'Education');", "output": "SELECT COUNT(DISTINCT donation_recipient_id) FROM (SELECT donation_recipient_id FROM donations WHERE donation_category = 'Impact Investing' AND EXISTS (SELECT 1 FROM donors WHERE donors.donor_id = donations.donor_id AND donors.donor_country = 'United Kingdom')) AS donation_subset;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uae30\ubd80\ud55c \ubaa8\ub4e0 \uae30\ubd80\uc790\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE donation_dates (id INT, donation_date DATE);", "output": "SELECT d.name  FROM donors d JOIN donations don ON d.id = don.donor_id JOIN donation_dates dd ON don.donation_date = dd.id WHERE dd.donation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": "\ud55c \ub2ec \ud3c9\uade0 \uc804\uae30\ucc28 \ud310\ub9e4 \ub300\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sales_data_monthly (manufacturer VARCHAR(10), vehicle_type VARCHAR(10), quantity INT, sale_month INT, sale_year INT);", "output": "SELECT AVG(quantity) FROM sales_data_monthly WHERE vehicle_type = 'Electric' GROUP BY sale_month, sale_year;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ucd1d \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \uc218\uc785\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shariah_compliant_finance_incomes_africa (id INT, country VARCHAR(255), income DECIMAL(10,2)); INSERT INTO shariah_compliant_finance_incomes_africa (id, country, income) VALUES (1, 'South Africa', 25000.00), (2, 'Egypt', 35000.00), (3, 'Nigeria', 28000.00);", "output": "SELECT SUM(income) FROM shariah_compliant_finance_incomes_africa WHERE country IN ('South Africa', 'Egypt', 'Nigeria');"}
{"input": " \uc644\ub8cc\ub41c \uc608\uc57d\uacfc \ucde8\uc18c\ub41c \uc608\uc57d\uc744 \ubaa8\ub450 \uace0\ub824\ud560 \ub54c 2022\ub144 \ud638\uc8fc \uc0ac\uc6a9\uc790\uc758 '\uce5c\ud658\uacbd' \uce74\ud14c\uace0\ub9ac \ud638\ud154 \uc608\uc57d\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE hotels(hotel_id INT, hotel_name TEXT, category TEXT); INSERT INTO hotels(hotel_id, hotel_name, category) VALUES (1, 'Green Haven Hotel', 'Eco-friendly'); CREATE TABLE bookings(booking_id INT, hotel_id INT, booking_status TEXT, booking_revenue DECIMAL, booking_date DATE); CREATE TABLE users(user_id INT, user_country TEXT);", "output": "SELECT SUM(booking_revenue) FROM hotels INNER JOIN bookings ON hotels.hotel_id = bookings.hotel_id INNER JOIN users ON bookings.user_id = users.user_id WHERE hotels.category = 'Eco-friendly' AND users.user_country = 'Australia' AND YEAR(booking_date) = 2022 AND (booking_status = 'completed' OR booking_status = 'cancelled');"}
{"input": " \ud55c \uc2dc\uc98c\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc5b4\uc2dc\uc2a4\ud2b8\ub97c \uae30\ub85d\ud55c \uc544\uc774\uc2a4\ud558\ud0a4 \uc120\uc218\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (player_id INTEGER, name TEXT, assists INTEGER); INSERT INTO Players (player_id, name, assists) VALUES (1, 'Player 1', 30), (2, 'Player 2', 40), (3, 'Player 3', 50);", "output": "SELECT name FROM Players WHERE assists = (SELECT MAX(assists) FROM Players);"}
{"input": " \uac01 \uad6c\ud68d\uc758 \ud0c4\uc18c \uaca9\ub9ac\ub97c \ud3ec\ud568\ud558\uc5ec \uac01 \uc0b0\ub9bc \uad6c\ud68d\uc5d0 \uc5b4\ub5a4 \ub098\ubb34 \uc885\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ForestPlots (PlotID int, PlotName varchar(50)); INSERT INTO ForestPlots VALUES (1, 'Plot1'), (2, 'Plot2'); CREATE TABLE Trees (TreeID int, TreeSpecies varchar(50), PlotID int); INSERT INTO Trees VALUES (1, 'Oak', 1), (2, 'Maple', 1), (3, 'Pine', 2); CREATE TABLE CarbonSequestration (PlotID int, Sequestration float); INSERT INTO CarbonSequestration VALUES (1, 500), (2, 600);", "output": "SELECT ForestPlots.PlotName, Trees.TreeSpecies, CarbonSequestration.Sequestration FROM ForestPlots INNER JOIN Trees ON ForestPlots.PlotID = Trees.PlotID INNER JOIN CarbonSequestration ON ForestPlots.PlotID = CarbonSequestration.PlotID;"}
{"input": "\uc774\ubc88 \ud68c\uacc4\uc5f0\ub3c4\uc5d0 \ubbf8\uad6d \uc815\ubd80\uc640 \uccb4\uacb0\ud55c \uacc4\uc57d \ud611\uc0c1\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contract_negotiations (id INT, contract_name VARCHAR(50), negotiation_date DATE, customer VARCHAR(50), value DECIMAL(10,2));", "output": "SELECT SUM(value) as total_value FROM contract_negotiations WHERE customer = 'US government' AND negotiation_date >= DATEADD(year, DATEDIFF(year, 0, GETDATE()), 0) AND negotiation_date < DATEADD(year, DATEDIFF(year, 0, GETDATE()) + 1, 0);"}
{"input": " 2015\ub144\uc5d0\uc11c 2020\ub144 \uc0ac\uc774\uc5d0 \uc778\ub3c4 \uc2dc\uace8 \ub3c4\ub85c \ubc00\ub3c4\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc774\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE road_density (country VARCHAR(50), year INT, density FLOAT); INSERT INTO road_density (country, year, density) VALUES ('India', 2015, 0.6), ('India', 2020, 0.7);", "output": "SELECT (b.density - a.density) AS change_in_density FROM road_density a, road_density b WHERE a.country = 'India' AND b.country = 'India' AND a.year = 2015 AND b.year = 2020;"}
{"input": " \"CleanEnergy\" \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc8fc\uac70\uc6a9 \uac74\ubb3c\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE CityEfficiency (building_id INT, rating FLOAT, city VARCHAR(50), state VARCHAR(50)); INSERT INTO CityEfficiency (building_id, rating, city, state) VALUES (1, 92.5, 'SanFrancisco', 'CA'), (2, 88.3, 'Austin', 'TX'), (3, 93.1, 'Seattle', 'WA'), (4, 91.2, 'Portland', 'OR');", "output": "SELECT city, AVG(rating) as avg_rating FROM CleanEnergy.CityEfficiency GROUP BY city ORDER BY avg_rating DESC LIMIT 2;"}
{"input": " \uac01 \uad11\uc0b0\uc5d0\uc11c \ucc44\uad74\ub41c \uae08\uc758 \ucd1d\ub7c9\uc740 \ubd84\uae30\ubcc4\ub85c \uad6c\ubd84\ub418\uace0 \uac00\uc7a5 \ub9ce\uc774 \ucc44\uad74\ub41c \uae08\uc758 \uc218\ub7c9\uc73c\ub85c \uc815\ub82c\ub429\ub2c8\uae4c?", "context": "CREATE TABLE mine (mine_id INT, mine_name VARCHAR(50), location VARCHAR(50), quantity_gold_mined INT); INSERT INTO mine (mine_id, mine_name, location, quantity_gold_mined) VALUES (1, 'Jade Mine', 'South Africa', 2000), (2, 'Emerald Mine', 'Russia', 3000), (3, 'Ruby Mine', 'Chile', 4000);", "output": "SELECT mine_name, SUM(quantity_gold_mined) OVER (PARTITION BY DATE_TRUNC('quarter', date) ORDER BY SUM(quantity_gold_mined) DESC) as total_gold_mined FROM mine_gold_stats;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc6d0\uc8fc\ubbfc \uc5b8\uc5b4\uac00 \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud574 \uc788\ub098\uc694?", "context": "CREATE TABLE languages (name VARCHAR(255), region VARCHAR(255), status VARCHAR(255)); INSERT INTO languages (name, region, status) VALUES ('Inuktitut', 'Arctic', 'Vulnerable'); INSERT INTO languages (name, region, status) VALUES ('Sami', 'Arctic', 'Vulnerable');", "output": "SELECT COUNT(*) FROM languages WHERE region = 'Arctic' AND status = 'Critically Endangered' OR status = 'Endangered' OR status = 'Vulnerable';"}
{"input": " \uc5b4\ub5a4 \ub3c4\uc2dc\uc5d0 \ud55c \uac00\uc9c0 \uc720\ud615\uc758 \uc2dc\uc124\ub9cc \uc788\ub098\uc694?", "context": "CREATE TABLE city_facility_types (city TEXT, facility_type TEXT); INSERT INTO city_facility_types (city, facility_type) VALUES ('CityA', 'hospital'), ('CityB', 'hospital'), ('CityC', 'hospital'), ('CityA', 'school'), ('CityB', 'school'), ('CityC', 'school'), ('CityA', 'library'), ('CityB', 'library'), ('CityC', 'library');", "output": "SELECT city FROM (SELECT city, COUNT(DISTINCT facility_type) AS num_types FROM city_facility_types GROUP BY city) AS temp WHERE num_types = 1;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \ud654\ud559\uc81c\ud488\ubcc4 \uc5d0\ub108\uc9c0 \ucd1d \uc18c\ube44\ub7c9\uacfc \uc804\uccb4 \uc18c\ube44\ub7c9 \ub300\ube44 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE product_energy (product_id INT, energy_date DATE, product_name TEXT, energy_consumption INT); INSERT INTO product_energy (product_id, energy_date, product_name, energy_consumption) VALUES (1, '2021-04-01', 'Product A', 5000), (2, '2021-05-05', 'Product B', 7000), (3, '2021-06-10', 'Product C', 8000);", "output": "SELECT product_name, SUM(energy_consumption) AS total_energy, 100.0 * SUM(energy_consumption) / (SELECT SUM(energy_consumption) FROM product_energy WHERE energy_date >= DATEADD(quarter, -1, CURRENT_DATE)) AS pct_of_total FROM product_energy WHERE energy_date >= DATEADD(quarter, -1, CURRENT_DATE) GROUP BY product_name;"}
{"input": " 2019\ub144\uc5d0 \ubbf8\uad6d\uc744 \ubc29\ubb38\ud55c \uad00\uad11\uac1d\uc758 \ube44\uc728\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE tourism_stats (destination VARCHAR(255), year INT, visitors INT); INSERT INTO tourism_stats (destination, year, visitors) VALUES ('United States', 2019, 30000000);", "output": "SELECT (visitors / (SELECT SUM(visitors) FROM tourism_stats) * 100) AS percentage FROM tourism_stats WHERE destination = 'United States' AND year = 2019;"}
{"input": " \ud2b9\uc815 \ub85c\uc2a4\ucfe8 \ucd9c\uc2e0 \ubcc0\ud638\uc0ac\uc758 \uc131\uacf5\ub960\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT PRIMARY KEY, LawSchool VARCHAR(255), Wins INT, Losses INT); INSERT INTO Attorneys (AttorneyID, LawSchool, Wins, Losses) VALUES (1, 'Harvard', 5, 2), (2, 'Yale', 4, 1), (3, 'Harvard', 6, 1);", "output": "SELECT LawSchool, (SUM(Wins) / (SUM(Wins) + SUM(Losses))) AS SuccessRate FROM Attorneys GROUP BY LawSchool HAVING LawSchool = 'Harvard';"}
{"input": " 2019\ub144\uc5d0 \"CNN\"\uacfc \"MSNBC\"\uac00 \ucd9c\ud310\ud55c \ud0d0\uc0ac \uc800\ub110\ub9ac\uc998 \uae30\uc0ac\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title TEXT, publication TEXT, topic TEXT, year INT); INSERT INTO articles (id, title, publication, topic, year) VALUES (1, 'Article 1', 'CNN', 'Investigative Journalism', 2019); INSERT INTO articles (id, title, publication, topic, year) VALUES (2, 'Article 2', 'MSNBC', 'Investigative Journalism', 2019); INSERT INTO articles (id, title, publication, topic, year) VALUES (3, 'Article 3', 'CNN', 'News', 2019);", "output": "SELECT SUM(cnt) FROM (SELECT publication, COUNT(*) as cnt FROM articles WHERE topic = 'Investigative Journalism' AND year = 2019 AND (publication = 'CNN' OR publication = 'MSNBC') GROUP BY publication) as t;"}
{"input": " \ucd1d 500\ub2ec\ub7ec \uc774\uc0c1 \uae30\ubd80\ud588\uc9c0\ub9cc '\ub3d9\ubb3c\ubcf5\uc9c0' \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\uc5d0 \ucc38\uc5ec\ud55c \uc801\uc774 \uc5c6\ub294 \uc790\uc6d0\ubd09\uc0ac\uc790\ub4e4\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE VolunteerDonations (VolunteerID int, DonationAmount decimal(10,2)); INSERT INTO VolunteerDonations (VolunteerID, DonationAmount) VALUES (1, 600.00), (2, 250.00), (3, 800.00), (4, 300.00);", "output": "SELECT v.VolunteerName FROM Volunteers v JOIN VolunteerPrograms vp ON v.VolunteerID = vp.VolunteerID JOIN Programs p ON vp.ProgramID = p.ProgramID JOIN VolunteerDonations vd ON v.VolunteerID = vd.VolunteerID WHERE vd.DonationAmount > 500 AND p.Category NOT IN ('Animal Welfare') GROUP BY v.VolunteerID HAVING SUM(vd.DonationAmount) > 500;"}
{"input": " \uac01 \uae30\ubd80\uc790\uc758 \uc774\ub984 \ubc0f ID\uc640 \ud568\uaed8 \uae30\ubd80\uc790\uc758 \ucd5c\ub300 \uae30\ubd80\uae08\uacfc \ucd5c\uc18c \uae30\ubd80\uae08\uc758 \ucc28\uc774\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donors (id INT, name TEXT, donation_amount DECIMAL(10, 2)); INSERT INTO donors (id, name, donation_amount) VALUES (1, 'John Doe', 500.00), (2, 'Jane Smith', 300.00), (3, 'Alice Johnson', 200.00), (3, 'Alice Johnson', 600.00);", "output": "SELECT donors.name, donors.id, LAG(donors.donation_amount) OVER (PARTITION BY donors.name ORDER BY donors.donation_amount DESC) AS previous_donation, donors.donation_amount - LAG(donors.donation_amount) OVER (PARTITION BY donors.name ORDER BY donors.donation_amount DESC) AS donation_difference FROM donors;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uace0\uac1d \uacc4\uc815 \uc794\uc561\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, account_number INT); CREATE TABLE account_balances (balance_id INT, customer_id INT, balance_date DATE, balance DECIMAL(10,2)); INSERT INTO customers (customer_id, account_number) VALUES (1, 123456), (2, 234567), (3, 345678); INSERT INTO account_balances (balance_id, customer_id, balance_date, balance) VALUES (1, 1, '2022-04-01', 10000.00), (2, 1, '2022-04-15', 11000.00), (3, 1, '2022-05-01', 12000.00), (4, 1, '2022-05-15', 13000.00), (5, 1, '2022-06-01', 14000.00), (6, 2, '2022-04-01', 20000.00), (7, 2, '2022-04-15', 21000.00), (8, 2, '2022-05-01', 22000.00), (9, 2, '2022-05-15', 23000.00), (10, 2, '2022-06-01', 24000.00), (11, 3, '2022-04-01', 30000.00), (12, 3, '2022-04-15', 31000.00), (13, 3, '2022-05-01', 32000.00), (14, 3, '2022-05-15', 33000.00), (15, 3, '2022-06-01', 34000.00);", "output": "SELECT customer_id, AVG(balance) OVER (PARTITION BY customer_id ORDER BY balance_date ROWS BETWEEN 89 PRECEDING AND CURRENT ROW) AS moving_avg FROM account_balances WHERE customer_id = 1;"}
{"input": " \uc778\uac74\ube44 \uae30\uc900\uc73c\ub85c \uad6d\uac00\ubcc4 \uacf5\uc7a5 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694? \uc9c0\uc18d\uac00\ub2a5\ud55c \uc18c\uc7ac\ub97c \uc0ac\uc6a9\ud558\ub294 \uacf5\uc7a5\uc774 \ub354 \ub192\uc740 \uc21c\uc704\ub97c \ucc28\uc9c0\ud558\ub098\uc694?", "context": "CREATE TABLE factory_labor_sustainable (factory VARCHAR(255), country VARCHAR(255), labor_cost DECIMAL(5,2), material VARCHAR(255)); INSERT INTO factory_labor_sustainable (factory, country, labor_cost, material) VALUES ('Factory1', 'Bangladesh', 5.00, 'organic cotton'), ('Factory2', 'Bangladesh', 6.00, 'conventional cotton'), ('Factory3', 'Bangladesh', 4.50, 'organic cotton'), ('Factory4', 'China', 7.50, 'recycled polyester'), ('Factory5', 'China', 8.00, 'conventional cotton'), ('Factory6', 'India', 3.50, 'organic cotton'), ('Factory7', 'India', 3.75, 'recycled polyester');", "output": "SELECT factory, country, labor_cost, material, RANK() OVER (PARTITION BY country ORDER BY CASE WHEN material IN ('organic cotton', 'recycled polyester') THEN 0 ELSE 1 END, labor_cost) AS labor_cost_rank FROM factory_labor_sustainable;"}
{"input": " \uac01 \ubcf4\uc874 \ub178\ub825 \uc720\ud615\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE conservation_projects (id INT, name VARCHAR(255), type VARCHAR(255), budget DECIMAL(10, 2)); INSERT INTO conservation_projects (id, name, type, budget) VALUES (1, 'Save the Tiger', 'Animal Protection', 1000000), (2, 'Giraffe Habitat Restoration', 'Habitat Preservation', 500000), (3, 'Panda Protection', 'Animal Protection', 800000), (4, 'Rhino Sanctuary', 'Habitat Preservation', 1200000), (5, 'Elephant Conservation', 'Animal Protection', 1500000);", "output": "SELECT type, SUM(budget) AS total_budget FROM conservation_projects GROUP BY type;"}
{"input": " \uc774\uc9d1\ud2b8\uc5d0 \ud22c\uc790 \ub610\ub294 \uae30\ubd80\ud55c \uace0\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT, client_name VARCHAR(50), country VARCHAR(50), type VARCHAR(50), value DECIMAL(10,2), date DATE); INSERT INTO investments (id, client_name, country, type, value, date) VALUES (1, 'Ali', 'Egypt', 'stocks', 12000, '2022-01-01'); CREATE TABLE donations (id INT, client_name VARCHAR(50), country VARCHAR(50), amount DECIMAL(10,2), date DATE); INSERT INTO donations (id, client_name, country, amount, date) VALUES (2, 'Aisha', 'Egypt', 900, '2022-01-02');", "output": "SELECT client_name FROM investments WHERE country = 'Egypt' UNION SELECT client_name FROM donations WHERE country = 'Egypt';"}
{"input": " 'APAC' \uc9c0\uc5ed\uc5d0\uc11c '#nature' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc758 \ucd5c\uc18c \uc88b\uc544\uc694 \uc218\ub294 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE posts (id INT, user_id INT, date DATE, like_count INT); CREATE TABLE hashtags (id INT, post_id INT, tag VARCHAR(20)); INSERT INTO posts (id, user_id, date, like_count) VALUES (1, 1, '2022-01-01', 500), (2, 2, '2022-01-02', 1000); INSERT INTO hashtags (id, post_id, tag) VALUES (1, 1, '#nature'), (2, 2, '#nature');", "output": "SELECT MIN(posts.like_count) FROM posts JOIN hashtags ON posts.id = hashtags.post_id JOIN users ON posts.user_id = users.id WHERE users.region = 'APAC' AND hashtags.tag = '#nature';"}
{"input": " 2018\ub144 \uc774\uc804\uc5d0 \uc81c\uc791\ub41c '\ud1a0\ub860\ud1a0'\uc640 '\ubaac\ud2b8\ub9ac\uc62c'\uc758 \uc790\uc728\uc8fc\ud589\ud0dd\uc2dc \ub300\uc218\ub97c \uc138\uc5b4\ubcfc\uae4c\uc694?", "context": "CREATE TABLE if not exists Manufacturers (id int, name text); INSERT INTO Manufacturers (id, name) VALUES (1, 'Tesla'), (2, 'Waymo'), (3, 'Uber'), (4, 'NVIDIA'); CREATE TABLE if not exists Vehicles (id int, type text, manufacturer_id int, is_autonomous boolean); INSERT INTO Vehicles (id, type, manufacturer_id, is_autonomous) VALUES (1, 'Taxi', 1, true), (2, 'Bus', 2, false), (3, 'Taxi', 3, true), (4, 'Truck', 4, false); CREATE TABLE if not exists Cities (id int, name text); INSERT INTO Cities (id, name) VALUES (1, 'Toronto'), (2, 'Montreal'), (3, 'New York'); CREATE TABLE if not exists ManufacturingDates (id int, vehicle_id int, year int); INSERT INTO ManufacturingDates (id, vehicle_id, year) VALUES (1, 1, 2017), (2, 1, 2018), (3, 2, 2015), (4, 3, 2019), (5, 4, 2016);", "output": "SELECT COUNT(*) FROM Vehicles JOIN ManufacturingDates ON Vehicles.id = ManufacturingDates.vehicle_id JOIN Cities ON Vehicles.id = Cities.id WHERE is_autonomous = true AND year < 2018 AND Cities.name IN ('Toronto', 'Montreal');"}
{"input": " \ud2b9\uc815 \uac8c\uc784 \ubaa8\ub4dc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc2b9\ub9ac\ub97c \uac70\ub454 \ud50c\ub808\uc774\uc5b4 \ud45c\uc2dc", "context": "CREATE TABLE games (game_id INT, name VARCHAR(50)); CREATE TABLE modes (mode_id INT, name VARCHAR(50)); CREATE TABLE results (result_id INT, player_id INT, game_id INT, mode_id INT, wins INT);", "output": "SELECT r.player_id, p.name, g.name AS game_name, m.name AS mode_name, SUM(r.wins) AS total_wins FROM results r JOIN players p ON r.player_id = p.player_id JOIN games g ON r.game_id = g.game_id JOIN modes m ON r.mode_id = m.mode_id GROUP BY r.player_id, g.name, m.name ORDER BY total_wins DESC;"}
{"input": " \uad6d\uac00\ubcc4 \uad70\uc0ac\uae30\uc220 \uc720\ud615 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE military_tech (country VARCHAR(50), tech_type VARCHAR(50), quantity INT); INSERT INTO military_tech (country, tech_type, quantity) VALUES ('USA', 'Aircraft', 13000), ('USA', 'Vessels', 500), ('China', 'Aircraft', 5000), ('China', 'Vessels', 700), ('Russia', 'Aircraft', 4000), ('Russia', 'Vessels', 600);", "output": "SELECT country, tech_type, quantity FROM military_tech;"}
{"input": " \ud3c9\uc810 9\uc810 \uc774\uc0c1\uc758 \uc601\ud654\uc5d0 \ucd9c\uc5f0\ud55c \ubc30\uc6b0\ub4e4\uc758 \uc774\ub984\uc740 \ubaa8\ub450 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies_actors (id INT, movie_id INT, actor_name VARCHAR(255), rating FLOAT); INSERT INTO movies_actors (id, movie_id, actor_name, rating) VALUES (1, 1, 'ActorA', 7.5), (2, 2, 'ActorB', 8.2), (3, 3, 'ActorC', 9.0), (4, 4, 'ActorD', 6.5), (5, 5, 'ActorA', 9.5);", "output": "SELECT DISTINCT actor_name FROM movies_actors WHERE id IN (SELECT movie_id FROM movies WHERE rating >= 9);"}
{"input": " \uad6d\uac00\ubcc4 \uccab \ubc88\uc9f8 \uc704\uc131 \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (id INT, name VARCHAR(255), type VARCHAR(255), launch_date DATE, country VARCHAR(255)); INSERT INTO Satellites (id, name, type, launch_date, country) VALUES (1, 'Sputnik 1', 'Satellite', '1957-10-04', 'Russia'), (2, 'Explorer 1', 'Satellite', '1958-01-31', 'United States');", "output": "SELECT name, launch_date, ROW_NUMBER() OVER (PARTITION BY country ORDER BY launch_date ASC) as launch_rank FROM Satellites WHERE type = 'Satellite' AND launch_rank = 1;"}
{"input": " \ubd81\ubd80 \uc9c0\uc5ed \ud0c4\uad11\uc758 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EmployeesInMines (EmployeeID INT, MineID INT, EmploymentDate DATE);", "output": "SELECT COUNT(DISTINCT EmployeeID) FROM EmployeesInMines WHERE (SELECT MineType FROM Mines WHERE Mines.MineID = EmployeesInMines.MineID) = 'Coal' AND (SELECT Region FROM Mines WHERE Mines.MineID = EmployeesInMines.MineID) = 'Northern';"}
{"input": " \ub9e4\ub514\uc2a8 \uc2a4\ud018\uc5b4 \uac00\ub4e0\uc5d0\uc11c Knicks\uac00 \uce58\ub978 \ub18d\uad6c \uacbd\uae30\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Knicks'); CREATE TABLE venues (venue_id INT, venue_name VARCHAR(255)); INSERT INTO venues (venue_id, venue_name) VALUES (1, 'Madison Square Garden'); CREATE TABLE games (game_id INT, team_id INT, venue_id INT, game_date DATE); INSERT INTO games (game_id, team_id, venue_id, game_date) VALUES (1, 1, 1, '2020-01-01');", "output": "SELECT COUNT(*) FROM games INNER JOIN teams ON games.team_id = teams.team_id INNER JOIN venues ON games.venue_id = venues.venue_id WHERE teams.team_name = 'Knicks' AND venues.venue_name = 'Madison Square Garden';"}
{"input": " \ud504\ub85c\uc81d\ud2b8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc744 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc758 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uad6c\ud558\uc2dc\uc624.", "context": "CREATE TABLE Volunteers (VolunteerID int, ProjectID int, VolunteerHours decimal(10, 2), VolunteerDate date); INSERT INTO Volunteers (VolunteerID, ProjectID, VolunteerHours, VolunteerDate) VALUES (1, 1, 5.0, '2022-01-01'), (2, 1, 8.0, '2022-02-01'), (3, 2, 3.0, '2022-01-01'), (4, 3, 7.0, '2022-01-01');", "output": "SELECT ProjectID, COUNT(DISTINCT VolunteerID) AS TotalNumberOfVolunteers, SUM(VolunteerHours) OVER (PARTITION BY ProjectID ORDER BY SUM(VolunteerHours)) AS TotalVolunteerHours FROM Volunteers GROUP BY ProjectID ORDER BY TotalVolunteerHours DESC;"}
{"input": " '\ubd81\ubbf8'\uc640 '\uc720\ub7fd' \uc9c0\uc5ed\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ud654\uc7a5\ud488 \ube0c\ub79c\ub4dc\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\ub098\uc694?", "context": "CREATE TABLE cosmetic_brands (brand_id INT, brand_name VARCHAR(100), region VARCHAR(50), cruelty_free BOOLEAN); INSERT INTO cosmetic_brands (brand_id, brand_name, region, cruelty_free) VALUES (1, 'Clinique', 'North America', false), (2, 'The Body Shop', 'Europe', true), (3, 'Lush', 'North America', true), (4, 'Estee Lauder', 'Europe', false), (5, 'Natio', 'Australia', true);", "output": "SELECT brand_name FROM cosmetic_brands WHERE region IN ('North America', 'Europe') AND cruelty_free = true;"}
{"input": " \ucd5c\uadfc 1\ub144\uac04 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \uc801\uc740 \uad11\uc0b0\uc758 \uc774\ub984\uc744 \uc120\ud0dd\ud558\uc138\uc694.", "context": "CREATE TABLE Water_Consumption_Records (Mine_Name VARCHAR(50), Water_Consumption FLOAT, Year INT); INSERT INTO Water_Consumption_Records (Mine_Name, Water_Consumption, Year) VALUES ('Amethyst Ascent', 25000.0, 2019), ('Turquoise Terrace', 27000.1, 2019), ('Topaz Tops', 23000.5, 2019);", "output": "SELECT Mine_Name FROM Water_Consumption_Records WHERE Water_Consumption = (SELECT MIN(Water_Consumption) FROM Water_Consumption_Records) AND Year = (SELECT MAX(Year) FROM Water_Consumption_Records);"}
{"input": "\ud3c9\uade0 \uae09\uc5ec\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ubd80\uc11c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Employees (EmployeeID int, EmployeeName varchar(50), Department varchar(50), Salary float, Gender varchar(10)); INSERT INTO Employees (EmployeeID, EmployeeName, Department, Salary, Gender) VALUES (1, 'John Doe', 'IT', 80000, 'Male'), (2, 'Jane Smith', 'HR', 70000, 'Female'), (3, 'Mike Johnson', 'IT', 85000, 'Male');", "output": "SELECT Department, AVG(Salary) as Avg_Salary, RANK() OVER (ORDER BY AVG(Salary) DESC) as Department_Rank FROM Employees GROUP BY Department HAVING Department_Rank <= 3;"}
{"input": " \uc778\uad6c\uac00 50\uba85 \uc774\uc0c1\uc778 \uc57c\uc0dd \ub3d9\ubb3c \uc885\uc774 \uc788\ub294 \uc232\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Forests (id INT PRIMARY KEY, name VARCHAR(255), hectares DECIMAL(5,2), country VARCHAR(255)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Greenwood', 520.00, 'Canada'); CREATE TABLE Wildlife (id INT PRIMARY KEY, name VARCHAR(255), species_id INT, forest_id INT, population INT, FOREIGN KEY (species_id) REFERENCES Species(id), FOREIGN KEY (forest_id) REFERENCES Forests(id)); INSERT INTO Wildlife (id, name, species_id, forest_id, population) VALUES (1, 'Brown Bear', 2, 1, 60); CREATE TABLE Species (id INT PRIMARY KEY, name VARCHAR(255), common_name VARCHAR(255)); INSERT INTO Species (id, name, common_name) VALUES (2, 'Ursus arctos', 'Brown Bear');", "output": "SELECT Forests.name, Wildlife.name, Wildlife.population FROM Forests INNER JOIN Wildlife ON Forests.id = Wildlife.forest_id INNER JOIN Species ON Wildlife.species_id = Species.id WHERE Wildlife.population > 50;"}
{"input": " \ucd5c\uadfc 5\ub144\uac04 \uc800\ub110\ubcc4 \ud559\uc220\ub17c\ubb38 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Publication (id INT, year INT, journal VARCHAR(255), department_id INT); INSERT INTO Publication (id, year, journal, department_id) VALUES (1, 2018, 'Journal of Computer Science', 1), (2, 2019, 'Physical Review', 2), (3, 2018, 'English Literature Review', 3), (4, 2017, 'Journal of Mathematics', 1), (5, 2020, 'Journal of Computer Science', 1), (6, 2019, 'Journal of Mathematics', 1), (7, 2020, 'English Literature Review', 3);", "output": "SELECT p.journal, COUNT(*) as num_publications FROM Publication p WHERE YEAR(p.year) BETWEEN YEAR(CURDATE()) - 5 AND YEAR(CURDATE()) GROUP BY p.journal;"}
{"input": "\ud50c\ub85c\ub9ac\ub2e4'\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0\uac8c \uc9c0\uae09\ub418\ub294 \ucd5c\ub300 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE claims (policyholder_id INT, claim_amount DECIMAL(10,2), policyholder_state VARCHAR(20)); INSERT INTO claims (policyholder_id, claim_amount, policyholder_state) VALUES (1, 500.00, 'Florida'), (2, 900.00, 'Florida'), (3, 700.00, 'Florida');", "output": "SELECT MAX(claim_amount) FROM claims WHERE policyholder_state = 'Florida';"}
{"input": " '\ub9c8\ucf00\ud305' \ubd80\uc11c\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE departments (id INT, name TEXT, manager TEXT); INSERT INTO departments (id, name, manager) VALUES (1, 'manufacturing', 'John Doe'), (2, 'marketing', 'Jane Smith'); CREATE TABLE employees (id INT, name TEXT, department TEXT, salary FLOAT); INSERT INTO employees (id, name, department, salary) VALUES (1, 'Jane Smith', 'manufacturing', 50000.0), (2, 'Mike Johnson', 'marketing', 60000.0); CREATE TABLE programs (id INT, name TEXT, department TEXT); INSERT INTO programs (id, name, department) VALUES (1, 'training', 'manufacturing'), (2, 'marketing strategy', 'marketing');", "output": "WITH cte1 AS (DELETE FROM employees WHERE department = 'marketing' RETURNING id), cte2 AS (DELETE FROM departments WHERE name = 'marketing' RETURNING id) DELETE FROM programs WHERE id IN (SELECT id FROM cte1) OR department IN (SELECT name FROM cte2);"}
{"input": " '\ubc29\uc0ac\uc131 \ud0c4\uc18c \uc5f0\ub300 \uce21\uc815'\uc774 \ud3ec\ud568\ub41c 'asia_pacific_archaeology' \uc0ac\uc774\ud2b8\uc758 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE asia_pacific_archaeology (site_id INT, radiocarbon_dating BOOLEAN);", "output": "SELECT COUNT(*) FROM asia_pacific_archaeology WHERE radiocarbon_dating = TRUE;"}
{"input": "\ubd81\ub300\uc11c\uc591 \uc9c0\uc5ed\uc758 \uc885\ub2f9 \ud3c9\uade0 \uc5b4\ud68d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FishCaught (species VARCHAR(50), region VARCHAR(50), quantity INT); INSERT INTO FishCaught (species, region, quantity) VALUES ('Tuna', 'North Atlantic', 300), ('Salmon', 'North Atlantic', 250), ('Cod', 'North Atlantic', 400);", "output": "SELECT species, AVG(quantity) as avg_quantity FROM FishCaught WHERE region = 'North Atlantic' GROUP BY species;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, Name TEXT); INSERT INTO Volunteers (VolunteerID, Name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'); CREATE TABLE VolunteerPrograms (VolunteerID INT, ProgramID INT); INSERT INTO VolunteerPrograms (VolunteerID, ProgramID) VALUES (1, 1), (2, 1), (3, 2);", "output": "SELECT Programs.ProgramName, COUNT(VolunteerPrograms.VolunteerID) FROM VolunteerPrograms INNER JOIN Volunteers ON VolunteerPrograms.VolunteerID = Volunteers.VolunteerID INNER JOIN Programs ON VolunteerPrograms.ProgramID = Programs.ProgramID GROUP BY Programs.ProgramName;"}
{"input": " NASA\uc640 JAXA\uac00 \uc218\uc9d1\ud55c \uc6b0\uc8fc \uc4f0\ub808\uae30\uc758 \ucd1d \uc9c8\ub7c9\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE space_debris (id INT, name VARCHAR(255), collection_date DATE, collecting_agency VARCHAR(255), mass FLOAT); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (1, 'RemoveDEBRIS', '2018-04-16', 'NASA', 220.0); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (2, 'RAMA', '2024-09-27', 'JAXA', 550.5); CREATE VIEW space_debris_nasa AS SELECT * FROM space_debris WHERE collecting_agency = 'NASA'; CREATE VIEW space_debris_jaxa AS SELECT * FROM space_debris WHERE collecting_agency = 'JAXA';", "output": "SELECT SUM(s.mass) as total_mass FROM space_debris s INNER JOIN space_debris_nasa n ON s.id = n.id INNER JOIN space_debris_jaxa j ON s.id = j.id;"}
{"input": " '\uce58\ub8cc' \uc2a4\ud0a4\ub9c8\uc5d0 \uc6b0\uc6b8\uc99d \ub610\ub294 \ubd88\uc548 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \uce58\ub8cc \uc811\uadfc \ubc29\uc2dd\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE treatment (treatment_id INT, patient_id INT, treatment_approach VARCHAR(255)); INSERT INTO treatment (treatment_id, patient_id, treatment_approach) VALUES (1, 1, 'CBT'), (2, 2, 'DBT'), (3, 3, 'EMDR'), (4, 1, 'Medication'), (5, 6, 'Talk Therapy'), (6, 7, 'Group Therapy');", "output": "SELECT DISTINCT treatment_approach FROM treatment INNER JOIN (SELECT patient_id FROM patients WHERE diagnosis IN ('depression', 'anxiety')) AS subquery ON treatment.patient_id = subquery.patient_id;"}
{"input": "\uc9c1\ubb3c \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uc0dd\uc0b0\ub7c9 \uae30\uc900\uc73c\ub85c \uc9c1\ubb3c \uc18c\uc2f1\uc758 \ud558\uc704 25%\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production_volumes (id INT, textile_type VARCHAR(255), production_country VARCHAR(255), volume INT); INSERT INTO production_volumes (id, textile_type, production_country, volume) VALUES (1, 'cotton', 'India', 5000);", "output": "SELECT textile_type, production_country, volume, NTILE(4) OVER (PARTITION BY textile_type ORDER BY volume) as tier FROM production_volumes;"}
{"input": " 2020\ub144\uc5d0 \uace0\uc6a9\uc8fc\uac00 \ub9e4\uc6d4 \uace0\uc6a9\ud55c \ud1f4\uc5ed\uad70\uc778\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VeteranHiring (id INT, Employer VARCHAR(50), HireDate DATE, Veteran BOOLEAN); INSERT INTO VeteranHiring (id, Employer, HireDate, Veteran) VALUES (1, 'Lockheed Martin', '2020-01-01', TRUE), (2, 'Boeing', '2020-01-15', FALSE), (3, 'Lockheed Martin', '2020-02-01', TRUE), (4, 'Raytheon', '2020-03-01', TRUE), (5, 'Northrop Grumman', '2020-04-01', FALSE), (6, 'General Dynamics', '2020-05-01', TRUE);", "output": "SELECT Employer, DATE_TRUNC('month', HireDate) as HireMonth, COUNT(*) as TotalVeteransHired FROM VeteranHiring WHERE Veteran = TRUE AND HireDate BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY Employer, HireMonth;"}
{"input": " 2021\ub144 \uc804\uccb4 \ub3c4\uc2dc \uc804\uccb4 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9 \uc0b0\uc815", "context": "CREATE TABLE waste_generation (city VARCHAR(20), year INT, daily_waste_generation FLOAT);INSERT INTO waste_generation (city, year, daily_waste_generation) VALUES ('San Francisco', 2019, 3.2), ('San Francisco', 2020, 3.5), ('San Francisco', 2021, 3.7), ('Oakland', 2019, 2.8), ('Oakland', 2020, 3.1), ('Oakland', 2021, 3.3);", "output": "SELECT SUM(daily_waste_generation * 365) FROM waste_generation WHERE year = 2021;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uac01 \ubc15\ubb3c\uad00\uc758 \uc5f0\uac04 \ucd5c\ub300 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE la_museums(id INT, name VARCHAR(30), capacity INT, visitors INT); INSERT INTO la_museums VALUES (1, 'Getty Center', 1000000, 800000); INSERT INTO la_museums VALUES (2, 'LACMA', 500000, 400000);", "output": "SELECT name, MAX(visitors) FROM la_museums GROUP BY name;"}
{"input": " '\ubc14\ub85c\ud06c' \uc7a5\ub974 \uc911 \uad00\ub78c\uac1d \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \uc804\uc2dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Exhibitions (id INT, name TEXT, genre TEXT, visitor_count INT);", "output": "SELECT name, visitor_count FROM (SELECT name, visitor_count, ROW_NUMBER() OVER (PARTITION BY genre ORDER BY visitor_count ASC) as rn FROM Exhibitions WHERE genre = 'Baroque') t WHERE rn = 1;"}
{"input": " \uad6d\uac00\ubcc4 \ubc1c\uad74\uc9c0\uc640 \uad00\ub828 \uc720\ubb3c\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Countries(id INT, name TEXT); INSERT INTO Countries (id, name) VALUES (1, 'Country A'); INSERT INTO Countries (id, name) VALUES (2, 'Country B'); CREATE TABLE ExcavationSites(id INT, country_id INT, name TEXT, date DATE); INSERT INTO ExcavationSites (id, country_id, name, date) VALUES (1, 1, 'Site A', '2000-01-01'); INSERT INTO ExcavationSites (id, country_id, name, date) VALUES (2, 1, 'Site B', '1995-05-15'); CREATE TABLE Artifacts(id INT, excavation_site_id INT, name TEXT, type TEXT); INSERT INTO Artifacts (id, excavation_site_id, name, type) VALUES (1, 1, 'Pottery 1', 'Pottery'); INSERT INTO Artifacts (id, excavation_site_id, name, type) VALUES (2, 2, 'Pottery 2', 'Pottery');", "output": "SELECT Countries.name, COUNT(ExcavationSites.id) AS site_count, COUNT(Artifacts.id) AS artifact_count FROM Countries LEFT JOIN ExcavationSites ON Countries.id = ExcavationSites.country_id LEFT JOIN Artifacts ON ExcavationSites.id = Artifacts.excavation_site_id GROUP BY Countries.name;"}
{"input": "\ub2e8\uc77c \uc232\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ub098\ubb34 \uc885\uc758 \ucd5c\ub300 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE forest_tree_species (forest_id INT, species TEXT);", "output": "SELECT MAX(forest_count) FROM (SELECT forest_id, COUNT(*) AS forest_count FROM forest_tree_species GROUP BY forest_id) AS subquery;"}
{"input": " \uc9c0\ub09c \ud574 \ucd95\uad6c \uacbd\uae30\uc758 \ud3c9\uade0 \ud2f0\ucf13 \uac00\uaca9\uc744 \ubd84\uae30\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE football_prices (game_date DATE, tickets_sold INT, ticket_price DECIMAL(5,2)); INSERT INTO football_prices (game_date, tickets_sold, ticket_price) VALUES ('2022-01-01', 500, 75.50), ('2022-02-01', 700, 65.00), ('2022-03-01', 600, 80.00), ('2022-04-01', 800, 70.00), ('2022-05-01', 900, 60.00);", "output": "SELECT CASE WHEN game_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND game_date < DATE_SUB(CURDATE(), INTERVAL 9 MONTH) THEN 'Q1' WHEN game_date >= DATE_SUB(CURDATE(), INTERVAL 9 MONTH) AND game_date < DATE_SUB(CURDATE(), INTERVAL 6 MONTH) THEN 'Q2' WHEN game_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND game_date < DATE_SUB(CURDATE(), INTERVAL 3 MONTH) THEN 'Q3' ELSE 'Q4' END AS quarter, AVG(ticket_price) FROM football_prices WHERE game_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY quarter;"}
{"input": "\uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \ubd09\uc0ac\uc2dc\uac04\uc740 \uc5bc\ub9c8\uc774\uba70, \ucd1d \ubd09\uc0ac\uc2dc\uac04\uc774 \uac00\uc7a5 \ub9ce\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName VARCHAR(255), ProgramID INT); CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(255)); CREATE TABLE VolunteerHours (VolunteerHourID INT, VolunteerID INT, Hours DECIMAL(10, 2), HourDate DATE);", "output": "SELECT ProgramName, SUM(Hours) AS TotalHours, RANK() OVER (ORDER BY SUM(Hours) DESC) AS ProgramRank FROM Volunteers JOIN Programs ON Volunteers.ProgramID = Programs.ProgramID JOIN VolunteerHours ON Volunteers.VolunteerID = VolunteerHours.VolunteerID WHERE HourDate >= DATEADD(MONTH, -3, CURRENT_DATE) GROUP BY ProgramName;"}
{"input": " '\uc2dc\ucd94' \ubd80\uc11c \uc9c1\uc6d0\ub4e4\uc758 \uc774\ub984\uacfc \ub178\ub3d9 \uc0dd\uc0b0\uc131\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Departments (DepartmentID INT PRIMARY KEY, DepartmentName VARCHAR(50), ManagerID INT, ManagerFirstName VARCHAR(50), ManagerLastName VARCHAR(50)); INSERT INTO Departments (DepartmentID, DepartmentName, ManagerID, ManagerFirstName, ManagerLastName) VALUES (1, 'Mining', 3, 'Peter', 'Smith'); INSERT INTO Departments (DepartmentID, DepartmentName, ManagerID, ManagerFirstName, ManagerLastName) VALUES (2, 'Geology', 4, 'Amy', 'Johnson'); INSERT INTO Departments (DepartmentID, DepartmentName, ManagerID, ManagerFirstName, ManagerLastName) VALUES (3, 'Drilling', 5, 'Liam', 'Neil');", "output": "SELECT Employees.FirstName, Employees.LastName, AVG(LaborProductivity.QuantityProduced/LaborProductivity.HoursWorked) FROM Employees INNER JOIN Departments ON Employees.Department = Departments.DepartmentName INNER JOIN LaborProductivity ON Employees.EmployeeID = LaborProductivity.EmployeeID WHERE Departments.DepartmentName = 'Drilling' GROUP BY Employees.EmployeeID;"}
{"input": "\uac01 \uc6b0\uc8fc\uad6d\uc758 \uc784\ubb34\uc758 \ucd5c\ub300 \uae30\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA space_exploration; CREATE TABLE space_exploration.missions (mission_id INT, agency VARCHAR(50), mission_name VARCHAR(50), duration INT); INSERT INTO space_exploration.missions VALUES (1, 'NASA', 'Apollo 11', 195); INSERT INTO space_exploration.missions VALUES (2, 'Roscosmos', 'Soyuz T-15', 211); INSERT INTO space_exploration.missions VALUES (3, 'ESA', 'ATV-5 Georges Lemaitre', 193);", "output": "SELECT agency, MAX(duration) OVER (PARTITION BY agency) as max_duration FROM space_exploration.missions GROUP BY agency;"}
{"input": " \uac8c\uc784\uc5d0 VR \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uc120\ud638\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc774\uba70, \uadf8 \uc911 \uc544\uc2dc\uc544 \ucd9c\uc2e0 \ud50c\ub808\uc774\uc5b4\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PlayerPreferences (PlayerID INT, Preference VARCHAR(50)); INSERT INTO PlayerPreferences (PlayerID, Preference) VALUES (1, 'VR'), (2, 'Non-VR'), (3, 'VR'), (4, 'VR'), (5, 'Non-VR'); CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Players (PlayerID, PlayerName, Country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'), (3, 'Li Kim', 'China'), (4, 'Park Chan', 'Korea'), (5, 'Ravi Verma', 'India');", "output": "(SELECT COUNT(*) FROM PlayerPreferences WHERE Preference = 'VR' INTERSECT SELECT COUNT(*) FROM Players JOIN PlayerPreferences ON Players.PlayerID = PlayerPreferences.PlayerID WHERE Players.Country = 'Asia')"}
{"input": " \ud5e4\uc5b4\ucf00\uc5b4 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ub3d9\ubb3c\uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uc778\uc99d\ub41c \ud654\uc7a5\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE certifications(certification_id INT, product_id INT, certification_type VARCHAR(50), certified_date DATE);", "output": "SELECT 100.0 * COUNT(product_id) / (SELECT COUNT(product_id) FROM cosmetics_products WHERE category = 'haircare') as cruelty_free_percentage FROM certifications JOIN cosmetics_products ON certifications.product_id = cosmetics_products.product_id WHERE certifications.certification_type = 'cruelty-free' AND cosmetics_products.category = 'haircare';"}
{"input": " 2018\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \uad6d\uac00\ubcc4 \ud3c9\ud654\uc720\uc9c0\uc791\uc804\ube44 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE peacekeeping_expenditure (country VARCHAR(50), year INT, expenditure FLOAT); INSERT INTO peacekeeping_expenditure (country, year, expenditure) VALUES ('USA', 2018, 300000000), ('China', 2018, 200000000), ('Russia', 2018, 150000000), ('USA', 2019, 310000000), ('China', 2019, 210000000), ('Russia', 2019, 170000000);", "output": "SELECT country, (LEAD(expenditure, 1) OVER (PARTITION BY country ORDER BY year) - expenditure) as change FROM peacekeeping_expenditure WHERE year IN (2018, 2019);"}
{"input": " \uc6b0\uc8fc\uc0dd\ubb3c\ud559\uc5d0\uc11c \ubc1c\uacac\ub41c \uc678\uacc4\ud589\uc131\uacfc \uc6b4\uc11d\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE astrobiology_discoveries (id INT, discovery_name VARCHAR(255), location VARCHAR(255), discovery_date DATE, discovery_type VARCHAR(255)); INSERT INTO astrobiology_discoveries (id, discovery_name, location, discovery_date, discovery_type) VALUES (1, 'Exoplanet Kepler-186f', 'Kepler-186', '2014-04-17', 'Exoplanet');", "output": "SELECT SUM(discovery_count) as total_discoveries FROM (SELECT 'Exoplanet' as discovery_type, COUNT(*) as discovery_count FROM astrobiology_discoveries WHERE discovery_type = 'Exoplanet' UNION ALL SELECT 'Meteorite' as discovery_type, COUNT(*) as discovery_count FROM astrobiology_discoveries WHERE discovery_type = 'Meteorite') as subquery;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \uc5b4\ub5a4 \uc120\uc218\uac00 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Players (PlayerID, PlayerName, Country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'); CREATE TABLE EsportsEvents (EventID INT, PlayerID INT, EventName VARCHAR(50)); INSERT INTO EsportsEvents (EventID, PlayerID, EventName) VALUES (1, 3, 'GameX Championship'), (2, 4, 'Battle Royale Cup');", "output": "(SELECT Players.PlayerName FROM Players WHERE Players.Country IN ('USA', 'Canada') EXCEPT SELECT EsportsEvents.PlayerName FROM EsportsEvents)"}
{"input": " \uad6d\uac00\ubcc4 \ucd1d \uc5d0\ub108\uc9c0 \uc0dd\uc0b0\ub7c9\uc744 \uc0dd\uc0b0\ub7c9 \uc21c\uc73c\ub85c \ubcf4\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE energy_production (country VARCHAR(50), production FLOAT); INSERT INTO energy_production (country, production) VALUES ('Germany', 2000.5), ('France', 2500.0), ('Spain', 3000.2);", "output": "SELECT country, SUM(production) as total_production, RANK() OVER (ORDER BY SUM(production) DESC) as production_rank FROM energy_production GROUP BY country ORDER BY total_production DESC;"}
{"input": "\uc778\uc99d \uc720\ud615 \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \ub179\uc0c9 \uc778\uc99d \uac74\ucd95\ubb3c\uc758 \ucd1d \uac1c\uc218\uac00 100\uac1c\ub97c \ucd08\uacfc\ud558\ub294 \uacbd\uc6b0 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_certified_buildings (building_id INT, certification_type VARCHAR(50), year INT);", "output": "SELECT certification_type, year, COUNT(building_id) FROM green_certified_buildings GROUP BY certification_type, year HAVING COUNT(building_id) > 100;"}
{"input": " \uc9c0\ub09c 90\uc77c \ub3d9\uc548 \uacb0\uc81c \uc815\ubcf4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc740 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE billing_updates (subscriber_id INT, name VARCHAR(50), billing_updated_date DATE); INSERT INTO billing_updates (subscriber_id, name, billing_updated_date) VALUES (11, 'Imani White', '2022-04-15'); INSERT INTO billing_updates (subscriber_id, name, billing_updated_date) VALUES (12, 'Jaxon Black', '2022-06-20');", "output": "DELETE FROM mobile_subscribers WHERE subscriber_id IN (SELECT subscriber_id FROM billing_updates WHERE billing_updated_date <= DATE_SUB(CURRENT_DATE, INTERVAL 90 DAY));"}
{"input": " '\ubb44\ubc14\uc774' \ud56d\uad6c\uc5d0\uc11c \ucc98\ub9ac\ub41c \uc911\ub7c9 1000\uac1c \ubbf8\ub9cc\uc758 \ucee8\ud14c\uc774\ub108\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name VARCHAR(20)); INSERT INTO ports (id, name) VALUES (1, 'Mumbai'), (2, 'Delhi'); CREATE TABLE containers (id INT, weight INT, port_id INT); INSERT INTO containers (id, weight, port_id) VALUES (1, 500, 1), (2, 1500, 1), (3, 2000, 2), (4, 2500, 2), (5, 50, 1);", "output": "SELECT COUNT(*) FROM containers WHERE weight < 1000 AND port_id = (SELECT id FROM ports WHERE name = 'Mumbai');"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c 100% \uacf5\ub3d9\uc18c\uc720\uad8c\uc744 \uac16\uace0 \uc788\ub294 \ubd80\ub3d9\uc0b0\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Property (id INT PRIMARY KEY, city_id INT, neighborhood_id INT, price FLOAT); CREATE TABLE CoOwnership (id INT PRIMARY KEY, property_id INT, owner_name VARCHAR(50), ownership_percentage FLOAT);", "output": "SELECT City.name, COUNT(Property.id) as total_properties FROM City JOIN Property ON City.id = Property.city_id JOIN CoOwnership ON Property.id = CoOwnership.property_id GROUP BY City.name HAVING SUM(CoOwnership.ownership_percentage) = 1;"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\ub294 \ucd1d \uba87 \uba85\uc758 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uace0\uac1d\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mobile_customers (customer_id INT, state VARCHAR(20)); CREATE TABLE broadband_customers (customer_id INT, state VARCHAR(20)); INSERT INTO mobile_customers (customer_id, state) VALUES (1, 'Texas'), (2, 'New York'); INSERT INTO broadband_customers (customer_id, state) VALUES (3, 'Texas'), (4, 'California');", "output": "SELECT COUNT(*) FROM (SELECT customer_id FROM mobile_customers WHERE state = 'Texas' UNION ALL SELECT customer_id FROM broadband_customers WHERE state = 'Texas') AS total_customers;"}
{"input": "\ub18d\uad6c \uacbd\uae30\uc5d0 \ucc38\uc11d\ud558\uace0 \uc0c1\ud488\uc744 \uad6c\ub9e4\ud55c \ud32c\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE fans_merchandise_basketball (fan_id INT, merchandise_id INT);", "output": "SELECT COUNT(DISTINCT fans.fan_id) FROM fans JOIN (SELECT * FROM ticket_sales WHERE game_id IN (SELECT game_id FROM games WHERE game_type = 'Basketball')) AS basketball_ticket_sales ON fans.game_id = basketball_ticket_sales.game_id JOIN fans_merchandise ON fans.fan_id = fans_merchandise.fan_id;"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (volunteer_id INT, program_id INT, hours_served INT, volunteering_year INT); INSERT INTO volunteer_hours (volunteer_id, program_id, hours_served, volunteering_year) VALUES (1, 1, 50, 2021), (2, 1, 75, 2021), (3, 2, 100, 2021), (4, 2, 125, 2021);", "output": "SELECT volunteering_year, program_id, COUNT(DISTINCT volunteer_id) num_volunteers, SUM(hours_served) total_hours FROM volunteer_hours WHERE volunteering_year = YEAR(CURRENT_DATE) - 1 GROUP BY volunteering_year, program_id;"}
{"input": "\uc131\ud3c9\ub4f1 \ubc0f \uc800\uc704\ud5d8 \ud22c\uc790\ub97c \uc704\ud574 \ub178\ub825\ud558\ub294 \ub2e8\uccb4 \uac04\uc758 \ud30c\ud2b8\ub108\uc2ed \uc138\ubd80 \ub0b4\uc6a9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT PRIMARY KEY, strategy VARCHAR(255), risk_level VARCHAR(50), impact_score INT, esg_rating VARCHAR(50));CREATE TABLE organizations (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sector VARCHAR(255));CREATE TABLE partnerships (id INT PRIMARY KEY, investment_id INT, organization_id INT, start_date DATE, end_date DATE);CREATE VIEW gender_equality_organizations AS SELECT * FROM organizations WHERE sector = 'Gender equality';CREATE VIEW low_risk_investments AS SELECT * FROM investments WHERE risk_level = 'Low';", "output": "SELECT i.strategy, i.risk_level, i.impact_score, i.esg_rating, o.name, o.location, o.sector, p.start_date, p.end_date FROM partnerships p JOIN low_risk_investments lri ON p.investment_id = lri.id JOIN gender_equality_organizations geo ON p.organization_id = geo.id JOIN investments i ON lri.id = i.id JOIN organizations o ON geo.id = o.id;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ub274\uc695\uc5d0 \uc704\uce58\ud55c \ub808\uc2a4\ud1a0\ub791\uc5d0 \uc81c\ud488\uc744 \uc81c\uacf5\ud558\ub294 \uacf5\uae09\uc5c5\uccb4\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (restaurant_id INT, restaurant_name VARCHAR(50), location VARCHAR(50)); INSERT INTO Restaurants (restaurant_id, restaurant_name, location) VALUES (1, 'In-N-Out Burger', 'California'), (2, 'Shake Shack', 'New York'), (3, 'Five Guys', 'California'), (4, 'Chipotle', 'New York'); CREATE TABLE Supplies (supplier_id INT, restaurant_id INT, supplier_name VARCHAR(50)); INSERT INTO Supplies (supplier_id, restaurant_id, supplier_name) VALUES (1, 1, 'Organic Valley'), (2, 2, 'Tyson Foods'), (3, 3, 'Earthbound Farms'), (4, 4, 'Smithfield Foods');", "output": "SELECT supplier_name FROM Supplies S1 WHERE restaurant_id IN (SELECT restaurant_id FROM Restaurants WHERE location = 'California') INTERSECT SELECT supplier_name FROM Supplies S2 WHERE restaurant_id IN (SELECT restaurant_id FROM Restaurants WHERE location = 'New York');"}
{"input": " 2020\ub144 \uc9c0\uc5ed\ubcc4 \uad70\uc7a5\ube44 \ud310\ub9e4\ub7c9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE military_sales (id INT, year INT, region VARCHAR(50), value FLOAT); INSERT INTO military_sales (id, year, region, value) VALUES (1, 2020, 'North America', 5000000), (2, 2020, 'Europe', 6000000), (3, 2020, 'Asia', 7000000), (4, 2020, 'Africa', 4000000), (5, 2020, 'South America', 3000000);", "output": "SELECT region, AVG(value) FROM military_sales WHERE year = 2020 GROUP BY region;"}
{"input": " \uc8fc\ud0dd \uad6c\uc785 \ub2a5\ub825 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \ub3c4\uc2dc\uc640 \uac00\uc7a5 \ub0ae\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE housing_affordability (id INT, city VARCHAR(20), score FLOAT); INSERT INTO housing_affordability (id, city, score) VALUES (1, 'SF', 45.2), (2, 'NYC', 38.6), (3, 'LA', 51.1), (4, 'Vancouver', 60.0), (5, 'Montreal', 25.5), (6, 'Toronto', 32.3);", "output": "SELECT city, score FROM housing_affordability ORDER BY score DESC, city LIMIT 1;"}
{"input": " \uc5f0\ub839\ubcc4 \uac10\uc5fc\ub960\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE infections (age INT, cases INT);", "output": "SELECT age_groups.age, 100.0*infections.cases/population.population FROM infections JOIN age_groups ON infections.age = age_groups.age JOIN population ON age_groups.age = population.age;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uc720\ud615\ubcc4 \uad70\uc0ac\uae30\uc9c0\uac00 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE MilitaryBases (BaseID INT, BaseType VARCHAR(255), BaseName VARCHAR(255), Country VARCHAR(255));", "output": "SELECT Country, BaseType, COUNT(*) as BaseCount FROM MilitaryBases GROUP BY Country, BaseType;"}
{"input": " \ubaa8\ub4e0 \uc5b4\uc885\uc5d0 \ub300\ud574 \uc218\uc6a9 \ubc00\ub3c4\uac00 50 \uc774\uc0c1\uc778 \ub18d\uc7a5\uc758 \ucd5c\uc18c \uc0b0\uc18c \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farm (FarmID int, FarmName varchar(50), OxygenLevel numeric); INSERT INTO Farm (FarmID, FarmName, OxygenLevel) VALUES (1, 'Farm A', 7); INSERT INTO Farm (FarmID, FarmName, OxygenLevel) VALUES (2, 'Farm B', 6); CREATE TABLE FishStock (FishStockID int, FishSpecies varchar(50), FarmID int, StockingDensity numeric); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, StockingDensity) VALUES (1, 'Tilapia', 1, 25); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, StockingDensity) VALUES (2, 'Tilapia', 2, 30); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, StockingDensity) VALUES (3, 'Salmon', 1, 55);", "output": "SELECT MIN(OxygenLevel) FROM Farm WHERE FarmID IN (SELECT FarmID FROM FishStock WHERE StockingDensity > 50 GROUP BY FarmID HAVING COUNT(DISTINCT FishSpecies) > 1);"}
{"input": " 'Chicago Gazette' \ub610\ub294 'Miami Herald'\uc5d0 \uc628\ub77c\uc778 \ub274\uc2a4\ub97c \uc120\ud638\ud558\ub294 \ub3c5\uc790\uc758 \uc774\ub984\uacfc \uc5f0\ub839\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CG_Online(id INT, name VARCHAR(20), age INT, preference VARCHAR(10));CREATE TABLE MH_Online(id INT, name VARCHAR(20), age INT, preference VARCHAR(10));", "output": "SELECT cg.name, cg.age FROM CG_Online cg WHERE cg.preference = 'online' UNION SELECT mh.name, mh.age FROM MH_Online mh WHERE mh.preference = 'online';"}
{"input": " '\uc778\ub3c4' \ucd9c\uc2e0\uc758 \uc120\uc7a5\uacfc \uad6d\uc801, \uadf8\ub4e4\uc774 \uc9c0\ud718\ud55c \uc120\ubc15\uc758 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE captain(captain_id INT, name VARCHAR(255), years_of_experience INT, nationality VARCHAR(255)); CREATE TABLE captain_vessel(captain_id INT, vessel_id INT); CREATE TABLE vessel(vessel_id INT, name VARCHAR(255), flag VARCHAR(255)); INSERT INTO captain VALUES (1, 'Rajesh Patel', 15, 'India'), (2, 'Aisha Khan', 20, 'Pakistan'), (3, 'John Smith', 25, 'United States'); INSERT INTO captain_vessel VALUES (1, 1), (2, 2), (3, 3); INSERT INTO vessel VALUES (1, 'Sea Giant', 'India'), (2, 'Ocean Titan', 'United States'), (3, 'Marine Mammoth', 'United States');", "output": "SELECT c.name AS captain_name, c.nationality, COUNT(cv.vessel_id) AS number_of_vessels FROM captain c JOIN captain_vessel cv ON c.captain_id = cv.captain_id JOIN vessel v ON cv.vessel_id = v.vessel_id WHERE c.nationality = 'India' GROUP BY c.captain_id;"}
{"input": " \uc77c\uc790\ub9ac\ub97c \uc81c\uc548\ubc1b\uc740 \uc18c\uc218 \uc778\uc885 \uadf8\ub8f9\uc758 \ud6c4\ubcf4\uc790 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE candidate_demographics (id INT, candidate_id INT, race VARCHAR(255), offered_job BOOLEAN); INSERT INTO candidate_demographics (id, candidate_id, race, offered_job) VALUES (1, 1001, 'Hispanic', true), (2, 1002, 'African American', false), (3, 1003, 'Asian', true), (4, 1004, 'Hispanic', false);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM candidate_demographics WHERE race IN ('Hispanic', 'African American')) as percentage FROM candidate_demographics WHERE offered_job = true AND race IN ('Hispanic', 'African American');"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \ud559\uc0dd\uc774 \uc561\uc138\uc2a4\ud55c \uac1c\ubc29\ud615 \uad50\uc721\ud559 \ub9ac\uc18c\uc2a4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE resource_access (student_id INT, resource_id INT); INSERT INTO resource_access (student_id, resource_id) VALUES (1, 201), (1, 202), (2, 201), (3, 203), (3, 204), (4, 201);", "output": "SELECT resource_id, COUNT(*) OVER (PARTITION BY resource_id) AS students_accessed FROM resource_access ORDER BY students_accessed DESC;"}
{"input": " \uc6b0\ub9ac \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\ub294 \uc544\uc2dc\uc544 \ucd9c\uc2e0 \uc544\ud2f0\uc2a4\ud2b8\uac00 \uba87 \uba85\uc774\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE Artists (ArtistID INT, Name VARCHAR(255), Nationality VARCHAR(255), Genre VARCHAR(255)); INSERT INTO Artists VALUES (8, 'Agnez Mo', 'Indonesian', 'Pop',); INSERT INTO Artists VALUES (9, 'Wang Leehom', 'Taiwanese-American', 'Mandopop',);", "output": "SELECT COUNT(*) FROM Artists WHERE Nationality = 'Asian';"}
{"input": " \uac01 \uad6d\uac00\uc5d0\ub294 \uba87 \uac1c\uc758 \ucc44\uad74 \ud604\uc7a5\uc774 \uc788\uc73c\uba70, \ud574\ub2f9 \ucc44\uad74 \ud604\uc7a5\uc758 \uc9c1\uc6d0 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, country_name VARCHAR(255)); INSERT INTO countries (id, country_name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'); CREATE TABLE mining_sites (id INT, site_name VARCHAR(255), country_id INT); INSERT INTO mining_sites (id, site_name, country_id) VALUES (1, 'Site A', 1), (2, 'Site B', 1), (3, 'Site C', 2), (4, 'Site D', 3); CREATE TABLE employees (id INT, mining_site_id INT, role VARCHAR(255)); INSERT INTO employees (id, mining_site_id, role) VALUES (1, 1, 'Employee'), (2, 1, 'Contractor'), (3, 2, 'Employee'), (4, 3, 'Employee'), (5, 4, 'Employee');", "output": "SELECT co.country_name, COUNT(ms.id) as mining_sites_count, COUNT(e.id) as total_employees FROM countries co INNER JOIN mining_sites ms ON co.id = ms.country_id INNER JOIN employees e ON ms.id = e.mining_site_id GROUP BY co.country_name;"}
{"input": " IT \ubd80\uc11c\uc5d0\uc11c 3\ub144 \uc774\uc0c1 \uadfc\ubb34\ud558\uace0 \ucd5c\uadfc 1\ub144 \ub3d9\uc548 \uc2b9\uc9c4\ud558\uc9c0 \ubabb\ud55c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(25), Salary DECIMAL(10, 2), HireDate DATE, PromotionDate DATE); INSERT INTO Employees (EmployeeID, Department, Salary, HireDate, PromotionDate) VALUES (1, 'IT', 60000, '2018-01-01', '2021-01-01'), (2, 'Marketing', 70000, '2019-06-15', NULL), (3, 'IT', 65000, '2019-09-01', NULL), (4, 'HR', 75000, '2016-05-01', '2021-05-01');", "output": "SELECT Department, AVG(Salary) FROM Employees WHERE Department = 'IT' AND DATEDIFF(year, HireDate, GETDATE()) > 3 AND PromotionDate IS NULL GROUP BY Department;"}
{"input": "\uc124\uba85 \uac00\ub2a5\uc131 \uc810\uc218\uac00 85\uc810\uc744 \ub118\ub294 AI \ubaa8\ub378\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE AIModels (model_id INT, model_name VARCHAR(50), explainability_score DECIMAL(3,2)); INSERT INTO AIModels (model_id, model_name, explainability_score) VALUES (1, 'ModelA', 82.00), (2, 'ModelB', 88.50), (3, 'ModelC', 76.75), (4, 'ModelD', 91.00), (5, 'ModelE', 87.00);", "output": "SELECT model_name FROM AIModels WHERE explainability_score > 85;"}
{"input": " \uac01 \uac74\uc124 \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\uc758 \ud3c9\uade0 \ud504\ub85c\uc81d\ud2b8 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, name VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO project (id, name, start_date, end_date) VALUES (1, 'Sample Project 1', '2020-01-01', '2020-06-01'), (2, 'Sample Project 2', '2019-08-15', '2020-02-28');", "output": "SELECT project_type, AVG(DATEDIFF(end_date, start_date)) as avg_project_duration FROM (SELECT id, name, start_date, end_date, 'Residential' as project_type FROM project WHERE name LIKE '%Residential%' UNION ALL SELECT id, name, start_date, end_date, 'Commercial' as project_type FROM project WHERE name LIKE '%Commercial%') as subquery GROUP BY project_type;"}
{"input": " \ud574\uc548 \ub3c4\uc2dc\uc5d0 \uc704\uce58\ud55c \ub808\uc2a4\ud1a0\ub791\uc5d0 \uc7ac\ub8cc\ub97c \uacf5\uae09\ud55c \uc801\uc774 \uc5c6\ub294 \uc720\uae30\ub18d \uacf5\uae09\uc5c5\uccb4\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (supplier_id INT, organic BOOLEAN); CREATE TABLE ingredients (ingredient_id INT, supplier_id INT, restaurant_id INT, is_organic BOOLEAN); CREATE TABLE restaurants (restaurant_id INT, city VARCHAR(255)); INSERT INTO suppliers VALUES (1, true); INSERT INTO suppliers VALUES (2, false); INSERT INTO ingredients VALUES (1, 1, 1, true); INSERT INTO ingredients VALUES (2, 1, 2, false); INSERT INTO ingredients VALUES (3, 2, 3, false); INSERT INTO restaurants VALUES (1, 'Miami'); INSERT INTO restaurants VALUES (2, 'Atlanta'); INSERT INTO restaurants VALUES (3, 'Phoenix');", "output": "SELECT s.supplier_id FROM suppliers s LEFT JOIN ingredients i ON s.supplier_id = i.supplier_id RIGHT JOIN restaurants r ON i.restaurant_id = r.restaurant_id WHERE s.organic = true AND r.city NOT LIKE '%coast%' GROUP BY s.supplier_id HAVING COUNT(i.ingredient_id) = 0;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\ub2f9 \ud3c9\uade0 \uc608\uc0b0\uc740 \uac00\uc7a5 \ub192\uc740 \ud3c9\uade0\uc73c\ub85c \uc815\ub82c\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE renewable_energy (id INT, name VARCHAR(255), country VARCHAR(255), technology VARCHAR(255), projects INT, budget FLOAT); INSERT INTO renewable_energy (id, name, country, technology, projects, budget) VALUES (1, 'Solar Farm 1', 'USA', 'solar', 5, 5000000.0); INSERT INTO renewable_energy (id, name, country, technology, projects, budget) VALUES (2, 'Wind Farm 2', 'USA', 'wind', 8, 12000000.0); INSERT INTO renewable_energy (id, name, country, technology, projects, budget) VALUES (3, 'Geothermal Plant 3', 'Canada', 'geothermal', 3, 7500000.0); INSERT INTO renewable_energy (id, name, country, technology, projects, budget) VALUES (4, 'Hydroelectric Dam 4', 'Canada', 'hydroelectric', 6, 18000000.0);", "output": "SELECT country, AVG(budget/projects) as avg_budget_per_project FROM renewable_energy GROUP BY country ORDER BY avg_budget_per_project DESC;"}
{"input": " \ud50c\ub85c\ub9ac\ub2e4 \uc8fc\uc758 \uac01 \ud5c8\uac00 \uc720\ud615\uc5d0 \ub300\ud574 1\uc6d4\ubd80\ud130 6\uc6d4\uae4c\uc9c0 \ud5c8\uac00 \uc2e0\uccad \uac74\uc218\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE permit_applications (application_id INT, permit_type TEXT, month TEXT, state TEXT, applications INT); INSERT INTO permit_applications (application_id, permit_type, month, state, applications) VALUES (1, 'Residential', 'January', 'Florida', 500), (2, 'Residential', 'June', 'Florida', 700), (3, 'Commercial', 'January', 'Florida', 1000), (4, 'Commercial', 'June', 'Florida', 1200);", "output": "SELECT permit_type, state, PERCENT_RANK() OVER (PARTITION BY permit_type ORDER BY applications) FROM permit_applications WHERE state = 'Florida' AND month IN ('January', 'June');"}
{"input": " \ud559\uad70\ubcc4\ub85c \ubd84\ub958\ud55c \uac01 \ud559\ub144 \uc218\uc900\uc758 \ud559\uc0dd\ub4e4\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_scores (score_id INT, district_id INT, grade_level INT, mental_health_score INT);", "output": "SELECT s.grade_level, sd.district_name, AVG(mhs.mental_health_score) FROM mental_health_scores mhs INNER JOIN students s ON mhs.student_id = s.student_id INNER JOIN school_districts sd ON s.district_id = sd.district_id GROUP BY s.grade_level, sd.district_name;"}
{"input": " \uc720\ub7fd\uc758 \uc218\ub825 \ubc1c\uc804 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\uc18c \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hydroelectric_projects (id INT, name VARCHAR(255), location VARCHAR(255), rating FLOAT);", "output": "SELECT MIN(rating) FROM hydroelectric_projects WHERE location LIKE '%Europe%';"}
{"input": " \uac1c\uc778 \ud2b8\ub808\uc774\ub2dd \uc138\uc158\uc774 \ud3ec\ud568\ub41c \uba64\ubc84\uc2ed\uc744 \ubcf4\uc720\ud558\uace0 \ud558\ub8e8\uc5d0 20,000\uac78\uc74c \uc774\uc0c1\uc744 \ub2ec\uc131\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE membership_features (id INT, user_id INT, feature VARCHAR(20)); INSERT INTO membership_features (id, user_id, feature) VALUES (1, 1, 'Personal Training'), (2, 2, 'Group Classes'), (3, 3, 'Personal Training'); CREATE TABLE daily_steps (id INT, user_id INT, steps INT, date DATE); INSERT INTO daily_steps (id, user_id, steps, date) VALUES (1, 1, 25000, '2022-01-01'), (2, 2, 15000, '2022-01-05'), (3, 3, 18000, '2022-01-03');", "output": "SELECT COUNT(*) FROM (SELECT user_id FROM membership_features m JOIN daily_steps d ON m.user_id = d.user_id WHERE m.feature = 'Personal Training' AND d.steps > 20000) subquery;"}
{"input": " \uc791\ub144\uc5d0 \uac01 \uc8fc\uc5d0\uc11c \uba87 \uac74\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18\uc774 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (ViolationID INT, State VARCHAR(255), ViolationDate DATE); INSERT INTO MentalHealthParity (ViolationID, State, ViolationDate) VALUES (1, 'California', '2022-01-01'), (2, 'New York', '2022-02-01'), (3, 'Florida', '2022-03-01');", "output": "SELECT State, COUNT(*) as ViolationCount FROM MentalHealthParity WHERE YEAR(ViolationDate) = YEAR(CURRENT_DATE()) - 1 GROUP BY State;"}
{"input": " \ub124\uc624\ub514\ubbb4\uacfc \ud14c\ub974\ube00 \uc2dc\uc7a5 \ub3d9\ud5a5 \ube44\uad50", "context": "CREATE TABLE market_trends (year INT, element VARCHAR(10), price FLOAT); INSERT INTO market_trends VALUES (2015, 'Neodymium', 50), (2016, 'Neodymium', 55), (2015, 'Terbium', 200), (2016, 'Terbium', 250);", "output": "SELECT element, price FROM market_trends WHERE year = 2015 UNION SELECT element, price FROM market_trends WHERE year = 2016 ORDER BY element, price;"}
{"input": " \uacbd\uc81c\uc131 \uc810\uc218\uac00 80\uc810 \uc774\uc0c1\uc778 \uac01 \ucee4\ubba4\ub2c8\ud2f0 \uc720\ud615\uc758 \ubd80\ub3d9\uc0b0 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE property (id INT PRIMARY KEY, community_type VARCHAR(20), affordability_score INT);", "output": "SELECT community_type, COUNT(*) FROM property WHERE affordability_score > 80 GROUP BY community_type;"}
{"input": " \uc9c0\ub09c 4\ubd84\uae30 \ub3d9\uc548 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc720\uc815\uc744 \ud45c\uc2dc\ud558\ub294 'top_producers'\ub77c\ub294 \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE TABLE wells (well_name TEXT, production_q1 FLOAT, production_q2 FLOAT, production_q3 FLOAT, production_q4 FLOAT); INSERT INTO wells (well_name, production_q1, production_q2, production_q3, production_q4) VALUES ('Well A', 1000, 1200, 1500, 1700), ('Well B', 1100, 1350, 1600, 1850), ('Well C', 1200, 1400, 1700, 2000), ('Well D', 1300, 1500, 1800, 2100);", "output": "CREATE VIEW top_producers AS SELECT well_name, production_q1 + production_q2 + production_q3 + production_q4 as total_production FROM wells ORDER BY total_production DESC LIMIT 3;"}
{"input": " '2000-01-01' \uc774\uc804\uc5d0 \ubc1c\uc0ac\ub41c \uc6b0\uc8fc\uc120\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE spacecraft (id INT, name VARCHAR(255), launch_date DATE); INSERT INTO spacecraft (id, name, launch_date) VALUES (1, 'Voyager 1', '1977-09-05'), (2, 'Voyager 2', '1977-08-20'), (3, 'Spirit', '2004-01-04');", "output": "SELECT name FROM spacecraft WHERE launch_date < '2000-01-01' ORDER BY launch_date;"}
{"input": " \uac00\uaca9\uc774 9.99\uc778 \uc0c8 \uba54\ub274 \ud56d\ubaa9 'Vegan Tacos'\ub97c \uc0bd\uc785\ud558\uace0 'Eco-Friendly Eats' \ub808\uc2a4\ud1a0\ub791\uc5d0 'Vegan' \uce74\ud14c\uace0\ub9ac\uac00 \uc544\uc9c1 \uc5c6\uc73c\uba74 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu (menu_id INT, item_name VARCHAR(50), price DECIMAL(5,2), category VARCHAR(20), restaurant_id INT);", "output": "INSERT INTO menu (menu_id, item_name, price, category, restaurant_id) SELECT 5, 'Vegan Tacos', 9.99, 'Vegan', 3 FROM (SELECT 1 FROM menu WHERE item_name = 'Vegan Tacos' AND restaurant_id = 3) AS dummy WHERE NOT EXISTS (SELECT 1 FROM menu WHERE item_name = 'Vegan Tacos' AND restaurant_id = 3);"}
{"input": " \ubbf8\uc220 \uc804\uc2dc \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Exhibits (exhibit_id INT, city VARCHAR(50), tickets_sold INT, price DECIMAL(5,2)); INSERT INTO Exhibits (exhibit_id, city, tickets_sold, price) VALUES (1, 'New York', 500, 25.99), (2, 'Los Angeles', 700, 22.49), (3, 'Chicago', 350, 30.00);", "output": "SELECT city, SUM(tickets_sold * price) as revenue FROM Exhibits GROUP BY city ORDER BY revenue DESC LIMIT 5;"}
{"input": " \ud30c\ub9ac \uc624\ud1a0\uc1fc\uc5d0 \uc804\uc2dc\ub41c \ubaa8\ub4e0 \ucc28\ub7c9\uacfc \uc548\uc804 \ub4f1\uae09\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE AutoShows (Id INT, Name VARCHAR(100), Location VARCHAR(100), StartDate DATE, EndDate DATE); CREATE TABLE Exhibits (Id INT, AutoShowId INT, VehicleId INT, SafetyRating FLOAT); CREATE TABLE Vehicles (Id INT, Name VARCHAR(100), Type VARCHAR(50)); INSERT INTO AutoShows (Id, Name, Location, StartDate, EndDate) VALUES (6, 'Paris Auto Show', 'Paris', '2022-01-10', '2022-01-18'); INSERT INTO Exhibits (Id, AutoShowId, VehicleId, SafetyRating) VALUES (11, 6, 3, 4.6), (12, 6, 4, 5.0); INSERT INTO Vehicles (Id, Name, Type) VALUES (3, 'Renault Zoe', 'Electric'), (4, 'Peugeot 208', 'Gasoline');", "output": "SELECT Vehicles.Name, Exhibits.SafetyRating FROM Exhibits INNER JOIN Vehicles ON Exhibits.VehicleId = Vehicles.Id INNER JOIN AutoShows ON Exhibits.AutoShowId = AutoShows.Id WHERE AutoShows.Name = 'Paris Auto Show';"}
{"input": " 2021\ub144 '\uc560\ud2c0\ub79c\ud0c0' \ud654\uc7ac\uc0ac\uace0 \ud3c9\uade0 \ub300\uc751\uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE cities (id INT, name VARCHAR(255)); CREATE TABLE emergency_responses (id INT, city_id INT, year INT, response_time INT); INSERT INTO cities (id, name) VALUES (1, 'Atlanta'); INSERT INTO emergency_responses (id, city_id, year, response_time) VALUES (1, 1, 2021, 9), (2, 1, 2021, 11);", "output": "SELECT AVG(response_time) FROM emergency_responses WHERE city_id = (SELECT id FROM cities WHERE name = 'Atlanta') AND year = 2021 AND type = 'Fire';"}
{"input": " \ubaa8\ub4e0 \uac8c\uc784\uc758 \ucd1d \ub808\ubca8 \uc218\uc640 \ud568\uaed8 \ub808\ubca8\uc774 \uac00\uc7a5 \ub9ce\uc740 \uac8c\uc784\uc758 \uc774\ub984\uacfc \uc7a5\ub974\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GameDesign (GameID INT, Name VARCHAR(50), Genre VARCHAR(20), NumLevels INT); INSERT INTO GameDesign (GameID, Name, Genre, NumLevels) VALUES (1, 'VR Racer', 'Racing', 10), (2, 'Solar System', 'Simulation', 1), (3, 'VR Puzzler', 'Puzzle', 15), (4, 'Space Shooter', 'Shooter', 20), (5, 'Mystery Game', 'Adventure', 25);", "output": "SELECT Name, Genre FROM GameDesign WHERE NumLevels = (SELECT MAX(NumLevels) FROM GameDesign) UNION ALL SELECT 'Total Levels', CAST(SUM(NumLevels) as VARCHAR(10)) FROM GameDesign;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uad6d\uac00\ubcc4 \uc6d4\ud3c9\uade0 AI \uc548\uc804 \uc0ac\uace0 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ai_safety_incidents (incident_id INT, incident_date DATE, incident_country TEXT); INSERT INTO ai_safety_incidents (incident_id, incident_date, incident_country) VALUES (1, '2021-03-15', 'USA'), (2, '2020-12-21', 'Canada'), (3, '2021-08-01', 'UK'), (4, '2020-01-10', 'Mexico'), (5, '2021-06-12', 'France'), (6, '2021-02-18', 'USA'), (7, '2020-11-27', 'Canada'), (8, '2021-07-04', 'UK'), (9, '2020-02-05', 'Mexico'), (10, '2021-05-15', 'France');", "output": "SELECT incident_country, EXTRACT(MONTH FROM incident_date) as month, AVG(EXTRACT(DAY FROM incident_date)) as avg_day, COUNT(*) as num_incidents FROM ai_safety_incidents GROUP BY incident_country, month;"}
{"input": " '\ub2e4\uce74\ub974' \ud56d\uad6c\uc5d0\uc11c \ucde8\uae09\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ucd5c\uc18c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name VARCHAR(20)); INSERT INTO ports (id, name) VALUES (1, 'Dakar'), (2, 'Abidjan'); CREATE TABLE containers (id INT, weight INT, port_id INT); INSERT INTO containers (id, weight, port_id) VALUES (1, 1000, 1), (2, 500, 1), (3, 2000, 2), (4, 2500, 2), (5, 1500, 1);", "output": "SELECT MIN(weight) FROM containers WHERE port_id = (SELECT id FROM ports WHERE name = 'Dakar');"}
{"input": " '\uc815\ubd80'\uc640 '\uc5b8\ub860' \ub178\uc870\uc758 \ucd1d \uc870\ud569\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE government_union (id INT, name VARCHAR, dob DATE); INSERT INTO government_union (id, name, dob) VALUES (1, 'Quinn', '1995-01-05'); CREATE TABLE media_union (id INT, name VARCHAR, dob DATE); INSERT INTO media_union (id, name, dob) VALUES (1, 'Rachel', '1998-09-30');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM government_union) UNION (SELECT * FROM media_union) ) AS all_unions;"}
{"input": " \uc5f0\ub3c4\ubcc4 \ucca9\ubcf4\ud65c\ub3d9 \uc608\uc0b0\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE IntelligenceBudget (id INT PRIMARY KEY, year INT, budget DECIMAL(10,2)); INSERT INTO IntelligenceBudget (id, year, budget) VALUES (1, 2018, 5000000.00), (2, 2019, 5500000.00), (3, 2020, 6000000.00);", "output": "SELECT YEAR(budget_date) as year, MAX(budget) as max_budget, MIN(budget) as min_budget FROM IntelligenceBudget GROUP BY YEAR(budget_date);"}
{"input": "\uc9c0\ub09c\uc8fc \ub274\uc695\ud56d\uc5d0 \ucee8\ud14c\uc774\ub108\ub97c \uc120\uc801\ud55c \uc120\ubc15\uc758 \uc774\ub984\uacfc \uae30\uad6d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name TEXT); INSERT INTO ports (id, name) VALUES (1, 'Port of New York'); CREATE TABLE vessel_arrivals (id INT, port_id INT, vessel_id INT, arrival_date DATE); INSERT INTO vessel_arrivals (id, port_id, vessel_id, arrival_date) VALUES (1, 1, 1, '2022-01-01'), (2, 1, 2, '2022-01-05'); CREATE TABLE vessels (id INT, name TEXT, flag_country TEXT); INSERT INTO vessels (id, name, flag_country) VALUES (1, 'Vessel A', 'USA'), (2, 'Vessel B', 'Canada'); CREATE TABLE container_events (id INT, port_id INT, vessel_id INT, event_date DATE, event_type TEXT, quantity INT); INSERT INTO container_events (id, port_id, vessel_id, event_date, event_type, quantity) VALUES (1, 1, 1, '2022-01-01', 'load', 500), (2, 1, 1, '2022-01-03', 'unload', 300);", "output": "SELECT v.name, v.flag_country FROM vessels v JOIN vessel_arrivals va ON v.id = va.vessel_id JOIN container_events ce ON v.id = ce.vessel_id WHERE va.port_id = (SELECT id FROM ports WHERE name = 'Port of New York') AND ce.event_date BETWEEN DATEADD(day, -7, CURRENT_DATE) AND CURRENT_DATE AND ce.event_type = 'load';"}
{"input": " \uce90\ub098\ub2e4\uc758 \uc2a4\ud2b8\ub9bc\uc744 \uc81c\uc678\ud55c \uc7ac\uc988 \ubc0f \ub85d \ub178\ub798\uc758 \ucd1d \uc2a4\ud2b8\ub9bc \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE genres (id INT, name VARCHAR(255), type VARCHAR(255)); CREATE TABLE streams (id INT, song_id INT, user_id INT, location VARCHAR(255), timestamp TIMESTAMP); INSERT INTO genres (id, name, type) VALUES (1, 'Jazz', 'Music'), (2, 'Rock', 'Music'); INSERT INTO streams (id, song_id, user_id, location, timestamp) VALUES (1, 1, 1, 'Canada', NOW()), (2, 2, 2, 'Mexico', NOW()); CREATE VIEW jazz_rock_songs AS SELECT song_id FROM genres WHERE type IN ('Jazz', 'Rock');", "output": "SELECT COUNT(*) FROM streams WHERE song_id IN (SELECT song_id FROM jazz_rock_songs) AND location != 'Canada';"}
{"input": "\ud2b9\uc815 \ub124\ud2b8\uc6cc\ud06c \uc81c\uacf5\uc5c5\uccb4\uc758 \ucd1d \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, network_provider VARCHAR(50)); CREATE TABLE broadband_subscribers (subscriber_id INT, network_provider VARCHAR(50));", "output": "SELECT 'Mobile' AS service, COUNT(DISTINCT subscriber_id) FROM mobile_subscribers WHERE network_provider = 'XYZ' UNION ALL SELECT 'Broadband', COUNT(DISTINCT subscriber_id) FROM broadband_subscribers WHERE network_provider = 'XYZ';"}
{"input": " \uac01 \ucc3d\uc791\uc790 \uc8fc\uc18c\uc5d0 \ub300\ud574 2018\ub144\uc5d0 \ucc98\uc74c \uc0dd\uc131\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(255), creator_address VARCHAR(42), creation_date DATE); INSERT INTO smart_contracts (contract_id, name, creator_address, creation_date) VALUES (1, 'CryptoKitties', '0x1234567890123456789012345678901234567890', '2017-12-03'), (2, 'Decentraland', '0x1234567890123456789012345678901234567890', '2018-02-01'), (3, 'Aave', '0x987654321098765432109876543210987654321', '2018-03-15');", "output": "SELECT contract_id, name, creator_address, creation_date, MIN(creation_date) OVER (PARTITION BY creator_address) AS first_contract_created_in_2018 FROM smart_contracts WHERE EXTRACT(YEAR FROM creation_date) = 2018;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \ucd9c\ucc98\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uc7ac\ub8cc\uac00 \ud3ec\ud568\ub41c \uba54\ub274 \ud56d\ubaa9\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MenuItems (menu_item_id INT, menu_item_name VARCHAR(50), sustainable_source BOOLEAN); INSERT INTO MenuItems (menu_item_id, menu_item_name, sustainable_source) VALUES (1, 'Grilled Chicken Sandwich', TRUE), (2, 'French Fries', FALSE), (3, 'Grilled Salmon Salad', TRUE);", "output": "SELECT COUNT(*) as num_sustainable_items FROM MenuItems WHERE sustainable_source = TRUE;"}
{"input": " 'Veggie Delight' \uba54\ub274 \ud56d\ubaa9\uc5d0 \uc0ac\uc6a9\ub41c \uc7ac\ub8cc\uc758 \uc7ac\uace0 \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \uc218\ub7c9\uc744 5\ub9cc\ud07c \uc904\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE inventory (inventory_id INT PRIMARY KEY, ingredient_name VARCHAR(255), quantity INT, reorder_threshold INT); CREATE TABLE menu_ingredients (menu_id INT, ingredient_name VARCHAR(255), quantity INT, PRIMARY KEY (menu_id, ingredient_name), FOREIGN KEY (ingredient_name) REFERENCES inventory(ingredient_name));", "output": "UPDATE inventory SET quantity = quantity - 5 WHERE inventory.ingredient_name IN (SELECT menu_ingredients.ingredient_name FROM menu_ingredients WHERE menu_ingredients.menu_id = (SELECT menu_id FROM menu_items WHERE item_name = 'Veggie Delight'));"}
{"input": " 2018\ub144 \uc774\ud6c4 \ub18d\uc5c5\uae30\uc220 \uc0b0\uc5c5\uc5d0\uc11c \uc544\ud504\ub9ac\uce74 \uae30\uc5c5\uac00\uac00 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc758 \ud3c9\uade0 \ud22c\uc790 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT PRIMARY KEY, name VARCHAR(100), founding_year INT, industry VARCHAR(50), diversity_score FLOAT); CREATE TABLE investment (id INT PRIMARY KEY, company_id INT, round_type VARCHAR(50), invested_amount INT, investment_date DATE); CREATE TABLE founder (id INT PRIMARY KEY, company_id INT, founder_name VARCHAR(100), gender VARCHAR(10), race VARCHAR(50));", "output": "SELECT AVG(investment.invested_amount) FROM company INNER JOIN investment ON company.id = investment.company_id INNER JOIN founder ON company.id = founder.company_id WHERE company.founding_year >= 2018 AND company.industry = 'AgriTech' AND founder.race = 'African';"}
{"input": " \ub3d9\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc774 \uc8fc\ubb38\ud55c \uce7c\ub85c\ub9ac \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub514\uc800\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurants (restaurant_id INT, name TEXT, region TEXT); INSERT INTO restaurants (restaurant_id, name, region) VALUES (1, 'Big Burger', 'East'), (2, 'Veggies R Us', 'Midwest'), (3, 'Tasty Bites', 'West'); CREATE TABLE orders (order_id INT, dish TEXT, customer_id INT, restaurant_id INT); INSERT INTO orders (order_id, dish, customer_id, restaurant_id) VALUES (1, 'Veggie Delight', 5, 2), (2, 'Cheeseburger', 6, 1), (3, 'Tofu Stir Fry', 7, 2), (4, 'BBQ Ribs', 8, 1), (5, 'Chocolate Mousse', 9, 1); CREATE TABLE menu_items (item_id INT, name TEXT, calories INT, is_dessert BOOLEAN); INSERT INTO menu_items (item_id, name, calories, is_dessert) VALUES (1, 'Grilled Chicken Salad', 350, false), (2, 'Beef Burger', 600, false), (3, 'Veggie Wrap', 500, false), (4, 'Fish Tacos', 400, false), (5, 'Chocolate Mousse', 800, true);", "output": "SELECT m.name, m.calories FROM orders o JOIN restaurants r ON o.restaurant_id = r.restaurant_id JOIN menu_items m ON o.dish = m.name WHERE r.region = 'East' AND m.is_dessert = true GROUP BY m.name ORDER BY SUM(m.calories) DESC LIMIT 2;"}
{"input": " FC \ubc14\ub974\uc140\ub85c\ub098\uc758 \ucd1d \uacbd\uae30 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (id INT, name TEXT, city TEXT, league TEXT); INSERT INTO teams (id, name, city, league) VALUES (3, 'FC Barcelona', 'Barcelona', 'La Liga'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT);", "output": "SELECT COUNT(*) FROM games WHERE home_team_id = (SELECT id FROM teams WHERE name = 'FC Barcelona' AND city = 'Barcelona') OR away_team_id = (SELECT id FROM teams WHERE name = 'FC Barcelona' AND city = 'Barcelona');"}
{"input": " 2021\ub144 \ud0dc\ud3c9\uc591\uc5d0\uc11c \uc885\ub2f9 \ucd5c\ub300 \uc5b4\ud68d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FishCaught (year INT, species VARCHAR(50), ocean VARCHAR(50), quantity INT); INSERT INTO FishCaught (year, species, ocean, quantity) VALUES (2021, 'Tuna', 'Pacific Ocean', 700), (2021, 'Salmon', 'Pacific Ocean', 600), (2021, 'Cod', 'Pacific Ocean', 500), (2021, 'Sardines', 'Pacific Ocean', 800);", "output": "SELECT species, MAX(quantity) as max_quantity FROM FishCaught WHERE ocean = 'Pacific Ocean' AND year = 2021 GROUP BY species;"}
{"input": " '\ub124\ubc14\ub2e4'\uc640 '\uc560\ub9ac\uc870\ub098'\uc758 \uace0\uc720\ud55c \uc778\ud504\ub77c \uc720\ud615\uacfc \uac01\uac01\uc758 \ud45c\uc900 \uc124\uacc4 \ucf54\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Infrastructure (type TEXT, state TEXT, design_code TEXT); INSERT INTO Infrastructure (type, state, design_code) VALUES ('Bridges', 'Nevada', 'AASHTO LRFD'); INSERT INTO Infrastructure (type, state, design_code) VALUES ('Dams', 'Arizona', 'USBR Design Standards');", "output": "SELECT DISTINCT type, design_code FROM Infrastructure WHERE state IN ('Nevada', 'Arizona');"}
{"input": " \uc9c0\uc18d\uac00\ub2a5\uc131 \ub4f1\uae09\uc774 80\uc810 \uc774\uc0c1\uc774\uace0 \uc778\uad6c\uac00 500,000\uba85 \uc774\uc0c1\uc778 \ub3c4\uc2dc\uc5d0\uc11c \uc804\uccb4 \ud3c9\uade0 \ubd80\ub3d9\uc0b0 \uac00\uaca9\ubcf4\ub2e4 \ub192\uc740 \ubd80\ub3d9\uc0b0\uc758 \ucd1d \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT, name VARCHAR(255), country VARCHAR(255), population INT, sustainable_rating FLOAT); CREATE TABLE Property (id INT, city VARCHAR(255), price FLOAT);", "output": "SELECT City.name, SUM(Property.price) as total_price FROM City INNER JOIN Property ON City.name = Property.city WHERE City.sustainable_rating > 80 AND City.population > 500000 GROUP BY City.name HAVING SUM(Property.price) > (SELECT AVG(Property.price) FROM Property)"}
{"input": " 2019\ub144\uc5d0 \ucf00\ub0d0\uc5d0\uc11c\ub294 \uba87 \uba85\uc758 \ub18d\uc5c5\uc9c0\ub3c4 \ub2f4\ub2f9\uc790\uac00 \ud6c8\ub828\uc744 \ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE officer_training (id INT, officer_id INT, country VARCHAR(50), training_year INT, trained BOOLEAN); INSERT INTO officer_training (id, officer_id, country, training_year, trained) VALUES (1, 4001, 'Kenya', 2019, true), (2, 4002, 'Kenya', 2018, true);", "output": "SELECT COUNT(*) FROM officer_training WHERE country = 'Kenya' AND training_year = 2019 AND trained = true;"}
{"input": "\ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE country_emissions (country VARCHAR(50), co2_emissions DECIMAL(5,2)); INSERT INTO country_emissions (country, co2_emissions) VALUES ('Canada', 760.2), ('United States', 1892.4), ('China', 12656.3), ('India', 3201.9), ('Germany', 1032.8);", "output": "SELECT country, SUM(co2_emissions) OVER (PARTITION BY country ORDER BY country ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS total_emissions FROM country_emissions WHERE country IN (SELECT country FROM (SELECT country, RANK() OVER (ORDER BY co2_emissions DESC) AS rank FROM country_emissions) AS subquery WHERE rank <= 5);"}
{"input": " '\uc778\ub825\uac1c\ubc1c' \ubd80\uc11c\uc5d0\uc11c \uc5f0\ubd09\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c1\uc6d0\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Salary FLOAT); INSERT INTO Employees (EmployeeID, Name, Department, Salary) VALUES (1, 'John Doe', 'Workforce Development', 60000.00); INSERT INTO Employees (EmployeeID, Name, Department, Salary) VALUES (2, 'Jane Smith', 'Workforce Development', 65000.00);", "output": "SELECT Name FROM Employees WHERE Department = 'Workforce Development' AND Salary = (SELECT MAX(Salary) FROM Employees WHERE Department = 'Workforce Development');"}
{"input": " 2022\ub144 1\ubd84\uae30\uc640 2\ubd84\uae30\uc5d0 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubaa8\uae08\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists fundraising;CREATE TABLE if not exists fundraising.startups (id INT, name VARCHAR(100), quarter INT, funds DECIMAL(10,2));INSERT INTO fundraising.startups (id, name, quarter, funds) VALUES (1, 'StartupA', 1, 1500000.00), (2, 'StartupB', 2, 2000000.00), (3, 'StartupC', 1, 1000000.00), (4, 'StartupD', 2, 2500000.00);", "output": "SELECT quarter, SUM(funds) FROM fundraising.startups GROUP BY quarter;"}
{"input": " \uc544\ud504\uac00\ub2c8\uc2a4\ud0c4\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80\ub97c \ud55c \ud6c4\uc6d0\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE supporters (id INT, name TEXT, country TEXT, donation FLOAT); INSERT INTO supporters (id, name, country, donation) VALUES (1, 'John Doe', 'Afghanistan', 75.00), (2, 'Jane Smith', 'Iraq', 100.00), (3, 'Aisha Ahmed', 'Afghanistan', 150.00);", "output": "SELECT name, MAX(donation) FROM supporters WHERE country = 'Afghanistan';"}
{"input": " 2022\ub144 \uccad\uc18c\ub144 \ubc0f \uc2a4\ud3ec\uce20 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc790\uc6d0\ubd09\uc0ac\uc790\ub85c \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName VARCHAR(50)); INSERT INTO Volunteers (VolunteerID, VolunteerName) VALUES (1, 'Olivia Jones'), (2, 'Mason Lee'), (3, 'Ava Thompson'); CREATE TABLE VolunteerPrograms (VolunteerID INT, Program VARCHAR(50), VolunteerDate DATE); INSERT INTO VolunteerPrograms (VolunteerID, Program, VolunteerDate) VALUES (1, 'Youth', '2022-04-01'), (1, 'Sports', '2022-05-01'), (2, 'Youth', '2022-04-15'), (2, 'Sports', '2022-05-15'), (3, 'Youth', '2022-04-20'), (3, 'Arts and Culture', '2022-05-20');", "output": "SELECT DISTINCT VolunteerName FROM Volunteers v INNER JOIN VolunteerPrograms y ON v.VolunteerID = y.VolunteerID WHERE y.Program = 'Youth' AND v.VolunteerID IN (SELECT VolunteerID FROM VolunteerPrograms s WHERE s.Program = 'Sports');"}
{"input": " \uac01 \ub300\ud559\uc758 \uad50\uc218\uc9c4\uc740 \uc131\ubcc4\ub85c \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE college (college_name TEXT); INSERT INTO college (college_name) VALUES ('College of Science'), ('College of Arts'), ('College of Business'); CREATE TABLE faculty (faculty_id INTEGER, college_name TEXT, gender TEXT); INSERT INTO faculty (faculty_id, college_name, gender) VALUES (1, 'College of Science', 'Male'), (2, 'College of Science', 'Female'), (3, 'College of Arts', 'Non-binary'), (4, 'College of Business', 'Male'), (5, 'College of Science', 'Non-binary');", "output": "SELECT college_name, gender, COUNT(*) FROM faculty GROUP BY college_name, gender;"}
{"input": " \uc804\ub7b5 \uac8c\uc784\uc744 \uc81c\uc678\ud55c \uac01 \uac8c\uc784 \uc7a5\ub974\uc5d0 \ub300\ud574 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, name VARCHAR(20), hours_played INT); INSERT INTO players (id, name, hours_played) VALUES (1, 'David', 100), (2, 'Eve', 50), (3, 'Frank', 150), (4, 'Grace', 120), (5, 'Harrison', 80); CREATE TABLE game_genres (id INT, genre VARCHAR(20)); INSERT INTO game_genres (id, genre) VALUES (1, 'FPS'), (2, 'RPG'), (3, 'Strategy'); CREATE TABLE game_sessions (id INT, player_id INT, game_genre_id INT, start_time TIMESTAMP, end_time TIMESTAMP); INSERT INTO game_sessions (id, player_id, game_genre_id, start_time, end_time) VALUES (1, 1, 1, '2021-01-01 10:00:00', '2021-01-01 12:00:00'), (2, 2, 2, '2021-01-02 09:00:00', '2021-01-02 11:00:00'), (3, 3, 1, '2021-01-03 13:00:00', '2021-01-03 16:00:00'), (4, 1, 2, '2021-01-04 14:00:00', '2021-01-04 17:00:00'), (5, 2, 1, '2021-01-05 11:00:00', '2021-01-05 13:00:00');", "output": "SELECT game_genres.genre, SUM(players.hours_played) AS total_hours FROM players INNER JOIN game_sessions ON players.id = game_sessions.player_id INNER JOIN game_genres ON game_sessions.game_genre_id = game_genres.id WHERE game_genres.genre NOT IN ('Strategy') GROUP BY game_genres.genre;"}
{"input": " \uac01 \uc8fc\uc5d0 \ub300\ud574 \uc870\ud569\uc6d0 \uc218\uc5d0 \ub530\ub77c \ub3d9\ub960\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc870\ud569 \uc9c0\ubd80\uc758 \uc21c\uc704\ub97c \ub9e4\uae30\uace0 \uc0c1\uc704 2\uac1c \uc9c0\ubd80\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE state_union_members (id INT, state VARCHAR(255), chapter VARCHAR(255), member_count INT); INSERT INTO state_union_members (id, state, chapter, member_count) VALUES (1, 'NY', 'NYC', 5000), (2, 'NY', 'Buffalo', 3500), (3, 'CA', 'LA', 7000), (4, 'CA', 'San Francisco', 5500), (5, 'CA', 'San Diego', 6000);", "output": "SELECT state, chapter, RANK() OVER (PARTITION BY state ORDER BY member_count DESC) as rank FROM state_union_members;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uace0\uac1d\uc758 \ucd5c\ub300 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE balances (balance_id INT, customer_id INT, balance DECIMAL(10,2), balance_date DATE); INSERT INTO balances VALUES (1, 1, 5000.00, '2022-02-01'); INSERT INTO balances VALUES (2, 1, 6000.00, '2022-02-15'); INSERT INTO balances VALUES (3, 2, 8000.00, '2022-02-03'); INSERT INTO balances VALUES (4, 2, 9000.00, '2022-02-28');", "output": "SELECT customer_id, MAX(balance) as max_balance FROM balances WHERE balance_date >= DATEADD(month, -1, GETDATE()) GROUP BY customer_id;"}
{"input": " \uc9c0\ub09c \ub2ec 18~24\uc138 \uc0ac\uc6a9\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud55c \ucea0\ud398\uc778\uc758 \ucd1d \uad11\uace0 \uc9c0\ucd9c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ad_campaigns (id INT, start_date TIMESTAMP, end_date TIMESTAMP, target_age INT, ad_spend DECIMAL(10,2));", "output": "SELECT SUM(ad_spend) FROM ad_campaigns WHERE target_age BETWEEN 18 AND 24 AND start_date BETWEEN DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MONTH) AND CURRENT_TIMESTAMP();"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \uba54\ub274 \uce74\ud14c\uace0\ub9ac\uc5d0\ub294 \ube44\uac74 \ubc0f \uae00\ub8e8\ud150 \ud504\ub9ac \uc635\uc158\uc774 \uba87 \uac1c\ub098 \uc788\uc5c8\ub098\uc694?", "context": "CREATE TABLE dietary_restrictions (dietary_restriction_id INT, dietary_restriction VARCHAR(255)); INSERT INTO dietary_restrictions (dietary_restriction_id, dietary_restriction) VALUES (1, 'Vegan'), (2, 'Gluten-Free'); CREATE TABLE menu_items_dr (menu_item_id INT, menu_category VARCHAR(255), item_name VARCHAR(255), dietary_restriction_id INT); CREATE TABLE orders_dr (order_id INT, menu_item_id INT, order_date DATE);", "output": "SELECT m.menu_category, dr.dietary_restriction, COUNT(*) as num_options FROM menu_items_dr midr JOIN menus m ON midr.menu_category = m.menu_category JOIN dietary_restrictions dr ON midr.dietary_restriction_id = dr.dietary_restriction_id JOIN orders_dr od ON midr.menu_item_id = od.menu_item_id WHERE od.order_date BETWEEN DATEADD(day, -30, GETDATE()) AND GETDATE() GROUP BY m.menu_category, dr.dietary_restriction;"}
{"input": " \uac01 \ubd80\uc11c\ubcc4 \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \uc9c1\uc6d0\uc758 \ucd1d \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (id INT, name VARCHAR(255)); CREATE TABLE volunteers (id INT, department_id INT, joined_date DATE); CREATE TABLE staff (id INT, department_id INT, hired_date DATE);", "output": "SELECT departments.name, COUNT(volunteers.id) + COUNT(staff.id) FROM departments LEFT JOIN volunteers ON departments.id = volunteers.department_id LEFT JOIN staff ON departments.id = staff.department_id GROUP BY departments.id;"}
{"input": " \uac01 \ub18d\ubd80\uac00 500\ub144 \uc774\uc0c1\uc758 \uc791\ubb3c \uc218\ud655\ub7c9\uc744 \ub2ec\uc131\ud55c \uc5f0\uc18d \uc5f0\ub3c4 \uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE consecutive_yields (farmer_id INT, year INT, crop_yield INT); INSERT INTO consecutive_yields (farmer_id, year, crop_yield) VALUES (1, 2020, 600), (1, 2021, 550), (2, 2020, 500), (2, 2021, 520);", "output": "SELECT farmer_id, year, crop_yield, SUM(CASE WHEN crop_yield > 500 THEN 1 ELSE 0 END) OVER (PARTITION BY farmer_id ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS consecutive_years FROM consecutive_yields;"}
{"input": " 2021\ub144 1\ubd84\uae30 \ucd5c\uace0\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc600\ub098\uc694?", "context": "CREATE TABLE donations (id INT, donor_name TEXT, amount DECIMAL(10,2)); INSERT INTO donations (id, donor_name, amount) VALUES (7, 'Grace', 500.00), (8, 'Hugo', 300.00), (9, 'Irene', 200.00);", "output": "SELECT donor_name FROM donations WHERE amount = (SELECT MAX(amount) FROM donations WHERE donation_date BETWEEN '2021-01-01' AND '2021-03-31')"}
{"input": " \uc57c\uc0dd\ub3d9\ubb3c \ubcf4\ud638\uad6c\uc5ed\uc774 \uc788\ub294 \uad6d\uac00\ubcc4 \ucd1d \uc57c\uc0dd\ub3d9\ubb3c \uc885 \uc218\uc640 \uc232 \uc218\ub97c \uad6d\uac00\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uace0 \uc232 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE country (country_id INT, country_name TEXT, PRIMARY KEY (country_id)); CREATE TABLE wildlife (wildlife_id INT, country_id INT, species_count INT, PRIMARY KEY (wildlife_id), FOREIGN KEY (country_id) REFERENCES country(country_id)); CREATE TABLE forest (forest_id INT, country_id INT, forest_count INT, PRIMARY KEY (forest_id), FOREIGN KEY (country_id) REFERENCES country(country_id));", "output": "SELECT c.country_name, COUNT(w.species_count) AS total_wildlife_species, COUNT(f.forest_count) AS total_forests FROM country c INNER JOIN wildlife w ON c.country_id = w.country_id INNER JOIN forest f ON c.country_id = f.country_id GROUP BY c.country_name HAVING COUNT(w.species_count) > 0 ORDER BY total_forests DESC;"}
{"input": " \uc131\ub2a5 \uc800\ud558\ub97c \uacbd\ud5d8\ud55c \ud50c\ub808\uc774\uc5b4 \uc2dd\ubcc4", "context": "CREATE TABLE playerperformances (player_id INT, game_id INT, match_date DATE, kills INT, deaths INT); INSERT INTO playerperformances (player_id, game_id, match_date, kills, deaths) VALUES (1, 1001, '2022-01-01', 25, 10);", "output": "SELECT player_id, LAG(kills, 1) OVER (PARTITION BY player_id ORDER BY match_date) as prev_kills, deaths, prev_kills - deaths as performance_change FROM playerperformances"}
{"input": " \ud14d\uc0ac\uc2a4\uc758 \ub3c4\ub85c \uac74\uc124\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc0c1\uc704 3\uac00\uc9c0 \uc7ac\ub8cc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE road_materials (material_id INT, road_id INT, material VARCHAR(50)); CREATE TABLE materials (material_id INT, material_name VARCHAR(50), quantity INT); CREATE TABLE roads (road_id INT, state VARCHAR(50), length INT);", "output": "SELECT materials.material_name, SUM(materials.quantity) as total_quantity FROM road_materials JOIN materials ON road_materials.material_id = materials.material_id JOIN roads ON road_materials.road_id = roads.road_id WHERE roads.state = 'Texas' GROUP BY materials.material_name ORDER BY total_quantity DESC LIMIT 3;"}
{"input": " \ub274\uc695\uc758 \uc720\uc804 \uc5f0\uad6c \ud68c\uc0ac\uc5d0 \ub300\ud55c \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name VARCHAR(50), type VARCHAR(50), location VARCHAR(50), investment FLOAT); INSERT INTO companies (id, name, type, location, investment) VALUES (3, 'GenoSolutions', 'Genetic Research', 'New York', 8000000); INSERT INTO companies (id, name, type, location, investment) VALUES (4, 'BioNexus', 'Bioprocess', 'New York', 6000000);", "output": "SELECT SUM(investment) FROM companies WHERE type = 'Genetic Research' AND location = 'New York';"}
{"input": " \ubd81\ubbf8\uc5d0\uc11c \uac00\uc7a5 \uc801\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uae30\ud6c4 \uc801\uc751 \ubd80\ubb38\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_adaptation_sectors (project_id INT, sector TEXT, region TEXT, amount FLOAT); INSERT INTO climate_adaptation_sectors (project_id, sector, region, amount) VALUES (1, 'Coastal Protection', 'North America', 1000000); INSERT INTO climate_adaptation_sectors (project_id, sector, region, amount) VALUES (2, 'Water Management', 'North America', 1500000);", "output": "SELECT sector, MIN(amount) FROM climate_adaptation_sectors WHERE region = 'North America' GROUP BY sector;"}
{"input": " \ucc38\uc11d\uc790\uac00 500\uba85 \uc774\uc0c1\uc778 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \ud589\uc0ac\ub97c \uc9c0\uc6d0\ud55c \uc790\uae08 \ucd9c\ucc98\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE events (event_id INT, event_name VARCHAR(50), location VARCHAR(50), funding_source_id INT, event_date DATE); INSERT INTO events (event_id, event_name, location, funding_source_id, event_date) VALUES (1, 'Art Exhibit', 'Los Angeles', 2, '2022-05-01'), (2, 'Theater Performance', 'Los Angeles', 5, '2022-06-15'), (3, 'Dance Recital', 'Los Angeles', 2, '2022-08-25'); CREATE TABLE funding_sources (funding_source_id INT, funding_source_name VARCHAR(50)); INSERT INTO funding_sources (funding_source_id, funding_source_name) VALUES (2, 'City Grant'), (5, 'Arts Foundation'); CREATE TABLE attendance (attendance_id INT, event_id INT, visitor_count INT); INSERT INTO attendance (attendance_id, event_id, visitor_count) VALUES (1, 1, 600), (2, 2, 400), (3, 3, 550);", "output": "SELECT funding_source_name FROM funding_sources INNER JOIN events ON funding_sources.funding_source_id = events.funding_source_id INNER JOIN attendance ON events.event_id = attendance.event_id WHERE events.location = 'Los Angeles' AND visitor_count > 500;"}
{"input": "2022\ub144 1\ubd84\uae30\uc5d0 \ucf54\uc2a4\ud0c0\ub9ac\uce74\uc5d0\uc11c \ub274\uc695\uc73c\ub85c \ubc30\uc1a1\ub41c \uc720\uae30\ub18d \uc0ac\uacfc\uc640 \ubc14\ub098\ub098\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shipments(id INT, product VARCHAR(20), weight FLOAT, country VARCHAR(20), date DATE); INSERT INTO shipments(id, product, weight, country, date) VALUES (1, 'apples', 500, 'Costa Rica', '2022-01-05'); INSERT INTO shipments(id, product, weight, country, date) VALUES (2, 'bananas', 800, 'Costa Rica', '2022-01-07');", "output": "SELECT SUM(weight) FROM shipments WHERE product IN ('apples', 'bananas') AND country = 'Costa Rica' AND date BETWEEN '2022-01-01' AND '2022-03-31' AND product LIKE 'organic%';"}
{"input": " \uc2dc\ubbfc \ud53c\ub4dc\ubc31\uc744 \ubc14\ud0d5\uc73c\ub85c \uc9c0\ub09c 2\ub144\uac04 \ud3d0\uae30\ubb3c \uc218\uac70 \uc11c\ube44\uc2a4\uac00 \uac1c\uc120\ub41c \ub3c4\uc2dc\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Cities(City VARCHAR(25)); CREATE TABLE Feedback(City VARCHAR(25), Year INT, Service VARCHAR(20), Satisfaction FLOAT); INSERT INTO Cities VALUES('CityA'), ('CityB'), ('CityC'); INSERT INTO Feedback VALUES('CityA', 2020, 'Waste Collection', 4.5), ('CityA', 2021, 'Waste Collection', 4.8), ('CityB', 2020, 'Waste Collection', 3.2), ('CityB', 2021, 'Waste Collection', 3.6), ('CityC', 2020, 'Waste Collection', 4.3), ('CityC', 2021, 'Waste Collection', 4.7);", "output": "SELECT DISTINCT City FROM Feedback WHERE Service = 'Waste Collection' AND Satisfaction > 4 AND Year IN (2020, 2021) INTERSECT SELECT City FROM Cities;"}
{"input": " 2022\ub144 1\uc6d4 1\uc77c \uc774\ud6c4\uc5d0 \uc2dc\uc791\ud558\uace0 9\uac1c\uc6d4 \uc774\uc0c1 \uc9c0\uc18d\ub418\ub294 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists genetics;USE genetics;CREATE TABLE if not exists projects(id INT, name VARCHAR(255), start_date DATE, duration INT);INSERT INTO projects(id, name, start_date, duration) VALUES (1, 'ProjectX', '2023-03-15', 12), (2, 'ProjectY', '2021-12-31', 7), (3, 'ProjectZ', '2022-05-10', 10);", "output": "SELECT * FROM genetics.projects WHERE start_date >= '2022-01-01' AND duration > 9;"}
{"input": " \uc544\uc2dc\uc544 \uc791\uac00\ub4e4\uc774 \uc4f4 \ub3d9\ud654\ucc45\uc758 \ud3c9\uade0 \ud3c9\uc810\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE books (title VARCHAR(255), author VARCHAR(100), rating DECIMAL(3,2), category VARCHAR(50)); CREATE VIEW children_books AS SELECT DISTINCT title FROM books WHERE category = 'children'; CREATE VIEW authors_from_asia AS SELECT DISTINCT author FROM authors WHERE country IN ('India', 'China', 'Japan', 'South Korea', 'Indonesia');", "output": "SELECT AVG(rating) FROM books JOIN children_books ON books.title = children_books.title JOIN authors_from_asia ON books.author = authors_from_asia.author WHERE category = 'children';"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc548\uc804 \uad50\uc721\uc744 \ubc1b\uc9c0 \uc54a\uc740 \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c? \uc774 \uae30\ub85d\uc744 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE suppliers(id INT, name TEXT, location TEXT);CREATE TABLE trainings(id INT, supplier_id INT, type TEXT, date DATE);INSERT INTO suppliers(id, name, location) VALUES (1, 'Supplier A', 'City A'); INSERT INTO trainings(id, supplier_id, type, date) VALUES (1, 1, 'Safety', '2021-02-01'), (2, 1, 'Quality', '2021-03-01');", "output": "DELETE FROM trainings WHERE supplier_id IN (SELECT id FROM suppliers WHERE id NOT IN (SELECT supplier_id FROM trainings WHERE trainings.date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND type = 'Safety'));"}
{"input": " \uac01 \ubd80\uc11c\ubcc4 \uc5ec\uc131 \uc9c1\uc6d0 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, EmployeeName varchar(50), Department varchar(50), Salary float, Gender varchar(10)); INSERT INTO Employees (EmployeeID, EmployeeName, Department, Salary, Gender) VALUES (1, 'John Doe', 'IT', 80000, 'Male'), (2, 'Jane Smith', 'HR', 70000, 'Female'), (3, 'Mike Johnson', 'IT', 85000, 'Male');", "output": "SELECT Department, COUNT(*) as Num_Employees, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees WHERE Gender = 'Female') as Percentage_Female_Employees FROM Employees WHERE Gender = 'Female' GROUP BY Department;"}
{"input": " \uac01 \uc8fc\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1\ubc95 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mental_health_parity (id INT PRIMARY KEY, state VARCHAR(255), mental_health_parity_law TEXT); INSERT INTO mental_health_parity (id, state, mental_health_parity_law) VALUES (1, 'Alabama', 'Partial Parity'), (2, 'Alaska', 'Full Parity'), (3, 'Arizona', 'No Parity'), (4, 'Arkansas', 'Partial Parity');", "output": "SELECT state, COUNT(*) as num_laws FROM mental_health_parity GROUP BY state;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uacf5\uc6d0 \ubc0f \ub808\ud06c\ub9ac\uc5d0\uc774\uc158 \uc13c\ud130\uc758 \uc774\ub984\uacfc \uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cities (id INT, name VARCHAR(255)); CREATE TABLE parks (id INT, city_id INT, name VARCHAR(255), number INT); CREATE TABLE recreation_centers (id INT, city_id INT, name VARCHAR(255), number INT);", "output": "SELECT c.name, p.number AS park_count, rc.number AS recreation_center_count FROM cities c LEFT JOIN parks p ON c.id = p.city_id LEFT JOIN recreation_centers rc ON c.id = rc.city_id;"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 'EMEA' \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc608\uc57d\uc744 \ubc1b\uc740 \uc628\ub77c\uc778 \uc5ec\ud589\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bookings (id INT, hotel_id INT, otan_code TEXT, region TEXT, quarter INT, bookings INT);", "output": "SELECT otan_code, MAX(bookings) OVER (PARTITION BY region, quarter) as max_bookings FROM bookings WHERE region = 'EMEA' AND quarter = 3;"}
{"input": " \uae30\uc220 \uc5c5\uacc4 \uc5ec\uc131\uc774 \ucc3d\uc5c5\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucd1d \uc790\uae08 \uc870\ub2ec \uae08\uc561 \ud45c\uc2dc", "context": "CREATE TABLE tech_startups (company_name VARCHAR(100), founder_gender VARCHAR(10), industry VARCHAR(50), founding_year INT, funding_amount INT);", "output": "SELECT SUM(funding_amount) FROM tech_startups WHERE founder_gender = 'Female' AND industry = 'Technology';"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uad50\uc218\uc9c4\uc758 \ucd5c\uc18c \ucd9c\ud310\ubb3c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name TEXT);CREATE TABLE publication (id INT, faculty_id INT, year INT);", "output": "SELECT MIN(p.count) FROM (SELECT faculty_id, COUNT(*) AS count FROM publication p WHERE p.year BETWEEN YEAR(CURRENT_DATE) - 3 AND YEAR(CURRENT_DATE) GROUP BY faculty_id) p;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uad6d\uac00\ubcc4\ub85c \ub09c\ubbfc\uc744 \uc9c0\uc6d0\ud55c \uae30\uad00\uc758 \uc218\uc640 \uc9c0\uc6d0 \ucd1d\uc561\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE refugee_support (support_id INT, ngo_id INT, location VARCHAR(255), support_type VARCHAR(255), support_amount DECIMAL(10,2)); INSERT INTO refugee_support VALUES (1, 1, 'Country A', 'Food', 5000); INSERT INTO refugee_support VALUES (2, 1, 'Country A', 'Housing', 7000); INSERT INTO refugee_support VALUES (3, 2, 'Country B', 'Medical', 10000); INSERT INTO refugee_support VALUES (4, 2, 'Country B', 'Education', 8000);", "output": "SELECT location as country, ngo_id, COUNT(*) as number_of_organizations, SUM(support_amount) as total_support_amount FROM refugee_support WHERE location IN ('Country A', 'Country B') AND support_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY location, ngo_id;"}
{"input": " 2019\ub144\uacfc 2020\ub144\uc5d0 \uac01 \uc9c0\uc5ed\uc5d0 \uba87 \uac1c\uc758 \uacf5\uacf5\ub3c4\uc11c\uad00\uc774 \uac74\ub9bd\ub418\uc5c8\ub098\uc694?", "context": "CREATE SCHEMA gov_service;CREATE TABLE gov_service.library_data (region VARCHAR(20), year INT, libraries_built INT); INSERT INTO gov_service.library_data (region, year, libraries_built) VALUES ('North', 2019, 5), ('North', 2020, 7), ('South', 2019, 6), ('South', 2020, 8), ('East', 2019, 4), ('East', 2020, 9), ('West', 2019, 3), ('West', 2020, 10);", "output": "SELECT region, year, SUM(libraries_built) FROM gov_service.library_data GROUP BY region, year ORDER BY year;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \ubbf8\uc2dc\uac04 \uc57d\uad6d\uc5d0\uc11c \ud310\ub9e4\ub41c \ubaa8\ub4e0 \ubcc0\uc885 \uc911\uc5d0\uc11c \ub9e4\ucd9c \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uc885 \ubcc0\uc885\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE sales (id INT, strain_id INT, quantity INT, date DATE, total_sales DECIMAL(10,2)); INSERT INTO sales (id, strain_id, quantity, date, total_sales) VALUES (1, 6, 50, '2022-04-01', 750.00), (2, 7, 40, '2022-04-02', 600.00);", "output": "SELECT strain_id, name, SUM(quantity)*100.0/SUM(SUM(quantity)) OVER (PARTITION BY NULL) as percentage FROM sales s JOIN strains st ON s.strain_id = st.id WHERE state = 'Michigan' AND date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY strain_id, name ORDER BY percentage DESC FETCH NEXT 5 ROWS ONLY;"}
{"input": "\uc544\ud504\uac00\ub2c8\uc2a4\ud0c4\uc758 \ud3c9\ud654 \uc720\uc9c0 \uc784\ubb34\ub97c \uae30\uac04\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE peacekeeping_ops (id INT, mission VARCHAR, country VARCHAR, start_date DATE, end_date DATE, PRIMARY KEY (id)); INSERT INTO peacekeeping_ops (id, mission, country, start_date, end_date) VALUES (1, 'ISAF', 'Afghanistan', '2001-09-12', '2014-12-31');", "output": "SELECT mission, country, DATEDIFF(day, start_date, end_date) as mission_duration, RANK() OVER (ORDER BY DATEDIFF(day, start_date, end_date) DESC) as mission_rank FROM peacekeeping_ops WHERE country = 'Afghanistan';"}
{"input": " \uc6b4\uc1a1 \ubd80\ubb38\uc758 \ucc28\ub7c9 \uc720\ud615\ubcc4 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicles (ID INT, VehicleType VARCHAR(255), CO2Emission INT); INSERT INTO Vehicles (ID, VehicleType, CO2Emission) VALUES (1, 'Car', 4000), (2, 'Truck', 8000), (3, 'Motorcycle', 2000);", "output": "SELECT VehicleType, AVG(CO2Emission) FROM Vehicles GROUP BY VehicleType;"}
{"input": " \uc2dc\uc560\ud2c0 \uc2dc\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uce5c\ud658\uacbd \uac74\ubb3c\uc758 \uc774\ub984\uacfc \uc778\uc99d \uc218\uc900\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(255), location VARCHAR(255), certification_level VARCHAR(50));", "output": "SELECT name, certification_level FROM green_buildings WHERE location = 'Seattle';"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uce74\uc2a4\ud53c\ud574\uc758 \uc11d\uc720 \ubc0f \uac00\uc2a4 \ucd1d \uc0dd\uc0b0\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production (id INT, region VARCHAR(255), year INT, oil_production INT, gas_production INT); INSERT INTO production (id, region, year, oil_production, gas_production) VALUES (1, 'Caspian Sea', 2016, 120000, 230000); INSERT INTO production (id, region, year, oil_production, gas_production) VALUES (2, 'Caspian Sea', 2017, 150000, 250000);", "output": "SELECT region, SUM(oil_production) + SUM(gas_production) as total_production FROM production WHERE region = 'Caspian Sea' AND year BETWEEN (YEAR(CURDATE()) - 5) AND YEAR(CURDATE()) GROUP BY region;"}
{"input": " 2021\ub144 3\ubd84\uae30 'CityK'\uc640 'CityL'\uc5d0\uc11c \ubd80\uc11c\ubcc4\ub85c \uad6c\ubd84\ud55c \uc2dc\ubbfc \ubbfc\uc6d0\uc740 \uba87 \uac74\uc774\ub098 \uc788\uc5c8\ub098\uc694?", "context": "CREATE TABLE Complaints (City VARCHAR(10), Date DATE, Department VARCHAR(20), Complaint INT); INSERT INTO Complaints (City, Date, Department, Complaint) VALUES ('CityK', '2021-07-01', 'Police', 100), ('CityL', '2021-07-02', 'Fire', 50), ('CityK', '2021-07-03', 'Police', 120);", "output": "SELECT City, Department, COUNT(Complaint) FROM Complaints WHERE City IN ('CityK', 'CityL') AND Date BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY City, Department;"}
{"input": " \ub274\uc695\uc2dc\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud55c \uac74\uc124 \ub178\ub3d9\uc790\uc758 \uc774\ub984\uacfc \ucd1d \ub178\ub3d9 \uc2dc\uac04\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE construction_workers (worker_id INT, name TEXT); CREATE TABLE project_types (project_id INT, project_type TEXT); CREATE TABLE worker_projects (worker_id INT, project_id INT, total_labor_hours INT); CREATE TABLE projects (project_id INT, city TEXT, state TEXT); INSERT INTO construction_workers (worker_id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Maria Garcia'); INSERT INTO project_types (project_id, project_type) VALUES (1, 'Residential'), (2, 'Commercial'), (3, 'Sustainable'); INSERT INTO worker_projects (worker_id, project_id, total_labor_hours) VALUES (1, 1, 500), (1, 2, 300), (2, 2, 600), (2, 3, 400), (3, 1, 700), (3, 3, 500); INSERT INTO projects (project_id, city, state) VALUES (1, 'New York City', 'New York'), (2, 'Houston', 'Texas'), (3, 'Los Angeles', 'California');", "output": "SELECT construction_workers.name, SUM(worker_projects.total_labor_hours) FROM construction_workers INNER JOIN worker_projects ON construction_workers.worker_id = worker_projects.worker_id INNER JOIN (SELECT DISTINCT project_id FROM projects INNER JOIN project_types ON projects.city = 'New York City' AND project_types.project_type = 'Sustainable') AS sustainable_projects ON worker_projects.project_id = sustainable_projects.project_id GROUP BY construction_workers.name;"}
{"input": " Solidity\ub85c \uc791\uc131\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE smart_contract_language (language VARCHAR(255), smart_contract_count INT); INSERT INTO smart_contract_language (language, smart_contract_count) VALUES ('Solidity', 8000), ('Vyper', 2000), ('Rust', 1000);", "output": "SELECT language, 100.0 * smart_contract_count / SUM(smart_contract_count) OVER () as percentage FROM smart_contract_language WHERE language = 'Solidity';"}
{"input": "fleet_management' \uc2a4\ud0a4\ub9c8\uc5d0 \uc120\ubc15\uacfc \ub9c8\uc9c0\ub9c9 \ud654\ubb3c \ucc98\ub9ac \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE fleet_management.vessels (id INT, name VARCHAR(50), year_built INT); CREATE TABLE fleet_management.cargo_handling (id INT, vessel_id INT, volume INT, handling_date DATE); INSERT INTO fleet_management.vessels (id, name, year_built) VALUES (1, 'VesselE', 2015), (2, 'VesselF', 2018); INSERT INTO fleet_management.cargo_handling (id, vessel_id, volume, handling_date) VALUES (1, 1, 5000, '2022-01-01'), (2, 1, 6000, '2022-01-02'), (3, 2, 8000, '2022-01-03');", "output": "SELECT v.name, ch.handling_date FROM fleet_management.vessels v INNER JOIN (SELECT vessel_id, MAX(handling_date) AS max_handling_date FROM fleet_management.cargo_handling GROUP BY vessel_id) sub ON v.id = sub.vessel_id INNER JOIN fleet_management.cargo_handling ch ON v.id = ch.vessel_id AND sub.max_handling_date = ch.handling_date;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed AI \uc548\uc804 \uc704\ubc18 \uc720\ud615\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE ai_safety_violations_types (violation_id INT PRIMARY KEY, violation_type VARCHAR(255), region VARCHAR(255));", "output": "SELECT violation_type, COUNT(*) AS violation_count FROM ai_safety_violations_types WHERE region = 'North America' GROUP BY violation_type;"}
{"input": " \uc81c2\ubcf4\uac74\uc18c\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud658\uc790\ub97c \uc9c4\ub8cc\ud55c \uce58\ub8cc\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_center (center_id INT, name VARCHAR(255)); INSERT INTO community_health_center (center_id, name) VALUES (1, 'Community Health Center 1'), (2, 'Community Health Center 2'); CREATE TABLE patient (patient_id INT, center_id INT); CREATE TABLE therapy_session (session_id INT, patient_id INT, therapist_id INT, therapist_name VARCHAR(255));", "output": "SELECT therapist_name FROM therapy_session JOIN (SELECT therapist_id, COUNT(DISTINCT patient_id) AS patient_count FROM therapy_session JOIN patient ON therapy_session.patient_id = patient.patient_id JOIN community_health_center ON patient.center_id = community_health_center.center_id WHERE community_health_center.center_id = 2 GROUP BY therapist_id) AS subquery ON therapy_session.therapist_id = subquery.therapist_ID ORDER BY patient_count DESC LIMIT 1;"}
{"input": "\ub0a8\uc544\uba54\ub9ac\uce74\uc5d0\uc11c \uc9c0\uc5ed\uc0ac\ud68c \ucc38\uc5ec \uc218\uc900\uc774 \uac00\uc7a5 \ub192\uc740 \uc720\uc801\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HeritageSites (id INT, name VARCHAR(255), location VARCHAR(255), community_engagement INT); INSERT INTO HeritageSites (id, name, location, community_engagement) VALUES (1, 'Machu Picchu', 'Peru', 5000), (2, 'Iguazu Falls', 'Argentina', 3500), (3, 'Gal\u00e1pagos Islands', 'Ecuador', 4000);", "output": "SELECT name, community_engagement FROM HeritageSites WHERE location = 'South America' ORDER BY community_engagement DESC;"}
{"input": " \ud3c9\uade0 \ub179\uc0c9\uac74\ucd95 \uc778\uc99d\uc744 \uc704\ud55c CO2 \uc0c1\uc1c4", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(255), certification VARCHAR(255), co2_offset FLOAT);", "output": "SELECT AVG(co2_offset) FROM green_buildings WHERE certification IS NOT NULL;"}
{"input": " \ud559\uacfc\ubcc4 \uad50\uc9c1\uc6d0 1\uc778\ub2f9 \ud3c9\uade0 \uc5f0\uad6c\uacfc\uc81c \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE department (id INT, name VARCHAR(255)); CREATE TABLE faculty (id INT, department_id INT, name VARCHAR(255)); CREATE TABLE grant (id INT, faculty_id INT, year INT, amount DECIMAL(10, 2)); INSERT INTO department (id, name) VALUES (1, 'Engineering'), (2, 'Humanities'); INSERT INTO faculty (id, department_id, name) VALUES (1, 1, 'John Doe'), (2, 1, 'Jane Smith'), (3, 2, 'Bob Johnson'); INSERT INTO grant (id, faculty_id, year, amount) VALUES (1, 1, 2019, 50000), (2, 1, 2020, 75000), (3, 2, 2019, 30000), (4, 3, 2019, 25000);", "output": "SELECT department.name, AVG(COUNT(grant.id)) as avg_grants_per_faculty FROM department LEFT JOIN faculty ON department.id = faculty.department_id LEFT JOIN grant ON faculty.id = grant.faculty_id GROUP BY department.name;"}
{"input": " \uc2dc\ub4dc\ub2c8\uc640 \uba5c\ubc84\ub978\uc758 \ubaa8\ub4e0 \uce5c\ud658\uacbd \ud638\ud154\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE eco_hotels (hotel_id INT, hotel_name TEXT, city TEXT); INSERT INTO eco_hotels (hotel_id, hotel_name, city) VALUES (1, 'EcoHotel Sydney', 'Sydney'), (2, 'GreenHotel Melbourne', 'Melbourne'), (3, 'SustainableSuites Sydney', 'Sydney');", "output": "SELECT hotel_name, city FROM eco_hotels WHERE city IN ('Sydney', 'Melbourne');"}
{"input": " \ucc38\uc11d\uc790 \uc218\uac00 500\uba85\uc774 \ub118\ub294 '\uc911\uc11c\ubd80' \uc9c0\uc5ed \ud589\uc0ac\uc758 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (event_id INT, region VARCHAR(20), attendee_count INT); INSERT INTO Events (event_id, region, attendee_count) VALUES (1, 'Midwest', 600), (2, 'Southeast', 400), (3, 'Northeast', 350);", "output": "SELECT SUM(attendee_count) FROM Events WHERE region = 'Midwest' AND attendee_count > 500"}
{"input": " FDA \uc2b9\uc778\uc744 \ubc1b\uace0 \uc774\ub984\uc5d0 'Plus'\ub77c\ub294 \ub2e8\uc5b4\uac00 \ud3ec\ud568\ub41c \uc57d\ud488\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drug (id INT, name TEXT, approval_authority TEXT, sales FLOAT); INSERT INTO drug (id, name, approval_authority, sales) VALUES (1, 'DrugA Plus', 'FDA', 30000000); INSERT INTO drug (id, name, approval_authority, sales) VALUES (2, 'DrugB', 'FDA', 40000000); INSERT INTO drug (id, name, approval_authority, sales) VALUES (3, 'PlusDrug', 'FDA', 50000000);", "output": "SELECT SUM(sales) FROM drug WHERE approval_authority = 'FDA' AND name LIKE '%Plus%';"}
{"input": " \uac01 \ud68c\uc0ac\uac00 \ucc44\uad74\ud55c \uad11\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uac01 \ud68c\uc0ac\uc758 \ucd1d \uc9c1\uc6d0 \ubc0f \uacc4\uc57d\uc790 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name VARCHAR(50)); CREATE TABLE company_sites (id INT, company_id INT, site_id INT); CREATE TABLE mining_sites (id INT, name VARCHAR(50), location VARCHAR(50), company_id INT); CREATE TABLE employees (id INT, site_id INT, role VARCHAR(50), quantity INT); CREATE TABLE contractors (id INT, site_id INT, quantity INT); CREATE TABLE minerals_extracted (id INT, site_id INT, quantity INT);", "output": "SELECT c.name AS company, SUM(me.quantity) AS total_minerals_extracted, SUM(e.quantity + c.quantity) AS total_workforce FROM companies c INNER JOIN company_sites cs ON c.id = cs.company_id INNER JOIN mining_sites ms ON cs.site_id = ms.id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM employees GROUP BY site_id) e ON ms.id = e.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM contractors GROUP BY site_id) c ON ms.id = c.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM minerals_extracted GROUP BY site_id) me ON ms.id = me.site_id GROUP BY c.name;"}
{"input": " 5\uac74 \ubbf8\ub9cc\uc758 \uac70\ub798\uac00 \ubc1c\uc0dd\ud55c \uc804\ub7b5\uc744 \uc81c\uc678\ud558\uace0 \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \ub0b4\ub294 \ub3c5\ud2b9\ud55c \ud22c\uc790 \uc804\ub7b5\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE InvestmentStrategies (StrategyID INT, StrategyName VARCHAR(100), Returns DECIMAL(10,2), Transactions INT); INSERT INTO InvestmentStrategies (StrategyID, StrategyName, Returns, Transactions) VALUES (1, 'Growth', 12.5, 7); INSERT INTO InvestmentStrategies (StrategyID, StrategyName, Returns, Transactions) VALUES (2, 'Value', 10.2, 3); INSERT INTO InvestmentStrategies (StrategyID, StrategyName, Returns, Transactions) VALUES (3, 'Dividend', 9.1, 12); INSERT INTO InvestmentStrategies (StrategyID, StrategyName, Returns, Transactions) VALUES (4, 'Index', 8.8, 4);", "output": "SELECT StrategyName, Returns FROM InvestmentStrategies WHERE Transactions >= 5 GROUP BY StrategyName, Returns ORDER BY Returns DESC;"}
{"input": " 5\ud68c \uc774\uc0c1 \ud50c\ub808\uc774\ud55c '\ud310\ud0c0\uc9c0 \ud48b\ubcfc' \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uac8c\uc784 \uc2dc\uac04\uc744 \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE GameDurations (PlayerID INT, Game TEXT, Duration INT, Session INT); INSERT INTO GameDurations (PlayerID, Game, Duration, Session) VALUES (1, 'Fantasy Football', 120, 1), (2, 'Fantasy Football', 150, 2), (3, 'Fantasy Football', 180, 1), (4, 'Fantasy Football', 130, 3);", "output": "SELECT AVG(Duration) FROM GameDurations WHERE Game = 'Fantasy Football' GROUP BY PlayerID HAVING COUNT(Session) > 5;"}
{"input": " \uce90\ub098\ub2e4 \uad11\uc0b0 \ud68c\uc0ac\uc758 \ubb3c \uc0ac\uc6a9\ub7c9 \ud1b5\uacc4\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE CanadianMines (Company VARCHAR(50), Location VARCHAR(10)); INSERT INTO CanadianMines (Company, Location) VALUES ('MNO Inc', 'Canada'), ('PQR Ltd', 'Canada'); CREATE TABLE WaterUsage (Company VARCHAR(50), Water_usage INT); INSERT INTO WaterUsage (Company, Water_usage) VALUES ('STU Industries', 700), ('VWX Mining', 800);", "output": "SELECT * FROM WaterUsage WHERE Company IN (SELECT Company FROM CanadianMines)"}
{"input": " \ubc14\ub2e4\uac70\ubd81 \ubcf4\ud638\uc5d0 \uae30\uc5ec\ud558\ub294 \ub2e8\uccb4\uc758 \uc774\ub984\uacfc \uc6f9\uc0ac\uc774\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (id INT PRIMARY KEY, species_name VARCHAR(255), conservation_status VARCHAR(255)); CREATE TABLE conservation_efforts (id INT PRIMARY KEY, species_id INT, location VARCHAR(255), FOREIGN KEY (species_id) REFERENCES marine_species(id)); CREATE TABLE organizations (id INT PRIMARY KEY, effort_id INT, organization_name VARCHAR(255), organization_website VARCHAR(255), FOREIGN KEY (effort_id) REFERENCES conservation_efforts(id)); INSERT INTO marine_species (id, species_name, conservation_status) VALUES (1, 'Marine Turtle', 'vulnerable');", "output": "SELECT marine_species.species_name, organizations.organization_name, organizations.organization_website FROM marine_species INNER JOIN conservation_efforts ON marine_species.id = conservation_efforts.species_id INNER JOIN organizations ON conservation_efforts.id = organizations.effort_id WHERE marine_species.species_name = 'Marine Turtle';"}
{"input": " \uc5ec\uc131\uc774 \uc81c\ucd9c\ud55c AI \ubaa8\ub378\uc758 \ucd5c\ub300 \uacf5\uc815\uc131 \uc810\uc218\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE ai_fairness (model_name TEXT, fairness_score INTEGER, submitter_gender TEXT); INSERT INTO ai_fairness (model_name, fairness_score, submitter_gender) VALUES ('ModelX', 95, 'Female'), ('ModelY', 88, 'Male'), ('ModelZ', 98, 'Female');", "output": "SELECT MAX(fairness_score) FROM ai_fairness WHERE submitter_gender = 'Female';"}
{"input": " \uc778\ub3c4\uc758 \ubc1c\uc804\uc18c \ubaa9\ub85d", "context": "CREATE TABLE Infrastructure (id INT, name VARCHAR(100), type VARCHAR(50), country VARCHAR(50)); INSERT INTO Infrastructure (id, name, type, country) VALUES (11, 'NTPC Dadri', 'Power Plant', 'India'), (12, 'Tata Power Mumbai', 'Power Plant', 'India');", "output": "SELECT name FROM Infrastructure WHERE type = 'Power Plant' AND country = 'India';"}
{"input": " \ud574\ub2f9 \uc5f0\ub3c4\uc758 1\ubd84\uae30 \uc774\ud6c4\uc5d0 \uac00\uc785\ud55c \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \uace0\uac1d\uc758 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE shariah_compliant_finance(customer_id INT, join_date DATE); INSERT INTO shariah_compliant_finance VALUES (1, '2022-04-01'), (2, '2022-03-15'), (3, '2022-01-01'), (4, '2022-05-10');", "output": "SELECT COUNT(*) FROM shariah_compliant_finance WHERE join_date > (SELECT MIN(join_date) + INTERVAL '3 months' FROM shariah_compliant_finance);"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ub9e4\uc6d4 \uc81c\ucd9c\ub418\ub294 FOIA \uc694\uccad \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE FoiaRequests ( RequestId INT, RequestDate DATE, RequestCity VARCHAR(255) ); INSERT INTO FoiaRequests (RequestId, RequestDate, RequestCity) VALUES (1, '2021-01-01', 'Washington DC'), (2, '2021-02-01', 'New York'), (3, '2021-03-01', 'Los Angeles');", "output": "SELECT EXTRACT(MONTH FROM RequestDate) as Month, COUNT(*) as NumRequests FROM FoiaRequests GROUP BY EXTRACT(MONTH FROM RequestDate);"}
{"input": " 2017\ub144 \uae00\ub85c\ubc8c \uc2dc\uc7a5\uc5d0\uc11c \uc720\ub85c\ud53c\uc6c0\uc758 \uc6d4 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE market_prices (id INT, element TEXT, price FLOAT, month INT, year INT);", "output": "SELECT AVG(price) FROM market_prices WHERE element = 'Europium' AND year = 2017;"}
{"input": " \uac01 \uc6b4\uc1a1 \uc218\ub2e8\uc744 \ud1b5\ud574 \uac01 \uc720\ud615\ubcc4\ub85c \uba87 \uac1c\uc758 \ud488\ubaa9\uc774 \ubc30\uc1a1\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE shipments (id INT, order_id INT, item_type VARCHAR(50), transportation_mode VARCHAR(50), quantity INT); INSERT INTO shipments (id, order_id, item_type, transportation_mode, quantity) VALUES (1, 1001, 'Item1', 'Air', 50), (2, 1002, 'Item2', 'Road', 80), (3, 1003, 'Item1', 'Rail', 75), (4, 1004, 'Item3', 'Sea', 30);", "output": "SELECT item_type, transportation_mode, SUM(quantity) as total_quantity FROM shipments GROUP BY item_type, transportation_mode;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0 \uc704\uce58\ud55c \uacf5\uae09\uc5c5\uccb4\ub85c\ubd80\ud130 \uc758\ub958\ub97c \uc218\uc785\ud558\ub294 \uad6d\uac00\uc5d0 \uc704\uce58\ud55c \uc18c\ub9e4\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE supplier_garments (supplier_id INT, garment_id INT); INSERT INTO supplier_garments (supplier_id, garment_id) VALUES (1, 1); INSERT INTO supplier_garments (supplier_id, garment_id) VALUES (2, 2);", "output": "SELECT retailers.name FROM retailers JOIN countries ON retailers.country = countries.name JOIN imports ON countries.code = imports.destination_country WHERE imports.source_continent = 'Africa';"}
{"input": " \ubcf4\uc7a5 \uae08\uc561\uc774 \uac00\uc7a5 \ub0ae\uc740 \ubcf4\ud5d8\uc758 \ubcf4\ud5d8 \uc720\ud615\uacfc \ubcf4\uc7a5 \uae08\uc561\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policies (policy_number INT, policy_type VARCHAR(50), coverage_amount INT, state VARCHAR(2)); INSERT INTO policies (policy_number, policy_type, coverage_amount, state) VALUES (12345, 'Auto', 50000, 'TX'); INSERT INTO policies (policy_number, policy_type, coverage_amount, state) VALUES (67890, 'Home', 300000, 'CA'); INSERT INTO policies (policy_number, policy_type, coverage_amount, state) VALUES (111213, 'Umbrella', 1000000, 'CA');", "output": "SELECT policy_type, coverage_amount FROM policies WHERE coverage_amount = (SELECT MIN(coverage_amount) FROM policies);"}
{"input": " \ubaa8\ub4e0 \uc804\uc2dc\ud68c\uc640 \uac01 \uc804\uc2dc\ud68c\uc758 \ub514\uc9c0\ud138 \uc124\uce58\ubb3c\uc5d0 \ucc38\uc5ec\ud55c \uc21c \ubc29\ubb38\uc790 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Exhibitions (id INT, name VARCHAR(100), location VARCHAR(50)); CREATE TABLE Visitor_Demographics (visitor_id INT, age INT, gender VARCHAR(10)); CREATE TABLE Digital_Interactions (visitor_id INT, interaction_date DATE, exhibition_id INT); INSERT INTO Exhibitions (id, name, location) VALUES (3, 'Modern Art', 'France'); INSERT INTO Exhibitions (id, name, location) VALUES (4, 'Science & Technology', 'Germany'); INSERT INTO Digital_Interactions (visitor_id, interaction_date, exhibition_id) VALUES (13, '2022-02-15', 3); INSERT INTO Digital_Interactions (visitor_id, interaction_date, exhibition_id) VALUES (14, '2022-02-16', 4);", "output": "SELECT Exhibitions.name, COUNT(DISTINCT Digital_Interactions.visitor_id) FROM Exhibitions JOIN Visits ON Exhibitions.id = Visits.exhibition_id JOIN Digital_Interactions ON Visits.visitor_id = Digital_Interactions.visitor_id GROUP BY Exhibitions.name;"}
{"input": "5\uac1c \ubbf8\ub9cc\uc758 \uae30\uc0ac\uac00 \uace0\ub824 \ub300\uc0c1\uc5d0\uc11c \uc81c\uac70\ub41c \uce74\ud14c\uace0\ub9ac\ub97c \ud3ec\ud568\ud558\uc5ec \uac01 \uce74\ud14c\uace0\ub9ac\uc758 \uae30\uc0ac\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (article_id INT, author VARCHAR(50), title VARCHAR(100), category VARCHAR(50), word_count INT, publication_date DATE); CREATE VIEW article_category AS SELECT category, COUNT(article_id) AS articles_in_category FROM articles GROUP BY category;", "output": "SELECT category, AVG(word_count) AS avg_word_count FROM articles WHERE category IN (SELECT category FROM article_category HAVING articles_in_category > 4) GROUP BY category;"}
{"input": " \uc560\ub9ac\uc870\ub098\uc758 \ud310\ub9e4\uc790\uac00 \ud310\ub9e4\ud55c \uc720\uae30\ub18d \uc81c\ud488\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vendors (vendor_id INT, vendor_name VARCHAR(50), state VARCHAR(50)); INSERT INTO vendors VALUES (1, 'VendorA', 'Arizona'); INSERT INTO vendors VALUES (2, 'VendorB', 'Texas'); CREATE TABLE products (product_id INT, product_name VARCHAR(50), vendor_id INT, price DECIMAL(5,2), organic BOOLEAN); INSERT INTO products VALUES (1, 'Product1', 1, 150, true); INSERT INTO products VALUES (2, 'Product2', 1, 75, true); INSERT INTO products VALUES (3, 'Product3', 2, 100, false); INSERT INTO products VALUES (4, 'Product4', 1, 200, true); CREATE TABLE sales (sale_id INT, product_id INT, vendor_id INT, sale_amount DECIMAL(5,2)); INSERT INTO sales VALUES (1, 1, 1, 50); INSERT INTO sales VALUES (2, 2, 1, 75); INSERT INTO sales VALUES (3, 3, 2, 30); INSERT INTO sales VALUES (4, 4, 1, 60);", "output": "SELECT SUM(sale_amount) FROM sales JOIN products ON sales.product_id = products.product_id JOIN vendors ON sales.vendor_id = vendors.vendor_id WHERE products.organic = true AND vendors.state = 'Arizona';"}
{"input": "\ubaa8\ub4e0 \ub0a8\uc131 \ub274\uc2a4 \uae30\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\ubcf4\ub2e4 \ub098\uc774\uac00 \ub9ce\uc740 \ubaa8\ub4e0 \ub0a8\uc131 \ub274\uc2a4 \uae30\uc790\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE news_agency (name VARCHAR(255), location VARCHAR(255));CREATE TABLE reporter (id INT, name VARCHAR(255), age INT, gender VARCHAR(10), news_agency_id INT); INSERT INTO news_agency (name, location) VALUES ('ABC News', 'New York'), ('CNN', 'Atlanta'), ('Fox News', 'New York'); INSERT INTO reporter (id, name, age, gender, news_agency_id) VALUES (1, 'Alice', 35, 'Female', 1), (2, 'Bella', 45, 'Female', 2), (3, 'Carol', 30, 'Female', 3), (4, 'Dave', 25, 'Male', 1), (5, 'Ella', 30, 'Female', 1), (6, 'Frank', 40, 'Male', 2);", "output": "SELECT name FROM reporter WHERE gender = 'Male' AND age > (SELECT AVG(age) FROM reporter WHERE gender = 'Male');"}
{"input": " \ud3c9\uade0 \uc124\uba85 \uac00\ub2a5\uc131 \uc810\uc218\ub97c \ud3ec\ud568\ud558\uc5ec \uc124\uba85 \uac00\ub2a5\uc131 \uc810\uc218 \ubc0f \uad00\ub828 AI \uc54c\uace0\ub9ac\uc998\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ai_algorithm (algorithm_id INT, algorithm_name VARCHAR(255)); CREATE TABLE explainability_score (score_id INT, algorithm_id INT, score DECIMAL(5, 4)); INSERT INTO ai_algorithm (algorithm_id, algorithm_name) VALUES (1, 'SHAP'); INSERT INTO ai_algorithm (algorithm_id, algorithm_name) VALUES (2, 'LIME'); INSERT INTO explainability_score (score_id, algorithm_id, score) VALUES (1, 1, 0.8756); INSERT INTO explainability_score (score_id, algorithm_id, score) VALUES (2, 2, 0.9231);", "output": "SELECT aa.algorithm_name, es.score, AVG(es.score) OVER () as avg_score FROM ai_algorithm aa INNER JOIN explainability_score es ON aa.algorithm_id = es.algorithm_id;"}
{"input": " 2018\ub144 \uc0c1\uc704 3\uac1c \uc0dd\uc0b0\uad6d\uc758 \uc5d0\ub974\ube00 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (country VARCHAR(255), element VARCHAR(255), quantity INT, year INT); INSERT INTO production (country, element, quantity, year) VALUES ('China', 'Erbium', 50000, 2018), ('United States', 'Erbium', 20000, 2018), ('Australia', 'Erbium', 15000, 2018), ('Brazil', 'Erbium', 10000, 2018);", "output": "SELECT country, quantity FROM (SELECT country, quantity, RANK() OVER (PARTITION BY element ORDER BY quantity DESC) as rank FROM production WHERE element = 'Erbium' AND year = 2018) WHERE rank <= 3;"}
{"input": " \uc720\uae30\ub18d \uc694\ub9ac\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Menu (menu_item VARCHAR(50), type VARCHAR(20), price DECIMAL(5,2), revenue DECIMAL(5,2)); INSERT INTO Menu (menu_item, type, price, revenue) VALUES ('Quinoa Salad', 'Organic', 8.99, 0), ('Vegetable Stir-fry', 'Organic', 9.99, 0);", "output": "SELECT SUM(price * revenue) FROM Menu WHERE type = 'Organic';"}
{"input": " \uce90\ub098\ub2e4 \uae30\ubd80\uc790\uc758 \ucd5c\uc18c \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, country TEXT, donation_amount DECIMAL); INSERT INTO donors (id, name, country, donation_amount) VALUES (1, 'Alice Johnson', 'Canada', 25.00), (2, 'Bob Smith', 'USA', 100.00);", "output": "SELECT MIN(donation_amount) FROM donors WHERE country = 'Canada';"}
{"input": " \ucd5c\uace0 \uc218\uc900\uc758 \ucee8\ud37c\ub7f0\uc2a4\uc5d0\uc11c \ub17c\ubb38\uc744 \ubc1c\ud45c\ud55c \uc804\uae30\uacf5\ud559\uacfc \uad50\uc218\uc9c4\uc5d0\uac8c \uc218\uc5ec\ub418\ub294 \uc5f0\uad6c \ubcf4\uc870\uae08\uc758 \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50), last_publication_date DATE); CREATE TABLE conferences (id INT, name VARCHAR(50), tier VARCHAR(10)); CREATE TABLE research_grants (id INT, faculty_id INT, amount DECIMAL(10,2));", "output": "SELECT AVG(g.count) FROM (SELECT COUNT(*) AS count FROM research_grants rg JOIN faculty f ON rg.faculty_id = f.id WHERE f.department = 'Electrical Engineering' AND f.last_publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) AND f.id IN (SELECT p.faculty_id FROM publications p JOIN conferences c ON p.conference_id = c.id WHERE c.tier = 'Top-tier')) g;"}
{"input": " \uc9c0\ub09c \uc8fc \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud314\ub85c\uc6cc\ub97c \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_followers(username VARCHAR(30), region VARCHAR(20), followers INT, follow_date DATE); INSERT INTO user_followers(username, region, followers, follow_date) VALUES('Obi', 'Africa', 1000, '2021-10-01'), ('Pat', 'Africa', 1200, '2021-10-02'), ('Quin', 'Africa', 1400, '2021-10-03'), ('Ria', 'Africa', 1600, '2021-10-04');", "output": "SELECT username, MAX(followers) as max_followers FROM (SELECT username, followers, ROW_NUMBER() OVER (PARTITION BY username ORDER BY follow_date DESC) as rn FROM user_followers WHERE region = 'Africa' AND follow_date >= DATEADD(week, -1, CURRENT_DATE)) t GROUP BY username"}
{"input": " 2021\ub144 \ubbf8\uc8fc \uc9c0\uc5ed\uc5d0\uc11c 200\uba85 \uc774\uc0c1 \ucc38\uc11d\ud55c \ud589\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Events (EventID int, EventDate date, EventAttendance int, EventLocation varchar(50));", "output": "SELECT (COUNT(*) / (SELECT COUNT(*) FROM Events WHERE EventDate BETWEEN '2021-01-01' AND '2021-12-31' AND EventAttendance > 200)) * 100.0 AS Percentage FROM Events WHERE EventDate BETWEEN '2021-01-01' AND '2021-12-31' AND EventLocation LIKE '%Americas%' AND EventAttendance > 200;"}
{"input": " \ube44\uac74 \uc694\ub9ac\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac01 \uc7ac\ub8cc\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ingredient (ingredient_id INT, ingredient_name TEXT, vegan_flag BOOLEAN); INSERT INTO ingredient (ingredient_id, ingredient_name, vegan_flag) VALUES (1, 'Tomato', true), (2, 'Cheese', false); CREATE TABLE recipe (recipe_id INT, dish_id INT, ingredient_id INT, quantity INT); INSERT INTO recipe (recipe_id, dish_id, ingredient_id, quantity) VALUES (1, 1, 1, 2), (2, 2, 2, 1); CREATE TABLE dish (dish_id INT, dish_name TEXT, vegan_flag BOOLEAN); INSERT INTO dish (dish_id, dish_name, vegan_flag) VALUES (1, 'Pizza Margherita', false), (2, 'Veggie Burger', true);", "output": "SELECT i.ingredient_name, SUM(r.quantity) as total_quantity FROM ingredient i JOIN recipe r ON i.ingredient_id = r.ingredient_id JOIN dish d ON r.dish_id = d.dish_id WHERE d.vegan_flag = true GROUP BY i.ingredient_name;"}
{"input": " \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \ubd84\ub958\ub41c \uc704\uc131\uc758 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE SatelliteManufacturing ( id INT, manufacturer VARCHAR(255), delivery_time DATE); INSERT INTO SatelliteManufacturing (id, manufacturer, delivery_time) VALUES (1, 'SpaceTech Inc.', '2020-01-15'), (2, 'Galactic Systems', '2019-06-28'), (3, 'SpaceTech Inc.', '2021-03-02');", "output": "SELECT manufacturer, AVG(DATEDIFF(delivery_time, (SELECT MIN(delivery_time) FROM SatelliteManufacturing sm2 WHERE sm2.manufacturer = sm.manufacturer))) AS avg_delivery_time FROM SatelliteManufacturing sm GROUP BY manufacturer;"}
{"input": " \ucf00\ud50c\ub7ec \ubc0f TESS \uc784\ubb34\ub97c \ud1b5\ud574 \ubc1c\uacac\ub41c \uc678\uacc4 \ud589\uc131\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE exoplanets (id INT, name VARCHAR(255), discovery_mission VARCHAR(255), discovery_date DATE); INSERT INTO exoplanets (id, name, discovery_mission, discovery_date) VALUES (1, 'Kepler-22b', 'Kepler', '2011-12-05'); INSERT INTO exoplanets (id, name, discovery_mission, discovery_date) VALUES (2, 'TOI-700d', 'TESS', '2020-01-06'); CREATE VIEW kepler_exoplanets AS SELECT * FROM exoplanets WHERE discovery_mission = 'Kepler'; CREATE VIEW tess_exoplanets AS SELECT * FROM exoplanets WHERE discovery_mission = 'TESS';", "output": "SELECT COUNT(*) as num_discoveries FROM exoplanets e INNER JOIN kepler_exoplanets k ON e.id = k.id INNER JOIN tess_exoplanets t ON e.id = t.id;"}
{"input": " \ud2b9\uc815 \uc0b0\ub9bc \uad6c\uc5ed\uc5d0\uc11c \ubaa9\uc7ac\ub97c \ud310\ub9e4\ud55c \uacf5\uae09\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (SupplierID int, SupplierName varchar(50)); INSERT INTO Suppliers VALUES (1, 'SupplierA'), (2, 'SupplierB'); CREATE TABLE Sales (SaleID int, SupplierID int, PlotID int); INSERT INTO Sales VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1); CREATE TABLE ForestPlots (PlotID int, PlotName varchar(50)); INSERT INTO ForestPlots VALUES (1, 'Plot1'), (2, 'Plot2');", "output": "SELECT Suppliers.SupplierName FROM Suppliers INNER JOIN Sales ON Suppliers.SupplierID = Sales.SupplierID INNER JOIN ForestPlots ON Sales.PlotID = ForestPlots.PlotID WHERE ForestPlots.PlotName = 'Plot1';"}
{"input": " 2020\ub144 \ubcf4\uc789\uc774 \uccb4\uacb0\ud55c \ubc29\uc0b0 \uacc4\uc57d\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contract (id INT, company VARCHAR(255), value FLOAT, year INT); INSERT INTO contract (id, company, value, year) VALUES (1, 'Boeing', 10000000, 2020), (2, 'Boeing', 20000000, 2019);", "output": "SELECT SUM(value) FROM contract WHERE company = 'Boeing' AND year = 2020;"}
{"input": " '\ubc84\uac70' \uc544\uc774\ud15c \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE sales_data (sale_id INT, location_id INT, item_id INT, quantity_sold INT, sale_date DATE); INSERT INTO sales_data (sale_id, location_id, item_id, quantity_sold, sale_date) VALUES (1, 1, 1, 50, '2021-05-01'), (2, 2, 2, 90, '2021-05-02');", "output": "SELECT location_id, SUM(quantity_sold) as total_sold FROM sales_data JOIN locations ON sales_data.location_id = locations.location_id JOIN menu_items ON sales_data.item_id = menu_items.item_id WHERE item_name = 'Burger' GROUP BY location_id ORDER BY total_sold DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac78\uc74c \uc218\ub97c 10% \uc774\uc0c1 \ub298\ub9b0 \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE steps (id INT, user_id INT, daily_step_count INT, step_date DATE); INSERT INTO steps (id, user_id, daily_step_count, step_date) VALUES (1, 1, 8000, '2022-03-01'), (2, 2, 9000, '2022-03-15');", "output": "SELECT user_id FROM (SELECT user_id, daily_step_count, LAG(daily_step_count, 1) OVER (PARTITION BY user_id ORDER BY id) AS previous_step_count, (daily_step_count::DECIMAL / LAG(daily_step_count, 1) OVER (PARTITION BY user_id ORDER BY id)) * 100 AS step_increase_percentage FROM steps WHERE DATE(CURRENT_DATE() - INTERVAL 30 DAY) <= DATE(step_date)) AS subquery WHERE step_increase_percentage > 100;"}
{"input": " \uad6d\uac00 \uc548\ubcf4 \uc0ac\uac74\uacfc \uadf8 \uc601\ud5a5 \uc218\uc900\uc744 \ud45c\uc2dc\ud558\uace0 \ucd5c\uc18c \uc601\ud5a5 \uc218\uc900\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE national_security_events_impact (id INT, event VARCHAR, impact VARCHAR); INSERT INTO national_security_events_impact (id, event, impact) VALUES (1, 'Terrorist Attack', 'High'), (2, 'Cyber Espionage', 'Medium'), (3, 'Nuclear Missile Test', 'Low');", "output": "SELECT event, impact, MIN(CASE WHEN impact = 'Low' THEN 1 ELSE 0 END) OVER () as min_impact FROM national_security_events_impact;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \ud559\uc0dd\ub4e4\uc774 \ub2e8\uc77c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc18c\ube44\ud558\ub294 \ucd5c\ub300 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, program TEXT, hours INT, project_id INT);", "output": "SELECT program, MAX(hours) FROM students GROUP BY program;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Projects (name TEXT, start_year INT, end_year INT, location TEXT);", "output": "SELECT COUNT(*) FROM Projects WHERE location = 'California' AND end_year IS NOT NULL;"}
{"input": " 2019\ub144 \ub18d\ucd0c \uac1c\ubc1c \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \uc704\ud55c \uad6d\uac00 \ubc0f \ubd80\ubb38\ubcc4 \uc778\ud504\ub77c \uc608\uc0b0 \ud560\ub2f9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_infrastructure (id INT, country VARCHAR(255), sector VARCHAR(255), allocated_budget INT, year INT); INSERT INTO rural_infrastructure (id, country, sector, allocated_budget, year) VALUES (1, 'Bangladesh', 'Transport', 1000000, 2019), (2, 'Bangladesh', 'Education', 500000, 2019), (3, 'India', 'Healthcare', 2000000, 2019);", "output": "SELECT country, sector, SUM(allocated_budget) as total_allocated_budget FROM rural_infrastructure WHERE year = 2019 GROUP BY country, sector;"}
{"input": " \uac01 \ud604\uc7a5\uc758 \uc5f0\uc18d \uc6d4\ubcc4 \uc0dd\uc0b0\ub7c9 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Site_Production_Monthly (Site_ID INT, Production_Month DATE, Production_Quantity INT); INSERT INTO Site_Production_Monthly (Site_ID, Production_Month, Production_Quantity) VALUES (1, '2022-01-01', 500), (1, '2022-02-01', 550), (1, '2022-03-01', 600), (2, '2022-01-01', 800), (2, '2022-02-01', 850), (2, '2022-03-01', 900);", "output": "SELECT Site_ID, Production_Month, Production_Quantity, LAG(Production_Quantity) OVER (PARTITION BY Site_ID ORDER BY Production_Month) as Previous_Month_Production, Production_Quantity - LAG(Production_Quantity) OVER (PARTITION BY Site_ID ORDER BY Production_Month) as Production_Difference FROM Site_Production_Monthly;"}
{"input": "\uc9c0\uc18d\uac00\ub2a5 \uc778\uc99d\uc744 \ubc1b\uc544 \uc544\uc2dc\uc544 \uad00\uad11\uc9c0\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE advisories (advisory_id INT, country TEXT, reason TEXT); CREATE TABLE tourists (tourist_id INT, name TEXT, country TEXT, arrival_date DATE); CREATE TABLE certifications (certification_id INT, tourist_id INT, hotel_id INT, issue_date DATE); CREATE TABLE hotels (hotel_id INT, name TEXT, country TEXT, is_sustainable BOOLEAN); CREATE TABLE countries (country_id INT, name TEXT, region TEXT);", "output": "SELECT COUNT(*) FROM tourists t INNER JOIN certifications c ON t.tourist_id = c.tourist_id INNER JOIN hotels h ON c.hotel_id = h.hotel_id WHERE h.is_sustainable = TRUE AND t.country IN (SELECT name FROM countries WHERE region = 'Asia');"}
{"input": " \ubbf8\uad6d \ub0b4 \ud638\ud154\ub2f9 \uad6c\ud604\ub41c AI \uae30\ubc18 \uc194\ub8e8\uc158\uc758 \ud3c9\uade0 \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT); CREATE TABLE ai_solutions (solution_id INT, hotel_id INT, implemented_date DATE); INSERT INTO hotels (hotel_id, hotel_name, region) VALUES (1, 'Pacific Palace', 'Americas'); INSERT INTO ai_solutions (solution_id, hotel_id, implemented_date) VALUES (1, 1, '2021-02-01'), (2, 1, '2021-03-01');", "output": "SELECT AVG(ai_solutions_per_hotel) AS average_solutions FROM (SELECT h.hotel_id, COUNT(ai.solution_id) AS ai_solutions_per_hotel FROM hotels h INNER JOIN ai_solutions ai ON h.hotel_id = ai.hotel_id WHERE h.region = 'Americas' GROUP BY h.hotel_id) AS subquery;"}
{"input": " \uc124\uba85 \uac00\ub2a5\ud55c AI \ub17c\ubb38\uc758 \uc800\uc790\ubcc4 \uc778\uc6a9 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE explainable_ai_papers (author_id INT, author_name VARCHAR(255), num_citations INT); INSERT INTO explainable_ai_papers (author_id, author_name, num_citations) VALUES ('1', 'Jane Smith', '100');", "output": "SELECT author_name, num_citations, NTILE(5) OVER (ORDER BY num_citations DESC) as citation_group FROM explainable_ai_papers;"}
{"input": " '\uc544\uc2dc\uc544'\uc5d0 \uc704\uce58\ud55c '\uc5f0\ubabb' \uc2a4\ud0a4\ub9c8\uc758 \uc591\uc5b4\uc7a5 \uc218\ub97c \uc149\ub2c8\ub2e4.", "context": "CREATE SCHEMA ponds; CREATE TABLE fish_farms (id INT, size FLOAT, location VARCHAR(25)); INSERT INTO fish_farms (id, size, location) VALUES (1, 12.2, 'asia'), (2, 27.5, 'europe'), (3, 41.3, 'africa');", "output": "SELECT COUNT(*) FROM ponds.fish_farms WHERE location = 'asia';"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ub450 \ud2b9\uc815 \uc9c0\uc5ed \uac04\uc5d0 \uc0dd\uc131\ub41c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \ubcf4\uace0\uc11c \uc218\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_intelligence_reports (id INT, region VARCHAR(20), report_date DATE, num_reports INT);INSERT INTO threat_intelligence_reports (id, region, report_date, num_reports) VALUES (1, 'North', '2022-01-01', 100), (2, 'South', '2022-01-01', 120), (3, 'North', '2022-04-01', 150), (4, 'South', '2022-04-01', 130);", "output": "SELECT num_reports - COALESCE(previous_num_reports, 0) AS difference FROM (SELECT region, num_reports, LAG(num_reports) OVER (PARTITION BY region ORDER BY report_date) AS previous_num_reports FROM threat_intelligence_reports WHERE region IN ('North', 'South') AND report_date BETWEEN DATEADD(quarter, -1, CURRENT_DATE) AND CURRENT_DATE) latest_reports WHERE region = 'North';"}
{"input": " \ubbf8\uad6d \ud638\ud154\uc5d0\uc11c \ud558\ub8e8\uc5d0 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uac00\uc0c1 \ud22c\uc5b4 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels (id INT, name TEXT, country TEXT); CREATE TABLE virtual_tours (id INT, hotel_id INT, date DATE, views INT);", "output": "SELECT MAX(views) FROM (SELECT hotel_id, date, SUM(views) AS views FROM virtual_tours JOIN hotels ON virtual_tours.hotel_id = hotels.id WHERE hotels.country = 'USA' GROUP BY hotel_id, date ORDER BY date) AS subquery;"}
{"input": " \uac01 \ud559\uad50\uc5d0\uc11c \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud55c \uad50\uc0ac\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE schools (school_id INT, school_name VARCHAR(255)); CREATE TABLE teachers (teacher_id INT, school_id INT); CREATE TABLE courses (course_id INT, course_name VARCHAR(255), completion_date DATE); CREATE TABLE teacher_courses (teacher_id INT, course_id INT);", "output": "SELECT s.school_name, COUNT(tc.teacher_id) FROM schools s JOIN teachers t ON s.school_id = t.school_id JOIN teacher_courses tc ON t.teacher_id = tc.teacher_id JOIN courses c ON tc.course_id = c.course_id WHERE c.completion_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY s.school_id;"}
{"input": " 2020\ub144\uacfc 2021\ub144\uc5d0 \uc724\ub9ac\uc801\uc778 AI \uc5f0\uad6c \ub17c\ubb38\uc740 \uba87 \ud3b8\uc774\ub098 \ubc1c\ud45c\ub410\ub098\uc694?", "context": "CREATE TABLE papers (id INT, title TEXT, publication_year INT, country TEXT); INSERT INTO papers (id, title, publication_year, country) VALUES (1, 'PaperA', 2020, 'USA'), (2, 'PaperB', 2019, 'Canada'), (3, 'PaperC', 2021, 'Brazil');", "output": "SELECT publication_year, COUNT(*) FROM papers WHERE publication_year IN (2020, 2021) GROUP BY publication_year;"}
{"input": " '\ud14c\uc2a4\ud2b8' \uae30\uc220 \uc720\ud615\uc758 \uad6c\ub3c5\uc790\ub97c \uc81c\uc678\ud55c \uac01 \uacc4\uc815 \uc720\ud615\uc758 \ucd1d \uad6c\ub3c5\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE subscriber_data (subscriber_id INT, subscriber_type VARCHAR(20), tech_type VARCHAR(20)); INSERT INTO subscriber_data (subscriber_id, subscriber_type, tech_type) VALUES (1, 'Regular', '4G'), (2, 'Test', '3G'), (3, 'Regular', '5G');", "output": "SELECT subscriber_type, COUNT(*) as total_subscribers FROM subscriber_data WHERE tech_type != 'Test' GROUP BY subscriber_type;"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc5b4\ub5a4 \uc11c\ube44\uc2a4\ub3c4 \uc774\uc6a9\ud558\uc9c0 \uc54a\uc740 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\ub97c \ucc3e\uc73c\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, last_usage_date DATE);CREATE TABLE broadband_subscribers (subscriber_id INT, last_usage_date DATE);", "output": "SELECT 'Mobile' AS service, subscriber_id FROM mobile_subscribers WHERE last_usage_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) UNION ALL SELECT 'Broadband' AS service, subscriber_id FROM broadband_subscribers WHERE last_usage_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": "2022\ub144 \uce90\ub098\ub2e4 \uc9c0\uc5ed \ud310\ub9e4 \uae30\uc900 \uc0c1\uc704 3\ub300 \ub3d9\ubb3c\uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \ud654\uc7a5\ud488\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(50), is_cruelty_free BOOLEAN, sales FLOAT); INSERT INTO products VALUES (1, 'Lipstick', true, 500.50), (2, 'Mascara', false, 300.00), (3, 'Foundation', true, 700.00); CREATE TABLE regions (region_id INT, region_name VARCHAR(50)); INSERT INTO regions VALUES (1, 'Canada'), (2, 'USA'); CREATE TABLE time (time_id INT, year INT); INSERT INTO time VALUES (1, 2022);", "output": "SELECT p.product_name, p.sales FROM products p INNER JOIN regions r ON p.product_id = r.region_id INNER JOIN time t ON p.product_id = t.time_id WHERE p.is_cruelty_free = true GROUP BY p.product_name, p.sales, r.region_name, t.year ORDER BY p.sales DESC LIMIT 3;"}
{"input": "\ub9e4\ucd9c\uc774 1000\ub2ec\ub7ec \uc774\uc0c1\uc778 \ube44\uac74 \ud654\uc7a5\ud488\uc758 \ube44\uc728\uc744 \uad6d\uac00\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ub9e4\ucd9c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, is_vegan BOOLEAN, country VARCHAR(255), sales FLOAT); INSERT INTO products (product_id, is_vegan, country, sales) VALUES (1, true, 'US', 1200), (2, false, 'CA', 2000), (3, true, 'US', 1500), (4, false, 'MX', 800);", "output": "SELECT country, 100.0 * COUNT(*) / SUM(COUNT(*)) OVER (PARTITION BY NULL) as percentage FROM products WHERE is_vegan = true AND sales > 1000 GROUP BY country ORDER BY percentage DESC;"}
{"input": " \ud558\ub098 \uc774\uc0c1\uc758 \ud06c\ub85c\uc2a4 \ud50c\ub7ab\ud3fc \ud1a0\ub108\uba3c\ud2b8\uc5d0 \ucc38\uac00\ud55c e\uc2a4\ud3ec\uce20 \ud300\uc758 \uc774\ub984\uacfc \uc9c0\uc5ed\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Teams (TeamID INT, TeamName VARCHAR(50), Platform VARCHAR(20)); INSERT INTO Teams (TeamID, TeamName, Platform) VALUES (1, 'Team A', 'PC'); INSERT INTO Teams (TeamID, TeamName, Platform) VALUES (2, 'Team B', 'Console'); CREATE TABLE Tournaments (TournamentID INT, TournamentName VARCHAR(50), Platform VARCHAR(20)); INSERT INTO Tournaments (TournamentID, TournamentName, Platform) VALUES (1, 'Tournament 1', 'Cross-Platform'); INSERT INTO Tournaments (TournamentID, TournamentName, Platform) VALUES (2, 'Tournament 2', 'PC'); CREATE TABLE Participation (TeamID INT, TournamentID INT); INSERT INTO Participation (TeamID, TournamentID) VALUES (1, 1); INSERT INTO Participation (TeamID, TournamentID) VALUES (2, 2);", "output": "SELECT DISTINCT Teams.TeamName, Teams.Platform FROM Teams INNER JOIN Participation ON Teams.TeamID = Participation.TeamID INNER JOIN Tournaments ON Participation.TournamentID = Tournaments.TournamentID WHERE Tournaments.Platform = 'Cross-Platform';"}
{"input": " \uac01 \uace0\uac1d\uc758 \ud3c9\uade0 \uc18c\ub4dd\uc740 \uc5bc\ub9c8\uc774\uba70, \uc804\uccb4 \ud3c9\uade0 \uc18c\ub4dd\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer_analytics (client_id INT, income DECIMAL(10, 2), education VARCHAR(50), marital_status VARCHAR(20)); INSERT INTO customer_analytics (client_id, income, education, marital_status) VALUES (3, 80000, 'PhD', 'Married'); INSERT INTO customer_analytics (client_id, income, education, marital_status) VALUES (4, 90000, 'High School', 'Single');", "output": "SELECT client_id, income, AVG(income) OVER () as overall_average_income FROM customer_analytics;"}
{"input": " 2019\ub144 \ud638\uc8fc \uac01 \uc8fc\ubcc4 \ucd1d \ud3d0\uc218 \ucc98\ub9ac \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?'", "context": "CREATE TABLE wastewater_treatment (province VARCHAR(255), location VARCHAR(255), capacity INT); INSERT INTO wastewater_treatment (province, location, capacity) VALUES ('New South Wales', 'Sydney', 1200000);", "output": "SELECT province, SUM(capacity) FROM wastewater_treatment WHERE province IN ('New South Wales', 'Victoria', 'Queensland', 'Western Australia', 'South Australia', 'Tasmania') AND YEAR(date) = 2019 GROUP BY province;"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \uc870\uc9c1\uc758 \ud3c9\uade0 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE org_communication_budget (org_name VARCHAR(50), year INT, budget FLOAT); INSERT INTO org_communication_budget (org_name, year, budget) VALUES ('UN', 2018, 800000), ('Greenpeace', 2018, 900000), ('WWF', 2018, 1000000), ('UN', 2019, 900000), ('Greenpeace', 2019, 1100000), ('WWF', 2019, 1200000), ('UN', 2020, 1000000), ('Greenpeace', 2020, 1300000), ('WWF', 2020, 1400000);", "output": "SELECT org_name, AVG(budget) as avg_budget FROM org_communication_budget WHERE year BETWEEN 2018 AND 2020 GROUP BY org_name;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc \uc544\uc9c1 \uc608\uc0b0 \uae08\uc561\uc5d0 \ub3c4\ub2ec\ud558\uc9c0 \ubabb\ud55c \ud504\ub85c\uadf8\ub7a8\uacfc \ud574\ub2f9 \ud504\ub85c\uadf8\ub7a8\uc758 \uc608\uc0b0 \ubc0f \ubc1b\uc740 \uae30\ubd80\uae08 \ucd1d\uc561\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE programs(id INT, name TEXT, budget FLOAT);CREATE TABLE donations(id INT, program_id INT, amount FLOAT, donation_date DATE);", "output": "SELECT programs.name, programs.budget, SUM(donations.amount) as total_donations FROM programs JOIN donations ON programs.id = donations.program_id WHERE donations.donation_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE() AND programs.budget > (SELECT SUM(donations.amount) FROM donations WHERE donations.program_id = programs.id) GROUP BY programs.id;"}
{"input": " 'City 1'\uc758 \uacf5\uacf5 \uacf5\uc6d0\uacfc \ucee4\ubba4\ub2c8\ud2f0 \uac00\ub4e0\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (id INT, name VARCHAR(255)); INSERT INTO cities (id, name) VALUES (1, 'City 1'), (2, 'City 2'); CREATE TABLE parks (id INT, name VARCHAR(255), city_id INT); INSERT INTO parks (id, name, city_id) VALUES (1, 'Park 1', 1), (2, 'Park 2', 1), (3, 'Park 3', 2); CREATE TABLE community_gardens (id INT, name VARCHAR(255), city_id INT); INSERT INTO community_gardens (id, name, city_id) VALUES (1, 'Community Garden 1', 1), (2, 'Community Garden 2', 1), (3, 'Community Garden 3', 2);", "output": "SELECT COUNT(*) FROM parks WHERE city_id = (SELECT id FROM cities WHERE name = 'City 1'); SELECT COUNT(*) FROM community_gardens WHERE city_id = (SELECT id FROM cities WHERE name = 'City 1');"}
{"input": " \uc804\ub144\ub3c4 \ub300\ube44 \uac01 \uc0ac\uc5c5\ubcc4 \uc7ac\ud65c\uc6a9\ub960 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Initiatives (InitiativeID INT, InitiativeName VARCHAR(50), RecyclingRate FLOAT, Year INT); INSERT INTO Initiatives VALUES (1, 'Initiative1', 0.7, 2021), (1, 'Initiative1', 0.75, 2022), (2, 'Initiative2', 0.6, 2021), (2, 'Initiative2', 0.65, 2022), (3, 'Initiative3', 0.8, 2021), (3, 'Initiative3', 0.82, 2022);", "output": "SELECT InitiativeName, (RecyclingRate - LAG(RecyclingRate) OVER (PARTITION BY InitiativeName ORDER BY Year)) as ChangeInRecyclingRate FROM Initiatives;"}
{"input": " \uc57c\uc678 \uc6b4\ub3d9 \uc911 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workout_data (user_id INT, workout_type VARCHAR(20), heart_rate INT); INSERT INTO workout_data (user_id, workout_type, heart_rate) VALUES (101, 'Treadmill', 120), (101, 'Outdoor Run', 145), (102, 'Cycling', 130), (103, 'Yoga', 85), (104, 'Outdoor Walk', 100);", "output": "SELECT AVG(heart_rate) as avg_heart_rate FROM workout_data WHERE workout_type LIKE 'Outdoor%';"}
{"input": " Spotify\uc5d0\uc11c \ub77c\ud2f4 \uc74c\uc545 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucd5c\ub300 \ud314\ub85c\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artists (artist_id INT, genre VARCHAR(10), followers INT); INSERT INTO artists (artist_id, genre, followers) VALUES (1, 'Latin', 100000), (2, 'Pop', 200000), (3, 'Latin', 150000);", "output": "SELECT MAX(followers) FROM artists WHERE genre = 'Latin';"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \uae30\ubd80\ub41c \uc0c1\uc704 5\uac1c \uc6d0\uc778\uacfc \ud574\ub2f9 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DonationCauses (DonationCauseID int, DonationCause varchar(50), DonationAmount decimal(10,2)); INSERT INTO DonationCauses (DonationCauseID, DonationCause, DonationAmount) VALUES (1, 'Education', 5000.00), (2, 'Healthcare', 7000.00), (3, 'Environment', 3000.00), (4, 'Education', 2500.00), (5, 'Healthcare', 1000.00), (6, 'Poverty Alleviation', 6000.00), (7, 'Education', 4000.00), (8, 'Healthcare', 8000.00), (9, 'Environment', 1500.00);", "output": "SELECT DonationCause, SUM(DonationAmount) as TotalDonation, RANK() OVER (ORDER BY SUM(DonationAmount) DESC) as DonationRank FROM DonationCauses GROUP BY DonationCause ORDER BY DonationRank ASC;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ub9e4\uc6d4 \ud65c\ub3d9\uc801\uc778 \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VolunteerActivity (ActivityID int, VolunteerID int, ActivityDate date);", "output": "SELECT DATEPART(YEAR, ActivityDate) as Year, DATEPART(MONTH, ActivityDate) as Month, COUNT(DISTINCT VolunteerID) as ActiveVolunteers FROM VolunteerActivity WHERE ActivityDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY DATEPART(YEAR, ActivityDate), DATEPART(MONTH, ActivityDate) ORDER BY Year, Month;"}
{"input": " \ubbf8\uad6d\uc758 \ucd1d \uccad\ucde8 \uc2dc\uac04 \uae30\uc900 \uc0c1\uc704 3\ub300 \uc74c\uc545 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE music_streams (user_id INT, genre VARCHAR(255), listening_time FLOAT); CREATE TABLE countries (country_code CHAR(2), country_name VARCHAR(255)); CREATE VIEW stream_summary AS SELECT genre, SUM(listening_time) as total_time FROM music_streams GROUP BY genre; CREATE VIEW country_summary AS SELECT country_code, country_name FROM countries;", "output": " SELECT genre, total_time FROM (   SELECT genre, total_time,          ROW_NUMBER() OVER (ORDER BY total_time DESC) as rank   FROM stream_summary ) subquery WHERE rank <= 3; "}
{"input": " \uc9c0\ub09c \ub2ec \ub2e8\uc77c IP \uc8fc\uc18c\uc5d0\uc11c \ucd5c\ub300 \ub85c\uadf8\uc778 \uc2dc\ub3c4 \uc2e4\ud328 \ud69f\uc218\ub294 \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE login_attempts (id INT, ip_address VARCHAR(255), success BOOLEAN, date DATE); INSERT INTO login_attempts (id, ip_address, success, date) VALUES (1, '192.168.0.1', FALSE, '2022-01-01'), (2, '192.168.0.1', FALSE, '2022-01-02'), (3, '10.0.0.1', TRUE, '2022-01-03');", "output": "SELECT MAX(count) FROM (SELECT ip_address, COUNT(*) AS count FROM login_attempts WHERE success = FALSE AND date >= DATEADD(month, -1, GETDATE()) GROUP BY ip_address) AS subquery;"}
{"input": " 2019\ub144\uc5d0 \ubaa8\ub4e0 \uc9c0\uc5ed\uc0ac\ud68c\uc5d0\uc11c \uc785\uc591\ub41c \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityAdoptions(Year INT, Community VARCHAR(20), Animals INT); INSERT INTO CommunityAdoptions VALUES (2017, 'CommunityA', 35), (2018, 'CommunityA', 40), (2017, 'CommunityB', 28), (2018, 'CommunityB', 32), (2019, 'CommunityA', 45), (2019, 'CommunityB', 50);", "output": "SELECT SUM(Animals) FROM CommunityAdoptions WHERE Year = 2019;"}
{"input": " 2021\ub144 2\ubd84\uae30\uc5d0 '\uc5f0\uc608\uc778' \uce74\ud14c\uace0\ub9ac \uc0ac\uc6a9\uc790\uc758 Facebook \uad11\uace0\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ads (ad_id INT, user_id INT, platform VARCHAR(255), ad_revenue DECIMAL(10,2)); INSERT INTO ads (ad_id, user_id, platform, ad_revenue) VALUES (1, 1, 'Facebook', 1500.50), (2, 2, 'Twitter', 800.00), (3, 3, 'Facebook', 1200.75);", "output": "SELECT SUM(ad_revenue) FROM ads WHERE platform = 'Facebook' AND MONTH(ad_date) BETWEEN 4 AND 6 AND YEAR(ad_date) = 2021 AND user_id IN (SELECT user_id FROM users WHERE category = 'celebrity');"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548\uc758 \ucd1d \uac70\ub798 \uae08\uc561\uc744 \uae30\uc900\uc73c\ub85c \uac01 \uace0\uac1d\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50)); INSERT INTO customers (customer_id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Bob Johnson'), (4, 'Alice Williams'); CREATE TABLE transactions (transaction_date DATE, customer_id INT, amount DECIMAL(10,2)); INSERT INTO transactions (transaction_date, customer_id, amount) VALUES ('2022-01-01', 1, 100), ('2022-01-05', 1, 200), ('2022-01-02', 2, 150), ('2022-01-03', 2, 50), ('2021-01-04', 3, 300), ('2021-01-05', 3, 250), ('2021-01-10', 1, 50), ('2021-01-15', 2, 350), ('2021-01-20', 3, 400);", "output": "SELECT c.customer_id, c.name, RANK() OVER (ORDER BY SUM(t.amount) DESC) AS rank FROM customers c JOIN transactions t ON c.customer_id = t.customer_id WHERE t.transaction_date >= CURRENT_DATE - INTERVAL '1 year' GROUP BY c.customer_id, c.name ORDER BY rank;"}
{"input": " \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uaddc\ubaa8\uc5d0 \ub530\ub77c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name VARCHAR(255), depth FLOAT, size FLOAT); INSERT INTO marine_protected_areas (name, depth, size) VALUES ('Area1', 123.4, 5678.9), ('Area2', 234.5, 6789.0);", "output": "SELECT AVG(depth) as avg_depth, size FROM (SELECT depth, size, ROW_NUMBER() OVER (ORDER BY size DESC) as rn FROM marine_protected_areas) t WHERE rn <= 3 GROUP BY size;"}
{"input": " \uc624\uc2a4\ud2f4\uc2dc\uc758 1\uc778\ub2f9 \uc6d4\ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE city (id INT, name VARCHAR(255)); INSERT INTO city (id, name) VALUES (1, 'Austin'); CREATE TABLE water_meter_readings (id INT, city_id INT, consumption FLOAT, reading_date DATE); INSERT INTO water_meter_readings (id, city_id, consumption, reading_date) VALUES (1, 1, 100, '2022-01-01'); INSERT INTO water_meter_readings (id, city_id, consumption, reading_date) VALUES (2, 1, 120, '2022-02-01');", "output": "SELECT AVG(consumption / population) FROM (SELECT water_meter_readings.consumption, city.population, EXTRACT(MONTH FROM water_meter_readings.reading_date) as month FROM water_meter_readings JOIN city ON water_meter_readings.city_id = city.id WHERE city.name = 'Austin') as subquery GROUP BY month;"}
{"input": " \uc601\uc5c5\ubd80\uc11c \uc5ec\uc131 \uc9c1\uc6d0\uc758 \ucd5c\ub300 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(255), Gender VARCHAR(255), Salary FLOAT); INSERT INTO Employees (EmployeeID, Department, Gender, Salary) VALUES (1, 'IT', 'Male', 70000), (2, 'Sales', 'Female', 80000), (3, 'HR', 'Male', 60000);", "output": "SELECT MAX(Salary) FROM Employees WHERE Department = 'Sales' AND Gender = 'Female';"}
{"input": "\uac80\uc0ac\uad00 \uc778\uc99d \ub0a0\uc9dc\uac00 2021\ub144 1\uc6d4 1\uc77c \uc774\ud6c4\uc778 \uac83\uc744 \uae30\uc900\uc73c\ub85c \ud544\ud130\ub9c1\ub41c \uc815\uc720\uc18c \ubc0f \uac80\uc0ac\uad00\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE refineries (id INT PRIMARY KEY, name TEXT, location TEXT); CREATE TABLE refinery_inspections (id INT PRIMARY KEY, refinery_id INT, inspection_date DATE, inspector_id INT); CREATE TABLE inspectors (id INT PRIMARY KEY, name TEXT, certification_date DATE);", "output": "SELECT r.name, i.name as inspector_name FROM refineries r JOIN refinery_inspections ri ON r.id = ri.refinery_id JOIN inspectors i ON ri.inspector_id = i.id WHERE i.certification_date > '2021-01-01';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uac01 \ucc3d\uc758\uc801 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc548\uc804 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE creative_ai_applications (app_id INT, app_name TEXT, safety_score FLOAT, region TEXT); INSERT INTO creative_ai_applications (app_id, app_name, safety_score, region) VALUES (1, 'Dalle', 0.85, 'Africa'), (2, 'Midjourney', 0.90, 'Europe'), (3, 'Jukebox', 0.80, 'Africa');", "output": "SELECT app_name, MAX(safety_score) OVER (PARTITION BY region) as max_safety_score FROM creative_ai_applications WHERE region = 'Africa';"}
{"input": " \uc815\uaddc\uc9c1 \uad50\uc218 \uc911 \uc5ec\uc131\uc774 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, tenured BOOLEAN, gender VARCHAR(6)); INSERT INTO faculty (id, tenured, gender) VALUES (1, true, 'Female'), (2, false, 'Male'), (3, true, 'Female'), (4, true, 'Male');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM faculty WHERE tenured = true)) AS percentage FROM faculty WHERE gender = 'Female' AND tenured = true;"}
{"input": " \ud574\ub2f9 \ubd80\uc11c\uc758 \ud3c9\uade0 \ud3c9\uc810\ubcf4\ub2e4 \ub192\uc740 \ud3c9\uc810\uc744 \ubc1b\uc740 \uc11c\ube44\uc2a4\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Service (id INT, department_id INT, name VARCHAR(50), cost DECIMAL(10,2)); INSERT INTO Service (id, department_id, name, cost) VALUES (1, 1, 'ServiceA', 25000.00); INSERT INTO Service (id, department_id, name, cost) VALUES (2, 1, 'ServiceB', 30000.00); INSERT INTO Service (id, department_id, name, cost) VALUES (3, 2, 'ServiceC', 35000.00); CREATE TABLE CitizenFeedback (id INT, service_id INT, rating INT); INSERT INTO CitizenFeedback (id, service_id, rating) VALUES (1, 1, 9); INSERT INTO CitizenFeedback (id, service_id, rating) VALUES (2, 1, 8); INSERT INTO CitizenFeedback (id, service_id, rating) VALUES (3, 2, 7); INSERT INTO CitizenFeedback (id, service_id, rating) VALUES (4, 2, 8); INSERT INTO CitizenFeedback (id, service_id, rating) VALUES (5, 3, 10);", "output": "SELECT Service.name, Service.department_id FROM Service INNER JOIN (SELECT department_id, AVG(rating) as avg_rating FROM CitizenFeedback GROUP BY department_id) AS dept_avg_rating ON Service.department_id = dept_avg_rating.department_id WHERE Service.cost > dept_avg_rating.avg_rating"}
{"input": "2000\ub144 \uc774\uc804\uc5d0 \uc124\uc815\ub41c \ubd81\uadf9 \uc9c0\uc5ed\uc758 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc740 \ucd1d \uba87 \uad70\ub370\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name VARCHAR(255), region VARCHAR(255), establishment_year INT); INSERT INTO marine_protected_areas (name, region, establishment_year) VALUES ('Svalbard', 'Arctic', 1973), ('Franz Josef Land', 'Arctic', 1994), ('Norwegian Sea', 'Arctic', 1976);", "output": "SELECT COUNT(*) FROM marine_protected_areas WHERE region = 'Arctic' AND establishment_year < 2000;"}
{"input": " \uc11c\uc2dd\uc9c0 \ubc0f \uc885 \uc774\ub984\uacfc \ud568\uaed8 \ub0a8\uadf9\ud574\uc5d0\uc11c \ud574\uc591 \uc885\uc774 \ub3c4\ub2ec\ud558\ub294 \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE southern_ocean_depths (id INT, species_name VARCHAR(255), depth FLOAT, habitat VARCHAR(255)); INSERT INTO southern_ocean_depths (id, species_name, depth, habitat) VALUES (1, 'Southern Right Whale', 300, 'Coastal');", "output": "SELECT species_name, depth, habitat FROM (SELECT species_name, depth, habitat, MAX(depth) OVER (PARTITION BY ocean) AS max_depth FROM southern_ocean_depths WHERE ocean = 'Southern Ocean') t WHERE depth = max_depth;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ubd81\uadf9\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\uc800 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TemperatureHistory (Year INT, Temperature DECIMAL(5,2)); INSERT INTO TemperatureHistory (Year, Temperature) VALUES (2017, -17.5), (2018, -15.8), (2019, -13.2), (2020, -16.9), (2021, -14.5), (2022, -12.9);", "output": "SELECT MIN(Temperature) FROM TemperatureHistory WHERE Year BETWEEN 2017 AND 2022;"}
{"input": " \uc720\ud615\ubcc4 \ucd1d \ud504\ub85c\uadf8\ub7a8 \uc218\ub97c \ud45c\uc2dc\ud558\ub824\uba74 \ub370\uc774\ud130 \ud53c\ubc97\uc744 \ud574\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE programs (id INT, name VARCHAR(50), location VARCHAR(50), type VARCHAR(50), start_date DATE, end_date DATE);", "output": "SELECT type, SUM(value) AS Total_Programs FROM (SELECT location, type, 1 AS value FROM programs WHERE start_date <= CURDATE() AND end_date >= CURDATE()) AS subquery GROUP BY type;"}
{"input": " \uac01 \ubaa8\ub378\uc758 \uccab \ubc88\uc9f8 \uad00\ucc30\uacfc \ub9c8\uc9c0\ub9c9 \uad00\ucc30 \uac04\uc758 \uacf5\uc815\uc131 \uc810\uc218 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ModelFairness (model_name TEXT, fairness_score FLOAT, observation_date DATE); INSERT INTO ModelFairness (model_name, fairness_score, observation_date) VALUES ('ModelA', 0.85, '2021-01-01'), ('ModelA', 0.86, '2021-02-01'), ('ModelB', 0.90, '2021-01-01'), ('ModelB', 0.91, '2021-02-01');", "output": "SELECT model_name, LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) lag_score, fairness_score, fairness_score - LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) difference FROM ModelFairness;"}
{"input": " \ucc98\ub9ac\ub41c \uc0ac\uac74 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uac01 \uc911\uc7ac\uc790\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc774\uba70, \ub098\uc774\uc640 \ubbfc\uc871\uc5d0 \ub530\ub77c \uad00\uacc4\uac00 \uad6c\ubd84\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Mediators (MediatorID INT, Name VARCHAR(50), Age INT, Experience INT, Ethnicity VARCHAR(50)); CREATE TABLE Cases (CaseID INT, MediatorID INT, Date DATE); INSERT INTO Mediators (MediatorID, Name, Age, Experience, Ethnicity) VALUES (1, 'Juan Garcia', 45, 12, 'Hispanic'), (2, 'Li Chen', 38, 7, 'Asian'), (3, 'Amina Diop', 42, 18, 'African'), (4, 'Boris Petrov', 50, 25, 'European'); INSERT INTO Cases (CaseID, MediatorID, Date) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-03-01'), (4, 3, '2021-04-01'), (5, 3, '2021-05-01'), (6, 4, '2021-06-01');", "output": "SELECT MediatorID, Name, RANK() OVER (ORDER BY COUNT(*) DESC, Age, Ethnicity) as Rank FROM Mediators JOIN Cases ON Mediators.MediatorID = Cases.MediatorID GROUP BY MediatorID, Name;"}
{"input": "\uc704\uc131 \uc218\uc640 \ud568\uaed8 \uada4\ub3c4\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc704\uc131\uc774 \uc788\ub294 \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(50), Country VARCHAR(50)); INSERT INTO Satellites VALUES (1, 'ISS', 'USA'); INSERT INTO Satellites VALUES (2, 'GPS 2F-12', 'USA'); INSERT INTO Satellites VALUES (3, 'Galileo IOV-4', 'Europe');", "output": "SELECT Country, COUNT(*) FROM Satellites S WHERE RANK() OVER (PARTITION BY Country ORDER BY S.SatelliteID DESC) = 1 GROUP BY Country ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY"}
{"input": " \uac01 \ubd80\uc11c\uc5d0\uc11c \uae09\uc5ec\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc9c1\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'John', 'Doe', 'Engineering', 75000.00), (2, 'Jane', 'Doe', 'Engineering', 80000.00), (3, 'Mike', 'Smith', 'Marketing', 60000.00), (4, 'Samantha', 'Johnson', 'Engineering', 70000.00), (5, 'David', 'Brown', 'Marketing', 65000.00);", "output": "SELECT EmployeeID, FirstName, LastName, Department, Salary, RANK() OVER (PARTITION BY Department ORDER BY Salary) AS Rank FROM Employees;"}
{"input": " \uac01 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc758 \ucd1d \uc81c\uc870 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE garments (garment_id INT, garment_category VARCHAR(30), manufacturing_cost DECIMAL(10,2)); CREATE TABLE orders (order_id INT, garment_id INT, quantity INT);", "output": "SELECT garment_category, SUM(manufacturing_cost * (SELECT SUM(quantity) FROM orders WHERE orders.garment_id = garments.garment_id)) AS total_cost FROM garments GROUP BY garment_category;"}
{"input": " \ud574\ub2f9 \ubd80\uc11c\uc758 \ucd5c\uc800 \uae09\uc5ec \ubbf8\ub9cc\uc778 \uc9c1\uc6d0 \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE EmployeeData (EmployeeID INT, Department VARCHAR(50), Salary DECIMAL(10, 2)); INSERT INTO EmployeeData VALUES (1, 'IT', 50000); INSERT INTO EmployeeData VALUES (2, 'HR', 45000); INSERT INTO EmployeeData VALUES (3, 'Finance', 60000); INSERT INTO EmployeeData VALUES (4, 'IT', 40000);", "output": "DELETE FROM EmployeeData WHERE Salary < (SELECT MIN(Salary) FROM EmployeeData e2 WHERE EmployeeData.Department = e2.Department);"}
{"input": "\uc62c\ud574\uc758 \ucf54\uce58' \uc0c1\uc744 \uc218\uc0c1\ud55c \ucf54\uce58\uc640 \ud574\ub2f9 \ud300\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Coaches (CoachID INT PRIMARY KEY, Name VARCHAR(100), TeamID INT, Salary DECIMAL(10,2)); CREATE TABLE Awards (AwardID INT PRIMARY KEY, CoachID INT, Award VARCHAR(50), Year INT); CREATE TABLE Teams (TeamID INT PRIMARY KEY, TeamName VARCHAR(100), City VARCHAR(50));", "output": "SELECT Coaches.Name, Teams.TeamName FROM Coaches INNER JOIN Awards ON Coaches.CoachID = Awards.CoachID INNER JOIN Teams ON Coaches.TeamID = Teams.TeamID WHERE Awards.Award = 'Coach of the Year';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc7ac\uc0dd\uc5d0\ub108\uc9c0\uc5d0 \ud22c\uc790\ub41c \uae30\ud6c4\uae08\uc735\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ClimateFinance (Country TEXT, Sector TEXT, Investment_Amount NUMERIC); INSERT INTO ClimateFinance (Country, Sector, Investment_Amount) VALUES ('South Africa', 'Renewable Energy', 5000000), ('Kenya', 'Renewable Energy', 2000000), ('Nigeria', 'Renewable Energy', 7000000);", "output": "SELECT SUM(Investment_Amount) FROM ClimateFinance WHERE Country IN ('South Africa', 'Kenya', 'Nigeria') AND Sector = 'Renewable Energy';"}
{"input": "\uae30\ubd80\uc790\uc758 \uc5f0\ub839\ubcc4 \ud3c9\uade0 \uae30\ubd80 \uaddc\ubaa8\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, age INT, amount_donated DECIMAL(10,2));", "output": "SELECT AVG(amount_donated / (SELECT COUNT(*) FROM donors d2 WHERE d1.age = d2.age)) FROM donors d1 GROUP BY age;"}
{"input": " \uc2a4\ud398\uc778\uc5d0\uc11c \uc81c\uc791\ub41c \uc601\ud654\uc758 \uc774\ub984\uacfc \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movie (id INT, title VARCHAR(255), genre VARCHAR(255), country VARCHAR(255)); INSERT INTO movie (id, title, genre, country) VALUES (1, 'Movie1', 'Comedy', 'Spain'), (2, 'Movie2', 'Drama', 'France'), (3, 'Movie3', 'Action', 'Spain');", "output": "SELECT title, genre FROM movie WHERE country = 'Spain';"}
{"input": " \uac01 \uc804\uc2dc\ud68c\uc758 \ucd5c\uace0\ub839 \uad00\ub78c\uac1d\uc758 \uad00\ub78c\uac1d \uc5f0\ub839\ub300\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE exhibitions (id INT, exhibition_name VARCHAR(50), visitor_age INT); INSERT INTO exhibitions (id, exhibition_name, visitor_age) VALUES (1, 'Art Show', 60), (2, 'Science Fair', 50), (3, 'History Expo', 70);", "output": "SELECT exhibition_name, NTILE(4) OVER (ORDER BY visitor_age) AS age_range FROM exhibitions;"}
{"input": " 2019\ub144\ubd80\ud130 2021\ub144 \uc0ac\uc774\uc5d0 ESG \uc810\uc218\uac00 \ubd80\uc815\uc801\uc778 \ucd94\uc138\ub97c \ubcf4\uc774\ub294 '\uc0b0\uc5c5' \ubd80\ubb38\uc758 \uae30\uc5c5\uc744 \uc0c1\uc7a5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE companies (id INT, name VARCHAR(255), sector VARCHAR(255), ESG_score FLOAT, year INT); INSERT INTO companies (id, name, sector, ESG_score, year) VALUES (1, 'CleanMachines', 'Industrial', 86.0, 2019); INSERT INTO companies (id, name, sector, ESG_score, year) VALUES (2, 'GreenMachinery', 'Industrial', 85.5, 2020); INSERT INTO companies (id, name, sector, ESG_score, year) VALUES (3, 'EcoIndustries', 'Industrial', 84.5, 2021);", "output": "SELECT * FROM (SELECT name, sector, ESG_score, year, ESG_score - LAG(ESG_score) OVER (PARTITION BY name ORDER BY year) as trend FROM companies WHERE sector = 'Industrial') t WHERE trend < 0;"}
{"input": " 2021\ub144 \uc720\ub7fd \uc74c\uc545 \ud398\uc2a4\ud2f0\ubc8c\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE FestivalRevenue (region VARCHAR(255), year INT, revenue FLOAT);", "output": "SELECT SUM(revenue) FROM FestivalRevenue WHERE region = 'Europe' AND year = 2021;"}
{"input": " \ub3d9\ub0a8\uc544\uc2dc\uc544\uc758 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uad6d\uac00\ubcc4 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE digital_divide_indonesia(id INT, initiative VARCHAR(50), country VARCHAR(10)); INSERT INTO digital_divide_indonesia VALUES (1, 'Indonesia Digital Divide', 'Indonesia'); CREATE TABLE digital_divide_thailand(id INT, initiative VARCHAR(50), country VARCHAR(10)); INSERT INTO digital_divide_thailand VALUES (1, 'Thailand Digital Inclusion', 'Thailand'); CREATE TABLE digital_divide_philippines(id INT, initiative VARCHAR(50), country VARCHAR(10)); INSERT INTO digital_divide_philippines VALUES (1, 'Philippines Digital Access', 'Philippines');", "output": "SELECT country, COUNT(initiative) AS num_initiatives FROM digital_divide_indonesia GROUP BY country UNION ALL SELECT country, COUNT(initiative) AS num_initiatives FROM digital_divide_thailand GROUP BY country UNION ALL SELECT country, COUNT(initiative) AS num_initiatives FROM digital_divide_philippines GROUP BY country;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ud559\uad50\ubcc4\ub85c \ubd84\ub958\ub41c \ud559\uc0dd \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uc758 \ucd94\uc138\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health (student_id INT, school_id INT, mental_health_score INT, date DATE); INSERT INTO student_mental_health (student_id, school_id, mental_health_score, date) VALUES (1, 101, 75, '2021-09-01'); INSERT INTO student_mental_health (student_id, school_id, mental_health_score, date) VALUES (2, 101, 80, '2021-09-02');", "output": "SELECT school_id, date, AVG(mental_health_score) OVER (PARTITION BY school_id ORDER BY date) as avg_mental_health_score FROM student_mental_health;"}
{"input": " \ub9c8\uc774\uc560\ubbf8 \ud638\ud154\uacfc \uac00\uc0c1 \ud22c\uc5b4 \ubdf0\uc5d0 \ub300\ud55c \ud3c9\uade0 \uace0\uac1d \ud3c9\uc810\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE hotel_amenities (hotel_id INT, pool BOOLEAN, spa BOOLEAN); INSERT INTO hotel_amenities (hotel_id, pool, spa) VALUES (1, true, true), (2, false, true);", "output": "SELECT AVG(gr.guest_rating), AVG(vt.num_views) FROM hotel_reviews gr INNER JOIN hotel_info hi ON gr.hotel_id = hi.hotel_id INNER JOIN virtual_tours vt ON gr.hotel_id = vt.hotel_id WHERE hi.city = 'Miami';"}
{"input": " AI \uc548\uc804 \uc5f0\uad6c \ubd84\uc57c\uc640 AI \ucc3d\uc758\uc801 \uc751\uc6a9 \ubd84\uc57c\ub294 \ucd1d \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE Safety_Research (Research_Area VARCHAR(30)); INSERT INTO Safety_Research (Research_Area) VALUES ('Robustness'), ('Fairness'), ('Interpretability'), ('Security'); CREATE TABLE Creative_AI (Application VARCHAR(30)); INSERT INTO Creative_AI (Application) VALUES ('Art Generation'), ('Music Generation'), ('Text Generation'), ('Game Playing');", "output": "SELECT COUNT(*) FROM Safety_Research UNION SELECT COUNT(*) FROM Creative_AI;"}
{"input": " \ub300\ub959\ubcc4 \ud3c9\uade0 \uae30\ub300\uc218\uba85\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists public_health; USE public_health; DROP TABLE if exists life_expectancy; CREATE TABLE life_expectancy (country varchar(50), continent varchar(50), life_expectancy float); INSERT INTO life_expectancy (country, continent, life_expectancy) VALUES ('Afghanistan', 'Asia', 65.0), ('Albania', 'Europe', 78.5), ('Algeria', 'Africa', 76.3);", "output": "SELECT continent, AVG(life_expectancy) FROM life_expectancy GROUP BY continent;"}
{"input": " \uac01 \uc6b0\uc8fc\uad6d\ubcc4\ub85c \uc6b0\uc8fc\uc720\uc601\uc744 \uac00\uc7a5 \ub9ce\uc774 \ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (id INT, name VARCHAR(255), gender VARCHAR(10), agency VARCHAR(255), spacewalks INT); INSERT INTO Astronauts (id, name, gender, agency, spacewalks) VALUES (1, 'Anousheh Ansari', 'Female', 'Private', 0), (2, 'Peggy Whitson', 'Female', 'NASA', 10), (3, 'Robert Curbeam', 'Male', 'NASA', 7);", "output": "SELECT agency, name, spacewalks, RANK() OVER (PARTITION BY agency ORDER BY spacewalks DESC) as spacewalk_rank FROM Astronauts WHERE spacewalks > 0;"}
{"input": " \uc601\uc591 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc81c\ud488\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc81c\ud488\uc744 \uc81c\uacf5\ud558\ub294 \uacf5\uae09\uc5c5\uccb4\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE NutritionScores (ProductID INT, Score INT); INSERT INTO NutritionScores (ProductID, Score) VALUES (1, 90); INSERT INTO NutritionScores (ProductID, Score) VALUES (2, 70);", "output": "SELECT S.SupplierID, S.SupplierName, P.ProductName, NS.Score FROM Suppliers S INNER JOIN Products P ON S.SupplierID = P.SupplierID INNER JOIN NutritionScores NS ON P.ProductID = NS.ProductID INNER JOIN (SELECT ProductID, MAX(Score) as MaxScore FROM NutritionScores GROUP BY ProductID HAVING COUNT(DISTINCT ProductID) = 1) AS HS ON NS.ProductID = HS.ProductID INNER JOIN (SELECT ProductID, MIN(Score) as MinScore FROM NutritionScores GROUP BY ProductID HAVING COUNT(DISTINCT ProductID) = 1) AS LS ON NS.ProductID = LS.ProductID;"}
{"input": " \uc778\ub3c4\ub124\uc2dc\uc544\uc758 \ubaa8\ub4e0 \uc9c0\uc5f4\ubc1c\uc804\uc18c\uc758 \uba85\uce6d\uacfc \uc6a9\ub7c9\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE geothermal_plants (name TEXT, capacity INTEGER, country TEXT); INSERT INTO geothermal_plants (name, capacity, country) VALUES ('Geothermal Plant 1', 600, 'Indonesia'), ('Geothermal Plant 2', 700, 'Indonesia');", "output": "SELECT name, capacity FROM geothermal_plants WHERE country = 'Indonesia'"}
{"input": " \uc11c\uc591 \uacf5\uae09\uc5c5\uccb4\uc758 \uc7ac\ub8cc\ub97c \ud3ec\ud568\ud558\ub294 \uc694\ub9ac\uc758 \ucd1d \uce7c\ub85c\ub9ac \ud568\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (sid INT, name TEXT, location TEXT);CREATE TABLE Dishes (did INT, name TEXT, calorie_content INT);CREATE TABLE Ingredients (iid INT, dish_id INT, supplier_id INT);INSERT INTO Suppliers VALUES (1, 'SupplierA', 'West'), (2, 'SupplierB', 'East'), (3, 'SupplierC', 'West');INSERT INTO Dishes VALUES (1, 'DishA', 500), (2, 'DishB', 1500), (3, 'DishC', 800);INSERT INTO Ingredients VALUES (1, 1, 1), (2, 2, 1), (3, 2, 2), (4, 3, 3);", "output": "SELECT SUM(Dishes.calorie_content) FROM Dishes INNER JOIN Ingredients ON Dishes.did = Ingredients.dish_id INNER JOIN Suppliers ON Ingredients.supplier_id = Suppliers.sid WHERE Suppliers.location = 'West';"}
{"input": "\ub0a8\ubbf8\uc758 \uc5b4\ub290 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uac00 \uc0ac\ub77c\uc9c8 \uc704\ud5d8\uc5d0 \ucc98\ud55c \uc5b8\uc5b4\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774\ub4e4\uacfc \uad00\ub828\ub41c \ubb38\ud654\uc801 \uad00\uc2b5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Communities (id INT, name TEXT); INSERT INTO Communities (id, name) VALUES (1, 'Quechua'); CREATE TABLE Languages (id INT, community_id INT, language TEXT, status TEXT); INSERT INTO Languages (id, community_id, language, status) VALUES (1, 1, 'Quechua Language', 'At Risk'); CREATE TABLE CulturalPractices (id INT, community_id INT, practice TEXT); INSERT INTO CulturalPractices (id, community_id, practice) VALUES (1, 1, 'Pottery');", "output": "SELECT C.name, L.language, CP.practice FROM Communities C INNER JOIN Languages L ON C.id = L.community_id INNER JOIN CulturalPractices CP ON C.id = CP.community_id WHERE L.status = 'At Risk';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4\uac04 \uad6d\uac00\ubcc4\ub85c \uc218\ud589\ub41c \uc815\ubcf4\uc791\uc804 \uac74\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE intelligence_ops (id INT, country VARCHAR(30), operation_type VARCHAR(30), operation_date DATE); INSERT INTO intelligence_ops (id, country, operation_type, operation_date) VALUES (1, 'USA', 'Surveillance', '2021-06-15'); INSERT INTO intelligence_ops (id, country, operation_type, operation_date) VALUES (2, 'Russia', 'Cyber Espionage', '2022-02-03');", "output": "SELECT country, COUNT(*) FROM intelligence_ops WHERE operation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY country;"}
{"input": " 'rural_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ubaa8\ub4e0 \ub18d\uc5c5\ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694", "context": "CREATE TABLE agricultural_projects (id INT, name VARCHAR(50), cost DECIMAL(10,2), type VARCHAR(20)); INSERT INTO agricultural_projects (id, name, cost, type) VALUES (1, 'Precision Farming', 15000.00, 'Innovation'); INSERT INTO agricultural_projects (id, name, cost, type) VALUES (2, 'Vertical Farming', 22000.00, 'Innovation');", "output": "SELECT SUM(cost) FROM agricultural_projects WHERE type = 'Innovation';"}
{"input": " 2022\ub144\uc5d0 \uac01 \uad6d\uac00\uc5d0\uc11c \uc218\ud655\ud55c \ucd1d \uc5b4\ub958 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE harvest (harvest_id INT, country VARCHAR(20), year INT, species VARCHAR(20), quantity INT); INSERT INTO harvest VALUES (1, 'Norway', 2022, 'Salmon', 10000), (2, 'Chile', 2022, 'Tilapia', 8000), (3, 'Norway', 2021, 'Salmon', 12000), (4, 'China', 2022, 'Carp', 15000);", "output": "SELECT country, COUNT(*) AS 'Total Harvested' FROM harvest WHERE year = 2022 GROUP BY country;"}
{"input": " \ucd5c\uc2e0 \uc5c5\ub370\uc774\ud2b8\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uacfc \uac19\uc740 \ub2ec\uc5d0 \uc0dd\uc131\ub41c '\ud3f4\ub9ac\uace4' \ubc0f '\ubc14\uc774\ub0b8\uc2a4' \ub124\ud2b8\uc6cc\ud06c\uc758 \ub514\uc9c0\ud138 \uc790\uc0b0\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_assets (asset_id INT, name VARCHAR(255), network VARCHAR(255), creation_date DATE); INSERT INTO digital_assets (asset_id, name, network, creation_date) VALUES (1, 'Asset1', 'polygon', '2022-02-01'), (2, 'Asset2', 'binance', '2022-01-01'); CREATE TABLE smart_contracts (contract_id INT, network VARCHAR(255), last_updated DATE); INSERT INTO smart_contracts (contract_id, network, last_updated) VALUES (1, 'polygon', '2022-02-02'), (2, 'binance', '2022-01-02');", "output": "SELECT name FROM digital_assets WHERE network IN ('polygon', 'binance') AND EXTRACT(MONTH FROM creation_date) = EXTRACT(MONTH FROM (SELECT MAX(last_updated) FROM smart_contracts WHERE network IN ('polygon', 'binance')));"}
{"input": " \uad6d\uac00\uba85 \uc54c\ud30c\ubcb3\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74, \uad6d\uac00\ubcc4 \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_innovation_2 (id INT, country VARCHAR(255), project VARCHAR(255)); INSERT INTO military_innovation_2 (id, country, project) VALUES (1, 'USA', 'Stealth Helicopter'), (2, 'Russia', 'Hypersonic Missile'), (3, 'China', 'Artificial Intelligence'), (4, 'USA', 'Directed Energy Weapon'), (5, 'France', 'Cybersecurity Defense'), (6, 'China', 'Quantum Computing'), (7, 'Russia', 'Underwater Drone'), (8, 'USA', 'Smart Munitions'), (9, 'France', 'Electronic Warfare'), (10, 'China', '5G Network');", "output": "SELECT country, COUNT(project) AS total_projects FROM military_innovation_2 GROUP BY country ORDER BY country;"}
{"input": " \uacf5\uc815 \ubb34\uc5ed, \uc5f4\ub300\uc6b0\ub9bc \ub3d9\ub9f9 \ub610\ub294 \uc720\uae30\ub18d \uc778\uc99d\uc744 \ubc1b\uc740 \uc81c\ud488\uc758 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE products (product_id INT, name VARCHAR(100), certification VARCHAR(50)); INSERT INTO products (product_id, name, certification) VALUES (1, 'Fair Trade Coffee', 'Fair Trade'); INSERT INTO products (product_id, name, certification) VALUES (2, 'Rainforest Alliance Tea', 'Rainforest Alliance'); INSERT INTO products (product_id, name, certification) VALUES (3, 'Organic Vegetables', 'organic');", "output": "SELECT COUNT(*) FROM products WHERE certification IN ('Fair Trade', 'Rainforest Alliance', 'organic');"}
{"input": " \ubbf8\uad6d \ub85d \uc7a5\ub974 '\uc544\ud2f0\uc2a4\ud2b8 \uc774\ub984'\uc758 \uc0c8 \uc568\ubc94 \uc2a4\ud2b8\ub9ac\ubc0d \uc2e0\uae30\ub85d\uc744 \uacbd\uc2e0\ud55c\ub2e4. \uc568\ubc94\uc5d0\ub294 10\uac1c\uc758 \ud2b8\ub799\uc774 \uc788\uc73c\uba70 \uac01 \ud2b8\ub799\uc740 $0.99\uc758 \uc218\uc775\uc73c\ub85c \ud55c \ubc88 \uc2a4\ud2b8\ub9ac\ubc0d\ub418\uc5c8\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE tracks (id INT, title VARCHAR(255), artist VARCHAR(255), genre VARCHAR(255)); CREATE TABLE streams (id INT, track_id INT, user_id INT, region VARCHAR(255), genre VARCHAR(255), revenue DECIMAL(10,2), timestamp TIMESTAMP);", "output": "INSERT INTO tracks (id, title, artist, genre) SELECT NULL, CONCAT('Track ', ROW_NUMBER() OVER (ORDER BY (SELECT NULL))), 'Artist Name', 'rock' FROM UNNEST(GENERATE_ARRAY(1, 10)) AS x; INSERT INTO streams (id, track_id, user_id, region, genre, revenue, timestamp) SELECT NULL, id, 12345, 'United States', genre, 0.99, TIMESTAMP_ADD(CURRENT_TIMESTAMP(), INTERVAL x MINUTE) FROM UNNEST(GENERATE_ARRAY(1, 10)) AS x, tracks WHERE tracks.genre = 'rock';"}
{"input": " \uc218\uc775 \ucc3d\ucd9c \uc0c1\uc704 2\uac1c \uba54\ub274 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \uc218\uc775 \ucd94\uc138\ub97c \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (sale_id INT, menu_item VARCHAR(255), revenue INT, sale_date DATE); INSERT INTO sales (sale_id, menu_item, revenue, sale_date) VALUES (1, 'Impossible Burger', 500, '2022-01-01'), (2, 'Beyond Sausage', 700, '2022-01-02'), (3, 'Local Greens Salad', 600, '2022-02-01'), (4, 'Tofu Stir Fry', 800, '2022-02-02'), (5, 'Chicken Caesar Salad', 900, '2022-03-01');", "output": "SELECT DATE_FORMAT(s.sale_date, '%Y-%m') AS month, m.menu_item, SUM(s.revenue) AS monthly_revenue FROM sales s JOIN (SELECT menu_item, MAX(revenue) AS max_revenue FROM sales GROUP BY menu_item LIMIT 2) ms ON s.menu_item = ms.menu_item JOIN menu m ON s.menu_item = m.menu_item GROUP BY m.menu_item, month ORDER BY monthly_revenue DESC;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ud65c\ub3d9\uc5d0 \uc18c\uc694\ub418\ub294 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_assistance (id INT, operation VARCHAR(255), region VARCHAR(255), budget DECIMAL(10,2));", "output": "SELECT region, AVG(budget) FROM humanitarian_assistance GROUP BY region;"}
{"input": " ISA\uac00 \ubc1c\uc0ac\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc \uc784\ubb34\uc758 \uc774\ub984\uacfc \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (mission_id INT, name VARCHAR(100), launch_date DATE, launching_agency VARCHAR(50)); INSERT INTO space_missions (mission_id, name, launch_date, launching_agency) VALUES (1, 'Luna 1', '1959-01-02', 'ISA');", "output": "SELECT name, launch_date FROM space_missions WHERE launching_agency = 'ISA';"}
{"input": "\uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 \uc788\uace0 Tier 1 \ud22c\uc790\uc790\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ud68c\uc0ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Founders (id INT, name TEXT, gender TEXT); INSERT INTO Founders (id, name, gender) VALUES (1, 'Acme Corp', 'Female'); INSERT INTO Founders (id, name, gender) VALUES (2, 'Brick Co', 'Male'); CREATE TABLE Investors (id INT, tier TEXT, name TEXT); INSERT INTO Investors (id, tier, name) VALUES (1, 'Tier 1', 'Sequoia'); CREATE TABLE Investments (investor_id INT, company_name TEXT); INSERT INTO Investments (investor_id, company_name) VALUES (1, 'Acme Corp');", "output": "SELECT Founders.name FROM Founders JOIN Investments ON Founders.name = Investments.company_name JOIN Investors ON Investments.investor_id = Investors.id WHERE Founders.gender = 'Female' AND Investors.tier = 'Tier 1';"}
{"input": " '\uc2dc\uc560\ud2c0' \ud56d\ub9cc\uc5d0\uc11c \ucde8\uae09\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ud3c9\uade0 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(20)); INSERT INTO ports VALUES (1, 'Seattle'), (2, 'New_York'); CREATE TABLE cargo (cargo_id INT, port_id INT, container_weight FLOAT); INSERT INTO cargo VALUES (1, 1, 2000.5), (2, 1, 3000.2), (3, 2, 1500.3);", "output": "SELECT AVG(container_weight) FROM cargo WHERE port_id = (SELECT port_id FROM ports WHERE port_name = 'Seattle');"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uac01 \ud68c\uc0ac\uc5d0\uc11c \uba87 \ub300\uc758 \ud56d\uacf5\uae30\ub97c \uc81c\uc870\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE aircraft (aircraft_name VARCHAR(255), manufacturer VARCHAR(255), production_date DATE); INSERT INTO aircraft (aircraft_name, manufacturer, production_date) VALUES ('Air1', 'Man1', '2018-05-12'), ('Air2', 'Man2', '2020-12-18'), ('Air3', 'Man1', '2019-09-21'), ('Air4', 'Man3', '2017-01-03'), ('Air5', 'Man2', '2021-06-25');", "output": "SELECT manufacturer, COUNT(*) OVER (PARTITION BY manufacturer) as count FROM aircraft WHERE production_date >= DATEADD(year, -5, CURRENT_DATE) GROUP BY manufacturer ORDER BY count DESC;"}
{"input": " \uc778\uad6c\uac00 1000,000 \uc774\uc0c1\uc778 \uc885\uc5d0 \ub300\ud574 \ubd81\ud0dc\ud3c9\uc591\uc5d0 \uc788\ub294 \uc5b4\ub958\uc758 \ucd1d \uc218\ub97c \uc885\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE FishPopulation (Species TEXT, Ocean TEXT, Population INT); INSERT INTO FishPopulation (Species, Ocean, Population) VALUES ('Salmon', 'North Pacific', 800000), ('Tuna', 'North Pacific', 1200000), ('Shark', 'North Pacific', 500000);", "output": "SELECT Species, SUM(Population) FROM FishPopulation WHERE Ocean = 'North Pacific' GROUP BY Species HAVING SUM(Population) > 1000000;"}
{"input": " \ud504\ub791\uc2a4\uc758 \ubaa8\ub4e0 \ubc1c\uad74 \ud604\uc7a5\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE excavation_sites (id INT, country VARCHAR(255), depth FLOAT); INSERT INTO excavation_sites (id, country, depth) VALUES (1, 'France', 4.2), (2, 'Spain', 3.9), (3, 'France', 4.5);", "output": "SELECT AVG(depth) FROM excavation_sites WHERE country = 'France';"}
{"input": " \uc561\uc158\uacfc \ucf54\ubbf8\ub514 \uc601\ud654\uc5d0 \ubaa8\ub450 \ucd9c\uc5f0\ud55c \ubc30\uc6b0\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE movie (id INT, title VARCHAR(50), genre VARCHAR(20), language VARCHAR(20), viewers INT, rating DECIMAL(3,2), director VARCHAR(50), actor VARCHAR(50)); INSERT INTO movie (id, title, genre, language, viewers, rating, director, actor) VALUES (1, 'Movie1', 'Animation', 'English', 150000, 8.5, 'Director1', 'Actor1'), (2, 'Movie2', 'Action', 'English', 250000, 7.8, 'Director2', 'Actor2'), (3, 'Movie3', 'Animation', 'French', 200000, 9.2, 'Director1', 'Actor3'), (4, 'Movie4', 'Drama', 'Spanish', 100000, 6.3, 'Director3', 'Actor4'), (5, 'Movie5', 'Animation', 'English', 220000, 9.0, 'Director2', 'Actor1'), (6, 'Movie6', 'Drama', 'French', 180000, 8.5, 'Director1', 'Actor3'), (7, 'Movie7', 'Comedy', 'English', 150000, 7.5, 'Director4', 'Actor2'), (8, 'Movie8', 'Action', 'English', 200000, 9.0, 'Director2', 'Actor1'), (9, 'Movie9', 'Comedy', 'French', 250000, 8.0, 'Director1', 'Actor4');", "output": "SELECT actor FROM movie WHERE genre = 'Action' INTERSECT SELECT actor FROM movie WHERE genre = 'Comedy';"}
{"input": " \uc5ec\uc131 \uc9c1\uc6d0 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ubd80\uc11c\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE EmployeeDemographics (EmployeeID INT, Department VARCHAR(20), Gender VARCHAR(10)); INSERT INTO EmployeeDemographics (EmployeeID, Department, Gender) VALUES (1, 'IT', 'Male'), (2, 'IT', 'Female'), (3, 'HR', 'Female'), (4, 'HR', 'Male'), (5, 'Finance', 'Female'), (6, 'Finance', 'Female');", "output": "SELECT Department, PERCENT_RANK() OVER (ORDER BY COUNT(*) FILTER (WHERE Gender = 'Female') / COUNT(*) DESC) AS Percent_Female FROM EmployeeDemographics GROUP BY Department ORDER BY Percent_Female DESC LIMIT 5;"}
{"input": " \ucd5c\uadfc 2\ub144\uac04 \ub300\ucd9c\uc744 \ubc1b\uc9c0 \uc54a\uc740 \uace0\uac1d\uc758 \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Customers (CustomerID INT, Name VARCHAR(255)); INSERT INTO Customers (CustomerID, Name) VALUES (1, 'John Doe'); INSERT INTO Customers (CustomerID, Name) VALUES (2, 'Jane Doe'); CREATE TABLE Loans (LoanID INT, CustomerID INT, Date DATE); INSERT INTO Loans (LoanID, CustomerID, Date) VALUES (1, 1, '2022-01-01'); INSERT INTO Loans (LoanID, CustomerID, Date) VALUES (2, 1, '2021-01-01');", "output": "DELETE FROM Customers WHERE CustomerID NOT IN (SELECT L.CustomerID FROM Loans L WHERE L.Date >= DATEADD(year, -2, GETDATE()));"}
{"input": " \uc9c0\ub09c 18\uac1c\uc6d4 \ub3d9\uc548 \ubbf8\uad6d\uc73c\ub85c\ubd80\ud130 \uad70\uc0ac \uc7a5\ube44\ub97c \uad6c\ub9e4\ud55c \uad6d\uac00\uc758 \ucd1d \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE military_equipment_sales (country TEXT, sale_date DATE); INSERT INTO military_equipment_sales (country, sale_date) VALUES ('Canada', '2021-07-15'), ('Australia', '2022-02-03'), ('Germany', '2021-12-21'), ('Japan', '2022-03-09'), ('Mexico', '2022-06-17'), ('Brazil', '2022-02-28'), ('South Korea', '2022-04-05'), ('India', '2021-11-29');", "output": "SELECT COUNT(DISTINCT country) as unique_countries FROM military_equipment_sales WHERE sale_date >= (SELECT CURRENT_DATE - INTERVAL '18 months');"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd80\uc11c\uc5d0\uc11c \uc5ec\uc131\uc73c\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeDiversity (EmployeeID INT, Identity VARCHAR(50), Department VARCHAR(50)); INSERT INTO EmployeeDiversity (EmployeeID, Identity, Department) VALUES (1, 'Woman', 'Engineering'), (2, 'Man', 'Marketing');", "output": "SELECT COUNT(*) FROM EmployeeDiversity WHERE Identity = 'Woman' AND Department = 'Engineering';"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ud53c\uc2f1 \uacf5\uaca9\uc758 \uac00\uc7a5 \ube48\ubc88\ud55c \ud45c\uc801\uc774 \ub41c \uc0c1\uc704 5\uac1c \uc0b0\uc5c5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE phishing_attacks (id INT, industry VARCHAR(255), target_count INT, targeted_at TIMESTAMP); INSERT INTO phishing_attacks (id, industry, target_count, targeted_at) VALUES (1, 'banking', 50, '2022-01-01 10:00:00'), (2, 'healthcare', 45, '2022-01-02 11:00:00'), (3, 'retail', 60, '2022-01-03 12:00:00'), (4, 'banking', 40, '2022-01-04 13:00:00'), (5, 'banking', 55, '2022-01-05 14:00:00');", "output": "SELECT industry, target_count FROM phishing_attacks WHERE targeted_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH) GROUP BY industry ORDER BY target_count DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c \ub2ec \uc2a4\ud3ec\uce20 \uad11\uace0\ub97c \ud074\ub9ad\ud55c \uc0ac\uc6a9\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (city_id INT, city_name VARCHAR(50));CREATE TABLE users (user_id INT, city_id INT, user_join_date DATE);CREATE TABLE clicks (click_id INT, user_id INT, ad_type VARCHAR(50), click_date DATE);INSERT INTO cities (city_id, city_name) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Chicago'), (4, 'Houston'), (5, 'Phoenix');", "output": "SELECT c.city_name, COUNT(DISTINCT u.user_id) as total_users FROM cities c JOIN users u ON c.city_id = u.city_id JOIN clicks cl ON u.user_id = cl.user_id WHERE cl.ad_type = 'sports' AND cl.click_date >= DATEADD(month, -1, GETDATE()) GROUP BY c.city_name ORDER BY total_users DESC LIMIT 5;"}
{"input": " \ucd1d \uc6b0\uc8fc \uc784\ubb34 \uc218\uc640 \ucd1d \uc704\uc131 \uc218\ub97c \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (mission_id INT, name VARCHAR(100), launch_date DATE); INSERT INTO space_missions (mission_id, name, launch_date) VALUES (1, 'Luna 1', '1959-01-02'), (2, 'Apollo 11', '1969-07-16'); CREATE TABLE satellites (satellite_id INT, name VARCHAR(100), owner_country VARCHAR(50)); INSERT INTO satellites (satellite_id, name, owner_country) VALUES (1, 'GPS Satellite', 'USA'), (2, 'Beidou Satellite', 'China');", "output": "SELECT (SELECT COUNT(*) FROM space_missions) AS total_missions, (SELECT COUNT(*) FROM satellites) AS total_satellites;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc7ac\uc778\uc99d\ub41c \ubd80\ub3d9\uc0b0\uc758 \uc9c0\uc18d \uac00\ub2a5\uc131_features \ud544\ub4dc\ub97c 'LED \uc870\uba85, \uc2a4\ub9c8\ud2b8 \uc628\ub3c4\uc870\uc808\uae30'\ub97c \ucd94\uac00\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Property (id INT PRIMARY KEY, address VARCHAR(255), city VARCHAR(255), state VARCHAR(255), zip INT, co_owners INT, sustainable_features VARCHAR(255), price INT); CREATE TABLE GreenCertified (id INT PRIMARY KEY, property_id INT, certification_date DATE, recertification_date DATE);", "output": "UPDATE Property SET sustainable_features = CONCAT(sustainable_features, ', LED Lighting, Smart Thermostat') WHERE id IN (SELECT Property.id FROM Property INNER JOIN GreenCertified ON Property.id = GreenCertified.property_id WHERE recertification_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE());"}
{"input": " \ud5ec\uc2a4\ucf00\uc5b4 \uc2a4\ud0c0\ud2b8\uc5c5\uc5d0 \ub300\ud55c \uac01 \ud22c\uc790\uc790\uc758 \ud22c\uc790 \uac74\uc218\ub97c \ud22c\uc790 \uac74\uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE investors (id INT, name TEXT); CREATE TABLE investments (id INT, investor_id INT, startup_id INT, investment_amount INT); CREATE TABLE startups (id INT, name TEXT, industry TEXT); INSERT INTO investors (id, name) VALUES (1, 'InvestorA'), (2, 'InvestorB'); INSERT INTO startups (id, name, industry) VALUES (1, 'HealthcareStartupA', 'Healthcare'), (2, 'TechStartupB', 'Technology'); INSERT INTO investments (id, investor_id, startup_id, investment_amount) VALUES (1, 1, 1, 100000), (2, 1, 2, 200000), (3, 2, 1, 150000);", "output": "SELECT i.name, COUNT(*) as num_investments FROM investors i INNER JOIN investments inv ON i.id = inv.investor_id INNER JOIN startups s ON inv.startup_id = s.id WHERE s.industry = 'Healthcare' GROUP BY i.name ORDER BY num_investments DESC;"}
{"input": " 'RPG' \uac8c\uc784\uc744 \ud55c \ubc88\ub3c4 \ud574\ubcf8 \uc801\uc774 \uc5c6\ub294 \ud50c\ub808\uc774\uc5b4\ub97c \ud655\ubcf4\ud558\uc138\uc694.", "context": "player (player_id, name, email, age, gender, country, total_games_played); game (game_id, name, genre, release_year); player_game (player_id, game_id, last_played)", "output": "SELECT DISTINCT p.player_id, p.name, p.email, p.age, p.gender, p.country, p.total_games_played FROM player p LEFT JOIN player_game pg ON p.player_id = pg.player_id LEFT JOIN game g ON pg.game_id = g.game_id WHERE g.genre != 'RPG' OR g.game_id IS NULL"}
{"input": " 2019\ub144 \uae30\ubd80\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount INT, DonationYear INT); INSERT INTO Donors (DonorID, DonorName, DonationAmount, DonationYear) VALUES (1, 'Donor A', 1500, 2019), (2, 'Donor B', 2000, 2019), (3, 'Donor C', 2500, 2019);", "output": "SELECT DonorName, AVG(DonationAmount) as AverageDonation FROM Donors WHERE DonationYear = 2019 GROUP BY DonorName;"}
{"input": " \ubaac\ud2b8\ub9ac\uc62c\uc5d0 \uac70\uc8fc\ud558\ub294 \uae30\ubd80\uc790\uac00 \uce90\ub098\ub2e4 \uc608\uc220 \ubd80\ubb38\uc758 \ube44\uc601\ub9ac \ub2e8\uccb4\uc5d0 \uae30\ubd80\ud55c \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE provinces (province_id INT, province_name TEXT); INSERT INTO provinces VALUES (1, 'Quebec');", "output": "SELECT SUM(donation_amount) as total_donations FROM donors d JOIN donations don ON d.donor_id = don.donor_id JOIN nonprofits n ON don.nonprofit_id = n.nonprofit_id JOIN provinces p ON d.city = p.province_name WHERE n.sector = 'arts' AND p.province_name = 'Montreal';"}
{"input": " '\ub0a8\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \ud6a8\uc728\uc774 40%\ub97c \ub118\ub294 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ub18d\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_farms (id INT, name VARCHAR(50), region VARCHAR(50), capacity FLOAT, efficiency FLOAT); INSERT INTO wind_farms (id, name, region, capacity, efficiency) VALUES (1, 'Windfarm B', 'South', 150.8, 0.43); CREATE TABLE solar_farms (id INT, name VARCHAR(50), region VARCHAR(50), capacity FLOAT, efficiency FLOAT); INSERT INTO solar_farms (id, name, region, capacity, efficiency) VALUES (1, 'Solarfarm B', 'South', 200.6, 0.46);", "output": "SELECT name, efficiency FROM wind_farms WHERE region = 'South' UNION SELECT name, efficiency FROM solar_farms WHERE region = 'South' HAVING efficiency > 0.4;"}
{"input": "\ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \uc9c0\uc5ed\uc0ac\ud68c \ubd09\uc0ac \ud615\uc744 \uc120\uace0\ubc1b\uc740 \ubc94\uc8c4\uc790\uc5d0\uac8c \ud560\ub2f9\ub418\ub294 \ucd5c\ub300 \uc9c0\uc5ed \uc0ac\ud68c \ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_service_sentences (offender_id INT, state VARCHAR(255), hours_served INT); INSERT INTO community_service_sentences (offender_id, state, hours_served) VALUES (1, 'Texas', 50); INSERT INTO community_service_sentences (offender_id, state, hours_served) VALUES (2, 'Florida', 75);", "output": "SELECT state, MAX(hours_served) as max_hours_served FROM community_service_sentences WHERE state = 'Texas';"}
{"input": " 2021\ub144 \uc77c\ubcf8\uc758 \ubaa8\ub4e0 \ubb38\ud654\uc720\uc0b0\uc744 \ubc29\ubb38 \ud69f\uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cultural_sites (site_id INT, name VARCHAR(255), country VARCHAR(255), visitation_count INT); INSERT INTO cultural_sites (site_id, name, country, visitation_count) VALUES (1, 'Temples of Kyoto', 'Japan', 500000), (2, 'Mount Fuji', 'Japan', 800000);", "output": "SELECT name, visitation_count FROM cultural_sites WHERE country = 'Japan';"}
{"input": "2023\ub144 \uc0c1\ubc18\uae30 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uacfc \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ud65c\ub3d9\uc774 \uc5c6\ub294 \uce74\ud14c\uace0\ub9ac\ub294 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE ProgramCategories (ProgramCategoryID INT, ProgramName TEXT, Category TEXT); INSERT INTO ProgramCategories (ProgramCategoryID, ProgramName, Category) VALUES (1, 'Kids Education', 'Education'), (2, 'Medical Research', 'Health'); CREATE TABLE ProgramDonations (ProgramCategoryID INT, DonationAmount DECIMAL(10,2), DonationDate DATE); INSERT INTO ProgramDonations (ProgramCategoryID, DonationAmount, DonationDate) VALUES (1, 250.00, '2023-01-15'), (2, 450.00, '2023-03-30'); CREATE TABLE ProgramVolunteers (ProgramCategoryID INT, VolunteerCount INT); INSERT INTO ProgramVolunteers (ProgramCategoryID, VolunteerCount) VALUES (1, 15), (2, 25);", "output": "SELECT Category, SUM(DonationAmount) as TotalDonation, SUM(VolunteerCount) as NumVolunteers FROM ProgramCategories JOIN ProgramDonations ON ProgramCategories.ProgramCategoryID = ProgramDonations.ProgramCategoryID JOIN ProgramVolunteers ON ProgramCategories.ProgramCategoryID = ProgramVolunteers.ProgramCategoryID WHERE DonationDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY Category HAVING SUM(DonationAmount) > 0 AND SUM(VolunteerCount) > 0;"}
{"input": " '\uc800\uc704\ud5d8' \uc778\uc218 \uadf8\ub8f9\uc5d0\uc11c \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE underwriting (id INT, group VARCHAR(10), name VARCHAR(20), claim_amount DECIMAL(10,2)); INSERT INTO underwriting (id, group, name, claim_amount) VALUES (1, 'High Risk', 'John Doe', 5000.00), (2, 'Low Risk', 'Jane Smith', 2500.00), (3, 'High Risk', 'Mike Johnson', 7000.00), (4, 'Low Risk', 'Emma White', 3000.00);", "output": "SELECT name, claim_amount FROM (SELECT name, claim_amount, ROW_NUMBER() OVER (PARTITION BY group ORDER BY claim_amount DESC) rn FROM underwriting WHERE group = 'Low Risk') sub WHERE rn = 1;"}
{"input": " 2022\ub144 10\uc6d4 '\ubca0\uc9c0 \uc2a4\uc2dc \ub864' \uc7ac\ub8cc\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ingredients (ingredient_id INT, ingredient_name TEXT, dish_id INT, cost FLOAT); INSERT INTO Ingredients (ingredient_id, ingredient_name, dish_id, cost) VALUES (1, 'Sushi Rice', 8, 1.5);", "output": "SELECT SUM(cost) FROM Ingredients WHERE dish_id IN (SELECT dish_id FROM Dishes WHERE dish_name = 'Veggie Sushi Roll') AND ingredient_name NOT IN ('Seaweed', 'Cucumber', 'Avocado');"}
{"input": " \uc81c\uacf5\uc790\ub2f9 \uccad\uac01 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE SupportProgramsForHearingImpaired (ProgramID INT, ProviderName VARCHAR(50), DisabilityType VARCHAR(50));", "output": "SELECT ProviderName, AVG(ProgramCount) FROM (SELECT ProviderName, COUNT(ProgramID) as ProgramCount FROM SupportProgramsForHearingImpaired WHERE DisabilityType = 'hearing impairment' GROUP BY ProviderName) as subquery GROUP BY ProviderName;"}
{"input": " \ub0a8\uadf9\ud574\uc5d0 \uc11c\uc2dd\ud558\ub294 \ubaa8\ub4e0 \uace0\ub798 \uc885\uc758 \uc774\ub984\uacfc \ubcf4\uc874 \uc0c1\ud0dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_mammals (mammal_id INT, mammal_name VARCHAR(255), PRIMARY KEY(mammal_id)); INSERT INTO marine_mammals (mammal_id, mammal_name) VALUES (1, 'Blue Whale'), (2, 'Fin Whale'); CREATE TABLE conservation_status (status_id INT, mammal_id INT, status VARCHAR(255), PRIMARY KEY(status_id, mammal_id), FOREIGN KEY (mammal_id) REFERENCES marine_mammals(mammal_id)); INSERT INTO conservation_status (status_id, mammal_id, status) VALUES (1, 1, 'Endangered'), (2, 2, 'Vulnerable'); CREATE TABLE ocean_distribution (distribution_id INT, mammal_id INT, region VARCHAR(255), PRIMARY KEY(distribution_id, mammal_id), FOREIGN KEY (mammal_id) REFERENCES marine_mammals(mammal_id)); INSERT INTO ocean_distribution (distribution_id, mammal_id, region) VALUES (1, 1, 'Antarctic Ocean'), (2, 2, 'Antarctic Ocean'); ", "output": "SELECT marine_mammals.mammal_name, conservation_status.status FROM marine_mammals INNER JOIN conservation_status ON marine_mammals.mammal_id = conservation_status.mammal_id INNER JOIN ocean_distribution ON marine_mammals.mammal_id = ocean_distribution.mammal_id WHERE ocean_distribution.region = 'Antarctic Ocean';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uae30\ubd80\uc790\uc758 \uae30\ubd80\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(255)); CREATE TABLE donations (id INT, donor_id INT, donation_date DATE, amount DECIMAL(10, 2), currency_id INT); CREATE TABLE currencies (id INT, name VARCHAR(255), exchange_rate DECIMAL(10, 2));", "output": "SELECT donors.name, SUM(donations.amount * currencies.exchange_rate) FROM donations JOIN donors ON donations.donor_id = donors.id JOIN currencies ON donations.currency_id = currencies.id WHERE donations.donation_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE GROUP BY donations.donor_id;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ub18d\ucd0c\ubcd1\uc6d0\u00b7\uc758\ub8cc\uc6d0 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub294\uc9c0, \uac01 \ubcd1\uc6d0 \ubc18\uacbd 30\u339e \uc774\ub0b4 \uc9c4\ub8cc\uc18c \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub294\uc9c0?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT, region TEXT); INSERT INTO hospitals (id, name, location, num_beds, region) VALUES (1, 'Hospital A', 'Rural Andalusia', 200, 'Andalusia'), (2, 'Hospital B', 'Rural Madrid', 250, 'Madrid'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_beds INT, region TEXT); INSERT INTO clinics (id, name, location, num_beds, region) VALUES (1, 'Clinic A', 'Rural Andalusia', 50, 'Andalusia'), (2, 'Clinic B', 'Rural Madrid', 75, 'Madrid'); CREATE TABLE distance (hospital_id INT, clinic_id INT, distance FLOAT); INSERT INTO distance (hospital_id, clinic_id, distance) VALUES (1, 1, 25.0), (1, 2, 30.0), (2, 1, 35.0), (2, 2, 40.0);", "output": "SELECT h.region, COUNT(h.id) AS num_hospitals, COUNT(c.id) AS num_clinics_within_30_km FROM hospitals h INNER JOIN distance d ON h.id = d.hospital_id INNER JOIN clinics c ON d.clinic_id = c.id WHERE d.distance <= 30 GROUP BY h.region;"}
{"input": " 2020\ub144\uacfc 2021\ub144\uc5d0 \ub274\uc9c8\ub79c\ub4dc\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visitor_stats (destination VARCHAR(20), visit_year INT); INSERT INTO visitor_stats (destination, visit_year) VALUES ('New Zealand', 2020), ('New Zealand', 2020), ('New Zealand', 2021), ('New Zealand', 2021), ('New Zealand', 2021);", "output": "SELECT SUM(visits) FROM (SELECT COUNT(*) AS visits FROM visitor_stats WHERE destination = 'New Zealand' AND visit_year = 2020 UNION ALL SELECT COUNT(*) FROM visitor_stats WHERE destination = 'New Zealand' AND visit_year = 2021) AS subquery;"}
{"input": " \ud2b9\uc815 \uae30\uac04 \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc740 \uacbd\uae30\ub97c \uce58\ub978 \ud50c\ub808\uc774\uc5b4 \ucc3e\uae30", "context": "CREATE TABLE playerperformances (player_id INT, game_id INT, match_date DATE, kills INT, deaths INT); INSERT INTO playerperformances (player_id, game_id, match_date, kills, deaths) VALUES (1, 1001, '2022-01-01', 25, 10);", "output": "SELECT player_id, COUNT(*) as num_matches, RANK() OVER (ORDER BY COUNT(*) DESC) as rank FROM playerperformances WHERE match_date BETWEEN '2022-01-01' AND '2022-02-01' GROUP BY player_id"}
{"input": " '\uc6a9\ub9e4' \uc720\ud615\uc758 \ud654\ud559\ubb3c\uc9c8\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Chemicals (Id INT, Name VARCHAR(50), Type VARCHAR(50), ManufacturingDate DATE); INSERT INTO Chemicals (Id, Name, Type, ManufacturingDate) VALUES (1, 'Acetone', 'Solvent', '2021-01-01'), (2, 'Ammonia', 'Gas', '2022-02-01');", "output": "SELECT * FROM Chemicals WHERE Type = 'Solvent';"}
{"input": " 2022\ub144\uc5d0 \uc8fc\ubcc4\ub85c \ud3d0\uae30\ubb3c \uad00\ub9ac \ubc0f \uc8fc\ud0dd \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BudgetAllocations (State VARCHAR(50), Service VARCHAR(50), Year INT, Amount DECIMAL(10,2)); INSERT INTO BudgetAllocations (State, Service, Year, Amount) VALUES ('Texas', 'Waste Management', 2022, 12000.00), ('Texas', 'Housing', 2022, 18000.00), ('Florida', 'Waste Management', 2022, 10000.00), ('Florida', 'Housing', 2022, 16000.00);", "output": "SELECT State, SUM(Amount) as TotalBudget FROM BudgetAllocations WHERE Service IN ('Waste Management', 'Housing') AND Year = 2022 GROUP BY State;"}
{"input": " \uc720\uc0c9 \uc778\uc885\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc758 \uace0\uc720 \uc0b0\uc5c5 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE company_founding (company_name VARCHAR(255), founder_race VARCHAR(50)); INSERT INTO company_founding (company_name, founder_race) VALUES ('Delta Enterprises', 'African American'), ('Echo Startups', 'Asian'), ('Foxtrot LLC', 'Hispanic'), ('Golf Inc', 'Caucasian'); CREATE TABLE company_industry (company_name VARCHAR(255), industry VARCHAR(50)); INSERT INTO company_industry (company_name, industry) VALUES ('Delta Enterprises', 'Technology'), ('Delta Enterprises', 'Retail'), ('Echo Startups', 'Technology'), ('Foxtrot LLC', 'Retail'), ('Golf Inc', 'Sports');", "output": "SELECT COUNT(DISTINCT industry) FROM company_industry WHERE company_name IN (SELECT company_name FROM company_founding WHERE founder_race <> 'Caucasian');"}
{"input": " \uccab \uc0bc \ubd84\uae30\uc5d0 \ub18d\ucd0c \uc784\uc0b0\ubd80\uc758 \uc0b0\uc804 \uc57d\uc18d \uc0ac\uc774\uc758 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE appointments (appointment_id INT, patient_id INT, appointment_date DATE, clinic_id INT, trimester INT);", "output": "SELECT AVG(DATEDIFF(appointments.appointment_date, LAG(appointments.appointment_date) OVER (PARTITION BY appointments.patient_id ORDER BY appointments.appointment_date))) as avg_time_between_appointments FROM appointments WHERE appointments.clinic_id IN (SELECT clinic_id FROM clinics WHERE clinics.clinic_location LIKE 'rural%') AND appointments.trimester = 1;"}
{"input": " \uc608\uc220\ud559\uacfc\uc758 \uad50\uc218\uc9c4\ub2f9 \uc218\uc5ec\ub418\ub294 \uc5f0\uad6c \ubcf4\uc870\uae08\uc758 \uc911\uc559\uac12\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE grants (id INT, faculty_id INT, year INT, amount DECIMAL(10,2)); INSERT INTO grants (id, faculty_id, year, amount) VALUES (1, 1, 2020, 25000); INSERT INTO grants (id, faculty_id, year, amount) VALUES (2, 2, 2019, 30000); CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO faculty (id, name, department) VALUES (1, 'Eva', 'Arts'); INSERT INTO faculty (id, name, department) VALUES (2, 'Frank', 'Chemistry');", "output": "SELECT AVG(g.num_grants) FROM (SELECT faculty_id, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY COUNT(*)) OVER () AS median_num_grants FROM grants GROUP BY faculty_id) g JOIN faculty f ON g.faculty_id = f.id WHERE f.department = 'Arts';"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \uce5c\ud658\uacbd \uc219\uc18c\uac00 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE eco_accommodations (id INT, region VARCHAR(255), type VARCHAR(255)); INSERT INTO eco_accommodations (id, region, type) VALUES (1, 'North America', 'Eco Lodge'), (2, 'Europe', 'Green Hotel'), (3, 'Asia', 'Eco Hotel');", "output": "SELECT region, COUNT(*) FROM eco_accommodations GROUP BY region;"}
{"input": " \uacc4\uc57d\uc5c5\uccb4\uac00 \uc720\ub7fd \uc5f0\ud569\uc5d0 \ud310\ub9e4\ud55c \uad70\uc0ac \uc7a5\ube44\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Contractors (ContractorID INT, ContractorName VARCHAR(100), Country VARCHAR(50));CREATE TABLE MilitaryEquipment (EquipmentID INT, EquipmentName VARCHAR(100), QuantitySold INT, ContractorID INT);CREATE VIEW EUMembers AS SELECT 'Germany' AS Country UNION ALL SELECT 'France' UNION ALL SELECT 'Italy' UNION ALL SELECT 'Spain' UNION ALL SELECT 'Netherlands' UNION ALL SELECT 'Belgium';", "output": "SELECT SUM(ME.QuantitySold) FROM MilitaryEquipment ME JOIN Contractors C ON ME.ContractorID = C.ContractorID WHERE C.Country IN (SELECT Country FROM EUMembers);"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \uacf5\uae09\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ud3c9\uade0 \uac00\uaca9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE sustainable_materials (id INT, country VARCHAR(50), price DECIMAL(5,2)); INSERT INTO sustainable_materials (id, country, price) VALUES (1, 'United States', 15.99), (2, 'Brazil', 12.50);", "output": "SELECT country, AVG(price) FROM sustainable_materials GROUP BY country;"}
{"input": " Period3\uc758 \uc0ac\uc774\ud2b8\uc640 \ub3d9\uc77c\ud55c \uc704\uce58\uc5d0 \uc704\uce58\ud55c \uc0ac\uc774\ud2b8\uc5d0 \ub300\ud55c \ubcf4\uace0\uc11c \uc720\ud615\uacfc \ud574\ub2f9 \uc0ac\uc774\ud2b8\uc5d0\uc11c \ubc1c\uacac\ub41c \uc720\ubb3c \uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sites (id INT, site_name VARCHAR(50), location VARCHAR(50), period VARCHAR(50), type VARCHAR(50)); INSERT INTO Sites (id, site_name, location, period, type) VALUES (1, 'Site1', 'Location1', 'Period1', 'Settlement'), (2, 'Site2', 'Location1', 'Period3', 'Village'); CREATE TABLE Artifacts (id INT, site VARCHAR(50), artifact_name VARCHAR(50), date_found DATE, description TEXT); INSERT INTO Artifacts (id, site, artifact_name, date_found, description) VALUES (1, 'Site1', 'Pottery', '2020-01-01', 'Fine pottery with unique symbols'); CREATE TABLE Reports (id INT, site_name VARCHAR(50), date DATE, type VARCHAR(50), views INT); INSERT INTO Reports (id, site_name, date, type, views) VALUES (1, 'Site1', '2021-01-01', 'Excavation', 1000);", "output": "SELECT r.type, COUNT(a.id) as artifact_count FROM Reports r JOIN Sites s ON r.site_name = s.site_name JOIN Sites s2 ON s.location = s2.location AND s2.period = 'Period3' JOIN Artifacts a ON s.site_name = a.site GROUP BY r.type;"}
{"input": " \ud638\uc8fc\uc640 \uc911\uad6d\uc758 \ubaa8\ub4e0 \uc720\ud615\uc758 \uc790\uc728\uc8fc\ud589\ucc28\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE autonomous_vehicles_country (id INT, type VARCHAR(20), country VARCHAR(20)); INSERT INTO autonomous_vehicles_country (id, type, country) VALUES (1, 'taxi', 'Australia'), (2, 'shuttle', 'China'), (3, 'truck', 'Australia');", "output": "SELECT DISTINCT type FROM autonomous_vehicles_country WHERE country IN ('Australia', 'China');"}
{"input": " '\uc774\ud0c8\ub9ac\uc544'\uc5d0\uc11c '#travel' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc5d0 \ubc1b\uc740 \ud558\ub8e8 \ud3c9\uade0 \ub313\uae00 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (id INT, date DATE, comments INT, content TEXT); CREATE TABLE hashtags (id INT, post_id INT, hashtag TEXT);", "output": "SELECT AVG(comments / DATEDIFF('2023-03-01', date)) AS avg_comments_per_day"}
{"input": " '2019\ub144' '\ub0a8\uc911\uad6d\ud574'\uc5d0\uc11c \uc624\uc5fc \uc218\uce58\uac00 \uc5bc\ub9c8\ub098 \ub098\uc654\ub098\uc694?", "context": "CREATE TABLE pollution_readings (id INTEGER, location VARCHAR(255), pollution_level FLOAT, reading_date DATE);", "output": "SELECT COUNT(*) FROM pollution_readings WHERE location = 'South China Sea' AND reading_date BETWEEN '2019-01-01' AND '2019-12-31';"}
{"input": "\ubd81\uc11c\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), age INT, region VARCHAR(20)); INSERT INTO customers (customer_id, name, age, region) VALUES (1, 'John Doe', 35, 'Southeast'), (2, 'Jane Smith', 45, 'Northeast'), (3, 'Mike Johnson', 50, 'Southeast'), (4, 'Alice Davis', 25, 'Midwest'), (5, 'Bob Brown', 60, 'Northwest');", "output": "SELECT MAX(age), MIN(age) FROM customers WHERE region = 'Northwest';"}
{"input": " 2022\ub144 '\ub0a8\ubd80' \uc9c0\uc5ed \uad11\uc0b0 \uadfc\ub85c\uc790 1\uc778\ub2f9 \uc6d4 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_usage (site_id INT, site_name TEXT, region TEXT, month INT, year INT, worker_id INT, water_usage INT); INSERT INTO water_usage (site_id, site_name, region, month, year, worker_id, water_usage) VALUES (12, 'DEF Mine', 'South', 1, 2022, 12001, 200), (13, 'GHI Mine', 'South', 2, 2022, 13001, 220), (14, 'JKL Mine', 'South', 3, 2022, 14001, 240);", "output": "SELECT region, AVG(water_usage) as avg_water_usage_per_worker FROM water_usage WHERE region = 'South' AND year = 2022 GROUP BY region, year;"}
{"input": " \uac00\uc7a5 \uc778\uae30\uac00 \uc5c6\ub294 \uc8fc\uc694 \uba54\ub274\ubcf4\ub2e4 \uac00\uaca9\uc774 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE popularity (menu_id INT, popularity INT); INSERT INTO popularity (menu_id, popularity) VALUES (1, 10), (2, 20), (3, 30), (4, 40), (5, 50);", "output": "SELECT menu_name, price FROM menus WHERE menu_type = 'Entree' AND price > (SELECT MIN(price) FROM menus WHERE menu_type = 'Entree') AND menu_id NOT IN (SELECT menu_id FROM popularity WHERE popularity = (SELECT MIN(popularity) FROM popularity));"}
{"input": " \ube44\uc6a9\uc774 \uac00\uc7a5 \uc801\uac8c \ub4dc\ub294 \uae30\ud6c4 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_mitigation_projects (project_id INT, project_name TEXT, location TEXT, cost FLOAT); INSERT INTO climate_mitigation_projects (project_id, project_name, location, cost) VALUES (1, 'Tree Planting 1', 'Canada', 100000.00), (2, 'Reforestation 2', 'India', 200000.00), (3, 'Carbon Capture 3', 'USA', 500000.00);", "output": "SELECT project_name, location FROM climate_mitigation_projects WHERE cost = (SELECT MIN(cost) FROM climate_mitigation_projects);"}
{"input": " 2019\ub144 '\ub3d9\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uc751\ub2f5\uc2dc\uac04\uc774 5\ubd84 \ubbf8\ub9cc\uc778 \uae34\uae09\uc804\ud654 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, call_time TIMESTAMP, location VARCHAR(20));", "output": "SELECT COUNT(*) FROM emergency_calls WHERE location = 'east' AND EXTRACT(EPOCH FROM call_time - LAG(call_time) OVER (PARTITION BY location ORDER BY call_time)) / 60 < 5 AND EXTRACT(YEAR FROM call_time) = 2019;"}
{"input": " \ub124\ud2b8\uc6cc\ud06c \ub2e4\uc6b4\ud0c0\uc784 \ubd88\ub9cc\uc774 \uc788\ub294 \uace0\uac1d\uc744 \uc704\ud55c \ub370\uc774\ud130 \ud5c8\uc6a9\ub7c9 \ub298\ub9ac\uae30", "context": "CREATE TABLE mobile_subscribers (id INT, name VARCHAR(255), data_allowance INT, contract_start DATE); INSERT INTO mobile_subscribers (id, name, data_allowance, contract_start) VALUES (1, 'John Doe', 5000, '2020-01-01'), (2, 'Jane Doe', 3000, '2019-01-01'); CREATE TABLE customer_complaints (id INT, subscriber_id INT, complaint_date DATE, complaint_type VARCHAR(255)); INSERT INTO customer_complaints (id, subscriber_id, complaint_date, complaint_type) VALUES (1, 1, '2020-02-01', 'Network Downtime');", "output": "UPDATE mobile_subscribers SET data_allowance = 7000 WHERE id IN (SELECT subscriber_id FROM customer_complaints WHERE complaint_type = 'Network Downtime');"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\uc11c \uc0dd\uc0b0\ub418\uace0 \uc601\ud5a5 \uc810\uc218\uac00 50\ubcf4\ub2e4 \ud070 \ud654\ud559 \ubb3c\uc9c8\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_production (region VARCHAR(20), chemical VARCHAR(30), quantity INT); INSERT INTO chemical_production (region, chemical, quantity) VALUES ('Africa', 'Ethanol', 6000), ('Africa', 'Propanol', 8000); CREATE TABLE environmental_impact (chemical VARCHAR(30), impact_score INT); INSERT INTO environmental_impact (chemical, impact_score) VALUES ('Ethanol', 52), ('Propanol', 63), ('Butanol', 59);", "output": "SELECT chemical FROM chemical_production WHERE region = 'Africa' INTERSECT SELECT chemical FROM environmental_impact WHERE impact_score > 50;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uac1c\ubd09\ub41c \uc561\uc158 \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), genre VARCHAR(50), release_year INT, budget DECIMAL(10,2)); INSERT INTO movies (id, title, genre, release_year, budget) VALUES (1, 'Movie1', 'Action', 2015, 15000000.00), (2, 'Movie2', 'Comedy', 2016, 5000000.00), (3, 'Movie3', 'Action', 2017, 20000000.00);", "output": "SELECT AVG(budget) FROM movies WHERE genre = 'Action' AND release_year BETWEEN 2015 AND 2020;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc744 \uac00\uc9c4 \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, Name varchar(50), Program varchar(50), Hours numeric(5,2)); INSERT INTO Volunteers (VolunteerID, Name, Program, Hours) VALUES (1, 'Alice', 'ProgramA', 20.00), (2, 'Bob', 'ProgramB', 30.00);", "output": "SELECT Name, Program, MAX(Hours) OVER (PARTITION BY Program) AS MaxHours FROM Volunteers;"}
{"input": " \uc778\ub3c4 \uc0ac\uc6a9\uc790\uac00 \uc791\uc131\ud55c \uac8c\uc2dc\ubb3c\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ud574\uc2dc\ud0dc\uadf8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, user_id INT, content TEXT, hashtags TEXT, post_date DATE); INSERT INTO posts (id, user_id, content, hashtags, post_date) VALUES (1, 1, 'Hello World', '#datascience', '2022-06-01'), (2, 1, 'I love data', '#ai', '2022-06-02'), (3, 2, 'Namaste', '#india', '2022-06-03'); CREATE TABLE users (id INT, name VARCHAR(100), country VARCHAR(50)); INSERT INTO users (id, name, country) VALUES (1, 'Akshay', 'India'), (2, 'Bhavna', 'India');", "output": "SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(hashtags, ' ', n.n), ' ', -1) hashtag, COUNT(*) count FROM posts JOIN users ON posts.user_id = users.id CROSS JOIN (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) n WHERE users.country = 'India' GROUP BY hashtag ORDER BY count DESC LIMIT 1;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE pollution_control_initiatives (id INT, name TEXT, location TEXT); INSERT INTO pollution_control_initiatives (id, name, location) VALUES (1, 'Initiative A', 'Arctic'); INSERT INTO pollution_control_initiatives (id, name, location) VALUES (2, 'Initiative B', 'Antarctic');", "output": "SELECT name, location FROM pollution_control_initiatives WHERE location = 'Arctic';"}
{"input": "\ud770\uae34\uc218\uc5fc\uace0\ub798\uac00 \ubc1c\uacac\ub418\ub294 \ucd5c\uc18c \uae4a\uc774\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE marine_species (id INT, species_name VARCHAR(50), habitat_depth FLOAT); INSERT INTO marine_species (id, species_name, habitat_depth) VALUES (1, 'Orca', 200.0), (2, 'Blue Whale', 500.0);", "output": "SELECT MIN(habitat_depth) FROM marine_species WHERE species_name = 'Blue Whale';"}
{"input": " \ub2e4\uc591\uc131 \ubc0f \ud3ec\uc6a9\uc131 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0\uc758 \ubd80\uc11c\ubcc4 \ube44\uc728\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(50)); CREATE TABLE TrainingPrograms (ProgramID INT, ProgramName VARCHAR(50), Completed DATE); CREATE TABLE EmployeeTraining (EmployeeID INT, ProgramID INT);", "output": "SELECT e.Department, COUNT(DISTINCT e.EmployeeID) * 100.0 / (SELECT COUNT(DISTINCT EmployeeID) FROM Employees) AS Percentage FROM Employees e INNER JOIN EmployeeTraining et ON e.EmployeeID = et.EmployeeID INNER JOIN TrainingPrograms tp ON et.ProgramID = tp.ProgramID WHERE tp.ProgramName = 'Diversity and Inclusion Training' GROUP BY e.Department;"}
{"input": " \ub0a8\uadf9\ud574\uc640 \ub300\uc11c\uc591\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ubaa8\ub4e0 \ud574\uc591\uc885\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marine_species_status (id INT, species_name VARCHAR(255), conservation_status VARCHAR(255), ocean VARCHAR(255)); INSERT INTO marine_species_status (id, species_name, conservation_status, ocean) VALUES (1, 'Royal Penguin', 'Endangered', 'Southern Ocean'), (2, 'Crabeater Seal', 'Least Concern', 'Southern Ocean'); CREATE TABLE oceanography (id INT, species_name VARCHAR(255), location VARCHAR(255)); INSERT INTO oceanography (id, species_name, location) VALUES (1, 'Royal Penguin', 'Southern Ocean'), (2, 'Crabeater Seal', 'Southern Ocean'), (3, 'Royal Penguin', 'Atlantic Ocean');", "output": "SELECT species_name FROM marine_species_status WHERE ocean = 'Southern Ocean' INTERSECT SELECT species_name FROM oceanography WHERE location = 'Atlantic Ocean';"}
{"input": " \ub0a8\uc131 \uc9c1\uc6d0\uacfc \uc5ec\uc131 \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE Employees (id INT, first_name VARCHAR(50), last_name VARCHAR(50), gender VARCHAR(10), salary DECIMAL(10, 2));", "output": "SELECT gender, AVG(salary) AS avg_salary FROM Employees GROUP BY gender;"}
{"input": " \ucd5c\uadfc 2\uc77c \ub3d9\uc548 'Game2' \uac8c\uc784\uc758 \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE game_activity (game VARCHAR(50), activity_date DATE, active_users INT); INSERT INTO game_activity (game, activity_date, active_users) VALUES ('Game2', '2022-01-01', 1000), ('Game2', '2022-01-02', 1200), ('Game1', '2022-01-01', 800), ('Game1', '2022-01-02', 850);", "output": "SELECT LAG(active_users, 1) OVER (PARTITION BY game ORDER BY activity_date DESC) - active_users as user_change FROM game_activity WHERE game = 'Game2' ORDER BY activity_date DESC LIMIT 1;"}
{"input": "\uc2dc\uce74\uace0 \ubd88\uc2a4\uc758 \ud2f0\ucf13 \ud310\ub9e4 \ubc0f \uc0c1\ud488 \ud310\ub9e4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tickets (ticket_id INT, price DECIMAL(5,2), team_id INT); CREATE TABLE merchandise (merchandise_id INT, price DECIMAL(5,2), team_id INT); CREATE TABLE teams (team_id INT, team_name VARCHAR(20)); INSERT INTO teams (team_id, team_name) VALUES (3, 'Chicago Bulls'); INSERT INTO tickets (ticket_id, price, team_id) VALUES (3, 50.00, 3); INSERT INTO merchandise (merchandise_id, price, team_id) VALUES (3, 25.00, 3);", "output": "SELECT SUM(tickets.price + merchandise.price) FROM tickets INNER JOIN teams ON tickets.team_id = teams.team_id INNER JOIN merchandise ON teams.team_id = merchandise.team_id WHERE teams.team_name = 'Chicago Bulls';"}
{"input": "\ub7f0\ub358 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc758 \uc790\uc728\uc8fc\ud589 \ucc28\ub7c9\uc758 \ucd1d \uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vehicles (vehicle_id INT, is_autonomous BOOLEAN, system_type VARCHAR(20)); INSERT INTO vehicles (vehicle_id, is_autonomous, system_type) VALUES (1, true, 'Public Transportation'), (2, false, 'Public Transportation'), (3, true, 'Personal');", "output": "SELECT COUNT(*) FROM vehicles WHERE is_autonomous = true AND system_type = 'Public Transportation';"}
{"input": " 'Middle Eastern Delights'\uc758 'Chicken Shawarma'\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uc218\uc775\uc740 \uba87 \ud37c\uc13c\ud2b8\uc778\uac00\uc694?", "context": "CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name) VALUES (8, 'Middle Eastern Delights'); CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), price DECIMAL(5,2), restaurant_id INT); INSERT INTO menu_items (menu_item_id, name, price, restaurant_id) VALUES (10, 'Chicken Shawarma', 12.99, 8); CREATE TABLE orders (order_id INT, menu_item_id INT, quantity INT, order_date DATE, restaurant_id INT); INSERT INTO orders (order_id, menu_item_id, quantity, order_date, restaurant_id) VALUES (6, 10, 2, '2022-01-03', 8);", "output": "SELECT 100.0 * SUM(price * quantity) / (SELECT SUM(price * quantity) FROM orders o JOIN menu_items mi ON o.menu_item_id = mi.menu_item_id WHERE mi.restaurant_id = 8) AS revenue_percentage FROM orders o JOIN menu_items mi ON o.menu_item_id = mi.menu_item_id WHERE mi.name = 'Chicken Shawarma' AND mi.restaurant_id = 8;"}
{"input": " \uc77c\ub9ac\ub178\uc774 \uc8fc \uac74\uc124 \ub178\ub3d9\uc790\uc758 \ud3c9\uade0 \uc2dc\uac04\ub2f9 \uc784\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ConstructionLaborers (id INT, name TEXT, state TEXT, hourlyWage FLOAT);", "output": "SELECT AVG(hourlyWage) FROM ConstructionLaborers WHERE state = 'Illinois';"}
{"input": " AI \uc724\ub9ac\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \ud504\ub85c\uc81d\ud2b8\uc758 \uc5f0\ub3c4\ubcc4 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project_budget (project_id INT, project_name VARCHAR(255), budget DECIMAL(10,2), year INT); INSERT INTO project_budget (project_id, project_name, budget, year) VALUES (1, 'Ethical AI Research', 500000, 2020), (2, 'AI Ethics Guidelines Development', 750000, 2021);", "output": "SELECT AVG(budget) as avg_budget, year FROM project_budget WHERE project_name LIKE '%AI ethics%' GROUP BY year;"}
{"input": " \uc2f1\uac00\ud3ec\ub974\uc758 \uc5b4\ub290 \ubd80\ucc98\uac00 \uc99d\uac70 \uae30\ubc18 \uc815\ucc45 \uc218\ub9bd\uc744 \ub2f4\ub2f9\ud569\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT PRIMARY KEY, name TEXT); INSERT INTO countries (id, name) VALUES (1, 'Singapore'); CREATE TABLE ministries (id INT PRIMARY KEY, country_id INT, name TEXT, policy_making TEXT); INSERT INTO ministries (id, country_id, name, policy_making) VALUES (1, 1, 'Ministry of Education', 'evidence-based'); INSERT INTO ministries (id, country_id, name, policy_making) VALUES (2, 1, 'Ministry of Health', 'evidence-based'); INSERT INTO ministries (id, country_id, name, policy_making) VALUES (3, 1, 'Ministry of Finance', 'evidence-based');", "output": "SELECT name FROM ministries WHERE country_id = (SELECT id FROM countries WHERE name = 'Singapore') AND policy_making = 'evidence-based';"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ub9e4\ub144 \ud3c9\uade0\uc801\uc73c\ub85c \ubcf4\uace0\ub418\ub294 \uc790\uc5f0\uc7ac\ud574 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE disasters (id INT, type TEXT, location TEXT, year INT); INSERT INTO disasters (id, type, location, year) VALUES (1, 'Flood', 'South America', 2020), (2, 'Earthquake', 'Asia', 2019), (3, 'Tornado', 'North America', 2020);", "output": "SELECT AVG(total_disasters) FROM (SELECT location, COUNT(*) AS total_disasters FROM disasters GROUP BY location, year) AS disaster_counts GROUP BY location;"}
{"input": " \ubc15\ubb3c\uad00 \ub514\uc9c0\ud138 \ucf58\ud150\uce20\uc5d0 \ucc38\uc5ec\ud55c \uc21c \ubc29\ubb38\uc790 \uc218\uc640 \uac01 \ub300\ub959\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Continent (Id INT, Continent VARCHAR(50)); CREATE TABLE Visitor (Id INT, Age INT, ContinentId INT, DigitalContent INT);", "output": "SELECT ContinentId, Continent, COUNT(DISTINCT VisitorId) as UniqueVisitors, RANK() OVER (ORDER BY COUNT(DISTINCT VisitorId) DESC) as Ranking FROM Continent c JOIN Visitor v ON c.Id = v.ContinentId WHERE DigitalContent = 1 GROUP BY ContinentId, Continent ORDER BY Ranking;"}
{"input": " Organic_farm_1\uacfc Organic_farm_5 \uc0ac\uc774\uc758 \uc77c\ubc18\uc801\uc778 \uc791\ubb3c\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE organic_farm_1 (crop_type VARCHAR(50)); INSERT INTO organic_farm_1 (crop_type) VALUES ('Quinoa'), ('Kale'), ('Carrot'), ('Buckwheat'); CREATE TABLE organic_farm_5 (crop_type VARCHAR(50)); INSERT INTO organic_farm_5 (crop_type) VALUES ('Chia'), ('Kale'), ('Spinach'), ('Quinoa');", "output": "SELECT crop_type FROM organic_farm_1 WHERE crop_type IN (SELECT crop_type FROM organic_farm_5);"}
{"input": " 2015\ub144 \uc774\ud6c4 \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \ud56d\uacf5\uae30 \ubaa8\ub378\uacfc \uc81c\uc870\uc5c5\uccb4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE aircraft (id INT, model VARCHAR(255), manufacturer_id INT); INSERT INTO aircraft (id, model, manufacturer_id) VALUES (1, 'B737', 1), (2, 'A320', 2), (3, 'B787', 1); CREATE TABLE manufacturer (id INT, name VARCHAR(255)); INSERT INTO manufacturer (id, name) VALUES (1, 'Boeing'), (2, 'Airbus'); CREATE TABLE accident (id INT, aircraft_id INT, accident_date DATE); INSERT INTO accident (id, aircraft_id, accident_date) VALUES (1, 1, '2015-12-25'), (2, 3, '2016-07-22');", "output": "SELECT a.model, m.name, COUNT(a.id) as accidents FROM aircraft a INNER JOIN manufacturer m ON a.manufacturer_id = m.id INNER JOIN accident ac ON a.id = ac.aircraft_id WHERE YEAR(ac.accident_date) >= 2015 GROUP BY a.model, m.name;"}
{"input": " \uc0b4\ubc14\ub3c4\ub974 \ub2ec\ub9ac\uc758 '\uae30\uc5b5\uc758 \uc9c0\uc18d' \uc9c1\uc804\uc5d0 \uc804\uc2dc\ub41c \uadf8\ub9bc\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE painting_exhibitions (painting_id INT, exhibition_id INT, painting_title VARCHAR(255), exhibition_title VARCHAR(255), exhibition_start_date DATE); INSERT INTO painting_exhibitions (painting_id, exhibition_id, painting_title, exhibition_title, exhibition_start_date) VALUES (1, 5, 'The Persistence of Memory', 'Dali and Surrealism', '2026-01-01'); INSERT INTO painting_exhibitions (painting_id, exhibition_id, painting_title, exhibition_title, exhibition_start_date) VALUES (2, 6, 'Swans Reflecting Elephants', 'Dali and Optical Illusions', '2025-01-01');", "output": "SELECT painting_exhibitions.painting_id, painting_exhibitions.exhibition_id, painting_exhibitions.painting_title, painting_exhibitions.exhibition_title, painting_exhibitions.exhibition_start_date, LAG(painting_exhibitions.exhibition_start_date, 1) OVER (ORDER BY painting_exhibitions.exhibition_start_date DESC) as previous_exhibition_date FROM painting_exhibitions WHERE painting_exhibitions.painting_title = 'The Persistence of Memory';"}
{"input": " \uc704\uce58\ubcc4\ub85c \uac00\uc7a5 \ud754\ud55c \uc720\ud615\uc758 \uc6b0\uc8fc \uc4f0\ub808\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceDebris (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255), threat_level INT); INSERT INTO SpaceDebris (id, name, type, location, threat_level) VALUES (1, 'Dead Satellite', 'Spacecraft', 'LEO', 7), (2, 'Rocket Body', 'Spacecraft', 'GEO', 5);", "output": "SELECT type, location, COUNT(*) as debris_count, RANK() OVER (PARTITION BY location ORDER BY COUNT(*) DESC) as rank FROM SpaceDebris GROUP BY type, location ORDER BY location, debris_count DESC;"}
{"input": " \ub300\uc11c\uc591\uc758 \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_depths (ocean TEXT, depth FLOAT); INSERT INTO ocean_depths (ocean, depth) VALUES ('Atlantic Ocean', 8605.0);", "output": "SELECT MAX(depth) FROM ocean_depths WHERE ocean = 'Atlantic Ocean';"}
{"input": " \uc804\ubb38\uc131 \uac1c\ubc1c \uc6cc\ud06c\uc20d\uc744 \uc9c4\ud589\ud558\uc9c0 \uc54a\uc740 \uad50\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, teacher_name TEXT); INSERT INTO teachers (teacher_id, teacher_name) VALUES (1, 'Alice Johnson'), (2, 'Bob Smith'); CREATE TABLE workshops (workshop_id INT, year INT, hours_spent INT, teacher_id INT); INSERT INTO workshops (workshop_id, year, hours_spent, teacher_id) VALUES (1, 2022, 3, 2), (2, 2022, 4, 2), (3, 2022, 5, 3);", "output": "SELECT teacher_name FROM teachers WHERE teacher_id NOT IN (SELECT teacher_id FROM workshops);"}
{"input": " \uc720\ub7fd \ud50c\ub808\uc774\uc5b4\ub4e4\uc774 \ud50c\ub808\uc774\ud55c \ub3c5\ud2b9\ud55c \uac8c\uc784\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id INT, player_name TEXT, country TEXT); INSERT INTO players VALUES (1, 'John Doe', 'Germany'), (2, 'Jane Smith', 'France'), (3, 'Bob Johnson', 'Canada'); CREATE TABLE games (game_id INT, game_name TEXT, country TEXT); INSERT INTO games VALUES (1, 'Game 1', 'Germany'), (2, 'Game 2', 'Sweden'), (3, 'Game 3', 'Canada'); CREATE TABLE player_games (player_id INT, game_id INT); INSERT INTO player_games VALUES (1, 1), (1, 2), (2, 1), (3, 3);", "output": "SELECT COUNT(DISTINCT player_games.game_id) FROM player_games JOIN players ON player_games.player_id = players.player_id JOIN games ON player_games.game_id = games.game_id WHERE players.country IN ('Germany', 'France', 'Sweden');"}
{"input": " \uac01 \uae30\ud6c4 \uad00\uce21\uc18c\uc758 \ucd5c\uadfc \uce21\uc815\uac12\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Climate (Id INT, Station VARCHAR(20), Temperature DECIMAL(5,2), Precipitation DECIMAL(5,2), Measurement_Date DATE); INSERT INTO Climate (Id, Station, Temperature, Precipitation, Measurement_Date) VALUES (1, 'Station1', 5.0, 0.5, '2021-02-02'), (2, 'Station2', 10.0, 0.2, '2021-02-02');", "output": "SELECT Station, AVG(Temperature) OVER (PARTITION BY Station ORDER BY Measurement_Date DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as Avg_Temperature FROM Climate WHERE Measurement_Date = (SELECT MAX(Measurement_Date) FROM Climate);"}
{"input": " '\uadf9\uc7a5' \uce74\ud14c\uace0\ub9ac \uc774\ubca4\ud2b8\uc758 \ucd5c\uace0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE events (id INT, name VARCHAR(255), date DATE, category VARCHAR(255), price DECIMAL(5,2)); INSERT INTO events (id, name, date, category, price) VALUES (1, 'Concert', '2022-06-01', 'music', 50.00), (2, 'Play', '2022-06-02', 'theater', 80.00), (3, 'Festival', '2022-06-03', 'music', 75.00);", "output": "SELECT MAX(price) FROM events WHERE category = 'theater';"}
{"input": " 'resilience_score' \uae30\uc900\uc73c\ub85c '\uc11c\ud574\uc548' \uc9c0\uc5ed\uc5d0\uc11c \ubcf5\uc6d0\ub825\uc774 \uac00\uc7a5 \ub6f0\uc5b4\ub09c \uad50\ub7c9\uc758 \uc774\ub984\uacfc ID\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE bridges (id INT, name TEXT, region TEXT, resilience_score FLOAT); INSERT INTO bridges (id, name, region, resilience_score) VALUES (1, 'Golden Gate Bridge', 'West Coast', 85.2), (2, 'Brooklyn Bridge', 'East Coast', 76.3), (3, 'Bay Bridge', 'West Coast', 90.1);", "output": "SELECT name, id FROM bridges WHERE region = 'West Coast' AND resilience_score = (SELECT MAX(resilience_score) FROM bridges WHERE region = 'West Coast')"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc6d4\ubcc4 \ubc29\ubb38\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE continent_visitors (id INT, continent VARCHAR(50), visit_month DATE, visitors INT); INSERT INTO continent_visitors (id, continent, visit_month, visitors) VALUES (1, 'Africa', '2022-01-01', 5000000); INSERT INTO continent_visitors (id, continent, visit_month, visitors) VALUES (2, 'Africa', '2022-02-01', 4500000);", "output": "SELECT visit_month, visitors, COUNT(visitors) OVER (PARTITION BY continent ORDER BY visit_month) as monthly_visitors FROM continent_visitors WHERE continent = 'Africa';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc \uc120\ubd88 \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE prepaid_mobile (customer_id INT, data_usage FLOAT, state VARCHAR(20)); INSERT INTO prepaid_mobile (customer_id, data_usage, state) VALUES (1, 2.5, 'California'), (2, 3.2, 'California'), (3, 1.8, 'Texas');", "output": "SELECT AVG(data_usage) FROM prepaid_mobile WHERE state = 'California';"}
{"input": " \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \uc815\ucc45 \uc639\ud638 \uc9c0\ucd9c\uc740 \ud68c\uacc4\uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ub418\uc5b4 \uac00\uc7a5 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \uc815\ub82c\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Policy_Advocacy (Fiscal_Year INT, Region VARCHAR(10), Expenditure DECIMAL(7,2)); INSERT INTO Policy_Advocacy VALUES (2022, 'Northeast', 50000.00), (2022, 'Southeast', 40000.00), (2023, 'Northeast', 55000.00), (2023, 'Southeast', 45000.00);", "output": "SELECT Fiscal_Year, Region, AVG(Expenditure) as Avg_Expenditure, RANK() OVER (PARTITION BY Fiscal_Year ORDER BY AVG(Expenditure) DESC) as Rank FROM Policy_Advocacy GROUP BY Fiscal_Year, Region ORDER BY Fiscal_Year, Avg_Expenditure DESC;"}
{"input": " 2022\ub144 8\uc6d4 \ub3d9\uc548 \uc11c\ubd80 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uad6c\ub3c5\uc790\uc5d0\uac8c\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uad6c\ub3c5 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscribers(id INT, plan_type VARCHAR(10), region VARCHAR(10)); INSERT INTO subscribers VALUES (1, 'unlimited', 'Western'); INSERT INTO subscribers VALUES (2, 'limited', 'Eastern'); INSERT INTO subscribers VALUES (3, 'unlimited', 'Eastern'); CREATE TABLE plans(plan_type VARCHAR(10), price DECIMAL(5,2)); INSERT INTO plans VALUES ('unlimited', 60.00); INSERT INTO plans VALUES ('limited', 40.00); CREATE TABLE transactions(subscriber_id INT, transaction_date DATE, plan_id INT); INSERT INTO transactions VALUES (1, '2022-08-01', 1); INSERT INTO transactions VALUES (2, '2022-08-01', 2); INSERT INTO transactions VALUES (3, '2022-08-01', 1);", "output": "SELECT subscribers.plan_type, SUM(plans.price) as total_revenue FROM subscribers INNER JOIN transactions ON subscribers.id = transactions.subscriber_id INNER JOIN plans ON subscribers.plan_type = plans.plan_type WHERE subscribers.region = 'Western' AND MONTH(transactions.transaction_date) = 8 AND YEAR(transactions.transaction_date) = 2022 GROUP BY subscribers.plan_type;"}
{"input": " VR \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774\ub4e4\uc774 \ud50c\ub808\uc774\ud558\ub294 \uac8c\uc784 \ud0c0\uc774\ud2c0\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, VRUser CHAR(1)); INSERT INTO Players (PlayerID, Age, VRUser) VALUES (1, 25, 'Y'), (2, 30, 'N'), (3, 22, 'Y'), (4, 35, 'N'); CREATE TABLE GameLibrary (GameID INT, PlayerID INT); INSERT INTO GameLibrary (GameID, PlayerID) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (1, 4); CREATE TABLE GameDesign (GameID INT, Title VARCHAR(20)); INSERT INTO GameDesign (GameID, Title) VALUES (1, 'RacingGame'), (2, 'RPG'), (3, 'Shooter'), (4, 'Puzzle'), (5, 'Strategy'); CREATE TABLE VRGame (GameID INT, VRGame CHAR(1)); INSERT INTO VRGame (GameID) VALUES (1), (3);", "output": "SELECT AVG(Players.Age), COUNT(DISTINCT GameDesign.Title) FROM Players INNER JOIN GameLibrary ON Players.PlayerID = GameLibrary.PlayerID INNER JOIN GameDesign ON GameLibrary.GameID = GameDesign.GameID INNER JOIN VRGame ON GameDesign.GameID = VRGame.GameID WHERE Players.VRUser = 'Y';"}
{"input": " 2010\ub144 \uc774\uc804\uc5d0 \uc720\uc0c9 \uc778\uc885\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc5d0 \ub300\ud55c \uace0\uc720 \uc0b0\uc5c5 \uc218\uc640 \ucd1d \uc790\uae08 \uc9c0\uc6d0 \ubaa9\ub85d\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE diversity (id INT, company_id INT, founder_race VARCHAR(255)); INSERT INTO diversity SELECT 1, 1, 'Hispanic'; INSERT INTO diversity SELECT 2, 2, 'Asian'; INSERT INTO diversity SELECT 3, 3, 'Black'; INSERT INTO companies (id, industry, founding_date) SELECT 2, 'Finance', '2005-01-01'; INSERT INTO companies (id, industry, founding_date) SELECT 3, 'Retail', '2008-01-01'; INSERT INTO companies (id, industry, founding_date) SELECT 4, 'IT', '2012-01-01'; INSERT INTO funding (company_id, amount) SELECT 2, 1000000; INSERT INTO funding (company_id, amount) SELECT 3, 750000; INSERT INTO funding (company_id, amount) SELECT 4, 1250000;", "output": "SELECT diversity.founder_race, COUNT(DISTINCT companies.industry) AS unique_industries, SUM(funding.amount) AS total_funding FROM diversity JOIN companies ON diversity.company_id = companies.id JOIN funding ON companies.id = funding.company_id WHERE companies.founding_date < '2010-01-01' AND diversity.founder_race IN ('Hispanic', 'Asian', 'Black') GROUP BY diversity.founder_race;"}
{"input": " \uc9c0\ub09c \uc8fc \uac01 \ub3c4\uc2dc\uc758 \ud558\ub8e8 \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WeatherData (City VARCHAR(50), Temperature INT, Timestamp DATETIME); INSERT INTO WeatherData (City, Temperature, Timestamp) VALUES ('CityA', 20, '2022-01-01 00:00:00'), ('CityB', 25, '2022-01-01 00:00:00');", "output": "SELECT City, AVG(Temperature) OVER (PARTITION BY City ORDER BY Timestamp ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) FROM WeatherData"}
{"input": " \ubbf8\uad6d e\uc2a4\ud3ec\uce20 \ud1a0\ub108\uba3c\ud2b8\uc5d0 \ucc38\uac00\ud55c \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id INT, player_name TEXT, country TEXT); INSERT INTO players VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'); CREATE TABLE tournaments (tournament_id INT, tournament_name TEXT, country TEXT); INSERT INTO tournaments VALUES (1, 'ESL One', 'USA'), (2, 'DreamHack', 'Sweden'); CREATE TABLE scores (player_id INT, tournament_id INT, score INT); INSERT INTO scores VALUES (1, 1, 100), (1, 2, 90), (2, 1, 80);", "output": "SELECT AVG(scores.score) FROM scores JOIN players ON scores.player_id = players.player_id JOIN tournaments ON scores.tournament_id = tournaments.tournament_id WHERE players.country = 'USA';"}
{"input": " \uac01 \ud574\uad70 \ud568\uc815\uc758 \ud3c9\uade0 \ubb34\uae30 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE NavalVessels (ID INT, Name VARCHAR(50), NumWeapons INT);", "output": "SELECT AVG(NumWeapons) FROM NavalVessels;"}
{"input": " \ub3c5\uc77c\uc758 \ucd1d \ud50c\ub77c\uc2a4\ud2f1 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE WasteGenerationData (country VARCHAR(50), waste_type VARCHAR(50), waste_kg FLOAT); INSERT INTO WasteGenerationData (country, waste_type, waste_kg) VALUES ('Germany', 'Plastic Waste', 3500);", "output": "SELECT SUM(waste_kg) FROM WasteGenerationData WHERE country = 'Germany' AND waste_type = 'Plastic Waste';"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uc2ec\uc9c0 \uc54a\uc740 \uc791\ubb3c \uc720\ud615\uc774 \uc788\ub294 \ubc2d\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE crop_planting_history (id INT, location VARCHAR(50), crop VARCHAR(50), planting_date DATE, planting_time TIME); INSERT INTO crop_planting_history (id, location, crop, planting_date, planting_time) VALUES (1, 'Field4', 'Cotton', '2022-02-15', '11:30:00');", "output": "SELECT location FROM crop_planting_history WHERE planting_date < NOW() - INTERVAL 30 DAY EXCEPT SELECT location FROM crop_planting;"}
{"input": " '\ubb3c\uad00\ub9ac'\uc640 \uad00\ub828\ub41c \uc124\uacc4\uae30\uc900\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE standard (id INT, name VARCHAR(50), description TEXT, category VARCHAR(20)); INSERT INTO standard (id, name, description, category) VALUES (2, 'HDS', 'Standard guidelines for water management', 'Design');", "output": "SELECT name FROM standard WHERE category = 'Design' AND description LIKE '%water%management%';"}
{"input": "\uc704\ud5d8\ubb3c\uc744 \uc6b4\uc1a1\ud55c \uc120\ubc15\uc758 \ucda9\ub3cc \ud69f\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE COLLISIONS (id INT, vessel_name VARCHAR(50), collisions INT); CREATE TABLE TRANSPORTED_MATERIALS (id INT, vessel_name VARCHAR(50), hazardous_materials BOOLEAN);", "output": "SELECT COUNT(*) FROM COLLISIONS WHERE vessel_name IN (SELECT vessel_name FROM TRANSPORTED_MATERIALS WHERE hazardous_materials = TRUE);"}
{"input": " \uc9c0\ub09c \ub2ec \ubd80\ubb38\ubcc4 \ucd5c\ub300 \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, sector VARCHAR(255), date DATE); INSERT INTO security_incidents (id, sector, date) VALUES (1, 'finance', '2022-01-01'), (2, 'retail', '2022-01-05');", "output": "SELECT sector, MAX(count_incidents) FROM (SELECT sector, COUNT(*) AS count_incidents FROM security_incidents WHERE date >= DATE(NOW()) - INTERVAL 30 DAY GROUP BY sector) AS subquery;"}
{"input": " \ud2b9\uc815 \uc804\uc2dc\uc5d0 \ub300\ud574 \uc131\ubcc4\ub85c \ubd84\ub958\ub41c \ub514\uc9c0\ud138 \uc124\uce58\ubb3c\uc5d0 \ucc38\uc5ec\ud55c \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Visitor_Demographics (visitor_id INT, age INT, gender VARCHAR(10)); CREATE TABLE Digital_Interactions (visitor_id INT, interaction_date DATE, exhibition_id INT); CREATE TABLE Exhibitions (id INT, name VARCHAR(100), location VARCHAR(50)); INSERT INTO Exhibitions (id, name, location) VALUES (5, 'Nature & Wildlife', 'Canada'); INSERT INTO Visitor_Demographics (visitor_id, age, gender) VALUES (15, 25, 'Male'); INSERT INTO Visitor_Demographics (visitor_id, age, gender) VALUES (16, 27, 'Female'); INSERT INTO Digital_Interactions (visitor_id, interaction_date, exhibition_id) VALUES (15, '2022-03-01', 5); INSERT INTO Digital_Interactions (visitor_id, interaction_date, exhibition_id) VALUES (16, '2022-03-02', 5);", "output": "SELECT Exhibitions.name, Gender, AVG(Age) AS Avg_Age FROM ( SELECT Visitor_Demographics.gender AS Gender, Visitor_Demographics.age AS Age, Digital_Interactions.exhibition_id FROM Visitor_Demographics JOIN Digital_Interactions ON Visitor_Demographics.visitor_id = Digital_Interactions.visitor_id WHERE Digital_Interactions.exhibition_id = 5 ) AS Subquery JOIN Exhibitions ON Subquery.exhibition_id = Exhibitions.id GROUP BY Exhibitions.name, Gender;"}
{"input": " \uc0dd\ubb3c\uacf5\uc815 \uacf5\ud559 \ud2b9\ud5c8\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE SCHEMA if not exists bioprocess;CREATE TABLE if not exists bioprocess.patents (id INT, country VARCHAR(255), patent_count INT); INSERT INTO bioprocess.patents (id, country, patent_count) VALUES (1, 'USA', 1200), (2, 'Germany', 900), (3, 'China', 1500), (4, 'India', 700), (5, 'Brazil', 800);", "output": "SELECT country, ROW_NUMBER() OVER (ORDER BY patent_count DESC) as rank FROM bioprocess.patents WHERE rank <= 3;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uce5c\ud658\uacbd \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\ub300 \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774\ub7ec\ud55c \ucd5c\ub300 \uc0c1\uc1c4\ub7c9 \uac01\uac01\uc5d0 \ub300\ud55c \ud504\ub85c\uc81d\ud2b8 \uce74\ud14c\uace0\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(255), country VARCHAR(255), category VARCHAR(255), carbon_offsets FLOAT); INSERT INTO green_buildings (id, name, country, category, carbon_offsets) VALUES (1, 'Solar Tower 1', 'Canada', 'solar', 500.0); INSERT INTO green_buildings (id, name, country, category, carbon_offsets) VALUES (2, 'Solar Tower 2', 'Canada', 'solar', 800.0); INSERT INTO green_buildings (id, name, country, category, carbon_offsets) VALUES (3, 'Wind Farm 1', 'USA', 'wind', 1000.0); INSERT INTO green_buildings (id, name, country, category, carbon_offsets) VALUES (4, 'Geothermal Plant 1', 'USA', 'geothermal', 1200.0);", "output": "SELECT country, category, carbon_offsets FROM (SELECT country, category, carbon_offsets, ROW_NUMBER() OVER (PARTITION BY country ORDER BY carbon_offsets DESC) AS rank FROM green_buildings) sub WHERE rank = 1;"}
{"input": " \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uace0\uc704\ud5d8 \uacc4\uc815 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE accounts (id INT, risk_level VARCHAR(10), region VARCHAR(20)); INSERT INTO accounts (id, risk_level, region) VALUES (1, 'high', 'Asia-Pacific'), (2, 'medium', 'Europe'), (3, 'low', 'North America'), (4, 'high', 'Africa');", "output": "SELECT COUNT(*) FROM accounts WHERE risk_level = 'high' AND region = 'Asia-Pacific';"}
{"input": " \ubaa8\ub4e0 \uacc4\uc815\uc5d0 \ub300\ud574 \uc9c0\ub09c 3\ud68c \uc5f0\uc18d \uac70\ub798\uc5d0\uc11c \uc794\uc561\uc774 \uc99d\uac00\ud55c \uace0\uac1d\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2), transaction_date DATE);", "output": "SELECT customer_id, account_type, balance FROM (SELECT customer_id, account_type, balance, transaction_date, LAG(balance, 2) OVER (PARTITION BY customer_id ORDER BY transaction_date) AS lag_balance_2 FROM accounts) AS lagged_accounts WHERE balance > lag_balance_2;"}
{"input": " \uacf5\uae09\uc5c5\uccb4 \uc774\ub984, \ud574\ub2f9 \uc704\uce58, \uc544\uc2dc\uc544\uc5d0 \uc704\uce58\ud55c \uacf5\uae09\uc5c5\uccb4\uc5d0 \uacf5\uae09\ud558\ub294 \uc758\ub958 \uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE suppliers (supplier_id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), established_date DATE); CREATE TABLE garments_suppliers (garment_id INT, supplier_id INT, PRIMARY KEY (garment_id, supplier_id), FOREIGN KEY (garment_id) REFERENCES garments(garment_id), FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)); CREATE TABLE garments (garment_id INT PRIMARY KEY, name VARCHAR(255), fabric_id INT, FOREIGN KEY (fabric_id) REFERENCES fabrics(fabric_id));", "output": "SELECT suppliers.name, suppliers.location, COUNT(DISTINCT garments_suppliers.garment_id) FROM suppliers JOIN garments_suppliers ON suppliers.supplier_id = garments_suppliers.supplier_id JOIN garments ON garments_suppliers.garment_id = garments.garment_id WHERE suppliers.location LIKE '%Asia%' GROUP BY suppliers.name, suppliers.location;"}
{"input": " \uc870\ud569\uc6d0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ub178\ub3d9\uc870\ud569\uacfc \uac00\uc7a5 \ub0ae\uc740 \ub178\ub3d9\uc870\ud569\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT PRIMARY KEY, name VARCHAR(255), member_count INT); INSERT INTO unions (id, name, member_count) VALUES (1, 'Union A', 3000), (2, 'Union B', 5000), (3, 'Union C', 2000);", "output": "SELECT name FROM unions WHERE member_count = (SELECT MAX(member_count) FROM unions) UNION SELECT name FROM unions WHERE member_count = (SELECT MIN(member_count) FROM unions);"}
{"input": " \uac70\ub798\uac00 \uc804\ud600 \uc5c6\ub294 \ub3c5\ud2b9\ud55c AI \uc548\uc804 \uc54c\uace0\ub9ac\uc998\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ai_safety_algorithms (id INT, algorithm_name VARCHAR(30)); INSERT INTO ai_safety_algorithms (id, algorithm_name) VALUES (1, 'Algorithm X'); INSERT INTO ai_safety_algorithms (id, algorithm_name) VALUES (2, 'Algorithm Y');", "output": "SELECT algorithm_name FROM ai_safety_algorithms WHERE id NOT IN (SELECT id FROM transactions WHERE algorithm_type = 'AI Safety');"}
{"input": " \uae00\ub8e8\ud150\uacfc \uacac\uacfc\ub958\uac00 \ubaa8\ub450 \ub4e4\uc5b4\uac04 \uc694\ub9ac\ub97c \uc81c\uacf5\ud558\ub294 \ub808\uc2a4\ud1a0\ub791\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE MenuItem (id INT, restaurant_id INT, name VARCHAR(50), category VARCHAR(50), price DECIMAL(5,2)); INSERT INTO MenuItem (id, restaurant_id, name, category, price) VALUES (1, 1, 'Quinoa Salad', 'Salads', 12.99); INSERT INTO MenuItem (id, restaurant_id, name, category, price) VALUES (2, 1, 'Tofu Stir Fry', 'Entrees', 15.99); INSERT INTO MenuItem (id, restaurant_id, name, category, price) VALUES (3, 2, 'Veggie Burger', 'Sandwiches', 9.49); CREATE TABLE Allergen (id INT, menu_item_id INT, allergen VARCHAR(50)); INSERT INTO Allergen (id, menu_item_id, allergen) VALUES (1, 1, 'Nuts'); INSERT INTO Allergen (id, menu_item_id, allergen) VALUES (2, 2, 'Gluten'); INSERT INTO Allergen (id, menu_item_id, allergen) VALUES (3, 3, 'Gluten');", "output": "SELECT Restaurant.name FROM Restaurant INNER JOIN MenuItem ON Restaurant.id = MenuItem.restaurant_id INNER JOIN Allergen ON MenuItem.id = Allergen.menu_item_id WHERE Allergen.allergen = 'Gluten' AND Allergen.allergen = 'Nuts' GROUP BY Restaurant.name;"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc \ub0b4 \uac01 \ub3d9\ub124\uc5d0\uc11c \uc2e0\uace0\ub41c \ubc94\uc8c4 \uac74\uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cities (cid INT, name VARCHAR(255)); CREATE TABLE neighborhoods (nid INT, city_id INT, name VARCHAR(255)); CREATE TABLE crimes (id INT, neighborhood_id INT, reported INT);", "output": "SELECT n.name, COUNT(c.id) FROM cities c JOIN neighborhoods n ON c.cid = n.city_id JOIN crimes ON n.nid = c.neighborhood_id WHERE c.name = 'CityName' GROUP BY n.name;"}
{"input": " \ud734\uc2a4\ud134\uc758 5\ub144\uac04 \ubc94\uc8c4 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE crime_trend (id INT, crime VARCHAR(20), city VARCHAR(20), year INT, count INT); INSERT INTO crime_trend (id, crime, city, year, count) VALUES (1, 'Murder', 'Houston', 2016, 120), (2, 'Robbery', 'Houston', 2016, 350), (3, 'Assault', 'Houston', 2016, 600), (4, 'Murder', 'Houston', 2017, 130), (5, 'Robbery', 'Houston', 2017, 360), (6, 'Assault', 'Houston', 2017, 610), (7, 'Murder', 'Houston', 2018, 140), (8, 'Robbery', 'Houston', 2018, 370), (9, 'Assault', 'Houston', 2018, 620), (10, 'Murder', 'Houston', 2019, 150), (11, 'Robbery', 'Houston', 2019, 380), (12, 'Assault', 'Houston', 2019, 630);", "output": "SELECT year, (count - LAG(count, 1) OVER (ORDER BY year)) as trend FROM crime_trend WHERE city = 'Houston';"}
{"input": " \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ud654\uc7a5\ud488 \uc0c1\uc704 2\uba85\uc758 \uace0\uac1d\uc758 \uc774\ub984\uacfc \uad6d\uac00\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE purchases (id INT, customer_id INT, product_id INT, quantity INT); CREATE TABLE products (id INT, name VARCHAR(50), cruelty_free BOOLEAN);", "output": "SELECT customers.name, customers.country FROM customers JOIN purchases ON customers.id = purchases.customer_id JOIN products ON purchases.product_id = products.id WHERE products.cruelty_free = TRUE GROUP BY customers.id ORDER BY SUM(purchases.quantity) DESC LIMIT 2;"}
{"input": " \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc12d\ucde8\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc131\ubd84\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc131\ubd84\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ingredients (id INT, name VARCHAR(255), category VARCHAR(255), calories INT);", "output": "SELECT name, MAX(calories) AS max_calories, MIN(calories) AS min_calories FROM Ingredients GROUP BY name;"}
{"input": " \ucc38\uac00\ud55c \ud1a0\ub108\uba3c\ud2b8 \uc218\ub97c \uae30\uc900\uc73c\ub85c e\uc2a4\ud3ec\uce20 \uc120\uc218\uac00 \uac00\uc7a5 \ud65c\ubc1c\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE EsportsPlayers (PlayerID INT, Country VARCHAR(20), Tournaments INT); INSERT INTO EsportsPlayers (PlayerID, Country, Tournaments) VALUES (1, 'USA', 5), (2, 'Canada', 3), (3, 'Mexico', 7);", "output": "SELECT Country, ROW_NUMBER() OVER (ORDER BY Tournaments DESC) AS Rank FROM EsportsPlayers WHERE Tournaments > 0;"}
{"input": " \ubbf8\uad6d\uc758 \uac01 \ub9e4\uc7a5\ub7c9 \uc720\ud615\uc5d0 \ub300\ud574 \uc591\uc5d0 \ub530\ub77c \uc21c\uc704\uac00 \ub9e4\uaca8\uc9c4 \uac00\uc2a4 \ub9e4\uc7a5\ub7c9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE gas_reserves (well_name VARCHAR(255), reserve_volume INT, reserve_type VARCHAR(255), location VARCHAR(255)); INSERT INTO gas_reserves (well_name, reserve_volume, reserve_type, location) VALUES ('Well A', 1000000, 'Shale Gas', 'USA'); INSERT INTO gas_reserves (well_name, reserve_volume, reserve_type, location) VALUES ('Well B', 1200000, 'Coalbed Methane', 'Australia');", "output": "SELECT well_name, reserve_volume, reserve_type, location, ROW_NUMBER() OVER (PARTITION BY reserve_type ORDER BY reserve_volume DESC) as rank FROM gas_reserves WHERE location = 'USA'"}
{"input": "\uc9c0\ub09c 5\ub144\uac04 \uac01 \uad6d\uac00\uc5d0\uc11c \ubc1c\uc0ac\ud55c \uc6b0\uc8fc \uc784\ubb34\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE country_missions (id INT, country VARCHAR(50), launch_date DATE, mission_name VARCHAR(50));", "output": "SELECT country, COUNT(*) AS num_missions, RANK() OVER (ORDER BY COUNT(*) DESC) AS country_rank FROM country_missions WHERE launch_date BETWEEN (CURRENT_DATE - INTERVAL 5 YEAR) AND CURRENT_DATE GROUP BY country;"}
{"input": " \uac01 \ub098\ub77c\uc5d0\uc11c \ubb38\ud654 \ud589\uc0ac\uac00 \uc5f4\ub9b0 \ucd5c\ucd08\uc758 \uc5f0\ub3c4\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CulturalEvents (EventID INT, Name TEXT, Year INT, Location TEXT); INSERT INTO CulturalEvents (EventID, Name, Year, Location) VALUES (1, 'Chinese New Year', 4713, 'China'); INSERT INTO CulturalEvents (EventID, Name, Year, Location) VALUES (2, 'Diwali', 5000, 'India'); INSERT INTO CulturalEvents (EventID, Name, Year, Location) VALUES (3, 'Songkran', 1350, 'Thailand'); INSERT INTO CulturalEvents (EventID, Name, Year, Location) VALUES (4, 'Obon', 658, 'Japan'); INSERT INTO CulturalEvents (EventID, Name, Year, Location) VALUES (5, 'Day of the Dead', 1000, 'Mexico');", "output": "SELECT Location, MIN(Year) FROM CulturalEvents GROUP BY Location;"}
{"input": "\uac01 \uc8fc\uc5d0\ub294 \uba87 \uba85\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 \uc0b4\uace0 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE policyholders (id INT, policyholder_name VARCHAR(50), state VARCHAR(20)); INSERT INTO policyholders (id, policyholder_name, state) VALUES (1, 'John Doe', 'Texas'), (2, 'Jane Smith', 'California'), (3, 'Alice Johnson', 'Texas'), (4, 'Bob Brown', 'New York');", "output": "SELECT state, COUNT(*) as policyholder_count FROM policyholders GROUP BY state;"}
{"input": " \uacf5\uae09\uc5c5\uccb4\uac00 \uc788\ub294 \uac01 \uad6d\uac00\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), sustainable_materials BOOLEAN); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), supplier_id INT, price DECIMAL(5,2)); CREATE TABLE orders (id INT PRIMARY KEY, product_id INT, quantity INT, order_date DATE); INSERT INTO suppliers (id, name, country, sustainable_materials) VALUES (1, 'Green Textiles', 'India', true), (2, 'EcoWeave', 'Nepal', true), (3, 'Fair Fabrics', 'Bangladesh', false); INSERT INTO products (id, name, supplier_id, price) VALUES (1, 'Organic Cotton Shirt', 1, 29.99), (2, 'Hemp Pants', 1, 39.99), (3, 'Bamboo Tote Bag', 2, 14.99), (4, 'Polyester Scarf', 3, 9.99); INSERT INTO orders (id, product_id, quantity, order_date) VALUES (1, 1, 2, '2021-06-01'), (2, 3, 1, '2021-06-03'), (3, 2, 3, '2021-06-05');", "output": "SELECT s.country, SUM(p.price * o.quantity) AS total_revenue FROM suppliers s INNER JOIN products p ON s.id = p.supplier_id INNER JOIN orders o ON p.id = o.product_id GROUP BY s.country;"}
{"input": " \ub3c4\uc2dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uce98\ub9ac\ud3ec\ub2c8\uc544 \uac74\uc124 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uac00\uce58\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE construction_projects (project_id INT, city VARCHAR(20), state VARCHAR(20), value DECIMAL(10,2)); INSERT INTO construction_projects (project_id, city, state, value) VALUES (1, 'San Francisco', 'CA', 1000000.00), (2, 'Los Angeles', 'CA', 2000000.00);", "output": "SELECT city, SUM(value) FROM construction_projects WHERE state = 'CA' GROUP BY city;"}
{"input": " \ud2b9\uc815 VR \uac8c\uc784 'CyberSphere'\ub97c \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); CREATE TABLE VRPlayers (PlayerID INT, VRGameID INT); CREATE TABLE VRGames (VRGameID INT, Title VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (2, 28, 'Female', 'Canada'); INSERT INTO VRPlayers (PlayerID, VRGameID) VALUES (1, 1); INSERT INTO VRPlayers (PlayerID, VRGameID) VALUES (2, 1); INSERT INTO VRGames (VRGameID, Title) VALUES (1, 'CyberSphere');", "output": "SELECT AVG(Players.Age) FROM Players INNER JOIN VRPlayers ON Players.PlayerID = VRPlayers.PlayerID INNER JOIN VRGames ON VRPlayers.VRGameID = VRGames.VRGameID WHERE VRGames.Title = 'CyberSphere';"}
{"input": "\ud559\uad50\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \uac01 \ud559\uc0dd\uc758 \uccab \ud574\uc640 \ub9c8\uc9c0\ub9c9 \ud574 \uc0ac\uc774\uc758 \uc815\uc2e0 \uac74\uac15 \uc810\uc218 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_scores (student_id INT, year INT, mental_health_score INT, school_id INT); INSERT INTO student_scores (student_id, year, mental_health_score, school_id) VALUES (1, 2020, 75, 100), (1, 2021, 80, 100), (2, 2020, 80, 101), (2, 2021, 85, 101), (3, 2020, 70, 100), (3, 2021, 75, 100);", "output": "SELECT a.school_id, (b.mental_health_score - a.mental_health_score) as difference FROM student_scores a JOIN student_scores b ON a.student_id = b.student_id AND a.school_id = b.school_id WHERE a.year = (SELECT MIN(year) FROM student_scores c WHERE a.student_id = c.student_id) AND b.year = (SELECT MAX(year) FROM student_scores c WHERE a.student_id = c.student_id);"}
{"input": " \ub3c5\uc77c\uacfc \ud504\ub791\uc2a4 \uacf5\uae09\uc5c5\uccb4\uc758 \ud3c9\uade0 \uc724\ub9ac \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT, name VARCHAR(50), location VARCHAR(50), ethical_rating FLOAT); INSERT INTO suppliers (id, name, location, ethical_rating) VALUES (1, 'Supplier A', 'Germany', 4.5); INSERT INTO suppliers (id, name, location, ethical_rating) VALUES (2, 'Supplier B', 'France', 4.7);", "output": "SELECT AVG(ethical_rating) FROM suppliers WHERE location IN ('Germany', 'France');"}
{"input": " \uae09\uc5ec\uc640 \ud568\uaed8 '\uc12c\uc720' \ubd80\uc11c\uc758 \ubaa8\ub4e0 \uadfc\ub85c\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE department (id INT, name VARCHAR(255), manager_id INT, manager_name VARCHAR(255), location VARCHAR(255)); INSERT INTO department (id, name, manager_id, manager_name, location) VALUES (1, 'textiles', 101, 'Eva', 'New York'); INSERT INTO department (id, name, manager_id, manager_name, location) VALUES (2, 'metallurgy', 102, 'Frank', 'Chicago'); CREATE TABLE employee (id INT, name VARCHAR(255), department_id INT, salary DECIMAL(10,2)); INSERT INTO employee (id, name, department_id, salary) VALUES (1001, 'Alice', 1, 50000.00); INSERT INTO employee (id, name, department_id, salary) VALUES (1002, 'Bob', 1, 55000.00); INSERT INTO employee (id, name, department_id, salary) VALUES (1003, 'Charlie', 2, 60000.00);", "output": "SELECT * FROM employee WHERE department_id = (SELECT id FROM department WHERE name = 'textiles');"}
{"input": " \uac01 \uc8fc\uc5d0 \uc788\ub294 \uc2dc\uace8 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \uc218\ub97c \uc8fc \uc774\ub984\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE hospitals (hospital_id INT, name TEXT, type TEXT, rural BOOLEAN); CREATE TABLE states (state_code TEXT, state_name TEXT); INSERT INTO hospitals (hospital_id, name, type, rural) VALUES (1, 'Rural General Hospital', 'Hospital', TRUE), (2, 'Rural Clinic', 'Clinic', TRUE); INSERT INTO states (state_code, state_name) VALUES ('NY', 'New York'), ('TX', 'Texas');", "output": "SELECT 'Hospital' as type, states.state_name, COUNT(hospitals.hospital_id) as count FROM hospitals INNER JOIN states ON TRUE WHERE hospitals.rural = TRUE GROUP BY states.state_name UNION SELECT 'Clinic' as type, states.state_name, COUNT(hospitals.hospital_id) as count FROM hospitals INNER JOIN states ON TRUE WHERE hospitals.rural = TRUE GROUP BY states.state_name ORDER BY states.state_name;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c EU \uac01 \uad6d\uac00\uc758 \uc804\uae30 \uc790\ub3d9\ucc28 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE VehicleSales(id INT, type VARCHAR(20), country VARCHAR(20), year INT, quantity INT);", "output": "SELECT type, country, AVG(quantity*100.0/SUM(quantity)) OVER (PARTITION BY type, country ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as market_share FROM VehicleSales WHERE country IN (SELECT country FROM Countries WHERE region = 'European Union') AND type IN ('Electric', 'Gasoline') GROUP BY type, country, year ORDER BY year;"}
{"input": " \uac01 \uace0\uc720 Route_id\uc5d0 \ub300\ud55c \uc815\ub958\uc7a5 \uc218\uc640 \ucd1d \uac70\ub9ac\ub97c \uacb0\uc815\ud558\uace0 2\uac1c \uacbd\ub85c\uc758 \ub864\ub9c1 \ucc3d\uc5d0 \ub300\ud55c \uc815\ub958\uc7a5\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE routes (route_id INT, start_station VARCHAR(255), end_station VARCHAR(255), distance FLOAT, num_stops INT); INSERT INTO routes (route_id, start_station, end_station, distance, num_stops) VALUES (1, 'A1', 'B1', 12.5, 5), (2, 'B1', 'C1', 10.0, 3), (3, 'A1', 'C1', 21.5, 7), (4, 'C1', 'D1', 18.0, 4), (5, 'A1', 'D1', 30.0, 9);", "output": "SELECT route_id, AVG(num_stops) OVER (ORDER BY route_id ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) as moving_avg_stops FROM (SELECT DISTINCT route_id, num_stops FROM routes) as unique_routes;"}
{"input": " US Equity Fund\uc5d0 \ud22c\uc790\ud55c \ubaa8\ub4e0 \uace0\uac1d\uc758 \ucd1d \uc790\uc0b0 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name TEXT, region TEXT); INSERT INTO clients (client_id, name, region) VALUES (1, 'John Doe', 'US'), (2, 'Jane Smith', 'CA'); CREATE TABLE investments (client_id INT, fund_id INT, amount DECIMAL(10, 2)); INSERT INTO investments (client_id, fund_id, amount) VALUES (1, 1, 15000.00), (1, 2, 20000.00), (2, 1, 30000.00); CREATE TABLE funds (fund_id INT, fund_name TEXT, region TEXT); INSERT INTO funds (fund_id, fund_name, region) VALUES (1, 'US Equity Fund', 'US'), (2, 'Intl Equity Fund', 'EU');", "output": "SELECT SUM(i.amount) FROM clients c JOIN investments i ON c.client_id = i.client_id JOIN funds f ON i.fund_id = f.fund_id WHERE f.region = 'US';"}
{"input": " \uac01 \ud300\uc758 \ud648 \uacbd\uae30\uc758 \ud3c9\uade0 \ud2f0\ucf13 \uac00\uaca9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE tickets (id INT, team TEXT, home_team TEXT, price DECIMAL(5,2)); INSERT INTO tickets (id, team, home_team, price) VALUES (1, 'Boston Celtics', 'Boston Celtics', 125.99), (2, 'Boston Celtics', 'NY Knicks', 130.99), (3, 'LA Lakers', 'LA Lakers', 150.99), (4, 'LA Lakers', 'Chicago Bulls', 160.99), (5, 'NY Knicks', 'NY Knicks', 110.99), (6, 'NY Knicks', 'LA Lakers', 170.99)", "output": "SELECT home_team, AVG(price) as avg_price FROM tickets GROUP BY home_team;"}
{"input": "\uc758\ub8cc \ubd84\uc57c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ud3c9\uade0 \uc790\uae08 \uc870\ub2ec \ub77c\uc6b4\ub4dc \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name TEXT, industry TEXT); INSERT INTO company (id, name, industry) VALUES (1, 'MedHealth', 'Healthcare'); INSERT INTO company (id, name, industry) VALUES (2, 'TechBoost', 'Technology'); CREATE TABLE funding_round (company_id INT, round_size INT); INSERT INTO funding_round (company_id, round_size) VALUES (1, 5000000); INSERT INTO funding_round (company_id, round_size) VALUES (2, 7000000);", "output": "SELECT AVG(funding_round_count.count) FROM (SELECT COUNT(*) AS count FROM funding_round GROUP BY funding_round.company_id) AS funding_round_count INNER JOIN company ON funding_round_count.company_id = company.id WHERE company.industry = 'Healthcare';"}
{"input": " \ucd1d \uc784\ubb34 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc6b0\uc8fc\uc120\uc744 \uc2dd\ubcc4\ud558\uace0 \uac01 \uc784\ubb34\uc758 \uc784\ubb34 \uc2dc\uc791 \ubc0f \uc885\ub8cc \ub0a0\uc9dc\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecraft (SpacecraftID INT, Name VARCHAR(50), TotalMissions INT); INSERT INTO Spacecraft (SpacecraftID, Name, TotalMissions) VALUES (1, 'Space Shuttle Atlantis', 33); INSERT INTO Spacecraft (SpacecraftID, Name, TotalMissions) VALUES (2, 'Space Shuttle Discovery', 39); INSERT INTO Spacecraft (SpacecraftID, Name, TotalMissions) VALUES (3, 'Space Shuttle Endeavour', 25); CREATE TABLE Missions (MissionID INT, SpacecraftID INT, Name VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO Missions (MissionID, SpacecraftID, Name, StartDate, EndDate) VALUES (1, 1, 'STS-51-J', '1985-04-03', '1985-04-07'); INSERT INTO Missions (MissionID, SpacecraftID, Name, StartDate, EndDate) VALUES (2, 2, 'STS-26', '1988-09-29', '1988-10-03'); INSERT INTO Missions (MissionID, SpacecraftID, Name, StartDate, EndDate) VALUES (3, 3, 'STS-49', '1992-05-07', '1992-05-16');", "output": "SELECT s.Name, m.Name AS MissionName, m.StartDate, m.EndDate FROM Spacecraft s JOIN (SELECT SpacecraftID, Name, ROW_NUMBER() OVER (PARTITION BY SpacecraftID ORDER BY TotalMissions DESC) rn FROM Spacecraft) t ON s.SpacecraftID = t.SpacecraftID AND t.rn = 1 JOIN Missions m ON s.SpacecraftID = m.SpacecraftID;"}
{"input": "\ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc8fc\uc5d0 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uac01 \uc9c0\uc5ed\uc0ac\ud68c\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE la_water_consumption (id INT, date DATE, community VARCHAR(20), water_consumption FLOAT); INSERT INTO la_water_consumption (id, date, community, water_consumption) VALUES (1, '2023-01-01', 'Beverly Hills', 1200.0), (2, '2023-01-02', 'Venice', 1500.0);", "output": "SELECT community, SUM(water_consumption) FROM la_water_consumption WHERE date = (SELECT MAX(date) FROM la_water_consumption) GROUP BY community;"}
{"input": " \ubb34\uc791\uc704\ub85c \uc120\uc815\ub41c \ud559\uc0dd\uc774 \uc774\uc218\ud55c \ud3c9\uc0dd\ud559\uc2b5 \uacfc\uc815\uc740 \uc2dc\uac04\uc21c\uc73c\ub85c \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning (student_id INT, course_id INT, completion_date DATE); INSERT INTO lifelong_learning VALUES (1, 1001, '2015-01-01'), (1, 1002, '2016-01-01');", "output": "SELECT student_id, course_id, COUNT(course_id) OVER (PARTITION BY student_id ORDER BY completion_date) as completed_courses FROM lifelong_learning WHERE student_id = 1;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ub0a8\ubbf8 \uad6d\uac00 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE country_emissions (country VARCHAR(50), year INT, co2_emissions INT); INSERT INTO country_emissions (country, year, co2_emissions) VALUES ('Brazil', 2016, 500000), ('Brazil', 2017, 510000), ('Argentina', 2016, 350000), ('Argentina', 2017, 360000);", "output": "SELECT country, SUM(co2_emissions) as total_emissions, RANK() OVER (ORDER BY SUM(co2_emissions) DESC) as rank FROM country_emissions WHERE country IN ('Brazil', 'Argentina') AND year BETWEEN 2016 AND 2020 GROUP BY country;"}
{"input": " 2017 \uc2dc\uc98c H\ud300\uc758 \ucd5c\uace0 \ub4dd\uc810 \uacbd\uae30\ub294 \ubb34\uc5c7\uc774\uc5c8\ub098\uc694?", "context": "CREATE TABLE games (id INT, team_a TEXT, team_b TEXT, location TEXT, score_team_a INT, score_team_b INT); INSERT INTO games (id, team_a, team_b, location, score_team_a, score_team_b) VALUES (1, 'Team A', 'Team H', 'Home', 120, 130), (2, 'Team H', 'Team B', 'Away', 150, 120);", "output": "SELECT MAX(GREATEST(score_team_a, score_team_b)) FROM games WHERE team_a = 'Team H' OR team_b = 'Team H' AND year = 2017;"}
{"input": " 'APAC' \uc9c0\uc5ed \uace0\uac1d\uc758 \ucc44\uad8c \ud22c\uc790 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name TEXT, region TEXT); INSERT INTO clients (client_id, name, region) VALUES (1, 'John Doe', 'US'), (2, 'Jane Smith', 'APAC'); CREATE TABLE investments (client_id INT, fund_id INT, amount DECIMAL(10, 2), category TEXT); INSERT INTO investments (client_id, fund_id, amount, category) VALUES (1, 1, 15000.00, 'Equity'), (1, 2, 20000.00, 'Equity'), (2, 1, 30000.00, 'Fixed Income'); CREATE TABLE funds (fund_id INT, fund_name TEXT, category TEXT); INSERT INTO funds (fund_id, fund_name, category) VALUES (1, 'Global Fund', 'Fixed Income'), (2, 'Regional Fund', 'Equity');", "output": "SELECT SUM(i.amount) FROM clients c JOIN investments i ON c.client_id = i.client_id JOIN funds f ON i.fund_id = f.fund_id WHERE c.region = 'APAC' AND f.category = 'Fixed Income';"}
{"input": " \uc804\uccb4 \ud3c9\uade0 \uac00\uaca9\ubcf4\ub2e4 \uac00\uaca9\uc774 \ub192\uc740 \uc694\ub9ac\uac00 \ud3ec\ud568\ub41c \uc8fc\ubb38\uc758 \ube44\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE orders(order_id INT, dish VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2)); INSERT INTO orders(order_id, dish, category, price) VALUES (1, 'Tofu Stir Fry', 'Starter', 9.99), (2, 'Lentil Soup', 'Starter', 7.99), (3, 'Chickpea Curry', 'Main', 12.99), (4, 'Tofu Curry', 'Main', 13.99), (5, 'Quinoa Salad', 'Side', 6.99);", "output": "SELECT 100.0 * SUM(CASE WHEN price > (SELECT AVG(price) FROM menu) THEN 1 ELSE 0 END) / COUNT(*) as above_average_percentage FROM menu;"}
{"input": " \"SolarProjects\" \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ud0dc\uc591\uad11 \ubc1c\uc804 \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc8fc\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SolarCapacity (project_id INT, state VARCHAR(50), capacity INT); INSERT INTO SolarCapacity (project_id, state, capacity) VALUES (1, 'California', 500), (2, 'Texas', 400), (3, 'Arizona', 350);", "output": "SELECT state, SUM(capacity) as total_capacity FROM SolarProjects.SolarCapacity GROUP BY state ORDER BY total_capacity DESC LIMIT 3;"}
{"input": " \ube0c\ub77c\uc9c8\uc5d0\uc11c \uc0ac\uc774\uc988 18 \uc758\ub958\ub97c \uad6c\ub9e4\ud55c \uace0\uc720 \uace0\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (id INT, customerID INT, country VARCHAR(50)); INSERT INTO Customers (id, customerID, country) VALUES (1, 4001, 'Brazil'), (2, 4002, 'Argentina'), (3, 4003, 'Brazil'), (4, 4004, 'Chile'); CREATE TABLE Sales (id INT, customerID INT, garmentID INT, quantity INT, saleDate DATE); INSERT INTO Sales (id, customerID, garmentID, quantity, saleDate) VALUES (1, 4001, 405, 1, '2021-01-10'), (2, 4002, 406, 2, '2021-02-15'), (3, 4003, 407, 1, '2021-03-20'), (4, 4004, 408, 3, '2021-04-12'); CREATE TABLE Garments (id INT, garmentID INT, size INT, country VARCHAR(50)); INSERT INTO Garments (id, garmentID, size, country) VALUES (1, 405, 18, 'Brazil'), (2, 406, 12, 'Argentina'), (3, 407, 10, 'Chile'), (4, 408, 16, 'Brazil');", "output": "SELECT COUNT(DISTINCT Customers.customerID) FROM Customers INNER JOIN Sales ON Customers.customerID = Sales.customerID INNER JOIN Garments ON Sales.garmentID = Garments.garmentID WHERE Garments.size = 18 AND Customers.country = 'Brazil';"}
{"input": " \uac01 \uc7a5\ube44 \uc720\ud615\uc5d0 \ub300\ud55c \uc7a5\ube44 \uc720\uc9c0\ubcf4\uc218 \uc694\uccad \uc0ac\uc774\uc758 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE maintenance (request_id INT, request_date DATE, equipment_type VARCHAR(255)); INSERT INTO maintenance (request_id, request_date, equipment_type) VALUES (1, '2020-02-12', 'tank'), (2, '2020-04-15', 'plane'), (3, '2019-10-27', 'ship');", "output": "SELECT equipment_type, AVG(DATEDIFF(day, LAG(request_date) OVER (PARTITION BY equipment_type ORDER BY request_date), request_date)) AS avg_days_between_requests FROM maintenance GROUP BY equipment_type;"}
{"input": " \uc804\ub144\ub3c4\uc5d0 \ube44\ud574 \ud574\uc678 \ubc29\ubb38\uac1d \uc218\uac00 \uac10\uc18c\ud55c \uc544\uc2dc\uc544 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE asian_tourism (destination VARCHAR(255), year INT, visitors INT); INSERT INTO asian_tourism (destination, year, visitors) VALUES ('Seoul', 2020, 10000000); INSERT INTO asian_tourism (destination, year, visitors) VALUES ('Seoul', 2021, 9000000); INSERT INTO asian_tourism (destination, year, visitors) VALUES ('Bangkok', 2020, 15000000); INSERT INTO asian_tourism (destination, year, visitors) VALUES ('Bangkok', 2021, 16000000);", "output": "SELECT destination, year, visitors, LAG(visitors) OVER (PARTITION BY destination ORDER BY year) as prev_year_visitors, visitors - LAG(visitors) OVER (PARTITION BY destination ORDER BY year) as year_over_year_change FROM asian_tourism WHERE year_over_year_change < 0;"}
{"input": " \ucd1d \uac70\ub798\uae08\uc561\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud68c\uc0ac\ubcc4 \ucd1d \uac70\ub798\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE blockchain_companies (company_id INT, company_name VARCHAR(50), platform VARCHAR(50)); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (1, 'Ethereum Foundation', 'Ethereum'); INSERT INTO blockchain_companies (company_id, company_name, platform) VALUES (2, 'Blockstream', 'Bitcoin'); CREATE TABLE blockchain_transactions (transaction_id INT, company_id INT, amount DECIMAL(10,2)); INSERT INTO blockchain_transactions (transaction_id, company_id, amount) VALUES (1, 1, 1000.50); INSERT INTO blockchain_transactions (transaction_id, company_id, amount) VALUES (2, 1, 200.75); INSERT INTO blockchain_transactions (transaction_id, company_id, amount) VALUES (3, 2, 500.00);", "output": "SELECT b.company_name, SUM(bt.amount) as total_amount, ROW_NUMBER() OVER (ORDER BY SUM(bt.amount) DESC) as rank FROM blockchain_transactions bt JOIN blockchain_companies b ON bt.company_id = b.company_id GROUP BY b.company_id, b.company_name;"}
{"input": " 2018\ub144 \ube0c\ub77c\uc9c8 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uacc4\ud68d\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?'", "context": "CREATE TABLE community_development_initiatives (id INT, country VARCHAR(255), year INT, cost FLOAT); INSERT INTO community_development_initiatives (id, country, year, cost) VALUES (1, 'Brazil', 2018, 25000.00);", "output": "SELECT AVG(cost) FROM community_development_initiatives WHERE country = 'Brazil' AND year = 2018;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uad6d\uac00\ubcc4 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc758 \ubcc0\ud654\uc728\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE energy_data (country VARCHAR(50), year INT, renewable_energy_consumption FLOAT); INSERT INTO energy_data (country, year, renewable_energy_consumption) VALUES ('USA', 2015, 12.3), ('USA', 2020, 14.5), ('China', 2015, 20.2), ('China', 2020, 23.7);", "output": "SELECT country, 100.0 * (LEAD(renewable_energy_consumption) OVER (PARTITION BY country ORDER BY year) - renewable_energy_consumption) / renewable_energy_consumption AS pct_change FROM energy_data WHERE year IN (2015, 2020) GROUP BY country, renewable_energy_consumption, year ORDER BY country;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc2dd\ubb3c\uc5d0\uc11c \uc81c\ud488\ub2f9 \uc5f0\uad6c \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ud654\ud559 \ubb3c\uc9c8\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE research_spending (id INT PRIMARY KEY, chemical_name VARCHAR(255), production_plant VARCHAR(255), research_spending_per_product DECIMAL(5,2)); INSERT INTO research_spending (id, chemical_name, production_plant, research_spending_per_product) VALUES (1, 'Hydrochloric Acid', 'Plant C', 5000); INSERT INTO research_spending (id, chemical_name, production_plant, research_spending_per_product) VALUES (2, 'Acetic Acid', 'Plant D', 6000);", "output": "SELECT chemical_name, research_spending_per_product, RANK() OVER (PARTITION BY production_plant ORDER BY research_spending_per_product DESC) AS rank FROM research_spending WHERE production_plant LIKE '%Africa%' LIMIT 3;"}
{"input": " \ud53c\ud06c \uc2dc\uac04\uc774 \uc544\ub2d0 \ub54c '\ube14\ub8e8 \ub77c\uc778' \ub178\uc120\uc744 \uc6b4\ud589\ud558\ub294 \ud68c\ub2f9 \ud3c9\uade0 \uc2b9\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Routes (RouteID int, RouteName varchar(255), Region varchar(255)); INSERT INTO Routes (RouteID, RouteName, Region) VALUES (1, 'North', 'East'), (2, 'South', 'Central'), (3, 'West', 'West'), (4, 'Red Line', 'East'), (5, 'Green Line', 'North'), (6, 'Blue Line', 'West'); CREATE TABLE Trips (TripID int, RouteID int, Passengers int, TripDateTime datetime); CREATE TABLE PeakHours (PeakHourID int, StartTime time, EndTime time); INSERT INTO PeakHours (PeakHourID, StartTime, EndTime) VALUES (1, '06:00', '09:00'), (2, '16:00', '19:00');", "output": "SELECT AVG(Passengers) FROM Routes JOIN Trips ON Routes.RouteID = Trips.RouteID JOIN PeakHours ON Trips.TripDateTime BETWEEN PeakHours.StartTime AND PeakHours.EndTime WHERE Routes.RouteName = 'Blue Line' AND NOT (PeakHours.StartTime BETWEEN '06:00' AND '09:00' OR PeakHours.StartTime BETWEEN '16:00' AND '19:00');"}
{"input": "\uc601\ud654' \ubc0f '\ub9cc\ud654' \ud398\uc774\uc9c0\uc758 \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud588\uc9c0\ub9cc \uac8c\uc2dc\ubb3c\uc5d0 \uc88b\uc544\uc694\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud558\uace0 \ud574\ub2f9 \uc0ac\uc6a9\uc790 ID\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, page_name VARCHAR(255), content TEXT); CREATE TABLE likes (id INT, user_id INT, post_id INT); CREATE TABLE hashtags (id INT, post_id INT, tag VARCHAR(255));", "output": "SELECT DISTINCT users.id FROM (SELECT user_id FROM posts JOIN users ON posts.user_id = users.id GROUP BY user_id HAVING COUNT(DISTINCT page_name) = 2) AS both_pages JOIN users ON both_pages.user_id = users.id LEFT JOIN likes ON users.id = likes.user_id WHERE likes.id IS NULL AND both_pages.page_name IN ('movies', 'comics');"}
{"input": " \ud2b9\uc815 \uc5f0\ub839 \uadf8\ub8f9\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (Policyholder TEXT, Age NUMERIC, Claim_Amount NUMERIC); INSERT INTO Claims (Policyholder, Age, Claim_Amount) VALUES ('John Doe', 35, 2500), ('Jane Smith', 45, 3000), ('Alice Johnson', 25, 2000), ('Bob Brown', 50, 1500);", "output": "SELECT CASE WHEN Age < 30 THEN 'Under 30' WHEN Age < 50 THEN '30-49' ELSE '50 and over' END AS Age_Group, AVG(Claim_Amount) FROM Claims GROUP BY Age_Group;"}
{"input": " 65\uc138 \uc774\uc0c1\uc774\uba70 \uc704\ud5d8\ud3c9\uac00 \uc810\uc218\uac00 70\uc810 \uc774\uc0c1\uc778 \ubcf4\ud5d8\uacc4\uc57d\uc790\uc758 \ucd1d \ubcf4\uc7a5\uae08\uc561\uacfc \ubcf4\ud5d8 \uac74\uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Policyholders (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, Gender VARCHAR(10)); CREATE TABLE Policies (Id INT PRIMARY KEY, PolicyholderId INT, PolicyType VARCHAR(50), CoverageAmount DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id)); CREATE TABLE Underwriting (Id INT PRIMARY KEY, PolicyholderId INT, RiskAssessmentScore INT, Premium DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id));", "output": "SELECT P.Age, U.RiskAssessmentScore, SUM(P.CoverageAmount) as TotalCoverageAmount, COUNT(P.Id) as NumberOfPolicies FROM Policyholders P JOIN Policies PL ON P.Id = PL.PolicyholderId JOIN Underwriting U ON P.Id = U.PolicyholderId WHERE P.Age > 65 AND U.RiskAssessmentScore > 70 GROUP BY P.Id ORDER BY TotalCoverageAmount DESC;"}
{"input": " \ube0c\ub77c\uc9c8, \ub7ec\uc2dc\uc544, \uc911\uad6d\uc5d0\uc11c \uce58\ub8cc\uc640 \uc57d\ubb3c \uad00\ub9ac\ub97c \ubaa8\ub450 \ubc1b\uc740 \ud658\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, name TEXT); CREATE TABLE therapy_sessions (id INT, patient_id INT); CREATE TABLE medication_management (id INT, patient_id INT); INSERT INTO patients (id, name) VALUES (1, 'Pedro Almeida'); INSERT INTO patients (id, name) VALUES (2, 'Anastasia Kuznetsova'); INSERT INTO patients (id, name) VALUES (3, 'Li Wen'); INSERT INTO therapy_sessions (id, patient_id) VALUES (1, 1); INSERT INTO therapy_sessions (id, patient_id) VALUES (2, 2); INSERT INTO therapy_sessions (id, patient_id) VALUES (3, 3); INSERT INTO medication_management (id, patient_id) VALUES (1, 1); INSERT INTO medication_management (id, patient_id) VALUES (2, 2);", "output": "SELECT COUNT(*) FROM patients INNER JOIN therapy_sessions ON patients.id = therapy_sessions.patient_id INNER JOIN medication_management ON patients.id = medication_management.patient_id WHERE patients.name IN ('Pedro Almeida', 'Anastasia Kuznetsova', 'Li Wen');"}
{"input": " \uc758\ub8cc \uc5c5\uacc4\uc5d0\uc11c \uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 \ud55c \uba85 \uc774\uc0c1\uc778 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ud3c9\uade0 \uc790\uae08 \uc870\ub2ec\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE industry (company_id INT, industry TEXT); INSERT INTO industry (company_id, industry) VALUES (1, 'Healthcare'); INSERT INTO industry (company_id, industry) VALUES (2, 'Retail');", "output": "SELECT AVG(funding_amount) FROM investment_rounds ir INNER JOIN company c ON ir.company_id = c.id INNER JOIN diversity d ON c.id = d.company_id INNER JOIN industry i ON c.id = i.company_id WHERE i.industry = 'Healthcare' AND d.founder_gender = 'Female';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc5f0\ud569\uc774 \uc8fc\ub3c4\ud55c \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE peacekeeping_operations (id INT, operation_name VARCHAR(255), leading_organization VARCHAR(255), year INT);", "output": "SELECT operation_name FROM peacekeeping_operations WHERE leading_organization = 'African Union';"}
{"input": " \ud3c9\uc0dd \ub3d9\uc548 50\ub2ec\ub7ec \ubbf8\ub9cc\uc744 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub97c \uc81c\uc678\ud558\uace0 \uc774\ub984\uc5d0 '\ub3d9\ubb3c'\uc774\ub77c\ub294 \ub2e8\uc5b4\uac00 \ud3ec\ud568\ub41c \ub2e8\uccb4\uc5d0 \uae30\ubd80\ud55c \uace0\uc720 \uae30\ubd80\uc790\uc758 \ucd1d \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donors (id INT, name TEXT, total_donated DECIMAL(10,2)); INSERT INTO donors (id, name, total_donated) VALUES (1, 'John Doe', 500.00); CREATE TABLE donations (id INT, donor_id INT, org_id INT, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, org_id, donation_amount) VALUES (1, 1, 1, 100.00);", "output": "SELECT COUNT(DISTINCT donor_id) FROM donations JOIN organizations ON donations.org_id = organizations.id WHERE organizations.name LIKE '%Animal%' AND donor_id IN (SELECT donor_id FROM donations JOIN donors ON donations.donor_id = donors.id GROUP BY donor_id HAVING SUM(donation_amount) >= 50.00);"}
{"input": " \uc774\uc9d1\ud2b8 \ubb38\ud654\uc720\uc0b0\uc774 \uc9c0\uc5ed \uacbd\uc81c\uc5d0 \ubbf8\uce58\ub294 \ucd5c\uc18c\ud55c\uc758 \uc601\ud5a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE heritage_sites (site_id INT, site_name TEXT, country TEXT, local_impact INT); INSERT INTO heritage_sites (site_id, site_name, country, local_impact) VALUES (1, 'Cultural Heritage Site 1', 'Egypt', 200000), (2, 'Cultural Heritage Site 2', 'Egypt', 250000);", "output": "SELECT MIN(local_impact) FROM heritage_sites WHERE country = 'Egypt';"}
{"input": " \ubbf8\uad6d\uc774 \ubc1c\uc0ac\ud55c \uc6b0\uc8fc\uc120\uc5d0 \ud0d1\uc2b9\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc774\ub984\uacfc \uc131\ubcc4\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft (id INT, name VARCHAR(50), country VARCHAR(50), launch_date DATE); INSERT INTO Spacecraft (id, name, country, launch_date) VALUES (1, 'Falcon 9', 'USA', '2010-06-04'); INSERT INTO Spacecraft (id, name, country, launch_date) VALUES (2, 'Soyuz-FG', 'Russia', '2001-11-02');   CREATE TABLE Astronauts (id INT, name VARCHAR(50), gender VARCHAR(50), spacecraft_id INT); INSERT INTO Astronauts (id, name, gender, spacecraft_id) VALUES (1, 'Douglas Hurley', 'Male', 1); INSERT INTO Astronauts (id, name, gender, spacecraft_id) VALUES (2, 'Anousheh Ansari', 'Female', 2);   CREATE TABLE Flights (id INT, astronaut_id INT, spacecraft_id INT); INSERT INTO Flights (id, astronaut_id, spacecraft_id) VALUES (1, 1, 1); INSERT INTO Flights (id, astronaut_id, spacecraft_id) VALUES (2, 2, 2);", "output": "SELECT a.name AS astronaut_name, a.gender FROM Astronauts a JOIN Flights f ON a.id = f.astronaut_id JOIN Spacecraft sp ON f.spacecraft_id = sp.id WHERE sp.country = 'USA';"}
{"input": " \uacbd\ub825 5\ub144 \ubbf8\ub9cc\uc758 \ubcc0\ud638\uc0ac\uac00 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, years_of_experience INT, cases_handled INT); INSERT INTO attorneys (attorney_id, years_of_experience, cases_handled) VALUES (1, 12, 20), (2, 8, 15), (3, 5, 30); CREATE TABLE case_outcomes (case_id INT, attorney_id INT, won BOOLEAN); INSERT INTO case_outcomes (case_id, attorney_id, won) VALUES (1, 1, true), (2, 1, true), (3, 2, false), (4, 3, true), (5, 3, false);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM case_outcomes INNER JOIN attorneys ON case_outcomes.attorney_id = attorneys.attorney_id WHERE attorneys.years_of_experience < 5)) AS percentage FROM case_outcomes INNER JOIN attorneys ON case_outcomes.attorney_id = attorneys.attorney_id WHERE attorneys.years_of_experience < 5 AND case_outcomes.won = true;"}
{"input": " 2018\ub144 \uce90\ub098\ub2e4 \uc8fc\uac70 \ubd80\ubb38\uc758 \ucd5c\uc18c \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_consumption_m3 (region VARCHAR(20), sector VARCHAR(20), year INT, value FLOAT); INSERT INTO water_consumption_m3 (region, sector, year, value) VALUES ('Canada', 'Residential', 2018, 5000000);", "output": "SELECT MIN(value) FROM water_consumption_m3 WHERE sector = 'Residential' AND region = 'Canada' AND year = 2018;"}
{"input": " 2021-2022 NHL \uc2dc\uc98c \uac01 \ud300\uc758 \ucd5c\uace0 \ub4dd\uc810\uacfc \ucd5c\uc800 \ub4dd\uc810\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nhl_points (team_id INT, team_name TEXT, league TEXT, points INT, wins INT); INSERT INTO nhl_points (team_id, team_name, league, points, wins) VALUES (1, 'Colorado Avalanche', 'NHL', 119, 56), (2, 'Philadelphia Flyers', 'NHL', 61, 25);", "output": "SELECT team_id, team_name, ABS(points - LEAD(points) OVER (PARTITION BY team_id ORDER BY team_id)) AS points_difference FROM nhl_points;"}
{"input": "\uc6e8\uc2a4\ud2b8\uc0ac\uc774\ub4dc' \uad6c\uc5ed\uc5d0\uc11c 30\ubd84 \uc774\ub0b4\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uae34\uae09 \uc0c1\ud669\uc774 \ub300\uc751\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name TEXT);CREATE TABLE emergencies (emergency_id INT, district_id INT, response_time INT);", "output": "SELECT COUNT(*) FROM emergencies WHERE district_id = (SELECT district_id FROM districts WHERE district_name = 'Westside') AND response_time <= 30;"}
{"input": " \uad6d\uac00\ubcc4 \ud3c9\uade0 \uc9c0\uc18d\uac00\ub2a5\uc131 \uc810\uc218\uc640 \uc81c\ud488 \uc218 \ud45c\uc2dc", "context": "CREATE TABLE supplier_ethics (supplier_id INT, country VARCHAR(50), labor_practices VARCHAR(50), sustainability_score INT); CREATE TABLE product_transparency (product_id INT, supplier_id INT, material VARCHAR(50), country_of_origin VARCHAR(50), production_process VARCHAR(50)); CREATE VIEW supplier_sustainability_scores AS SELECT country, AVG(sustainability_score) as avg_sustainability_score FROM supplier_ethics GROUP BY country;", "output": "SELECT s.country, AVG(se.sustainability_score) as avg_sustainability_score, COUNT(pt.product_id) as product_count FROM supplier_sustainability_scores s LEFT JOIN supplier_ethics se ON s.country = se.country LEFT JOIN product_transparency pt ON se.supplier_id = pt.supplier_id GROUP BY s.country;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ub300\ub959\uc758 \ucd1d \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Threat_Intelligence (id INT, region VARCHAR(50), year INT, budget FLOAT);", "output": "SELECT SUM(budget) FROM Threat_Intelligence WHERE region = 'Africa' AND year = YEAR(CURRENT_DATE);"}
{"input": " Restaurant V\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \uae30\ub85d\uc744 \ubcf4\uc720\ud558\uace0 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255)); CREATE TABLE sourcing (sourcing_id INT, restaurant_id INT, produce VARCHAR(255), local BOOLEAN);", "output": "SELECT COUNT(*) as sourcing_records FROM sourcing WHERE restaurant_id = (SELECT restaurant_id FROM restaurants WHERE name = 'Restaurant V');"}
{"input": " '\uc601\uc5c5' \ubd80\uc11c\uc640 'IT' \ubd80\uc11c\uc758 \uace0\uc720\ud55c \uc9c1\uc704 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Employees (Employee_ID INT, First_Name VARCHAR(50), Last_Name VARCHAR(50), Department VARCHAR(50), Job_Title VARCHAR(50)); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Job_Title) VALUES (1, 'John', 'Doe', 'Sales', 'Manager'), (2, 'Jane', 'Smith', 'Sales', 'Associate'), (3, 'Mike', 'Jameson', 'IT', 'Engineer'), (4, 'Lucy', 'Brown', 'IT', 'Analyst');", "output": "SELECT Job_Title FROM Employees WHERE Department = 'Sales' INTERSECT SELECT Job_Title FROM Employees WHERE Department = 'IT'"}
{"input": " '2019' \uc544\uc774\uc2a4\ud558\ud0a4 \uacbd\uae30 \ud2f0\ucf13 \ucd5c\uc18c \ud310\ub9e4 \ub9e4\uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE ice_hockey_matches (match_id INT, season INT, tickets_sold INT); INSERT INTO ice_hockey_matches (match_id, season, tickets_sold) VALUES (1, 2019, 32000), (2, 2019, 35000), (3, 2018, 30000);", "output": "SELECT MIN(tickets_sold) FROM ice_hockey_matches WHERE season = 2019;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\uc11c \ub2f9\ub1e8\ubcd1 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, age INT, gender VARCHAR(10), state VARCHAR(20), disease VARCHAR(20)); INSERT INTO patients (patient_id, age, gender, state, disease) VALUES (1, 45, 'Male', 'New York', 'Diabetes'); INSERT INTO patients (patient_id, age, gender, state, disease) VALUES (2, 34, 'Female', 'California', 'Diabetes');", "output": "SELECT AVG(age) FROM patients WHERE state = 'California' AND disease = 'Diabetes'"}
{"input": " \uc815\uc2e0\uac74\uac15\uc774 \ub6f0\uc5b4\ub098\uace0 \uc131\uc801\uc774 \uc6b0\uc218\ud55c \ud559\uc0dd\uc744 \ucc3e\uc544\ubcf4\uc138\uc694", "context": "CREATE TABLE students (id INT, name VARCHAR(50), mental_health_score INT, grade INT); INSERT INTO students (id, name, mental_health_score, grade) VALUES (1, 'John Doe', 95, 10);", "output": "SELECT name FROM students WHERE mental_health_score > 90 INTERSECT SELECT name FROM students WHERE grade = 10;"}
{"input": " $1000 \uc774\uc0c1\uc758 \uae30\ubd80\uae08\uc5d0 \ub300\ud55c \ub300\ub959\ubcc4 \ud3c9\uade0 \uae30\ubd80\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donor_name VARCHAR(100), donation_amount DECIMAL(10,2), donation_date DATE, event_id INT, continent VARCHAR(50));", "output": "SELECT continent, AVG(donation_amount) as avg_donation FROM Donations WHERE donation_amount > 1000 GROUP BY continent;"}
{"input": " '\uba54\uc774\ud06c\uc5c5' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ud310\ub9e4 \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ubdf0\ud2f0 \ube0c\ub79c\ub4dc\ub97c \ub098\uc5f4\ud558\uace0, \uc81c\ud488\ub2f9 \ud3c9\uade0 \uc218\uc775\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (product_id INT, brand VARCHAR(50), category VARCHAR(50), revenue FLOAT); INSERT INTO sales (product_id, brand, category, revenue) VALUES (1, 'Loreal', 'cosmetics', 15000), (2, 'Garnier', 'cosmetics', 12000), (3, 'Maybelline', 'makeup', 18000), (4, 'Loreal', 'skincare', 10000), (5, 'Garnier', 'skincare', 11000), (6, 'The Body Shop', 'makeup', 13000), (7, 'Estee Lauder', 'makeup', 14000);", "output": "SELECT brand, AVG(revenue) as avg_revenue FROM (SELECT brand, product_id, SUM(revenue) as revenue FROM sales WHERE category = 'makeup' GROUP BY brand, product_id ORDER BY revenue DESC LIMIT 5) subquery GROUP BY brand;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uad6d\uac00\ubcc4 \ucd1d \ud0c4\uc18c\uc138 \uc218\uc785\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CarbonTax (Id INT, Country VARCHAR(255), Year INT, Revenue INT); INSERT INTO CarbonTax VALUES (1, 'Germany', 2018, 1000), (2, 'Germany', 2019, 1500), (3, 'Germany', 2020, 2000), (4, 'France', 2018, 1200), (5, 'France', 2019, 1800), (6, 'France', 2020, 2500), (7, 'Italy', 2018, 800), (8, 'Italy', 2019, 1200), (9, 'Italy', 2020, 1600);", "output": "SELECT Country, SUM(Revenue) as Total_Revenue FROM CarbonTax WHERE Year IN (2018, 2019, 2020) GROUP BY Country;"}
{"input": "\uc624\uc138\uc544\ub2c8\uc544\uc5d0\uc11c \uc9c0\ub09c 3\ub144 \ub3d9\uc548 \uc790\uc6d0 \uc911\ub7c9 \uac10\uc18c\ub97c \uacbd\ud5d8\ud55c \uc5b4\uc885\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fish_stocks (id INT, species TEXT, country TEXT, year INT, stock_weight INT); INSERT INTO fish_stocks (id, species, country, year, stock_weight) VALUES (1, 'Salmon', 'Australia', 2020, 130000), (2, 'Salmon', 'Australia', 2019, 140000), (3, 'Tuna', 'New Zealand', 2020, 160000), (4, 'Tuna', 'New Zealand', 2019, 170000), (5, 'Shrimp', 'Papua New Guinea', 2020, 10000), (6, 'Shrimp', 'Papua New Guinea', 2019, 11000);", "output": "SELECT species, COUNT(*) number_of_species FROM fish_stocks WHERE stock_weight < (SELECT stock_weight FROM fish_stocks fs2 WHERE fs2.species = fs.species AND year = (year - 1)) AND country IN ('Australia', 'New Zealand', 'Papua New Guinea', 'Fiji', 'Solomon Islands') GROUP BY species HAVING COUNT(*) > 0;"}
{"input": " \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \ud0c4\ub825\uc131 \uc810\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE country_infrastructure (id INT, name VARCHAR(50), country VARCHAR(50), resilience_score FLOAT); INSERT INTO country_infrastructure VALUES (1, 'Dam', 'Australia', 90), (2, 'Bridge', 'Canada', 75), (3, 'Road', 'Germany', 85);", "output": "SELECT country, AVG(resilience_score) FROM country_infrastructure GROUP BY country;"}
{"input": " \uc5c5\uc885\ubcc4 \ub178\ub3d9\uc870\ud569\uc5d0 \uac00\uc785\ub41c \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, industry VARCHAR(20), num_employees INT); INSERT INTO unions (id, industry, num_employees) VALUES (1, 'manufacturing', 1000), (2, 'technology', 200), (3, 'healthcare', 3000), (4, 'retail', 500), (5, 'education', 800);", "output": "SELECT industry, num_employees FROM unions;"}
{"input": " \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 50MB\ub97c \ucd08\uacfc\ud558\ub294 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\uc758 \ubaa8\ubc14\uc77c \ud0c0\uc6cc, \uc9c0\uc5ed \ubc0f \uad6d\uac00\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE countries (country_id INT PRIMARY KEY, country_name VARCHAR(255)); INSERT INTO countries (country_id, country_name) VALUES (1, 'India'), (2, 'China'), (3, 'Australia'); CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), country_id INT); INSERT INTO regions (region_id, region_name, country_id) VALUES (1, 'East', 1), (2, 'West', 1), (3, 'North', 2), (4, 'South', 3); CREATE TABLE mobile_towers (tower_id INT PRIMARY KEY, region_id INT); INSERT INTO mobile_towers (tower_id, region_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5); CREATE TABLE mobile_subscribers (subscriber_id INT PRIMARY KEY, region_id INT, data_usage FLOAT); INSERT INTO mobile_subscribers (subscriber_id, region_id, data_usage) VALUES (1, 1, 60.0), (2, 2, 45.0), (3, 3, 55.0), (4, 4, 40.0), (5, 5, 70.0);", "output": "SELECT c.country_name, r.region_name, m.tower_id FROM countries c JOIN regions r ON c.country_id = r.country_id JOIN mobile_towers m ON r.region_id = m.region_id JOIN mobile_subscribers s ON r.region_id = s.region_id GROUP BY r.region_id HAVING AVG(s.data_usage) > 50;"}
{"input": " \uc774\ud0c8\ub9ac\uc544\uc758 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ucd5c\uc18c \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SmartCities (city_id INT, city_name VARCHAR(255), country VARCHAR(255), energy_efficiency_rating FLOAT);", "output": "SELECT MIN(energy_efficiency_rating) FROM SmartCities WHERE country = 'Italy';"}
{"input": " \uacf5\uc6d0 \uba74\uc801\uc774 500\uc5d0\uc774\ucee4\ub97c \ub118\ub294 \uac01 \uc8fc\uc758 \uacf5\uacf5 \uacf5\uc6d0\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA Government;CREATE TABLE Government.State (name VARCHAR(255), budget INT);CREATE TABLE Government.Park (name VARCHAR(255), state VARCHAR(255), area INT, budget INT);", "output": "SELECT state, SUM(budget) FROM Government.Park WHERE state IN (SELECT name FROM Government.State WHERE area > 500) GROUP BY state;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 'CityG' \ud638\ud154\uc5d0 \ub300\ud55c \uac00\uc0c1 \ud22c\uc5b4\ub97c \uc2dc\uc791\ud588\uc9c0\ub9cc \uc644\ub8cc\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hotels (hotel_id INT, hotel_name VARCHAR(50), city VARCHAR(50)); CREATE TABLE VirtualTours (tour_id INT, hotel_id INT, tour_name VARCHAR(50)); CREATE TABLE UserInteractions (user_id INT, tour_id INT, interaction_date DATE, completed BOOLEAN); INSERT INTO Hotels (hotel_id, hotel_name, city) VALUES (1, 'Hotel1', 'CityG'), (2, 'Hotel2', 'CityH'); INSERT INTO VirtualTours (tour_id, hotel_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2); INSERT INTO UserInteractions (user_id, tour_id, interaction_date, completed) VALUES (1, 1, CURDATE(), TRUE), (2, 1, DATE_SUB(CURDATE(), INTERVAL 20 DAY), FALSE), (3, 2, DATE_SUB(CURDATE(), INTERVAL 25 DAY), FALSE);", "output": "SELECT COUNT(DISTINCT ui.user_id) FROM Hotels h JOIN VirtualTours vt ON h.hotel_id = vt.hotel_id JOIN UserInteractions ui ON vt.tour_id = ui.tour_id WHERE h.city = 'CityG' AND ui.interaction_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND ui.completed = FALSE;"}
{"input": " \uac01 \uad6d\uac00\ubcc4 \ucd1d \ub4f1\ub85d \uc0ac\uc6a9\uc790 \uc218\ub294 \uc0ac\uc6a9\uc790 \uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO users (id, name, country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'), (3, 'Pedro Martinez', 'Mexico'), (4, 'Sophia Garcia', 'Spain'), (5, 'Michael Lee', 'USA'), (6, 'Emily White', 'Canada'), (7, 'Daniel Kim', 'South Korea'), (8, 'Fatima Alvarez', 'Mexico'), (9, 'Lucas Silva', 'Brazil');", "output": "SELECT country, COUNT(*) OVER (PARTITION BY country) as total_users FROM users ORDER BY total_users DESC;"}
{"input": " \uc6d4\ub4dc\ucef5 \uacbd\uae30\uc758 \ud300\ub2f9 \ud3c9\uade0 \uad00\uc911 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE world_cup (match_date DATE, home_team VARCHAR(100), away_team VARCHAR(100), spectators INT); INSERT INTO world_cup VALUES ('2018-06-14', 'Russia', 'Saudi Arabia', 78011), ('2018-06-15', 'Egypt', 'Uruguay', 45000), ('2018-06-16', 'Morocco', 'Iran', 39579), ('2018-06-17', 'Portugal', 'Spain', 62716);", "output": "SELECT AVG(spectators) FROM world_cup WHERE home_team = ANY (SELECT team FROM (VALUES ('Russia'), ('Egypt'), ('Morocco'), ('Portugal')) AS t(team));"}
{"input": " \uae08\uc774\ub098 \uc740 \uc911 \ud558\ub098\ub9cc \ucc44\uad74\ud55c \uad11\uc0b0\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE mine (id INT, name VARCHAR(50), location VARCHAR(50));CREATE TABLE gold_mine (mine_id INT, amount INT);CREATE TABLE silver_mine (mine_id INT, amount INT);", "output": "SELECT m.name, m.location FROM mine m LEFT JOIN gold_mine g ON m.id = g.mine_id LEFT JOIN silver_mine s ON m.id = s.mine_id WHERE g.mine_id IS NOT NULL AND s.mine_id IS NULL OR s.mine_id IS NOT NULL AND g.mine_id IS NULL;"}
{"input": " '\ubbf8\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c '\ubbf8\uad6d'\uc774 \uc644\ub8cc\ud55c \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\ub294 \ucd1d \uba87 \uac74\uc778\uac00?", "context": "CREATE TABLE military_innovation (country VARCHAR(50), region VARCHAR(50), year INT, projects INT); INSERT INTO military_innovation (country, region, year, projects) VALUES ('USA', 'Americas', 2020, 150), ('USA', 'Americas', 2021, 180);", "output": "SELECT country, region, SUM(projects) as total_projects FROM military_innovation WHERE country = 'USA' AND region = 'Americas' GROUP BY country, region;"}
{"input": " \uac01 \uc694\ub9ac \uc720\ud615\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc218\uc775\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurants (restaurant_id INT, cuisine VARCHAR(255), revenue INT); INSERT INTO restaurants (restaurant_id, cuisine, revenue) VALUES (1, 'Italian', 5000), (2, 'Mexican', 7000), (3, 'Italian', 8000);", "output": "SELECT cuisine, (SUM(revenue) OVER (PARTITION BY cuisine) * 100.0 / SUM(revenue) OVER ()) AS percentage_of_revenue FROM restaurants;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc0dd\uc0b0\ub41c \ud654\uc7a5\ud488 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \ub3d9\ubb3c \uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \uc778\uc99d\uc744 \ubc1b\uc558\ub098\uc694?", "context": "CREATE TABLE ingredients (product_id INT, ingredient TEXT); INSERT INTO ingredients (product_id, ingredient) VALUES (1, 'paraben'), (2, 'alcohol'), (3, 'water'), (4, 'paraben'), (5, 'lavender'), (6, 'paraben'), (7, 'jojoba'), (8, 'chamomile'), (9, 'beeswax'), (10, 'carmine'); CREATE TABLE products (product_id INT, product_name TEXT, country TEXT, certified TEXT); INSERT INTO products (product_id, product_name, country, certified) VALUES (1, 'Lipstick A', 'USA', 'cruelty-free'), (2, 'Eye Shadow B', 'Canada', 'vegan'), (3, 'Mascara C', 'France', 'organic'), (4, 'Foundation D', 'USA', 'cruelty-free'), (5, 'Blush E', 'Mexico', 'organic'), (6, 'Moisturizer F', 'France', 'paraben-free'), (7, 'Cleanser G', 'Mexico', 'organic'), (8, 'Toner H', 'Japan', 'paraben-free'), (9, 'Lip Balm I', 'USA', 'cruelty-free'), (10, 'Nail Polish J', 'Italy', 'paraben-free');", "output": "SELECT 100.0 * COUNT(p.product_id) / (SELECT COUNT(*) FROM products WHERE country = 'USA') AS cruelty_free_percentage FROM products p WHERE p.certified = 'cruelty-free' AND p.country = 'USA';"}
{"input": "\uce90\ub098\ub2e4'\uc640 '\uc778\ub3c4'\uc758 \uc5f0\uac04 \ud3c9\uade0 '\uac00\ub3cc\ub9ac\ub284' \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE production (element VARCHAR(10), country VARCHAR(20), quantity INT, year INT); INSERT INTO production (element, country, quantity, year) VALUES ('Gadolinium', 'Canada', 2500, 2016), ('Gadolinium', 'Canada', 2700, 2017), ('Gadolinium', 'Canada', 2900, 2018), ('Gadolinium', 'Canada', 3100, 2019), ('Gadolinium', 'Canada', 3300, 2020), ('Gadolinium', 'Canada', 3500, 2021), ('Gadolinium', 'India', 1500, 2016), ('Gadolinium', 'India', 1700, 2017), ('Gadolinium', 'India', 1900, 2018), ('Gadolinium', 'India', 2100, 2019), ('Gadolinium', 'India', 2300, 2020), ('Gadolinium', 'India', 2500, 2021);", "output": "SELECT AVG(quantity) FROM production WHERE (element = 'Gadolinium' AND country = 'Canada') OR (element = 'Gadolinium' AND country = 'India') GROUP BY year;"}
{"input": " \uc0c1\uc704 10\uba85\uc758 \uae30\ubd80\uc790\uc758 \uae30\ubd80\uae08\uc744 \uc6d0\uc778 \ubd84\uc57c\ubcc4\ub85c \ud569\uc0b0\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, total_donated_amount FLOAT); CREATE TABLE donations (id INT, donor_id INT, organization_id INT, donation_amount FLOAT); CREATE TABLE organizations (id INT, name TEXT, cause_area TEXT);", "output": "SELECT o.cause_area, SUM(donations.donation_amount) as total_donations FROM donations INNER JOIN organizations o ON donations.organization_id = o.id INNER JOIN (SELECT id, total_donated_amount FROM donors ORDER BY total_donated_amount DESC LIMIT 10) d ON donations.donor_id = d.id GROUP BY o.cause_area;"}
{"input": " 2021\ub144 \ubb38\ud654\uc608\uc220 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \uc720\uc9c0\uc728\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (volunteer_id INT, volunteer_name VARCHAR(50), first_volunteer_date DATE, last_volunteer_date DATE); CREATE TABLE Volunteer_Hours (volunteer_id INT, program_id INT, hours DECIMAL(5,2), volunteer_date DATE);", "output": "SELECT 100.0 * COUNT(DISTINCT v1.volunteer_id) / COUNT(DISTINCT v2.volunteer_id) AS retention_rate FROM Volunteers v1 JOIN Volunteers v2 ON v1.volunteer_id = v2.volunteer_id WHERE v1.first_volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' AND v2.last_volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' AND v1.volunteer_id IN (SELECT volunteer_id FROM Volunteer_Hours WHERE program_id IN (SELECT program_id FROM Programs WHERE category = 'arts & culture')) AND v2.volunteer_id IN (SELECT volunteer_id FROM Volunteer_Hours WHERE program_id IN (SELECT program_id FROM Programs WHERE category = 'arts & culture') AND volunteer_date BETWEEN '2020-01-01' AND '2020-12-31');"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uc5ec\ub7ec \uad6d\uac00\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc561\uc138\uc2a4\ud55c \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE user_activity (id INT, user_id INT, country VARCHAR(255), activity_date DATE);", "output": "SELECT user_id FROM (SELECT user_id, country, COUNT(*) as activity_count FROM user_activity WHERE activity_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY user_id, country) subquery GROUP BY user_id HAVING COUNT(*) > 1;"}
{"input": " \ub178\ub974\uc6e8\uc774\uc640 \uc544\uc774\uc2ac\ub780\ub4dc\uc758 \uc591\uc5b4\uc7a5\uc5d0\uc11c \uc5b4\uc885\uc758 \uc870\ud569\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE farm_region (farm_id INT, region VARCHAR(255), species VARCHAR(255)); INSERT INTO farm_region (farm_id, region, species) VALUES (1, 'Norway', 'Salmon'), (2, 'Norway', 'Trout'), (3, 'Norway', 'Cod'), (4, 'Iceland', 'Haddock'), (5, 'Iceland', 'Cod');", "output": "SELECT species FROM farm_region WHERE region = 'Norway' UNION SELECT species FROM farm_region WHERE region = 'Iceland';"}
{"input": " 2019\ub144 '\uc5f0\uad6c\ubd80\uc11c'\uc640 '\uac1c\ubc1c\ubd80\uc11c' \uc608\uc0b0 \ucc28\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE department_budgets (department TEXT, budget INT, year INT); INSERT INTO department_budgets (department, budget, year) VALUES ('research', 1000000, 2019), ('development', 1200000, 2019), ('research', 1100000, 2020), ('development', 1300000, 2020);", "output": "SELECT LAG(budget, 1, 0) OVER (ORDER BY year) as prev_budget, budget, budget - LAG(budget, 1, 0) OVER (ORDER BY year) as budget_diff FROM department_budgets WHERE department IN ('research', 'development') AND year = 2019 AND budget IS NOT NULL;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 \ucc44\uc6a9\ub41c '\ub9c8\ucf00\ud305' \ubd80\uc11c \uc804\uccb4 \ud3c9\uade0 \uc5f0\ubd09\ubcf4\ub2e4 \uc5f0\ubd09\uc774 \ub192\uc740 \uc9c1\uc6d0 \uc218\ub97c \uad6c\ud574\ubcf4\uc138\uc694.", "context": "CREATE TABLE HiringData (EmployeeID INT, Department VARCHAR(50), HireDate DATE); INSERT INTO HiringData VALUES (1, 'Marketing', '2021-01-01'); INSERT INTO HiringData VALUES (2, 'Marketing', '2021-06-15'); INSERT INTO HiringData VALUES (3, 'Sales', '2021-03-20'); INSERT INTO HiringData VALUES (4, 'Marketing', '2021-05-01'); CREATE TABLE EmployeeData (EmployeeID INT, Department VARCHAR(50), Salary DECIMAL(10, 2)); INSERT INTO EmployeeData VALUES (1, 'Marketing', 45000); INSERT INTO EmployeeData VALUES (2, 'Marketing', 50000); INSERT INTO EmployeeData VALUES (3, 'Marketing', 60000);", "output": "SELECT COUNT(*) FROM HiringData h JOIN EmployeeData e ON h.EmployeeID = e.EmployeeID WHERE YEAR(HireDate) = 2021 AND MONTH(HireDate) <= 6 AND e.Salary > (SELECT AVG(Salary) FROM EmployeeData WHERE Department = 'Marketing');"}
{"input": "\ube44\uac74 \uc694\ub9ac\uc5d0 \ube44\ud574 \ube44\uac74 \uc694\ub9ac\uc758 \ud3c9\uade0 \uc900\ube44 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE dish_prep_times (id INT, dish_id INT, prep_time INT); CREATE TABLE dishes (id INT, name TEXT, is_vegan BOOLEAN);", "output": "SELECT AVG(prep_time) as avg_prep_time FROM dish_prep_times JOIN dishes ON dish_prep_times.dish_id = dishes.id WHERE dishes.is_vegan = true; SELECT AVG(prep_time) as avg_prep_time FROM dish_prep_times JOIN dishes ON dish_prep_times.dish_id = dishes.id WHERE dishes.is_vegan = false;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ub514\uc2a4\ud504\ub85c\uc298 \uac00\uaca9\uc774 10% \uc774\uc0c1 \uc624\ub978 \ud69f\uc218\ub294 \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE prices (element VARCHAR(10), date DATE, price DECIMAL(5,2)); INSERT INTO prices (element, date, price) VALUES ('Dysprosium', '2017-01-01', 150.00), ('Dysprosium', '2017-07-01', 175.00), ('Dysprosium', '2018-01-01', 185.00), ('Dysprosium', '2018-07-01', 200.00), ('Dysprosium', '2019-01-01', 210.00), ('Dysprosium', '2019-07-01', 230.00), ('Dysprosium', '2020-01-01', 240.00), ('Dysprosium', '2020-07-01', 250.00);", "output": "SELECT COUNT(*) FROM (SELECT element, date, price, LAG(price) OVER (PARTITION BY element ORDER BY date) as previous_price FROM prices) t WHERE element = 'Dysprosium' AND price > 1.10 * previous_price;"}
{"input": " \ubd81\ub3d9\ubd80 \uc9c0\uc5ed \uc18c\ub9e4\uc5c5\uccb4\uc5d0\uc11c \ud310\ub9e4\ud558\ub294 \uc720\uae30\ub18d \uc81c\ud488\uc758 \ud3c9\uade0 \uce7c\ub85c\ub9ac \ud568\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE retailers (retailer_id INT, retailer_name TEXT, region TEXT);CREATE TABLE products (product_id INT, product_name TEXT, is_organic BOOLEAN);CREATE TABLE inventory (retailer_id INT, product_id INT, caloric_content INT);", "output": "SELECT AVG(inventory.caloric_content) FROM inventory JOIN products ON inventory.product_id = products.product_id JOIN retailers ON inventory.retailer_id = retailers.retailer_id WHERE products.is_organic = TRUE AND retailers.region = 'Northeast';"}
{"input": " \uba5c\ubc84\ub978\uc5d0\uc11c \ub9e4\uc6d4 \ubcf4\ub294 \ub514\uc9c0\ud138 \uc804\uc2dc\ud68c\uc758 \ud3c9\uade0 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Visitors (id INT, city VARCHAR(50), digital_exhibits INT, visit_month INT); INSERT INTO Visitors (id, city, digital_exhibits, visit_month) VALUES (1, 'Melbourne', 4, 1);", "output": "SELECT AVG(digital_exhibits/12) FROM (SELECT city, COUNT(DISTINCT visit_month) visitors FROM Visitors WHERE city = 'Melbourne' GROUP BY city);"}
{"input": " Spotify\uc758 \uac01 \uc7a5\ub974\ubcc4 \ucd1d \uc2a4\ud2b8\ub9bc \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Genre VARCHAR(50)); INSERT INTO Artists (ArtistID, ArtistName, Genre) VALUES (5, 'Ariana Grande', 'Pop'), (6, 'Drake', 'Rap/Hip-Hop'); CREATE TABLE StreamingPlatforms (PlatformID INT, PlatformName VARCHAR(50)); INSERT INTO StreamingPlatforms (PlatformID, PlatformName) VALUES (1, 'Spotify'), (2, 'Apple Music'); CREATE TABLE SongsStreams (SongID INT, ArtistID INT, PlatformID INT, StreamCount INT); INSERT INTO SongsStreams (SongID, ArtistID, PlatformID, StreamCount) VALUES (6, 5, 1, 3000000), (7, 6, 1, 2000000);", "output": "SELECT a.Genre, SUM(ss.StreamCount) FROM Artists a JOIN SongsStreams ss ON a.ArtistID = ss.ArtistID JOIN StreamingPlatforms sp ON ss.PlatformID = sp.PlatformID WHERE sp.PlatformName = 'Spotify' GROUP BY a.Genre;"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \uc2dc\uccad\ub960\uc774 \uac00\uc7a5 \ub0ae\uc740 TV \ud504\ub85c\uadf8\ub7a8\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE TV_Shows (region VARCHAR(20), rating DECIMAL(2,1)); INSERT INTO TV_Shows (region, rating) VALUES ('South America', 6.5), ('South America', 5.9), ('US', 8.2), ('US', 7.8);", "output": "SELECT * FROM TV_Shows WHERE region = 'South America' AND rating = (SELECT MIN(rating) FROM TV_Shows WHERE region = 'South America');"}
{"input": " 2021\ub144 \ub3c5\uc77c\uc758 \uce5c\ud658\uacbd \ud638\ud154\uc5d0\uc11c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE german_eco_hotels (hotel_id INT, name VARCHAR(255), country VARCHAR(255), revenue INT); INSERT INTO german_eco_hotels (hotel_id, name, country, revenue) VALUES (1, 'Eco Hotel Berlin', 'Germany', 300000), (2, 'Green Hotel Munich', 'Germany', 400000);", "output": "SELECT SUM(revenue) FROM german_eco_hotels WHERE country = 'Germany' AND YEAR(hotel_opening_date) = 2021;"}
{"input": "\uc640\uc774\uc624\ubc0d\uacfc \ubaac\ud0c0\ub098\uc5d0\uc11c \uc721\uc0c1 \uc2dc\ucd94 \ud5c8\uac00\ub97c \ubc1b\uc740 \ubaa8\ub4e0 \ud68c\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE permits_by_company (company VARCHAR(255), region VARCHAR(255), permit_number INT);", "output": "SELECT DISTINCT company FROM permits_by_company WHERE region IN ('Wyoming', 'Montana') INTERSECT SELECT company FROM permits_by_company WHERE region IN ('Colorado', 'New Mexico');"}
{"input": " \uc778\ub3c4 \uc232\uc758 \ucd5c\ub300 \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Forests (id INT, name VARCHAR(50), hectares FLOAT, country VARCHAR(50)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Amazon Rainforest', 55000000.0, 'Brazil'); CREATE TABLE Forest_Hectares (id INT, forest_id INT, hectares FLOAT); INSERT INTO Forest_Hectares (id, forest_id, hectares) VALUES (1, 1, 55000000.0);", "output": "SELECT MAX(hectares) FROM Forest_Hectares WHERE forest_id IN (SELECT id FROM Forests WHERE country = 'India');"}
{"input": " \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74\uc758 \uac01 \uad11\ub300\uc5ed \uc694\uae08\uc81c\uc5d0 \ub300\ud55c \ucd1d \uace0\uac1d \ubd88\ub9cc \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2), region VARCHAR(255)); CREATE TABLE complaints (id INT, plan_id INT, complaint_type VARCHAR(255), complaint_count INT); CREATE TABLE regions (id INT, name VARCHAR(255));", "output": "SELECT broadband_plans.name AS broadband_plan, SUM(complaints.complaint_count) FROM complaints JOIN broadband_plans ON complaints.plan_id = broadband_plans.id JOIN regions ON broadband_plans.region = regions.name WHERE regions.name = 'Latin America' GROUP BY broadband_plans.name;"}
{"input": " \uac00\uc7a5 \ud070 \uae0d\uc815\uc801\uc778 \ubcc0\ud654\ub97c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc5d0 \uc788\uc5b4 \uc804\ub144 \ub300\ube44 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, program TEXT, volunteer_year INT, volunteer_hours INT);", "output": "SELECT program, volunteer_year, (LAG(volunteer_hours, 1) OVER (PARTITION BY program ORDER BY volunteer_year) - volunteer_hours) as year_over_year_change FROM volunteers ORDER BY year_over_year_change DESC;"}
{"input": " \uc704\ubc18 \ud69f\uc218\uac00 \uc99d\uac00\ud558\ub294 \uc120\ubc15\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VesselInspections (ID INT, Vessel VARCHAR(50), InspectionDate DATE, ViolationCount INT); INSERT INTO VesselInspections (ID, Vessel, InspectionDate, ViolationCount) VALUES (1, 'SS Freedom', '2020-01-01', 3), (2, 'SS Liberty', '2020-01-02', 2), (3, 'SS Eagle', '2020-01-03', 4), (4, 'SS Freedom', '2020-01-04', 4);", "output": "SELECT Vessel, ViolationCount, LEAD(ViolationCount) OVER (PARTITION BY Vessel ORDER BY InspectionDate) as NextViolationCount FROM VesselInspections;"}
{"input": "\uc5ec\ub7ec \uad6d\uac00\uc5d0\uc11c \uadfc\ubb34\ud558\ub294 \uc9c1\uc6d0\uc5d0 \ub300\ud55c \uc911\ubcf5 \ud56d\ubaa9\uc744 \uc81c\uc678\ud558\uace0 EU\uc758 \ubaa8\ub4e0 \uc81c\uc870 \uc9c1\ubb34\uc5d0 \ub300\ud55c \ud3c9\uade0 \uae09\uc5ec\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE eu_jobs (id INT, country VARCHAR(50), job VARCHAR(50), salary DECIMAL(10,2)); INSERT INTO eu_jobs (id, country, job, salary) VALUES (1, 'Germany', 'Engineer', 70000.00), (2, 'France', 'Assembler', 35000.00), (3, 'Italy', 'Engineer', 75000.00), (4, 'Spain', 'Assembler', 30000.00), (5, 'Germany', 'Quality Control', 40000.00);", "output": "SELECT AVG(salary) FROM (SELECT DISTINCT country, salary FROM eu_jobs WHERE country IN ('Germany', 'France', 'Italy', 'Spain'));"}
{"input": "\ud22c\uc5b4 \ud69f\uc218\uac00 10\ud68c \uc774\uc0c1\uc778 \uacbd\uc6b0, 2022\ub144 \ud504\ub791\uc2a4 \ud30c\ub9ac\uc5d0\uc11c \uac01 \uac00\uc774\ub4dc\uac00 \ub9e4\uc6d4 \uc9c4\ud589\ud558\ub294 \uac00\uc0c1 \ud22c\uc5b4\uc758 \ud3c9\uade0 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Guides (id INT, name TEXT, country TEXT, city TEXT);CREATE TABLE VirtualTours (id INT, guide_id INT, date DATE);", "output": "SELECT AVG(number_of_tours) FROM (SELECT guide_id, COUNT(*) AS number_of_tours FROM VirtualTours JOIN Guides ON VirtualTours.guide_id = Guides.id WHERE Guides.city = 'Paris' AND Guides.country = 'France' AND YEAR(VirtualTours.date) = 2022 GROUP BY guide_id HAVING COUNT(*) >= 10) AS Subquery"}
{"input": " \uc131\uc778\uc5d0 \ube44\ud574 \uccad\uc18c\ub144\uc774 \uc800\uc9c0\ub978 \ubc94\uc8c4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE crimes (age VARCHAR(255), count INT); INSERT INTO crimes (age, count) VALUES ('Juvenile', 25), ('Adult', 75);", "output": "SELECT age, count, 100.0 * count / SUM(count) OVER () FROM crimes;"}
{"input": " 2022\ub144 1\uc6d4 15\uc77c \ud14d\uc0ac\uc2a4 \ub3c4\uc2dc\uc758 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WaterUsage (Id INT PRIMARY KEY, City VARCHAR(255), Usage FLOAT, Date DATE); INSERT INTO WaterUsage (Id, City, Usage, Date) VALUES (1, 'Dallas', 1200, '2022-01-15'); INSERT INTO WaterUsage (Id, City, Usage, Date) VALUES (2, 'Houston', 1500, '2022-01-15'); INSERT INTO WaterUsage (Id, City, Usage, Date) VALUES (3, 'Austin', 1800, '2022-01-15');", "output": "SELECT City, SUM(Usage) FROM WaterUsage WHERE Date = '2022-01-15' AND City IN ('Dallas', 'Houston', 'Austin') GROUP BY City;"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud310\ub9e4\ub41c \ube44\uac74 \ud5e4\uc5b4 \ucf00\uc5b4 \uc81c\ud488\uc758 \uc218\ub97c \uacc4\uc0b0\ud558\uc138\uc694.", "context": "CREATE TABLE time (time_id INT, sale_date DATE); CREATE TABLE sales (sale_id INT, product_id INT, quantity INT, time_id INT); CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255), vegan BOOLEAN); INSERT INTO time (time_id, sale_date) VALUES (1, '2022-01-01'), (2, '2022-07-01'); INSERT INTO sales (sale_id, product_id, quantity, time_id) VALUES (1, 1, 50, 1), (2, 2, 75, 2); INSERT INTO products (product_id, product_name, category, vegan) VALUES (1, 'Shampoo Bar', 'Hair Care', true), (2, 'Hair Gel', 'Hair Care', false);", "output": "SELECT COUNT(*) FROM sales JOIN products ON sales.product_id = products.product_id JOIN time ON sales.time_id = time.time_id WHERE products.vegan = true AND time.sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND category = 'Hair Care';"}
{"input": " 2022\ub144\uc5d0 \uac01 \ud559\uacfc\uc758 \uad50\uc0ac\ub4e4\uc774 \uba87 \uac1c\uc758 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name TEXT); CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, department_id INT); CREATE TABLE courses (course_id INT, course_name TEXT, course_level TEXT); CREATE TABLE enrollments (enrollment_id INT, teacher_id INT, course_id INT, enrollment_date DATE); INSERT INTO departments VALUES (1, 'Mathematics'), (2, 'Science'), (3, 'English'); INSERT INTO teachers VALUES (1, 'Ms. Acevedo', 1), (2, 'Mr. Chen', 2), (3, 'Mx. Patel', 3); INSERT INTO courses VALUES (1, 'Introduction to Programming', 'beginner'), (2, 'Data Science Fundamentals', 'beginner'), (3, 'Advanced Machine Learning', 'intermediate'); INSERT INTO enrollments VALUES (1, 1, 1, '2022-01-01'), (2, 2, 2, '2022-01-02'), (3, 3, 3, '2022-01-03'), (4, 1, 1, '2022-03-04'), (5, 2, 2, '2022-05-05'), (6, 3, 3, '2022-07-06');", "output": "SELECT d.department_name, COUNT(e.enrollment_id) FROM departments d INNER JOIN teachers t ON d.department_id = t.department_id INNER JOIN enrollments e ON t.teacher_id = e.teacher_id WHERE e.enrollment_date >= '2022-01-01' AND e.enrollment_date < '2023-01-01' GROUP BY d.department_id;"}
{"input": " \uc7ac\ud65c\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc778\ub3c4 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vendors (vendor_id INT, vendor_name VARCHAR(100), country VARCHAR(50), industry VARCHAR(50)); INSERT INTO vendors (vendor_id, vendor_name, country, industry) VALUES (1, 'Green Impex', 'India', 'Green Manufacturing'); CREATE TABLE circular_economy (product_id INT, recycling_program BOOLEAN); INSERT INTO circular_economy (product_id, recycling_program) VALUES (1, TRUE); CREATE TABLE transactions (transaction_id INT, vendor_id INT, product_id INT, quantity INT, transaction_date DATE); INSERT INTO transactions (transaction_id, vendor_id, product_id, quantity, transaction_date) VALUES (1, 1, 1, 50, '2022-01-03');", "output": "SELECT SUM(t.quantity) FROM vendors v INNER JOIN transactions t ON v.vendor_id = t.vendor_id INNER JOIN circular_economy c ON t.product_id = c.product_id WHERE v.country = 'India' AND c.recycling_program = TRUE;"}
{"input": "NewsSourceD\uc5d0\uc11c \uac8c\uc7ac\ud55c \uae30\uc0ac\ub97c \uc81c\uc678\ud558\uace0 \ub3d9\ubd80 \uc9c0\uc5ed \ub274\uc2a4 \ub9e4\uccb4\uc5d0\uc11c \uac8c\uc7ac\ub41c \uae30\uc0ac \ubc0f \uc758\uacac\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA news;CREATE TABLE NewsSource (name varchar(255), type varchar(10));CREATE TABLE Region (name varchar(255), location varchar(10));INSERT INTO NewsSource (name, type) VALUES ('NewsSourceA', 'news'), ('NewsSourceB', 'news'), ('NewsSourceC', 'opinion'), ('NewsSourceD', 'news'), ('NewsSourceE', 'opinion');INSERT INTO Region (name, location) VALUES ('NewsSourceA', 'eastern'), ('NewsSourceB', 'eastern'), ('NewsSourceC', 'central'), ('NewsSourceD', 'eastern'), ('NewsSourceE', 'central');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM news.NewsSource WHERE type = 'news' AND location = 'eastern') EXCEPT (SELECT * FROM news.NewsSource WHERE name = 'NewsSourceD') ) AS eastern_news"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 '\ub0a8\ubbf8' \ub610\ub294 '\uc720\ub7fd'\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc774 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Initiatives_2 (id INT, initiative VARCHAR(255), region VARCHAR(255), start_year INT, end_year INT); INSERT INTO Initiatives_2 (id, initiative, region, start_year, end_year) VALUES (1, 'Coastal Restoration', 'South America', 2015, 2020); INSERT INTO Initiatives_2 (id, initiative, region, start_year, end_year) VALUES (2, 'Marine Life Protection', 'Europe', 2016, 2020); INSERT INTO Initiatives_2 (id, initiative, region, start_year, end_year) VALUES (3, 'Plastic Reduction', 'Europe', 2017, 2020);", "output": "SELECT initiative FROM Initiatives_2 WHERE region = 'South America' UNION SELECT initiative FROM Initiatives_2 WHERE region = 'Europe';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc608\uc220\uac00\ub4e4\uc758 \uc791\ud488 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE artworks (id INT, artist_name VARCHAR(255), country VARCHAR(255)); INSERT INTO artworks (id, artist_name, country) VALUES (1, 'Marlene Dumas', 'South Africa'), (2, 'El Anatsui', 'Ghana'), (3, 'William Kentridge', 'South Africa');", "output": "SELECT COUNT(*) FROM artworks WHERE country IN (SELECT country FROM countries WHERE continent = 'Africa');"}
{"input": " \uc778\ub3c4\uc591\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638\uad6c\uc5ed\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE indian_ocean_reserves (reserve_name VARCHAR(255), avg_depth FLOAT); INSERT INTO indian_ocean_reserves (reserve_name, avg_depth) VALUES ('Maldives', 100.0), ('Andaman Islands', 200.0);", "output": "SELECT AVG(avg_depth) FROM indian_ocean_reserves;"}
{"input": " \uac01 \ub098\ub77c\uc758 \ucd5c\uace0\uc704\uae09 \uad70\uc778\uc758 \uba85\uce6d\uacfc \uacc4\uc5f4\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_personnel (id INT, name VARCHAR(50), branch VARCHAR(20), rank VARCHAR(20), country VARCHAR(50)); INSERT INTO military_personnel (id, name, branch, rank, country) VALUES (1, 'John Doe', 'army', 'Colonel', 'USA'), (2, 'Jane Smith', 'navy', 'Captain', 'USA'), (3, 'Raj Patel', 'airforce', 'Group Captain', 'India');", "output": "SELECT name, branch, country FROM military_personnel m1 WHERE (branch, rank) = (SELECT m2.branch, MAX(m2.rank) FROM military_personnel m2 WHERE m1.country = m2.country GROUP BY m2.branch);"}
{"input": "ThreatIntel \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uac00\uc7a5 \ube48\ub3c4\uac00 \ub0ae\uc740 \ucde8\uc57d\uc810\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ThreatIntel (id INT, vulnerability VARCHAR(255), frequency INT); INSERT INTO ThreatIntel (id, vulnerability, frequency) VALUES (1, 'CVE-2019-12345', 25), (2, 'CVE-2020-67890', 18), (3, 'CVE-2021-09876', 15), (4, 'CVE-2018-32100', 14), (5, 'CVE-2022-23456', 13), (6, 'CVE-2022-45678', 5), (7, 'CVE-2022-91011', 3), (8, 'CVE-2022-87654', 1);", "output": "SELECT vulnerability, frequency FROM (SELECT vulnerability, frequency, ROW_NUMBER() OVER (ORDER BY frequency ASC) AS rank FROM ThreatIntel) AS ranked_vulnerabilities WHERE rank <= 5;"}
{"input": " \uc804\ud1b5 \uc608\uc220 \ud615\uc2dd\uc5d0 \uae30\uc5ec\ud55c \ubaa8\ub4e0 \uc608\uc220\uac00\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, Name VARCHAR(100), Country VARCHAR(50)); INSERT INTO Artists (ArtistID, Name, Country) VALUES (1, 'Alice Johnson', 'USA'), (2, 'Pablo Picasso', 'Spain'); CREATE TABLE ArtForms (ArtFormID INT PRIMARY KEY, Name VARCHAR(50), Type VARCHAR(50)); INSERT INTO ArtForms (ArtFormID, Name, Type) VALUES (1, 'Pottery', 'Traditional'), (2, 'Cubism', 'Modern'); CREATE TABLE Contributions (ContributionID INT PRIMARY KEY, ArtistID INT, ArtFormID INT); INSERT INTO Contributions (ContributionID, ArtistID, ArtFormID) VALUES (1, 1, 1), (2, 2, 2);", "output": "SELECT Artists.Name FROM Artists JOIN Contributions ON Artists.ArtistID = Contributions.ArtistID JOIN ArtForms ON Contributions.ArtFormID = ArtForms.ArtFormID WHERE ArtForms.Type = 'Traditional';"}
{"input": " \uc11d\uae30 \uc720\ubb3c\uc758 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ubc1c\uad74 \uc720\uc801\uc9c0\uc758 \uc5ed\uc0ac\uc801 \ub9e5\ub77d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sites (SiteID int, SiteName varchar(50)); INSERT INTO Sites VALUES (1, 'Site A'), (2, 'Site B'); CREATE TABLE Artifacts (ArtifactID int, SiteID int, ArtifactType varchar(50), Quantity int); INSERT INTO Artifacts VALUES (1, 1, 'Lithic', 120), (2, 1, 'Ceramic', 30), (3, 2, 'Lithic', 150), (4, 2, 'Ceramic', 50); CREATE TABLE HistoricalContext (SiteID int, HistoricalPeriod varchar(50)); INSERT INTO HistoricalContext VALUES (1, 'Mesolithic'), (2, 'Neolithic');", "output": "SELECT Sites.SiteName, HistoricalContext.HistoricalPeriod FROM (SELECT Sites.SiteName, SUM(Artifacts.Quantity) as TotalLithics FROM Artifacts INNER JOIN Sites ON Artifacts.SiteID = Sites.SiteID WHERE ArtifactType = 'Lithic' GROUP BY Sites.SiteName ORDER BY TotalLithics DESC LIMIT 1) as Subquery INNER JOIN Sites ON Subquery.SiteName = Sites.SiteName INNER JOIN HistoricalContext ON Sites.SiteID = HistoricalContext.SiteID;"}
{"input": " 2018\ub144\uc5d0 \ud14c\ub974\ube00\uc744 \uac00\uc7a5 \ub9ce\uc774 \uc0dd\uc0b0\ud55c \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (year INT, element VARCHAR(10), region VARCHAR(10), quantity INT); INSERT INTO production (year, element, region, quantity) VALUES (2018, 'Terbium', 'Asia', 7000);", "output": "SELECT element, region, SUM(quantity) as total_quantity FROM production WHERE year = 2018 GROUP BY element, region ORDER BY total_quantity DESC LIMIT 1"}
{"input": " 2010\ub144 \uc774\uc804\uc5d0 \uc2dc\ud589\ub41c \ud3ec\uc6a9\uc801 \uc8fc\ud0dd \uc815\ucc45\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE InclusiveHousingPolicies (PolicyID INT, PolicyName VARCHAR(50), ImplementationDate DATE); INSERT INTO InclusiveHousingPolicies (PolicyID, PolicyName, ImplementationDate) VALUES (1, 'Policy A', '2008-01-01'), (2, 'Policy B', '2011-01-01'), (3, 'Policy C', '2009-06-15');", "output": "SELECT PolicyName FROM InclusiveHousingPolicies WHERE ImplementationDate < '2010-01-01';"}
{"input": " \ud55c \ubc88 \uc774\uc0c1 \uae30\ubd80\ud55c \uae30\ubd80\uc790\uc640 \uae30\ubd80 \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Donations (DonationID int, DonorID int, DonationDate date, AmountDonated float); INSERT INTO Donations (DonationID, DonorID, DonationDate, AmountDonated) VALUES (1, 1, '2022-01-01', 5000.00), (2, 2, '2022-02-01', 7000.00), (3, 1, '2022-03-01', 8000.00);", "output": "SELECT DonorID, DonationDate FROM Donations D1 WHERE DonorID IN (SELECT DonorID FROM Donations D2 WHERE D1.DonorID = D2.DonorID AND D1.DonationDate <> D2.DonationDate);"}
{"input": " \uac01 \uac80\uc0ac\uc758 \uc0ac\uac74 \uc0ac\uac74 \uc21c\uc11c\ub294 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc5d0 \ub530\ub77c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE prosecutor_events (id INT, prosecutor_id INT, event_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO prosecutor_events (id, prosecutor_id, event_type, timestamp) VALUES (1, 1, 'Case Assignment', '2022-01-01 10:00:00'); INSERT INTO prosecutor_events (id, prosecutor_id, event_type, timestamp) VALUES (2, 1, 'Charge Filing', '2022-01-02 14:00:00');", "output": "SELECT prosecutor_id, event_type, timestamp, ROW_NUMBER() OVER(PARTITION BY prosecutor_id ORDER BY timestamp) as sequence FROM prosecutor_events;"}
{"input": " \ucf00\ub0d0\uc640 \ud0c4\uc790\ub2c8\uc544\uc5d0\uc11c \uad6d\uc81c\uae30\uad6c\uac00 \uc790\uae08\uc744 \uc9c0\uc6d0\ud558\ub294 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE infrastructure_projects (id INT, name TEXT, country TEXT, funder TEXT); INSERT INTO infrastructure_projects (id, name, country, funder) VALUES (1, 'Road Construction', 'Kenya', 'World Bank'), (2, 'Water Supply System', 'Tanzania', 'UNDP');", "output": "SELECT COUNT(DISTINCT infrastructure_projects.id) FROM infrastructure_projects WHERE infrastructure_projects.country IN ('Kenya', 'Tanzania') AND infrastructure_projects.funder IN ('World Bank', 'UNDP');"}
{"input": " \ud3c9\uade0 \uc120\ud638\ub3c4 \ub4f1\uae09\uc774 4\ubcf4\ub2e4 \ub192\uc740 \ube0c\ub79c\ub4dc\uc758 \uc5b4\ub5a4 \uc81c\ud488\uc774 30\ud68c \uc774\uc0c1 \uac80\ud1a0\ub418\uc5c8\uc73c\uba70 \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc774 3.5 \ubbf8\ub9cc\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Brand_Preferences (brand_id INT, brand TEXT, total_products INT, avg_preference_rating DECIMAL); INSERT INTO Brand_Preferences (brand_id, brand, total_products, avg_preference_rating) VALUES (1, 'EcoPure', 15, 4.7), (2, 'Natural Beauty', 12, 4.3), (3, 'Green Visions', 10, 4.9), (4, 'Pure & Simple', 14, 4.1); CREATE TABLE Product_Sustainability (product_id INT, brand_id INT, carbon_footprint DECIMAL); INSERT INTO Product_Sustainability (product_id, brand_id, carbon_footprint) VALUES (1001, 1, 3.2), (1002, 2, 4.1), (1003, 3, 2.8), (1004, 4, 3.7), (1005, 1, 2.9); CREATE TABLE Product_Reviews (product_id INT, review_count INT); INSERT INTO Product_Reviews (product_id, review_count) VALUES (1001, 45), (1002, 32), (1003, 38), (1004, 29), (1005, 42);", "output": "SELECT product_id FROM Product_Sustainability INNER JOIN Brand_Preferences ON Product_Sustainability.brand_id = Brand_Preferences.brand_id INNER JOIN Product_Reviews ON Product_Sustainability.product_id = Product_Reviews.product_id WHERE avg_preference_rating > 4 AND review_count > 30 AND carbon_footprint < 3.5;"}
{"input": "\uace0\uac1d \uc911 \ud3c9\uade0 \uc7ac\ubb34 \ub2a5\ub825 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc740\ud589\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc740\ud589\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE banks_customers (bank_id INT, customer_id INT, financial_capability_score INT); INSERT INTO banks_customers (bank_id, customer_id, financial_capability_score) VALUES (1, 1, 85), (1, 2, 70), (2, 3, 90), (2, 4, 60), (3, 5, 80);", "output": "SELECT b.name, AVG(bc.financial_capability_score) as avg_score FROM banks_customers bc JOIN banks b ON bc.bank_id = b.id GROUP BY b.id ORDER BY avg_score DESC, b.name LIMIT 1;  SELECT b.name, AVG(bc.financial_capability_score) as avg_score FROM banks_customers bc JOIN banks b ON bc.bank_id = b.id GROUP BY b.id ORDER BY avg_score ASC, b.name LIMIT 1;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uac04\uc744 \uae30\ubd80\ud55c \uc0c1\uc704 5\uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \ub204\uad6c\uc774\uba70, \uac01 \uc0ac\ub78c\uc774 \uae30\ubd80\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteer_Hours (id INT, volunteer_id INT, hours DECIMAL(10, 2), hour_date DATE); INSERT INTO Volunteer_Hours (id, volunteer_id, hours, hour_date) VALUES (1, 1, 2.00, '2020-06-01'); INSERT INTO Volunteer_Hours (id, volunteer_id, hours, hour_date) VALUES (2, 2, 3.00, '2021-03-15');", "output": "SELECT volunteer_id, SUM(hours) as total_hours FROM Volunteer_Hours WHERE hour_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) GROUP BY volunteer_id ORDER BY total_hours DESC LIMIT 5;"}
{"input": " \ub274\uba55\uc2dc\ucf54 \uc2dc\uace8 \uc9c0\uc5ed\uc758 \ud658\uc790\ub2f9 \ud3c9\uade0 \uc758\ub8cc \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE healthcare_spending (patient_id INT, year INT, amount DECIMAL(10,2)); INSERT INTO healthcare_spending (patient_id, year, amount) VALUES (1, 2021, 5000.50);", "output": "SELECT AVG(amount) FROM healthcare_spending WHERE patient_id = 1 AND year = 2021 AND location = 'rural New Mexico';"}
{"input": "\uc2dc\ub9ac\uc544\uc758 \uc2dd\ub7c9 \uc548\ubcf4 \ubc0f \ubcf4\uac74 \ud504\ub85c\uadf8\ub7a8\uc73c\ub85c\ubd80\ud130 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uc218\ud61c\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recipients (id INT, name TEXT, age INT, gender TEXT); CREATE TABLE aid (id INT, recipient_id INT, program_id INT); CREATE TABLE programs (id INT, name TEXT, location TEXT); INSERT INTO recipients VALUES (1, 'Ali Al-Asad', 30, 'Male'), (2, 'Fatima Al-Khateeb', 25, 'Female'); INSERT INTO aid VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1), (4, 2, 2); INSERT INTO programs VALUES (1, 'Food Security', 'Syria'), (2, 'Health', 'Syria');", "output": "SELECT r.name FROM recipients r INNER JOIN aid a1 ON r.id = a1.recipient_id INNER JOIN programs p1 ON a1.program_id = p1.id INNER JOIN aid a2 ON r.id = a2.recipient_id INNER JOIN programs p2 ON a2.program_id = p2.id WHERE p1.name = 'Food Security' AND p2.name = 'Health' AND p1.location = 'Syria' AND p2.location = 'Syria' GROUP BY r.name HAVING COUNT(DISTINCT p1.id) > 1;"}
{"input": " 2021\ub144 \uc6d4\ubcc4 \ub3d9\ubb3c \uad00\ucc30 \ud69f\uc218, \uc2dd\ubb3c \uad00\ucc30 \ud69f\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE animal_sightings (id INT, species TEXT, sighting_date DATE); INSERT INTO animal_sightings (id, species, sighting_date) VALUES (1, 'Polar Bear', '2021-01-01'); INSERT INTO animal_sightings (id, species, sighting_date) VALUES (2, 'Arctic Fox', '2021-01-02'); CREATE TABLE plant_observations (id INT, species TEXT, observation_date DATE); INSERT INTO plant_observations (id, species, observation_date) VALUES (1, 'Snowdrop', '2021-02-01'); INSERT INTO plant_observations (id, species, observation_date) VALUES (2, 'Arctic Willow', '2021-02-02');", "output": "SELECT MONTH(sighting_date) AS month, COUNT(*) AS animal_count FROM animal_sightings WHERE sighting_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month UNION SELECT MONTH(observation_date) AS month, COUNT(*) AS plant_count FROM plant_observations WHERE observation_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY month;"}
{"input": " \uc720\uae30\ub18d \uc81c\ud488\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc18c\ube44\uc790 \uc120\ud638\ub3c4 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products_organic_country (id INT, product_name TEXT, consumer_preference FLOAT, sourcing_country TEXT, organic BOOLEAN); INSERT INTO products_organic_country (id, product_name, consumer_preference, sourcing_country, organic) VALUES (1, 'Lotion', 4.3, 'USA', true), (2, 'Shampoo', 4.1, 'Canada', true), (3, 'Soap', 4.6, 'France', true), (4, 'Conditioner', 4.5, 'USA', true), (5, 'Body Wash', 4.2, 'Canada', true);", "output": "SELECT sourcing_country, AVG(consumer_preference) AS avg_preference FROM products_organic_country WHERE organic = true GROUP BY sourcing_country ORDER BY avg_preference DESC LIMIT 3;"}
{"input": " \uc791\ub144\uc5d0 \ubcf4\uace0\ub41c \ucd1d \ud5c8\uc704 \uc815\ubcf4 \uc0ac\uac74 \uc218\ub294 \ud50c\ub7ab\ud3fc \ubc0f \uc0ac\uac74 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE disinformation (id INT, incident_date DATE, incident_type VARCHAR(20), platform VARCHAR(20)); INSERT INTO disinformation (id, incident_date, incident_type, platform) VALUES (1, '2021-07-01', 'fake news', 'Twitter'), (2, '2021-08-15', 'propaganda', 'Facebook'), (3, '2021-09-30', 'manipulated media', 'Instagram');", "output": "SELECT platform, incident_type, COUNT(*) AS count FROM disinformation WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY platform, incident_type;"}
{"input": " \ucd9c\uc2dc \uc774\ud6c4 \ub7f0\ub358\uc5d0\uc11c \uba87 \ub2e8\uc704\uc758 \uacf5\uc815 \ubb34\uc5ed \ucee4\ud53c\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE products(product_id VARCHAR(20), product_name VARCHAR(20), launched_date DATE, is_fair_trade BOOLEAN); INSERT INTO products (product_id, product_name, launched_date, is_fair_trade) VALUES ('Fair Trade Coffee', '2022-01-01', true); CREATE TABLE stores(store_id VARCHAR(20), store_location VARCHAR(20)); INSERT INTO stores (store_id, store_location) VALUES ('London Store 1', 'London'), ('London Store 2', 'London'); CREATE TABLE sales(store_id VARCHAR(20), product_id VARCHAR(20), sale_date DATE, quantity INTEGER); INSERT INTO sales (store_id, product_id, sale_date, quantity) VALUES ('London Store 1', 'Fair Trade Coffee', '2022-01-05', 20), ('London Store 2', 'Fair Trade Coffee', '2022-01-07', 40);", "output": "SELECT SUM(quantity) FROM sales JOIN stores ON sales.store_id = stores.store_id JOIN products ON sales.product_id = products.product_id WHERE products.product_name = 'Fair Trade Coffee' AND sale_date >= products.launched_date AND store_location = 'London';"}
{"input": " \uad50\uc721 \ubd80\ubb38\uc5d0\uc11c ESG \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ud22c\uc790\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investors (investor_id INT, investor_name TEXT, country TEXT); CREATE TABLE investments (investment_id INT, investor_id INT, sector TEXT, amount FLOAT); CREATE TABLE esg_scores (investment_id INT, esg_score INT); INSERT INTO investors (investor_id, investor_name, country) VALUES (1, 'Investor A', 'USA'), (2, 'Investor B', 'Canada'), (3, 'Investor C', 'China'), (4, 'Investor D', 'Germany'); INSERT INTO investments (investment_id, investor_id, sector, amount) VALUES (1, 1, 'Education', 1000000), (2, 1, 'Healthcare', 500000), (3, 2, 'Renewable Energy', 1500000), (4, 3, 'Technology', 2000000), (5, 4, 'Education', 800000); INSERT INTO esg_scores (investment_id, esg_score) VALUES (1, 85), (2, 90), (3, 80), (4, 88), (5, 75);", "output": "SELECT i.investor_name FROM investors i JOIN investments j ON i.investor_id = j.investor_id JOIN esg_scores e ON j.investment_id = e.investment_id WHERE j.sector = 'Education' GROUP BY i.investor_id ORDER BY MIN(e.esg_score) LIMIT 1;"}
{"input": " \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(50), health_equity_metrics_score INT); INSERT INTO community_health_workers (id, name, health_equity_metrics_score) VALUES (1, 'John Doe', 90), (2, 'Jane Smith', 85);", "output": "SELECT name, health_equity_metrics_score, RANK() OVER (ORDER BY health_equity_metrics_score ASC) as rank FROM community_health_workers;"}
{"input": " \ubbf8\uc8fc \uc9c0\uc5ed \uc815\ubcf4\uc694\uc6d0\uc758 \ud3c9\uade0 \ubcf5\ubb34 \uae30\uac04\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE intelligence_agents (agent_id INT, agent_name VARCHAR(50), agency VARCHAR(50), country VARCHAR(50), years_of_service INT); INSERT INTO intelligence_agents VALUES (1, 'Jane Doe', 'NSA', 'United States', 8);", "output": "SELECT AVG(years_of_service) FROM intelligence_agents WHERE country IN (SELECT country FROM countries WHERE region = 'Americas');"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uacc4\ud1b5\uc758 \uc77c\uc77c \ud310\ub9e4\ub7c9 \ubcc0\ud654\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Sales (SaleID INT, StrainID INT, QuantitySold INT, SaleDate DATE);", "output": "SELECT StrainID, SaleDate, QuantitySold, QuantitySold - LAG(QuantitySold) OVER (PARTITION BY StrainID ORDER BY SaleDate) AS DailySalesChange FROM Sales WHERE SaleDate >= DATEADD(month, -1, GETDATE());"}
{"input": " \uac01 \uac8c\uc784 \uc7a5\ub974\ubcc4 \ucd5c\ub300 \uc810\uc218\uc640 \ud574\ub2f9 \uac8c\uc784 \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE scores (score_id INT, game_id INT, genre VARCHAR(50), player_name VARCHAR(50), score INT); INSERT INTO scores VALUES (1, 1, 'Action', 'Player1', 90), (2, 1, 'Action', 'Player2', 85), (3, 2, 'Adventure', 'Player3', 88), (4, 3, 'Action', 'Player4', 95), (5, 3, 'Action', 'Player5', 92);", "output": "SELECT genre, MAX(score) as max_score, (SELECT game_name FROM games WHERE games.game_id = scores.game_id) as game_name FROM scores GROUP BY genre;"}
{"input": " \uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131 \uc5f0\uad6c\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Algorithmic_Fairness_Research (Country VARCHAR(50), Articles INT); INSERT INTO Algorithmic_Fairness_Research (Country, Articles) VALUES ('USA', 120), ('UK', 80), ('Canada', 60), ('Germany', 50), ('Australia', 40);", "output": "SELECT Country, ROW_NUMBER() OVER (ORDER BY Articles DESC) as Rank FROM Algorithmic_Fairness_Research WHERE Rank <= 3;"}
{"input": " '\ud30c\ub9ac'\uc758 \uc77c\uc77c \uc218\uc775\uc5d0 \uae30\uc5ec\ud558\ub294 \uc0c1\uc704 2\uac00\uc9c0 \uc694\ub9ac \uc720\ud615\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE city (id INT, name VARCHAR(255)); INSERT INTO city (id, name) VALUES (1, 'Paris'); CREATE TABLE restaurant (id INT, name VARCHAR(255), city_id INT, cuisine_id INT); INSERT INTO restaurant (id, name, city_id, cuisine_id) VALUES (1, 'Bistro', 1, 1), (2, 'Italian Trattoria', 1, 2), (3, 'Sushi House', 1, 3); CREATE TABLE cuisine (id INT, type VARCHAR(255)); INSERT INTO cuisine (id, type) VALUES (1, 'French'), (2, 'Italian'), (3, 'Japanese'); CREATE TABLE menu (id INT, item VARCHAR(255), price DECIMAL(5,2), daily_sales INT, restaurant_id INT);", "output": "SELECT c.type, SUM(m.price * m.daily_sales) as revenue FROM menu m JOIN restaurant r ON m.restaurant_id = r.id JOIN cuisine c ON r.cuisine_id = c.id JOIN city ci ON r.city_id = ci.id WHERE ci.name = 'Paris' GROUP BY c.type ORDER BY revenue DESC LIMIT 2;"}
{"input": " 'Smith & Johnson'\uc774\ub77c\ub294 \ud68c\uc0ac\uc758 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc740 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE firms (firm_id INT, name TEXT); INSERT INTO firms (firm_id, name) VALUES (1, 'Smith & Johnson'); CREATE TABLE attorneys (attorney_id INT, firm_id INT); CREATE TABLE cases (case_id INT, attorney_id INT);", "output": "SELECT COUNT(DISTINCT cases.case_id) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id INNER JOIN firms ON attorneys.firm_id = firms.firm_id WHERE firms.name = 'Smith & Johnson';"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uae30\uc220\ubcc4 \uad70\uc0ac\uae30\uc220 \uac70\ub798\uac00 \uc99d\uac00\ud558\ub294 \ucd94\uc138\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE tech_transactions (tech_id INT, transact_date DATE, transact_count INT); INSERT INTO tech_transactions (tech_id, transact_date, transact_count) VALUES (1, '2021-01-01', 10), (1, '2021-02-01', 15), (1, '2021-03-01', 20), (2, '2021-01-01', 5), (2, '2021-02-01', 8), (2, '2021-03-01', 12);", "output": "SELECT tech_id, transact_date, transact_count, LAG(transact_count, 1) OVER (PARTITION BY tech_id ORDER BY transact_date) as previous_count, transact_count - LAG(transact_count, 1) OVER (PARTITION BY tech_id ORDER BY transact_date) as trend FROM tech_transactions WHERE transact_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74\uc5d0 \uc704\uce58\ud55c \uac01 \uad11\uc0b0 \ud604\uc7a5\uc5d0\uc11c \uad11\ubd80\uac00 \uadfc\ubb34\ud55c \ucd1d \uc2dc\uac04\uc744 \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE LaborProductivity (SiteID INT, EmployeeID INT, Role VARCHAR(50), HoursWorkedDecimal FLOAT, Date DATE); ALTER TABLE Employees ADD CONSTRAINT FK_SiteID FOREIGN KEY (SiteID) REFERENCES LaborProductivity(SiteID);", "output": "SELECT MineSites.Name, SUM(LaborProductivity.HoursWorkedDecimal) AS TotalHoursWorked FROM MineSites JOIN Employees ON MineSites.SiteID = Employees.SiteID JOIN LaborProductivity ON Employees.EmployeeID = LaborProductivity.EmployeeID WHERE Employees.Role = 'Miner' AND MineSites.Country = 'South Africa' GROUP BY MineSites.Name;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc870\uc9c1\uc774 \uc811\uadfc \uac00\ub2a5\ud55c \uae30\uc220 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ud560\ub2f9\ud55c \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organizations (org_id INT, org_name VARCHAR(100), region VARCHAR(50)); INSERT INTO organizations VALUES (1, 'Tech for All Africa', 'Africa'), (2, 'AI Empowerment Europe', 'Europe'); CREATE TABLE initiatives (initiative_id INT, org_id INT, budget DECIMAL(10,2)); INSERT INTO initiatives VALUES (1, 1, 50000.00), (2, 1, 75000.00), (3, 2, 60000.00); CREATE TABLE accessibility (accessibility_id INT, initiative_id INT, accessibility_level VARCHAR(20)); INSERT INTO accessibility VALUES (1, 1, 'accessible'), (2, 2, 'accessible'), (3, 3, 'accessible');", "output": "SELECT MIN(budget) FROM initiatives INNER JOIN organizations ON initiatives.org_id = organizations.org_id INNER JOIN accessibility ON initiatives.initiative_id = accessibility.initiative_id WHERE organizations.region = 'Africa' AND accessibility.accessibility_level = 'accessible';"}
{"input": " \uad50\uc0ac\uac00 1\ub144\uc5d0 \uc774\uc218\ud558\ub294 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc758 \ucd5c\ub300 \ud69f\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teacher_pd_yearly (teacher_id INT, year INT, courses_completed INT); INSERT INTO teacher_pd_yearly (teacher_id, year, courses_completed) VALUES (1, 2020, 2), (1, 2019, 1), (2, 2020, 3), (3, 2021, 1);", "output": "SELECT teacher_id, MAX(courses_completed) FROM teacher_pd_yearly GROUP BY teacher_id;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ub3c5\uc77c \ub0b4 \uac01 \uce5c\ud658\uacbd \ud638\ud154\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels(id INT, name TEXT, country TEXT, is_eco_friendly BOOLEAN); CREATE TABLE revenue(hotel_id INT, date DATE, revenue INT); INSERT INTO hotels(id, name, country, is_eco_friendly) VALUES (1, 'Hotel A', 'Germany', true), (2, 'Hotel B', 'France', false); INSERT INTO revenue(hotel_id, date, revenue) VALUES (1, '2022-01-01', 1000), (1, '2022-02-01', 1200), (1, '2022-03-01', 1500), (2, '2022-01-01', 800), (2, '2022-02-01', 900), (2, '2022-03-01', 1000);", "output": "SELECT hotel_id, SUM(revenue) OVER (PARTITION BY hotel_id ORDER BY date DESC ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) FROM revenue WHERE is_eco_friendly = true AND country = 'Germany';"}
{"input": " \uc2a4\ud0c0\ud2b8\uc5c5\ubcc4 \uc720\uc804\uc5f0\uad6c \uc790\uae08\uc758 \uc804\ub144\ub3c4 \ub300\ube44 \ubcc0\ub3d9\ud3ed\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups_funding (id INT, name VARCHAR(50), location VARCHAR(50), industry VARCHAR(50), funding DECIMAL(10, 2), funded_year INT); INSERT INTO biotech.startups_funding (id, name, location, industry, funding, funded_year) VALUES (1, 'StartupA', 'USA', 'Genetic Research', 6000000, 2019), (2, 'StartupB', 'Canada', 'Bioprocess Engineering', 4500000, 2018), (3, 'StartupC', 'USA', 'Synthetic Biology', 5000000, 2018), (4, 'StartupD', 'USA', 'Genetic Research', 8000000, 2020), (5, 'StartupE', 'Germany', 'Genetic Research', 7000000, 2019), (6, 'StartupF', 'USA', 'Genetic Research', 9000000, 2018);", "output": "SELECT name, (funding - LAG(funding) OVER (PARTITION BY name ORDER BY funded_year)) as funding_change FROM biotech.startups_funding WHERE industry = 'Genetic Research';"}
{"input": " 2000\ub144\ubd80\ud130 2010\ub144\uae4c\uc9c0 \uc6b0\uc8fc \uae30\uad00\uc774 \ubc1c\uc0ac\ud55c \ubaa8\ub4e0 \ud654\uc131 \ud0d0\uc0ac\uc120 \uc784\ubb34\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mars_rovers(id INT, agency VARCHAR(255), mission_name VARCHAR(255), launch_date DATE, budget DECIMAL(10,2));", "output": "SELECT AVG(budget) FROM mars_rovers WHERE agency IN (SELECT agency FROM mars_rovers WHERE launch_date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY agency) AND mission_name LIKE '%Mars Rover%';"}
{"input": "\uc2dc\ub4dc\ub2c8\ud56d\uacfc \uba5c\ubc84\ub978\ud56d\uc73c\ub85c \uc6b4\uc1a1\ub41c \ud654\ubb3c \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (port_id INT, port_name VARCHAR(50)); INSERT INTO port (port_id, port_name) VALUES (1, 'Port of Sydney'), (2, 'Port of Melbourne'); CREATE TABLE cargo (cargo_id INT, cargo_type VARCHAR(50)); CREATE TABLE transport (transport_id INT, cargo_id INT, port_id INT); INSERT INTO transport (transport_id, cargo_id, port_id) VALUES (1, 1, 1), (2, 2, 1), (3, 1, 2), (4, 3, 2);", "output": "SELECT cargo_type FROM cargo, transport WHERE cargo.cargo_id = transport.cargo_id AND port_id IN (1, 2) GROUP BY cargo_type;"}
{"input": " \ucef4\ud4e8\ud130\uacf5\ud559\uacfc \uc5ec\uc131\uad50\uc218\uc5d0\uac8c \uc9c0\uae09\ub41c \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50), gender VARCHAR(10)); INSERT INTO faculty (id, name, department, gender) VALUES (1, 'Alice', 'Computer Science', 'Female');", "output": "SELECT SUM(amount) FROM research_grants WHERE faculty_id IN (SELECT id FROM faculty WHERE department = 'Computer Science' AND gender = 'Female');"}
{"input": " '\uccad\ucd98\ub304\uc2a4' \ud589\uc0ac \uc7ac\ucc38\uc11d\ub960\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE AttendanceHistory (event_name VARCHAR(50), attendee_id INT, is_repeat_attendee BOOLEAN); INSERT INTO AttendanceHistory (event_name, attendee_id, is_repeat_attendee) VALUES ('Youth Dance', 1, FALSE); INSERT INTO AttendanceHistory (event_name, attendee_id, is_repeat_attendee) VALUES ('Youth Dance', 2, TRUE); INSERT INTO AttendanceHistory (event_name, attendee_id, is_repeat_attendee) VALUES ('Youth Dance', 3, FALSE); INSERT INTO AttendanceHistory (event_name, attendee_id, is_repeat_attendee) VALUES ('Youth Dance', 4, TRUE);", "output": "SELECT is_repeat_attendee, is_repeat_attendee * 100.0 / SUM(is_repeat_attendee) OVER() AS percentage FROM AttendanceHistory WHERE event_name = 'Youth Dance';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ucd1d \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \ud3c9\uade0 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE defense_projects(id INT, project_name VARCHAR(50), start_date DATE, end_date DATE, status VARCHAR(20));", "output": "SELECT 'Africa' AS continent, AVG(DATEDIFF(end_date, start_date)) AS avg_duration, COUNT(*) AS total_projects FROM defense_projects WHERE country IN (SELECT country FROM countries WHERE region = 'Africa');"}
{"input": " '\uc815\uc2e0\uac74\uac15'\uc744 \uc704\ud574 \uae30\ubd80\uc790 '\uc81c\uc774\ubbf8 \ubc00\ub7ec'\uc5d0\uac8c 7000\ub2ec\ub7ec \uae30\ubd80\ub85c \uc2e0\uae30\ub85d\uc744 \uc138\uc6e0\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE causes_insert_2 (cause_id INT, cause_name VARCHAR(255)); INSERT INTO causes_insert_2 (cause_id, cause_name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'), (4, 'Human Rights'), (5, 'Mental Health'); CREATE TABLE donations_insert_2 (donor_id INT, donor_name VARCHAR(255), cause_id INT, donation_amount INT);", "output": "INSERT INTO donations_insert_2 (donor_id, donor_name, cause_id, donation_amount) VALUES (8, 'Jamie Miller', (SELECT cause_id FROM causes_insert_2 WHERE cause_name = 'Mental Health'), 7000);"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc5f0\uac04 \uc0dd\uc0b0\ub41c \uad70\uc6a9\ucc28\ub7c9\uc758 \ucd5c\uc18c \ub300\uc218\ub97c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE yearly_production (id INT, year INT, quantity INT); INSERT INTO yearly_production (id, year, quantity) VALUES (1, 2018, 200); INSERT INTO yearly_production (id, year, quantity) VALUES (2, 2019, 300);", "output": "SELECT year, MIN(quantity) FROM yearly_production WHERE year >= (SELECT YEAR(CURRENT_DATE) - 5) GROUP BY year;"}
{"input": " \uc911\uc559\uc544\uba54\ub9ac\uce74 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\uc18c \uc790\uae08 \uc9c0\uc6d0 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance (project_id INT, project_name TEXT, location TEXT, funded_year INT, funding_amount FLOAT); INSERT INTO climate_finance (project_id, project_name, location, funded_year, funding_amount) VALUES (1, 'Adaptation 1', 'Guatemala', 2015, 6000000.0), (2, 'Mitigation 1', 'Costa Rica', 2013, 8000000.0), (3, 'Adaptation 2', 'Panama', 2012, 4000000.0);", "output": "SELECT MIN(funding_amount) FROM climate_finance WHERE funded_year >= 2010 AND project_type = 'climate adaptation' AND location LIKE 'Central America%';"}
{"input": " 2021\ub144\uacfc 2022\ub144\uc5d0 \uc6d4 \ud3c9\uade0 \ucde8\uc57d\uc810 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, name TEXT, category TEXT, severity TEXT, date_discovered DATE); INSERT INTO vulnerabilities (id, name, category, severity, date_discovered) VALUES (1, 'SQL Injection', 'Application', 'Low', '2021-02-01'), (2, 'Remote Code Execution', 'Network', 'Critical', '2022-03-01');", "output": "SELECT DATE_FORMAT(date_discovered, '%Y-%m') as month, COUNT(*) as count FROM vulnerabilities WHERE date_discovered >= '2021-01-01' AND date_discovered < '2023-01-01' GROUP BY month;"}
{"input": " \ub9e4\ub2ec \uc2b9\uc778\ub41c \uc758\uc57d\ud488\uc758 \ud3c9\uade0 \uc758\uc57d\ud488 \uc2b9\uc778 \uc2dc\uac04\uc740 \ud3c9\uade0 \uc2b9\uc778 \uc2dc\uac04\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE DrugApprovals (DrugName varchar(50), ApprovalDate date); INSERT INTO DrugApprovals (DrugName, ApprovalDate) VALUES ('DrugM', '2022-01-05'), ('DrugN', '2022-02-12'), ('DrugO', '2022-03-19'), ('DrugP', '2022-04-23');", "output": "SELECT YEAR(ApprovalDate) as ApprovalYear, MONTH(ApprovalDate) as ApprovalMonth, AVG(DATEDIFF(day, ApprovalDate, LEAD(ApprovalDate, 1, GETDATE()) OVER (PARTITION BY YEAR(ApprovalDate), MONTH(ApprovalDate) ORDER BY ApprovalDate))), ROW_NUMBER() OVER (ORDER BY AVG(DATEDIFF(day, ApprovalDate, LEAD(ApprovalDate, 1, GETDATE()) OVER (PARTITION BY YEAR(ApprovalDate), MONTH(ApprovalDate) ORDER BY ApprovalDate))) DESC) as ApprovalRank FROM DrugApprovals GROUP BY YEAR(ApprovalDate), MONTH(ApprovalDate);"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name VARCHAR(255)); CREATE TABLE volunteer_hours (id INT, volunteer_id INT, hours DECIMAL(10,2)); INSERT INTO volunteers (id, name) VALUES (1, 'John'), (2, 'Jane'), (3, 'Mary'); INSERT INTO volunteer_hours (id, volunteer_id, hours) VALUES (1, 1, 5), (2, 2, 10), (3, 1, 15), (4, 3, 20);", "output": "SELECT volunteer_id, AVG(hours) OVER (PARTITION BY volunteer_id) AS avg_hours_per_volunteer FROM volunteer_hours;"}
{"input": "LA' \ucc3d\uace0\uc5d0\uc11c \ubc1c\uc1a1\ub418\uc5b4 'NY' \ucc3d\uace0\uc5d0\uc11c \uc218\ub839\ub41c \ubaa8\ub4e0 \ubc30\uc1a1\ubb3c\uc758 \uc774\ub984\uacfc \uc911\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse (id INT, name VARCHAR(20)); CREATE TABLE shipment (id INT, warehouse_from_id INT, warehouse_to_id INT, weight FLOAT); INSERT INTO warehouse VALUES (1, 'LA'), (2, 'NY'); INSERT INTO shipment VALUES (1, 1, 2, 50.3);", "output": "SELECT shipment.id, shipment.weight FROM shipment INNER JOIN warehouse ON shipment.warehouse_from_id = warehouse.id WHERE warehouse.name = 'LA' AND shipment.warehouse_to_id = (SELECT id FROM warehouse WHERE name = 'NY');"}
{"input": " \uc6d0\uac00\uc5d0 \ube44\ud574 \uac00\uaca9 \uc778\uc0c1\ud3ed\uc774 \uac00\uc7a5 \ud070 \uc694\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dishes (id INT, name TEXT, type TEXT, price DECIMAL, cost DECIMAL, price_history DECIMAL[]); INSERT INTO dishes (id, name, type, price, cost, price_history) VALUES (1, 'Quinoa Salad', 'Vegan', 12.99, 5.50, ARRAY[10.99, 11.99, 12.99]), (2, 'Chickpea Curry', 'Vegan', 10.99, 7.99, ARRAY[9.99, 10.49, 10.99]), (3, 'Beef Burger', 'Non-Vegan', 15.99, 10.50, ARRAY[14.99, 15.49, 15.99]), (4, 'Chicken Sandwich', 'Non-Vegan', 14.99, 9.50, ARRAY[13.99, 14.49, 14.99]);", "output": "SELECT name, ((price - price_history[ARRAY_LENGTH(price_history, 1)] - cost) / (price_history[ARRAY_LENGTH(price_history, 1)] - cost)) * 100 AS price_increase_percentage FROM dishes WHERE ((price - price_history[ARRAY_LENGTH(price_history, 1)] - cost) / (price_history[ARRAY_LENGTH(price_history, 1)] - cost)) * 100 = (SELECT MAX((price - price_history[ARRAY_LENGTH(price_history, 1)] - cost) / (price_history[ARRAY_LENGTH(price_history, 1)] - cost)) * 100 FROM dishes);"}
{"input": " 2020\ub144 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CountryScores (country_id INT, region VARCHAR(20), year INT, score INT); INSERT INTO CountryScores (country_id, region, year, score) VALUES (1, 'Africa', 2018, 70); INSERT INTO CountryScores (country_id, region, year, score) VALUES (2, 'Africa', 2018, 80); INSERT INTO CountryScores (country_id, region, year, score) VALUES (3, 'Asia', 2018, 60); INSERT INTO CountryScores (country_id, region, year, score) VALUES (4, 'Asia', 2018, 65); INSERT INTO CountryScores (country_id, region, year, score) VALUES (5, 'Africa', 2020, 75); INSERT INTO CountryScores (country_id, region, year, score) VALUES (6, 'Africa', 2020, 80); INSERT INTO CountryScores (country_id, region, year, score) VALUES (7, 'Asia', 2020, 63); INSERT INTO CountryScores (country_id, region, year, score) VALUES (8, 'Asia', 2020, 68);", "output": "SELECT AVG(score) FROM CountryScores WHERE region = 'Africa' AND year = 2020;"}
{"input": " 2020\ub144\uacfc 2021\ub144\uc5d0 \uc544\ud504\ub9ac\uce74\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uc774\ub2c8\uc154\ud2f0\ube0c\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainability_initiatives (location VARCHAR(50), year INT); INSERT INTO sustainability_initiatives (location, year) VALUES ('Cape Town, South Africa', 2020), ('Marrakech, Morocco', 2020), ('Victoria Falls, Zimbabwe', 2021), ('Zanzibar, Tanzania', 2021);", "output": "SELECT year, COUNT(*) as total_initiatives FROM sustainability_initiatives WHERE location LIKE '%Africa%' AND year IN (2020, 2021) GROUP BY year;"}
{"input": " \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uacfc \uad70\uc0ac \uae30\uc220\uc744 \uacb0\ud569\ud55c \ucd1d \uac1c\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cybersecurity_strategies (id INT, strategy TEXT); INSERT INTO cybersecurity_strategies (id, strategy) VALUES (1, 'Strategy1'), (2, 'Strategy2'), (3, 'Strategy3'); CREATE TABLE military_technologies (id INT, name TEXT); INSERT INTO military_technologies (id, name) VALUES (1, 'Tech1'), (2, 'Tech2'), (3, 'Tech3');", "output": "SELECT COUNT(*) FROM (SELECT * FROM cybersecurity_strategies UNION ALL SELECT * FROM military_technologies) AS all_data;"}
{"input": " \uac01 \ub7ed\ube44\ud300 \ud648 \uacbd\uae30\uc758 \ud3c9\uade0 \ud2f0\ucf13 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ticket_prices (price DECIMAL(5,2), team_id INT, game_id INT); INSERT INTO ticket_prices (price, team_id, game_id) VALUES (50.00, 1, 101), (50.00, 1, 102), (60.00, 2, 103), (45.00, 3, 104); CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'All Blacks'), (2, 'Springboks'), (3, 'Wallabies'); CREATE TABLE games (game_id INT, home_team_id INT); INSERT INTO games (game_id, home_team_id) VALUES (101, 1), (102, 1), (103, 2), (104, 3);", "output": "SELECT t.team_name, AVG(price) avg_price FROM ticket_prices tp JOIN teams t ON tp.team_id = t.team_id JOIN games g ON tp.game_id = g.game_id WHERE t.team_id = g.home_team_id AND t.sport = 'Rugby' GROUP BY t.team_name;"}
{"input": " \uc778\ub3c4\uc758 \uc0c1\uc704 3\uac1c \uc720\uae30\ub18d \uba74 \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (id INT, name VARCHAR(255), material VARCHAR(255), quantity INT, country VARCHAR(255)); INSERT INTO Suppliers (id, name, material, quantity, country) VALUES (1, 'Supplier A', 'Organic Cotton', 5000, 'India'); INSERT INTO Suppliers (id, name, material, quantity, country) VALUES (2, 'Supplier B', 'Organic Cotton', 4000, 'India'); INSERT INTO Suppliers (id, name, material, quantity, country) VALUES (3, 'Supplier C', 'Organic Cotton', 3500, 'India');", "output": "SELECT name, SUM(quantity) FROM Suppliers WHERE country = 'India' AND material = 'Organic Cotton' GROUP BY name ORDER BY SUM(quantity) DESC LIMIT 3"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc758 'RPG' \uc7a5\ub974\uc5d0 \ub300\ud55c \ud50c\ub808\uc774\uc5b4\ub2f9 \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(255), Genre VARCHAR(255));CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(255), GameID INT, Playtime INT);", "output": "SELECT g.Genre, c.Country, AVG(p.Playtime) as AvgPlaytime FROM Games g JOIN Players p ON g.GameID = p.GameID JOIN (SELECT PlayerID, Country FROM PlayerProfile GROUP BY PlayerID) c ON p.PlayerID = c.PlayerID WHERE g.Genre = 'RPG' AND c.Country = 'Africa' GROUP BY g.Genre, c.Country;"}
{"input": " \uac01 \uc0ac\uc774\ud2b8\uc758 \ucd5c\uc2e0 \uacf5\uac1c \ud64d\ubcf4 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sites (SiteID INT, SiteName VARCHAR(50), PublicOutreachDate DATE); INSERT INTO Sites (SiteID, SiteName, PublicOutreachDate) VALUES (1, 'Site A', '2011-05-01'), (2, 'Site B', '2009-03-15'), (3, 'Site C', '2013-07-22');", "output": "SELECT SiteName, MAX(PublicOutreachDate) OVER (PARTITION BY SiteID) AS LatestPublicOutreachDate FROM Sites;"}
{"input": " \uac01 \ub300\ub959\uc5d0\ub294 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\uac00 \uba87 \uba85 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE continents (continent_id INT PRIMARY KEY, continent_name VARCHAR(255)); INSERT INTO continents (continent_id, continent_name) VALUES (1, 'Asia'), (2, 'Africa'), (3, 'Europe'), (4, 'North America'), (5, 'South America'), (6, 'Australia'); CREATE TABLE mobile_subscribers (subscriber_id INT PRIMARY KEY, continent_id INT); INSERT INTO mobile_subscribers (subscriber_id, continent_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (6, 4), (7, 4), (8, 5), (9, 5), (10, 6); CREATE TABLE broadband_subscribers (subscriber_id INT PRIMARY KEY, continent_id INT); INSERT INTO broadband_subscribers (subscriber_id, continent_id) VALUES (1, 1), (2, 2), (3, 2), (4, 3), (5, 3), (6, 4), (7, 4), (8, 5), (9, 5), (10, 6);", "output": "SELECT c.continent_name, COUNT(m.subscriber_id) + COUNT(b.subscriber_id) as total_subscribers FROM continents c LEFT JOIN mobile_subscribers m ON c.continent_id = m.continent_id LEFT JOIN broadband_subscribers b ON c.continent_id = b.continent_id GROUP BY c.continent_name;"}
{"input": " \uc9c0\ub09c\ud574 \ubd81\uadf9 \uc9c0\uc5ed \uad6d\uac00\ubcc4 \ucd1d \uba54\ud0c4 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MethaneEmission (Country VARCHAR(100), Emission FLOAT, Region VARCHAR(100)); INSERT INTO MethaneEmission (Country, Emission, Region) VALUES ('Norway', 5000, 'Arctic'); INSERT INTO MethaneEmission (Country, Emission, Region) VALUES ('Russia', 7000, 'Arctic');", "output": "SELECT Country, SUM(Emission) OVER (PARTITION BY Country ORDER BY Country DESC) AS TotalEmission FROM MethaneEmission WHERE Region = 'Arctic' AND YEAR(CurrentDate) - YEAR(DateInstalled) BETWEEN 1 AND 12;"}
{"input": " \uc704\uc131\uc744 \ubc1c\uc0ac\ud588\uc9c0\ub9cc \uad6d\uc81c \uc6b0\uc8fc \uc815\uac70\uc7a5\uc5d0 \uc784\ubb34\ub97c \ubc1c\uc0ac\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE SatelliteLaunches (SatelliteName TEXT, LaunchCountry TEXT);CREATE TABLE ISSMissions (AstronautName TEXT, MissionCountry TEXT);", "output": "(SELECT LaunchCountry FROM SatelliteLaunches EXCEPT SELECT MissionCountry FROM ISSMissions) EXCEPT (SELECT NULL);"}
{"input": " 2022\ub144 2\ubd84\uae30 \ud558\uc704 \uce74\ud14c\uace0\ub9ac\ubcc4 \ube44\uac74 \ud654\uc7a5\ud488 \ube44\uc728\uc740?", "context": "CREATE TABLE cosmetics (product_id INT, product_name VARCHAR(100), subcategory VARCHAR(50), vegan BOOLEAN, sale_date DATE, revenue DECIMAL(10, 2)); INSERT INTO cosmetics (product_id, product_name, subcategory, vegan, sale_date, revenue) VALUES (1, 'Lipstick', 'Matte', true, '2022-04-02', 25.99), (2, 'Foundation', 'Liquid', false, '2022-04-15', 34.99);", "output": "SELECT subcategory, COUNT(*) FILTER (WHERE vegan = true) * 100.0 / COUNT(*) AS percentage_vegan_cosmetics FROM cosmetics WHERE category = 'Cosmetics' AND EXTRACT(QUARTER FROM sale_date) = 2 GROUP BY subcategory;"}
{"input": " \ud574\ub2f9 \uc5f0\ub3c4\uc758 \ud2b9\uc815 \ub2ec\uc5d0 \ucc98\ub9ac\ub41c \ucd1d \uccad\uad6c\uc11c\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE claims (id INT, policyholder_id INT, date DATE, amount FLOAT); INSERT INTO claims (id, policyholder_id, date, amount) VALUES (1, 1, '2021-01-01', 100), (2, 1, '2021-02-01', 200), (3, 2, '2021-03-01', 300), (4, 3, '2021-03-01', 500), (5, 3, '2021-04-01', 600);", "output": "SELECT SUM(amount) as total_claims FROM claims WHERE EXTRACT(MONTH FROM date) = 1;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubc1c\uc804 \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc8fc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_renewable_energy (state VARCHAR(255), quarter INT, technology VARCHAR(255), capacity FLOAT); INSERT INTO state_renewable_energy (state, quarter, technology, capacity) VALUES ('California', 1, 'Solar', 5000), ('California', 1, 'Wind', 3000), ('Texas', 1, 'Solar', 4000), ('Texas', 1, 'Wind', 4500), ('New_York', 1, 'Solar', 2500), ('New_York', 1, 'Wind', 3500);", "output": "SELECT state, MAX(capacity) as max_capacity FROM state_renewable_energy WHERE quarter = 1 GROUP BY state;"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \uc2ec\ub9ac\ub41c \ud615\uc0ac \uc0ac\uac74\uc758 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CriminalCases (CaseID INT, CaseName VARCHAR(50), State VARCHAR(20)); INSERT INTO CriminalCases VALUES (1, 'Case A', 'California'); INSERT INTO CriminalCases VALUES (2, 'Case B', 'California'); INSERT INTO CriminalCases VALUES (3, 'Case C', 'New York');", "output": "SELECT State, COUNT(*) FROM CriminalCases GROUP BY State;"}
{"input": " \uc804\uad6d \ud3c9\uade0\ubcf4\ub2e4 \ub179\uc9c0 \ube44\uc728\uc774 \ub354 \ub192\uc740 \uc778\uad6c 1,000,000\uba85 \uc774\uc0c1\uc758 \ubaa8\ub4e0 \ub3c4\uc2dc \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE cities (name VARCHAR(50), population INT, green_spaces_percentage DECIMAL(5,2)); INSERT INTO cities (name, population, green_spaces_percentage) VALUES ('New York', 8500000, 22.5), ('Los Angeles', 4000000, 18.3), ('Chicago', 2700000, 19.4), ('Houston', 2300000, 15.2), ('Phoenix', 1700000, 13.8);", "output": "SELECT name FROM cities WHERE population > 1000000 AND green_spaces_percentage > (SELECT AVG(green_spaces_percentage) FROM cities);"}
{"input": " '\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591' \uc9c0\uc5ed \uace0\uac1d\uc744 \uc704\ud55c '\uc0c1\ud488' \ud380\ub4dc \uc720\ud615\uc758 \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT, customer_id INT, fund_type VARCHAR(50), investment_amount DECIMAL(10,2)); INSERT INTO investments (id, customer_id, fund_type, investment_amount) VALUES (1, 1, 'Money Market', 10000.00); INSERT INTO investments (id, customer_id, fund_type, investment_amount) VALUES (2, 2, 'Commodity', 15000.00); INSERT INTO investments (id, customer_id, fund_type, investment_amount) VALUES (3, 3, 'Money Market', 20000.00); INSERT INTO investments (id, customer_id, fund_type, investment_amount) VALUES (4, 4, 'Commodity', 30000.00);", "output": "SELECT SUM(investment_amount) FROM investments WHERE fund_type = 'Commodity' AND customer_id IN (SELECT id FROM customers WHERE region = 'Asia Pacific');"}
{"input": " \ubaa8\ub4e0 \uc740\uad11\uc758 \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MineDepths (MineID INT, MineType VARCHAR(10), Depth INT); INSERT INTO MineDepths (MineID, MineType, Depth) VALUES (1, 'Gold', 1200), (2, 'Silver', 800), (3, 'Gold', 1500);", "output": "SELECT MineType, MIN(Depth) FROM MineDepths WHERE MineType = 'Silver' GROUP BY MineType;"}
{"input": " \ubca0\ub97c\ub9b0 \ud638\ud154\uc5d0 \ub300\ud55c \uac01 OTA\uc758 \uc608\uc57d \uac74\uc218\uc640 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE otas (ota_id INT, ota_name TEXT, bookings INT, revenue INT); INSERT INTO otas (ota_id, ota_name, bookings, revenue) VALUES (1, 'Booking.com', 100, 15000), (2, 'Expedia', 75, 11000), (3, 'Agoda', 50, 7500); CREATE TABLE bookings (booking_id INT, ota_id INT, hotel_id INT, bookings INT, revenue INT); INSERT INTO bookings (booking_id, ota_id, hotel_id, bookings, revenue) VALUES (1, 1, 1, 15, 225), (2, 1, 2, 10, 150), (3, 2, 3, 7, 110), (4, 2, 4, 3, 50), (5, 3, 5, 2, 35), (6, 3, 6, 1, 20); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT); INSERT INTO hotels (hotel_id, hotel_name, city) VALUES (1, 'The Ritz Berlin', 'Berlin'), (2, 'The Regent Berlin', 'Berlin'), (3, 'The Mandala Hotel', 'Berlin'), (4, 'The Adlon Kempinski Berlin', 'Berlin'), (5, 'The Ritz-Carlton Berlin', 'Berlin'), (6, 'The Hotel Adlon', 'Berlin');", "output": "SELECT ota_name, SUM(bookings) as total_bookings, SUM(revenue) as total_revenue FROM otas JOIN bookings ON otas.ota_id = bookings.ota_id JOIN hotels ON bookings.hotel_id = hotels.hotel_id WHERE hotels.city = 'Berlin' GROUP BY ota_name;"}
{"input": " 2022\ub144 \ub0a8\uc544\uba54\ub9ac\uce74\uc758 \uad6d\uac00\ubcc4 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RecyclingRatesSouthAmerica (country VARCHAR(50), year INT, recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingRatesSouthAmerica (country, year, recycling_rate) VALUES ('Brazil', 2022, 0.55), ('Argentina', 2022, 0.60), ('Colombia', 2022, 0.45), ('Peru', 2022, 0.48), ('Chile', 2022, 0.52);", "output": "SELECT country, AVG(recycling_rate) FROM RecyclingRatesSouthAmerica WHERE year = 2022 GROUP BY country;"}
{"input": " \ub85c\ud79d\uc57c \ub09c\ubbfc \uc704\uae30\uc5d0 \ub300\ud55c \uac01 \uc815\ubd80\uc758 \uc9c0\uc6d0 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc774\uba70, \uc804\uccb4 \uae30\ubd80\uae08 \ub300\ube44 \uac01 \uc815\ubd80\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Aid_Donors (id INT, name TEXT, type TEXT); INSERT INTO Aid_Donors (id, name, type) VALUES (1, 'USA', 'Government'), (2, 'Germany', 'Government'), (3, 'Saudi Arabia', 'Government'), (4, 'UK', 'Government'); CREATE TABLE Aid_Contributions (id INT, donor_id INT, crisis TEXT, amount INT, contribution_date DATE); INSERT INTO Aid_Contributions (id, donor_id, crisis, amount, contribution_date) VALUES (1, 1, 'Rohingya Refugee Crisis', 15000000, '2018-01-01'), (2, 2, 'Rohingya Refugee Crisis', 12000000, '2018-02-15'), (3, 3, 'Rohingya Refugee Crisis', 18000000, '2018-03-30'), (4, 4, 'Rohingya Refugee Crisis', 10000000, '2018-04-15');", "output": "SELECT A.name as donor_name, SUM(AC.amount) as total_contribution, (SUM(AC.amount) / (SELECT SUM(amount) FROM Aid_Contributions WHERE crisis = 'Rohingya Refugee Crisis')) * 100 as contribution_percentage FROM Aid_Contributions AC INNER JOIN Aid_Donors A ON AC.donor_id = A.id WHERE AC.crisis = 'Rohingya Refugee Crisis' GROUP BY A.name;"}
{"input": "\uc778\ub3c4\uc8fc\uc758\uc801 \uc9c0\uc6d0' \ub3c4\uc2dd\uc5d0 \ud3ec\ud568\ub41c \ud559\uad50\uc640 \ubcd1\uc6d0\uc758 \uc218\ub97c \uc2dc\uc124 \uc218 \uae30\uc900\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA HumanitarianAid; CREATE TABLE Schools (id INT, name VARCHAR, country VARCHAR); INSERT INTO Schools (id, name, country) VALUES (1, 'School1', 'Country1'), (2, 'School2', 'Country2'); CREATE TABLE Hospitals (id INT, name VARCHAR, country VARCHAR); INSERT INTO Hospitals (id, name, country) VALUES (1, 'Hospital1', 'Country1'), (2, 'Hospital2', 'Country2');", "output": "SELECT 'Schools' as facility_type, COUNT(*) as total_facilities FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY id) as rn FROM HumanitarianAid.Schools) as t WHERE rn > 0 UNION ALL SELECT 'Hospitals' as facility_type, COUNT(*) as total_facilities FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY id) as rn FROM HumanitarianAid.Hospitals) as t WHERE rn > 0 ORDER BY total_facilities DESC;"}
{"input": " '\ud30c\ub9ac'\uc5d0\uc11c \ubaa8\ub4e0 \uc218\ub3d9 \uc6b4\uc804 \ucc28\ub7c9\uc774 \ud558\ub8e8\uc5d0 \uc774\ub3d9\ud558\ub294 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vehicles (id INT, city VARCHAR(20), type VARCHAR(20), daily_distance INT); INSERT INTO vehicles VALUES (1, 'paris', 'manual', 50); INSERT INTO vehicles VALUES (2, 'paris', 'manual', 60); INSERT INTO vehicles VALUES (3, 'london', 'manual', 70);", "output": "SELECT AVG(daily_distance) FROM vehicles WHERE city = 'paris' AND type = 'manual';"}
{"input": " \ud574\ub2f9 \ubd80\uc11c\uc758 \ud3c9\uade0 \uae09\uc5ec\ubcf4\ub2e4 \uae09\uc5ec\uac00 \ub192\uc740 \uc9c1\uc6d0\uc758 \uc774\ub984\uacfc \uae09\uc5ec\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10, 2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'John', 'Doe', 'IT', 75000.00); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (2, 'Jane', 'Smith', 'IT', 80000.00); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (3, 'Mike', 'Johnson', 'Marketing', 60000.00); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (4, 'Alice', 'Williams', 'HR', 85000.00);", "output": "SELECT FirstName, LastName, Salary FROM Employees e1 WHERE Salary > (SELECT AVG(Salary) FROM Employees e2 WHERE e1.Department = e2.Department);"}
{"input": "Tesla' \ucc28\ub7c9\uc744 \uc18c\uc720\ud558\uace0 \uc815\ucc45 \ubc1c\ud6a8\uc77c\uc774 '2023-01-01' \uc774\ud6c4\uc778 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubcf4\ud5d8 \uacc4\uc57d \ubc88\ud638, \ubcf4\ud5d8 \uacc4\uc57d\uc790 \uc774\ub984, \uc790\ub3d9\ucc28 \ubaa8\ub378 \ubc0f \uc815\ucc45 \ubc1c\ud6a8\uc77c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE policyholders (policy_number INT, policyholder_name VARCHAR(50), car_make VARCHAR(20), car_model VARCHAR(20), policy_effective_date DATE);", "output": "SELECT policy_number, policyholder_name, car_model, policy_effective_date FROM policyholders WHERE car_make = 'Tesla' AND policy_effective_date >= '2023-01-01';"}
{"input": " AI \uc548\uc804 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc81c\uae30\ub41c AI \uc548\uc804 \ubb38\uc81c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE concerns (id INT, description VARCHAR(255), published_date DATE);", "output": "SELECT description FROM concerns WHERE YEAR(published_date) = YEAR(CURRENT_DATE());"}
{"input": " \ub098\uc774\uc9c0\ub9ac\uc544 \uae30\ubd80\uc790\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc744 \uc6d0\uc778\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name TEXT, donor_country TEXT); INSERT INTO donors (donor_id, donor_name, donor_country) VALUES (1, 'John Doe', 'Nigeria'), (2, 'Jane Smith', 'USA'), (3, 'Alice Johnson', 'Canada'); CREATE TABLE donations (donation_id INT, donor_id INT, cause TEXT, amount DECIMAL(10,2)); INSERT INTO donations (donation_id, donor_id, cause, amount) VALUES (1, 1, 'Education', 500.00), (2, 1, 'Health', 300.00), (3, 2, 'Environment', 750.00), (4, 2, 'Education', 250.00), (5, 3, 'Health', 600.00); CREATE TABLE causes (cause_id INT, cause TEXT); INSERT INTO causes (cause_id, cause) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment');", "output": "SELECT d.donor_country, c.cause, AVG(donations.amount) as avg_donation FROM donors d JOIN donations ON d.donor_id = donations.donor_id JOIN causes c ON donations.cause = c.cause WHERE d.donor_country = 'Nigeria' GROUP BY d.donor_country, c.cause;"}
{"input": " \ubc14\ub974\uc140\ub85c\ub098\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uc0ac\uc5c5\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Sustainable_Tourism (id INT PRIMARY KEY, venue_id INT, initiative VARCHAR(100), start_date DATE, end_date DATE); INSERT INTO Sustainable_Tourism (id, venue_id, initiative, start_date, end_date) VALUES (1, 1, 'Tree planting', '2022-03-01', '2022-03-31'), (2, 2, 'Recycling campaign', '2022-04-01', '2022-04-30');", "output": "SELECT COUNT(*) FROM Sustainable_Tourism WHERE venue_id IN (SELECT id FROM Venues WHERE city = 'Barcelona');"}
{"input": " \ucd9c\ud1f4\uadfc \uc2dc\uac04 \ub3d9\uc548 \ub3c4\ucfc4\uc758 \uac01 \ub178\uc120\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE trains (route_id INT, fare DECIMAL(5,2)); CREATE TABLE routes (route_id INT, line VARCHAR(10)); CREATE TABLE schedules (route_id INT, hour INT);", "output": "SELECT r.line, SUM(t.fare) FROM trains t JOIN routes r ON t.route_id = r.route_id JOIN schedules s ON t.route_id = s.route_id WHERE s.hour BETWEEN 7 AND 9 GROUP BY r.line;"}
{"input": " 2010\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \ubbf8\uad6d\uacfc \uc911\uad6d\uc5d0\uc11c \ucd9c\uc6d0\ub41c \ubc95\uc801 \uae30\uc220 \ud2b9\ud5c8\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE legal_tech_patents (id INT, patent_name VARCHAR(255), country VARCHAR(255), filing_year INT); INSERT INTO legal_tech_patents (id, patent_name, country, filing_year) VALUES (1, 'AI Document Review System', 'United States', 2018), (2, 'Smart Contract Platform', 'China', 2019), (3, 'Legal Chatbot', 'United States', 2017), (4, 'Blockchain-based E-Discovery', 'China', 2016);", "output": "SELECT COUNT(*) AS total_patents FROM legal_tech_patents WHERE country IN ('United States', 'China') AND filing_year BETWEEN 2010 AND 2020;"}
{"input": " \uac01 \uc18c\ube44\uc790\uac00 \ube44\uc724\ub9ac\uc801\uc778 \uacf5\uae09\uc5c5\uccb4\ub85c\ubd80\ud130 \uad6c\ub9e4\ud55c \uc81c\ud488\uc758 \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE consumers (consumer_id INT, consumer_name TEXT); CREATE TABLE purchases (purchase_id INT, consumer_id INT, supplier_id INT, product_id INT, quantity INT); CREATE TABLE suppliers (supplier_id INT, supplier_name TEXT, labor_practice TEXT);", "output": "SELECT consumers.consumer_name, COUNT(DISTINCT purchases.product_id) FROM consumers JOIN purchases ON consumers.consumer_id = purchases.consumer_id JOIN suppliers ON purchases.supplier_id = suppliers.supplier_id WHERE suppliers.labor_practice = 'Unethical' GROUP BY consumers.consumer_id;"}
{"input": " \ubaa8\ub4e0 \uae30\ubd80\uc790\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \ucd1d \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DonationAmounts (DonationID INT, DonationDate DATE, DonationAmount DECIMAL(10,2)); INSERT INTO DonationAmounts VALUES (1, '2021-04-05', 1500.00), (2, '2021-08-20', 1500.00), (3, '2021-04-12', 1000.00), (4, '2021-08-01', 2000.00), (5, '2021-03-15', 500.00), (6, '2021-09-01', 750.00);", "output": "SELECT EXTRACT(MONTH FROM DonationDate) AS Month, SUM(DonationAmount) OVER (PARTITION BY EXTRACT(MONTH FROM DonationDate)) AS TotalDonationAmount FROM DonationAmounts WHERE EXTRACT(YEAR FROM DonationDate) = 2021 GROUP BY Month ORDER BY Month;"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \uc801\uc740 \uacf5\uc7a5\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (id INT, name VARCHAR(50), location VARCHAR(50), co2_emissions INT); INSERT INTO factories (id, name, location, co2_emissions) VALUES (1, 'EcoFactory', 'France', 100), (2, 'SmartTech', 'France', 120), (3, 'GreenInnovations', 'France', 90);", "output": "SELECT name FROM factories WHERE location = 'France' AND co2_emissions = (SELECT MIN(co2_emissions) FROM factories WHERE location = 'France');"}
{"input": " \uc74c\uc545 \ubc0f \uc2dc\uac01 \uc608\uc220 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\ubd80\ud55c \uad6d\uac00\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE donations (id INT, amount DECIMAL(10,2), donor_country VARCHAR(50), category VARCHAR(20)); INSERT INTO donations (id, amount, donor_country, category) VALUES (1, 500, 'USA', 'Visual Arts'); INSERT INTO donations (id, amount, donor_country, category) VALUES (2, 1000, 'Canada', 'Visual Arts'); INSERT INTO donations (id, amount, donor_country, category) VALUES (3, 750, 'Mexico', 'Music'); INSERT INTO donations (id, amount, donor_country, category) VALUES (4, 850, 'Brazil', 'Visual Arts'); INSERT INTO donations (id, amount, donor_country, category) VALUES (5, 600, 'USA', 'Music');", "output": "SELECT donor_country FROM donations d1 WHERE category = 'Visual Arts' INTERSECT SELECT donor_country FROM donations d2 WHERE category = 'Music';"}
{"input": " \uce90\ub098\ub2e4 \ub0a8\uc131\uc758 \ucd5c\ub300 \uc7ac\uc815\uc801 \uc6f0\ube59 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE financial_wellbeing_canada (id INT, gender VARCHAR(10), score INT);  INSERT INTO financial_wellbeing_canada (id, gender, score) VALUES (1, 'Female', 65), (2, 'Male', 75), (3, 'Male', 80);", "output": "SELECT MAX(score) FROM financial_wellbeing_canada WHERE gender = 'Male';"}
{"input": " \uc7ac\ud65c\uc6a9 \uc7ac\ub8cc\ub85c \ub9cc\ub4e0 \uac00\uc7a5 \ube44\uc2fc \uc81c\ud488 3\uac1c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE products (product_id int, material varchar(20), price decimal(5,2)); INSERT INTO products (product_id, material, price) VALUES (1, 'recycled polyester', 59.99), (2, 'recycled cotton', 39.99), (3, 'recycled polyester', 49.99), (4, 'organic cotton', 25.99);", "output": "SELECT * FROM (SELECT product_id, material, price, ROW_NUMBER() OVER (PARTITION BY material ORDER BY price DESC) rn FROM products WHERE material like '%recycled%') tmp WHERE rn <= 3;"}
{"input": " \"\ubd81\ucabd\" \ub3d9\ub124\uc5d0\uc11c \ud558\ub8e8\uc5d0 \ucd5c\ub300 \uba87 \ud1b5\uc758 \uae34\uae09 \uc804\ud654\ub97c \ubc1b\uc744 \uc218 \uc788\ub098\uc694?", "context": "CREATE TABLE daily_emergency_calls (date DATE, neighborhood VARCHAR(20), calls INT); INSERT INTO daily_emergency_calls (date, neighborhood, calls) VALUES ('2022-01-01', 'northside', 50), ('2022-01-02', 'northside', 60), ('2022-01-03', 'northside', 70);", "output": "SELECT MAX(calls) FROM daily_emergency_calls WHERE neighborhood = 'northside';"}
{"input": " \uc81c\ud488 \uac00\uaca9\uc774 \uac00\uc7a5 \ub0ae\uc740 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Brands (id INT, name VARCHAR(255), is_cruelty_free BOOLEAN); CREATE TABLE Products (id INT, brand_id INT, name VARCHAR(255), price DECIMAL(5,2)); INSERT INTO Brands (id, name, is_cruelty_free) VALUES (1, 'Lush', true), (2, 'Estee Lauder', false); INSERT INTO Products (id, brand_id, name, price) VALUES (1, 1, 'Soap', 12.99), (2, 1, 'Shower Gel', 25.99), (3, 2, 'Moisturizer', 45.99);", "output": "SELECT b.name as cruelty_free_brand, p.name as least_expensive_product, p.price as price FROM Brands b JOIN Products p ON b.id = p.brand_id WHERE b.is_cruelty_free = true AND p.price = (SELECT MIN(price) FROM Products WHERE brand_id = b.id);"}
{"input": " \ub3c5\uc77c \uc2dc\uc7a5\uc5d0\uc11c \ud30c\ub77c\ubca4\uc744 \ud568\uc720\ud55c \ud654\uc7a5\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uac00\ub97c \ubc1b\uc740 \uc81c\ud488\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cosmetics_ingredients (product_id INT, ingredient TEXT, country TEXT);  CREATE VIEW paraben_products AS SELECT product_id FROM cosmetics_ingredients WHERE ingredient = 'parabens';  CREATE VIEW all_products AS SELECT product_id FROM cosmetics_ingredients;", "output": "SELECT 100.0 * COUNT(*) FILTER (WHERE product_id IN (SELECT product_id FROM paraben_products)) / COUNT(*) as paraben_percentage FROM all_products WHERE country = 'Germany';"}
{"input": " \ub9e4\ub2ec \uba87 \uba85\uc758 \uc9c1\uc6d0\uc774 \ucc44\uc6a9\ub418\ub098\uc694?", "context": "CREATE TABLE Employees (EmployeeID INT, HireDate DATE); INSERT INTO Employees (EmployeeID, HireDate) VALUES (1, '2021-01-01'), (2, '2021-02-15'), (3, '2021-03-20'), (4, '2022-04-01');", "output": "SELECT EXTRACT(MONTH FROM HireDate) as HireMonth, COUNT(*) as NumHired FROM Employees GROUP BY HireMonth ORDER BY HireMonth;"}
{"input": "\ub3c4\uc2dc \uc9c0\uc5ed\uc5d0\uc11c \uc9c0\uc5ed\uc0ac\ud68c \uc758\ub8cc \uc885\uc0ac\uc790\uac00 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ud658\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR, location VARCHAR, patients_served INT); INSERT INTO community_health_workers (id, name, location, patients_served) VALUES (1, 'John Doe', 'Urban', 50); INSERT INTO community_health_workers (id, name, location, patients_served) VALUES (2, 'Jane Smith', 'Urban', 75);", "output": "SELECT location, SUM(patients_served) as total_patients FROM community_health_workers WHERE location = 'Urban' GROUP BY location;"}
{"input": " \uac01 \uc778\ud504\ub77c \uc720\ud615\ubcc4 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uac74\uc124 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE InfrastructureProjects (Id INT, Name VARCHAR(255), Type VARCHAR(255), ConstructionCost FLOAT); INSERT INTO InfrastructureProjects (Id, Name, Type, ConstructionCost) VALUES (1, 'Dam', 'Road', 5000000), (2, 'Bridge', 'Bridge', 2000000), (3, 'Road', 'Railway', 1500000), (4, 'Tunnel', 'Tunnel', 8000000), (5, 'Highway', 'Bridge', 3000000);", "output": "SELECT Type, MIN(ConstructionCost) as MinCost, MAX(ConstructionCost) as MaxCost FROM InfrastructureProjects GROUP BY Type;"}
{"input": " \ub85c\ub9c8 \ub300\uc911\uad50\ud1b5\uc758 \ud3c9\uade0 \uc694\uae08 \uacc4\uc0b0", "context": "CREATE TABLE fares (id INT, fare_amount FLOAT, fare_type VARCHAR(50), fare_city VARCHAR(50));", "output": "SELECT AVG(fare_amount) AS avg_fare FROM fares WHERE fare_city = 'Rome' AND fare_type = 'public';"}
{"input": " \uba64\ubc84\uc2ed \uc720\ud615\ubcc4 \ud3c9\uade0 \uba64\ubc84\uc2ed \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE gym_memberships (id INT, member_name VARCHAR(50), start_date DATE, end_date DATE, membership_type VARCHAR(50), price DECIMAL(5,2));", "output": "SELECT membership_type, AVG(DATEDIFF(end_date, start_date))/30 AS avg_duration FROM gym_memberships GROUP BY membership_type;"}
{"input": " 2019\ub144 7\uc6d4 \ub300\ube44 2020\ub144 7\uc6d4 \uc628\ud0c0\ub9ac\uc624 \uc8fc\uc758 \ucd1d \ubb3c \uc808\uc57d \ube44\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE conservation_initiatives (id INT, province VARCHAR(50), year INT, month INT, conservation_percentage FLOAT); INSERT INTO conservation_initiatives (id, province, year, month, conservation_percentage) VALUES (1, 'Ontario', 2019, 7, 10.0); INSERT INTO conservation_initiatives (id, province, year, month, conservation_percentage) VALUES (2, 'Ontario', 2020, 7, 12.5);", "output": "SELECT (conservation_percentage_2020 - conservation_percentage_2019) / conservation_percentage_2019 * 100 AS percentage_change FROM (SELECT conservation_percentage AS conservation_percentage_2019 FROM conservation_initiatives WHERE province = 'Ontario' AND year = 2019 AND month = 7) AS previous_year, (SELECT conservation_percentage AS conservation_percentage_2020 FROM conservation_initiatives WHERE province = 'Ontario' AND year = 2020 AND month = 7) AS current_year;"}
{"input": " \ub3c4\uc2dc\ubcc4 \"Private Donors\"\uac00 \uc790\uae08\uc744 \uc9c0\uc6d0\ud558\ub294 \uc774\ubca4\ud2b8 \uc218\uc640 \ud574\ub2f9 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \ucd1d \ucc38\uc11d\uc790\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE events (event_id INT, event_name VARCHAR(50), city VARCHAR(30), funding_source VARCHAR(30), attendance INT); INSERT INTO events (event_id, event_name, city, funding_source, attendance) VALUES (1, 'Theater Play', 'New York', 'Government', 200), (2, 'Art Exhibit', 'Los Angeles', 'Private Donors', 300), (3, 'Music Festival', 'New York', 'Government', 400), (4, 'Dance Performance', 'New York', 'Private Donors', 250);", "output": "SELECT city, COUNT(*) as num_events, SUM(attendance) as total_attendance FROM events WHERE funding_source = 'Private Donors' GROUP BY city;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc790\uce58\uad6c\ubcc4\ub85c \uc811\uc218\ub41c \uc2dc\ubbfc \ubbfc\uc6d0\uc740 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Complaints (Complaint_ID INT, District_Name VARCHAR(255), Complaint_Date DATE); INSERT INTO Complaints VALUES (1, 'District A', '2022-01-01'), (2, 'District B', '2022-02-01'), (3, 'District A', '2022-03-31');", "output": "SELECT District_Name, COUNT(*) OVER (PARTITION BY District_Name) AS Complaints_Count FROM Complaints WHERE Complaint_Date >= DATEADD(month, -1, GETDATE());"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE pollution_initiatives (id INT, initiative_name VARCHAR(255), launch_date DATE, region VARCHAR(255));", "output": "SELECT region, count(*) FROM pollution_initiatives GROUP BY region;"}
{"input": " \ub300\uc11c\uc591\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc758 \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (id INT, name VARCHAR(255), location VARCHAR(255), depth FLOAT); INSERT INTO marine_protected_areas (id, name, location, depth) VALUES (1, 'MPA 1', 'Pacific Ocean', 123.4), (2, 'MPA 2', 'Atlantic Ocean', 150.0), (3, 'MPA 3', 'Atlantic Ocean', 200.0);", "output": "SELECT MAX(depth) FROM marine_protected_areas WHERE location = 'Atlantic Ocean';"}
{"input": " \ud574\ub2f9 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \ud658\uc790 \uc218\uc5d0 \ub530\ub77c \uac01 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \ud658\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PatientLanguage (PatientID int, Language varchar(10)); INSERT INTO PatientLanguage (PatientID, Language) VALUES (1, 'Spanish'), (2, 'English'), (3, 'French'), (4, 'Mandarin'), (5, 'English'), (6, 'Spanish'), (7, 'English');", "output": "SELECT Language, COUNT(*) OVER (PARTITION BY Language) AS PatientCount, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS Rank FROM PatientLanguage GROUP BY Language;"}
{"input": " \uae30\uc220 \uc5c5\uacc4\uc758 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, cases_handled INT); INSERT INTO attorneys (attorney_id, cases_handled) VALUES (1, 20), (2, 15), (3, 30), (4, 10); CREATE TABLE clients (client_id INT, attorney_id INT, industry VARCHAR(255)); INSERT INTO clients (client_id, attorney_id, industry) VALUES (1, 1, 'healthcare'), (2, 1, 'technology'), (3, 2, 'finance'), (4, 3, 'technology'), (5, 3, 'healthcare'), (6, 4, 'technology'); CREATE TABLE cases (case_id INT, client_id INT); INSERT INTO cases (case_id, client_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, 3), (6, 4), (7, 4), (8, 4), (9, 4);", "output": "SELECT SUM(attorneys.cases_handled) FROM attorneys INNER JOIN clients ON attorneys.attorney_id = clients.attorney_id INNER JOIN cases ON clients.client_id = cases.client_id WHERE clients.industry = 'technology';"}
{"input": "\uac01 \ud559\uad50\uc758 \ud559\uc0dd\ub4e4\uc774 \uacf5\uac1c \uad50\uc721 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc18c\ube44\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE open_pedagogy_projects (id INT, project_name VARCHAR(50), school_id INT, student_id INT, hours_spent INT);   CREATE TABLE students (id INT, name VARCHAR(50), age INT, school_id INT);   CREATE TABLE schools (id INT, school_name VARCHAR(50), PRIMARY KEY(id));", "output": "SELECT s.school_name, SUM(opp.hours_spent) as total_hours_spent   FROM open_pedagogy_projects opp   JOIN students st ON opp.student_id = st.id   JOIN schools s ON st.school_id = s.id   GROUP BY s.school_name;"}
{"input": " \uac01 \ud68c\uc0ac\uc5d0\uc11c \uadfc\ubb34\ud558\ub294 \uc9c1\uc6d0 \uc218\uc640 \uc9c1\ubb34\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Company (id INT, name VARCHAR(50), industry VARCHAR(50), founding_year INT); INSERT INTO Company (id, name, industry, founding_year) VALUES (1, 'GovTech', 'Government', 2018); INSERT INTO Company (id, name, industry, founding_year) VALUES (2, 'HealthInnovate', 'Healthcare', 2017); CREATE TABLE Employees (id INT, company_id INT, first_name VARCHAR(50), last_name VARCHAR(50), gender VARCHAR(10), role VARCHAR(50), hire_date DATE); INSERT INTO Employees (id, company_id, first_name, last_name, gender, role, hire_date) VALUES (1, 1, 'Ahmed', 'Khan', 'Male', 'Software Engineer', '2019-01-01'); INSERT INTO Employees (id, company_id, first_name, last_name, gender, role, hire_date) VALUES (2, 1, 'Sofia', 'Gonzalez', 'Female', 'Data Scientist', '2019-02-15');", "output": "SELECT company_id, role, COUNT(*) as employee_count FROM Employees GROUP BY company_id, role;"}
{"input": " \uc8fc\ubcc4\ub85c \ucd1d \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program_categories (program_category_id INT, program_category_name VARCHAR(50));CREATE TABLE organizations (org_id INT, org_name VARCHAR(50), org_state VARCHAR(2));CREATE TABLE donations (donation_id INT, org_id INT, donation_amount DECIMAL(10,2)); INSERT INTO program_categories (program_category_id, program_category_name) VALUES (1, 'Education'), (2, 'Environment'), (3, 'Health'); INSERT INTO organizations (org_id, org_name, org_state) VALUES (1, 'Habitat for Humanity', 'NY'), (2, 'Greenpeace', 'CA'), (3, 'American Cancer Society', 'IL'); INSERT INTO donations (donation_id, org_id, donation_amount) VALUES (1, 1, 500.00), (2, 1, 750.00), (3, 2, 300.00), (4, 3, 400.00), (5, 3, 600.00), (6, 1, 800.00), (7, 2, 500.00), (8, 2, 300.00), (9, 3, 200.00), (10, 3, 100.00);", "output": "SELECT pc.program_category_name, o.org_state, SUM(d.donation_amount) as total_donation_amount FROM program_categories pc JOIN organizations o ON pc.program_category_id = o.org_id JOIN donations d ON o.org_id = d.org_id GROUP BY pc.program_category_name, o.org_state ORDER BY total_donation_amount DESC;"}
{"input": " \ub274\uc695 \ub610\ub294 \uc77c\ub9ac\ub178\uc774\uc5d0\uc11c \ud574\uacb0\ub41c \uc0ac\ub840\uc758 \uc0ac\ub840 ID \ubc0f \uacb0\uacfc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cases (case_id INT, case_outcome VARCHAR(10), case_state VARCHAR(10)); INSERT INTO cases (case_id, case_outcome, case_state) VALUES (1, 'Won', 'New York'), (2, 'Lost', 'Illinois'), (3, 'Pending', 'Texas');", "output": "SELECT case_id, case_outcome FROM cases WHERE case_state = 'New York' UNION SELECT case_id, case_outcome FROM cases WHERE case_state = 'Illinois';"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \ud310\ub9e4\ub41c \uc720\uae30\ub18d \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SkincareSales (product_id INT, product_name TEXT, sale_price DECIMAL(5,2), is_organic BOOLEAN, sale_date DATE); INSERT INTO SkincareSales (product_id, product_name, sale_price, is_organic, sale_date) VALUES (1, 'Aloe Vera Moisturizer', 15.99, true, '2022-01-03');", "output": "SELECT SUM(sale_price) FROM SkincareSales WHERE is_organic = true AND sale_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": " \uc544\ud504\ub9ac\uce74 \ub300\ub959\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc601\ud654\ub97c \uc81c\uc791\ud55c \uac10\ub3c5\uc740 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE directors (id INT, name VARCHAR(255), gender VARCHAR(8)); CREATE TABLE movies_directors (movie_id INT, director_id INT, PRIMARY KEY (movie_id, director_id), FOREIGN KEY (movie_id) REFERENCES movies(id), FOREIGN KEY (director_id) REFERENCES directors(id)); CREATE TABLE movies (id INT, title VARCHAR(255), production_country VARCHAR(64), PRIMARY KEY (id)); INSERT INTO directors (id, name, gender) VALUES (1, 'Director1', 'Male'), (2, 'Director2', 'Female'), (3, 'Director3', 'Male'); INSERT INTO movies_directors (movie_id, director_id) VALUES (1, 1), (1, 2), (2, 1), (3, 3); INSERT INTO movies (id, title, production_country) VALUES (1, 'Movie1', 'Nigeria'), (2, 'Movie2', 'Egypt'), (3, 'Movie3', 'South Africa');", "output": "SELECT d.name, COUNT(md.movie_id) AS num_movies FROM directors d INNER JOIN movies_directors md ON d.id = md.director_id INNER JOIN movies m ON md.movie_id = m.id WHERE m.production_country IN ('Nigeria', 'Egypt', 'South Africa', 'Kenya', 'Tunisia') GROUP BY d.name ORDER BY num_movies DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 15\ub144\uac04 \uc778\ub3c4\uc591\uc758 \ub3cc\uace0\ub798 \uac1c\uccb4\uc218 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dolphin_population (year INT, ocean VARCHAR(255), population INT); INSERT INTO dolphin_population (year, ocean, population) VALUES (2006, 'Indian Ocean', 950000), (2007, 'Indian Ocean', 930000), (2008, 'Indian Ocean', 920000), (2009, 'Indian Ocean', 910000), (2010, 'Indian Ocean', 900000), (2011, 'Indian Ocean', 890000), (2012, 'Indian Ocean', 880000), (2013, 'Indian Ocean', 870000), (2014, 'Indian Ocean', 860000), (2015, 'Indian Ocean', 850000), (2016, 'Indian Ocean', 840000), (2017, 'Indian Ocean', 830000), (2018, 'Indian Ocean', 820000), (2019, 'Indian Ocean', 810000), (2020, 'Indian Ocean', 800000);", "output": "SELECT year, population, LAG(population) OVER (ORDER BY year) as prev_population, population - LAG(population) OVER (ORDER BY year) as population_change FROM dolphin_population WHERE ocean = 'Indian Ocean';"}
{"input": " \uc790\uae08 \uc870\ub2ec \uae30\ub85d\uc774 \uc5c6\ub294 \uc2a4\ud0c0\ud2b8\uc5c5\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE funding_records (funding_id INT, company_id INT, funding_amount DECIMAL(10, 2)); INSERT INTO funding_records (funding_id, company_id, funding_amount) VALUES (1, 1, 5000000.00), (2, 2, 7000000.00), (3, 3, 1000000.00);", "output": "SELECT company_id FROM company_founding WHERE company_id NOT IN (SELECT company_id FROM funding_records);"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc815\uc2e0 \uac74\uac15\uc744 \ubaa9\ud45c\ub85c \ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50), ProgramArea varchar(50), VolunteerDate date); INSERT INTO Volunteers (VolunteerID, VolunteerName, ProgramArea, VolunteerDate) VALUES (1, 'Alice', 'Mental Health', '2021-08-15'); INSERT INTO Volunteers (VolunteerID, VolunteerName, ProgramArea, VolunteerDate) VALUES (2, 'Bob', 'Education', '2021-07-01');", "output": "SELECT COUNT(*) FROM Volunteers WHERE ProgramArea = 'Mental Health' AND VolunteerDate >= DATEADD(month, -6, GETDATE());"}
{"input": " 2022\ub144 4\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ubaa8\ub4e0 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \uc790\uc6d0\ubd09\uc0ac\ud55c \ucd1d \uc2dc\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Volunteer_Hours (id INT, volunteer_id INT, hours_volunteered DECIMAL(5,2), volunteer_date DATE); INSERT INTO Volunteer_Hours (id, volunteer_id, hours_volunteered, volunteer_date) VALUES (1, 1, 4.00, '2022-04-01'), (2, 2, 5.00, '2022-04-05'), (3, 1, 3.00, '2022-04-10');", "output": "SELECT SUM(hours_volunteered) as total_hours FROM Volunteer_Hours WHERE volunteer_date BETWEEN '2022-04-01' AND '2022-04-30';"}
{"input": " SpaceX\uc640 Rocket Lab\uc774 \ubc30\uce58\ud55c \uc704\uc131\uc758 \ucd1d \uac1c\uc218\ub294 \uc784\ubb34 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE spacex_satellites(satellite_id INT, mission_type VARCHAR(255));CREATE TABLE rocket_lab_satellites(satellite_id INT, mission_type VARCHAR(255));", "output": "SELECT 'SpaceX' AS Company, mission_type, COUNT(satellite_id) as Total FROM spacex_satellites GROUP BY mission_type UNION ALL SELECT 'Rocket Lab' AS Company, mission_type, COUNT(satellite_id) as Total FROM rocket_lab_satellites GROUP BY mission_type;"}
{"input": " \uc9c0\ub09c \ub2ec \ud50c\ub85c\ub9ac\ub2e4 \uc8fc \ub9c8\uc774\uc560\ubbf8\uc5d0\uc11c \uae34\uae09 \uc804\ud654 \ubc0f \ud654\uc7ac \uc0ac\uace0\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, date DATE, response_time INT, city VARCHAR(20), state VARCHAR(20)); INSERT INTO emergency_calls (id, date, response_time, city, state) VALUES (1, '2022-01-01', 10, 'Miami', 'FL'), (2, '2022-01-02', 20, 'Miami', 'FL'); CREATE TABLE fire_incidents (id INT, date DATE, response_time INT, city VARCHAR(20), state VARCHAR(20)); INSERT INTO fire_incidents (id, date, response_time, city, state) VALUES (1, '2022-01-01', 15, 'Miami', 'FL'), (2, '2022-01-02', 25, 'Miami', 'FL');", "output": "SELECT 'emergency calls' AS type, MAX(response_time) FROM emergency_calls WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND city = 'Miami' AND state = 'FL' UNION ALL SELECT 'fire incidents' AS type, MAX(response_time) FROM fire_incidents WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND city = 'Miami' AND state = 'FL';"}
{"input": " '\uc81c\ud488\ud601\uc2e0' \ubd80\uc11c\uc5d0\uc11c \uc77c\ud558\ub294 \uc9c1\uc6d0\uacfc \uc774 \ubd80\uc11c\uc640 \uad00\ub828\ub41c \ud654\ud559\ubb3c\uc9c8 \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uae30\uacc4\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE ProductInnovation (ProductID INT, ProductName VARCHAR(20), Department VARCHAR(20)); INSERT INTO ProductInnovation (ProductID, ProductName, Department) VALUES (7, 'New Product', 'Product Innovation'); CREATE TABLE Chemicals (ChemicalID INT, ChemicalName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Chemicals (ChemicalID, ChemicalName, Department) VALUES (4, 'New Chemical', 'Product Innovation'); CREATE TABLE Machinery (MachineID INT, MachineName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Machinery (MachineID, MachineName, Department) VALUES (7, 'Innovator 7', 'Product Innovation');", "output": "SELECT Employees.FirstName, Employees.LastName, Machinery.MachineName FROM Employees CROSS JOIN (Chemicals INNER JOIN Machinery ON Chemicals.Department = Machinery.Department) WHERE Employees.Department = 'Product Innovation';"}
{"input": " APAC \uc9c0\uc5ed \uad6d\uac00\ubcc4 1\ubd84\uae30\uc640 3\ubd84\uae30 \uac04\uc758 \uae30\uc220 \uc811\uadfc\uc131 \uc810\uc218 \ucc28\uc774\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE accessibility (country VARCHAR(50), region VARCHAR(50), quarter INT, score INT); INSERT INTO accessibility (country, region, quarter, score) VALUES ('Singapore', 'APAC', 1, 80), ('Singapore', 'APAC', 2, 85), ('Singapore', 'APAC', 3, 75), ('Indonesia', 'APAC', 1, 70), ('Indonesia', 'APAC', 2, 75), ('Indonesia', 'APAC', 3, 80);", "output": "SELECT country, LAG(score, 2) OVER (PARTITION BY country ORDER BY quarter) - score as diff FROM accessibility WHERE region = 'APAC';"}
{"input": " \ub7ec\uc2dc\uc544\uc640 \uce90\ub098\ub2e4\uc758 \uad11\uc0b0 \uc6b4\uc601\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ud658\uacbd \uc601\ud5a5 \ud1b5\uacc4\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE canadian_provinces (id INT, name VARCHAR(50)); CREATE TABLE russian_regions (id INT, name VARCHAR(50)); CREATE TABLE mining_operations (id INT, country_id INT, region VARCHAR(20), annual_co2_emissions INT); INSERT INTO canadian_provinces (id, name) VALUES (1, 'Alberta'), (2, 'British Columbia'); INSERT INTO russian_regions (id, name) VALUES (1, 'Siberia'), (2, 'Urals'); INSERT INTO mining_operations (id, country_id, region, annual_co2_emissions) VALUES (1, 1, 'Canada', 5000), (2, 1, 'Canada', 6000), (3, 2, 'Russia', 7000), (4, 2, 'Russia', 8000);", "output": "SELECT m.annual_co2_emissions, m.region FROM mining_operations m INNER JOIN (SELECT * FROM canadian_provinces WHERE name = 'Alberta' UNION ALL SELECT * FROM russian_regions WHERE name = 'Siberia') c ON m.country_id = c.id;"}
{"input": " 3\uac1c\uc6d4 \uc774\uc0c1 \uc9c0\uc18d\ub418\uace0 2021\ub144 \uc774\uc804\uc5d0 \uc2dc\uc791\ub41c \uc6cc\uc2f1\ud134\uc758 \uac01 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uc790\uc7ac\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Projects_WA (project_id INT, start_date DATE, end_date DATE, material_cost FLOAT, project_state VARCHAR(20)); INSERT INTO Projects_WA (project_id, start_date, end_date, material_cost, project_state) VALUES (1, '2020-01-01', '2020-03-31', 7000, 'Washington'), (2, '2020-01-01', '2020-04-15', 9000, 'Washington'), (3, '2022-01-01', '2022-03-31', 8000, 'Washington');", "output": "SELECT project_id, SUM(material_cost) OVER (PARTITION BY project_id) AS total_cost FROM Projects_WA WHERE project_state = 'Washington' AND start_date < end_date AND start_date < '2021-01-01' AND end_date >= '2021-01-01';"}
{"input": " \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c, \ud56d\uad6c\ub2f9 \uac01 \ud654\ubb3c \ud488\ubaa9\uc774 \ub098\ud0c0\ub0b4\ub294 \ucd1d \ud654\ubb3c \uc911\ub7c9\uc758 \ubc31\ubd84\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Port (PortID INT, PortName VARCHAR(100), City VARCHAR(100), Country VARCHAR(100)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands'); CREATE TABLE Cargo (CargoID INT, CargoName VARCHAR(100), PortID INT, Weight INT, Volume INT); INSERT INTO Cargo (CargoID, CargoName, PortID, Weight, Volume) VALUES (1, 'Container 1', 1, 15000, 5000); INSERT INTO Cargo (CargoID, CargoName, PortID, Weight, Volume) VALUES (2, 'Container 2', 2, 18000, 5500); CREATE TABLE PortCargo (PortID INT, CargoID INT, Weight INT, Volume INT); INSERT INTO PortCargo (PortID, CargoID, Weight, Volume) VALUES (1, 1, 15000, 5000); INSERT INTO PortCargo (PortID, CargoID, Weight, Volume) VALUES (2, 2, 18000, 5500);", "output": "SELECT PortID, CargoID, Weight, Volume, PERCENT_RANK() OVER(PARTITION BY PortID ORDER BY SUM(Weight) OVER(PARTITION BY PortID) DESC) AS WeightPercentage FROM PortCargo ORDER BY PortID, WeightPercentage DESC"}
{"input": "\uc77c\ubcf8\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \ud654\ud559\uc81c\ud488\uacfc \uadf8 \uc81c\uc870\ud604\uc7a5\uc758 \uc548\uc804\uc810\uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE japanese_products (product_id INT, product_name TEXT, country TEXT, total_sales FLOAT, site_safety_score FLOAT); INSERT INTO japanese_products (product_id, product_name, country, total_sales, site_safety_score) VALUES (1, 'Product M', 'Japan', 65000, 91.2), (2, 'Product N', 'Japan', 70000, 88.5), (3, 'Product O', 'Japan', 55000, 94.1), (4, 'Product P', 'Japan', 60000, 89.7);", "output": "SELECT product_name, total_sales, site_safety_score FROM japanese_products WHERE country = 'Japan' AND total_sales = (SELECT MAX(total_sales) FROM japanese_products WHERE country = 'Japan');"}
{"input": " '\ub3c4\uc2dc' \ubc0f '\uad70' \uc2a4\ud0a4\ub9c8 \ubaa8\ub450\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ubaa8\ub4e0 \uc99d\uac70 \uae30\ubc18 \uc815\ucc45 \uc218\ub9bd \ub370\uc774\ud130 \uc138\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA city; CREATE SCHEMA county; CREATE TABLE city.policy_data (id INT, name VARCHAR(255), is_evidence_based BOOLEAN); CREATE TABLE county.policy_data (id INT, name VARCHAR(255), is_evidence_based BOOLEAN); INSERT INTO city.policy_data (id, name, is_evidence_based) VALUES (1, 'transportation', true), (2, 'housing', false); INSERT INTO county.policy_data (id, name, is_evidence_based) VALUES (1, 'transportation', true), (2, 'health', true);", "output": "SELECT * FROM ( (SELECT * FROM city.policy_data WHERE is_evidence_based = true) EXCEPT (SELECT * FROM county.policy_data WHERE is_evidence_based = true) ) AS excepted_data;"}
{"input": " \ubbf8\uad6d \uc0ac\uc6a9\uc790\ub85c\ubd80\ud130 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud799\ud569 \ub178\ub798\uac00 \uc2a4\ud2b8\ub9ac\ubc0d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Users (UserID INT, Age INT, Country VARCHAR(50)); INSERT INTO Users VALUES (1, 25, 'USA'); INSERT INTO Users VALUES (2, 30, 'Canada'); CREATE TABLE Songs (SongID INT, Title VARCHAR(50), Genre VARCHAR(50), Streams INT); INSERT INTO Songs VALUES (1, 'Boom', 'Hip-Hop', 10000); INSERT INTO Songs VALUES (2, 'Pop Song', 'Pop', 20000); CREATE TABLE Streams (StreamID INT, UserID INT, SongID INT); INSERT INTO Streams VALUES (1, 1, 1); INSERT INTO Streams VALUES (2, 2, 2);", "output": "SELECT COUNT(S.Streams) FROM Songs S INNER JOIN Streams ST ON S.SongID = ST.SongID INNER JOIN Users U ON ST.UserID = U.UserID WHERE S.Genre = 'Hip-Hop' AND U.Country = 'USA';"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \uae68\ub057\ud55c \ubb3c\uc744 \uc774\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0ac\ub78c\ub4e4\uc758 \ube44\uc728\uc744 \uac00\uc7a5 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \ucc3e\uc544\ubcf4\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE clean_water_data (id INT, province TEXT, no_access INT, population INT); INSERT INTO clean_water_data (id, province, no_access, population) VALUES (1, 'Province A', 200, 10000), (2, 'Province B', 300, 20000);", "output": "SELECT province, (SUM(no_access) OVER (PARTITION BY province)) * 100.0 / SUM(population) OVER (PARTITION BY province) as pct_no_access FROM clean_water_data ORDER BY pct_no_access DESC;"}
{"input": " \ubaa8\ub4e0 \ud234\ub968 \uacf5\uae09\uc5c5\uccb4\uc640 \ud3c9\uade0 \uc0dd\uc0b0 \ub2a5\ub825\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE thulium_suppliers (supplier VARCHAR(50), capacity INT);", "output": "SELECT supplier, AVG(capacity) FROM thulium_suppliers GROUP BY supplier;"}
{"input": " \ucd1d \ud3d0\uae30\ubb3c\uc774 \uac00\uc7a5 \ub192\uc740 \uc21c\uc11c\ub300\ub85c \uac01 \uae30\uacc4\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ucd1d \ud3d0\uae30\ubb3c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE machine (id INT, machine_name VARCHAR(50), waste_generated INT); INSERT INTO machine (id, machine_name, waste_generated) VALUES (1, 'Machine 1', 500), (2, 'Machine 2', 700), (3, 'Machine 3', 800), (4, 'Machine 4', 900);", "output": "SELECT machine_name, SUM(waste_generated) as total_waste FROM machine GROUP BY machine_name ORDER BY total_waste DESC;"}
{"input": "\ud734\uba3c\uc11c\ube44\uc2a4 \uae30\uad00\uc758 \uac01 \ubd80\uc11c\ubcc4 \ucd5c\uc18c \uc778\uc6d0\uc740 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE SCHEMA Government;CREATE TABLE Government.Agency (name VARCHAR(255), budget INT);CREATE TABLE Government.Department (name VARCHAR(255), agency VARCHAR(255), employees INT, budget INT);", "output": "SELECT agency, MIN(employees) FROM Government.Department WHERE agency IN (SELECT name FROM Government.Agency WHERE budget > 5000000) GROUP BY agency;"}
{"input": "\uc2e0\uacbd\uce58\ub8cc \ubd84\uc57c\uc5d0\uc11c \ub2e8\uc704\ub2f9 \uc81c\uc870\uc6d0\uac00\uac00 200\ub2ec\ub7ec\ub97c \ucd08\uacfc\ud558\ub294 \uc758\uc57d\ud488\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drug_approval (drug_name TEXT, approval_status TEXT); INSERT INTO drug_approval (drug_name, approval_status) VALUES ('DrugA', 'approved'), ('DrugB', 'approved'), ('DrugC', 'pending'), ('DrugD', 'approved'); CREATE TABLE manufacturing_costs (drug_name TEXT, cost_per_unit INTEGER); INSERT INTO manufacturing_costs (drug_name, cost_per_unit) VALUES ('DrugA', 185), ('DrugB', 210), ('DrugC', 150), ('DrugD', 256); CREATE TABLE drug_sales (drug_name TEXT, sales INTEGER, therapeutic_area TEXT); INSERT INTO drug_sales (drug_name, sales, therapeutic_area) VALUES ('DrugA', 30000000, 'neurology'), ('DrugB', 45000000, 'neurology'), ('DrugC', 0, 'neurology'), ('DrugD', 55000000, 'neurology');", "output": "SELECT SUM(sales) FROM drug_sales INNER JOIN drug_approval ON drug_sales.drug_name = drug_approval.drug_name INNER JOIN manufacturing_costs ON drug_sales.drug_name = manufacturing_costs.drug_name WHERE drug_approval.approval_status = 'approved' AND manufacturing_costs.cost_per_unit > 200 AND drug_sales.therapeutic_area = 'neurology';"}
{"input": " \uc774\ubbf8 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 '2022-04-15'\uc5d0 'Tasty Delights'\uc5d0 \ub300\ud574 'Excellent' \ub4f1\uae09\uc758 \uc0c8\ub85c\uc6b4 \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac \uae30\ub85d\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE food_safety_inspections (restaurant_id INT, inspection_date DATE, result VARCHAR(10));", "output": "INSERT INTO food_safety_inspections (restaurant_id, inspection_date, result) SELECT 6, '2022-04-15', 'Excellent' FROM (SELECT 1 FROM food_safety_inspections WHERE restaurant_id = 6 AND inspection_date = '2022-04-15') AS dummy WHERE NOT EXISTS (SELECT 1 FROM food_safety_inspections WHERE restaurant_id = 6 AND inspection_date = '2022-04-15');"}
{"input": " 2017\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc720\ub7fd\uc758 \uae30\ud6c4 \ubcc0\ud654 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ud3c9\uade0 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE communication_budget (country VARCHAR(50), year INT, budget FLOAT); INSERT INTO communication_budget (country, year, budget) VALUES ('Germany', 2017, 1000000), ('France', 2018, 1200000), ('Spain', 2019, 1500000), ('Italy', 2020, 1100000);", "output": "SELECT AVG(budget) FROM communication_budget WHERE country IN (SELECT name FROM countries WHERE region = 'Europe') AND year BETWEEN 2017 AND 2020;"}
{"input": " \ud328\uc158 \uc5c5\uacc4 \uc0ac\uc6a9\uc790\uc758 \uc77c\uc77c \ud3c9\uade0 \uc2e0\uaddc \ud314\ub85c\uc6cc \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE user_stats (user_id INT, stat_type VARCHAR(50), stat_date DATE, value INT);  INSERT INTO user_stats (user_id, stat_type, stat_date, value) VALUES (1, 'new_followers', '2022-01-01', 50), (2, 'new_followers', '2022-01-01', 75), (1, 'new_followers', '2022-01-02', 75), (5, 'new_followers', '2022-01-03', 100);", "output": "SELECT AVG(value) FROM user_stats WHERE stat_type = 'new_followers' AND stat_date >= DATEADD(day, -30, GETDATE()) AND stat_date < DATEADD(day, -29, GETDATE()) AND user_stats.user_id IN (SELECT user_id FROM users WHERE industry = 'fashion');"}
{"input": " \ud559\ub144\ubcc4 \ud3c9\uade0 \uc815\uc2e0\uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health (student_id INT, grade INT, score INT); INSERT INTO student_mental_health (student_id, grade, score) VALUES (1, 5, 80), (2, 5, 85), (3, 6, 70), (4, 6, 75), (5, 7, 80), (6, 7, 85);", "output": "SELECT grade, AVG(score) OVER (PARTITION BY grade) AS avg_score FROM student_mental_health;"}
{"input": " '\uc218\uc601\uc7a5' \uc2dc\uc124\uc744 \uc81c\uacf5\ud558\ub294 '\ub0a8\ubbf8'\uc758 '\ud638\ud154'\uc774 \ucc3d\ucd9c\ud558\ub294 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels(id INT, name TEXT, country TEXT, rating FLOAT, pool BOOLEAN, revenue FLOAT);", "output": "SELECT SUM(revenue) FROM hotels WHERE country = 'South America' AND pool = TRUE;"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \ud658\uc790 \uc218\uc6a9 \ub2a5\ub825\uc774 \uac00\uc7a5 \ub0ae\uc740 \ubcd1\uc6d0\uc758 \uc774\ub984\uc744 \uc8fc\ubcc4\ub85c \ub098\uc5f4\ud558\uba74 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, state VARCHAR(255), name VARCHAR(255), patient_capacity INT); INSERT INTO hospitals (id, state, name, patient_capacity) VALUES (1, 'NY', 'Hospital A', 100), (2, 'CA', 'Hospital B', 150), (3, 'TX', 'Hospital C', 120);", "output": "SELECT state, name FROM (SELECT state, name, patient_capacity, ROW_NUMBER() OVER (PARTITION BY state ORDER BY patient_capacity ASC) as rank FROM hospitals) subquery WHERE rank = 1 ORDER BY state;"}
{"input": " \ubaa8\ub4e0 \ub808\uc2a4\ud1a0\ub791\uc758 \ucc44\uc2dd \uc2dd\uc0ac \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE meals (id INT, name TEXT, vegetarian BOOLEAN, price INT); INSERT INTO meals (id, name, vegetarian, price) VALUES (1, 'Filet Mignon', false, 35), (2, 'Chicken Caesar', false, 15), (3, 'Tofu Stir Fry', true, 25);", "output": "SELECT AVG(meals.price) FROM meals WHERE meals.vegetarian = true;"}
{"input": " \uc13c\uc11c \uc720\ud615\ubcc4, \ub0a0\uc9dc\ubcc4\ub85c \uac00\uc7a5 \ube60\ub978 \ubc14\uc774\uc624\uc13c\uc11c \ud310\ub3c5\uac12\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biosensors;CREATE TABLE if not exists biosensors.readings (id INT PRIMARY KEY, sensor_id INT, sensor_type VARCHAR(50), reading DECIMAL(10, 2), read_date DATE); INSERT INTO biosensors.readings (id, sensor_id, sensor_type, reading, read_date) VALUES (1, 1, 'Temp', 25.5, '2022-02-01'), (2, 2, 'Humidity', 45.3, '2022-02-01'), (3, 1, 'Temp', 26.2, '2022-02-02'), (4, 3, 'Pressure', 1200.5, '2022-02-02');", "output": "SELECT sensor_type, MIN(read_date) AS min_read_date FROM biosensors.readings WINDOW W AS (PARTITION BY sensor_type ORDER BY read_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) GROUP BY sensor_type, W.read_date ORDER BY min_read_date;"}
{"input": " \ucd95\uad6c \uacbd\uae30\ub97c \uad00\ub78c\ud55c \uc5ec\uc131 \ud32c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fans (id INT, game_id INT, gender VARCHAR(10)); INSERT INTO fans (id, game_id, gender) VALUES (1, 1, 'Female'); INSERT INTO fans (id, game_id, gender) VALUES (2, 2, 'Male');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM fans WHERE game_id IN (SELECT id FROM games WHERE sport = 'Football'))) AS pct_female_fans FROM fans WHERE gender = 'Female' AND game_id IN (SELECT id FROM games WHERE sport = 'Football');"}
{"input": " '\uae08\uc18d \uc138\uacf5\ud488' \uc720\ubb3c\uc774 5\uac1c \uc774\uc0c1 \uc788\ub294 \ubc1c\uad74 \ud604\uc7a5\uacfc \ud574\ub2f9 \uce74\ud14c\uace0\ub9ac \ube44\uc728\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE excavation_sites_metalwork (site_id INT, artifact_count INT); INSERT INTO excavation_sites_metalwork (site_id, artifact_count) VALUES (1, 10), (2, 8), (3, 12); CREATE TABLE artifacts_categories_count (site_id INT, category VARCHAR(255), artifact_count INT); INSERT INTO artifacts_categories_count (site_id, category, artifact_count) VALUES (1, 'Ceramics', 20), (1, 'Metalwork', 10), (2, 'Ceramics', 15), (2, 'Metalwork', 8), (3, 'Ceramics', 12), (3, 'Metalwork', 12);", "output": "SELECT a.site_id, a.artifact_count, 100.0 * a.artifact_count / SUM(b.artifact_count) OVER (PARTITION BY a.site_id) AS category_percentage FROM excavation_sites_metalwork a JOIN artifacts_categories_count b ON a.site_id = b.site_id WHERE b.category = 'Metalwork' AND a.artifact_count > 5;"}
{"input": " \uc5ec\ud589\uc790 \uc911 \uac00\uc7a5 \uc5b4\ub9b0 20%\uac00 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \ud65c\ub3d9\uc5d0 \uc9c0\ucd9c\ud558\ub294 \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE age_groups (age_group_id INT, lower_age INT, upper_age INT);CREATE TABLE travelers (traveler_id INT, country_code CHAR(3), age INT);CREATE TABLE bookings (booking_id INT, traveler_id INT, total_cost INT);CREATE TABLE sustainable_activities (activity_id INT, activity_name VARCHAR(100), is_sustainable BOOLEAN);CREATE TABLE participation (participation_id INT, traveler_id INT, activity_id INT);INSERT INTO age_groups (age_group_id, lower_age, upper_age) VALUES (1, 18, 30), (2, 31, 45), (3, 46, 60), (4, 61, 100);", "output": "SELECT SUM(b.total_cost) FROM (SELECT DISTINCT traveler_id FROM travelers t JOIN age_groups ag ON t.age BETWEEN ag.lower_age AND ag.upper_age ORDER BY t.age LIMIT 20) subquery JOIN bookings b ON subquery.traveler_id = b.traveler_id JOIN participation p ON b.traveler_id = p.traveler_id JOIN sustainable_activities sa ON p.activity_id = sa.activity_id WHERE sa.is_sustainable = TRUE;"}
{"input": "\uc131\ubcc4\ub85c \ubd84\ub958\ub41c \ubbf8\uad6d \ud68c\uc6d0\uc758 \ucd5c\ub300 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE members (member_id INT, country VARCHAR(20), age INT, gender VARCHAR(10), heart_rate INT); INSERT INTO members (member_id, country, age, gender, heart_rate) VALUES (1, 'USA', 30, 'Female', 180), (2, 'Canada', 35, 'Male', 190), (3, 'USA', 28, 'Female', 170);", "output": "SELECT MAX(heart_rate) as max_heart_rate, gender FROM members WHERE country = 'USA' GROUP BY gender;"}
{"input": "\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uc0b0\uc5c5\uc5d0\uc11c \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc9c0 \ubabb\ud55c \uae30\uc5c5\uc5d0 \ub300\ud55c \uc790\uae08\uc9c0\uc6d0 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE funding_records (company_id INT, funding FLOAT, date DATE); CREATE TABLE companies (id INT, name TEXT, industry TEXT, founders_gender TEXT, funding FLOAT);", "output": "DELETE FROM funding_records WHERE company_id NOT IN (SELECT id FROM companies WHERE funding > 0) AND industry = 'renewable energy';"}
{"input": "\uc548\uc804 \uc704\ubc18 \uc0ac\ud56d\uc774 \uc788\ub294 \uc81c\ud488\uc744 \uc81c\uc678\ud558\uace0 2022\ub144 1\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub192\uc740 \ub9e4\ucd9c\uc744 \uc62c\ub9b0 \uc0c1\uc704 3\uac1c \ud654\ud559 \uc81c\ud488\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Chemical_Sales (Product_ID INT, Product_Name VARCHAR(50), Sales INT, Safety_Violation BOOLEAN); INSERT INTO Chemical_Sales (Product_ID, Product_Name, Sales, Safety_Violation) VALUES (1, 'ProductA', 1000, FALSE), (2, 'ProductB', 1200, TRUE), (3, 'ProductC', 1500, FALSE), (4, 'ProductD', 800, FALSE);", "output": "SELECT Product_Name, Sales FROM (SELECT Product_Name, Sales, RANK() OVER(ORDER BY Sales DESC) as rnk FROM Chemical_Sales WHERE Safety_Violation = FALSE) tmp WHERE rnk <= 3;"}
{"input": " \uac01 \ubd80\uc11c\ubcc4 \uc5ec\uc131\uc778\ub825 \ube44\uc728\uc740 \uc5bc\ub9c8\uc774\uba70, \uc5ec\uc131\uc778\ub825 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \ubd80\uc11c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Departments (DepartmentID INT, DepartmentName VARCHAR(50), ManagerID INT);CREATE TABLE Employees (EmployeeID INT, DepartmentID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Gender VARCHAR(10));CREATE VIEW DepartmentGender AS SELECT DepartmentID, FirstName, LastName, Gender, COUNT(*) OVER (PARTITION BY DepartmentID) AS DepartmentSize, COUNT(*) FILTER (WHERE Gender = 'Female') OVER (PARTITION BY DepartmentID) AS FemaleCount FROM Employees;CREATE VIEW DepartmentFemalePercentage AS SELECT DepartmentID, ROUND((FemaleCount::DECIMAL / DepartmentSize::DECIMAL) * 100, 2) AS FemalePercentage FROM DepartmentGender;", "output": "SELECT DepartmentName, FemalePercentage FROM DepartmentFemalePercentage WHERE FemalePercentage = (SELECT MAX(FemalePercentage) FROM DepartmentFemalePercentage);"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uad6d\uc81c \ub85c\ubc0d\uc744 \uc0ac\uc6a9\ud55c \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE roaming (subscriber_id INT, used_roaming BOOLEAN);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM mobile_subscribers) as percentage FROM roaming WHERE used_roaming = TRUE;"}
{"input": " \ucd5c\uadfc 3\uac1c\uc6d4 \uc774\ub0b4\uc5d0 \uc2dc\uc791\ub41c \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dc\uc791\uc77c\ubd80\ud130 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE renewable_energy_projects (project_id INT, project_name VARCHAR(100), start_date DATE); INSERT INTO renewable_energy_projects (project_id, project_name, start_date) VALUES (1, 'Solar Farm', '2022-01-01'), (2, 'Wind Farm', '2022-02-15'), (3, 'Geothermal Plant', '2021-11-30');", "output": "SELECT project_name, start_date FROM (SELECT project_name, start_date, ROW_NUMBER() OVER (ORDER BY start_date DESC) rn FROM renewable_energy_projects WHERE start_date >= CURRENT_DATE - INTERVAL '3 months') WHERE rn <= 10"}
{"input": " \ubbf8\uad6d\uacfc \ud504\ub791\uc2a4 \ube0c\ub79c\ub4dc \uac04 \ud328\uc158 \ud2b8\ub80c\ub4dc\uc758 \uad50\ucc28\uc810\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Fashion_Trends (trend_id INT, trend_name TEXT); CREATE TABLE Brand_Trends (brand_id INT, trend_id INT, country TEXT);", "output": "SELECT ft.trend_name FROM Fashion_Trends ft JOIN Brand_Trends bt1 ON ft.trend_id = bt1.trend_id JOIN Brand_Trends bt2 ON ft.trend_id = bt2.trend_id WHERE bt1.country = 'USA' AND bt2.country = 'France';"}
{"input": " '\ud604\ub300\ubbf8\uc220\uc804' \uc804\uc2dc\ub97c \uad00\ub78c\ud558\ub294 \uad00\ub78c\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE visitors(visitor_id INT, name VARCHAR(50), age INT, exhibition_id INT); INSERT INTO visitors (visitor_id, name, age, exhibition_id) VALUES (1, 'John Doe', 25, 2), (2, 'Jane Smith', 30, 1), (3, 'Alice Johnson', 35, 2);", "output": "SELECT AVG(age) FROM visitors WHERE exhibition_id = (SELECT exhibition_id FROM exhibitions WHERE title = 'Contemporary Art Show');"}
{"input": " \uac01 \uae30\uc220 \uc601\uc5ed\uc5d0\uc11c \uc811\uadfc\uc131 \uc694\uad6c\uac00 \uc788\ub294 \ud3c9\uade0 \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, accessibility_needs BOOLEAN, domain VARCHAR(255)); INSERT INTO users (id, accessibility_needs, domain) VALUES (1, true, 'AI ethics'), (2, false, 'climate change'), (3, true, 'technology accessibility'), (4, false, 'digital divide'), (5, true, 'AI ethics'), (6, false, 'technology for social good'), (7, true, 'digital divide');", "output": "SELECT AVG(accessibility_needs) FROM (SELECT COUNT(*) AS accessibility_needs, domain FROM users GROUP BY domain) AS subquery;"}
{"input": "\uac01 \uc9c0\uc5ed\uc0ac\ud68c\uc758 \ud3c9\uade0 \uac15\uc6b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community (community_id INT, community_name VARCHAR(255)); INSERT INTO community (community_id, community_name) VALUES (1, 'CommunityA'), (2, 'CommunityB'); CREATE TABLE rainfall (year INT, community_id INT, rainfall FLOAT); INSERT INTO rainfall (year, community_id, rainfall) VALUES (2000, 1, 50), (2000, 2, 70), (2001, 1, 60), (2001, 2, 80), (2002, 1, 55), (2002, 2, 75);", "output": "SELECT community_id, AVG(rainfall) as avg_rainfall FROM rainfall GROUP BY community_id"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\uc640 \ud574\ub2f9 \ubd80\uc11c\uc5d0\uc11c \ud3c9\uade0 \uc774\uc0c1\uc758 \uae09\uc5ec\ub97c \ubc1b\ub294 \uc9c1\uc6d0 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(20), LastName VARCHAR(20), Department VARCHAR(20), Salary FLOAT); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000), (2, 'Jane', 'Doe', 'Engineering', 70000), (3, 'Mike', 'Smith', 'Engineering', 55000), (4, 'Lucy', 'Brown', 'Manufacturing', 48000);", "output": "SELECT Department, AVG(Salary) as 'Average Salary', COUNT(*) as 'Number of Employees Above Average' FROM Employees WHERE Department = 'Engineering' AND Salary > (SELECT AVG(Salary) FROM Employees WHERE Department = 'Engineering') GROUP BY Department;"}
{"input": " 2020\ub144\uc5d0 \uc5ec\ud589 \uad8c\uace0 \ub4f1\uae09\uc774 \ub192\uc740 \ub0a8\ubbf8 \uc5ec\ud589\uc9c0\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE destinations (destination_id INT, destination_name VARCHAR(50), continent VARCHAR(50)); INSERT INTO destinations (destination_id, destination_name, continent) VALUES (1, 'Rio de Janeiro', 'South America'), (2, 'Buenos Aires', 'South America'), (3, 'Lima', 'South America'); CREATE TABLE travel_advisories (destination_id INT, rating INT); INSERT INTO travel_advisories (destination_id, rating) VALUES (1, 4), (2, 5), (3, 3); CREATE TABLE tourists (tourist_id INT, destination_id INT, year INT); INSERT INTO tourists (tourist_id, destination_id, year) VALUES (1, 1, 2020), (2, 1, 2020), (3, 2, 2020), (4, 3, 2020);", "output": "SELECT SUM(t.tourist_id) AS total_tourists FROM tourists t JOIN destinations d ON t.destination_id = d.destination_id JOIN travel_advisories ta ON t.destination_id = ta.destination_id WHERE d.continent = 'South America' AND t.year = 2020 AND ta.rating >= 4;"}
{"input": " \uc9c0\ub09c\uc8fc \ud544\ub4dc 1\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE field_temperature (field_id INT, date DATE, temperature FLOAT); INSERT INTO field_temperature (field_id, date, temperature) VALUES (1, '2021-07-01', 25.5), (1, '2021-07-02', 24.3), (1, '2021-07-03', 26.1);", "output": "SELECT AVG(temperature) FROM field_temperature WHERE field_id = 1 AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK);"}
{"input": " \uc120\ubd88 \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \uc6d4\uac04 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4", "context": "CREATE TABLE mobile_subscribers (subscriber_id int, data_usage float, city varchar(20), subscription_type varchar(10)); INSERT INTO mobile_subscribers (subscriber_id, data_usage, city, subscription_type) VALUES (1, 3000, 'Seattle', 'postpaid'), (2, 4000, 'New York', 'postpaid'), (3, 2500, 'Seattle', 'prepaid'); CREATE TABLE network_towers (tower_id int, city varchar(20)); INSERT INTO network_towers (tower_id, city) VALUES (1, 'Seattle'), (2, 'New York'), (3, 'Chicago');", "output": "SELECT city, AVG(data_usage) FROM mobile_subscribers WHERE subscription_type = 'prepaid' GROUP BY city ORDER BY AVG(data_usage) DESC LIMIT 5;"}
{"input": " 2019\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc131\uc778 \ube44\ub9cc\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Adults_Health (ID INT, Age INT, Weight FLOAT, Height FLOAT, State VARCHAR(20), Year INT); INSERT INTO Adults_Health (ID, Age, Weight, Height, State, Year) VALUES (1, 35, 95.2, 170, 'California', 2019); INSERT INTO Adults_Health (ID, Age, Weight, Height, State, Year) VALUES (2, 40, 102.5, 175, 'California', 2019);", "output": "SELECT AVG(Weight / POWER(Height / 100, 2)) FROM Adults_Health WHERE State = 'California' AND Year = 2019;"}
{"input": " \ucd5c\uadfc 6\uac1c\uc6d4\uac04 \ud310\ub9e4 \uc2e4\uc801\uc744 \uae30\uc900\uc73c\ub85c \ub9e4\uc7a5\uc744 \ubd84\ub958\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE store (id INT, name VARCHAR(50), location VARCHAR(30), open_date DATE);CREATE TABLE sales (store_id INT, sale_date DATE, quantity INT, price DECIMAL(5,2));CREATE VIEW recent_sales AS SELECT store_id, SUM(quantity * price) as total_sales FROM sales WHERE sale_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY store_id;", "output": "SELECT store.id, store.name, store.location, total_sales, NTILE(4) OVER (ORDER BY total_sales DESC) as sales_quartile FROM store, recent_sales WHERE store.id = recent_sales.store_id;"}
{"input": "\uac01 \ud559\uc0dd\uc758 \ud3c9\uc0dd \ud559\uc2b5 \uc9c4\ud589 \uc0c1\ud669\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, course_id INT, course_completion_date DATE); INSERT INTO students (student_id, course_id, course_completion_date) VALUES (1, 101, '2022-01-01'), (1, 102, '2022-02-01'), (2, 101, '2022-01-15'), (3, 103, '2022-03-01'), (4, 101, '2022-01-05');", "output": "SELECT s.student_id, COUNT(s.course_id) as num_courses_completed, DATEDIFF(MAX(s.course_completion_date), MIN(s.course_completion_date)) as days_since_first_course FROM students s GROUP BY s.student_id;"}
{"input": " \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uac01 \ud56d\uacf5\uae30 \ubaa8\ub378\uc758 \ud3c9\uade0 \ube44\ud589 \uc2dc\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE AircraftFlightHours (AircraftID INT, Model VARCHAR(50), Manufacturer VARCHAR(50), FlightHours INT); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours) VALUES (1, '747', 'Boeing', 55000); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours) VALUES (2, 'A320', 'Airbus', 35000); INSERT INTO AircraftFlightHours (AircraftID, Model, Manufacturer, FlightHours) VALUES (3, 'CRJ', 'Bombardier', 20000);", "output": "SELECT Model, Manufacturer, AVG(FlightHours) OVER (PARTITION BY Manufacturer) AS Avg_Flight_Hours_By_Manufacturer FROM AircraftFlightHours;"}
{"input": "\uc9c0\ub09c 5\ub144\uac04 \ub300\ub450 \uc791\ubb3c\uc758 \ud3c9\uade0 \uae30\uc628\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE crop_temperature (id INT, country VARCHAR(255), crop VARCHAR(255), year INT, temperature DECIMAL(5,2));", "output": "SELECT country, AVG(temperature) as avg_temperature FROM crop_temperature WHERE crop = 'soybean' AND year >= (SELECT EXTRACT(YEAR FROM NOW()) - 5) GROUP BY country ORDER BY avg_temperature DESC LIMIT 5;"}
{"input": " 2021\ub144 5\uc6d4 'The Hindu' \ubc0f 'NDTV'\uc5d0 \uae00\uc744 \uc4f4 \uace0\uc720\ud55c \uc791\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE hindu (author_id INT, author_name VARCHAR(50), article_date DATE); INSERT INTO hindu (author_id, author_name, article_date) VALUES (1, 'Rajesh Patel', '2021-05-01'), (2, 'Priya Gupta', '2021-05-02'); CREATE TABLE ndtv (author_id INT, author_name VARCHAR(50), article_date DATE); INSERT INTO ndtv (author_id, author_name, article_date) VALUES (3, 'Meera Kapoor', '2021-05-01'), (4, 'Rajesh Patel', '2021-05-03');", "output": "SELECT author_name FROM hindu WHERE article_date BETWEEN '2021-05-01' AND '2021-05-31' INTERSECT SELECT author_name FROM ndtv WHERE article_date BETWEEN '2021-05-01' AND '2021-05-31';"}
{"input": "\uc774\ubbf8 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 '2022-06-01'\uc5d0 'Fresh Bites'\uc5d0 \ub300\ud574 '\ub9cc\uc871' \ub4f1\uae09\uc758 \uc0c8\ub85c\uc6b4 \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac \uae30\ub85d\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE food_safety_inspections (restaurant_id INT, inspection_date DATE, result VARCHAR(20));", "output": "INSERT INTO food_safety_inspections (restaurant_id, inspection_date, result) SELECT 7, '2022-06-01', 'Satisfactory' FROM (SELECT 1 FROM food_safety_inspections WHERE restaurant_id = 7 AND inspection_date = '2022-06-01') AS dummy WHERE NOT EXISTS (SELECT 1 FROM food_safety_inspections WHERE restaurant_id = 7 AND inspection_date = '2022-06-01');"}
{"input": " '\uc11c\ud574\uc548' \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ubcf4\ud638\ub9bc\uc758 \ucd1d \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE forests (id INT, name TEXT, area FLOAT, region TEXT); INSERT INTO forests (id, name, area, region) VALUES (1, 'Redwood', 56.4, 'West Coast'), (2, 'Sequoia', 81.2, 'West Coast');", "output": "SELECT SUM(area) FROM forests WHERE region = 'West Coast' AND is_protected = 1;"}
{"input": " \uac01 \uac1c\uccb4\uad70\uc758 \ub3d9\ubb3c \uc218\ub97c \uc885\ubcc4\ub85c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE animal_populations (id INT, species VARCHAR(50), population INT); INSERT INTO animal_populations (id, species, population) VALUES (1, 'Giraffe', 1500), (2, 'Elephant', 2000), (3, 'Lion', 300), (4, 'Rhinoceros', 800), (5, 'Hippopotamus', 1200);", "output": "SELECT species, population FROM animal_populations;"}
{"input": " \ubbf8\uad6d \uc18c\ube44\uc790\ub4e4\uc774 \uac00\uc7a5 \uc120\ud638\ud558\ub294 \ub9bd\uc2a4\ud2f1 \uc0c9\uc0c1 \uc0c1\uc704 5\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Consumer_Preferences (Consumer_ID INT, Product_ID INT, Preference_Score INT); INSERT INTO Consumer_Preferences (Consumer_ID, Product_ID, Preference_Score) VALUES (1, 101, 9), (2, 101, 8), (3, 102, 7), (4, 103, 6), (5, 102, 5), (6, 104, 4), (7, 105, 3), (8, 103, 2), (9, 106, 1), (10, 101, 10);", "output": "SELECT Product_ID, SUM(Preference_Score) as Total_Preference FROM Consumer_Preferences WHERE Consumer_ID IN (SELECT Consumer_ID FROM Consumers WHERE Country = 'USA') GROUP BY Product_ID ORDER BY Total_Preference DESC LIMIT 5;"}
{"input": " IoT \uc13c\uc11c \ub370\uc774\ud130\ub97c \uae30\uc900\uc73c\ub85c \ubcfc \ub54c, \ube0c\ub77c\uc9c8\uc5d0\uc11c pH \uc218\uc900\uc774 7.5 \uc774\uc0c1\uc778 \ub300\ub450\ubc2d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE pH_data (location VARCHAR(255), date DATE, pH FLOAT); INSERT INTO pH_data (location, date, pH) VALUES ('Brazil Soybean Field 1', '2021-06-01', 8.2), ('Brazil Soybean Field 1', '2021-06-02', 8.3), ('Brazil Soybean Field 2', '2021-06-01', 7.4);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM pH_data WHERE location LIKE '%Brazil Soybean Field%') FROM pH_data WHERE pH > 7.5 AND location LIKE '%Brazil Soybean Field%';"}
{"input": "\ub274\uc695'\uc5d0\uc11c \uacf5\uc5f0\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Concerts (ConcertID INT, Artist VARCHAR(50), City VARCHAR(50), Revenue DECIMAL(10,2)); INSERT INTO Concerts (ConcertID, Artist, City, Revenue) VALUES (1, 'Taylor Swift', 'Los Angeles', 500000.00), (2, 'BTS', 'New York', 750000.00), (3, 'Adele', 'London', 600000.00), (4, 'Taylor Swift', 'Paris', 400000.00), (5, 'BTS', 'Tokyo', 900000.00), (6, 'Adele', 'Sydney', 850000.00), (7, 'Taylor Swift', 'Tokyo', 1000000.00), (8, 'BTS', 'Sydney', 1000000.00);", "output": "SELECT Artist FROM Concerts WHERE City != 'New York' GROUP BY Artist HAVING COUNT(DISTINCT City) = (SELECT COUNT(DISTINCT City) FROM Concerts WHERE Artist = Concerts.Artist);"}
{"input": " '\uacfc\ud559'\ud559\uacfc \ud559\uc0dd\ub4e4\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \uc219\ubc15 \uc2dc\uc124\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Students (student_id INT, department VARCHAR(255)); CREATE TABLE Accommodations (accommodation_id INT, student_id INT, accommodation_type VARCHAR(255));", "output": "SELECT COUNT(*) as total_accommodations FROM Accommodations WHERE student_id IN ( SELECT student_id FROM Students WHERE department = 'Science' );"}
{"input": " \uc591\uadf9\uc131 \uc7a5\uc560 \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diagnoses (patient_id INT, condition TEXT); CREATE TABLE conditions (id INT, name TEXT); INSERT INTO conditions (id, name) VALUES (1, 'Bipolar Disorder');", "output": "SELECT AVG(age) FROM patients JOIN diagnoses ON patients.id = diagnoses.patient_id JOIN conditions ON diagnoses.condition = conditions.name WHERE conditions.id = 1;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uccad\uad6c\uac00 \uc5c6\ub294 \ubcf4\ud5d8\uacc4\uc57d\uc790\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholder (PolicyholderID INT, Name TEXT, DOB DATE, Product VARCHAR(10)); CREATE TABLE Claim (ClaimID INT, PolicyholderID INT, ClaimDate DATE); INSERT INTO Policyholder (PolicyholderID, Name, DOB, Product) VALUES (1, 'John Doe', '1980-05-05', 'Auto'), (2, 'Jane Smith', '1990-01-01', 'Home'), (3, 'Mike Johnson', '1975-09-09', 'Auto'); INSERT INTO Claim (ClaimID, PolicyholderID, ClaimDate) VALUES (1, 1, '2020-01-01'), (2, 1, '2021-01-01'), (3, 2, '2020-01-01'), (4, 3, '2018-01-01');", "output": "DELETE FROM Policyholder WHERE PolicyholderID NOT IN (SELECT PolicyholderID FROM Claim WHERE ClaimDate >= DATEADD(year, -3, GETDATE()));"}
{"input": " \uc6b0\uc8fc\ube44\ud589\uc0ac\uac00 \uc6b0\uc8fc\uc5d0\uc11c \ubcf4\ub0bc \uc218 \uc788\ub294 \ucd5c\ub300 \uc77c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE astronauts(name TEXT, missions INTEGER, days_in_space REAL); INSERT INTO astronauts(name, missions, days_in_space) VALUES('Neil Armstrong', 1, 265.5), ('Buzz Aldrin', 1, 216.4);", "output": "SELECT MAX(days_in_space) FROM astronauts;"}
{"input": "\uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ubc95\uc6d0 \uc704\uce58\ubcc4\ub85c \uc720\uc8c4 \ud310\uacb0\uc744 \ubc1b\uc740 \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Courts (Location VARCHAR(255), CourtID INT); CREATE TABLE Cases (CaseID INT, CourtID INT, CaseDate DATE, Verdict VARCHAR(255));", "output": "SELECT Courts.Location, COUNT(*) OVER(PARTITION BY Courts.Location) * 100.0 / SUM(COUNT(*)) OVER() AS Percentage FROM Courts JOIN Cases ON Courts.CourtID = Cases.CourtID WHERE Verdict = 'Conviction' AND CaseDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY Courts.Location, Courts.CourtID;"}
{"input": " 2021\ub144\uc5d0\ub294 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE VolunteerPrograms (VolunteerID INT, ProgramID INT, Hours INT, VolunteerDate DATE); INSERT INTO VolunteerPrograms VALUES (1, 1, 4, '2021-01-01'), (2, 1, 6, '2021-02-01'), (3, 2, 8, '2021-03-01');", "output": "SELECT ProgramID, COUNT(DISTINCT VolunteerID) FROM VolunteerPrograms WHERE YEAR(VolunteerDate) = 2021 GROUP BY ProgramID;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uba40\ud2f0\ud50c\ub808\uc774\uc5b4 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, country VARCHAR(255), last_login DATE); CREATE TABLE games (id INT, genre VARCHAR(255), multiplayer BOOLEAN, launched DATE); CREATE TABLE game_sessions (id INT, user_id INT, game_id INT, session_start DATE);", "output": "SELECT u.country, COUNT(DISTINCT user_id) as num_users FROM users u JOIN game_sessions gs ON u.id = gs.user_id JOIN games g ON gs.game_id = g.id WHERE g.multiplayer = TRUE GROUP BY u.country;"}
{"input": " 2021\ub144 1\uc6d4 1\uc77c \uc774\ud6c4 '\uce98\ub9ac\ud3ec\ub2c8\uc544' \uc8fc\uc758 \uc704\uce58\uc815\ubcf4 \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uac8c\uc2dc\ubb3c\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (post_id INT, user_id INT, post_text TEXT, post_date DATE, geolocation POINT); INSERT INTO posts (post_id, user_id, post_text, post_date, geolocation) VALUES (1, 789, 'Enjoying the sun in CA', '2021-02-22', POINT(37.7749, -122.4194));", "output": "SELECT post_id, user_id, post_text, post_date, geolocation FROM posts WHERE ST_Contains(geolocation, ST_MakePoint(-119.4179, 37.0000)) AND post_date >= '2021-01-01';"}
{"input": "2018\ub144\uc5d0 \uce90\ub098\ub2e4\uc5d0\uc11c \uad8c\uc7a5 \uc608\ubc29\uc811\uc885\uc744 \ubaa8\ub450 \ubc1b\uc740 5\uc138 \ubbf8\ub9cc \uc5b4\ub9b0\uc774\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE children_vaccinations (id INT, child_id INT, vaccine_type VARCHAR(20), vaccination_date DATE, country VARCHAR(30)); CREATE VIEW children_under_5 AS SELECT * FROM children_vaccinations WHERE YEAR(vaccination_date) >= 2014 AND child_id IN (SELECT child_id FROM children_vaccinations GROUP BY child_id HAVING COUNT(DISTINCT vaccine_type) >= 14);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM children_under_5 WHERE country = 'Canada') FROM children_under_5 WHERE country = 'Canada' AND YEAR(vaccination_date) = 2018;"}
{"input": " \uc81c\uacf5\ub41c \ubaa9\ub85d\uc5d0\uc11c \ub204\ub77d\ub41c \uc724\ub9ac\uc801 AI \uc6d0\uce59\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EthicalAI (principle_id INT, principle_name VARCHAR(50)); INSERT INTO EthicalAI (principle_id, principle_name) VALUES (1, 'Fairness'), (2, 'Accountability'), (3, 'Transparency');", "output": "SELECT 'Data Minimization' AS principle_name UNION ALL SELECT 'Explainability' UNION ALL SELECT 'Human Oversight';"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 \ub9f9\uadf8\ub85c\ube0c \uc232\uc5d0\uc11c \uc5f0\uac04 \ud3c9\uade0 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mangrove_timber (id INT, year INT, volume FLOAT);", "output": "SELECT AVG(volume) as avg_annual_volume FROM mangrove_timber WHERE year BETWEEN 2011 AND 2021;"}
{"input": " \ub450 \uac00\uc9c0 \uc774\uc0c1\uc758 \uc2a4\ud3ec\uce20\uc5d0\uc11c \uba54\ub2ec\uc744 \ud68d\ub4dd\ud55c \uc6b4\ub3d9\uc120\uc218\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE athletes (athlete_id INT, name VARCHAR(50), sport VARCHAR(50)); INSERT INTO athletes (athlete_id, name, sport) VALUES (1, 'Michael Phelps', 'Swimming'), (2, 'Usain Bolt', 'Athletics'), (3, 'Simone Biles', 'Gymnastics'); INSERT INTO athletes (athlete_id, name, sport) VALUES (4, 'Nadia Com\u0103neci', 'Gymnastics'), (5, 'Carl Lewis', 'Athletics'), (6, 'Larry Bird', 'Basketball');", "output": "SELECT name FROM athletes GROUP BY name HAVING COUNT(DISTINCT sport) > 1;"}
{"input": " \uac01 \uc8fc\uc758 \uc815\uc2e0 \uac74\uac15 \ucea0\ud398\uc778 \uc218\ub97c \ube44\uad50\ud558\uace0 \ubaa8\ub4e0 \uc8fc\uc758 \ud3c9\uade0 \ucea0\ud398\uc778 \uc218\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucea0\ud398\uc778\uc744 \uc2e4\uc2dc\ud55c \uc8fc\ub9cc \ubc18\ud658\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE campaigns (state CHAR(2), num_campaigns INT); INSERT INTO campaigns VALUES ('NY', 7), ('NJ', 6), ('FL', 4);", "output": "SELECT state FROM campaigns WHERE num_campaigns > (SELECT AVG(num_campaigns) FROM campaigns);"}
{"input": " \ud3c9\uade0 \uc18d\ub3c4\uac00 220mph\ub97c \ub118\ub294 F1 \ud2b8\ub799\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Races (RaceID INT, TrackName VARCHAR(50), AverageSpeed DECIMAL(5,2)); INSERT INTO Races (RaceID, TrackName, AverageSpeed) VALUES (1, 'Monza', 242.60), (2, 'Spa-Francorchamps', 212.44);", "output": "SELECT TrackName FROM Races WHERE AverageSpeed > 220.00"}
{"input": " \uc2dc\uce74\uace0\uc5d0\uc11c 20\ub300 \uc774\uc0c1\uc758 \uc790\uc804\uac70\ub97c \ubcf4\uc720\ud558\uace0 \uc788\ub294 \uc790\uc804\uac70 \uacf5\uc720 \uc2a4\ud14c\uc774\uc158\uc758 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE bikeshare (station_id INT, city VARCHAR(20), num_bikes INT); INSERT INTO bikeshare (station_id, city, num_bikes) VALUES (1, 'Chicago', 25), (2, 'Chicago', 18), (3, 'Chicago', 30);", "output": "SELECT COUNT(*) FROM bikeshare WHERE city = 'Chicago' AND num_bikes > 20;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uac00 \uc18c\uc720\ud55c \uc704\uc131\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INTEGER, name TEXT, region TEXT, num_satellites INTEGER); INSERT INTO countries (id, name, region, num_satellites) VALUES (1, 'Algeria', 'Africa', 2), (2, 'Egypt', 'Africa', 5), (3, 'Nigeria', 'Africa', 10), (4, 'South Africa', 'Africa', 12), (5, 'Kenya', 'Africa', 3), (6, 'Ghana', 'Africa', 1); CREATE TABLE space_programs (id INTEGER, country TEXT); INSERT INTO space_programs (id, country) VALUES (6, 'Ghana');", "output": "SELECT SUM(num_satellites) FROM countries WHERE region = 'Africa' AND country IN (SELECT country FROM space_programs);"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc \ubc0f \uc8fc\uc758 \uc5d0\ub108\uc9c0 \uc720\ud615\ubcc4 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uacfc \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \ucd1d \uc6a9\ub7c9 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE renewable_energy_projects (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), country VARCHAR(50), energy_type VARCHAR(50), capacity_mw FLOAT, PRIMARY KEY (id));", "output": "SELECT city, state, energy_type, SUM(capacity_mw) as total_capacity, COUNT(*) as project_count, ROW_NUMBER() OVER (ORDER BY SUM(capacity_mw) DESC) as ranking FROM renewable_energy_projects WHERE city = 'CityName' AND state = 'StateName' GROUP BY energy_type;"}
{"input": " \ucef4\ud4e8\ud130 \uacf5\ud559\uacfc\uc5d0\uc11c \uc5f0\uad6c \ucd9c\ud310\ubb3c \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uba85\uc758 \ub300\ud559\uc6d0\uc0dd\uc744 \ucd9c\ud310\ubb3c \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cs_students (student_id INT, student_name VARCHAR(50), publications INT, department VARCHAR(50)); INSERT INTO cs_students (student_id, student_name, publications, department) VALUES (1, 'Amina Ali', 7, 'Computer Science'), (2, 'Brian Chen', 5, 'Computer Science'), (3, 'Carla Gonzales', 6, 'Computer Science'), (4, 'Daniel Lee', 4, 'Computer Science'), (5, 'Elizabeth Kim', 3, 'Computer Science');", "output": "SELECT student_id, student_name, publications FROM (SELECT student_id, student_name, publications, ROW_NUMBER() OVER (PARTITION BY department ORDER BY publications DESC) as rank FROM cs_students WHERE department = 'Computer Science') as top3 WHERE rank <= 3;"}
{"input": "\uac01 \uc81c\uc870\uc5c5\uccb4\uac00 \uc0ac\uc6a9\ud558\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE manufacturer (id INT, manufacturer VARCHAR(255), sustainable_material_quantity INT); INSERT INTO manufacturer (id, manufacturer, sustainable_material_quantity) VALUES (1, 'Manufacturer X', 5000), (2, 'Manufacturer Y', 7000), (3, 'Manufacturer Z', 6000);", "output": "SELECT manufacturer, SUM(sustainable_material_quantity) FROM manufacturer GROUP BY manufacturer;"}
{"input": " '\ubd81\ud574'\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\ub300 \ud30c\ub3c4 \ub192\uc774\ub294 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE wave_records (id INTEGER, location TEXT, height FLOAT, date DATE);", "output": "SELECT MAX(height) FROM wave_records WHERE location = 'North Sea';"}
{"input": " '\ucf54\ubbf8\ub514'\uc640 '\ub4dc\ub77c\ub9c8' \uc7a5\ub974\ub97c \ub118\ub098\ub4e4\uba70 \ud65c\ub3d9\ud55c \ubc30\uc6b0\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), genre VARCHAR(50), release_year INT, actor_id INT); INSERT INTO movies (id, title, genre, release_year, actor_id) VALUES (1, 'Movie1', 'Comedy', 2020, 101); INSERT INTO movies (id, title, genre, release_year, actor_id) VALUES (2, 'Movie2', 'Drama', 2019, 101); INSERT INTO movies (id, title, genre, release_year, actor_id) VALUES (3, 'Movie3', 'Action', 2018, 102);", "output": "SELECT actor_id FROM movies WHERE genre = 'Comedy' INTERSECT SELECT actor_id FROM movies WHERE genre = 'Drama';"}
{"input": " \uad6d\ub0b4 \ubc0f \ud574\uc678 \uacf5\uae09\uc5c5\uccb4\ub85c\ubd80\ud130 \uad6c\ub9e4\ud55c \uace0\uac1d\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), local_supplier BOOLEAN, overseas_supplier BOOLEAN); INSERT INTO customers (customer_id, customer_name, local_supplier, overseas_supplier) VALUES (1, 'Customer N', TRUE, TRUE), (2, 'Customer O', FALSE, FALSE), (3, 'Customer P', TRUE, FALSE), (4, 'Customer Q', FALSE, TRUE); CREATE TABLE purchases (purchase_id INT, customer_id INT, supplier_country VARCHAR(50)); INSERT INTO purchases (purchase_id, customer_id, supplier_country) VALUES (1, 1, 'USA'), (2, 2, 'Canada'), (3, 3, 'Mexico'), (4, 4, 'China'), (5, 1, 'France');", "output": "SELECT COUNT(DISTINCT customer_id) FROM (SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.local_supplier = TRUE INTERSECT SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.overseas_supplier = TRUE);"}
{"input": " \ub9c8\ub4dc\ub9ac\ub4dc\uc758 \uc804\uae30 \uc2a4\ucfe0\ud130 \ucc44\ud0dd\ub960\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE scooter_adoption (id INT, city VARCHAR(20), adoption_rate FLOAT); INSERT INTO scooter_adoption (id, city, adoption_rate) VALUES (1, 'Madrid', 0.2), (2, 'Barcelona', 0.15);", "output": "SELECT adoption_rate FROM scooter_adoption WHERE city = 'Madrid';"}
{"input": " \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc758\ub8b0\uc778\uc744 \ub300\ud45c\ud55c \uad6d\uc120 \ubcc0\ud638\uc778\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public_defenders (defender_id INT, defender_name VARCHAR(50), defender_state VARCHAR(2), court_type_id INT); INSERT INTO public_defenders VALUES (1, 'John Smith', 'NY', 1), (2, 'Jane Doe', 'CA', 2), (3, 'Maria Garcia', 'IL', 3); CREATE TABLE court_types (court_type_id INT, court_type_name VARCHAR(20), community_type VARCHAR(20)); INSERT INTO court_types VALUES (1, 'Community', 'Indigenous'), (2, 'Juvenile', 'Immigrant'), (3, 'Traffic', 'Low-income'), (4, 'Civil', 'Minority'); CREATE TABLE defendant_data (defendant_id INT, defendant_state VARCHAR(2), defender_id INT); INSERT INTO defendant_data VALUES (1, 'NY', 1), (2, 'CA', 2), (3, 'IL', 3), (4, 'NY', 1), (5, 'CA', 2), (6, 'IL', 3);", "output": "SELECT pd.defender_name, COUNT(dd.defendant_id) FROM public_defenders pd INNER JOIN defendant_data dd ON pd.defender_id = dd.defender_id INNER JOIN court_types ct ON pd.court_type_id = ct.court_type_id WHERE ct.community_type = 'Indigenous' GROUP BY pd.defender_name ORDER BY COUNT(dd.defendant_id) DESC;"}
{"input": " '\ubcf4\ud638\ub418\ub294' \uc11c\uc2dd\uc9c0\ub85c \ubc29\ucd9c\ub41c \ubaa8\ub4e0 \ub3d9\ubb3c\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE habitats (habitat_id INT, habitat_name VARCHAR(50), habitat_status VARCHAR(50)); INSERT INTO habitats (habitat_id, habitat_name, habitat_status) VALUES (1, 'Habitat A', 'protected'), (2, 'Habitat B', 'unprotected'); CREATE TABLE animal_habitats (animal_id INT, habitat_id INT); INSERT INTO animal_habitats (animal_id, habitat_id) VALUES (101, 1), (102, 2); CREATE TABLE animals (animal_id INT, animal_name VARCHAR(50)); INSERT INTO animals (animal_id, animal_name) VALUES (101, 'Dog'), (102, 'Cat');", "output": "SELECT animals.animal_name FROM animals INNER JOIN animal_habitats ON animals.animal_id = animal_habitats.animal_id INNER JOIN habitats ON animal_habitats.habitat_id = habitats.habitat_id WHERE habitats.habitat_status = 'protected';"}
{"input": " \uc62c\ud574 \uc2dc\uce74\uace0\uc5d0\uc11c \uc5f4\ub9ac\ub294 \ucd1d \ucee4\ubba4\ub2c8\ud2f0 \uc774\ubca4\ud2b8 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityEvents (id INT, city VARCHAR(50), event_date DATE, event_type VARCHAR(50));", "output": "SELECT COUNT(*) FROM CommunityEvents WHERE city = 'Chicago' AND event_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND event_type = 'community';"}
{"input": " \uace0\uac1d\ubcc4 \ucd5c\uc18c \uac70\ub798\uae08\uc561\uc73c\ub85c \uac70\ub798\uc77c\uc790\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE transactions (transaction_date DATE, customer_id INT, transaction_amt DECIMAL(10, 2)); INSERT INTO transactions (transaction_date, customer_id, transaction_amt) VALUES ('2022-01-01', 1, 200.00), ('2022-01-02', 2, 300.50), ('2022-01-03', 3, 150.25);", "output": "SELECT transaction_date, customer_id, transaction_amt, RANK() OVER (PARTITION BY customer_id ORDER BY transaction_amt ASC) AS rank FROM transactions;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 5\ud68c \uc774\uc0c1 \uad6c\ub9e4\ud55c \ud50c\ub808\uc774\uc5b4\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE purchases (id INT, player_id INT, purchase_date DATE);", "output": "SELECT COUNT(DISTINCT player_id) FROM purchases WHERE purchase_date >= CURDATE() - INTERVAL 30 DAY AND player_id IN (SELECT player_id FROM purchases GROUP BY player_id HAVING COUNT(*) > 5);"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub0b4 \ubc14\uc774\uc624\uc13c\uc11c \uc720\ud615\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE biosensors (biosensor_id INT, biosensor_type VARCHAR(20)); INSERT INTO biosensors (biosensor_id, biosensor_type) VALUES (1, 'Optical'), (2, 'Electrochemical'), (3, 'Thermal'), (4, 'Mass-sensitive');", "output": "SELECT biosensor_type, COUNT(*) FROM biosensors GROUP BY biosensor_type"}
{"input": " \ud3c9\uade0 \ud504\ub85c\uadf8\ub7a8 \uc608\uc0b0\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc608\uc0b0\uc744 \ubcf4\uc720\ud55c \ud504\ub85c\uadf8\ub7a8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramName VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO Programs (ProgramName, Budget) VALUES ('Education', 15000.00), ('Healthcare', 22000.00), ('Arts', 10000.00);", "output": "SELECT ProgramName FROM Programs WHERE Budget > (SELECT AVG(Budget) FROM Programs);"}
{"input": " 2019\ub144\uc5d0 \uc758\ub8cc \uc11c\ube44\uc2a4 \uc608\uc0b0\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget(Year INT, Region VARCHAR(20), Department VARCHAR(20), Amount INT); INSERT INTO Budget(Year, Region, Department, Amount) VALUES (2018, 'North', 'Healthcare', 25000000), (2018, 'South', 'Healthcare', 22000000), (2019, 'North', 'Healthcare', 27000000), (2019, 'South', 'Healthcare', 28000000);", "output": "SELECT Region, MAX(Amount) FROM Budget WHERE Year = 2019 AND Department = 'Healthcare' GROUP BY Region;"}
{"input": "\ud50c\ub85c\ub9ac\ub2e4\uc5d0 \uc704\uce58\ud55c \uc815\uc2e0\uac74\uac15 \uc9c4\ub8cc\uc18c\uc5d0\uc11c \uc5b4\ub5a4 \uce58\ub8cc\ub3c4 \ubc1b\uc9c0 \uc54a\uc740 \uc591\uadf9\uc131 \uc7a5\uc560 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clinics (clinic_id INT, clinic_name VARCHAR(50), city VARCHAR(50), state VARCHAR(50)); INSERT INTO clinics (clinic_id, clinic_name, city, state) VALUES (1, 'ClinicE', 'Miami', 'FL'), (2, 'ClinicF', 'Tampa', 'FL'); CREATE TABLE patients (patient_id INT, patient_name VARCHAR(50), age INT, clinic_id INT, condition_id INT); INSERT INTO patients (patient_id, patient_name, age, clinic_id, condition_id) VALUES (1, 'James Doe', 35, 1, 3), (2, 'Jasmine Smith', 28, 1, 1), (3, 'Alice Johnson', 42, 2, 2); CREATE TABLE conditions (condition_id INT, condition_name VARCHAR(50)); INSERT INTO conditions (condition_id, condition_name) VALUES (1, 'Depression'), (2, 'Anxiety Disorder'), (3, 'Bipolar Disorder'); CREATE TABLE therapies (therapy_id INT, therapy_name VARCHAR(50), patient_id INT); INSERT INTO therapies (therapy_id, therapy_name, patient_id) VALUES (1, 'CBT', 1), (2, 'DBT', 2);", "output": "SELECT AVG(age) FROM patients p JOIN clinics c ON p.clinic_id = c.clinic_id LEFT JOIN therapies t ON p.patient_id = t.patient_id JOIN conditions cond ON p.condition_id = cond.condition_id WHERE c.state = 'FL' AND cond.condition_name = 'Bipolar Disorder' AND t.therapy_id IS NULL;"}
{"input": " \ube44\ud65c\uc131 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \uc0ad\uc81c", "context": "CREATE TABLE donors (donor_id INT PRIMARY KEY, donor_name TEXT, status TEXT); INSERT INTO donors (donor_id, donor_name, status) VALUES (1, 'John Doe', 'active'), (2, 'Jane Smith', 'inactive'); CREATE TABLE donations (donation_id INT PRIMARY KEY, donor_id INT, donation_amount DECIMAL); INSERT INTO donations (donation_id, donor_id, donation_amount) VALUES (1, 1, 100.00), (2, 2, 200.00);", "output": "WITH inactive_donors AS (DELETE FROM donors WHERE status = 'inactive' RETURNING donor_id) DELETE FROM donations WHERE donor_id IN (SELECT * FROM inactive_donors);"}
{"input": " \uac01 \ud56d\uad6c\uc758 \ucd1d \ud654\ubb3c \ucc98\ub9ac \uc774\ubca4\ud2b8 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cargo_handling_events (id INT, port_id INT, event_type VARCHAR(50)); INSERT INTO cargo_handling_events (id, port_id, event_type) VALUES (1, 1, 'Loading'), (2, 1, 'Unloading'), (3, 2, 'Loading');", "output": "SELECT port_id, COUNT(*) FROM cargo_handling_events GROUP BY port_id;"}
{"input": " 2019\ub144 \ub9c8\uc774\uc560\ubbf8 \uc2dc\uc758 \uc0c1\uc5c5 \ubd80\ubb38 \uace0\uac1d\ub2f9 \uc77c\uc77c \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_consumption_miami (customer_id INT, category VARCHAR(20), consumption FLOAT, day INT, month INT, year INT, city VARCHAR(20)); INSERT INTO water_consumption_miami (customer_id, category, consumption, day, month, year, city) VALUES (1, 'commercial', 30, 1, 1, 2019, 'Miami'); INSERT INTO water_consumption_miami (customer_id, category, consumption, day, month, year, city) VALUES (2, 'commercial', 35, 2, 1, 2019, 'Miami');", "output": "SELECT AVG(consumption) FROM water_consumption_miami WHERE category = 'commercial' AND year = 2019 AND city = 'Miami' GROUP BY day;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc81c\ud488\uc744 \uc81c\uc870\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), sustainable_materials BOOLEAN); CREATE TABLE manufacturers (id INT PRIMARY KEY, name VARCHAR(50), country VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(5,2), manufacturer_id INT, FOREIGN KEY (manufacturer_id) REFERENCES manufacturers(id)); CREATE TABLE sales (id INT PRIMARY KEY, product_id INT, quantity INT, FOREIGN KEY (product_id) REFERENCES products(id)); CREATE VIEW sales_summary AS SELECT products.name, SUM(sales.quantity) as total_sold FROM sales JOIN products ON sales.product_id = products.id GROUP BY products.name;", "output": "SELECT DISTINCT suppliers.name AS supplier_name FROM suppliers INNER JOIN manufacturers ON suppliers.id = manufacturers.supplier_id INNER JOIN products ON manufacturers.id = products.manufacturer_id INNER JOIN sales ON products.id = sales.product_id INNER JOIN sales_summary ON products.name = sales_summary.name INNER JOIN manufacturers m2 ON suppliers.id = m2.supplier_id WHERE suppliers.sustainable_materials = TRUE AND m2.country = 'United States';"}
{"input": "SpaceX\uc640 Blue Origin\uc774 \ubc30\uce58\ud55c \ubaa8\ub4e0 \uc704\uc131\uc758 \ucd1d \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_company (name TEXT, satellites_deployed INTEGER); INSERT INTO space_company (name, satellites_deployed) VALUES ('SpaceX', 2000), ('Blue Origin', 100); CREATE TABLE spacex_satellites (id INTEGER, name TEXT, mass INTEGER); INSERT INTO spacex_satellites (id, name, mass) VALUES (1, 'Starlink 1', 150), (2, 'Starlink 2', 150), (3, 'Starlink 3', 150); CREATE TABLE blue_origin_satellites (id INTEGER, name TEXT, mass INTEGER); INSERT INTO blue_origin_satellites (id, name, mass) VALUES (1, 'New Glenn', 400), (2, 'Blue Moon', 300);", "output": "SELECT SUM(mass) FROM spacex_satellites WHERE name IN ('Starlink 1', 'Starlink 2', 'Starlink 3') UNION SELECT SUM(mass) FROM blue_origin_satellites WHERE name IN ('New Glenn', 'Blue Moon');"}
{"input": " \uc544\uc9c1\ub3c4 \uada4\ub3c4\uc5d0 \uc788\ub294 \uac00\uc7a5 \uc624\ub798\ub41c \uc704\uc131\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (satellite_id INT, name VARCHAR(255), launch_country VARCHAR(255), launch_date DATE, orbit_status VARCHAR(255));", "output": "SELECT name, launch_date FROM satellites WHERE orbit_status = 'in orbit' ORDER BY launch_date ASC LIMIT 1;"}
{"input": " \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec\uc640 \ud638\ud154 \ud3c9\uac00 \uc0ac\uc774\uc5d0\ub294 \uc5b4\ub5a4 \uc0c1\uad00\uad00\uacc4\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE hotel_data (hotel_id INT, hotel_name TEXT, rating FLOAT, virtual_tour_engagement FLOAT); INSERT INTO hotel_data (hotel_id, hotel_name, rating, virtual_tour_engagement) VALUES (1, 'Hotel X', 4.5, 0.15), (2, 'Hotel Y', 4.2, 0.20), (3, 'Hotel Z', 3.8, 0.10), (4, 'Hotel W', 4.7, 0.18), (5, 'Hotel V', 4.0, 0.12);", "output": "SELECT CORR(rating, virtual_tour_engagement) FROM hotel_data;"}
{"input": " 2021\ub144 \uc774\ud6c4 \uc790\uc6d0\ubd09\uc0ac\ub97c \ud558\uc9c0 \uc54a\uc740 \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Volunteers (VolunteerID INT PRIMARY KEY, VolunteerName VARCHAR(50), LastVolunteerDate DATE); INSERT INTO Volunteers (VolunteerID, VolunteerName, LastVolunteerDate) VALUES (1, 'John Doe', '2021-12-30'); INSERT INTO Volunteers (VolunteerID, VolunteerName, LastVolunteerDate) VALUES (2, 'Jane Smith', '2022-03-20');", "output": "SELECT VolunteerName FROM Volunteers WHERE LastVolunteerDate < '2022-01-01';"}
{"input": "USA' \uad6d\uac00\uc758 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ud50c\ub77c\uc2a4\ud2f1, \uc885\uc774, \uae08\uc18d \uc7ac\ud65c\uc6a9\ub960\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates_history (id INT, country VARCHAR(255), year INT, plastics DECIMAL(3,2), paper DECIMAL(3,2), metals DECIMAL(3,2)); INSERT INTO recycling_rates_history (id, country, year, plastics, paper, metals) VALUES (1, 'USA', 2020, 0.30, 0.55, 0.72), (2, 'USA', 2021, 0.33, 0.58, 0.75);", "output": "SELECT  (recycling_rates_history.plastics_2021 - recycling_rates_history.plastics_2020) AS plastics_change, (recycling_rates_history.paper_2021 - recycling_rates_history.paper_2020) AS paper_change, (recycling_rates_history.metals_2021 - recycling_rates_history.metals_2020) AS metals_change FROM (SELECT country, plastics AS plastics_2020, paper AS paper_2020, metals AS metals_2020 FROM recycling_rates_history WHERE year = 2020 AND country = 'USA'  UNION ALL SELECT country, plastics AS plastics_2021, paper AS paper_2021, metals AS metals_2021 FROM recycling_rates_history WHERE year = 2021 AND country = 'USA') AS recycling_rates_history;"}
{"input": " \uac01 \uc790\uc6d0\ubd09\uc0ac\uc790\uc5d0 \ub300\ud55c \uc0c8 \uae30\ubd80 \uae30\ub85d\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE volunteers (id INT, name VARCHAR(255)); CREATE TABLE donations (id INT, volunteer_id INT, amount DECIMAL(10,2)); INSERT INTO volunteers (id, name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie');", "output": "INSERT INTO donations (id, volunteer_id, amount) SELECT ROW_NUMBER() OVER (ORDER BY v.id) AS id, v.id AS volunteer_id, 50 AS amount FROM volunteers v;"}
{"input": " \ub0a8\ubbf8 \uae30\ubd80\uc790\ub4e4\uc774 \uae30\ubd80\ud55c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (Id INT PRIMARY KEY, Name VARCHAR(100), Age INT, DonationAmount DECIMAL(10, 2)); INSERT INTO Donors (Id, Name, Age, DonationAmount) VALUES (1, 'John Doe', 35, 500.00); INSERT INTO Donors (Id, Name, Age, DonationAmount) VALUES (3, 'Mariam K Tour\u00e9', 45, 800.00); INSERT INTO Donors (Id, Name, Age, DonationAmount) VALUES (4, 'Carlos Rodr\u00edguez', 50, 1000.00); CREATE TABLE Countries (Id INT PRIMARY KEY, Name VARCHAR(100), Continent VARCHAR(50)); INSERT INTO Countries (Id, Name, Continent) VALUES (1, 'Brazil', 'South America'); INSERT INTO Countries (Id, Name, Continent) VALUES (2, 'India', 'Asia'); CREATE TABLE Donations (Id INT PRIMARY KEY, DonorId INT, OrganizationId INT, Amount DECIMAL(10, 2)); INSERT INTO Donations (Id, DonorId, OrganizationId, Amount) VALUES (1, 2, 5, 300.00); INSERT INTO Donations (Id, DonorId, OrganizationId, Amount) VALUES (2, 3, 6, 500.00); INSERT INTO Donations (Id, DonorId, OrganizationId, Amount) VALUES (3, 4, 7, 750.00);", "output": "SELECT SUM(Donations.Amount) FROM Donations JOIN Donors ON Donations.DonorId=Donors.Id JOIN Countries ON Donors.Name=Countries.Name WHERE Countries.Continent = 'South America';"}
{"input": "\uac01 \uc6b0\ud3b8\ubc88\ud638\ubcc4 \ucd1d \ubd80\ub3d9\uc0b0 \uc218\uc5d0 \ub300\ud55c \ud3ec\uc6a9\uc801 \uc8fc\ud0dd \uc815\ucc45\uc744 \uc801\uc6a9\ud55c \ubd80\ub3d9\uc0b0\uc758 \ube44\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE zip_codes (zip_code INT, name VARCHAR(255)); CREATE TABLE properties (property_id INT, size INT, zip_code INT, PRIMARY KEY (property_id), FOREIGN KEY (zip_code) REFERENCES zip_codes(zip_code)); CREATE TABLE inclusive_housing_policies (property_id INT, PRIMARY KEY (property_id), FOREIGN KEY (property_id) REFERENCES properties(property_id));", "output": "SELECT zip_codes.name, 100.0 * COUNT(inclusive_housing_policies.property_id) / COUNT(properties.property_id) as pct FROM zip_codes LEFT JOIN properties ON zip_codes.zip_code = properties.zip_code LEFT JOIN inclusive_housing_policies ON properties.property_id = inclusive_housing_policies.property_id GROUP BY zip_codes.name;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0\uc11c \ube44\ub9cc\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc6b0\ud3b8\ubc88\ud638\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE zips (id INT, zip VARCHAR(10), state VARCHAR(255)); INSERT INTO zips (id, zip, state) VALUES (1, '12345', 'Texas'); CREATE TABLE health_surveys (id INT, zip VARCHAR(10), obesity_rate DECIMAL(5,2)); INSERT INTO health_surveys (id, zip, obesity_rate) VALUES (1, '12345', 35.6);", "output": "SELECT z.zip, h.obesity_rate FROM zips z JOIN (SELECT zip, MAX(obesity_rate) AS max_obesity_rate FROM health_surveys WHERE state = 'Texas' GROUP BY zip) hs ON z.zip = hs.zip JOIN health_surveys h ON z.zip = h.zip WHERE z.state = 'Texas' ORDER BY h.obesity_rate DESC;"}
{"input": "\uae08\uc735' \ubd84\uc57c \uae30\uc5c5\uc758 \uad6d\uac00\uc640 \ud574\ub2f9 \uc778\uad6c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE companies (id INT, sector VARCHAR(20), country VARCHAR(30)); INSERT INTO companies (id, sector, country) VALUES (1, 'technology', 'USA'), (2, 'finance', 'UK'), (3, 'technology', 'Canada'), (4, 'healthcare', 'Germany');", "output": "SELECT DISTINCT country FROM companies WHERE sector = 'finance';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc2dc\uccad\ub960\uc774 \uac00\uc7a5 \ub192\uc740 TV \ud504\ub85c\uadf8\ub7a8\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE TV_Shows (region VARCHAR(20), rating DECIMAL(2,1)); INSERT INTO TV_Shows (region, rating) VALUES ('Africa', 7.5), ('Africa', 8.2), ('Africa', 9.0), ('Africa', 8.8);", "output": "SELECT * FROM TV_Shows WHERE region = 'Africa' AND rating = (SELECT MAX(rating) FROM TV_Shows WHERE region = 'Africa');"}
{"input": " '\uc2ec\uc7a5\uac15\ud654' \ubc0f '\uadfc\ub825 \uac15\ud654' \uc218\uc5c5\uc5d0 \ucc38\uc5ec\ud588\uc9c0\ub9cc '\uc694\uac00' \uc218\uc5c5\uc5d0\ub294 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc740 \ud68c\uc6d0\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE member_activities (member_id INT, activity_type VARCHAR(50)); INSERT INTO member_activities (member_id, activity_type) VALUES (1, 'cardio'), (2, 'cardio'), (3, 'strength'), (4, 'cardio'), (5, 'strength'), (6, 'yoga'), (7, 'cardio'), (8, 'strength'), (9, 'yoga'), (10, 'cardio');", "output": "SELECT member_id FROM member_activities WHERE activity_type IN ('cardio', 'strength') AND member_id NOT IN (SELECT member_id FROM member_activities WHERE activity_type = 'yoga');"}
{"input": " \uc720\ud615\ubcc4 \uc120\ubc15 \uc218 \ud45c\uc2dc", "context": "CREATE TABLE Vessels (ID VARCHAR(20), Name VARCHAR(20), Type VARCHAR(20), AverageSpeed FLOAT); INSERT INTO Vessels VALUES ('V030', 'Vessel AD', 'Cargo', 14.5), ('V031', 'Vessel AE', 'Cargo', 18.2), ('V032', 'Vessel AF', 'Passenger', 29.0);", "output": "SELECT Type, COUNT(*) FROM Vessels GROUP BY Type;"}
{"input": " \ubc18\ubcf5 \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uc5b4\ub5a4 \ub2e8\uccb4\uac00 \uae30\ubd80\ub97c \ubc1b\uc558\ub098\uc694?", "context": "CREATE TABLE organization (id INT, name VARCHAR(255)); CREATE TABLE donor (id INT, name VARCHAR(255), state VARCHAR(2)); CREATE TABLE donation (id INT, donor_id INT, organization_id INT, amount DECIMAL(10,2));", "output": "SELECT o.name FROM organization o JOIN donation d ON o.id = d.organization_id JOIN (SELECT donor_id, COUNT(*) as num_donations FROM donation GROUP BY donor_id HAVING COUNT(*) > 1) sub ON d.donor_id = sub.donor_id;"}
{"input": "\uac01 \ubd80\uc11c\ubcc4 \ucd5c\uace0 \uae09\uc5ec \uc9c1\uc6d0\uacfc \ucd5c\uc800 \uae09\uc5ec \uc9c1\uc6d0\uc758 \uae09\uc5ec \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT, name VARCHAR(50), department VARCHAR(50), salary DECIMAL(5,2)); INSERT INTO employees (id, name, department, salary) VALUES (1, 'John Doe', 'IT', 50000.00); INSERT INTO employees (id, name, department, salary) VALUES (2, 'Jane Smith', 'HR', 55000.00);", "output": "SELECT department, MAX(salary) - MIN(salary) as salary_range FROM employees GROUP BY department;"}
{"input": " \uac01 \ub3d9\ubb3c\uc758 \ud3c9\uade0 \uac1c\uccb4\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE if not exists animal_population (id INT, animal VARCHAR(255), country VARCHAR(255), population INT); INSERT INTO animal_population (id, animal, country, population) VALUES (1, 'Tiger', 'India', 2500), (2, 'Tiger', 'Bangladesh', 150), (3, 'Elephant', 'India', 5000), (4, 'Elephant', 'Sri Lanka', 2500);", "output": "SELECT animal, AVG(population) FROM animal_population GROUP BY animal;"}
{"input": " \ubcf4\uc874 \ub178\ub825\uc758 \uc77c\ud658\uc73c\ub85c '\ubc14\ub2e4' \uc11c\uc2dd\uc9c0\uc5d0 \uc11c\uc2dd\ud558\ub294 \uc885\uc758 \ud3c9\uade0 \uac1c\uccb4\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (id INT, species VARCHAR(255), population INT, habitat VARCHAR(255));CREATE TABLE conservation_efforts (id INT, species VARCHAR(255), effort VARCHAR(255), start_date DATE, end_date DATE);CREATE VIEW species_by_habitat AS SELECT habitat, species FROM marine_species;", "output": "SELECT AVG(marine_species.population) FROM marine_species JOIN conservation_efforts ON marine_species.species = conservation_efforts.species JOIN species_by_habitat ON marine_species.species = species_by_habitat.species WHERE species_by_habitat.habitat = 'Open Ocean';"}
{"input": " \ub18d\uc5c5 \ubd80\ubb38\uc5d0\uc11c \uc5ec\uc131\uc774 \uc124\ub9bd\ud55c \uae30\uc5c5\uc774 \ubc1b\ub294 \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founders_gender TEXT, funding FLOAT);", "output": "SELECT AVG(funding) FROM companies WHERE founders_gender = 'female' AND industry = 'agriculture';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc8fc \ub3c4\uc2dc\ubcc4 \ucda9\uc804\uc18c \uc218\ub294 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE ChargingStation(id INT, city VARCHAR(20), state VARCHAR(20), quantity INT);", "output": "SELECT city, COUNT(*) as quantity FROM ChargingStation WHERE state = 'California' GROUP BY city ORDER BY quantity DESC;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 3\uac00\uc9c0 \uc12c\uc720 \uc18c\uc7ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Textiles (id INT, material VARCHAR(255), sourced_from VARCHAR(50)); INSERT INTO Textiles (id, material, sourced_from) VALUES (1, 'cotton', 'Africa'), (2, 'silk', 'Italy'), (3, 'wool', 'UK'), (4, 'cotton', 'Africa'), (5, 'hemp', 'China');", "output": "SELECT material, COUNT(*) AS count FROM Textiles WHERE sourced_from = 'Africa' GROUP BY material ORDER BY count DESC LIMIT 3;"}
{"input": " \ub274\uc695\uc5d0\uc11c \uce58\ub8cc\ub418\ub294 \uac00\uc7a5 \ud754\ud55c \uc815\uc2e0 \uac74\uac15 \uc9c8\ud658 5\uac00\uc9c0\ub97c \ub098\uc5f4\ud574 \ubcf4\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE conditions (condition_id INT, condition_name VARCHAR(50), description TEXT); INSERT INTO conditions (condition_id, condition_name, description) VALUES (1, 'Depression', '...'); CREATE TABLE treatments (treatment_id INT, patient_id INT, condition_id INT, treatment_date DATE); INSERT INTO treatments (treatment_id, patient_id, condition_id, treatment_date) VALUES (1, 1, 1, '2021-01-01');", "output": "SELECT conditions.condition_name, COUNT(treatments.condition_id) AS treatment_count FROM conditions INNER JOIN treatments ON conditions.condition_id = treatments.condition_id WHERE treatments.patient_id IN (SELECT patient_id FROM patients WHERE patients.state = 'New York') GROUP BY conditions.condition_name ORDER BY treatment_count DESC LIMIT 5;"}
{"input": " \ud559\uc0dd\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uc815\uc2e0 \uac74\uac15 \ubb38\uc81c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, name TEXT, gender TEXT, mental_health_issues TEXT); INSERT INTO students (id, name, gender, mental_health_issues) VALUES (1, 'Alice', 'Female', 'Anxiety, Depression'); INSERT INTO students (id, name, gender, mental_health_issues) VALUES (2, 'Bob', 'Male', 'Anxiety'); INSERT INTO students (id, name, gender, mental_health_issues) VALUES (3, 'Charlie', 'Non-binary', 'Depression');", "output": "SELECT mental_health_issues, COUNT(*) AS count FROM students GROUP BY mental_health_issues ORDER BY count DESC LIMIT 1;"}
{"input": " 1\uc778\ub2f9 \ubb3c \uc0ac\uc6a9\ub7c9\uc744 \uae30\uc900\uc73c\ub85c 2019\ub144 \ubbf8\uad6d\uc758 \ubb3c \ud6a8\uc728\uc131 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE CityWaterUsage (id INT, city VARCHAR, state VARCHAR, year INT, population INT, usage FLOAT); INSERT INTO CityWaterUsage (id, city, state, year, population, usage) VALUES (1, 'San Francisco', 'CA', 2019, 884000, 112.3), (2, 'New York', 'NY', 2019, 8336817, 121.5), (3, 'Los Angeles', 'CA', 2019, 3971883, 154.7);", "output": "SELECT city, state, usage FROM (SELECT city, state, usage, RANK() OVER (ORDER BY usage ASC) AS rank FROM CityWaterUsage WHERE year = 2019) AS subquery WHERE rank <= 5;"}
{"input": " AL\uc5d0\uc11c \uc57c\uad6c \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \ud648\ub7f0 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE baseball (id INT, player VARCHAR(50), team VARCHAR(50), league VARCHAR(50), homeruns INT); INSERT INTO baseball (id, player, team, league, homeruns) VALUES (1, 'Aaron Judge', 'Yankees', 'AL', 52); INSERT INTO baseball (id, player, team, league, homeruns) VALUES (2, 'Mike Trout', 'Angels', 'AL', 45);", "output": "SELECT AVG(homeruns) FROM baseball WHERE league = 'AL';"}
{"input": " \ub300\uc911\uad50\ud1b5\uacfc \uacf5\uc720 \uc790\uc804\uac70\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud55c \uc624\uc2ac\ub85c\uc640 \ucf54\ud39c\ud558\uac90\uc758 \ubcf5\ud569 \uc774\ub3d9\uc131 \uc0ac\uc6a9\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE oslo_mobility (user_id INT, mode VARCHAR(20)); CREATE TABLE copenhagen_mobility (user_id INT, mode VARCHAR(20)); INSERT INTO oslo_mobility (user_id, mode) VALUES (1, 'Train'), (2, 'Bus'), (3, 'Bike'), (4, 'Shared Bike'); INSERT INTO copenhagen_mobility (user_id, mode) VALUES (5, 'Train'), (6, 'Bus'), (7, 'Bike'), (8, 'Shared Bike');", "output": "SELECT COUNT(*) FROM (SELECT user_id FROM oslo_mobility WHERE mode = 'Shared Bike' INTERSECT SELECT user_id FROM oslo_mobility WHERE mode = 'Train') AS intersection UNION ALL SELECT COUNT(*) FROM (SELECT user_id FROM copenhagen_mobility WHERE mode = 'Shared Bike' INTERSECT SELECT user_id FROM copenhagen_mobility WHERE mode = 'Train');"}
{"input": " 2015\ub144 \uc774\ud6c4\uc5d0 \uc2dc\uc791\ub418\ub294 \uce90\ub098\ub2e4\uc640 \ud638\uc8fc\uc758 \ud0c4\uc18c \uc0c1\uc1c4 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE carbon_offset_programs (id INT, name TEXT, country TEXT, start_date DATE); INSERT INTO carbon_offset_programs (id, name, country, start_date) VALUES (1, 'GreenEra', 'Canada', '2016-01-01');", "output": "SELECT name, country, start_date FROM carbon_offset_programs WHERE country IN ('Canada', 'Australia') AND start_date >= '2015-01-01';"}
{"input": " \uc9c0\ub09c \ub2ec 'B' \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uc9c0\uc5ed\ubcc4 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, region VARCHAR(255), last_login_date DATE);", "output": "SELECT region, AVG(playtime) FROM user_actions ua JOIN users u ON ua.user_id = u.id JOIN games g ON ua.game_id = g.id WHERE g.game_name = 'B' AND ua.action_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY region;"}
{"input": "\uce90\ub098\ub2e4\uc5d0 \ube44\ud574 \ubbf8\uad6d \uc6d0\uc8fc\ubbfc \ucee4\ubba4\ub2c8\ud2f0\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\ud658 \ud504\ub85c\uadf8\ub7a8\uc774 \uc874\uc7ac\ud569\ub2c8\uae4c?", "context": "CREATE TABLE us_diversion_programs (id INT, community VARCHAR(255), num_programs INT); INSERT INTO us_diversion_programs (id, community, num_programs) VALUES (1, 'Navajo Nation', 10), (2, 'Cherokee Nation', 15), (3, 'Sioux Nation', 8);CREATE TABLE canada_diversion_programs (id INT, community VARCHAR(255), num_programs INT); INSERT INTO canada_diversion_programs (id, community, num_programs) VALUES (1, 'First Nations', 12), (2, 'Inuit', 6), (3, 'M\u00e9tis', 9);", "output": "SELECT 'USA' AS country, community, SUM(num_programs) AS total_programs FROM us_diversion_programs GROUP BY community UNION ALL SELECT 'Canada' AS country, community, SUM(num_programs) AS total_programs FROM canada_diversion_programs GROUP BY community;"}
{"input": " \uccab \uc9c4\ub8cc \uc608\uc57d \ud6c4 30\uc77c \uc774\ub0b4\uc5d0 \ud6c4\uc18d \uc9c4\ub8cc \uc608\uc57d\uc744 \ubc1b\uc740 \ud658\uc790\ub97c \ub2f4\ub2f9 \uc758\uc0ac\uac00 \uadf8\ub8f9\ud654\ud55c \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Appointments (AppointmentID INT, PatientID INT, Physician VARCHAR(255), Date DATE); INSERT INTO Appointments (AppointmentID, PatientID, Physician, Date) VALUES (1, 1, 'Dr. Smith', '2021-09-01');", "output": "SELECT Physician, (SUM(FollowUpAppointments) / SUM(TotalAppointments)) * 100.0 FROM (SELECT Physician, COUNT(*) AS TotalAppointments, SUM(CASE WHEN DATEDIFF(day, Appointments.Date, FollowUpAppointments.Date) <= 30 THEN 1 ELSE 0 END) AS FollowUpAppointments FROM Appointments LEFT JOIN Appointments AS FollowUpAppointments ON Appointments.PatientID = FollowUpAppointments.PatientID WHERE FollowUpAppointments.Date IS NOT NULL GROUP BY Physician) AS Subquery GROUP BY Physician;"}
{"input": " \ud2b9\uc815 \ub0a0\uc9dc\uae4c\uc9c0 \uccad\uc218\uacf5\uc7a5\uc758 \ub204\uc801 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WastewaterTreatmentFacilities (FacilityID INT, FacilityName VARCHAR(255), Address VARCHAR(255), City VARCHAR(255), State VARCHAR(255), ZipCode VARCHAR(10)); INSERT INTO WastewaterTreatmentFacilities (FacilityID, FacilityName, Address, City, State, ZipCode) VALUES (1, 'Clear Water Plant', '1234 5th St', 'Houston', 'TX', '77002'); CREATE TABLE WaterUsage (UsageID INT, FacilityID INT, UsageDate DATE, TotalGallons INT); INSERT INTO WaterUsage (UsageID, FacilityID, UsageDate, TotalGallons) VALUES (1, 1, '2022-01-01', 500000), (2, 1, '2022-01-02', 550000), (3, 1, '2022-01-03', 600000);", "output": "SELECT UsageID, SUM(TotalGallons) OVER (ORDER BY UsageDate) FROM WaterUsage WHERE FacilityID = 1;"}
{"input": " \ubcf4\uc2a4\ud134 \uc2dc \ub300\uc911\uad50\ud1b5\ubd80\uc5d0\uc11c \ubd80\uacfc\ud55c \ubaa8\ub4e0 \ubc8c\uae08\uc758 \ud569\uacc4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transportation_fines (fine_id INT, fine_amount INT, department TEXT, city TEXT); INSERT INTO transportation_fines (fine_id, fine_amount, department, city) VALUES (1, 100, 'Public Transportation', 'Boston'), (2, 200, 'Public Transportation', 'Boston'), (3, 50, 'Parks', 'Boston'), (4, 300, 'Public Transportation', 'New York');", "output": "SELECT SUM(fine_amount) FROM transportation_fines WHERE department = 'Public Transportation' AND city = 'Boston';"}
{"input": " 2021\ub144 \uc778\ub3c4 \uc0ac\uc6a9\uc790\uac00 \ucc38\uc5ec\ud55c \uac00\uc0c1 \ud22c\uc5b4 \uc218\ub97c \ucc38\uc5ec \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users(user_id INT, user_country TEXT); INSERT INTO users(user_id, user_country) VALUES (1, 'India'); CREATE TABLE virtual_tours(tour_id INT, tour_date DATE); CREATE TABLE user_tour_interactions(user_id INT, tour_id INT);", "output": "SELECT MONTH(vt.tour_date) AS month, COUNT(uti.user_id) AS num_interactions FROM users u INNER JOIN user_tour_interactions uti ON u.user_id = uti.user_id INNER JOIN virtual_tours vt ON uti.tour_id = vt.tour_id WHERE u.user_country = 'India' AND YEAR(vt.tour_date) = 2021 GROUP BY month;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ud14d\uc0ac\uc2a4\uc758 \ucd1d \uc7a5\uc560 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE disability_support_programs (id INT, state VARCHAR(255), program_name VARCHAR(255)); INSERT INTO disability_support_programs (id, state, program_name) VALUES (1, 'California', 'Accessible Technology Initiative'); INSERT INTO disability_support_programs (id, state, program_name) VALUES (2, 'Texas', 'Promoting the Readiness of Minors in Supplemental Security Income');", "output": "SELECT SUM(total) FROM (SELECT COUNT(*) AS total FROM disability_support_programs WHERE state = 'California' UNION ALL SELECT COUNT(*) AS total FROM disability_support_programs WHERE state = 'Texas') AS subquery;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ucf54\ub85c\ub09819 \ubc31\uc2e0\uc744 \uc811\uc885\ud55c \uac00\uc7a5 \uc5b4\ub9b0 \ud658\uc790\uc758 \uc774\ub984\uacfc \ub098\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE covid_vaccine (patient_id INT, vaccine_name VARCHAR(10), administered_date DATE, patient_age INT); INSERT INTO covid_vaccine (patient_id, vaccine_name, administered_date, patient_age) VALUES (1, 'Pfizer', '2021-01-01', 35), (2, 'Moderna', '2021-02-01', 28);", "output": "SELECT vaccine_name, patient_age FROM covid_vaccine WHERE patient_age = (SELECT MIN(patient_age) FROM covid_vaccine WHERE state = 'CA') AND state = 'CA';"}
{"input": " 2020\ub144\uc5d0 \uc5ec\uc131 \uc791\uac00\uac00 \uc4f4 '\ud0d0\uc0ac\uc800\ub110\ub9ac\uc998' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc18d\ud558\ub294 \uae30\uc0ac\uc758 \ucd1d \uc218\ub294 \uba87 \ud3b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Articles (ArticleID INT, Title VARCHAR(100), AuthorID INT, Category VARCHAR(50), WordCount INT, PublishedDate DATE, AuthorGender VARCHAR(10));", "output": "SELECT COUNT(*) FROM Articles WHERE PublishedDate >= '2020-01-01' AND PublishedDate < '2021-01-01' AND AuthorGender = 'Female' AND Category = 'Investigative Journalism';"}
{"input": " \uc720\uae30\ub18d \uc81c\ud488\uc73c\ub85c \uc218\uc775\uc774 \uac00\uc7a5 \ub0ae\uc740 \uacf5\uae09\uc5c5\uccb4\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Vendors (VendorID INT, VendorName TEXT, Country TEXT);CREATE TABLE Products (ProductID INT, ProductName TEXT, Price DECIMAL, Organic BOOLEAN, VendorID INT); INSERT INTO Vendors VALUES (1, 'VendorE', 'UK'), (2, 'VendorF', 'UK'), (3, 'VendorG', 'UK'); INSERT INTO Products VALUES (1, 'Carrot', 0.6, true, 1), (2, 'Broccoli', 1.2, true, 1), (3, 'Apple', 1.5, true, 2), (4, 'Banana', 0.8, true, 3);", "output": "SELECT v.VendorName FROM Vendors v JOIN Products p ON v.VendorID = p.VendorID WHERE p.Organic = true GROUP BY v.VendorID, v.VendorName HAVING SUM(Price) = (SELECT MIN(TotalPrice) FROM (SELECT SUM(Price) AS TotalPrice FROM Products p JOIN Vendors v ON p.VendorID = v.VendorID WHERE p.Organic = true GROUP BY v.VendorID) t);"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \ubd80\uc11c\ubcc4 \uc778\ub825\uac1c\ubc1c \ud504\ub85c\uadf8\ub7a8\uc5d0 \ud22c\uc785\ub41c \ucd1d \ub178\ub3d9\uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments(id INT, department TEXT);CREATE TABLE employees(id INT, name TEXT, department TEXT, labor_hours INT, training_date DATE);INSERT INTO departments(id, department) VALUES (1, 'Department A'), (2, 'Department B'), (3, 'Department C'); INSERT INTO employees(id, name, department, labor_hours, training_date) VALUES (1, 'Employee 1', 'Department A', 10, '2021-01-10'), (2, 'Employee 2', 'Department B', 15, '2021-02-15'), (3, 'Employee 3', 'Department A', 20, '2021-03-20'), (4, 'Employee 4', 'Department C', 25, '2021-04-25'), (5, 'Employee 5', 'Department B', 30, '2021-05-30'), (6, 'Employee 6', 'Department C', 35, '2021-06-30'), (7, 'Employee 7', 'Department A', 40, '2021-07-31'), (8, 'Employee 8', 'Department B', 45, '2021-08-31'), (9, 'Employee 9', 'Department C', 50, '2021-09-30'), (10, 'Employee 10', 'Department A', 55, '2021-10-31');", "output": "SELECT department, SUM(labor_hours) as total_labor_hours FROM employees WHERE training_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY department;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ud658\uacbd \ubcf4\ud638 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (Year INT, Service TEXT, State TEXT, Budget FLOAT); INSERT INTO Budget (Year, Service, State, Budget) VALUES (2020, 'Environmental Protection', 'California', 40000000), (2021, 'Environmental Protection', 'California', 45000000), (2022, 'Environmental Protection', 'California', 50000000);", "output": "SELECT SUM(Budget) as TotalBudget, State FROM Budget WHERE Service = 'Environmental Protection' AND State = 'California' AND Year >= (SELECT MAX(Year) - 3 FROM Budget) GROUP BY State;"}
{"input": " 2019\ub144 \ub300\ub959\ubcc4 \ud3c9\uade0 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ContinentVisitors (id INT, continent VARCHAR(50), year INT, visitors INT); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (1, 'Africa', 2018, 45000000); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (2, 'Africa', 2019, 47000000); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (3, 'Asia', 2018, 80000000); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (4, 'Asia', 2019, 85000000); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (5, 'Europe', 2018, 60000000); INSERT INTO ContinentVisitors (id, continent, year, visitors) VALUES (6, 'Europe', 2019, 63000000);", "output": "SELECT continent, AVG(visitors) as avg_visitors FROM ContinentVisitors WHERE year = 2019 GROUP BY continent;"}
{"input": " \uc774\uc9d1\ud2b8\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uac01 \uc9c1\ubb3c \uc720\ud615\uc758 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fabric_sustainability (id INT PRIMARY KEY, fabric_type VARCHAR(255), country_origin VARCHAR(255), water_usage FLOAT, co2_emissions FLOAT); INSERT INTO fabric_sustainability (id, fabric_type, country_origin, water_usage, co2_emissions) VALUES (1, 'Cotton', 'Egypt', 1500, 4.5);", "output": "SELECT fabric_sustainability.fabric_type, SUM(fabric_sustainability.water_usage) as total_water_usage FROM fabric_sustainability WHERE fabric_sustainability.country_origin = 'Egypt' GROUP BY fabric_sustainability.fabric_type;"}
{"input": "\uc774\ub354\ub9ac\uc6c0 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubc1c\ud589\ub41c \ubaa8\ub4e0 ERC-20 \ud1a0\ud070\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ERC20Tokens (id INT, name VARCHAR(100), symbol VARCHAR(50), total_supply DECIMAL(20,2)); INSERT INTO ERC20Tokens (id, name, symbol, total_supply) VALUES (1, 'Tether', 'USDT', 80000000), (2, 'Uniswap', 'UNI', 1000000);", "output": "SELECT SUM(total_supply) FROM ERC20Tokens WHERE symbol IN ('USDT', 'UNI', '...');"}
{"input": " '\uc74c\uc2dd' \ub610\ub294 '\ubb3c' \ud56d\ubaa9\uc744 \ud3ec\ud568\ud558\uc5ec 2022\ub144\uc5d0 '\uc544\uc774\ud2f0'\ub85c \ubc30\uc1a1\ub41c \ubaa8\ub4e0 \ubc30\uc1a1\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Deliveries (delivery_id INT, delivery_date DATE, item_id INT, quantity INT, country TEXT); CREATE TABLE Items (item_id INT, item_name TEXT); CREATE TABLE DeliveryItems (delivery_id INT, item_id INT, quantity INT);", "output": "SELECT Deliveries.*, Items.item_name FROM Deliveries JOIN DeliveryItems ON Deliveries.delivery_id = DeliveryItems.delivery_id JOIN Items ON DeliveryItems.item_id = Items.item_id WHERE Deliveries.country = 'Haiti' AND Deliveries.delivery_date BETWEEN '2022-01-01' AND '2022-12-31' AND Items.item_name IN ('food', 'water');"}
{"input": " 300\ub2e8\uc704 \uc774\uc0c1\uc758 \ubaa9\uc7ac\uc640 \uad00\ub828\ub41c '\uc9c0\uc5ed A' \ub610\ub294 '\uc9c0\uc5ed B'\uc758 \ubaa8\ub4e0 \ubaa9\uc7ac \ud310\ub9e4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE TimberSales(sale_id INT, sale_volume INT, region TEXT); INSERT INTO TimberSales (sale_id, sale_volume, region) VALUES (1, 400, 'Region A'), (2, 250, 'Region B'), (3, 325, 'Region A');", "output": "SELECT * FROM TimberSales WHERE region IN ('Region A', 'Region B') AND sale_volume > 300;"}
{"input": " \uc57d\ubb3c \uce58\ub8cc \ud6c4 \ud638\uc804\uc744 \uacbd\ud5d8\ud55c \ud658\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, age INT, gender VARCHAR(10), condition VARCHAR(50), medication VARCHAR(50), start_date DATE, end_date DATE, improvement BOOLEAN); CREATE VIEW medication_patients AS SELECT * FROM patients WHERE medication IS NOT NULL;", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM medication_patients WHERE end_date IS NOT NULL)) as percentage FROM medication_patients WHERE improvement = TRUE;"}
{"input": " \uac01 \ud68c\uc0ac\uac00 \ucc44\uad74\ud558\ub294 \uc11d\ud0c4, \ucca0\uad11\uc11d\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE coal_mine (company_id INT, quantity_mined INT);CREATE TABLE iron_ore_mine (company_id INT, quantity_mined INT);", "output": "SELECT m.company_name, SUM(cm.quantity_mined) AS total_coal_mined, SUM(iom.quantity_mined) AS total_iron_ore_mined FROM mining_companies m JOIN coal_mine cm ON m.company_id = cm.company_id JOIN iron_ore_mine iom ON m.company_id = iom.company_id GROUP BY m.company_name;"}
{"input": " \uacfc\ud559\uc790\uc640 \uc5d4\uc9c0\ub2c8\uc5b4\uac00 \ubaa8\ub450 \uc2b9\ubb34\uc6d0\uc73c\ub85c \ucc38\uc5ec\ud558\ub294 \uc784\ubb34\uc5d0 \uc5b4\ub5a4 \uc6b0\uc8fc\uc120\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE spacecrafts (spacecraft_id INT, name VARCHAR(50)); CREATE TABLE missions (mission_id INT, spacecraft_id INT, crew VARCHAR(50)); ", "output": "SELECT s.name FROM spacecrafts s INNER JOIN missions m ON s.spacecraft_id = m.spacecraft_id INNER JOIN (SELECT crew FROM crew_members WHERE role = 'scientist' INTERSECT SELECT crew FROM crew_members WHERE role = 'engineer') cm ON m.crew = cm.crew;"}
{"input": " \ud0c0\uc728\uc774 .300 \uc774\uc0c1\uc778 \uc57c\uad6c\uc120\uc218\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2dc\uc624.", "context": "CREATE TABLE players (id INT, name VARCHAR(50), team VARCHAR(50), sport VARCHAR(20)); CREATE TABLE at_bats (player_id INT, result VARCHAR(5)); CREATE TABLE hits (player_id INT, game_id INT);", "output": "SELECT players.name FROM players JOIN at_bats ON players.id = at_bats.player_id JOIN hits ON players.id = hits.player_id GROUP BY players.name HAVING (COUNT(hits.player_id) / SUM(at_bats.player_id = players.id)) > 0.3;"}
{"input": " EPL\uc758 \uac01 \ucd95\uad6c\ud300\uc774 \ubc1b\ub294 \ud3c9\uade0 \uc610\ub85c\uce74\ub4dc \uc218\ub294 \uba87 \uc7a5\uc785\ub2c8\uae4c?", "context": "CREATE TABLE epl_cards (team_id INT, team VARCHAR(50), yellow_cards INT, red_cards INT); INSERT INTO epl_cards (team_id, team, yellow_cards, red_cards) VALUES (1, 'Manchester City', 50, 3); INSERT INTO epl_cards (team_id, team, yellow_cards, red_cards) VALUES (2, 'Liverpool', 45, 5);", "output": "SELECT team, AVG(yellow_cards) FROM epl_cards GROUP BY team;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc740 \uacf5\uaca9\uc744 \ubc1b\uc740 \uc0c1\uc704 3\uba85\uc758 \uc704\ud611 \ud589\uc704\uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_actors (actor_id INT, actor_name VARCHAR(255), attack_count INT); INSERT INTO threat_actors (actor_id, actor_name, attack_count) VALUES (1, 'APT28', 20), (2, 'APT33', 30), (3, 'Lazarus Group', 40);", "output": "SELECT actor_name, attack_count as total_attacks FROM (SELECT actor_name, attack_count, ROW_NUMBER() OVER (ORDER BY attack_count DESC) as rank FROM threat_actors WHERE attack_date >= DATEADD(month, -6, CURRENT_TIMESTAMP)) subquery WHERE rank <= 3;"}
{"input": " 2022\ub144 \ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc758 \ucd1d \uae34\uae09 \uc0ac\uac74 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_incidents (id INT, borough VARCHAR(255), incident_type VARCHAR(255), reported_date DATE); INSERT INTO emergency_incidents (id, borough, incident_type, reported_date) VALUES (1, 'Manhattan', 'Fire', '2022-01-01'); INSERT INTO emergency_incidents (id, borough, incident_type, reported_date) VALUES (2, 'Brooklyn', 'Medical Emergency', '2022-01-02');", "output": "SELECT borough, SUM(number_of_incidents) FROM (SELECT borough, COUNT(*) as number_of_incidents FROM emergency_incidents WHERE borough IN ('Manhattan', 'Brooklyn', 'Queens', 'Bronx', 'Staten Island') AND reported_date >= '2022-01-01' AND reported_date < '2023-01-01' GROUP BY borough) as incidents_by_borough GROUP BY borough;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac01 \uc791\ubb3c\uc5d0 \ub300\ud55c \uc791\ubb3c \uc218\ud655\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Yield (Year int, CropName varchar(50), Yield int); INSERT INTO Yield (Year, CropName, Yield) VALUES (2020, 'Corn', 180), (2021, 'Corn', 200), (2022, 'Corn', 220), (2020, 'Soybeans', 160), (2021, 'Soybeans', 180), (2022, 'Soybeans', 200), (2020, 'Wheat', 140), (2021, 'Wheat', 150), (2022, 'Wheat', 160);", "output": "SELECT Year, CropName, AVG(Yield) OVER (PARTITION BY CropName ORDER BY Year ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as MovingAvg FROM Yield;"}
{"input": " \uac01 \ube44\uc0c1 \uc720\ud615\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_responses (id INT, response_type VARCHAR(255), response_time TIMESTAMP); INSERT INTO emergency_responses (id, response_type, response_time) VALUES (1, 'Fire', '2021-01-01 10:15:00'); INSERT INTO emergency_responses (id, response_type, response_time) VALUES (2, 'Medical', '2021-01-02 10:16:00');", "output": "SELECT response_type, AVG(EXTRACT(EPOCH FROM response_time)) as avg_response_time FROM emergency_responses GROUP BY response_type;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \ubaa8\ubc14\uc77c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_customers (customer_id INT, data_usage FLOAT, last_update DATE); INSERT INTO mobile_customers (customer_id, data_usage, last_update) VALUES (1, 6.0, '2022-01-10'), (2, 7.5, '2022-01-15'), (3, 8.2, '2022-01-28');", "output": "SELECT * FROM mobile_customers WHERE last_update >= CURDATE() - INTERVAL 30 DAY ORDER BY data_usage DESC;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed\uc5d0\uc11c \uc6b4\ud56d\ub418\ub294 \uc120\ubc15\uc758 \ucd5c\ub300 \uc5f0\ub839\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE VesselAge (Id INT, VesselName VARCHAR(50), Area VARCHAR(50), Age DATE);", "output": "SELECT MAX(DATEDIFF(YEAR, Age, GETDATE())) FROM VesselAge WHERE Area = 'Arctic';"}
{"input": " \uc9c0\ub09c \ud574 \uc790\uc6d0\ubd09\uc0ac\uc5d0 \ucc38\uc5ec\ud55c \ub18d\ucd0c \uc9c0\uc5ed \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name VARCHAR(50), reg_date DATE, location VARCHAR(30)); INSERT INTO volunteers (id, name, reg_date, location) VALUES (1, 'Alex', '2023-02-01', 'urban'), (2, 'Bella', '2023-01-15', 'rural'), (3, 'Charlie', '2023-03-05', 'suburban'), (4, 'Diana', '2022-07-20', 'rural'), (5, 'Eli', '2022-10-05', 'rural');", "output": "SELECT COUNT(*) FROM volunteers WHERE location = 'rural' AND reg_date >= DATEADD(year, -1, GETDATE());"}
{"input": " \uc870\ud569\uc6d0\uc774 5000\uba85\uc778 \ub178\ub3d9\uc870\ud569\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_membership (id INT, union VARCHAR(20), member_count INT); INSERT INTO union_membership (id, union, member_count) VALUES (1, 'construction', 3500), (2, 'education', 8000), (3, 'manufacturing', 5000);", "output": "SELECT union FROM union_membership WHERE member_count = 5000;"}
{"input": " \ubcf4\uc874 \uc0c1\ud0dc\uc5d0 \ub530\ub77c \ubd84\ub958\ub41c \ubd81\uadf9 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?\"", "context": "CREATE TABLE marine_species_biomass (species_name VARCHAR(255), region VARCHAR(255), biomass FLOAT, conservation_status VARCHAR(255)); INSERT INTO marine_species_biomass (species_name, region, biomass, conservation_status) VALUES ('Polar Bear', 'Arctic', 500, 'Fully Protected'), ('Narwhal', 'Arctic', 300, 'Partially Protected'), ('Ringed Seal', 'Arctic', 200, 'Fully Protected');", "output": "SELECT conservation_status, SUM(biomass) as total_biomass FROM marine_species_biomass WHERE region = 'Arctic' GROUP BY conservation_status;"}
{"input": " 2017\ub144 \ud544\ub9ac\ud540\uc758 \ucd1d \uacbd\uc81c \ub2e4\uac01\ud654 \ud22c\uc790\ub294 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE economic_diversification (project_id INT, country TEXT, project TEXT, investment INT, year INT); INSERT INTO economic_diversification (project_id, country, project, investment, year) VALUES (1, 'Philippines', 'Renewable energy', 1100000, 2016), (2, 'Philippines', 'Education', 1300000, 2017), (3, 'Philippines', 'Healthcare', 1500000, 2018);", "output": "SELECT SUM(investment) FROM economic_diversification WHERE country = 'Philippines' AND year = 2017;"}
{"input": " \uac01 \uacfc\ubaa9 \uc601\uc5ed\uc5d0\uc11c \ucd5c\uc18c \ud55c \uacfc\ubaa9\uc744 \uc774\uc218\ud55c \ud559\uc0dd\uc758 \ube44\uc728\uc744 \uc131\ubcc4\ub85c \ubcf4\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, gender VARCHAR(255), num_completed_courses INT); CREATE TABLE courses (id INT, subject_area_id INT, name VARCHAR(255)); CREATE TABLE enrollments (id INT, student_id INT, course_id INT); INSERT INTO students (id, gender, num_completed_courses) VALUES (1, 'Female', 3), (2, 'Female', 2), (3, 'Male', 1), (4, 'Male', 5), (5, 'Female', 4), (6, 'Male', 3); INSERT INTO courses (id, subject_area_id, name) VALUES (1, 1, 'Algebra'), (2, 1, 'Geometry'), (3, 2, 'Biology'), (4, 2, 'Chemistry'), (5, 3, 'History'), (6, 3, 'Literature'); INSERT INTO enrollments (id, student_id, course_id) VALUES (1, 1, 1), (2, 2, 1), (3, 3, 1), (4, 1, 2), (5, 2, 3), (6, 3, 3), (7, 1, 4), (8, 2, 4), (9, 3, 4), (10, 1, 5), (11, 2, 5), (12, 3, 5), (13, 1, 6), (14, 2, 6), (15, 3, 6);", "output": "SELECT s.gender, 100.0 * SUM(CASE WHEN s.num_completed_courses >= COUNT(DISTINCT c.subject_area_id) THEN 1 ELSE 0 END) / COUNT(s.id) AS pct_completed_subject_areas FROM students s JOIN enrollments e ON s.id = e.student_id JOIN courses c ON e.course_id = c.id GROUP BY s.gender;"}
{"input": "\uc77c\ubcf8 \ud50c\ub808\uc774\uc5b4\ub4e4\uc774 \uac00\uc7a5 \ub9ce\uc774 \ud50c\ub808\uc774\ud558\ub294 \uac8c\uc784 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(20), Genre VARCHAR(20)); INSERT INTO Games (GameID, GameName, Genre) VALUES (1, 'Fortnite', 'Battle Royale'), (2, 'Minecraft', 'Sandbox'), (3, 'Super Mario Odyssey', 'Platformer'), (4, 'Final Fantasy XV', 'RPG'); CREATE TABLE Players_Games (PlayerID INT, GameID INT); INSERT INTO Players_Games (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 3), (4, 3), (5, 4); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'USA'), (2, 30, 'Female', 'Japan'), (3, 15, 'Male', 'Japan'), (4, 35, 'Female', 'Mexico'), (5, 45, 'Male', 'Japan');", "output": "SELECT Genre, COUNT(*) AS Popularity FROM Players INNER JOIN Players_Games ON Players.PlayerID = Players_Games.PlayerID INNER JOIN Games ON Players_Games.GameID = Games.GameID WHERE Players.Country = 'Japan' GROUP BY Genre ORDER BY Popularity DESC LIMIT 1;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc6d4\ubcc4 \uc811\uc218\ub41c \uc7a5\uc560 \uc9c0\uc6d0 \uc694\uccad \uac74\uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Request (RequestID INT, RequestDate DATE, Region VARCHAR(50), RequestType VARCHAR(50)); INSERT INTO Request (RequestID, RequestDate, Region, RequestType) VALUES (1, '2021-01-01', 'Northeast', 'Disability Support'); INSERT INTO Request (RequestID, RequestDate, Region, RequestType) VALUES (2, '2021-02-15', 'Southeast', 'Disability Support'); INSERT INTO Request (RequestID, RequestDate, Region, RequestType) VALUES (3, '2020-08-01', 'Midwest', 'Disability Support');", "output": "SELECT DATEPART(YEAR, RequestDate) AS Year, DATEPART(MONTH, RequestDate) AS Month, Region, COUNT(*) AS Requests FROM Request WHERE RequestType = 'Disability Support' AND RequestDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY DATEPART(YEAR, RequestDate), DATEPART(MONTH, RequestDate), Region;"}
{"input": " '2020\ub144' '\uc544\ud55c\ub300' \uc0b0\ub9bc\uc5d0\uc11c \ud0c4\uc18c \uaca9\ub9ac\uac00 \uac00\uc7a5 \ub0ae\uc740 '\uc885'\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE forests (id INT, region VARCHAR(50)); INSERT INTO forests (id, region) VALUES (1, 'Boreal'); CREATE TABLE species (id INT, name VARCHAR(50)); CREATE TABLE carbon_sequestration (id INT, species_id INT, forest_id INT, year INT, sequestration FLOAT); INSERT INTO carbon_sequestration (id, species_id, forest_id, year, sequestration) VALUES (1, 1, 1, 2020, 1.5);", "output": "SELECT species.name, MIN(carbon_sequestration.sequestration) FROM carbon_sequestration JOIN species ON carbon_sequestration.species_id = species.id JOIN forests ON carbon_sequestration.forest_id = forests.id WHERE forests.region = 'Boreal' AND carbon_sequestration.year = 2020 GROUP BY species.name;"}
{"input": " \uc81c\uc870\uc0ac\ubcc4 \uacf5\uc815\ubb34\uc5ed \uc81c\ud488 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE ManufacturerProducts (manufacturer_id INT, manufacturer_name VARCHAR(255), product_type VARCHAR(255), is_fair_trade BOOLEAN); INSERT INTO ManufacturerProducts (manufacturer_id, manufacturer_name, product_type, is_fair_trade) VALUES (1, 'EcoPure', 'Clothing', true), (2, 'GreenYarn', 'Yarn', false), (3, 'SustainableTimber', 'Furniture', true), (4, 'EthicalMinerals', 'Electronics', true), (5, 'FairTradeFabrics', 'Textiles', true), (6, 'EcoDyes', 'Dyes', false), (7, 'EcoPaints', 'Paint', true), (8, 'GreenBuilding', 'Building Materials', false);", "output": "SELECT manufacturer_name, ROUND(COUNT(*) FILTER (WHERE is_fair_trade = true) * 100.0 / COUNT(*), 2) as fair_trade_percentage FROM ManufacturerProducts GROUP BY manufacturer_name;"}
{"input": "A' \uac8c\uc784\uc5d0\uc11c \ub808\ubca8 10\uc5d0 \ub3c4\ub2ec\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE GameA (player_id INT, country VARCHAR(20), level INT); INSERT INTO GameA (player_id, country, level) VALUES (1, 'US', 10), (2, 'CA', 9), (3, 'MX', 10), (4, 'US', 8), (5, 'CA', 10);", "output": "SELECT country, COUNT(*) as player_count FROM GameA WHERE level >= 10 GROUP BY country ORDER BY player_count DESC LIMIT 5;"}
{"input": " \ud2b9\uc815 \uc5b8\uc5b4 \ubcf4\uc874 \ud504\ub85c\uadf8\ub7a8\uc758 \uac01 \uc9c0\uc5ed\uc0ac\ud68c \ucc38\uc5ec \ud589\uc0ac\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE LanguagePreservationEvents (id INT, event VARCHAR(255), budget DECIMAL(10, 2), program VARCHAR(255)); INSERT INTO LanguagePreservationEvents (id, event, budget, program) VALUES (1, 'Maori Language Course', 12000, 'New Zealand'), (2, 'Aboriginal Language Workshop', 15000, 'Australia'), (3, 'Pacific Islander Language Symposium', 9000, 'Fiji');", "output": "SELECT event, SUM(budget) as total_budget FROM LanguagePreservationEvents WHERE program = 'New Zealand' GROUP BY event;"}
{"input": " 2017\ub144 \ubbf8\uc580\ub9c8\uc5d0\uc11c \uc628 \ub85c\ud79d\uc57c \ub09c\ubbfc\uc744 \uc9c0\uc6d0\ud55c \ub2e8\uccb4\uc758 \uc774\ub984\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE organizations (id INT, name TEXT); CREATE TABLE support (id INT, organization_id INT, refugee_id INT, country TEXT, year INT); INSERT INTO organizations (name) VALUES ('OrganizationA'), ('OrganizationB'); INSERT INTO support (id, organization_id, refugee_id, country, year) VALUES (1, 1, 1, 'Myanmar', 2017);", "output": "SELECT DISTINCT o.name FROM organizations o JOIN support s ON o.id = s.organization_id WHERE s.country = 'Myanmar' AND s.year = 2017 AND s.refugee_id IN (SELECT id FROM refugees WHERE country = 'Rohingya');"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\uace0 \ud130\ud0a4\uc5d0\uc11c \uacf5\uae09\ub418\uba70 XL \uc0ac\uc774\uc988\ub85c \uc81c\uc870\ub418\ub294 \uba74 \ud2f0\uc154\uce20\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE textile_sources (source_id INT, country VARCHAR(50), material VARCHAR(50)); INSERT INTO textile_sources (source_id, country, material) VALUES (1, 'Turkey', 'Cotton'); CREATE TABLE garment_sizes (size_id INT, size VARCHAR(10)); INSERT INTO garment_sizes (size_id, size) VALUES (1, 'XL'); CREATE TABLE products (product_id INT, name VARCHAR(50), price DECIMAL(5, 2), source_id INT, size_id INT); INSERT INTO products (product_id, name, price, source_id, size_id) VALUES (1, 'Cotton T-Shirt', 20.99, 1, 1);", "output": "SELECT AVG(p.price) FROM products p INNER JOIN textile_sources ts ON p.source_id = ts.source_id INNER JOIN garment_sizes gs ON p.size_id = gs.size_id WHERE ts.country = 'Turkey' AND p.name = 'Cotton T-Shirt' AND gs.size = 'XL';"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \uc18c\ub9e4 \uac00\uaca9\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc758\ub958\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Garments (garment_id INT, garment_name VARCHAR(50), retail_price DECIMAL(5,2), country VARCHAR(50)); INSERT INTO Garments (garment_id, garment_name, retail_price, country) VALUES (1, 'Sequin Evening Gown', 850.99, 'USA'), (2, 'Cashmere Sweater', 250.00, 'Italy'), (3, 'Silk Blouse', 150.00, 'France');", "output": "SELECT garment_name, retail_price, country FROM (SELECT garment_name, retail_price, country, ROW_NUMBER() OVER (PARTITION BY country ORDER BY retail_price) as rn FROM Garments) sub WHERE rn = 1;"}
{"input": " 2022\ub144 \ubc18\ubcf5 \uc790\uc6d0\ubd09\uc0ac\uc790 \ubc0f \uae30\ubd80\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Volunteers (id INT, name TEXT, joined DATE, is_repeat BOOLEAN); INSERT INTO Volunteers (id, name, joined, is_repeat) VALUES (1, 'John Doe', '2021-01-01', FALSE), (2, 'Jane Smith', '2020-01-01', TRUE); CREATE TABLE Donors (id INT, name TEXT, donated DATE, is_repeat BOOLEAN); INSERT INTO Donors (id, name, donated, is_repeat) VALUES (3, 'Mike Johnson', '2021-01-01', FALSE), (4, 'Sara Williams', '2020-01-01', TRUE);", "output": "SELECT 'Volunteers' as type, COUNT(*) as total FROM Volunteers WHERE YEAR(joined) = 2022 AND is_repeat = TRUE UNION ALL SELECT 'Donors' as type, COUNT(*) as total FROM Donors WHERE YEAR(donated) = 2022 AND is_repeat = TRUE;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc744 \ubcf4\uc720\ud55c \uac1c\ubc1c\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (id INT, name TEXT, developer TEXT); INSERT INTO smart_contracts (id, name, developer) VALUES (1, 'Contract1', 'John Doe'), (2, 'Contract2', 'John Doe'), (3, 'Contract3', 'Jane Smith');", "output": "SELECT developer, COUNT(*) as num_contracts FROM smart_contracts GROUP BY developer ORDER BY num_contracts DESC LIMIT 1;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed \uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc9c0\ucd9c\ub41c \uae30\uae08\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Projects (project_id INT, project_location VARCHAR(50), project_type VARCHAR(50), project_funding DECIMAL(10,2)); INSERT INTO Projects (project_id, project_location, project_type, project_funding) VALUES (1, 'Nigeria', 'Community Development', 100000.00), (2, 'Canada', 'Education', 50000.00), (3, 'Kenya', 'Community Development', 150000.00);", "output": "SELECT SUM(project_funding) FROM Projects WHERE project_type = 'Community Development' AND project_location LIKE 'Africa%';"}
{"input": " \uc124\uba85\uacfc \ud568\uaed8 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uad00\ud589\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE sustainable_practices (id INT, practice VARCHAR(50), description TEXT); INSERT INTO sustainable_practices (id, practice, description) VALUES (1, 'Green Roofs', 'Roofs covered with vegetation'), (2, 'Solar Panels', 'Roofs equipped with solar panels'), (3, 'Rainwater Harvesting', 'Collecting and storing rainwater for later use');", "output": "SELECT practice, description FROM sustainable_practices;"}
{"input": " \ud2b9\uc815 \ub3c4\uc2dc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80\ub97c \ubc1b\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (id INT, program VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO Programs (id, program, budget) VALUES (1, 'Feeding America', 10000.00); CREATE TABLE Donors (id INT, donor_name VARCHAR(50), donation_amount DECIMAL(10,2), donation_date DATE, city VARCHAR(50), program_id INT); INSERT INTO Donors (id, donor_name, donation_amount, donation_date, city, program_id) VALUES (1, 'Alex Brown', 200.00, '2021-01-01', 'New York', 1);", "output": "SELECT program, city, SUM(donation_amount) as total_donation_amount FROM Donors GROUP BY program, city;"}
{"input": " \uac01 \uae30\uc5c5\uc774 \uce5c\ud658\uacbd \ud611\ub825\uc0ac\ub85c\ubd80\ud130 \uc870\ub2ec\ud55c \uc790\uc7ac\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE eco_friendly_suppliers(company VARCHAR(50), material VARCHAR(50), quantity INT);", "output": "SELECT company, SUM(quantity) FROM eco_friendly_suppliers GROUP BY company;"}
{"input": " NA \uc9c0\uc5ed\uc5d0\uc11c \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc5f0\uac04 \uba87 \uac1c\uc758 \uc811\uadfc\uc131 \uc774\ub2c8\uc154\ud2f0\ube0c\uac00 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE accessibility_initiatives_na (initiative_year INT, num_initiatives INT, region VARCHAR(255)); INSERT INTO accessibility_initiatives_na (initiative_year, num_initiatives, region) VALUES (2019, 100, 'NA'), (2020, 125, 'NA'), (2021, 150, 'NA'), (2022, 175, 'NA'), (2023, 200, 'NA');", "output": "SELECT initiative_year, num_initiatives, COUNT(*) OVER (PARTITION BY initiative_year) AS initiatives_per_year FROM accessibility_initiatives_na WHERE region = 'NA';"}
{"input": " \uac01 \uc8fc\uc758 \uc7ac\ud65c\uc6a9 \uc13c\ud130\uc5d0 \ub300\ud55c \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE TABLE recycling_centers (state VARCHAR(20), num_centers INT);", "output": "CREATE VIEW state_recycling_centers AS SELECT state, COUNT(*) FROM recycling_centers GROUP BY state;"}
{"input": "\ud574\ub2f9 \uc758\uc57d\ud488\uc744 \uac1c\ubc1c\ud55c \uc81c\uc57d\ud68c\uc0ac\ubcc4\ub85c \ubd84\ub958\ud55c \uc758\uc57d\ud488\uba85, \ud5c8\uac00\uc77c \ub4f1 \uc758\uc57d\ud488\ubcc4 \ucd1d R&D \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drugs (drug_id INT, name VARCHAR(255), approval_date DATE, company_id INT);CREATE TABLE rd_expenditures (expenditure_id INT, drug_id INT, amount INT, year INT);CREATE TABLE companies (company_id INT, name VARCHAR(255));", "output": "SELECT c.name as company_name, d.name as drug_name, d.approval_date, SUM(re.amount) as total_expenditure FROM drugs d JOIN rd_expenditures re ON d.drug_id = re.drug_id JOIN companies c ON d.company_id = c.company_id GROUP BY c.name, d.name, d.approval_date;"}
{"input": " '\uc2dc\ud2f0\ub274\uc2a4'\uc640 '\ub370\uc77c\ub9ac\ub2e4\uc774\uc81c\uc2a4\ud2b8'\uc758 \uc5ec\uc131 \ub3c5\uc790\uc640 \ub0a8\uc131 \ub3c5\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE CityNews (id INT, reader_gender VARCHAR(10), reader_age INT); CREATE TABLE DailyDigest (id INT, reader_gender VARCHAR(10), reader_age INT);", "output": "SELECT 'CityNews' as newspaper, SUM(CASE WHEN reader_gender = 'female' THEN 1 ELSE 0 END) as female_readers, SUM(CASE WHEN reader_gender = 'male' THEN 1 ELSE 0 END) as male_readers FROM CityNews UNION ALL SELECT 'DailyDigest' as newspaper, SUM(CASE WHEN reader_gender = 'female' THEN 1 ELSE 0 END) as female_readers, SUM(CASE WHEN reader_gender = 'male' THEN 1 ELSE 0 END) as male_readers FROM DailyDigest;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE menu_items (menu_item_id INT, restaurant_id INT, name VARCHAR(255), revenue DECIMAL(10, 2));", "output": "SELECT restaurant_id, name, revenue, RANK() OVER (PARTITION BY restaurant_id ORDER BY revenue DESC) as rank FROM menu_items WHERE rank <= 3;"}
{"input": " \ub374\ubc84 \uc2dc\uc758 \ubaa8\ub4e0 \uc0b0\uc5c5 \uace0\uac1d\uc758 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE industrial_customers (customer_id INT, city VARCHAR(20), water_usage FLOAT); INSERT INTO industrial_customers (customer_id, city, water_usage) VALUES (1, 'Denver', 5000), (2, 'Denver', 7000), (3, 'Aurora', 6000);", "output": "SELECT SUM(water_usage) FROM industrial_customers WHERE city = 'Denver';"}
{"input": " \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc131\uacfc \ud3d0\uae30\ubb3c \uad00\ub9ac\ub97c \uc704\ud55c \uc194\ub8e8\uc158\uc744 \uc81c\uacf5\ud558\ub294 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uae30\uc220 \uacf5\uae09\uc5c5\uccb4\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE SCHEMA smart_cities; CREATE TABLE tech_vendors (vendor_name VARCHAR(255), energy_efficiency BOOLEAN, waste_management BOOLEAN); INSERT INTO tech_vendors (vendor_name, energy_efficiency, waste_management) VALUES ('EcoTech', TRUE, TRUE), ('GreenSavvy', TRUE, FALSE), ('WasteMaster', FALSE, TRUE);", "output": "SELECT vendor_name FROM smart_cities.tech_vendors WHERE energy_efficiency = TRUE AND waste_management = TRUE;"}
{"input": " '\uc12c\uc720' \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE departments (id INT, name VARCHAR(20)); INSERT INTO departments (id, name) VALUES (1, 'textiles'), (2, 'metallurgy'); CREATE TABLE workers (id INT, department_id INT, salary FLOAT); INSERT INTO workers (id, department_id, salary) VALUES (1, 1, 50000), (2, 1, 55000), (3, 2, 60000);", "output": "SELECT AVG(salary) FROM workers WHERE department_id = (SELECT id FROM departments WHERE name = 'textiles');"}
{"input": " '\ud5ec\uc2a4\ucf00\uc5b4' \ubd80\ubb38 \ud22c\uc790\uc5d0 \ub300\ud55c ESG \uc810\uc218 \ubd84\uc11d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE esg_factors (investment_id INT, e_score FLOAT, s_score FLOAT, g_score FLOAT); INSERT INTO esg_factors (investment_id, e_score, s_score, g_score) VALUES (13, 0.87, 0.90, 0.93), (14, 0.78, 0.82, 0.86), (15, 0.69, 0.73, 0.77), (16, 0.82, 0.86, 0.91); CREATE TABLE impact_investments (id INT, investment_name VARCHAR(50), strategy VARCHAR(50), investment_amount FLOAT, sector VARCHAR(50)); INSERT INTO impact_investments (id, investment_name, strategy, investment_amount, sector) VALUES (13, 'Telemedicine Provider', 'Digital Health', 10000000.00, 'Healthcare'), (14, 'Mental Health Startup', 'Behavioral Health', 12000000.00, 'Healthcare'), (15, 'Medical Device Manufacturer', 'Medical Devices', 15000000.00, 'Healthcare'), (16, 'Biotech Company', 'Biotechnology', 18000000.00, 'Healthcare');", "output": "SELECT i.investment_name, e.e_score, s.s_score, g.g_score FROM impact_investments i LEFT JOIN esg_factors e ON i.id = e.investment_id LEFT JOIN esg_factors s ON i.id = s.investment_id LEFT JOIN esg_factors g ON i.id = g.investment_id WHERE i.sector = 'Healthcare';"}
{"input": " \uac01 G20 \uad6d\uac00\uc758 \uc804\ub825 \uc0dd\uc0b0\uc5d0 \ub300\ud55c MWh\ub2f9 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emissions_mwh (country VARCHAR(20), co2_emissions FLOAT, electricity_mwh FLOAT); INSERT INTO co2_emissions_mwh (country, co2_emissions, electricity_mwh) VALUES ('United States', 0.5, 4000), ('Japan', 0.3, 3000), ('United States', 0.6, 4500);", "output": "SELECT country, AVG(co2_emissions/electricity_mwh) FROM co2_emissions_mwh WHERE country IN (SELECT country FROM g20_countries) GROUP BY country;"}
{"input": " \uc791\uac00\ubcc4\ub85c \ub098\ub208 \uadf8\ub9bc\uc758 \ud3c9\uade0 \uc804\uc2dc \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE GalleryG (gallery_name VARCHAR(20), artist VARCHAR(20), artwork_type VARCHAR(20), exhibition_duration INT); INSERT INTO GalleryG (gallery_name, artist, artwork_type, exhibition_duration) VALUES ('GalleryG', 'Picasso', 'Painting', 120), ('GalleryG', 'Picasso', 'Painting', 90), ('GalleryG', 'Dali', 'Painting', 60);", "output": "SELECT artist, AVG(exhibition_duration) as avg_duration FROM (SELECT gallery_name, artist, artwork_type, exhibition_duration, ROW_NUMBER() OVER (PARTITION BY gallery_name, artist ORDER BY exhibition_duration) as rn FROM GalleryG) tmp WHERE rn = 1 GROUP BY artist;"}
{"input": " \ub3c4\uc2dc \ubc0f \ub3c4\uc2dc \uc8fc\ubcc0 \uc9c0\uc5ed\uc5d0\uc11c \uc0ac\uc721\ub418\ub294 \ub2ed\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE urban_farm (id INT, animal VARCHAR(10), population INT); INSERT INTO urban_farm (id, animal, population) VALUES (1, 'chicken', 300), (2, 'goat', 150), (3, 'beehive', 60);", "output": "SELECT SUM(population) FROM urban_farm WHERE animal = 'chicken' AND id IN (1, 3);"}
{"input": " \uc6d0\uaca9\uc758\ub8cc \uc11c\ube44\uc2a4\ub97c \uad6c\ud604\ud55c \ub18d\ucd0c \ubcd1\uc6d0\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE hospitals (id INT, telemedicine BOOLEAN, location VARCHAR(20), state VARCHAR(10)); INSERT INTO hospitals (id, telemedicine, location, state) VALUES (1, true, 'rural', 'NY'), (2, false, 'urban', 'NY'), (3, true, 'rural', 'CA'), (4, false, 'rural', 'TX');", "output": "SELECT (SELECT COUNT(*) FROM hospitals WHERE telemedicine = true AND location LIKE '%rural%') * 100.0 / (SELECT COUNT(*) FROM hospitals WHERE location LIKE '%rural%') AS percentage;"}
{"input": " \uc624\ub80c\uc9c0 \ub77c\uc778\uc758 \uac01 \uc5ed \uac04 \uc774\ub3d9\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc694\uae08\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stations (station_id INT, station_name VARCHAR(255), line VARCHAR(255));CREATE TABLE trips (trip_id INT, start_station_id INT, end_station_id INT, fare FLOAT); INSERT INTO stations (station_id, station_name, line) VALUES (1, 'North Station', 'Orange Line'), (2, 'Back Bay', 'Orange Line'), (3, 'Forest Hills', 'Orange Line'); INSERT INTO trips (trip_id, start_station_id, end_station_id, fare) VALUES (1, 1, 2, 2.5), (2, 2, 1, 3.0), (3, 3, 2, 1.5);", "output": "SELECT s1.station_name as start_station, s2.station_name as end_station, AVG(t.fare) as avg_fare FROM trips t JOIN stations s1 ON t.start_station_id = s1.station_id JOIN stations s2 ON t.end_station_id = s2.station_id WHERE s1.line = 'Orange Line' AND s2.line = 'Orange Line' GROUP BY s1.station_name, s2.station_name;"}
{"input": "2022\ub144 7\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc77c\uc790\ubcc4\ub85c \ubaa8\uc740 \ucd1d \uc218\uc775\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE fare (fare_id INT, amount DECIMAL, collected_date DATE); INSERT INTO fare VALUES (1, 2.50, '2022-07-01'); INSERT INTO fare VALUES (2, 3.00, '2022-07-01'); INSERT INTO fare VALUES (3, 2.00, '2022-07-02'); INSERT INTO fare VALUES (4, 4.00, '2022-07-02');", "output": "SELECT collected_date, SUM(amount) FROM fare WHERE collected_date BETWEEN '2022-07-01' AND '2022-07-31' GROUP BY collected_date;"}
{"input": " \ubbf8\uad6d\uc774 \ubc1c\uc0ac\ud55c \ucd5c\ucd08\uc758 \uc704\uc131\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (satellite_id INT, name VARCHAR(255), country VARCHAR(255), altitude FLOAT, constellation VARCHAR(255), launch_date DATE); INSERT INTO Satellites (satellite_id, name, country, altitude, constellation, launch_date) VALUES (1, 'Explorer-1', 'USA', 357, 'Research', '1958-01-31'), (2, 'Vanguard-1', 'USA', 653, 'Research', '1958-03-17');", "output": "SELECT name FROM Satellites WHERE country = 'USA' AND launch_date = (SELECT MIN(launch_date) FROM Satellites);"}
{"input": " 2\ub144 \uc5f0\uc18d \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c '\ub0a8\ubd80' \uc9c0\uc5ed\uc758 \uad50\ub7c9\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE BridgeYears (    BridgeID INT,    Year INT,    MaintenanceCost DECIMAL(10, 2));", "output": "SELECT BridgeID, MAX(Diff) as LargestIncrease  FROM (    SELECT BridgeID, Year, MaintenanceCost, MaintenanceCost - LAG(MaintenanceCost) OVER (PARTITION BY BridgeID ORDER BY Year) as Diff    FROM BridgeYears WHERE Region = 'South') sub WHERE Diff IS NOT NULL GROUP BY BridgeID;"}
{"input": " \ubbf8\uad6d\uacfc APAC \uc9c0\uc5ed \uad6d\uac00 \uac04\uc758 \ucd1d \ubc29\uc704 \ud611\uc815 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DefenseAgreements (AgreementID INT, Country VARCHAR(50), AgreementType VARCHAR(50), StartDate DATE, EndDate DATE);", "output": "SELECT COUNT(AgreementID) FROM DefenseAgreements WHERE Country IN (SELECT Country FROM Countries WHERE Region = 'APAC') AND AgreementType = 'Defense Agreement';"}
{"input": " \uc9c0\ub09c \ub2ec \uae00\ub8e8\ud150 \ud504\ub9ac \uc694\ub9ac\ub85c \uc778\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurant (id INT, dish_type VARCHAR(10), revenue DECIMAL(10,2)); INSERT INTO Restaurant (id, dish_type, revenue) VALUES (1, 'gluten-free', 300.00), (2, 'regular', 800.00);", "output": "SELECT SUM(revenue) FROM Restaurant WHERE dish_type = 'gluten-free' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"input": " \uc624\ud1a0\uc1fcX\uc5d0\uc11c \uc5b4\ub5a4 \uc790\uc728\uc8fc\ud589\ucc28\uac00 \ud14c\uc2a4\ud2b8\ub410\ub098\uc694?", "context": "CREATE TABLE AutonomousCars (CarName VARCHAR(255), TestedAt VARCHAR(255)); INSERT INTO AutonomousCars (CarName, TestedAt) VALUES ('Wayve', 'Auto Show X'), ('NVIDIA Drive AGX', 'Auto Show Y'), ('TuSimple', 'Auto Show Z');", "output": "SELECT CarName FROM AutonomousCars WHERE TestedAt = 'Auto Show X';"}
{"input": " '\ub274\uc695'\uacfc '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4'\uc5d0\uc11c \uacf5\uc5f0\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Venues (VenueID INT, VenueName VARCHAR(100), Location VARCHAR(50)); INSERT INTO Venues (VenueID, VenueName, Location) VALUES (1001, 'VenueA', 'New York'), (1002, 'VenueB', 'Los Angeles'), (1003, 'VenueC', 'Chicago'), (1004, 'VenueD', 'New York'), (1005, 'VenueE', 'Los Angeles'); CREATE TABLE Concerts (ConcertID INT, VenueID INT, ArtistID INT); INSERT INTO Concerts (ConcertID, VenueID, ArtistID) VALUES (1, 1001, 1), (2, 1002, 2), (3, 1003, 3), (4, 1004, 1), (5, 1005, 2), (6, 1001, 4), (7, 1005, 4);", "output": "SELECT ArtistID FROM Concerts C1 JOIN Venues V1 ON C1.VenueID = V1.VenueID WHERE V1.Location = 'New York' INTERSECT SELECT ArtistID FROM Concerts C2 JOIN Venues V2 ON C2.VenueID = V2.VenueID WHERE V2.Location = 'Los Angeles';"}
{"input": " \ub0a8\uc131 \uc9c1\uc6d0\uc5d0 \ube44\ud574 \uc5ec\uc131 \uc9c1\uc6d0\uc758 \ube44\uc728\uc774 \ub354 \ub192\uc740 \uad11\uc0b0\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mines (id INT, name TEXT, location TEXT, total_employees INT, female_employees INT, male_employees INT); INSERT INTO mines (id, name, location, total_employees, female_employees, male_employees) VALUES (1, 'Golden Mine', 'Colorado, USA', 300, 150, 150), (2, 'Silver Ridge', 'Nevada, USA', 400, 200, 200), (3, 'Bronze Basin', 'Utah, USA', 500, 250, 250);", "output": "SELECT name FROM mines WHERE female_employees > (male_employees * 1.0) * (SELECT AVG(female_employees / male_employees) FROM mines)"}
{"input": "2022\ub144 3\uc6d4 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc8fc\ub97c \uc18c\ube44\ub7c9 \uae30\uc900 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE state_water_usage (state VARCHAR(20), water_consumption FLOAT, usage_date DATE); INSERT INTO state_water_usage (state, water_consumption, usage_date) VALUES ('California', 1000, '2022-03-01'), ('Texas', 800, '2022-03-01'), ('New York', 1200, '2022-03-01');", "output": "SELECT state, water_consumption FROM (SELECT state, water_consumption, ROW_NUMBER() OVER (ORDER BY water_consumption DESC) as rn FROM state_water_usage WHERE EXTRACT(MONTH FROM usage_date) = 3 AND EXTRACT(YEAR FROM usage_date) = 2022) t WHERE rn <= 3;"}
{"input": " \uc18c\uc678\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ucd9c\uc2e0\uc758 \uc0ac\ub78c\ub4e4\uc774 \uc124\ub9bd\ud55c \uc5d0\ub108\uc9c0 \ubd80\ubb38 \uae30\uc5c5\uc774 \ubc1b\ub294 \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_date DATE, funding_amount INT, founder_community TEXT); INSERT INTO companies (id, name, industry, founding_date, funding_amount, founder_community) VALUES (1, 'PowerUp', 'Energy', '2013-09-20', 700000, 'Underrepresented'); INSERT INTO companies (id, name, industry, founding_date, funding_amount, founder_community) VALUES (2, 'GreenEnergy', 'Energy', '2015-04-01', 800000, 'Not Underrepresented');", "output": "SELECT SUM(funding_amount) FROM companies WHERE industry = 'Energy' AND founder_community = 'Underrepresented';"}
{"input": " 2020\ub144 \uc774\ud6c4 \uac00\uc7a5 \ub192\uc740 \uacc4\uc57d \uae08\uc561\uc744 \uae30\ub85d\ud55c \uc544\ud504\ub9ac\uce74\uc758 \uad70\uc0ac \uc7a5\ube44 \uc81c\uc870\uc5c5\uccb4\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE military_equipment_contracts (contract_id INT, equipment_id INT, manufacturer VARCHAR(50), contract_value FLOAT, contract_date DATE); INSERT INTO military_equipment_contracts VALUES (1, 1, 'Rheinmetall AG', 10000000, '2021-05-15');", "output": "SELECT manufacturer, MAX(contract_value) FROM military_equipment_contracts WHERE contract_date >= '2020-01-01' AND country IN (SELECT country FROM countries WHERE region = 'Africa') GROUP BY manufacturer;"}
{"input": " \ud55c \uac00\uc9c0 \uc720\ud615\uc758 \uc0c1\ud488\ub9cc \ubcf4\uc720\ud55c \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Policyholder (PolicyholderID INT, Name TEXT, DOB DATE); CREATE TABLE Policy (PolicyID INT, PolicyholderID INT, Product VARCHAR(10)); INSERT INTO Policyholder (PolicyholderID, Name, DOB) VALUES (1, 'John Doe', '1980-05-05'), (2, 'Jane Smith', '1990-01-01'), (3, 'Mike Johnson', '1975-09-09'), (4, 'Sara Rodriguez', '1985-04-04'); INSERT INTO Policy (PolicyID, PolicyholderID, Product) VALUES (1, 1, 'Auto'), (2, 1, 'Auto'), (3, 2, 'Home'), (4, 3, 'Auto'), (5, 4, 'Home'), (6, 4, 'Home');", "output": "SELECT DISTINCT p.PolicyholderID, p.Name, p.DOB FROM Policyholder p INNER JOIN (SELECT PolicyholderID, COUNT(DISTINCT Product) AS ProductCount FROM Policy GROUP BY PolicyholderID HAVING COUNT(DISTINCT Product) = 1) AS pCount ON p.PolicyholderID = pCount.PolicyholderID;"}
{"input": " \uac01 \ub098\ub77c\uc5d0\uc11c \uc81c\uc870\ub41c \uc6b0\uc8fc\uc120\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE SpacecraftManufacturing (id INT, company VARCHAR(255), cost INT, country VARCHAR(255));", "output": "SELECT country, COUNT(*) FROM SpacecraftManufacturing GROUP BY country;"}
{"input": " \uc608\uc0b0 \ube44\uc728 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74, \uc9c0\uc5ed\ubcc4 \ucd1d \ubcf4\uc804\uc608\uc0b0 \uc9c0\ucd9c \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BudgetRegions (Region VARCHAR(255), Budget INT); INSERT INTO BudgetRegions (Region, Budget) VALUES ('Asia', 25000), ('Africa', 20000), ('SouthAmerica', 15000);", "output": "SELECT Region, 100.0 * SUM(Budget) FILTER (WHERE Region = Region) / SUM(Budget) OVER () as BudgetPercentage FROM BudgetRegions GROUP BY Region ORDER BY BudgetPercentage DESC;"}
{"input": " Baseball_games \ub370\uc774\ud130 \uc138\ud2b8\uc758 \uac01 \uac10\ub3c5\uc5d0 \ub300\ud55c \ucd1d \uc2b9\ud328\uc640 \uc2b9\ub960\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE baseball_games (manager VARCHAR(50), result VARCHAR(50));", "output": "SELECT manager, SUM(CASE WHEN result = 'win' THEN 1 ELSE 0 END) as wins, SUM(CASE WHEN result = 'loss' THEN 1 ELSE 0 END) as losses, (SUM(CASE WHEN result = 'win' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) as win_percentage FROM baseball_games GROUP BY manager;"}
{"input": " \uc608\uc0b0\uc774 500,000\uc774 \ub118\ub294 \ubaa8\ub4e0 \uc0ac\uc774\ubc84 \ubcf4\uc548 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CybersecurityBudget (id INT, project VARCHAR(100), budget FLOAT); INSERT INTO CybersecurityBudget (id, project, budget) VALUES (1, 'Project1', 250000.00); INSERT INTO CybersecurityBudget (id, project, budget) VALUES (2, 'Project2', 1000000.00); INSERT INTO CybersecurityBudget (id, project, budget) VALUES (3, 'Project3', 700000.00);", "output": "SELECT project FROM CybersecurityBudget WHERE budget > 500000;"}
{"input": " '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c \ubc30\uc1a1\ub41c \ubaa8\ub4e0 \uace0\uc720 \ud328\ud0a4\uc9c0 \uc720\ud615\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE packages (id INT, type TEXT); INSERT INTO packages (id, type) VALUES (1, 'Box'), (2, 'Pallet'), (3, 'Envelope'); CREATE TABLE shipments (id INT, package_id INT, warehouse_id INT); INSERT INTO shipments (id, package_id, warehouse_id) VALUES (1, 1, 2), (2, 2, 2), (3, 3, 2), (4, 1, 1), (5, 3, 4); CREATE TABLE warehouses (id INT, name TEXT, region TEXT); INSERT INTO warehouses (id, name, region) VALUES (1, 'Warehouse A', 'EMEA'), (2, 'Warehouse B', 'Africa'), (3, 'Warehouse C', 'APAC'), (4, 'Warehouse D', 'AMER');", "output": "SELECT DISTINCT packages.type FROM packages JOIN shipments ON packages.id = shipments.package_id JOIN warehouses ON shipments.warehouse_id = warehouses.id WHERE warehouses.region = 'Africa';"}
{"input": " 30\ud68c \uc774\uc0c1 \ub9ac\ubdf0\ub41c '\uc544\ud504\ub9ac\uce74' \ud638\ud154\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(255), rating DECIMAL(2,1), country VARCHAR(255)); INSERT INTO hotels (hotel_id, hotel_name, rating, country) VALUES (1, 'Hotel Cairo', 4.1, 'Egypt'), (2, 'Hotel Cape Town', 4.6, 'South Africa'), (3, 'Hotel Marrakech', 4.8, 'Morocco');", "output": "SELECT AVG(rating) FROM (SELECT rating FROM hotels WHERE country = 'Africa' GROUP BY rating HAVING COUNT(*) > 30) AS subquery;"}
{"input": " \ubbf8\uad6d\uacfc \uc601\uad6d\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biotech;USE biotech;CREATE TABLE if not exists startups (name VARCHAR(255), country VARCHAR(255), funding FLOAT);INSERT INTO startups (name, country, funding) VALUES ('Startup1', 'USA', 5000000), ('Startup2', 'Canada', 7000000), ('Startup3', 'USA', 3000000), ('Startup4', 'UK', 8000000), ('Startup5', 'USA', 6000000), ('Startup6', 'UK', 9000000);", "output": "SELECT AVG(funding) FROM startups WHERE country IN ('USA', 'UK');"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74\uc694\uc6d0\uc774 \uc774\uc218\ud55c \ubb38\ud654\uc5ed\ub7c9 \ud6c8\ub828\uc758 \uc778\uc885\ubcc4 \ube44\uc728\uc740?", "context": "CREATE TABLE CulturalCompetencyTraining (ID INT, CommunityHealthWorkerID INT, Race VARCHAR(50), TrainingPercentage DECIMAL(5,2)); INSERT INTO CulturalCompetencyTraining (ID, CommunityHealthWorkerID, Race, TrainingPercentage) VALUES (1, 1, 'Native American', 0.65), (2, 2, 'Asian', 0.85), (3, 3, 'African American', 0.92);", "output": "SELECT Race, AVG(TrainingPercentage) as AvgTrainingPercentage FROM CulturalCompetencyTraining GROUP BY Race;"}
{"input": " \uc790\uae08 \ucd9c\ucc98 \uce74\ud14c\uace0\ub9ac\ubcc4 \ubcf4\uc870\uae08 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA if not exists arts_culture;CREATE TABLE if not exists arts_culture.funding_sources (funding_source_id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255));INSERT INTO arts_culture.funding_sources (funding_source_id, name, category) VALUES (1, 'National Endowment for the Arts', 'Federal Agency'), (2, 'Andy Warhol Foundation', 'Private Foundation'), (3, 'New York City Department of Cultural Affairs', 'Local Government');", "output": "SELECT category, COUNT(*) as grant_count FROM arts_culture.funding_sources GROUP BY category;"}
{"input": " \ud654\uc7a5\ud488\uc5d0 \uc720\uae30\ub18d \uc131\ubd84\uc774 \uba87 \ud37c\uc13c\ud2b8\ub098 \ud568\uc720\ub418\uc5b4 \uc788\ub098\uc694?", "context": "CREATE TABLE ingredients (ingredient_id INT, ingredient_name TEXT, organic_source TEXT, product_id INT); INSERT INTO ingredients VALUES (1, 'Jojoba Oil', 'Mexico', 1), (2, 'Shea Butter', 'Ghana', 2), (3, 'Aloe Vera', 'Mexico', 3), (4, 'Rosehip Oil', 'Chile', 4), (5, 'Cocoa Butter', 'Ghana', 5); CREATE TABLE products (product_id INT, product_name TEXT, price FLOAT); INSERT INTO products VALUES (1, 'Lipstick A', 12.99), (2, 'Foundation B', 18.50), (3, 'Mascara C', 9.99), (4, 'Eyeshadow D', 14.99), (5, 'Blush E', 11.99);", "output": "SELECT AVG(ingredient_count / product_ingredient_count) * 100 as organic_percentage FROM (SELECT ingredients.product_id, COUNT(*) as ingredient_count FROM ingredients JOIN products ON ingredients.product_id = products.product_id WHERE organic_source IS NOT NULL GROUP BY ingredients.product_id) as organic_ingredients JOIN (SELECT product_id, COUNT(*) as product_ingredient_count FROM ingredients GROUP BY product_id) as total_ingredients ON organic_ingredients.product_id = total_ingredients.product_id;"}
{"input": "2022\ub144 2\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ud638\uc8fc \uc2dc\ub4dc\ub2c8 'Veggies Delight' \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uace0\uac1d 1\uc778\ub2f9 \uc18c\ube44\ud55c \ucd1d \uce7c\ub85c\ub9ac \uc18c\ube44\ub7c9 \uc21c\uc704\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer_meals (customer_id INTEGER, restaurant_name TEXT, city TEXT, calories INTEGER, meal_date DATE); INSERT INTO customer_meals (customer_id, restaurant_name, city, calories, meal_date) VALUES (1, 'Veggies Delight', 'Sydney', 800, '2022-02-01'); INSERT INTO customer_meals (customer_id, restaurant_name, city, calories, meal_date) VALUES (2, 'Veggies Delight', 'Sydney', 1000, '2022-02-01');", "output": "SELECT customer_id, SUM(calories) as total_calories FROM customer_meals WHERE restaurant_name = 'Veggies Delight' AND city = 'Sydney' AND meal_date >= '2022-02-01' AND meal_date < '2022-03-01' GROUP BY customer_id ORDER BY total_calories DESC;"}
{"input": " 2022\ub144 7\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ub7ec\ub2dd\uacfc \uc694\uac00 \ud65c\ub3d9\uc5d0 \ubaa8\ub450 \ucc38\uc5ec\ud55c \ud68c\uc6d0\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE SCHEMA fitness; CREATE TABLE participation (member_id INT, activity VARCHAR(20), participation_date DATE); INSERT INTO participation (member_id, activity, participation_date) VALUES (1, 'Running', '2022-07-01'), (1, 'Yoga', '2022-07-02'), (2, 'Swimming', '2022-07-03'), (3, 'Yoga', '2022-07-04'), (1, 'Running', '2022-07-05'), (3, 'Yoga', '2022-07-06');", "output": "SELECT member_id FROM participation WHERE activity = 'Running' AND participation_date >= '2022-07-01' AND participation_date < '2022-08-01' INTERSECT SELECT member_id FROM participation WHERE activity = 'Yoga' AND participation_date >= '2022-07-01' AND participation_date < '2022-08-01';"}
{"input": " \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ud300\uacfc \ucd1d \ud310\ub9e4\ub7c9\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ticket_sales (team_id INT, team_name VARCHAR(50), total_sales DECIMAL(10,2)); INSERT INTO ticket_sales (team_id, team_name, total_sales) VALUES (1, 'Team A', 45000.00), (2, 'Team B', 32000.00), (3, 'Team C', 50000.00), (4, 'Team D', 42000.00), (5, 'Team E', 38000.00), (6, 'Team F', 35000.00), (7, 'Team G', 40000.00);", "output": "SELECT team_name, total_sales FROM (SELECT team_name, total_sales, ROW_NUMBER() OVER (ORDER BY total_sales DESC) AS rank FROM ticket_sales) AS team_ranks WHERE rank <= 5;"}
{"input": " \uc0ac\uc6a9\uc790 'Mike Johnson'\uc758 \ud68c\uc6d0 \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE membership (user_id INT, name VARCHAR(50), status VARCHAR(20)); INSERT INTO membership (user_id, name, status) VALUES (3, 'Mike Johnson', 'Active');", "output": "WITH deleted_membership AS (DELETE FROM membership WHERE name = 'Mike Johnson' RETURNING *) SELECT * FROM deleted_membership;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc640 \ub274\uba55\uc2dc\ucf54\ub97c \uc81c\uc678\ud55c \ucf5c\ub85c\ub77c\ub3c4 \uac15 \uc720\uc5ed\uc758 \uc0c1\uc5c5 \ubd80\ubb38\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE colorado_river_basin(state VARCHAR(20), sector VARCHAR(20), consumption NUMERIC(10,2)); INSERT INTO colorado_river_basin VALUES ('Utah', 'Commercial', 2345.67), ('Colorado', 'Commercial', 3456.78), ('New Mexico', 'Commercial', 4567.89), ('Wyoming', 'Commercial', 5678.90);", "output": "SELECT consumption FROM colorado_river_basin WHERE state NOT IN ('Colorado', 'New Mexico') AND sector = 'Commercial';"}
{"input": "\ub274\uc695\uc2dc\uc5d0 \uacbd\ucc30\uc11c\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nyc_police_stations (id INT, station_name VARCHAR(20), location VARCHAR(20)); INSERT INTO nyc_police_stations (id, station_name, location) VALUES (1, '1st Precinct', 'Manhattan'), (2, '2nd Precinct', 'Manhattan');", "output": "SELECT COUNT(*) FROM nyc_police_stations;"}
{"input": "\ubaa8\ubc14\uc77c \ub124\ud2b8\uc6cc\ud06c \uc778\ud504\ub77c \ud22c\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 10\uac1c\uad6d\uc758 \uc6d4\ud3c9\uade0 \ubaa8\ubc14\uc77c \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uacfc \uad6d\uac00\ubcc4 \ucd1d \ud22c\uc790 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country_investment (country_name VARCHAR(50), investment_amount FLOAT, population INT); CREATE TABLE mobile_data_usage (customer_id INT, data_usage FLOAT, country_name VARCHAR(50));", "output": "SELECT sub.country_name, AVG(mobile_data_usage.data_usage) as avg_data_usage, country_investment.investment_amount as total_investment FROM (SELECT country_name FROM country_investment WHERE investment_amount = (SELECT MAX(investment_amount) FROM country_investment) GROUP BY country_name ORDER BY SUM(investment_amount) DESC LIMIT 10) as sub JOIN country_investment ON sub.country_name = country_investment.country_name LEFT JOIN mobile_data_usage ON sub.country_name = mobile_data_usage.country_name GROUP BY sub.country_name, country_investment.investment_amount;"}
{"input": " \uc9c1\uc6d0\uc774 5\uba85 \uc774\uc0c1\uc778 \ubaa8\ub4e0 \ubd80\uc11c\uc640 \uadf8 \ucd1d \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE staff_members (id INT, name VARCHAR(50), role VARCHAR(50), department VARCHAR(50)); INSERT INTO staff_members (id, name, role, department) VALUES (1, 'John Doe', 'Manager', 'Finance'), (2, 'Jane Smith', 'Director', 'Marketing'), (3, 'Mike Johnson', 'Specialist', 'IT'), (4, 'Alice Davis', 'Analyst', 'Finance'), (5, 'Bob Brown', 'Assistant', 'Finance'), (6, 'Charlie Green', 'Designer', 'Marketing'), (7, 'David White', 'Technician', 'IT');", "output": "SELECT department, COUNT(*) AS total_staff FROM staff_members GROUP BY department HAVING total_staff > 5;"}
{"input": " \ub300\uc11c\uc591 \ud574\uc218\uba74 \uc628\ub3c4\uc758 5\ub144 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sea_surface_temperature (ocean VARCHAR(255), date DATE, temperature FLOAT); INSERT INTO sea_surface_temperature (ocean, date, temperature) VALUES ('Atlantic', '2017-01-01', 20.5), ('Atlantic', '2017-07-01', 21.2), ('Atlantic', '2018-01-01', 20.8), ('Atlantic', '2018-07-01', 21.1), ('Atlantic', '2019-01-01', 20.7), ('Atlantic', '2019-07-01', 21.0), ('Atlantic', '2020-01-01', 20.6), ('Atlantic', '2020-07-01', 20.9), ('Atlantic', '2021-01-01', 20.5), ('Atlantic', '2021-07-01', 20.8);", "output": "SELECT date, temperature, ROW_NUMBER() OVER (ORDER BY date) as rn, AVG(temperature) OVER (ORDER BY date ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) as moving_avg FROM sea_surface_temperature WHERE ocean = 'Atlantic';"}
{"input": " \uac01 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc774 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, TotalDonation DECIMAL);", "output": "SELECT DonorName, SUM(TotalDonation) OVER (PARTITION BY DonorName ORDER BY SUM(TotalDonation) DESC) AS TotalDonation FROM Donors;"}
{"input": "\uc758\ub8cc\uc6a9 \ub300\ub9c8\ucd08 \uc0ac\uc6a9\uc774 \ud5c8\uc6a9\ub41c \uc8fc\uc5d0 \uc704\uce58\ud55c \uc57d\uad6d\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc885\ub958\uac00 \ud310\ub9e4\ub429\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT); CREATE TABLE strains (id INT, name TEXT, dispensary_id INT); CREATE TABLE state_cannabis_regulations (state TEXT, medical_use BOOLEAN); INSERT INTO dispensaries (id, name, state) VALUES (1, 'Harborside', 'California'), (2, 'Sunnyside', 'Illinois'); INSERT INTO strains (id, name, dispensary_id) VALUES (1, 'Girl Scout Cookies', 1), (2, 'Super Lemon Haze', 1), (3, 'Chicago Fire', 2); INSERT INTO state_cannabis_regulations (state, medical_use) VALUES ('California', TRUE), ('Illinois', TRUE);", "output": "SELECT s.name FROM strains s JOIN dispensaries d ON s.dispensary_id = d.id JOIN state_cannabis_regulations scr ON d.state = scr.state WHERE scr.medical_use = TRUE;"}
{"input": " \ub300\uc11c\uc591\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_depths (ocean TEXT, min_depth FLOAT, max_depth FLOAT); INSERT INTO ocean_depths (ocean, min_depth, max_depth) VALUES ('Atlantic Ocean', 1800.0, 9210.0), ('Pacific Ocean', 1600.0, 10994.0), ('Indian Ocean', 3000.0, 7450.0);", "output": "SELECT ocean, MIN(min_depth) AS min_depth, MAX(max_depth) AS max_depth FROM ocean_depths GROUP BY ocean;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uce74\ub9ac\ube0c\ud574\uc5d0\uc11c \uc2f1\uac00\ud3ec\ub974 \ub4f1\ub85d \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(255), country VARCHAR(255)); INSERT INTO ports VALUES (1, 'Kingston', 'Jamaica'); INSERT INTO ports VALUES (2, 'Willemstad', 'Curacao'); CREATE TABLE vessel_movements (movement_id INT, vessel_id INT, port_id INT, movement_timestamp TIMESTAMP); INSERT INTO vessel_movements VALUES (1, 301, 1, '2021-06-01 10:00:00'); INSERT INTO vessel_movements VALUES (2, 302, 2, '2021-06-15 15:30:00'); CREATE TABLE vessel_info (vessel_id INT, vessel_name VARCHAR(255), flag_state VARCHAR(255)); INSERT INTO vessel_info VALUES (301, 'Test Vessel 3', 'Singapore');", "output": "SELECT AVG(vessel_speed) FROM (SELECT v.vessel_id, (vessel_distance / TIMESTAMPDIFF(HOUR, v.movement_timestamp, l.movement_timestamp)) AS vessel_speed FROM vessel_movements v JOIN vessel_movements l ON v.vessel_id = l.vessel_id JOIN vessel_info vi ON v.vessel_id = vi.vessel_id WHERE v.movement_timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() AND vi.flag_state = 'Singapore' AND l.port_id IN (SELECT port_id FROM ports WHERE country IN ('Jamaica', 'Curacao'))) AS speed_calculation;"}
{"input": " \ud574\uc591 \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \ud574\uc591 \uc0b0\uc131\ud654 \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE ocean_acidification (acidification_id INT, region VARCHAR(50), level FLOAT);", "output": "SELECT region, AVG(level) AS avg_acidification   FROM ocean_acidification   GROUP BY region;"}
{"input": " \ub9e4\ucd9c \uae30\uc900 \uc0c1\uc704 3\ub300 \uc9c0\uc18d \uac00\ub2a5\ud55c \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE brand_sales (brand_name TEXT, revenue INT, sustainability_score INT); INSERT INTO brand_sales (brand_name, revenue, sustainability_score) VALUES ('Brand A', 1000000, 90), ('Brand B', 1200000, 70), ('Brand C', 800000, 85), ('Brand D', 900000, 95), ('Brand E', 750000, 80);", "output": "SELECT brand_name, revenue, NTILE(4) OVER (ORDER BY revenue DESC) as revenue_tile FROM brand_sales WHERE sustainability_score >= 80;"}
{"input": " \uace0\uac1d\ubcc4, \uc0c1\ud488\ubcc4 \ucd1d \uac70\ub798\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(50)); INSERT INTO customers (id, name) VALUES (1, 'John Doe'); INSERT INTO customers (id, name) VALUES (2, 'Jane Smith'); INSERT INTO customers (id, name) VALUES (3, 'Jim Brown'); CREATE TABLE transactions (id INT, customer_id INT, product_category VARCHAR(50), amount DECIMAL(10, 2)); INSERT INTO transactions (id, customer_id, product_category, amount) VALUES (1, 1, 'investment', 500.00); INSERT INTO transactions (id, customer_id, product_category, amount) VALUES (2, 1, 'investment', 200.00); INSERT INTO transactions (id, customer_id, product_category, amount) VALUES (3, 2, 'risk_management', 100.00); INSERT INTO transactions (id, customer_id, product_category, amount) VALUES (4, 3, 'compliance', 750.00); CREATE TABLE product_categories (id INT, category VARCHAR(50)); INSERT INTO product_categories (id, category) VALUES (1, 'investment'); INSERT INTO product_categories (id, category) VALUES (2, 'risk_management'); INSERT INTO product_categories (id, category) VALUES (3, 'compliance');", "output": "SELECT c.name, p.category, SUM(t.amount) as total_amount FROM customers c INNER JOIN transactions t ON c.id = t.customer_id INNER JOIN product_categories p ON t.product_category = p.category GROUP BY c.name, p.category;"}
{"input": " AI \ubd84\uc57c \uae30\uc5c5\uc758 \ucd5c\uadfc \ud22c\uc790 \ub77c\uc6b4\ub4dc\uc5d0 \ub300\ud55c \uc790\uae08 \uc870\ub2ec \uae08\uc561\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE latest_investments (id INT, company_id INT, round_number INT, investment_amount INT);  CREATE TABLE companies_funding (id INT, company_id INT, funding_amount INT);  CREATE TABLE companies (id INT, name TEXT, industry TEXT);", "output": "UPDATE companies_funding JOIN latest_investments ON companies_funding.company_id = latest_investments.company_id SET companies_funding.funding_amount = latest_investments.investment_amount WHERE companies_funding.company_id = latest_investments.company_id AND latest_investments.round_number = (SELECT MAX(round_number) FROM latest_investments JOIN companies ON latest_investments.company_id = companies.id WHERE companies.industry = 'AI');"}
{"input": " 2021\ub144\uc5d0 \ucc44\uc6a9\ub41c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, HireDate date, Salary decimal(10,2)); INSERT INTO Employees (EmployeeID, HireDate, Salary) VALUES (1, '2021-01-01', 80000.00), (2, '2021-02-15', 85000.00), (3, '2020-12-31', 75000.00);", "output": "SELECT AVG(Salary) FROM Employees WHERE YEAR(HireDate) = 2021;"}
{"input": " \ub274\uba55\uc2dc\ucf54\uc758 \uc2dc\uace8 \ubcf4\uac74\uc18c\uc5d0\uc11c \ud558\ub8e8\uc5d0 \ubcfc \uc218 \uc788\ub294 \ucd5c\ub300 \ud658\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clinics (id INT, name VARCHAR(50), state VARCHAR(25), patients_per_day INT, location VARCHAR(20)); INSERT INTO clinics (id, name, state, patients_per_day, location) VALUES (1, 'Clinic A', 'New Mexico', 60, 'rural'), (2, 'Clinic B', 'New Mexico', 30, 'urban'), (3, 'Clinic C', 'Texas', 75, 'rural');", "output": "SELECT MAX(patients_per_day) FROM clinics WHERE state = 'New Mexico' AND location = 'rural';"}
{"input": " \uc804 \uc138\uacc4 \uc9c0\uc5ed\uc5d0 \uac78\uccd0 \uc811\uadfc \uac00\ub2a5\ud55c \uae30\uc220 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE accessibility_initiatives (initiative_name VARCHAR(100), region VARCHAR(50)); INSERT INTO accessibility_initiatives (initiative_name, region) VALUES ('AccessibleTech Asia', 'Asia'), ('TechEquality Africa', 'Africa'), ('TechInclusion Europe', 'Europe');", "output": "SELECT region, COUNT(initiative_name), 100.0*COUNT(initiative_name)/(SELECT COUNT(*) FROM accessibility_initiatives) AS percentage FROM accessibility_initiatives GROUP BY region;"}
{"input": " \ud3c9\uade0 \ub300\ube44 \uc0b0\uc5c5\uc548\uc804\uc0ac\uace0 \uac74\uc218\uac00 \ub9ce\uc740 \ub178\ub3d9\uc870\ud569\uc758 \uc804\uccb4 \uc870\ud569\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_stats (id INT, union_name VARCHAR(30), num_members INT, avg_safety_incidents FLOAT); INSERT INTO union_stats (id, union_name, num_members, avg_safety_incidents) VALUES (1, 'Union A', 5500, 15.5), (2, 'Union B', 3000, 8.5), (3, 'Union C', 6000, 20.5);", "output": "SELECT SUM(num_members) FROM union_stats WHERE avg_safety_incidents > (SELECT AVG(num_safety_incidents) FROM union_stats);"}
{"input": " \uacf5\uacf5\uc11c\ube44\uc2a4 \ubd80\ubb38\uc5d0\uc11c \ub178\ub3d9\uc870\ud569\uc774 \ub300\ud45c\ud558\ub294 \uadfc\ub85c\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, name TEXT, industry TEXT, workers_represented INT); INSERT INTO unions (id, name, industry, workers_represented) VALUES (1, 'SEIU', 'Public Service', 2000000), (2, 'AFSCME', 'Public Service', 1500000), (3, 'United Auto Workers', 'Manufacturing', 400000);", "output": "SELECT (SUM(workers_represented) / (SELECT SUM(workers_represented) FROM unions)) * 100 AS percentage FROM unions WHERE industry = 'Public Service';"}
{"input": " 2022\ub144 3\uc6d4\uc5d0 \ud569\ub958\ud55c \uba64\ubc84\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE member_info (id INT, join_date DATE); INSERT INTO member_info (id, join_date) VALUES (1, '2022-03-01'), (2, '2022-02-15'), (3, '2021-12-31'), (4, '2022-03-20'), (5, '2022-01-05');", "output": "SELECT id FROM member_info WHERE EXTRACT(MONTH FROM join_date) = 3 AND EXTRACT(YEAR FROM join_date) = 2022;"}
{"input": " \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubd80\ubb38\uc5d0 \ub300\ud55c \uace0\uac1d\uacfc \uadf8\ub4e4\uc758 \ucd1d \ud22c\uc790\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE sectors (sector_id INT, sector VARCHAR(20)); INSERT INTO sectors (sector_id, sector) VALUES (1, 'Renewable Energy'), (2, 'Oil & Gas'), (3, 'Technology'); CREATE TABLE investments (investment_id INT, client_id INT, sector_id INT); INSERT INTO investments (investment_id, client_id, sector_id) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1), (4, 2, 3), (5, 3, 1);", "output": "SELECT clients.client_id, SUM(value) AS total_investment FROM clients JOIN assets ON clients.client_id = assets.client_id JOIN investments ON clients.client_id = investments.client_id JOIN sectors ON investments.sector_id = sectors.sector_id WHERE sectors.sector = 'Renewable Energy' GROUP BY clients.client_id;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ucd5c\uc18c \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environment (id INT, date DATE, score INT); INSERT INTO environment (id, date, score) VALUES (1, '2017-01-01', 70), (2, '2017-02-01', 75), (3, '2019-01-01', 80), (4, '2019-02-01', 85), (5, '2021-01-01', 90);", "output": "SELECT MIN(e.score) AS min_impact_score FROM environment e WHERE e.date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR);"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\uc758 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE HealthEquityMetrics (MetricID INT, MetricValue INT, Year INT); INSERT INTO HealthEquityMetrics (MetricID, MetricValue, Year) VALUES (1, 80, 2016), (2, 85, 2017), (3, 75, 2018), (4, 90, 2019), (5, 95, 2020);", "output": "SELECT Year, AVG(MetricValue) OVER (ORDER BY Year ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) AS AvgMetricValue FROM HealthEquityMetrics;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc57c\uc0dd\ub3d9\ubb3c \ubcf4\ud638\uad6c\uc5ed\uc5d0 \uc218\uc6a9\ub418\ub294 \ub3d9\ubb3c\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Wildlife_Sanctuary (Id INT, Name VARCHAR(50), Location VARCHAR(50), Animals_Housed INT); INSERT INTO Wildlife_Sanctuary (Id, Name, Location, Animals_Housed) VALUES (1, 'Serengeti', 'Africa', 5000); INSERT INTO Wildlife_Sanctuary (Id, Name, Location, Animals_Housed) VALUES (2, 'Kruger', 'Africa', 3000);", "output": "SELECT MAX(Animals_Housed) FROM Wildlife_Sanctuary WHERE Location = 'Africa';"}
{"input": " \uc9c0\uc5ed\ubcc4 \uacf5\uc815\ub178\ub3d9 \uc2e4\ucc9c \ube0c\ub79c\ub4dc\uc758 \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Brands (brand_id INT, brand_name VARCHAR(50), ethical BOOLEAN); CREATE TABLE Sales (sale_id INT, brand_id INT, revenue DECIMAL(10,2)); CREATE TABLE Regions (region_id INT, region VARCHAR(50)); CREATE TABLE BrandRegions (brand_id INT, region_id INT);", "output": "SELECT R.region, SUM(S.revenue) FROM Brands B INNER JOIN Sales S ON B.brand_id = S.brand_id INNER JOIN BrandRegions BR ON B.brand_id = BR.brand_id INNER JOIN Regions R ON BR.region_id = R.region_id WHERE B.ethical = TRUE GROUP BY R.region;"}
{"input": " 2020\ub144 \ubd81\ud574\uc758 \ucd1d \uc11d\uc720 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production_figures (well_id INT, year INT, oil_production INT, gas_production INT); INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (1, 2019, 120000, 50000); INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (2, 2018, 130000, 60000); INSERT INTO production_figures (well_id, year, oil_production, gas_production) VALUES (3, 2020, 110000, 45000);", "output": "SELECT SUM(oil_production) FROM production_figures WHERE year = 2020 AND region = 'North Sea';"}
{"input": " VolunteerID\uac00 6\uc778 \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \uc0ad\uc81c\ud558\uace0 VolunteerID\uac00 7\uc778 \uc790\uc6d0\ubd09\uc0ac\uc790 \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec 25\uc2dc\uac04\uc758 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Volunteers (VolunteerID INT, Name VARCHAR(50), Hours INT); INSERT INTO Volunteers (VolunteerID, Name, Hours) VALUES (1, 'John Doe', 15), (2, 'Jane Smith', 25), (3, 'Mike Johnson', 30), (4, 'Sara Connor', 10), (5, 'William Brown', 10), (6, 'David Lee', 5), (7, 'Olivia White', 20);", "output": "WITH Updates AS (UPDATE Volunteers SET Hours = 25 WHERE VolunteerID = 7) DELETE FROM Volunteers WHERE VolunteerID = 6 AND NOT EXISTS (SELECT 1 FROM Updates);"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uac01 \uad6d\uac00\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\ud1b5 \uc608\uc220 \ud589\uc0ac\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE TraditionalArtEvents (ID INT, Art VARCHAR(50), Country VARCHAR(50), YearAdded INT, Events INT); INSERT INTO TraditionalArtEvents (ID, Art, Country, YearAdded, Events) VALUES (1, 'Kathak', 'India', 2021, 20); INSERT INTO TraditionalArtEvents (ID, Art, Country, YearAdded, Events) VALUES (2, 'Hula', 'Hawaii', 2022, 15);", "output": "SELECT Country, YearAdded, COUNT(*) OVER (PARTITION BY Country, YearAdded - YearAdded % 2 ORDER BY YearAdded) AS EventsAddedInPeriod FROM TraditionalArtEvents;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \uc2dc\uace8 \ubcf4\uac74 \uc13c\ud130\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ucd1d \ud658\uc790 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\uba70, \uc774\ub4e4 \uc13c\ud130 \uc911 25,000\uba85 \uc774\uc0c1\uc758 \ud658\uc790\ub97c \uc11c\ube44\uc2a4\ud558\ub294 \uc13c\ud130\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_health_centers (center_id INT, center_name VARCHAR(100), country VARCHAR(50), num_patients INT); INSERT INTO rural_health_centers (center_id, center_name, country, num_patients) VALUES (1, 'Center A', 'United States', 28000), (2, 'Center B', 'United States', 24000), (3, 'Center C', 'Canada', 31000), (4, 'Center D', 'Canada', 36000);", "output": "SELECT COUNT(*) AS total_patients_served, COUNT(*) FILTER (WHERE num_patients > 25000) AS centers_with_more_than_25000_patients FROM rural_health_centers WHERE country IN (SELECT name FROM countries WHERE continent = 'North America');"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4\uc5d0 \ucc38\uc5ec\ud55c \uad00\uad11\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bookings (id INT, tourist_id INT, site_id INT, date DATE, type TEXT); INSERT INTO bookings (id, tourist_id, site_id, date, type) VALUES (1, 101, 1, '2022-01-01', 'virtual'), (2, 102, 2, '2022-01-10', 'on-site');", "output": "SELECT COUNT(DISTINCT tourist_id) FROM bookings WHERE country = 'France' AND type = 'virtual';"}
{"input": "\ucde8\uc57d\uc810 \uc810\uc218 \uc21c\uc704\uc640 \ud568\uaed8 \uc9c0\ub09c \uc8fc\uc758 \ucde8\uc57d\uc810 \uc810\uc218 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Vulnerabilities (system_id INT, vulnerability_score DECIMAL(3,2), timestamp TIMESTAMP); INSERT INTO Vulnerabilities (system_id, vulnerability_score, timestamp) VALUES (1, 7.5, '2022-01-01 10:00:00');", "output": "SELECT vulnerability_score, RANK() OVER (ORDER BY vulnerability_score DESC) as vulnerability_rank FROM Vulnerabilities WHERE timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 WEEK) AND CURRENT_TIMESTAMP;"}
{"input": " \ubcf4\uc7a5 \ud55c\ub3c4\uac00 $500,000\ub97c \ucd08\uacfc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c? \uc0c8\ub85c\uc6b4 \uce74\ud14c\uace0\ub9ac '\uc0c1\ud55c'\uc73c\ub85c \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Policyholders (PolicyID INT, Name VARCHAR(50), CoverageLimit DECIMAL(10,2)); INSERT INTO Policyholders (PolicyID, Name, CoverageLimit) VALUES (1, 'John Doe', 750000.00), (2, 'Jane Smith', 400000.00);", "output": "WITH UpdatedLimits AS (UPDATE Policyholders SET Category = 'High Limit' WHERE CoverageLimit > 500000 RETURNING *) SELECT * FROM UpdatedLimits;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc9c4\ub2e8\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mental_health_diagnosis (patient_id INT, diagnosis_date DATE, diagnosis VARCHAR(50), prescriber_id INT); INSERT INTO mental_health_diagnosis (patient_id, diagnosis_date, diagnosis, prescriber_id) VALUES (1, '2022-01-01', 'Depression', 101); CREATE TABLE prescriber_details (id INT, prescriber_name VARCHAR(50), language VARCHAR(20), years_of_experience INT); INSERT INTO prescriber_details (id, prescriber_name, language, years_of_experience) VALUES (101, 'Dr. Smith', 'English', 15); CREATE TABLE community_health_workers (id INT, worker_name VARCHAR(50), language VARCHAR(20), years_in_service INT, district VARCHAR(30)); INSERT INTO community_health_workers (id, worker_name, language, years_in_service, district) VALUES (201, 'Ms. Garcia', 'Spanish', 8, 'Downtown'), (202, 'Mr. Nguyen', 'Vietnamese', 12, 'Uptown');", "output": "SELECT C.district, COUNT(DISTINCT M.patient_id) as AvgDiagnosisPerWorker FROM mental_health_diagnosis M JOIN prescriber_details P ON M.prescriber_id = P.id JOIN community_health_workers C ON P.language = C.language GROUP BY C.district;"}
{"input": " 2020\ub144 2\ubd84\uae30\uc5d0 \uac74\uc124\ub41c \ub179\uc0c9 \uac74\ubb3c\uc758 \ub3c4\uc2dc\ubcc4 \ud3c9\uade0 \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, city VARCHAR(255), construction_date DATE, carbon_offset INT);", "output": "SELECT city, AVG(carbon_offset) FROM green_buildings WHERE construction_date BETWEEN '2020-04-01' AND '2020-06-30' GROUP BY city;"}
{"input": " ESG \uc694\uc18c\ubcc4\ub85c \ubd84\ub958\ub41c \uc5d0\ub108\uc9c0 \ubd80\ubb38\uc758 \ucd1d \ud22c\uc790\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments_esg (id INT, sector VARCHAR(255), esg_factor VARCHAR(255), investment_amount INT); INSERT INTO investments_esg (id, sector, esg_factor, investment_amount) VALUES (1, 'Energy', 'E', 500000), (2, 'Energy', 'S', 350000), (3, 'Energy', 'G', 450000);", "output": "SELECT sector, esg_factor, SUM(investment_amount) FROM investments_esg WHERE sector = 'Energy' GROUP BY sector, esg_factor;"}
{"input": " \ubd84\uc11d \uacb0\uacfc '\uc720\uae30\ubb3c \uc874\uc7ac'\ub85c \ud45c\uc2dc\ub41c \uc720\ubb3c\uc774 3\uac1c \uc774\uc0c1 \ubc1c\uacac\ub41c \ubc1c\uad74\ud604\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSites (SiteName VARCHAR(50), ArtifactCount INT); INSERT INTO ExcavationSites (SiteName, ArtifactCount) VALUES ('Site1', 4), ('Site2', 2), ('Site3', 5);", "output": "SELECT SiteName FROM ExcavationSites WHERE ArtifactCount > 3 INTERSECT SELECT SiteName FROM (SELECT SiteName, COUNT(*) FROM ExcavationSites s JOIN Artifacts a ON s.SiteName = a.SiteName WHERE a.AnalysisResult = 'Presence of Organic Materials' GROUP BY SiteName) AS Subquery;"}
{"input": " \ud68c\uc0ac \uc124\ub9bd\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company_founding (id INT PRIMARY KEY, name TEXT, location TEXT, founding_year INT, diversity_metrics TEXT);", "output": "SELECT location, COUNT(*) as count, RANK() OVER (ORDER BY COUNT(*) DESC) as rank FROM company_founding GROUP BY location;"}
{"input": " \uc778\uad6c 1,000\ub9cc \uba85\uc774 \ub118\ub294 \ub3c4\uc2dc\uc758 \uce74\ud14c\uace0\ub9ac\ubcc4 \ud53c\ub4dc\ubc31 \ud56d\ubaa9 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uce74\ud14c\uace0\ub9ac\ubcc4 \ud53c\ub4dc\ubc31 \ud56d\ubaa9\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CategoryFeedback (Id INT, CityId INT, Category VARCHAR(50), Feedback VARCHAR(255)); INSERT INTO CategoryFeedback (Id, CityId, Category, Feedback) VALUES (1, 1, 'Transportation', 'Great public transportation!'), (2, 1, 'Infrastructure', 'Good infrastructure...'), (3, 2, 'Transportation', 'Poor public transportation...'), (4, 2, 'Education', 'Excellent schools...'), (5, 3, 'Transportation', 'Average public transportation...'), (6, 3, 'Infrastructure', 'Excellent infrastructure...');", "output": "SELECT Category, COUNT(*) AS FeedbackCount, (COUNT(*) * 100.0 / SUM(COUNT(*)) OVER ()) AS CategoryPercentage FROM (SELECT Category FROM CategoryFeedback JOIN City ON CategoryFeedback.CityId = City.Id WHERE Population > 1000000 GROUP BY Category, CityId) AS Subquery GROUP BY Category;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc744 \ud30c\uc545\ud558\uace0 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, Country TEXT, AmountDonated DECIMAL, DonationDate DATE); INSERT INTO Donors (DonorID, DonorName, Country, AmountDonated, DonationDate) VALUES (1, 'Jose Hernandez', 'Mexico', 150, '2022-05-03'), (2, 'Aisha Ahmed', 'Kenya', 300, '2022-05-05');", "output": "SELECT DonorID, SUM(AmountDonated) as TotalDonated, RANK() OVER (ORDER BY SUM(AmountDonated) DESC) as Rank FROM Donors WHERE DonationDate >= DATEADD(month, -1, GETDATE()) GROUP BY DonorID;"}
{"input": "\ubbf8\uad6d\uc5d0\uc11c \uc81c\uc870\ub41c \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products(product_id INT, category VARCHAR(255), country VARCHAR(255), co2_emissions INT);INSERT INTO products (product_id, category, country, co2_emissions) VALUES (1, 'Cleanser', 'USA', 50), (2, 'Toner', 'France', 30), (3, 'Serum', 'USA', 75), (4, 'Moisturizer', 'Japan', 40);", "output": "SELECT AVG(co2_emissions) FROM products WHERE category = 'skincare' AND country = 'USA';"}
{"input": " \uc5b4\ub5a4 \uad11\uc0b0\uc774 \ud3c9\uade0\ubcf4\ub2e4 \ud658\uacbd \uc601\ud5a5 \uc810\uc218\uac00 \ub354 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Mines (MineID INT, Name TEXT, Location TEXT, TotalWorkers INT, EnvironmentalImpactScore INT); INSERT INTO Mines (MineID, Name, Location, TotalWorkers, EnvironmentalImpactScore) VALUES (1, 'Golden Mine', 'California', 250, 60), (2, 'Silver Ridge', 'Nevada', 300, 70); CREATE TABLE AverageScores (AvgEnvironmentalImpactScore INT); INSERT INTO AverageScores (AvgEnvironmentalImpactScore) VALUES ((SELECT AVG(EnvironmentalImpactScore) FROM Mines));", "output": "SELECT Name, EnvironmentalImpactScore FROM Mines WHERE EnvironmentalImpactScore > (SELECT AvgEnvironmentalImpactScore FROM AverageScores);"}
{"input": " 2020\ub144 6\uc6d4\uacfc 2020\ub144 8\uc6d4\uc5d0 \ucf00\uc774\uc2a4\ub97c \uac1c\uc124\ud55c \ubaa8\ub4e0 \uace0\uac1d\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE PlayerPlatforms (PlayerID INT, Platform VARCHAR(10)); INSERT INTO PlayerPlatforms (PlayerID, Platform) VALUES (1, 'PC'), (2, 'Mobile'), (3, 'PC'), (4, 'Console'); CREATE TABLE PlayerConsole (PlayerID INT, Console VARCHAR(10)); INSERT INTO PlayerConsole (PlayerID, Console) VALUES (4, 'Xbox'), (5, 'Switch'), (6, 'PlayStation'), (7, 'PC');", "output": "SELECT Platform, COUNT(DISTINCT PlayerID) FROM PlayerPlatforms GROUP BY Platform UNION ALL SELECT Console, COUNT(DISTINCT PlayerID) FROM PlayerConsole GROUP BY Console;"}
{"input": " 2022-03-20\uc5d0 \uc624\ud074\ub79c\ub4dc\ud56d\uc5d0\uc11c \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\ud56d\uae4c\uc9c0 'VesselC'\uc758 \uc0c8\ub85c\uc6b4 \ud56d\ud574\ub97c \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Vessels (Id INT, Name VARCHAR(50), Type VARCHAR(50), MaxSpeed DECIMAL(5,2)); CREATE TABLE PortVoyages (Id INT, VesselId INT, DeparturePort VARCHAR(50), ArrivalPort VARCHAR(50), DepartureDate DATE);", "output": "INSERT INTO PortVoyages (VesselId, DeparturePort, ArrivalPort, DepartureDate) VALUES ((SELECT Id FROM Vessels WHERE Name = 'VesselC'), 'Oakland', 'Los Angeles', '2022-03-20');"}
{"input": "\uccad\uc18c\ub144 \uba58\ud1a0\uc2ed' \ub610\ub294 '\ub178\uc778 \ub3cc\ubd04' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud588\uc9c0\ub9cc \ub458 \ub2e4 \ucc38\uc5ec\ud558\uc9c0\ub294 \uc54a\uc740 \uace0\uc720\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50)); CREATE TABLE VolunteerPrograms (VolunteerID int, ProgramID int); INSERT INTO Volunteers (VolunteerID, VolunteerName) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Alice Johnson'); INSERT INTO VolunteerPrograms (VolunteerID, ProgramID) VALUES (1, 1), (1, 2), (2, 2), (3, 3); CREATE TABLE Programs (ProgramID int, ProgramName varchar(50), Category varchar(50)); INSERT INTO Programs (ProgramID, ProgramName, Category) VALUES (1, 'Youth Mentorship', 'Education'), (2, 'Senior Care', 'Health'), (3, 'Animal Rescue', 'Animal Welfare');", "output": "SELECT COUNT(DISTINCT v.VolunteerID) as UniqueVolunteers FROM VolunteerPrograms vp JOIN Volunteers v ON vp.VolunteerID = v.VolunteerID JOIN Programs p ON vp.ProgramID = p.ProgramID WHERE p.Category IN ('Education', 'Health') GROUP BY v.VolunteerID HAVING COUNT(DISTINCT p.Category) = 1;"}
{"input": " \uc9c0\ub09c 10\ubc88\uc758 \uc0dd\uc0b0 \uc2e4\ud589\uc5d0 \ub300\ud55c \ubc18\uc751\uae30 \uc628\ub3c4 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE production_runs (id INT, reactor_temp FLOAT, run_date DATE); INSERT INTO production_runs (id, reactor_temp, run_date) VALUES (1, 120.5, '2023-03-01'), (2, 125.3, '2023-03-02'), (3, 118.9, '2023-03-03');", "output": "SELECT reactor_temp, LAG(reactor_temp, 1) OVER (ORDER BY run_date) AS prev_reactor_temp FROM production_runs WHERE id >= 11;"}
{"input": " \uac01 \uc6b0\uc8fc\uad6d\uc5d0\ub294 \uba87 \uac1c\uc758 \uc131\uacf5\uc801\uc778 \uc784\ubb34\uac00 \uc788\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE missions (mission_id INT, name VARCHAR(50), space_agency VARCHAR(50), mission_status VARCHAR(10));", "output": "SELECT space_agency, COUNT(*) FROM missions WHERE mission_status = 'successful' GROUP BY space_agency;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \uc5ec\uc131 \uc790\uc6d0\ubd09\uc0ac\uc790 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_demographics (id INT, volunteer_id INT, program_id INT, gender VARCHAR);", "output": "SELECT programs.name as program_name, gender, COUNT(volunteer_demographics.volunteer_id) as total_volunteers, CONCAT(ROUND(COUNT(volunteer_demographics.volunteer_id) * 100.0 / (SELECT COUNT(*) FROM volunteer_demographics WHERE program_id = programs.id), 2), '%') as percentage_female_volunteers FROM volunteer_demographics INNER JOIN programs ON volunteer_demographics.program_id = programs.id WHERE gender = 'Female' GROUP BY programs.name;"}
{"input": " \uc62c\ub9bc\ud53d\uacfc \uc601\uc5f0\ubc29 \uac8c\uc784\uc5d0\uc11c \uae08\uba54\ub2ec\uc744 \ub534 \ubaa8\ub4e0 \uc120\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE athletes (id INT, name TEXT, sport TEXT); CREATE TABLE medals (id INT, athlete INT, event TEXT, medal TEXT);", "output": "SELECT a.name FROM athletes a INNER JOIN medals m1 ON a.id = m1.athlete INNER JOIN medals m2 ON a.id = m2.athlete WHERE m1.event = 'Olympics' AND m2.event = 'Commonwealth Games' AND m1.medal = 'gold' AND m2.medal = 'gold';"}
{"input": " 30\uc138 \uc774\uc0c1\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \uac8c\uc784\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc774\uba70, \ud574\ub2f9 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \uac8c\uc784\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10)); CREATE TABLE Games (GameID INT, GameName VARCHAR(20), Rating INT); CREATE TABLE PlayerGames (PlayerID INT, GameID INT);", "output": "SELECT AVG(Games.Rating), SUM(PlayerGames.PlayerID) as TotalGames FROM Players INNER JOIN PlayerGames ON Players.PlayerID = PlayerGames.PlayerID INNER JOIN Games ON PlayerGames.GameID = Games.GameID WHERE Players.Age > 30;"}
{"input": "\uce90\ub098\ub2e4\uc640 \ubbf8\uad6d\uc758 \ubaa8\ub4e0 \uc218\uc0dd \uc591\uc2dd\uc7a5\uc758 \ud3c9\uade0 \uc218\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE aquatic_farms (id INT, name TEXT, country TEXT, water_temp FLOAT); INSERT INTO aquatic_farms (id, name, country, water_temp) VALUES (1, 'Farm A', 'Canada', 15.3); INSERT INTO aquatic_farms (id, name, country, water_temp) VALUES (2, 'Farm B', 'Canada', 14.8); INSERT INTO aquatic_farms (id, name, country, water_temp) VALUES (3, 'Farm C', 'US', 16.1); INSERT INTO aquatic_farms (id, name, country, water_temp) VALUES (4, 'Farm D', 'US', 15.9);", "output": "SELECT AVG(water_temp) FROM aquatic_farms WHERE country IN ('Canada', 'US');"}
{"input": " 'CCTV' \ub610\ub294 'Al Arabiya'\uc5d0\uc11c \ucd9c\ud310\ud588\uc9c0\ub9cc 'BBC Persian'\uc5d0\uc11c\ub294 \ucd9c\ud310\ud558\uc9c0 \uc54a\uc740 \ud0d0\uc0ac \uc800\ub110\ub9ac\uc998 \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE cctv (project_id INT, project_name VARCHAR(50), source VARCHAR(20), investigative_journalism BOOLEAN); INSERT INTO cctv (project_id, project_name, source, investigative_journalism) VALUES (1, 'Project A', 'CCTV', TRUE), (2, 'Project B', 'CCTV', FALSE); CREATE TABLE al_arabiya (project_id INT, project_name VARCHAR(50), source VARCHAR(20), investigative_journalism BOOLEAN); INSERT INTO al_arabiya (project_id, project_name, source, investigative_journalism) VALUES (3, 'Project C', 'Al Arabiya', TRUE), (4, 'Project D', 'Al Arabiya', FALSE); CREATE TABLE bbc_persian (project_id INT, project_name VARCHAR(50), source VARCHAR(20), investigative_journalism BOOLEAN); INSERT INTO bbc_persian (project_id, project_name, source, investigative_journalism) VALUES (5, 'Project E', 'BBC Persian', TRUE), (6, 'Project F', 'BBC Persian', FALSE);", "output": "SELECT project_name, source FROM cctv WHERE investigative_journalism = TRUE UNION ALL SELECT project_name, source FROM al_arabiya WHERE investigative_journalism = TRUE EXCEPT SELECT project_name, source FROM bbc_persian WHERE investigative_journalism = TRUE;"}
{"input": " \uc9c0\ub09c \ud574 \uc724\ub9ac\uc801 \uc81c\ud488 \ud310\ub9e4\uac00 \uac00\uc7a5 \ub9ce\uc558\ub358 \uc0c1\uc704 10\uac1c \uacf5\uae09\uc5c5\uccb4\ub97c \ud310\ub9e4 \uc218\ub7c9 \uae30\uc900\uc73c\ub85c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE supplier_sales (supplier_id int, product_id int, is_ethical boolean, sales_quantity int, sale_date date);", "output": "SELECT supplier_id, is_ethical, SUM(sales_quantity) AS total_sales, ROW_NUMBER() OVER (PARTITION BY is_ethical ORDER BY SUM(sales_quantity) DESC) as rank FROM supplier_sales WHERE sale_date >= DATEADD(year, -1, GETDATE()) GROUP BY supplier_id, is_ethical HAVING is_ethical = true FETCH FIRST 10 ROWS ONLY;"}
{"input": " \ubd84\uae30\ubcc4 \ud3c9\uc0dd\ud559\uc2b5 \ud504\ub85c\uadf8\ub7a8\uc740 \uba87 \uac1c\ub098 \uc2dc\uc791\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE lifelong_learning (id INT, program_name VARCHAR(50), start_date DATE); INSERT INTO lifelong_learning (id, program_name, start_date) VALUES (1, 'Explore 101', '2022-01-01'), (2, 'Discover 202', '2021-10-15');", "output": "SELECT DATEPART(quarter, start_date), COUNT(*) FROM lifelong_learning GROUP BY DATEPART(quarter, start_date);"}
{"input": " \uad6d\uac00\ubcc4, \ud310\ub9e4\uc5f0\ub3c4\ubcc4 \uad70\uc7a5\ube44 \ud310\ub9e4\ub7c9\uc744 \ucd1d \ud310\ub9e4\uc561 \uae30\uc900\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae34 \uacbd\uc6b0\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales_Data (sale_id INT, sale_value FLOAT, sale_year INT, country VARCHAR(50));", "output": "SELECT country, sale_year, SUM(sale_value) as total_sales, RANK() OVER (ORDER BY SUM(sale_value) DESC) as sale_rank FROM Sales_Data GROUP BY country, sale_year ORDER BY sale_rank;"}
{"input": " '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4'\uc5d0\uc11c \uc5ec\ud589\uc744 \ud558\uc9c0 \uc54a\uc740 \uc804\uae30 \uc2a4\ucfe0\ud130\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE if not exists Cities (id int, name text); INSERT INTO Cities (id, name) VALUES (1, 'Los Angeles'), (2, 'New York'); CREATE TABLE if not exists Vehicles (id int, type text, capacity int, city_id int); INSERT INTO Vehicles (id, type, capacity, city_id) VALUES (1, 'Electric Bus', 50, 1), (2, 'Diesel Bus', 60, 1), (3, 'Electric Bus', 40, 2), (4, 'Shared Bicycle', 1, 2), (5, 'Electric Scooter', 2, 1); CREATE TABLE if not exists Trips (id int, vehicle_id int, duration int); INSERT INTO Trips (id, vehicle_id, duration) VALUES (1, 1, 120), (2, 1, 180), (3, 2, 210), (4, 3, 150), (5, 4, 100), (6, 4, 130);", "output": "DELETE FROM Vehicles WHERE type = 'Electric Scooter' AND id NOT IN (SELECT vehicle_id FROM Trips WHERE city_id = (SELECT id FROM Cities WHERE name = 'Los Angeles'));"}
{"input": " \uad50\uc721 \uc911\uc2ec \uc870\uc9c1\uc5d0 \uae30\uc5ec\ud558\ub294 \uc0c1\uc704 2\uba85\uc758 \ud22c\uc790\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (investment_id INT, investor_id INT, org_id INT, investment_amount INT); INSERT INTO investments (investment_id, investor_id, org_id, investment_amount) VALUES (1, 1, 4, 60000), (2, 2, 5, 80000), (3, 1, 3, 110000), (4, 3, 4, 40000), (5, 2, 3, 70000); CREATE TABLE investors (investor_id INT, investor_name TEXT); INSERT INTO investors (investor_id, investor_name) VALUES (1, 'Investor D'), (2, 'Investor E'), (3, 'Investor F'); CREATE TABLE organizations (org_id INT, org_name TEXT, focus_topic TEXT); INSERT INTO organizations (org_id, org_name, focus_topic) VALUES (3, 'Org 3', 'Education'), (4, 'Org 4', 'Education'), (5, 'Org 5', 'Healthcare');", "output": "SELECT investors.investor_name, SUM(investments.investment_amount) AS total_invested FROM investments JOIN investors ON investments.investor_id = investors.investor_id JOIN organizations ON investments.org_id = organizations.org_id WHERE focus_topic = 'Education' GROUP BY investors.investor_name ORDER BY total_invested DESC LIMIT 2;"}
{"input": " \ube0c\ub77c\uc9c8\uacfc \uc544\ub974\ud5e8\ud2f0\ub098\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourism_revenue (revenue_id INT, country TEXT, revenue FLOAT); INSERT INTO tourism_revenue (revenue_id, country, revenue) VALUES (1, 'Brazil', 1000000), (2, 'Argentina', 1500000);", "output": "SELECT SUM(revenue) FROM tourism_revenue WHERE country IN ('Brazil', 'Argentina');"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4\uac04 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc758 \uc774\ub3d9\ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ticket_sales_history (ticket_id INT, sale_date DATE, sales INT);", "output": "SELECT sale_date, AVG(sales) OVER (ORDER BY sale_date ROWS BETWEEN 89 PRECEDING AND CURRENT ROW) as moving_avg FROM ticket_sales_history WHERE sale_date >= DATEADD(month, -3, GETDATE());"}
{"input": " 2023\ub144\uc5d0 '\ub3d9\ubd80' \uc9c0\uc5ed\uc758 \uad50\uc0ac\uac00 \uc774\uc218\ud55c \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (region VARCHAR(20)); INSERT INTO regions (region) VALUES ('North'), ('South'), ('East'), ('West'); CREATE TABLE teachers (teacher_id INT, region VARCHAR(20)); INSERT INTO teachers (teacher_id, region) VALUES (16, 'East'), (17, 'East'), (18, 'West'), (19, 'West'), (20, 'North'); CREATE TABLE courses (course_id INT, teacher_id INT, completion_date DATE); INSERT INTO courses (course_id, teacher_id, completion_date) VALUES (25, 16, '2023-01-01'), (26, 17, '2023-03-15'), (27, 18, '2023-12-31'), (28, 19, '2023-06-01'), (29, 20, '2023-07-01');", "output": "SELECT COUNT(*) FROM courses JOIN teachers ON courses.teacher_id = teachers.teacher_id JOIN regions ON teachers.region = regions.region WHERE regions.region = 'East' AND YEAR(completion_date) = 2023 AND course_id NOT IN (SELECT course_id FROM courses WHERE teacher_id NOT IN (SELECT teacher_id FROM teachers));"}
{"input": " \uc544\uc9c1 \uc885\ub8cc\ub418\uc9c0 \uc54a\uc740 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE programs (id INT, name VARCHAR(50), location VARCHAR(50), type VARCHAR(50), start_date DATE, end_date DATE);", "output": "SELECT name, location FROM programs WHERE type = 'Restorative Justice' AND end_date > CURDATE();"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\ubcc4 \uba54\ub274 \ud56d\ubaa9\uc758 \ud3c9\uade0 \uac00\uaca9\uc744 \ud3c9\uade0 \uac00\uaca9\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu (id INT, name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2), quantity INT); INSERT INTO menu (id, name, category, price, quantity) VALUES (1, 'Cheeseburger', 'Main', 7.99, 50), (2, 'Fries', 'Side', 2.49, 100), (3, 'Salad', 'Side', 3.99, 80), (4, 'Steak', 'Main', 12.99, 30);", "output": "SELECT category, AVG(price) as avg_price, RANK() OVER (ORDER BY AVG(price) DESC) as rank FROM menu GROUP BY category;"}
{"input": " \ubd81\ubd80\uc9c0\uc5ed \uc0b0\uc5c5\ubcc4 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Waste_Generation (industry VARCHAR(20), region VARCHAR(20), waste_quantity INT); INSERT INTO Waste_Generation (industry, region, waste_quantity) VALUES ('Manufacturing', 'North', 1000), ('Manufacturing', 'South', 1500), ('Retail', 'North', 500), ('Retail', 'East', 700);", "output": "SELECT region, SUM(waste_quantity) FROM Waste_Generation WHERE region = 'North' GROUP BY region;"}
{"input": " \uac01 \uba54\ub274 \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ingredients (id INT, menu_item_id INT, name VARCHAR(50), is_sustainable BOOLEAN); CREATE VIEW sustainable_ingredients AS SELECT menu_item_id, COUNT(*) as num_sustainable FROM ingredients WHERE is_sustainable = TRUE GROUP BY menu_item_id; CREATE VIEW total_ingredients AS SELECT menu_item_id, COUNT(*) as num_total FROM ingredients GROUP BY menu_item_id;", "output": "SELECT mi.name, (SUM(si.num_sustainable) * 100.0 / SUM(ti.num_total)) as sustainability_percentage FROM menu_items mi JOIN sustainable_ingredients si ON mi.id = si.menu_item_id JOIN total_ingredients ti ON mi.id = ti.menu_item_id GROUP BY mi.name;"}
{"input": " \uc6b0\ub9ac \ub18d\uc7a5\uc758 \uac01 \uc5b4\uc885\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ucd5c\ub300 \uc218\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_farms (id INT, name TEXT, location TEXT, water_type TEXT); INSERT INTO fish_farms (id, name, location, water_type) VALUES (1, 'Farm A', 'Seattle', 'Saltwater'); INSERT INTO fish_farms (id, name, location, water_type) VALUES (2, 'Farm B', 'Portland', 'Freshwater'); CREATE TABLE fish_species (id INT, name TEXT); INSERT INTO fish_species (id, name) VALUES (1, 'Salmon'); INSERT INTO fish_species (id, name) VALUES (2, 'Trout'); CREATE TABLE fish_inventory (fish_farm_id INT, fish_species_id INT, quantity INT); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 1, 500); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 2, 300); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 1, 400); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 2, 600); CREATE TABLE water_quality (id INT, fish_farm_id INT, fish_species_id INT, temperature FLOAT, pH FLOAT, dissolved_oxygen FLOAT); INSERT INTO water_quality (id, fish_farm_id, fish_species_id, temperature, pH, dissolved_oxygen) VALUES (1, 1, 1, 18.5, 7.5, 6.5); INSERT INTO water_quality (id, fish_farm_id, fish_species_id, temperature, pH, dissolved_oxygen) VALUES (2, 1, 2, 17.0, 7.4, 7.0); INSERT INTO water_quality (id, fish_farm_id, fish_species_id, temperature, pH, dissolved_oxygen) VALUES (3, 2, 1, 19.0, 7.6, 6.6); INSERT INTO water_quality (id, fish_farm_id, fish_species_id, temperature, pH, dissolved_oxygen) VALUES (4, 2, 2, 16.5, 7.3, 7.1);", "output": "SELECT fs.name AS species_name, MAX(wq.temperature) AS max_temperature FROM fish_inventory fi JOIN fish_farms ff ON fi.fish_farm_id = ff.id JOIN fish_species fs ON fi.fish_species_id = fs.id JOIN water_quality wq ON ff.id = wq.fish_farm_id AND fs.id = wq.fish_species_id GROUP BY fs.name;"}
{"input": "\uce90\ub098\ub2e4\uc758 \uad11\uc5c5 \ubd80\ubb38\uc5d0 \uadfc\ubb34\ud558\ub294 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT, company TEXT, location TEXT, department TEXT, number_of_employees INT); INSERT INTO employees (id, company, location, department, number_of_employees) VALUES (1, 'Canadian Mining Co', 'Canada', 'Mining', 250);", "output": "SELECT SUM(number_of_employees) FROM employees WHERE location = 'Canada' AND department = 'Mining';"}
{"input": " 103\ubc88 \ucc28\ub7c9\uc758 \ucc28\ub7c9\uc815\ube44\uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE vehicle_maintenance (id INT, vehicle_id INT, type TEXT, scheduled_time TIMESTAMP);", "output": "WITH cte AS (DELETE FROM vehicle_maintenance WHERE vehicle_id = 103 RETURNING id) SELECT * FROM cte;"}
{"input": " \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc5d0 \uac01 \uad6d\uac00\uac00 \ubc30\uce58\ud560 \uc218 \uc788\ub294 \ubcd1\ub825\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Troops (TroopID INT, OperationID INT, Country VARCHAR(50), NumberOfTroops INT);", "output": "SELECT OperationID, MAX(NumberOfTroops) FROM Troops GROUP BY OperationID;"}
{"input": " 1\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ud14d\uc0ac\uc2a4\uc5d0\uc11c\ub294 \uba87 \uac74\uc758 \uc791\uc5c5\uc7a5 \uc548\uc804 \uc810\uac80\uc774 \uc2e4\uc2dc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE WorkplaceSafetyInspections (id INT, location VARCHAR, inspection_date DATE, violations INT);", "output": "SELECT COUNT(id) as num_inspections FROM WorkplaceSafetyInspections WHERE location = 'Texas' AND inspection_date LIKE '2023-01-%';"}
{"input": "\uc704\ud5d8 \uc218\uc900\uc774 '\ub0ae\uc74c'\uc778 \uace0\uac1d\uc744 \uc81c\uc678\ud558\uace0 \ub274\uc695\uacfc \uce98\ub9ac\ud3ec\ub2c8\uc544 \ubaa8\ub450\uc5d0 \uacc4\uc88c\ub97c \ubcf4\uc720\ud55c \uace0\uac1d\uc758 \ud3c9\uade0 \uacc4\uc88c \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accounts (AccountID INT, ClientID INT, AccountBalance FLOAT, State VARCHAR(20), RiskLevel VARCHAR(10)); INSERT INTO Accounts (AccountID, ClientID, AccountBalance, State, RiskLevel) VALUES (1, 1, 5000, 'NY', 'high'), (2, 1, 7000, 'CA', 'medium'), (3, 2, 12000, 'NY', 'low'), (4, 3, 3000, 'CA', 'high'), (5, 4, 15000, 'NY', 'medium');", "output": "SELECT AVG(AccountBalance) FROM Accounts WHERE State IN ('NY', 'CA') GROUP BY ClientID HAVING COUNT(DISTINCT State) = 2 AND RiskLevel != 'low';"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ube14\ub85d\uccb4\uc778\uc5d0 \ub300\ud55c \uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regulatory_frameworks (framework_id INT, country VARCHAR(100), framework VARCHAR(100)); INSERT INTO regulatory_frameworks (framework_id, country, framework) VALUES (1, 'US', 'Framework1'), (2, 'US', 'Framework2'), (3, 'Canada', 'Framework3'), (4, 'Canada', 'Framework4'), (5, 'EU', 'Framework5');", "output": "SELECT framework FROM regulatory_frameworks WHERE country IN ('US', 'Canada');"}
{"input": " \ud604\uc9c0 \uacf5\uae09\uc5c5\uccb4 \uc81c\ud488\uc758 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (SupplierID int, SupplierLocation varchar(255)); INSERT INTO Suppliers (SupplierID, SupplierLocation) VALUES (1, 'Local'), (2, 'Non-Local'); CREATE TABLE Orders (OrderID int, SupplierID int, DeliveryTime int);", "output": "SELECT AVG(DeliveryTime) FROM Orders WHERE SupplierID IN (SELECT SupplierID FROM Suppliers WHERE SupplierLocation = 'Local');"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubc94\uc8c4 \uc720\ud615 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE districts (district_id INT, district_name VARCHAR(255));CREATE TABLE crimes (crime_id INT, crime_type VARCHAR(255), district_id INT); INSERT INTO districts VALUES (1, 'Downtown'), (2, 'Uptown'); INSERT INTO crimes VALUES (1, 'Theft', 1), (2, 'Vandalism', 2);", "output": "SELECT district_id, crime_type, COUNT(*) as num_crimes FROM crimes GROUP BY district_id, crime_type ORDER BY district_id, num_crimes DESC"}
{"input": " 2021\ub144 \ub9c8\uc9c0\ub9c9 \ubd84\uae30\uc5d0 \uc5b4\ub5a4 \uc548\uc804 \ud504\ub85c\ud1a0\ucf5c\uc774 \uad6c\ud604\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE safety_protocols (id INT, implemented_date DATE); INSERT INTO safety_protocols (id, implemented_date) VALUES (1, '2021-10-01'), (2, '2021-12-15'), (3, '2021-09-30');", "output": "SELECT * FROM safety_protocols WHERE implemented_date >= '2021-10-01' AND implemented_date < '2022-01-01'"}
{"input": " \ub3d9\ubd81\ubd80 \uc9c0\uc5ed\uc5d0 \ub300\ud574 2022\ub144 \uac01 \ubd84\uae30\uc5d0 \uba87 \uac1c\uc758 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, quarter INT, region VARCHAR(20), cost FLOAT); INSERT INTO projects (id, quarter, region, cost) VALUES (1, 1, 'Northeast', 500000), (2, 2, 'Northeast', 600000), (3, 3, 'Northeast', 700000);", "output": "SELECT quarter, region, COUNT(*) as num_projects FROM projects WHERE region = 'Northeast' GROUP BY quarter;"}
{"input": " \uae30\ubd80\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uac00\uc7a5 \ub192\uc740 \uae08\uc561 \uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, TotalDonation DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonorName, TotalDonation) VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 7000.00), (3, 'Alice Johnson', 6000.00);", "output": "SELECT AVG(TotalDonation) AS AvgDonation, DonorName FROM Donors GROUP BY DonorName ORDER BY AvgDonation DESC;"}
{"input": " \ub3c4\ucfc4\uc640 \uc11c\uc6b8\uc758 \uc804\uc2dc\ud68c\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc29\ubb38\uac1d\uc774 \ucc38\uc11d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10), City VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (1, 25, 'Male', 'Tokyo'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (2, 32, 'Female', 'Seoul'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (3, 45, 'Male', 'Seoul'); CREATE TABLE Exhibitions (ExhibitionID INT, Title VARCHAR(50), City VARCHAR(50)); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (1, 'Art of the 20th Century', 'Tokyo'); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (2, 'Impressionist Masters', 'Seoul'); CREATE TABLE Attendance (VisitorID INT, ExhibitionID INT); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (1, 1); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (2, 2); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (3, 2);", "output": "SELECT SUM(Attendance.VisitorID) FROM Attendance INNER JOIN Visitors ON Attendance.VisitorID = Visitors.VisitorID INNER JOIN Exhibitions ON Attendance.ExhibitionID = Exhibitions.ExhibitionID WHERE Visitors.City IN ('Tokyo', 'Seoul');"}
{"input": " '\ud14d\uc0ac\uc2a4'\uc5d0\uc11c \uc138 \ubc88\uc9f8\ub85c \ud754\ud55c \uc7a5\uc560 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE disability_types (disability_id INT, disability_type VARCHAR(50), state VARCHAR(50), frequency INT); INSERT INTO disability_types (disability_id, disability_type, state, frequency) VALUES (1, 'Mobility', 'Texas', 3000), (2, 'Vision', 'Texas', 2000), (3, 'Hearing', 'Texas', 1500);", "output": "SELECT disability_type FROM (SELECT disability_type, ROW_NUMBER() OVER (PARTITION BY state ORDER BY frequency DESC) as rn FROM disability_types WHERE state = 'Texas') t WHERE rn = 3;"}
{"input": " \ubaa8\ub4e0 \uc74c\uc545 \ud398\uc2a4\ud2f0\ubc8c\uacfc \ud574\ub2f9 \ud398\uc2a4\ud2f0\ubc8c\uc5d0\uc11c \uacf5\uc5f0\ud558\ub294 \uc544\ud2f0\uc2a4\ud2b8\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \uc544\ud2f0\uc2a4\ud2b8 \uc218 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE festival_artist_streams (festival_id INT, artist_id INT); INSERT INTO festival_artist_streams (festival_id, artist_id) VALUES (1, 1), (1, 2), (2, 3); CREATE TABLE festival_artists (festival_id INT, artist_id INT); INSERT INTO festival_artists (festival_id, artist_id) VALUES (1, 1), (1, 2), (2, 3); CREATE TABLE streams (stream_id INT, user_id INT, artist_id INT); INSERT INTO streams (stream_id, user_id, artist_id) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 3);", "output": "SELECT f.festival_name, COUNT(DISTINCT s.user_id) AS unique_users FROM festivals f INNER JOIN festival_artists fa ON f.festival_id = fa.festival_id INNER JOIN festival_artist_streams fas ON fa.artist_id = fas.artist_id INNER JOIN streams s ON fas.artist_id = s.artist_id GROUP BY f.festival_name ORDER BY COUNT(DISTINCT fas.artist_id) DESC;"}
{"input": "mining_Operations' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uc0c1\uc704 2\uac1c \uad11\uc0b0 \ud604\uc7a5\uc5d0 \ub300\ud55c \uc5f0\uac04 \ubb3c \uc18c\ube44 \ucd94\uc138\uc640 \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_sites (site_id INT PRIMARY KEY, site_name VARCHAR(50), annual_water_consumption INT, environmental_impact_score INT); INSERT INTO mining_sites (site_id, site_name, annual_water_consumption, environmental_impact_score) VALUES (1, 'Site A', 1000000, 60), (2, 'Site B', 1500000, 70), (3, 'Site C', 800000, 50), (4, 'Site D', 1200000, 75);", "output": "SELECT site_name, annual_water_consumption, environmental_impact_score FROM (SELECT site_name, annual_water_consumption, environmental_impact_score, ROW_NUMBER() OVER (ORDER BY annual_water_consumption DESC) as rank FROM mining_sites) sub WHERE rank <= 2 ORDER BY sub.annual_water_consumption DESC;"}
{"input": "\ud0dc\ud3c9\uc591 \ubd81\uc11c\ubd80 \uc9c0\uc5ed\uc758 \uacf5\uae09\uc790\uac00 \ud310\ub9e4\ud55c \uc720\uae30\ub18d \uc0ac\uacfc\uc758 \ucd1d \uc218\ub7c9\uc744 \uacf5\uae09\uc790 \uc774\ub984\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uace0 \uacb0\uacfc\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Suppliers (SupplierID INT, SupplierName VARCHAR(100), Region VARCHAR(50)); INSERT INTO Suppliers (SupplierID, SupplierName, Region) VALUES (1, 'SupplierA', 'Pacific Northwest'); INSERT INTO Suppliers (SupplierID, SupplierName, Region) VALUES (2, 'SupplierB', 'Pacific Northwest'); CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), SupplierID INT, IsOrganic BOOLEAN); INSERT INTO Products (ProductID, ProductName, SupplierID, IsOrganic) VALUES (1, 'Organic Apples', 1, true); INSERT INTO Products (ProductID, ProductName, SupplierID, IsOrganic) VALUES (2, 'Regular Apples', 1, false); INSERT INTO Products (ProductID, ProductName, SupplierID, IsOrganic) VALUES (3, 'Organic Apples', 2, true);", "output": "SELECT SupplierName, SUM(Quantity) as TotalQuantity  FROM Sales  JOIN Products ON Sales.ProductID = Products.ProductID  JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID WHERE IsOrganic = true AND Suppliers.Region = 'Pacific Northwest' GROUP BY SupplierName ORDER BY TotalQuantity DESC;"}
{"input": "\uad50\uc721\uacfc \ubcf4\uac74 \ubd84\uc57c\uc5d0 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donor_data (donor_id INT, donation DECIMAL(10,2), sector TEXT); INSERT INTO donor_data (donor_id, donation, sector) VALUES (1, 250.00, 'education'), (2, 300.00, 'health'), (3, 150.00, 'education'), (1, 100.00, 'health');", "output": "SELECT donor_id FROM donor_data WHERE sector = 'education' INTERSECT SELECT donor_id FROM donor_data WHERE sector = 'health';"}
{"input": " \ud3c9\uade0 \uc5f0\ub839\uacfc \ud568\uaed8 \uc18c\ube44\uc790 \uc0ac\uc774\uc5d0\uc11c \uc724\ub9ac\uc758\uc2dd \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc704\uce58\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE consumers (id INT PRIMARY KEY, name VARCHAR(255), age INT, location VARCHAR(255), ethical_awareness INT);", "output": "SELECT c.location, AVG(c.age) as avg_age, SUM(c.ethical_awareness) as total_awareness, RANK() OVER (PARTITION BY 1 ORDER BY total_awareness DESC) as rank FROM consumers c GROUP BY c.location HAVING rank <= 3;"}
{"input": " \ud2b9\uc815 \uac74\ubb3c\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ud1b5\uacc4 \uc0ad\uc81c", "context": "CREATE TABLE buildings (id INT, name TEXT); CREATE TABLE energy_efficiency_stats (building_id INT, year INT, energy_savings FLOAT); INSERT INTO buildings (id, name) VALUES (1, 'Headquarters'), (2, 'Branch Office'); INSERT INTO energy_efficiency_stats (building_id, year, energy_savings) VALUES (1, 2020, 20000.00), (1, 2021, 25000.00), (2, 2020, 15000.00);", "output": "WITH cte_delete AS (DELETE FROM energy_efficiency_stats WHERE building_id = 1) SELECT * FROM buildings WHERE id = 1;"}
{"input": " \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \uc628\ub3c4 \uc0c1\uc2b9\uc744 \ubcf4\uc774\ub294 \uc720\uc804 \uc5f0\uad6c \uc2e4\ud5d8\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.experiments (id INT, experiment_name VARCHAR(255), temperature_delta INT); INSERT INTO genetics.experiments (id, experiment_name, temperature_delta) VALUES (1, 'CRISPR-Cas9', 15), (2, 'Gene Editing', 22), (3, 'Genetic Fusion', 18);", "output": "SELECT experiment_name, temperature_delta FROM genetics.experiments WHERE temperature_delta > (SELECT AVG(temperature_delta) FROM genetics.experiments);"}
{"input": " \ud30c\ube14\ub85c \ud53c\uce74\uc18c\uc758 \uc791\ud488\uc774 \ucc3d\uc791\ub41c \ucd5c\ucd08\uc758 \uc5f0\ub3c4\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, artist_name VARCHAR(50), year_created INT); INSERT INTO Artworks (artwork_id, artist_name, year_created) VALUES (1, 'Pablo Picasso', 1907), (2, 'Pablo Picasso', 1937);", "output": "SELECT year_created FROM Artworks WHERE artist_name = 'Pablo Picasso' AND year_created = (SELECT MIN(year_created) FROM Artworks WHERE artist_name = 'Pablo Picasso');"}
{"input": " '\ub9c8\ub9ac\uc624 \uce74\ud2b8 8'\ubcf4\ub2e4 '\ub85c\ucf13 \ub9ac\uadf8'\uc5d0\uc11c \ub354 \ub192\uc740 \uc810\uc218\ub97c \ub2ec\uc131\ud55c \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE player_scores (player_id INT, game_id INT, score INT, PRIMARY KEY (player_id, game_id)); INSERT INTO player_scores VALUES (1, 1, 1000), (1, 2, 800), (2, 1, 1200), (2, 2, 900), (3, 1, 700), (3, 2, 1100); CREATE TABLE game_titles (game_id INT, title VARCHAR(50), PRIMARY KEY (game_id)); INSERT INTO game_titles VALUES (1, 'Rocket League'), (2, 'Mario Kart 8');", "output": "SELECT p.player_id FROM player_scores p1 INNER JOIN player_scores p2 ON p1.player_id = p2.player_id INNER JOIN game_titles g1 ON p1.game_id = g1.game_id INNER JOIN game_titles g2 ON p2.game_id = g2.game_id WHERE g1.title = 'Rocket League' AND g2.title = 'Mario Kart 8' AND p1.score > p2.score;"}
{"input": " \uad6c\ub3c5\uc790 \uc720\ud615\ubcc4 \uac01 \uad6d\uac00\uc758 \uad6c\ub3c5\uc790 \ubd84\ud3ec \ud45c\uc2dc", "context": "CREATE TABLE subscriber_data (subscriber_id INT, subscriber_type VARCHAR(20), country VARCHAR(20)); INSERT INTO subscriber_data (subscriber_id, subscriber_type, country) VALUES (1, 'Regular', 'USA'), (2, 'Test', 'Canada'), (3, 'Regular', 'Mexico');", "output": "SELECT country, subscriber_type, COUNT(*) as subscriber_count FROM subscriber_data GROUP BY country, subscriber_type;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4\uac04 \uccad\uad6c\uae08\uc561\uc758 \uc774\ub3d9\ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (ClaimID int, ClaimDate date, ClaimAmount decimal(10, 2)); INSERT INTO Claims (ClaimID, ClaimDate, ClaimAmount) VALUES (1, '2022-01-15', 4500.00), (2, '2022-02-03', 3200.00), (3, '2022-03-17', 5700.00), (4, '2022-04-01', 6100.00), (5, '2022-05-12', 4200.00), (6, '2022-06-20', 3800.00);", "output": "SELECT ClaimDate, AVG(ClaimAmount) OVER (ORDER BY ClaimDate ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MovingAverage FROM Claims"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ube0c\ub77c\uc9c8\ubcf4\ub2e4 \ub370\uc774\ud130 \uac1c\uc778\uc815\ubcf4 \ubcf4\ud638\ubc95\uc774 \ub354 \uc5c4\uaca9\ud55c \uad6d\uac00\uc5d0\uc11c \uc2e0\uaddc \uc0ac\uc6a9\uc790\uac00 \uba87 \uba85\uc774\ub098 \ud569\ub958\ud588\ub098\uc694?", "context": "CREATE TABLE users (user_id INT, country VARCHAR(50), joined_date DATE);CREATE TABLE data_privacy_laws (country VARCHAR(50), privacy_level INT); INSERT INTO users (user_id, country, joined_date) VALUES (1, 'Brazil', '2023-03-15'), (2, 'European Union', '2023-03-27'); INSERT INTO data_privacy_laws (country, privacy_level) VALUES ('Brazil', 5), ('European Union', 8);", "output": "SELECT COUNT(user_id) FROM users JOIN data_privacy_laws ON users.country = data_privacy_laws.country WHERE data_privacy_laws.privacy_level > (SELECT privacy_level FROM data_privacy_laws WHERE country = 'Brazil') AND joined_date >= DATEADD(week, -1, CURRENT_DATE);"}
{"input": " \ud2b9\uc815 \uc694\ub9ac \uc720\ud615\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \uba54\ub274 \ud56d\ubaa9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu_items (menu_item_id INT, menu_item VARCHAR(255), cuisine VARCHAR(255)); INSERT INTO menu_items (menu_item_id, menu_item, cuisine) VALUES (1, 'Pizza', 'Italian'), (2, 'Tacos', 'Mexican'), (3, 'Ramen', 'Chinese'), (4, 'Pasta', 'Italian');", "output": "SELECT DISTINCT menu_item FROM menu_items WHERE cuisine = 'Italian';"}
{"input": " '\uc778\uc0ac', '\uc6b4\uc601' \ubc0f 'IT' \ubd80\uc11c\uc5d0\uc11c \uc81c\ub300\ub85c \ub300\ud45c\ub418\uc9c0 \uc54a\ub294 \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucd1d \uc9c1\uc6d0 \uc218\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE employees (id INT, name VARCHAR(50), community VARCHAR(50), department VARCHAR(50), role VARCHAR(50)); INSERT INTO employees (id, name, community, department, role) VALUES (1, 'John Doe', 'majority', 'hr', 'employee'), (2, 'Jane Smith', 'majority', 'hr', 'manager'), (3, 'Bob Johnson', 'majority', 'operations', 'employee'), (4, 'Alice', 'underrepresented', 'it', 'employee'), (5, 'Eli', 'underrepresented', 'research', 'employee');", "output": "SELECT COUNT(*) FROM employees WHERE department IN ('hr', 'operations', 'it') AND community = 'underrepresented';"}
{"input": " '\ud30c\ub77c\ubca4 \ubb34\ucca8\uac00' \ub77c\ubca8\uc774 \ubd99\uc5b4 \uc788\uace0 '\uc720\uae30\ub18d' \ub77c\ubca8\uc774 \ubd99\uc740 \uc81c\ud488\uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc81c\ud488\uc758 \ud3c9\uade0 \ud310\ub9e4 \uc218\uc775\ubcf4\ub2e4 \ud310\ub9e4 \uc218\uc775\uc774 \ub192\uc740 \ubbf8\uc6a9 \uc81c\ud488\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE ProductsParabenFreeSalesData (product_id INT, product_name TEXT, is_paraben_free BOOLEAN, sale_revenue FLOAT, is_organic BOOLEAN); INSERT INTO ProductsParabenFreeSalesData (product_id, product_name, is_paraben_free, sale_revenue, is_organic) VALUES (1, 'Product A', true, 75, true), (2, 'Product B', false, 30, false), (3, 'Product C', false, 60, false), (4, 'Product D', true, 120, true), (5, 'Product E', false, 45, false);", "output": "SELECT product_id, product_name, sale_revenue FROM ProductsParabenFreeSalesData WHERE is_paraben_free = true AND is_organic = false AND sale_revenue > (SELECT AVG(sale_revenue) FROM ProductsParabenFreeSalesData WHERE is_organic = false);"}
{"input": " \ud55c \uc7a5\ub974\uc758 \uac8c\uc784\ub9cc \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE PlayerGames (PlayerID INT, GameID INT, GameGenre TEXT); INSERT INTO PlayerGames (PlayerID, GameID, GameGenre) VALUES (1, 1, 'Action'), (1, 2, 'RPG'), (2, 3, 'Strategy'), (2, 4, 'Simulation'), (3, 5, 'FPS'), (3, 6, 'FPS'), (4, 7, 'Action'), (4, 8, 'RPG'), (5, 9, 'Strategy'), (5, 10, 'Simulation'), (6, 11, 'Action'); CREATE TABLE Players (PlayerID INT); INSERT INTO Players (PlayerID) VALUES (1), (2), (3), (4), (5), (6);", "output": "SELECT COUNT(DISTINCT PlayerID) FROM (SELECT PlayerID FROM PlayerGames GROUP BY PlayerID HAVING COUNT(DISTINCT GameGenre) = 1) AS SingleGenrePlayers;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uc2dc\uc791\ub41c \uac8c\uc784\uc5d0\uc11c \ubbf8\uad6d \ud50c\ub808\uc774\uc5b4\uac00 \uc2b9\ub9ac\ud55c \ud3c9\uade0 \uacbd\uae30 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (game_id INT, player_id INT, game_date DATE);CREATE TABLE players (player_id INT, player_country VARCHAR(255));", "output": "SELECT AVG(wins) FROM (SELECT COUNT(games.game_id) AS wins FROM games JOIN players ON games.player_id = players.player_id WHERE players.player_country = 'United States' AND games.game_date >= (CURRENT_DATE - INTERVAL '30' DAY) GROUP BY games.player_id) AS subquery;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \ubd84\uae30\ubcc4 \uc21c\ud658 \uacf5\uae09\ub9dd \uc774\ub2c8\uc154\ud2f0\ube0c\ub85c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE revenue (id INT, date DATE, circular_supply_chain BOOLEAN, amount DECIMAL(10,2));", "output": "SELECT DATEPART(quarter, date) as quarter, SUM(amount) as total_revenue FROM revenue WHERE circular_supply_chain = TRUE AND date >= DATEADD(year, -2, GETDATE()) GROUP BY DATEPART(quarter, date);"}
{"input": " \ubaa8\ub4e0 \uc791\ubb3c\uc5d0 \ub300\ud574 \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \ub3d9\ubd80 \uc9c0\uc5ed\uc758 \ub18d\uc7a5\uc744 \ucc3e\uc544 \ub18d\uc7a5 \uc774\ub984, \uc791\ubb3c, \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Farm (id INT, name TEXT, crop TEXT, yield_per_acre FLOAT, region TEXT); INSERT INTO Farm (id, name, crop, yield_per_acre, region) VALUES (1, 'Smith Farm', 'Corn', 150, 'Eastern'), (2, 'Jones Farm', 'Soybeans', 80, 'Eastern'), (3, 'Brown Farm', 'Potatoes', 100, 'Eastern');", "output": "SELECT name, crop, yield_per_acre FROM (SELECT name, crop, yield_per_acre, RANK() OVER (PARTITION BY region ORDER BY yield_per_acre) as rn FROM Farm WHERE region = 'Eastern') x WHERE rn = 1;"}
{"input": " 2019\ub144 \uc8fc\ubcc4 \uc7ac\ud5a5\uad70\uc778 \uace0\uc6a9 \ud1b5\uacc4 \ud45c\uc2dc", "context": "CREATE TABLE veteran_employment (state VARCHAR(255), year INT, employment_rate FLOAT); INSERT INTO veteran_employment (state, year, employment_rate) VALUES ('CA', 2019, 0.75); INSERT INTO veteran_employment (state, year, employment_rate) VALUES ('NY', 2018, 0.65);", "output": "SELECT state, employment_rate FROM veteran_employment WHERE year = 2019;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ucf58\uc11c\ud2b8\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \ucd9c\uc5f0\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ConcertAppearances (AppearanceID INT, Artist VARCHAR(255), Venue VARCHAR(255), Country VARCHAR(255), Year INT, Appearances INT); INSERT INTO ConcertAppearances VALUES (10, 'Bruce Springsteen', 'Madison Square Garden', 'USA', 2022, 5); INSERT INTO ConcertAppearances VALUES (11, 'Billy Joel', 'Madison Square Garden', 'USA', 2022, 12);", "output": "SELECT Artist, MAX(Appearances) FROM ConcertAppearances WHERE Country = 'USA' GROUP BY Artist;"}
{"input": " Athletics_performance \ub370\uc774\ud130\uc138\ud2b8\uc5d0\uc11c \uac1c\uc778 \ucd5c\uace0 \uae30\ub85d\uc744 \ub2ec\uc131\ud55c \uc120\uc218\uc758 \uc774\ub984\uc744 \ucd5c\uace0 \uae30\ub85d \ub0a0\uc9dc\uc21c\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE athletes_performance (athlete VARCHAR(50), performance FLOAT, best_date DATE);", "output": "SELECT athlete FROM athletes_performance WHERE performance = (SELECT MAX(performance) FROM athletes_performance GROUP BY athlete) ORDER BY best_date DESC;"}
{"input": " RPG \uc7a5\ub974 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uc544\uc2dc\uc544 \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players_region (player_id INT, region TEXT); INSERT INTO players_region VALUES (1, 'Asia'), (2, 'Europe'), (3, 'North America'); CREATE TABLE games (game_id INT, game_name TEXT, genre TEXT); INSERT INTO games VALUES (1, 'Game 1', 'RPG'), (2, 'Game 2', 'Strategy'); CREATE TABLE player_games (player_id INT, game_id INT, playtime INT); INSERT INTO player_games VALUES (1, 1, 20), (1, 2, 10), (2, 1, 15), (3, 2, 25);", "output": "SELECT SUM(player_games.playtime) FROM player_games JOIN players_region ON player_games.player_id = players_region.player_id JOIN games ON player_games.game_id = games.game_id WHERE players_region.region = 'Asia' AND games.genre = 'RPG';"}
{"input": "2022\ub144 1\uc6d4 \uce90\ub098\ub2e4\uc758 \uc7ac\uc0dd \uac00\ub2a5 \uc5d0\ub108\uc9c0\uc6d0\ubcc4 \ucd1d \uc5d0\ub108\uc9c0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_production (id INT, country VARCHAR(50), source VARCHAR(50), production FLOAT, timestamp TIMESTAMP); INSERT INTO energy_production (id, country, source, production, timestamp) VALUES (1, 'Canada', 'Wind', 500.2, '2022-01-01 10:00:00'), (2, 'Canada', 'Solar', 700.3, '2022-01-02 15:00:00');", "output": "SELECT source, SUM(production) as total_production FROM energy_production WHERE country = 'Canada' AND timestamp BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59' AND source IN ('Wind', 'Solar') GROUP BY source;"}
{"input": " 2021\ub144 \uc9c0\uc911\ud574\uc758 \ubaa8\ub4e0 \uc120\ubc15\uc5d0 \ub300\ud55c \uac80\uc0ac \uac04\uaca9\uc740 \ud3c9\uade0 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO Vessels (id, name, region) VALUES (1, 'VesselA', 'Mediterranean'); INSERT INTO Vessels (id, name, region) VALUES (2, 'VesselB', 'Mediterranean'); CREATE TABLE Inspections (id INT, vessel_id INT, inspection_date DATE); INSERT INTO Inspections (id, vessel_id, inspection_date) VALUES (1, 1, '2021-01-01'); INSERT INTO Inspections (id, vessel_id, inspection_date) VALUES (2, 1, '2021-06-01');", "output": "SELECT AVG(DATEDIFF(Inspections.inspection_date, LAG(Inspections.inspection_date, 1) OVER (PARTITION BY Inspections.vessel_id ORDER BY Inspections.inspection_date))) FROM Inspections INNER JOIN Vessels ON Inspections.vessel_id = Vessels.id WHERE Vessels.region = 'Mediterranean' AND YEAR(Inspections.inspection_date) = 2021;"}
{"input": " \ub274\uc695\uc8fc\uc5d0\uc11c \uc0ac\uac74 \uc774\ub984\uc5d0 '\uc774\ud63c'\uc774\ub77c\ub294 \ub2e8\uc5b4\uac00 \ud3ec\ud568\ub41c \uc0ac\uac74\uc758 \uc0ac\uac74 \ubc88\ud638, \uc758\ub8b0\uc778 \uc8fc\uc18c, \ucd1d \uccad\uad6c \uae08\uc561\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Cases (CaseID INT, CaseName VARCHAR(255), ClientAddress VARCHAR(255), AttorneyID INT); INSERT INTO Cases (CaseID, CaseName, ClientAddress, AttorneyID) VALUES (1, 'Smith v. Johnson - Divorce', '123 Main St, New York, NY', 1); CREATE TABLE Billing (BillingID INT, CaseID INT, Amount DECIMAL(10, 2));", "output": "SELECT Cases.CaseID, Cases.ClientAddress, SUM(Billing.Amount) FROM Cases INNER JOIN Billing ON Cases.CaseID = Billing.CaseID WHERE Cases.CaseName LIKE '%divorce%' AND Cases.AttorneyID IN (SELECT AttorneyID FROM Attorneys WHERE State = 'New York') GROUP BY Cases.CaseID, Cases.ClientAddress ORDER BY SUM(Billing.Amount) DESC;"}
{"input": " \uac01 \ud53c\ud2b8\ub2c8\uc2a4 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc218\uc775\uc740 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (sale_id INT, program_id INT, revenue FLOAT); INSERT INTO sales (sale_id, program_id, revenue) VALUES (1, 1, 500), (2, 2, 750), (3, 3, 300);", "output": "SELECT program_id, SUM(revenue) as total_revenue FROM sales GROUP BY program_id ORDER BY total_revenue DESC;"}
{"input": " 2022\ub144 \ub304\uc2a4 \ud504\ub85c\uadf8\ub7a8 \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dance_attendance (id INT, attendee_age INT, program_type VARCHAR(255), visit_year INT);", "output": "SELECT program_type, AVG(attendee_age) OVER (PARTITION BY program_type) AS avg_age_by_program_type  FROM dance_attendance WHERE visit_year = 2022 AND program_type LIKE '%dance%' ORDER BY program_type;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\uc640 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc758 \ucd1d \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE marine_species (id INT, species VARCHAR(255)); INSERT INTO marine_species (id, species) VALUES (1, 'Dolphin'), (2, 'Shark'); CREATE TABLE pollution_control (id INT, initiative VARCHAR(255)); INSERT INTO pollution_control (id, initiative) VALUES (1, 'Beach Cleanup'), (2, 'Ocean Floor Mapping');", "output": "SELECT COUNT(*) FROM marine_species UNION ALL SELECT COUNT(*) FROM pollution_control;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uac01 \ubd80\uc11c\ubcc4\ub85c \uc811\uadfc\uc131 \uc218\uc815\uc5d0 \ud560\ub2f9\ub41c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accessibility_Budget (budget_year INT, department TEXT, amount DECIMAL(5,2));", "output": "SELECT department, AVG(amount) FROM Accessibility_Budget WHERE budget_year BETWEEN YEAR(CURRENT_DATE)-2 AND YEAR(CURRENT_DATE) GROUP BY department;"}
{"input": " \uc778\ub3c4\uc758 \uacf5\uc911 \ubcf4\uac74 \uc815\ucc45\uc740 \uc2dc\uc791 \ub0a0\uc9dc\ubcc4\ub85c \uc5b4\ub5bb\uac8c \uc815\ub82c\ub418\uc5b4 \uc788\ub098\uc694?", "context": "CREATE TABLE public_health_policies (id INT, name VARCHAR, state VARCHAR, country VARCHAR, start_date DATE, end_date DATE); INSERT INTO public_health_policies (id, name, state, country, start_date, end_date) VALUES (1, 'Vaccination Program', 'Maharashtra', 'India', '2021-03-01', '2021-12-31'); INSERT INTO public_health_policies (id, name, state, country, start_date, end_date) VALUES (2, 'Clean Water Initiative', 'Delhi', 'India', '2021-01-01', '2021-11-30');", "output": "SELECT public_health_policies.*, ROW_NUMBER() OVER(PARTITION BY public_health_policies.country ORDER BY public_health_policies.start_date DESC) as rank FROM public_health_policies WHERE public_health_policies.country = 'India';"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd80\uc11c\uc5d0\uc11c \uc5f0\ubd09\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c1\uc6d0 3\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'John', 'Doe', 'Engineering', 75000.00), (2, 'Jane', 'Doe', 'Engineering', 80000.00), (3, 'Mike', 'Smith', 'Marketing', 60000.00), (4, 'Samantha', 'Johnson', 'Engineering', 85000.00), (5, 'David', 'Brown', 'Engineering', 82000.00);", "output": "SELECT EmployeeID, FirstName, LastName, Department, Salary, RANK() OVER (PARTITION BY Department ORDER BY Salary DESC) AS Rank FROM Employees WHERE Department = 'Engineering';"}
{"input": " \uc7ac\ud65c\uc6a9\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc758 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc774\uba70, \uc774\ub97c \uc804 \uc138\uacc4 \ud3c9\uade0\uacfc \uc5b4\ub5bb\uac8c \ube44\uad50\ud569\ub2c8\uae4c?", "context": "CREATE TABLE CountryWasteMetrics (CountryName TEXT, TotalWasteGenerated FLOAT, RecyclingRate FLOAT); INSERT INTO CountryWasteMetrics (CountryName, TotalWasteGenerated, RecyclingRate) VALUES ('USA', 250, 35), ('China', 300, 20), ('Germany', 100, 65), ('Canada', 120, 45), ('India', 180, 15), ('GlobalAvg', 150, 30);", "output": "SELECT SUM(TotalWasteGenerated) as TotalWaste, RecyclingRate FROM CountryWasteMetrics WHERE CountryName IN (SELECT CountryName FROM CountryWasteMetrics ORDER BY RecyclingRate DESC LIMIT 5) UNION SELECT 'GlobalAvg', AVG(RecyclingRate) FROM CountryWasteMetrics WHERE CountryName = 'GlobalAvg';"}
{"input": " \uae30\ubd80\uc790\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(255)); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10, 2));", "output": "SELECT DonorID, DonorName, AVG(DonationAmount) AS AvgDonation, RANK() OVER (ORDER BY AVG(DonationAmount) DESC) AS DonorRank FROM Donors JOIN Donations ON Donors.DonorID = Donations.DonorID GROUP BY DonorID, DonorName;"}
{"input": " \uc9c0\uc18d\uac00\ub2a5\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc758\ub958 \uc81c\uc870\uc5c5\uccb4\uc758 \uc774\ub984\uacfc \uc704\uce58, \uadf8\ub9ac\uace0 \ud574\ub2f9 \uc18c\ub9e4\uc5c5\uccb4 \ud310\ub9e4\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE manufacturers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sustainability_score INT); INSERT INTO manufacturers (id, name, location, sustainability_score) VALUES (1, 'Manufacturer A', 'Country A', 90); INSERT INTO manufacturers (id, name, location, sustainability_score) VALUES (2, 'Manufacturer B', 'Country B', 95); CREATE TABLE retailers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sales_volume INT); INSERT INTO retailers (id, name, location, sales_volume) VALUES (1, 'Retailer A', 'Country A', 600); INSERT INTO retailers (id, name, location, sales_volume) VALUES (2, 'Retailer B', 'Country B', 750);", "output": "SELECT m.name, m.location, m.sustainability_score, r.sales_volume FROM manufacturers m INNER JOIN (SELECT location, MAX(sustainability_score) AS max_score FROM manufacturers GROUP BY location) max_scores ON m.location = max_scores.location AND m.sustainability_score = max_scores.max_score INNER JOIN retailers r ON m.location = r.location;"}
{"input": " 2020\ub144 \ub3c4\uc2dc\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donor VARCHAR(50), city VARCHAR(50), amount FLOAT, donation_date DATE); INSERT INTO Donations (id, donor, city, amount, donation_date) VALUES (1, 'John Doe', 'New York', 500, '2020-01-01'); INSERT INTO Donations (id, donor, city, amount, donation_date) VALUES (2, 'Jane Smith', 'Los Angeles', 300, '2020-02-01');", "output": "SELECT city, SUM(amount) as total_donation FROM Donations WHERE YEAR(donation_date) = 2020 GROUP BY city;"}
{"input": "\uac01 \uad6d\uac00\uc758 \uc5f0\uac04 \ucd1d \uc5b4\ub958 \ubb34\uac8c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Country_Year (Country TEXT, Year INT, Fish_Weight FLOAT); INSERT INTO Country_Year (Country, Year, Fish_Weight) VALUES ('China', 2019, 1200000), ('Indonesia', 2019, 800000), ('India', 2019, 600000), ('China', 2020, 1400000), ('Indonesia', 2020, 900000), ('India', 2020, 700000);", "output": "SELECT Country, Year, SUM(Fish_Weight) OVER (PARTITION BY Country) AS Total_Fish_Weight FROM Country_Year;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \uad11\uc0b0\uc758 \ubb3c \uc0ac\uc6a9\ub7c9 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (id INT, mine_id INT, impact_type VARCHAR(50), value INT, PRIMARY KEY (id), FOREIGN KEY (mine_id) REFERENCES mines(id)); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (1, 1, 'Water Usage', 3000); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (2, 1, 'Water Usage', 3100); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (3, 2, 'Water Usage', 5000); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (4, 2, 'Water Usage', 5200); CREATE TABLE mines (id INT, name VARCHAR(50), location VARCHAR(50), annual_production INT, PRIMARY KEY (id)); INSERT INTO mines (id, name, location, annual_production) VALUES (1, 'Golden Mine', 'California', 15000); INSERT INTO mines (id, name, location, annual_production) VALUES (2, 'Silver Mine', 'Nevada', 22000);", "output": "SELECT mine_id, impact_type, value, LAG(value) OVER (PARTITION BY mine_id ORDER BY id) as previous_value FROM environmental_impact;"}
{"input": " \ub3c5\uc77c\uacfc \ud504\ub791\uc2a4\uc758 \ud0dc\uc591\uad11 \ubc0f \ud48d\ub825 \ubc1c\uc804 \uc6a9\ub7c9\uc744 \ud569\uce5c \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE renewable_generation (country TEXT, solar INTEGER, wind INTEGER); INSERT INTO renewable_generation (country, solar, wind) VALUES ('Germany', 50000, 30000), ('France', 35000, 25000), ('Spain', 20000, 22000), ('Italy', 18000, 19000), ('United Kingdom', 15000, 17000);", "output": "(SELECT solar + wind FROM renewable_generation WHERE country = 'Germany') UNION (SELECT solar + wind FROM renewable_generation WHERE country = 'France')"}
{"input": " \ucf00\ub0d0\uc758 \ub18d\uc5c5 \ud601\uc2e0 \ubd84\uc57c \uc5ec\uc131 \uc8fc\ub3c4 \ub2e8\uccb4\uac00 \ud504\ub85c\uc81d\ud2b8\ub2f9 \ubc1b\uc740 \ud3c9\uade0 \ubcf4\uc870\uae08 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE agricultural_innovations (id INT, organization_name TEXT, sector TEXT, country TEXT, grant_amount DECIMAL(10,2)); INSERT INTO agricultural_innovations (id, organization_name, sector, country, grant_amount) VALUES (1, 'FarmHer Kenya', 'Agriculture', 'Kenya', 5000.00), (2, 'Green Innovations', 'Agriculture', 'Kenya', 8000.00), (3, 'Agri-Women Empowerment', 'Agriculture', 'Kenya', 12000.00);", "output": "SELECT AVG(grant_amount) FROM agricultural_innovations WHERE country = 'Kenya' AND sector = 'Agriculture' AND organization_name IN (SELECT organization_name FROM agricultural_innovations WHERE organization_name LIKE '%women%');"}
{"input": "\uac00\uc7a5 \ucd5c\uadfc \ub2ec\uc758 \uc8fc\ubcc4 \uc7ac\ud5a5\uad70\uc778 \uace0\uc6a9 \ud1b5\uacc4\ub97c \uace0\uc6a9\ub960\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE veteran_employment (state VARCHAR(2), employment_rate DECIMAL(4,2), snapshot_date DATE); INSERT INTO veteran_employment VALUES ('HI', 2.1, '2022-02-15'), ('AK', 2.5, '2022-02-15'), ('MT', 3.0, '2022-02-15');", "output": "SELECT state, employment_rate FROM veteran_employment WHERE snapshot_date = (SELECT MAX(snapshot_date) FROM veteran_employment) ORDER BY employment_rate DESC;"}
{"input": "2019\ub144\uc5d0 \uc544\ud504\ub9ac\uce74\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE climate_adaptation (region VARCHAR(50), year INT, projects INT); INSERT INTO climate_adaptation (region, year, projects) VALUES ('Africa', 2019, 120), ('Asia', 2019, 150), ('South America', 2019, 100);", "output": "SELECT projects FROM climate_adaptation WHERE region = 'Africa' AND year = 2019;"}
{"input": " \ud50c\ub85c\ub9ac\ub2e4\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc724\ub9ac\uc801\uc73c\ub85c \uc0dd\uc0b0\ub41c \uc81c\ud488\uc758 \ud3c9\uade0 \uc81c\ud488 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Product_Ratings (product_id INT, rating INT); INSERT INTO Product_Ratings (product_id, rating) VALUES (1, 4), (2, 3), (3, 5), (4, 2), (5, 5);", "output": "SELECT AVG(rating) FROM Ethical_Products EP JOIN Sales S ON EP.product_id = S.product_id JOIN Product_Ratings PR ON EP.product_id = PR.product_id WHERE is_ethically_sourced = true AND sale_location = 'Florida';"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uc9c0\uc5ed\ubcc4\ub85c \uc870\ub2ec\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sourcing (id INT, region VARCHAR(50), ingredient VARCHAR(50), quantity INT, sustainable BOOLEAN); INSERT INTO sourcing (id, region, ingredient, quantity, sustainable) VALUES (1, 'North', 'Quinoa', 100, true), (2, 'South', 'Lentils', 150, true), (3, 'East', 'Rice', 80, false);", "output": "SELECT region, SUM(quantity) as total_quantity FROM sourcing WHERE sustainable = true AND datepart(yy, date) = 2022 AND datepart(qq, date) = 1 GROUP BY region;"}
{"input": " 'N' \ub178\uc870\uc640 'O' \ub178\uc870\uc758 \uc870\ud569\uc6d0 \uc218\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE UnionN(member_id INT); INSERT INTO UnionN(member_id) VALUES(14001), (14002), (14003); CREATE TABLE UnionO(member_id INT); INSERT INTO UnionO(member_id) VALUES(15001), (15002);", "output": "SELECT COUNT(*) FROM UnionN EXCEPT SELECT COUNT(*) FROM UnionO;"}
{"input": " \ub0a8\uadf9\ud574\uc758 \ucd5c\ub300 \ud574\uc800 \ub9e4\ud551 \ud504\ub85c\uc81d\ud2b8 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_floor_mapping_projects (id INT, project TEXT, region TEXT, depth FLOAT); INSERT INTO ocean_floor_mapping_projects (id, project, region, depth) VALUES (1, 'Project A', 'Southern Ocean', 6000.1), (2, 'Project B', 'Indian Ocean', 5000.0), (3, 'Project C', 'Southern Ocean', 7000.2);", "output": "SELECT MAX(depth) FROM ocean_floor_mapping_projects WHERE region = 'Southern Ocean';"}
{"input": " \uad11\uc0b0\ubcc4\ub85c \ubc1c\uc0dd\ud558\ub294 \ud3d0\uae30\ubb3c\uc758 \ucd1d\ub7c9\uc744 \uac00\uc7a5 \ub0ad\ube44\uac00 \ub9ce\uc740 \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74?", "context": "CREATE TABLE mine_waste (mine_id INT, mine_name TEXT, waste_amount INT); INSERT INTO mine_waste (mine_id, mine_name, waste_amount) VALUES (1, 'Golden Mine', 350), (2, 'Silver Mine', 280), (3, 'Bronze Mine', 220);", "output": "SELECT mine_name, SUM(waste_amount) AS total_waste FROM mine_waste GROUP BY mine_name ORDER BY total_waste DESC;"}
{"input": " \ubd80\uc11c\ubcc4 \uc5ec\uc131\uc9c1\uc6d0 \ube44\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Employees (EmployeeID INT, EmployeeName VARCHAR(50), Department VARCHAR(50), Gender VARCHAR(50)); INSERT INTO Employees (EmployeeID, EmployeeName, Department, Gender) VALUES (1, 'John Doe', 'IT', 'Male'), (2, 'Jane Smith', 'HR', 'Female'), (3, 'Alice Johnson', 'IT', 'Female'), (4, 'Bob Brown', 'Finance', 'Male'), (5, 'Charlie Green', 'Finance', 'Male');", "output": "SELECT Department, Gender, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY Department) AS Percentage FROM Employees GROUP BY Department, Gender;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ub178\ub3d9\uad8c \uce68\ud574 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE Labor_Rights (region VARCHAR(20), violation_reported BOOLEAN); INSERT INTO Labor_Rights (region, violation_reported) VALUES ('Northeast', true), ('Northeast', false), ('Midwest', true);", "output": "SELECT region, SUM(violation_reported) as total_violations FROM Labor_Rights GROUP BY region;"}
{"input": " \ubd81\ubc18\uad6c \ud574\uc218 \uc591\uc2dd\uc7a5\uc758 \ud3c9\uade0 \uc5b4\ub958 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_farms (id INT, name TEXT, type TEXT, location TEXT, biomass FLOAT); INSERT INTO fish_farms (id, name, type, location, biomass) VALUES (1, 'Farm M', 'Fish', 'Norway', 25000.0), (2, 'Farm N', 'Fish', 'Canada', 18000.0);", "output": "SELECT AVG(biomass) FROM fish_farms WHERE type = 'Fish' AND location IN (SELECT location FROM fish_farms WHERE biomass IS NOT NULL GROUP BY location HAVING EXTRACT(HOUR FROM AVG(location)) < 12);"}
{"input": " \ucd1d \ubb3c\ud488 \ube44\uc6a9\uc774 $10,000\uac00 \ub118\ub294 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \ub3c5\ud2b9\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT); INSERT INTO Volunteers (VolunteerID, VolunteerName) VALUES (1, 'Gabriela'), (2, 'Hamza'), (3, 'Isabella'); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health'), (3, 'Sustainability'); CREATE TABLE ProgramSupplies (ProgramID INT, SupplyID INT); INSERT INTO ProgramSupplies (ProgramID, SupplyID) VALUES (1, 1), (1, 2), (2, 1), (3, 1), (3, 2); CREATE TABLE Supplies (SupplyID INT, SupplyName TEXT, SupplyCost DECIMAL, PurchaseDate DATE); INSERT INTO Supplies (SupplyID, SupplyName, SupplyCost, PurchaseDate) VALUES (1, 'Books', 2000.00, '2022-01-10'), (2, 'Medicine', 8000.00, '2022-02-15'), (3, 'Solar Panels', 12000.00, '2022-03-30');", "output": "SELECT COUNT(DISTINCT Volunteers.VolunteerID) AS TotalVolunteers FROM Volunteers INNER JOIN Programs ON Volunteers.VolunteerID = Programs.ProgramID INNER JOIN ProgramSupplies ON Programs.ProgramID = ProgramSupplies.ProgramID INNER JOIN Supplies ON ProgramSupplies.SupplyID = Supplies.SupplyID GROUP BY Programs.ProgramID HAVING SUM(Supplies.SupplyCost) > 10000;"}
{"input": " \uc77c\ub9ac\ub178\uc774\uc8fc\uc5d0\uc11c \ucd5c\uc18c\ud55c\uc758 \uc815\uc2e0\uac74\uac15 \ud3c9\uac00 \uc0c1\ub2f4\uc744 \uc2e4\uc2dc\ud55c \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc6b0\ud3b8\ubc88\ud638\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name TEXT, zip TEXT, consultations INT); INSERT INTO community_health_workers (id, name, zip, consultations) VALUES (1, 'John Doe', '60001', 40), (2, 'Jane Smith', '60601', 20); CREATE VIEW il_workers AS SELECT * FROM community_health_workers WHERE zip BETWEEN '60001' AND '62999';", "output": "SELECT zip FROM il_workers WHERE consultations = (SELECT MIN(consultations) FROM il_workers);"}
{"input": " \uc624\ub808\uace4\uc5d0\uc11c \uc9c0\ub09c 30\uc77c \ub3d9\uc548 'Pineapple Express' \ud488\uc885\uc5d0 \ub300\ud55c \uc77c\uc77c \ud310\ub9e4\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE strains (id INT, name TEXT, type TEXT); INSERT INTO strains (id, name, type) VALUES (3, 'Pineapple Express', 'Hybrid'); CREATE TABLE sales (id INT, strain_id INT, retail_price DECIMAL, sale_date DATE, state TEXT); INSERT INTO sales (id, strain_id, retail_price, sale_date, state) VALUES (20, 3, 22.00, '2022-04-01', 'Oregon'), (21, 3, 22.00, '2022-04-02', 'Oregon'), (22, 3, 22.00, '2022-04-03', 'Oregon');", "output": "SELECT AVG(retail_price) OVER (ORDER BY sale_date ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) FROM sales WHERE strain_id = 3 AND state = 'Oregon';"}
{"input": "\uce74\uc0ac\ubc14'\ub97c \uc7ac\ubc30\ud558\ub294 \ubaa8\ub4e0 \ub18d\ubbfc\uacfc \ud574\ub2f9 \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE farmer (id INT PRIMARY KEY, name VARCHAR(50), crop_id INT, country_id INT); CREATE TABLE crop (id INT PRIMARY KEY, name VARCHAR(50)); CREATE TABLE country (id INT PRIMARY KEY, name VARCHAR(50)); INSERT INTO crop (id, name) VALUES (1, 'Cassava'); INSERT INTO country (id, name) VALUES (1, 'Nigeria'), (2, 'Ghana'); INSERT INTO farmer (id, name, crop_id, country_id) VALUES (1, 'John Doe', 1, 1), (2, 'Jane Doe', 2, 2);", "output": "SELECT f.name, c.name AS country_name FROM farmer f INNER JOIN crop c ON f.crop_id = c.id INNER JOIN country co ON f.country_id = co.id WHERE c.name = 'Cassava';"}
{"input": " \uc0c1\uc704 3\uac1c \uacf5\uc5ec\uad6d\uacfc \ud558\uc704 3\uac1c \uacf5\uc5ec\uad6d\uc758 \uae30\ubd80\uae08\uc561 \ucc28\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE donor_countries (country VARCHAR(50), donation DECIMAL(10,2)); INSERT INTO donor_countries (country, donation) VALUES ('United States', 50000.00), ('Germany', 40000.00), ('United Kingdom', 30000.00), ('France', 20000.00), ('Canada', 10000.00);", "output": "SELECT SUM(a.donation) - SUM(b.donation) FROM (SELECT donation FROM donor_countries ORDER BY donation DESC LIMIT 3) a, (SELECT donation FROM donor_countries ORDER BY donation ASC LIMIT 3) b;"}
{"input": " \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \uc81c\ud488 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE products (product_id INT, country VARCHAR(20), certified_cruelty_free BOOLEAN); INSERT INTO products (product_id, country, certified_cruelty_free) VALUES (1, 'USA', true), (2, 'Canada', false), (3, 'USA', true);", "output": "SELECT country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM products) AS percentage FROM products WHERE certified_cruelty_free = true GROUP BY country ORDER BY percentage DESC LIMIT 1;"}
{"input": " \uac01 \uc9c0\uc5ed\ubcc4\ub85c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc0ac\ub840 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cases (id INT PRIMARY KEY, case_type VARCHAR(255), district VARCHAR(255), date DATE); INSERT INTO cases (id, case_type, district, date) VALUES (1, 'Theft', 'Downtown', '2021-01-01'); INSERT INTO cases (id, case_type, district, date) VALUES (2, 'Vandalism', 'Uptown', '2021-02-01');", "output": "SELECT district, case_type, COUNT(*) as count, RANK() OVER(PARTITION BY district ORDER BY count DESC) as rank FROM cases GROUP BY district, case_type;"}
{"input": " \ud638\ud154 \uc5c5\uacc4\uc758 AI \ud22c\uc790 \ubd84\ud3ec\ub294 \ubd84\uae30\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE ai_investments (investment_id INT, investment_amount FLOAT, quarter TEXT, industry TEXT); INSERT INTO ai_investments (investment_id, investment_amount, quarter, industry) VALUES (1, 1000000, 'Q1 2022', 'Hospitality'), (2, 1500000, 'Q2 2022', 'Hospitality');", "output": "SELECT quarter, AVG(investment_amount) FROM ai_investments WHERE industry = 'Hospitality' GROUP BY quarter;"}
{"input": " \ud65c\ub3d9\uc774 \uac00\uc7a5 \uc801\uc740 \uc870\uc9c1\uc758 \ucd5c\ub300 \ud0d0\ud5d8 \uae4a\uc774\uc640 \ucd5c\uc18c \ud0d0\ud5d8 \uae4a\uc774\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE expedition (org VARCHAR(20), depth INT); INSERT INTO expedition VALUES ('Ocean Explorer', 2500), ('Ocean Explorer', 3000), ('Sea Discoverers', 2000), ('Marine Investigators', 4000), ('Marine Investigators', 4500), ('Deep Sea Divers', 7000), ('Deep Sea Divers', 6500); CREATE TABLE organization (org VARCHAR(20), activity INT); INSERT INTO organization VALUES ('Ocean Explorer', 2), ('Sea Discoverers', 1), ('Marine Investigators', 2), ('Deep Sea Divers', 3);", "output": "SELECT MAX(depth) - MIN(depth) FROM expedition JOIN organization ON expedition.org = organization.org WHERE organization.activity = (SELECT MIN(activity) FROM organization);"}
{"input": " \ub514\uc9c0\ud138 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud558\ub294 \ubc29\ubb38\uac1d\uc758 \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc804\uc2dc\ud68c\ubcc4, \uad6d\uac00\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Exhibition1 (exhibition_id INT, visitor_id INT, primary key(exhibition_id, visitor_id)); INSERT INTO Exhibition1 VALUES (1, 1), (1, 2), (2, 3), (2, 4); CREATE TABLE Visitor (visitor_id INT, age INT, country VARCHAR(255), primary key(visitor_id)); INSERT INTO Visitor VALUES (1, 22, 'USA'), (2, 31, 'Canada'), (3, 45, 'Mexico'), (4, 50, 'Canada'); CREATE TABLE DigitalActivity (visitor_id INT, primary key(visitor_id)); INSERT INTO DigitalActivity VALUES (2), (3), (4), (5);", "output": "SELECT Exhibition1.exhibition_id, Visitor.country, AVG(Visitor.age) FROM Exhibition1 INNER JOIN Visitor ON Exhibition1.visitor_id = Visitor.visitor_id INNER JOIN DigitalActivity ON Visitor.visitor_id = DigitalActivity.visitor_id GROUP BY Exhibition1.exhibition_id, Visitor.country;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc5d0\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc5ec\ud589\uc9c0\uac00 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE continents (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent_id INT, FOREIGN KEY (continent_id) REFERENCES continents(id));CREATE TABLE destinations (id INT PRIMARY KEY, name VARCHAR(255), country_id INT, sustainable BOOLEAN);", "output": "SELECT COUNT(id) FROM destinations WHERE sustainable = true AND country_id IN (SELECT id FROM countries WHERE continent_id = (SELECT id FROM continents WHERE name = 'Oceania'));"}
{"input": " \ub05d \uc704\uce58\uac00 \ud734\uc2a4\ud134\uc5d0 \uc788\ub294 \ud30c\uc774\ud504\ub77c\uc778 \uc138\uadf8\uba3c\ud2b8\uc758 \ucd1d \uae38\uc774\uc640 \uc9c1\uacbd\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE PipelineSegments (SegmentID INT, SegmentName VARCHAR(50), Length DECIMAL(10,2), Diameter DECIMAL(10,2), StartLocation VARCHAR(50), EndLocation VARCHAR(50)); INSERT INTO PipelineSegments (SegmentID, SegmentName, Length, Diameter, StartLocation, EndLocation) VALUES (1, 'Alaska Pipeline Segment 1', 12.34, 34.56, 'Prudhoe Bay', 'Houston'); INSERT INTO PipelineSegments (SegmentID, SegmentName, Length, Diameter, StartLocation, EndLocation) VALUES (2, 'Alaska Pipeline Segment 2', 15.67, 45.67, 'Valdez', 'Anchorage'); INSERT INTO PipelineSegments (SegmentID, SegmentName, Length, Diameter, StartLocation, EndLocation) VALUES (3, 'Gulf Coast Pipeline', 50.00, 75.00, 'Houston', 'New Orleans');", "output": "SELECT EndLocation, SUM(Length) AS Total_Length, AVG(Diameter) AS Avg_Diameter FROM PipelineSegments WHERE EndLocation = 'Houston' GROUP BY EndLocation;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0 \ubaa8\ub450 \ud22c\uc790\ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name TEXT, country TEXT); INSERT INTO customers (customer_id, name, country) VALUES (1, 'John Doe', 'USA'); INSERT INTO customers (customer_id, name, country) VALUES (2, 'Jane Smith', 'Canada');", "output": "SELECT customer_id, name FROM customers WHERE country = 'USA' INTERSECT SELECT customer_id, name FROM customers WHERE country = 'Canada';"}
{"input": "\uae00\ub8e8\ud150 \ud504\ub9ac \uba54\ub274 \ud56d\ubaa9\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menus (menu_id INT, menu_name VARCHAR(255), type VARCHAR(255), price DECIMAL(5,2), gluten_free BOOLEAN); INSERT INTO menus (menu_id, menu_name, type, price, gluten_free) VALUES (1, 'Quinoa Salad', 'Vegetarian', 12.99, true), (2, 'Margherita Pizza', 'Non-Vegetarian', 9.99, false), (3, 'Falafel Wrap', 'Vegetarian', 8.99, true), (5, 'Vegan Burger', 'Vegan', 10.99, false), (6, 'Vegan Tacos', 'Vegan', 7.99, true);", "output": "SELECT SUM(price) FROM menus WHERE gluten_free = true;"}
{"input": " '\ud76c\ub9dd \uc57c\uc0dd\ub3d9\ubb3c \ubcf4\ud638\uad6c\uc5ed'\uacfc '\ubc1c\ud1b1 \uad6c\uc870'\uc5d0 \ub4f1\uc7a5\ud558\ub294 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc778\uac00\uc694?", "context": "CREATE TABLE Hope_Wildlife_Sanctuary (Animal_ID INT, Animal_Name VARCHAR(50), Species VARCHAR(50), Age INT); INSERT INTO Hope_Wildlife_Sanctuary VALUES (1, 'Bambi', 'Deer', 3); INSERT INTO Hope_Wildlife_Sanctuary VALUES (2, 'Fiona', 'Turtle', 10); CREATE TABLE Paws_and_Claws_Rescue (Animal_ID INT, Animal_Name VARCHAR(50), Species VARCHAR(50), Age INT); INSERT INTO Paws_and_Claws_Rescue VALUES (1, 'Chirpy', 'Eagle', 5); INSERT INTO Paws_and_Claws_Rescue VALUES (2, 'Whiskers', 'Raccoon', 2);", "output": "SELECT SUM(Number_of_Animals) FROM (SELECT COUNT(*) AS Number_of_Animals FROM Hope_Wildlife_Sanctuary UNION ALL SELECT COUNT(*) AS Number_of_Animals FROM Paws_and_Claws_Rescue) AS Total_Animals"}
{"input": " '\uc2dc\uc560\ud2c0' \ud56d\ub9cc\uc5d0\uc11c \uac01 \ud06c\ub808\uc778\uc774 \ucc98\ub9ac\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ud3c9\uade0 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (port_id INT, name TEXT);CREATE TABLE crane (crane_id INT, port_id INT, name TEXT);CREATE TABLE container (container_id INT, crane_id INT, weight INT);INSERT INTO port VALUES (1, 'Seattle');", "output": "SELECT crane.name, AVG(container.weight) FROM crane JOIN port ON crane.port_id = port.port_id JOIN container ON crane.crane_id = container.crane_id WHERE port.name = 'Seattle' GROUP BY crane.name;"}
{"input": " \ub2e8\uc77c \uacfc\uc815\uc5d0\uc11c \uad50\uc0ac\uac00 \uc18c\uc694\ud558\ub294 \uc804\ubb38\uc131 \uac1c\ubc1c \uc2dc\uac04\uc740 \ucd5c\ub300 \uba87 \uc2dc\uac04\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (id INT, name VARCHAR(255)); CREATE TABLE courses (id INT, name VARCHAR(255), start_date DATE, end_date DATE, hours INT); CREATE TABLE teacher_courses (teacher_id INT, course_id INT, completed DATE);", "output": "SELECT t.name, c.name, MAX(c.hours) as max_hours FROM teacher_courses tc JOIN courses c ON tc.course_id = c.id JOIN teachers t ON tc.teacher_id = t.id GROUP BY t.id, c.id;"}
{"input": " \uae08\uc735 \ubd80\ubb38 \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4\uc758 \ud3c9\uade0 \uc2ec\uac01\ub3c4 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_intelligence (id INT, sector VARCHAR(20), severity FLOAT); INSERT INTO threat_intelligence (id, sector, severity) VALUES (1, 'Finance', 8.5);", "output": "SELECT AVG(severity) FROM threat_intelligence WHERE sector = 'Finance';"}
{"input": " \uc911\ub3d9 \uc9c0\uc5ed \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8\uc758 \uc9c0\uc815\ud559\uc801 \uc704\ud5d8 \ud3c9\uac00 \ub3d9\ud5a5\uc740 \uc5b4\ub5a4\uac00\uc694?", "context": "CREATE TABLE geopolitical_risk_assessments (id INT, assessment_date DATE, project VARCHAR(50), region VARCHAR(20), risk_level DECIMAL(3,2));", "output": "SELECT region, AVG(risk_level) as avg_risk_level FROM geopolitical_risk_assessments WHERE region = 'Middle East' GROUP BY region, YEAR(assessment_date), QUARTER(assessment_date) ORDER BY YEAR(assessment_date), QUARTER(assessment_date);"}
{"input": " \uac01 \uc8fc \ub0b4\uc5d0\uc11c \uc815\ub82c\ub41c \ubcd1\uc6d0 \uc774\ub984\ubcc4 \ubcd1\uc6d0 \uc218\uc6a9 \ub2a5\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HospitalBeds (StateName VARCHAR(50), HospitalName VARCHAR(50), NumBeds INT); INSERT INTO HospitalBeds (StateName, HospitalName, NumBeds) VALUES ('Alabama', 'HospitalA', 250), ('Alabama', 'HospitalB', 300), ('Alaska', 'HospitalX', 50), ('Arizona', 'HospitalY', 400), ('Arizona', 'HospitalZ', 350);", "output": "SELECT StateName, HospitalName, NumBeds, RANK() OVER (PARTITION BY StateName ORDER BY NumBeds DESC) AS Rank FROM HospitalBeds"}
{"input": " \ube0c\ub79c\ub4dc\ubcc4, \uc9c0\uc5ed\ubcc4 \uce5c\ud658\uacbd \uc81c\ud488\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Brands (id INT, brand VARCHAR(255), region VARCHAR(255)); INSERT INTO Brands (id, brand, region) VALUES (1, 'EcoBrandA', 'North America'), (2, 'EcoBrandB', 'Europe'), (3, 'EcoBrandC', 'Asia'); CREATE TABLE Sales (id INT, brand_id INT, product VARCHAR(255), quantity INT, region VARCHAR(255)); INSERT INTO Sales (id, brand_id, product, quantity, region) VALUES (1, 1, 'EcoProduct1', 50, 'North America'), (2, 1, 'EcoProduct2', 75, 'North America'), (3, 2, 'EcoProduct3', 30, 'Europe'), (4, 2, 'EcoProduct4', 40, 'Europe'), (5, 3, 'EcoProduct5', 60, 'Asia'), (6, 3, 'EcoProduct6', 80, 'Asia');", "output": "SELECT s.region, b.brand, SUM(s.quantity) AS total_quantity FROM Sales s JOIN Brands b ON s.brand_id = b.id JOIN Products p ON s.product = p.id WHERE p.eco_friendly = true GROUP BY s.region, b.brand;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc704\uc131\uc744 \ubc1c\uc0ac\ud558\uace0 7\ud68c \uc774\uc0c1\uc758 \uc6b0\uc8fc \uc784\ubb34\uc5d0 \uc131\uacf5\ud55c \ud68c\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Company_Launches (company VARCHAR(50), satellite_count INT, successful_missions INT); INSERT INTO Company_Launches (company, satellite_count, successful_missions) VALUES ('SpaceX', 200, 180), ('India', 150, 140), ('United Kingdom', 100, 90);", "output": "SELECT company FROM Company_Launches WHERE satellite_count > 75 AND successful_missions > 7 GROUP BY company ORDER BY satellite_count DESC;"}
{"input": " \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed \ubb34\ud615\ubb38\ud654\uc720\uc0b0\uc758 \uc774\ub984\uacfc \uc720\ud615\uc740 \ubb34\uc5c7\uc778\uac00?", "context": "CREATE TABLE intangible_heritage (id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO intangible_heritage (id, name, region) VALUES (1, 'Bharatanatyam', 'Asia-Pacific'); INSERT INTO intangible_heritage (id, name, region) VALUES (2, 'Kabuki', 'Asia-Pacific');", "output": "SELECT name, type FROM (SELECT id, name, region, 'intangible' as type FROM intangible_heritage WHERE region = 'Asia-Pacific') AS subquery;"}
{"input": "\uc9c0\ub09c 30\uc77c \ub3d9\uc548 \ud604\uc7a5\ubcc4\ub85c \uad6c\ubd84\ub41c \uc77c\uc77c \uae08 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site (site_id INT, site_name VARCHAR(50)); INSERT INTO site (site_id, site_name) VALUES (1, 'Site A'), (2, 'Site B'); CREATE TABLE production (production_id INT, site_id INT, product VARCHAR(10), production_date DATE, quantity INT); INSERT INTO production (production_id, site_id, product, production_date, quantity) VALUES (1, 1, 'gold', '2021-01-01', 50), (2, 1, 'gold', '2021-01-02', 60), (3, 1, 'gold', '2021-01-03', 70), (4, 2, 'gold', '2021-01-01', 80), (5, 2, 'gold', '2021-01-02', 90), (6, 2, 'gold', '2021-01-03', 100);", "output": "SELECT site_id, product, production_date, quantity, ROW_NUMBER() OVER (PARTITION BY site_id, production_date ORDER BY site_id, production_date) AS daily_production FROM production WHERE product = 'gold' AND production_date >= DATEADD(day, -30, GETDATE());"}
{"input": "\ubaa8\ub4e0 \ubaa8\ub378\uc5d0 \ub300\ud574 '\uac10\ub9c8\uc0ac'\uac00 '\uc911\ub3d9'\uc5d0 \ud310\ub9e4\ud55c \uad70\uc7a5\ube44\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitaryEquipmentSales (seller VARCHAR(255), buyer VARCHAR(255), equipment_model VARCHAR(255), quantity INT, sale_date DATE, region VARCHAR(255));", "output": "SELECT SUM(quantity) FROM MilitaryEquipmentSales WHERE seller = 'Gamma Corp' AND buyer = 'Middle East';"}
{"input": " \uc544\uc2dc\uc544\uc5d0 \uae30\ubc18\uc744 \ub454 \uc724\ub9ac\uc801\uc778 \ud328\uc158 \ube0c\ub79c\ub4dc\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EthicalFashionBrands (Brand VARCHAR(50), Location VARCHAR(50)); INSERT INTO EthicalFashionBrands (Brand, Location) VALUES ('Brand A', 'India'), ('Brand B', 'China'), ('Brand C', 'Japan'), ('Brand D', 'Vietnam'), ('Brand E', 'Indonesia');", "output": "SELECT COUNT(*) FROM EthicalFashionBrands WHERE Location IN ('India', 'China', 'Japan', 'Vietnam', 'Indonesia');"}
{"input": " 2022\ub144 \ud0d1\uc2b9\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uacfc \uac00\uc7a5 \ub0ae\uc740 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Public_Transportation (Id INT, System VARCHAR(50), Ridership INT, Year INT); INSERT INTO Public_Transportation (Id, System, Ridership, Year) VALUES (1, 'NYC Subway', 5000000, 2022); INSERT INTO Public_Transportation (Id, System, Ridership, Year) VALUES (2, 'London Tube', 4000000, 2022);", "output": "SELECT System, Ridership FROM (SELECT System, Ridership, ROW_NUMBER() OVER (ORDER BY Ridership DESC) AS Rank, COUNT(*) OVER () AS Total FROM Public_Transportation WHERE Year = 2022) AS Subquery WHERE Rank = 1 OR Rank = Total;"}
{"input": " \uc790\uc728 \ucc28\ub7c9 \ud310\ub9e4 \uc2a4\ud0a4\ub9c8\uc758 \uac01 \uc8fc\uc5d0\uc11c \uba87 \ub300\uc758 \uc790\uc728 \ucc28\ub7c9\uc774 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE States (id INT, name VARCHAR(50)); CREATE TABLE AutonomousVehiclesSales (id INT, state_id INT, vehicle_id INT, quantity INT, PRIMARY KEY (id), FOREIGN KEY (state_id) REFERENCES States(id)); CREATE TABLE AutonomousVehicles (id INT, make VARCHAR(50), model VARCHAR(50), PRIMARY KEY (id)); CREATE TABLE AutonomousVehicleSales (sales_id INT, vehicle_id INT, PRIMARY KEY (sales_id), FOREIGN KEY (sales_id) REFERENCES AutonomousVehiclesSales(id), FOREIGN KEY (vehicle_id) REFERENCES AutonomousVehicles(id));", "output": "SELECT s.name, SUM(avs.quantity) FROM AutonomousVehiclesSales avs JOIN States s ON avs.state_id = s.id JOIN AutonomousVehicleSales av ON avs.sales_id = av.id GROUP BY s.name;"}
{"input": " Tesla \ub610\ub294 Nissan Leaf \ucc28\ub7c9\uc744 250\ud68c \uc774\uc0c1 \uc6b4\ud589\ud558\ub294 \uc6b4\uc804\uc790\uac00 \uc5bb\uc740 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Drivers (id INT, name VARCHAR(255), vehicle_type VARCHAR(50), vehicle_year INT, total_rides INT, total_revenue FLOAT); INSERT INTO Drivers (id, name, vehicle_type, vehicle_year, total_rides, total_revenue) VALUES (1, 'Hana', 'Nissan Leaf', 2020, 260, 3800.00), (2, 'Liam', 'Tesla', 2021, 300, 5000.00);", "output": "SELECT SUM(total_revenue) FROM (SELECT total_revenue FROM Drivers WHERE vehicle_type = 'Tesla' AND total_rides > 250 UNION ALL SELECT total_revenue FROM Drivers WHERE vehicle_type = 'Nissan Leaf' AND total_rides > 250) AS subquery;"}
{"input": " \uac01 \uc9c0\uc5ed\ubcc4 \ud558\ub8e8 \ucd5c\ub300 \ube44\uc0c1\ub300\uc751 \ubc0f \uc7ac\ud574\ubcf5\uad6c \ub178\ub825 \ud69f\uc218\ub294 \uba87 \uac74\uc778\uac00\uc694? \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ucd5c\ub300 \ub300\uc751/\ub178\ub825 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Districts (DId INT, Name VARCHAR(50)); CREATE TABLE EmergencyResponses (ResponseId INT, DId INT, Type VARCHAR(50), Date DATE, Time TIME); CREATE TABLE DisasterRecovery (RecoveryId INT, DId INT, Type VARCHAR(50), Date DATE, Time TIME);", "output": "SELECT D.Name, ER.Type, MAX(COUNT(*)) AS MaxResponses FROM Districts D LEFT JOIN EmergencyResponses ER ON D.DId = ER.DId WHERE ER.Time BETWEEN '00:00:00' AND '23:59:59' GROUP BY D.Name, ER.Type UNION SELECT D.Name, DR.Type, MAX(COUNT(*)) AS MaxEfforts FROM Districts D LEFT JOIN DisasterRecovery DR ON D.DId = DR.DId WHERE DR.Time BETWEEN '00:00:00' AND '23:59:59' GROUP BY D.Name, DR.Type ORDER BY MaxResponses DESC;"}
{"input": " '\ud0f1\ucee4' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc120\ubc15\uc774 \ubc29\ubb38\ud55c \ud69f\uc218 \uae30\uc900 \uc0c1\uc704 5\uac1c \ud56d\uad6c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name TEXT, country TEXT);CREATE TABLE visits (id INT, vessel_id INT, port_id INT, visit_date DATE); INSERT INTO ports (id, name, country) VALUES (1, 'Port A', 'USA'), (2, 'Port B', 'Canada'); INSERT INTO visits (id, vessel_id, port_id, visit_date) VALUES (1, 1, 1, '2021-01-01'), (2, 1, 2, '2021-02-01'), (3, 2, 1, '2021-03-01');", "output": "SELECT ports.name, COUNT(*) AS visits FROM ports JOIN visits ON ports.id = visits.port_id JOIN vessels ON visits.vessel_id = vessels.id WHERE vessels.type = 'Tanker' GROUP BY ports.name ORDER BY visits DESC LIMIT 5;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ucc44\uad74\ub418\ub294 \uc740\uc758 \ucd1d \ud1a4\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine (id INT, region VARCHAR(20), mineral VARCHAR(20), tons INT); INSERT INTO mine (id, region, mineral, tons) VALUES (1, 'Asia-Pacific', 'gold', 2000), (2, 'Asia-Pacific', 'silver', 3000), (3, 'Americas', 'gold', 5000), (4, 'Americas', 'silver', 1000), (5, 'Europe', 'gold', 800), (6, 'Europe', 'silver', 2500);", "output": "SELECT region, SUM(tons) FROM mine WHERE mineral = 'silver' GROUP BY region;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uac01 \ubbfc\uc871\ubcc4 \uc9c1\uc6d0 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, Department varchar(20), Ethnicity varchar(20), Age int); INSERT INTO Employees (EmployeeID, Department, Ethnicity, Age) VALUES (1, 'HR', 'Asian', 35), (2, 'IT', 'White', 32), (3, 'Sales', 'Black', 28), (4, 'HR', 'Hispanic', 30), (5, 'IT', 'Asian', 35);", "output": "SELECT Department, Ethnicity, (COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY Department)) AS Percentage FROM Employees GROUP BY Department, Ethnicity;"}
{"input": " \uac01 \uc9c0\uc5ed \ubc0f \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \ub9e4\ucd9c\uc744 \uac00\uc7a5 \ub192\uc740 \ub9e4\ucd9c \uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sales_data (id INT PRIMARY KEY, product_name VARCHAR(100), region VARCHAR(100), sales_amount DECIMAL(10,2)); INSERT INTO sales_data (id, product_name, region, sales_amount) VALUES (1, 'Shampoo', 'North America', 1000.00); INSERT INTO sales_data (id, product_name, region, sales_amount) VALUES (2, 'Conditioner', 'Europe', 1500.00);", "output": "SELECT region, product_category, SUM(sales_amount) as total_sales FROM sales_data sd INNER JOIN (SELECT product_name, 'Hair Care' as product_category FROM sales_data WHERE product_name = 'Shampoo' OR product_name = 'Conditioner' GROUP BY product_name) pcat ON sd.product_name = pcat.product_name GROUP BY region, product_category ORDER BY total_sales DESC;"}
{"input": " '\ub0a8\ubbf8' \uc9c0\uc5ed\uc758 \uc218\uc6a9 \uc778\uc6d0\uc774 50\uba85 \ubbf8\ub9cc\uc778 \ub300\ud53c\uc18c\uc758 \ucd1d \uc218\uc6a9 \uc778\uc6d0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, name VARCHAR(255)); INSERT INTO region (region_id, name) VALUES (1, 'south_america'); CREATE TABLE shelter (shelter_id INT, name VARCHAR(255), region_id INT, capacity INT); INSERT INTO shelter (shelter_id, name, region_id, capacity) VALUES (1, 'Shelter1', 1, 50), (2, 'Shelter2', 1, 75);", "output": "SELECT SUM(capacity) FROM shelter WHERE region_id = (SELECT region_id FROM region WHERE name = 'south_america') AND capacity < 50;"}
{"input": " \ubd81\ud574 \uc720\uc815 'W001'\uc758 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id varchar(10), region varchar(20), production_figures int); INSERT INTO wells (well_id, region, production_figures) VALUES ('W001', 'North Sea', 5000);", "output": "SELECT production_figures FROM wells WHERE well_id = 'W001' AND region = 'North Sea';"}
{"input": " \uc720\uc0c9\uc778\uc885\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5 \uc911 \ud558\ub098 \uc774\uc0c1\uc5d0 \ud22c\uc790\ud55c \uace0\uc720 \ud22c\uc790\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE investors(id INT, name TEXT, country TEXT); CREATE TABLE startups(id INT, name TEXT, founder TEXT); CREATE TABLE investments(investor_id INT, startup_id INT); INSERT INTO investors(id, name, country) VALUES (1, 'Firm A', 'US'), (2, 'Firm B', 'UK'), (3, 'Firm C', 'India'); INSERT INTO startups(id, name, founder) VALUES (1, 'Acme Inc', 'John Doe'), (2, 'Beta Corp', 'Rajesh Patel'); INSERT INTO investments(investor_id, startup_id) VALUES (1, 1), (2, 1), (3, 2);", "output": "SELECT DISTINCT investors.name FROM investors JOIN investments ON investors.id = investments.investor_id JOIN startups ON investments.startup_id = startups.id WHERE startups.founder IN ('Rajesh Patel', 'John Smith', 'Lisa Kim');"}
{"input": " 2019\ub144\uc5d0 \uc77c\ubcf8\uc774 \ud638\uc8fc\uc5d0\uc11c \uc218\uc785\ud55c \ud574\uc0b0\ubb3c\uc740 \uba87 \ud1a4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE seafood_exports (id INT, export_date DATE, export_country VARCHAR(50), import_country VARCHAR(50), quantity INT, unit_type VARCHAR(10)); INSERT INTO seafood_exports (id, export_date, export_country, import_country, quantity, unit_type) VALUES (1, '2019-01-01', 'Japan', 'Australia', 500, 'ton'), (2, '2019-01-02', 'Canada', 'US', 300, 'ton'), (3, '2021-01-01', 'Canada', 'Japan', 600, 'ton');", "output": "SELECT SUM(quantity) FROM seafood_exports WHERE export_country = 'Australia' AND import_country = 'Japan' AND EXTRACT(YEAR FROM export_date) = 2019;"}
{"input": " \uc720\ub7fd \uc5f0\ud569\uc758 \uace0\uc18d\ub3c4\ub85c \ucd5c\ub300 \ucc28\uc120 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE highways (id INT, country VARCHAR(255), max_number_of_lanes INT); INSERT INTO highways (id, country, max_number_of_lanes) VALUES (1, 'Germany', 12), (2, 'France', 10), (3, 'Spain', 14), (4, 'Italy', 10), (5, 'Poland', 10), (6, 'Netherlands', 6), (7, 'Belgium', 8), (8, 'Greece', 6), (9, 'Portugal', 8), (10, 'Sweden', 8);", "output": "SELECT MAX(max_number_of_lanes) FROM highways WHERE country IN (SELECT name FROM countries WHERE continent = 'Europe');"}
{"input": " \uce90\ub098\ub2e4\uc5d0\ub294 \ub178\ub3d9\uad8c \uce68\ud574\uac00 \uc5c6\ub294 \uc9c1\uc7a5\uc774 \uba87 \uad70\ub370\ub098 \ub420\uae4c\uc694?", "context": "CREATE TABLE workplaces (id INT, country VARCHAR(50), has_lrv BOOLEAN); INSERT INTO workplaces (id, country, has_lrv) VALUES (1, 'Canada', true), (2, 'Canada', false), (3, 'Canada', false);", "output": "SELECT COUNT(*) FROM workplaces WHERE country = 'Canada' AND has_lrv = false;"}
{"input": " 2015\ub144 \uc774\ud6c4 \uc2a4\ud2b8\ub9ac\ubc0d \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ub77c\ud2f4 \uc74c\uc545\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE music_genres (genre_id INT, genre VARCHAR(255)); CREATE TABLE platforms (platform_id INT, platform_name VARCHAR(255)); CREATE TABLE revenue (genre_id INT, platform_id INT, revenue INT, year INT); INSERT INTO music_genres (genre_id, genre) VALUES (1, 'Latin'); INSERT INTO platforms (platform_id, platform_name) VALUES (1, 'Spotify'); INSERT INTO revenue (genre_id, platform_id, revenue, year) VALUES (1, 1, 1000000, 2015);", "output": "SELECT SUM(revenue) FROM revenue JOIN music_genres ON revenue.genre_id = music_genres.genre_id JOIN platforms ON revenue.platform_id = platforms.platform_id WHERE music_genres.genre = 'Latin' AND revenue.year >= 2015;"}
{"input": " CityB\uc758 \ucd1d \uc11c\ube44\uc2a4 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT, name VARCHAR(50), budget FLOAT); INSERT INTO City (id, name, budget) VALUES (1, 'CityA', 2000000); INSERT INTO City (id, name, budget) VALUES (2, 'CityB', 3000000); INSERT INTO City (id, name, budget) VALUES (3, 'CityC', 4000000); CREATE TABLE Department (id INT, city_id INT, name VARCHAR(50), budget FLOAT); INSERT INTO Department (id, city_id, name, budget) VALUES (1, 2, 'Department1', 1500000); INSERT INTO Department (id, city_id, name, budget) VALUES (2, 2, 'Department2', 1500000); CREATE TABLE Service (id INT, department_id INT, name VARCHAR(50), budget FLOAT); INSERT INTO Service (id, department_id, name, budget) VALUES (1, 1, 'Service1', 750000); INSERT INTO Service (id, department_id, name, budget) VALUES (2, 1, 'Service2', 750000); INSERT INTO Service (id, department_id, name, budget) VALUES (3, 2, 'Service3', 1500000);", "output": "SELECT SUM(s.budget) FROM Service s JOIN Department d ON s.department_id = d.id WHERE d.city_id = (SELECT id FROM City WHERE name = 'CityB');"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \ud32c \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ucd95\uad6c\ud300\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE soccer_teams (id INT, name VARCHAR(50), sport VARCHAR(50), fans INT);", "output": "SELECT name FROM (SELECT name, ROW_NUMBER() OVER (ORDER BY fans DESC) as rank FROM soccer_teams WHERE sport = 'soccer' AND country = 'Asia') subquery WHERE rank = 1;"}
{"input": " 'west_africa' \uc9c0\uc5ed\uc758 \ucd1d \ub300\ud53c\uc18c \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, name VARCHAR(255)); INSERT INTO region (region_id, name) VALUES (1, 'west_africa'); CREATE TABLE shelter (shelter_id INT, name VARCHAR(255), region_id INT, capacity INT); INSERT INTO shelter (shelter_id, name, region_id, capacity) VALUES (1, 'Shelter1', 1, 50), (2, 'Shelter2', 1, 75);", "output": "SELECT COUNT(*) FROM shelter WHERE region_id = (SELECT region_id FROM region WHERE name = 'west_africa');"}
{"input": " '\uc8fc\uc2dd' \ubc0f '\ucc44\uad8c' \uce74\ud14c\uace0\ub9ac \ubaa8\ub450\uc5d0\uc11c \uac70\ub798\ub97c \ud55c \uace0\uac1d\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE transactions (id INT, customer_id INT, category VARCHAR(50), amount DECIMAL(10,2)); INSERT INTO transactions (id, customer_id, category, amount) VALUES (1, 101, 'Stocks', 500.00), (2, 102, 'Bonds', 350.00), (3, 103, 'Stocks', 700.00), (4, 104, 'Bonds', 600.00), (5, 105, 'Stocks', 400.00), (6, 105, 'Bonds', 800.00);", "output": "SELECT customer_id FROM transactions WHERE category = 'Stocks' INTERSECT SELECT customer_id FROM transactions WHERE category = 'Bonds';"}
{"input": " 1950\ub144\uc5d0\uc11c 1970\ub144 \uc0ac\uc774\uc5d0 \uc778\uc0c1\ud30c \uadf8\ub9bc\uc73c\ub85c \ub8e8\ube0c\ub974 \ubc15\ubb3c\uad00\uc774 \ucc3d\ucd9c\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, name VARCHAR(255), artist_id INT, date_sold DATE, price DECIMAL(10,2), museum_id INT); CREATE TABLE Artists (artist_id INT, name VARCHAR(255), nationality VARCHAR(255), gender VARCHAR(255)); CREATE TABLE Museums (museum_id INT, name VARCHAR(255));", "output": "SELECT SUM(Artworks.price) FROM Artworks INNER JOIN Artists ON Artworks.artist_id = Artists.artist_id INNER JOIN Museums ON Artworks.museum_id = Museums.museum_id WHERE Artists.nationality = 'Impressionist' AND Museums.name = 'The Louvre' AND YEAR(Artworks.date_sold) BETWEEN 1950 AND 1970;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc2dc\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uae34\uae09 \uc804\ud654 \ubc0f \ud654\uc7ac \uc0ac\uac74\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergencies (id INT, city VARCHAR(20), type VARCHAR(20), date DATE); INSERT INTO emergencies (id, city, type, date) VALUES (1, 'Los Angeles', 'emergency', '2021-01-01'); INSERT INTO emergencies (id, city, type, date) VALUES (2, 'Los Angeles', 'fire', '2021-01-02');", "output": "SELECT SUM(calls) FROM (SELECT COUNT(*) AS calls FROM emergencies WHERE city = 'Los Angeles' AND type = 'emergency' UNION ALL SELECT COUNT(*) AS calls FROM emergencies WHERE city = 'Los Angeles' AND type = 'fire') AS total"}
{"input": " \ud68c\uc0ac\uc758 \uc5f0\uac04 \uc791\uc5c5\uc7a5 \uc548\uc804 \uc704\ubc18 \uac74\uc218\ub294 \ucd5c\ub300 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, safety_violations INT); INSERT INTO companies (id, safety_violations) VALUES (1, 10), (2, 5), (3, 15), (4, 0), (5, 20);", "output": "SELECT MAX(safety_violations) FROM companies;"}
{"input": " \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc815\ucc45 \uc704\ubc18 \uac74\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE policy_violations (country VARCHAR(255), violation_count INT); INSERT INTO policy_violations (country, violation_count) VALUES ('United States', 15), ('United Kingdom', 12), ('Canada', 8), ('Australia', 7), ('Germany', 6);", "output": "SELECT country, violation_count FROM (SELECT country, violation_count, ROW_NUMBER() OVER (ORDER BY violation_count DESC) as row_num FROM policy_violations) AS ranked_violations WHERE row_num <= 3;"}
{"input": " '\ubbf8\uad6d'\uc758 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), sustainability_score INT); INSERT INTO suppliers (id, name, country, sustainability_score) VALUES (1, 'Supplier A', 'USA', 85), (2, 'Supplier B', 'India', 70); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); INSERT INTO products (id, name, supplier_id) VALUES (1, 'Product 1', 1), (2, 'Product 2', 2); CREATE TABLE transactions (id INT PRIMARY KEY, product_id INT, quantity INT, FOREIGN KEY (product_id) REFERENCES products(id)); INSERT INTO transactions (id, product_id, quantity) VALUES (1, 1, 10), (2, 2, 5);", "output": "SELECT SUM(t.quantity) FROM transactions t INNER JOIN products p ON t.product_id = p.id INNER JOIN suppliers s ON p.supplier_id = s.id WHERE s.country = 'USA';"}
{"input": " '2021\ub144 \uaca8\uc6b8' \uceec\ub809\uc158\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uc544\uc774\ud15c\uc758 \uc218\ub7c9\uacfc \uc81c\uc791\ube44\uac00 \uac00\uc7a5 \ub192\uc740 \uc218\ub7c9\uc744 \uad6c\ud574\ubcf4\uc138\uc694.", "context": "CREATE TABLE production_costs (item_type VARCHAR(20), collection VARCHAR(20), cost NUMERIC(10,2), quantity INT); INSERT INTO production_costs (item_type, collection, cost, quantity) VALUES ('wool sweater', 'winter 2021', 25.99, 200), ('wool sweater', 'winter 2021', 24.99, 150), ('wool scarf', 'winter 2021', 12.99, 300);", "output": "SELECT quantity FROM (SELECT item_type, collection, cost, quantity, ROW_NUMBER() OVER (PARTITION BY collection ORDER BY cost DESC) as rn FROM production_costs WHERE collection = 'winter 2021') t WHERE rn = 1;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \ubc29\uc0b0\uc5c5\uccb4 \ubca0\ud14c\ub791 \ucc44\uc6a9 \uc778\uc6d0\uc740 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE veteran_hires (id INT, hire_number VARCHAR(255), industry VARCHAR(255), date DATE);", "output": "SELECT SUM(*) FROM veteran_hires WHERE industry = 'defense' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);"}
{"input": " \uac01 \ub3c4\uc2dc\ub9c8\ub2e4 \uba87 \uac1c\uc758 \uc815\ucc45\uc774 \ubc1c\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Policies_City (id INT, city VARCHAR(20), policy_number INT); INSERT INTO Policies_City (id, city, policy_number) VALUES (1, 'Los Angeles', 100), (2, 'Houston', 120), (3, 'New York', 150), (4, 'Miami', 110);", "output": "SELECT city, COUNT(policy_number) as policy_count FROM Policies_City GROUP BY city;"}
{"input": " \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \uac00\uae4c\uc6b4 \ubcd1\uc6d0\uae4c\uc9c0\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, is_rural BOOLEAN); INSERT INTO hospitals (id, name, location, is_rural) VALUES (1, 'Hospital A', '123 Main St, Rural Town A', true), (2, 'Hospital B', '456 Elm St, Urban City A', false); CREATE TABLE healthcare_facilities (id INT, name TEXT, location TEXT, is_rural BOOLEAN); INSERT INTO healthcare_facilities (id, name, location, is_rural) VALUES (1, 'Clinic A', '789 Oak St, Rural Town A', true), (2, 'Clinic B', '321 Maple St, Urban City B', false); CREATE TABLE distances (facility_id INT, hospital_id INT, distance REAL); INSERT INTO distances (facility_id, hospital_id, distance) VALUES (1, 1, 10), (2, 2, 25);", "output": "SELECT AVG(distance) FROM distances d INNER JOIN healthcare_facilities hf ON d.facility_id = hf.id INNER JOIN hospitals h ON d.hospital_id = h.id WHERE hf.is_rural = true AND h.is_rural = true;"}
{"input": " \uc9c0\ub09c \ub2ec APAC \uc9c0\uc5ed\uc758 \ubcf4\uc548 \uc0ac\uace0 \uc720\ud615\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE incident_types (id INT, incident_type VARCHAR(255), region VARCHAR(255), date DATE); INSERT INTO incident_types (id, incident_type, region, date) VALUES (1, 'Phishing', 'APAC', '2021-08-01'); INSERT INTO incident_types (id, incident_type, region, date) VALUES (2, 'Malware', 'APAC', '2021-08-05'); INSERT INTO incident_types (id, incident_type, region, date) VALUES (3, 'Data Breach', 'APAC', '2021-08-10');", "output": "SELECT incident_type, COUNT(*) as total FROM incident_types WHERE region = 'APAC' AND date >= DATEADD(month, -1, GETDATE()) GROUP BY incident_type;"}
{"input": " '\ud5ec\uc2a4\ucf00\uc5b4' \ubd80\ubb38\uc758 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sector (id INT, name VARCHAR(255)); CREATE TABLE project (id INT, sector_id INT, budget DECIMAL(10, 2)); INSERT INTO sector (id, name) VALUES (1, 'healthcare'); INSERT INTO project (id, sector_id, budget) VALUES (1, 1, 5000), (2, 1, 7000), (3, 1, 3000);", "output": "SELECT sector_id, SUM(budget) as total_budget FROM project WHERE sector_id = (SELECT id FROM sector WHERE name = 'healthcare') GROUP BY sector_id;"}
{"input": " \uce90\ub098\ub2e4\uc640 \ud638\uc8fc\uc758 \uc9c0\uc5ed \uacbd\uc81c \uc601\ud5a5 \uc774\ub2c8\uc154\ud2f0\ube0c\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uac70\ub798\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE transactions (transaction_id INT, initiative_type TEXT, country TEXT); INSERT INTO transactions (transaction_id, initiative_type, country) VALUES (1, 'Sustainable Tourism', 'Canada'), (2, 'Local Economic Impact', 'Canada'), (3, 'Cultural Preservation', 'Australia');", "output": "SELECT * FROM transactions WHERE initiative_type LIKE '%local%economic%' AND country IN ('Canada', 'Australia');"}
{"input": " 2018\ub144 \uc774\uc804\uc5d0 \uc644\ub8cc\ub41c \ubca0\ud2b8\ub0a8\uc758 \uc131\uacf5\uc801\uc778 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE projects(id INT, name TEXT, start_date DATE, end_date DATE, country TEXT, success BOOLEAN); INSERT INTO projects(id, name, start_date, end_date, country, success) VALUES (1, 'Rural Electrification', '2016-01-01', '2017-12-31', 'Vietnam', true); INSERT INTO projects(id, name, start_date, end_date, country, success) VALUES (2, 'Irrigation System', '2015-01-01', '2018-12-31', 'Vietnam', false);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM projects WHERE country = 'Vietnam' AND end_date <= '2018-12-31' AND end_date >= start_date AND success = true) AS success_rate FROM projects WHERE country = 'Vietnam' AND end_date <= '2018-12-31' AND end_date >= start_date AND success = true;"}
{"input": " \uccad\uad6c \uae08\uc561\uc774 $5000 \ubbf8\ub9cc\uc778 \uc0ac\ub840\ub97c \uc81c\uc678\ud558\uace0 '\ub0a8\ubd80' \uc9c0\uc5ed \uc0ac\ub840\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cases (id INT, region VARCHAR(10), billing_amount INT); INSERT INTO cases (id, region, billing_amount) VALUES (1, 'Eastern', 5000), (2, 'Western', 7000), (3, 'Eastern', 6000), (4, 'Southern', 8000), (5, 'Southern', 4000);", "output": "SELECT SUM(billing_amount) FROM cases WHERE region = 'Southern' AND billing_amount > 5000;"}
{"input": " \uad6d\uac00\ubcc4 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2)); CREATE TABLE subscribers (id INT, name VARCHAR(255), plan_id INT, country VARCHAR(255)); CREATE TABLE countries (id INT, name VARCHAR(255));", "output": "SELECT countries.name AS country, SUM(mobile_plans.price) FROM mobile_plans JOIN subscribers ON mobile_plans.id = subscribers.plan_id JOIN countries ON subscribers.country = countries.id GROUP BY countries.name;"}
{"input": " \ud504\ub791\uc2a4\uc5d0\ub294 \uacf5\uc815 \ubb34\uc5ed \uc778\uc99d\uc744 \ubc1b\uc740 \uacf5\uae09\uc5c5\uccb4\uac00 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE certifications(certification_id INT, certification_name TEXT); INSERT INTO certifications(certification_id, certification_name) VALUES (1, 'Fair Trade'); CREATE TABLE suppliers(supplier_id INT, supplier_name TEXT, country TEXT); INSERT INTO suppliers(supplier_id, supplier_name, country) VALUES (1, 'Ethical Fabrics France', 'France'); CREATE TABLE supplier_certifications(supplier_id INT, certification_id INT); INSERT INTO supplier_certifications(supplier_id, certification_id) VALUES (1, 1);", "output": "SELECT COUNT(DISTINCT suppliers.supplier_id) FROM suppliers JOIN supplier_certifications ON suppliers.supplier_id = supplier_certifications.supplier_id JOIN certifications ON supplier_certifications.certification_id = certifications.certification_id WHERE suppliers.country = 'France' AND certifications.certification_name = 'Fair Trade';"}
{"input": " \ubaa8\ub4e0 \uc720\ud615\uc758 \ud22c\uc790\uc5d0 \ud22c\uc790\ud55c \uace0\uac1d\uc758 \uc774\ub984\uacfc \ub098\uc774\ub97c \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name TEXT, age INT, gender TEXT); INSERT INTO clients VALUES (1, 'John Doe', 35, 'Male'), (2, 'Jane Smith', 45, 'Female'), (3, 'Bob Johnson', 50, 'Male'); CREATE TABLE investments (client_id INT, investment_type TEXT); INSERT INTO investments VALUES (1, 'Stocks'), (1, 'Bonds'), (2, 'Stocks'), (2, 'Mutual Funds'), (3, 'Mutual Funds'), (3, 'Real Estate');", "output": "SELECT c.name, c.age FROM clients c WHERE c.client_id IN (SELECT i1.client_id FROM investments i1 GROUP BY i1.client_id HAVING COUNT(DISTINCT i1.investment_type) = (SELECT COUNT(DISTINCT investment_type) FROM investments));"}
{"input": " \ub3c5\uc77c\uc5d0\uc11c \uac00\uc7a5 \ube60\ub978 \ub9c8\ub77c\ud1a4 \uae30\ub85d \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE marathons (location TEXT, country TEXT, running_time FLOAT);", "output": "SELECT location, running_time FROM marathons WHERE country = 'Germany' ORDER BY running_time ASC LIMIT 3;"}
{"input": " \uad6d\uac00\ubcc4 \uc9c0\ub09c \ubd84\uae30 \ud310\ub9e4\ub85c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (SaleID INT, ManufacturerID INT, Country VARCHAR(100), SalesAmount DECIMAL(10,2), SaleDate DATE); INSERT INTO Sales (SaleID, ManufacturerID, Country, SalesAmount, SaleDate) VALUES (1, 1, 'USA', 500.0, '2021-01-01'), (2, 1, 'Canada', 400.0, '2021-02-01'), (3, 2, 'Mexico', 600.0, '2021-03-01'), (4, 2, 'USA', 700.0, '2021-04-01');", "output": "SELECT s.Country, SUM(s.SalesAmount) AS TotalRevenue FROM Sales s JOIN (SELECT DISTINCT Country FROM Sales WHERE SaleDate >= DATEADD(quarter, -1, GETDATE())) c ON s.Country = c.Country WHERE s.SaleDate >= DATEADD(quarter, -1, GETDATE()) GROUP BY s.Country;"}
{"input": " \ucd1d \uba54\ub2ec \uac1c\uc218\uac00 50\uac1c \ubbf8\ub9cc\uc778 \uad6d\uac00\ub97c \uc81c\uc678\ud558\uace0 \uac00\uc7a5 \ub9ce\uc740 \uc62c\ub9bc\ud53d \uba54\ub2ec\uc744 \ud68d\ub4dd\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE olympic_medals (country VARCHAR(50), gold INT, silver INT, bronze INT);", "output": "SELECT country FROM (SELECT country, ROW_NUMBER() OVER (ORDER BY gold + silver + bronze DESC) as rn FROM (SELECT country, SUM(gold) as gold, SUM(silver) as silver, SUM(bronze) as bronze FROM olympic_medals GROUP BY country HAVING SUM(gold + silver + bronze) >= 50)) t WHERE rn <= 3;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\ud6c4 \uc7ac\uc815\uc744 \uac00\uc7a5 \ub9ce\uc774 \ud22c\uc785\ud55c \uc0c1\uc704 5\uba85\uc758 \uc790\uae08 \uc81c\uacf5\uc790\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE climate_finance_projects (project_id INT, project_name TEXT, location TEXT, funding_amount DECIMAL(10,2), funder TEXT, commitment_date DATE);", "output": "SELECT funder, SUM(funding_amount) AS total_funding FROM climate_finance_projects WHERE location LIKE '%Africa%' GROUP BY funder ORDER BY total_funding DESC LIMIT 5;"}
{"input": " \ud14d\uc0ac\uc2a4\uc640 \ub274\uc695\uc5d0\uc11c \uacb0\ud575 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \ud655\uc778\ud558\uace0 \ub450 \ud3c9\uade0 \uac04\uc758 \ucc28\uc774\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE public.patient_data (id SERIAL PRIMARY KEY, age INTEGER, diagnosis TEXT, state TEXT); INSERT INTO public.patient_data (age, diagnosis, state) VALUES (50, 'Tuberculosis', 'Texas'), (45, 'Tuberculosis', 'Texas'), (60, 'Tuberculosis', 'New York');", "output": "SELECT AVG(p.age) FILTER (WHERE p.state = 'Texas') - AVG(p.age) FILTER (WHERE p.state = 'New York') FROM public.patient_data p WHERE p.diagnosis = 'Tuberculosis';"}
{"input": " \ud2b9\uc815 \uc7ac\ub8cc\ub85c \ub9cc\ub4e4\uc5b4\uc9c0\uace0 \ud2b9\uc815 \uc81c\uc870 \uacf5\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0dd\uc0b0\ub418\ub294 \ubaa8\ub4e0 \ud488\ubaa9\uc758 \ucd1d \uac00\uaca9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE materials (id INT, item_id INT, material VARCHAR(255)); INSERT INTO materials (id, item_id, material) VALUES (1, 1, 'cotton'), (2, 2, 'polyester'), (3, 3, 'cotton');", "output": "SELECT SUM(price) FROM sales s JOIN processes p ON s.item_id = p.item_id JOIN materials m ON s.item_id = m.item_id WHERE p.process = 'process A' AND m.material = 'cotton';"}
{"input": "\ucf5c\ub85c\ub77c\ub3c4\uc5d0\ub294 \uc0ac\ud68c\uc801 \ud615\ud3c9\uc131 \ud504\ub85c\uadf8\ub7a8\uc744 \uac16\ucd98 \uc9c4\ub8cc\uc18c\uac00 \uba87 \uad70\ub370 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT, social_equity_program BOOLEAN); INSERT INTO dispensaries (id, name, state, social_equity_program) VALUES (1, 'Dispensary A', 'Colorado', true), (2, 'Dispensary B', 'Colorado', false), (3, 'Dispensary C', 'Colorado', true), (4, 'Dispensary D', 'Colorado', false);", "output": "SELECT COUNT(*) FROM dispensaries WHERE state = 'Colorado' AND social_equity_program = true;"}
{"input": " \uac01 \uc120\uc218\uac00 \uc6f0\ube59 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uae30\uac04\uc740 \uba70\uce60\uc774\uba70, \ud3c9\uade0 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE AthleteWellbeing (Athlete VARCHAR(255), ParticipationDays INT); INSERT INTO AthleteWellbeing (Athlete, ParticipationDays) VALUES ('Athlete1', 30), ('Athlete2', 45), ('Athlete3', 60);", "output": "SELECT AVG(ParticipationDays) AS AvgDuration, NTILE(3) OVER (ORDER BY ParticipationDays DESC) AS DurationGroup FROM AthleteWellbeing;"}
{"input": " \ubaa8\ubc14\uc77c \uac8c\uc784\uc744 \uc120\ud638\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE PlayerDemographics (PlayerID INT, GamePlatform VARCHAR(10)); INSERT INTO PlayerDemographics (PlayerID, GamePlatform) VALUES (1, 'Mobile'), (2, 'PC'), (3, 'Mobile'), (4, 'Console');", "output": "SELECT (COUNT(*) FILTER(WHERE GamePlatform = 'Mobile') * 100.0 / COUNT(*)) AS Percentage FROM PlayerDemographics;"}
{"input": "\uba78\uc885\uc704\uae30\uc885 \ubcf4\ud638'\uc5d0\ub294 \uae30\ubd80\ud588\uc9c0\ub9cc '\uc0ac\uc790 \uc11c\uc2dd\uc9c0'\uc5d0\ub294 \uae30\ubd80\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (id INT, name VARCHAR(255), donation_amount DECIMAL(10, 2));", "output": "SELECT name FROM Donors d1 WHERE donation_amount > 0 AND campaign = 'Endangered Species Protection' AND NOT EXISTS (SELECT 1 FROM Donors d2 WHERE d1.name = d2.name AND d2.campaign = 'Habitats for Lions');"}
{"input": "\uac01 \ub3d9\ub124\uc758 \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc758 \ud3c9\uade0 \ubd80\ub3d9\uc0b0 \ud06c\uae30\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE neighborhoods (neighborhood_id INT, name VARCHAR(255)); CREATE TABLE properties (property_id INT, size INT, neighborhood_id INT, PRIMARY KEY (property_id), FOREIGN KEY (neighborhood_id) REFERENCES neighborhoods(neighborhood_id)); CREATE TABLE co_owners (property_id INT, owner_id INT, PRIMARY KEY (property_id, owner_id), FOREIGN KEY (property_id) REFERENCES properties(property_id));", "output": "SELECT neighborhoods.name, AVG(properties.size) as avg_size FROM neighborhoods JOIN properties ON neighborhoods.neighborhood_id = properties.neighborhood_id JOIN co_owners ON properties.property_id = co_owners.property_id GROUP BY neighborhoods.name;"}
{"input": " '\uc544\uc2dc\uc544'\uc758 \ubb38\ud654\uc720\uc0b0\uacfc \uc804\ud1b5\uc608\uc220 \ud504\ub85c\uadf8\ub7a8\uc740 \ucd1d \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE heritage_sites (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO heritage_sites (id, name, location) VALUES (1, 'Angkor Wat', 'Asia'), (2, 'Forbidden City', 'Asia');CREATE TABLE traditional_arts (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO traditional_arts (id, name, location) VALUES (1, 'Uzbek Suzani Embroidery', 'Asia'), (2, 'Japanese Kabuki Theatre', 'Asia');", "output": "SELECT COUNT(*) FROM heritage_sites UNION ALL SELECT COUNT(*) FROM traditional_arts;"}
{"input": " \ub0a8\ubd80\uc9c0\uc5ed \ub178\uc870\ubcc4 \uc870\ud569\uc6d0 100\uba85\ub2f9 \uc0ac\uc5c5\uc7a5 \uc548\uc804\uc0ac\uace0 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_membership (member_id INT, name VARCHAR(50), union_name VARCHAR(50), membership_start_date DATE);CREATE TABLE workplace_safety (safety_id INT, union_name VARCHAR(50), incident_date DATE, incident_type VARCHAR(50), severity VARCHAR(50), union_membership_id INT);CREATE VIEW union_membership_summary AS SELECT union_name, COUNT(*) as num_members FROM union_membership GROUP BY union_name;CREATE VIEW south_unions AS SELECT union_name FROM union_membership WHERE region = 'South';", "output": "SELECT ums.union_name, (COUNT(*) * 100.0 / ums.num_members) as incidents_per_100_members FROM workplace_safety ws JOIN union_membership_summary ums ON ws.union_name = ums.union_name JOIN south_unions su ON ws.union_name = su.union_name GROUP BY ums.union_name;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ubbf8\uad6d \uccad\uc18c\ub144 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\uc5ec\ud55c \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (id INT, volunteer_id INT, program_id INT, hours DECIMAL(10,2), contribution_date DATE); CREATE TABLE volunteers (id INT, country VARCHAR(50)); CREATE TABLE programs (id INT, focus_area VARCHAR(50)); INSERT INTO volunteer_hours (id, volunteer_id, program_id, hours, contribution_date) VALUES (1, 1, 1, 2.0, '2021-03-01'); INSERT INTO volunteers (id, country) VALUES (1, 'United States'); INSERT INTO programs (id, focus_area) VALUES (1, 'Youth Programs');", "output": "SELECT SUM(hours) FROM volunteer_hours JOIN volunteers ON volunteer_hours.volunteer_id = volunteers.id JOIN programs ON volunteer_hours.program_id = programs.id WHERE volunteers.country = 'United States' AND programs.focus_area = 'youth programs' AND contribution_date >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH);"}
{"input": "\uac01 \uc8fc\uc5d0\uc11c \uac00\uc7a5 \ub098\uc774\uac00 \ub9ce\uc740 \ud658\uc790\uc758 \uc774\ub984\uacfc \ub098\uc774\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE patient_data (id INT, name VARCHAR(50), age INT, state VARCHAR(20)); INSERT INTO patient_data (id, name, age, state) VALUES (1, 'John Doe', 45, 'Queensland'), (2, 'Jane Smith', 34, 'New South Wales'), (3, 'Bob Johnson', 56, 'New South Wales'), (4, 'Alice Williams', 60, 'Victoria'), (5, 'Charlie Brown', 44, 'Western Australia');", "output": "SELECT state, MAX(age) as max_age, name FROM patient_data GROUP BY state;"}
{"input": " 2019\ub144\uacfc 2020\ub144 \ucd1d R&D \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE company_financials (financial_year INT, rd_expenses FLOAT); INSERT INTO company_financials (financial_year, rd_expenses) VALUES (2018, 5000000), (2019, 6000000), (2020, 8000000), (2021, 9000000);", "output": "SELECT SUM(rd_expenses) FROM company_financials WHERE financial_year IN (2019, 2020);"}
{"input": " \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc0ac\uc6a9\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub2f9 \ud3c9\uade0 \uc791\uc5c5\uc790 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE labor_statistics (id INT PRIMARY KEY, project_id INT, workers_count INT, FOREIGN KEY (project_id) REFERENCES project(id)); INSERT INTO labor_statistics (id, project_id, workers_count) VALUES (1, 1, 50);", "output": "SELECT sm.material_name, AVG(l.workers_count) AS avg_workers_count FROM labor_statistics l INNER JOIN project p ON l.project_id = p.id INNER JOIN building_permit bp ON p.id = bp.project_id INNER JOIN sustainable_material sm ON bp.id = sm.permit_id WHERE sm.material_name IN ('Reclaimed Wood', 'Straw Bale') GROUP BY sm.material_name;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\ub294 \uba87 \uac1c\uc758 \uacf5\ub9bd \ub300\ud559\uc774 \uc788\uc73c\uba70, \ud574\ub2f9 \ub300\ud559\uc5d0 \ub4f1\ub85d\ud55c \ucd1d \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_name VARCHAR(255), student_university VARCHAR(255), state VARCHAR(255)); CREATE TABLE universities (university_name VARCHAR(255), state VARCHAR(255));", "output": "SELECT COUNT(*), SUM(students) FROM (SELECT COUNT(*) AS students FROM students JOIN universities ON students.student_university = universities.university_name JOIN states ON universities.state = states.state_abbreviation WHERE states.state_name = 'California' GROUP BY student_university) subquery;"}
{"input": " 2021\ub144\uc5d0 \uc2e4\uc2dc\ub41c \uaddc\uc815 \uc900\uc218 \uac80\uc0ac \uac74\uc218\ub294 \ud56d\ub9cc\ubcc4, \uc120\ubc15\ubcc4\ubcc4\ub85c \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inspection (inspection_id INT, port_id INT, ship_id INT, inspection_date DATE, ship_type VARCHAR(50)); INSERT INTO inspection VALUES (1, 1, 1, '2021-05-15', 'Container'); INSERT INTO inspection VALUES (2, 2, 2, '2021-07-12', 'Bulk Carrier'); CREATE TABLE port_type (port_id INT, port_type VARCHAR(50)); INSERT INTO port_type VALUES (1, 'Seaport'); INSERT INTO port_type VALUES (2, 'Riverport');", "output": "SELECT p.port_name, st.ship_type, COUNT(i.inspection_id) as total_inspections FROM inspection i JOIN port p ON i.port_id = p.port_id JOIN port_type pt ON i.port_id = pt.port_id JOIN ship s ON i.ship_id = s.ship_id WHERE i.inspection_date >= '2021-01-01' AND i.inspection_date < '2022-01-01' GROUP BY p.port_name, st.ship_type;"}
{"input": " \uc0c1\uc704 2\uac1c \uc54c\uace0\ub9ac\uc998\ub9cc \uace0\ub824\ud588\uc744 \ub54c \uc548\uc804 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \uac01 AI \uc54c\uace0\ub9ac\uc998\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE safety_scores (algorithm_id INT, safety_score FLOAT); INSERT INTO safety_scores (algorithm_id, safety_score) VALUES (1, 0.9), (2, 0.85), (3, 0.95);", "output": "SELECT algorithm_id, RANK() OVER (ORDER BY safety_score DESC) as safety_rank FROM safety_scores WHERE algorithm_id IN (1, 2);"}
{"input": " \uc9c0\ub09c\ud574 '\uc544\ud504\ub9ac\uce74' \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec\uc728\uc740?", "context": "CREATE TABLE virtual_tours (virtual_tour_id INT, virtual_tour_location TEXT, engagement_date DATE, engagement_value INT); INSERT INTO virtual_tours (virtual_tour_id, virtual_tour_location, engagement_date, engagement_value) VALUES (1, 'Virtual Tour Africa', '2022-01-01', 100), (2, 'Virtual Tour Africa', '2022-01-05', 150);", "output": "SELECT (SUM(engagement_value) / (SELECT SUM(engagement_value) FROM virtual_tours WHERE virtual_tour_location = 'Africa') * 100) as engagement_percentage FROM virtual_tours WHERE engagement_date >= DATEADD(year, -1, GETDATE()) AND virtual_tour_location = 'Africa';"}
{"input": " \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc5d0\uc11c \ud720\uccb4\uc5b4 \uc774\uc6a9 \uac00\ub2a5 \ubd80\ub3d9\uc0b0\uc758 \ucd5c\ub300 \ub4f1\ub85d \uac00\uaca9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE properties (id INT, city VARCHAR(20), listing_price INT, wheelchair_accessible BOOLEAN); INSERT INTO properties (id, city, listing_price, wheelchair_accessible) VALUES (1, 'San Francisco', 900000, true); INSERT INTO properties (id, city, listing_price, wheelchair_accessible) VALUES (2, 'San Francisco', 800000, false);", "output": "SELECT MAX(listing_price) FROM properties WHERE city = 'San Francisco' AND wheelchair_accessible = true;"}
{"input": " \ud568\ub300\uc5d0\uc11c \ud65c\ub3d9 \uc911\uc778 \uc120\ubc15\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \ub144\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ships (ship_id INT, ship_name VARCHAR(255), registration_date DATE); INSERT INTO ships VALUES (1, 'Sea Giant', '2010-03-23'); UPDATE ships SET last_maintenance_date = '2022-05-15' WHERE ship_id = 1;", "output": "SELECT AVG(DATEDIFF(CURDATE(), registration_date) / 365) AS avg_age FROM ships s WHERE LAST_DAY(last_maintenance_date) >= LAST_DAY(CURDATE() - INTERVAL 1 YEAR);"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30\uc5d0 \uc5f4\ub9ac\ub294 \ubaa8\ub4e0 \uc624\ud1a0\uc1fc\uc758 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc778\uac00\uc694?", "context": "CREATE TABLE auto_shows (show_name VARCHAR(100), location VARCHAR(100), start_date DATE, end_date DATE);", "output": "SELECT * FROM auto_shows WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30';"}
{"input": "2021\ub144 2\uc6d4 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\ud56d\uc744 \ubc29\ubb38\ud55c \uace0\uc720 \uc120\ubc15\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vessel_visits (id INT, vessel_id INT, port_id INT, visit_date DATE); INSERT INTO vessel_visits (id, vessel_id, port_id, visit_date) VALUES (1, 1, 3, '2021-02-10'); INSERT INTO vessel_visits (id, vessel_id, port_id, visit_date) VALUES (2, 2, 3, '2021-02-12');", "output": "SELECT COUNT(DISTINCT vessel_id) FROM vessel_visits WHERE port_id = (SELECT id FROM ports WHERE name = 'Los Angeles') AND visit_date BETWEEN '2021-02-01' AND '2021-02-28';"}
{"input": " 'AstroSpace Inc'\uac00 \uc81c\uc870\ud558\ub294 \uc6b0\uc8fc\uc120\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE spacecraft_manufacturing(id INT, cost FLOAT, year INT, manufacturer VARCHAR(20)); INSERT INTO spacecraft_manufacturing(id, cost, year, manufacturer) VALUES (1, 8000000, 2022, 'AstroSpace Inc'); INSERT INTO spacecraft_manufacturing(id, cost, year, manufacturer) VALUES (2, 12000000, 2023, 'Galactic Inc');", "output": "SELECT AVG(cost) FROM spacecraft_manufacturing WHERE manufacturer = 'AstroSpace Inc';"}
{"input": " '\uc911\uac04' \uc2ec\uac01\ub3c4 \ucde8\uc57d\uc810\uc774 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vulnerabilities (id INT PRIMARY KEY, cve VARCHAR(255), severity VARCHAR(50), description TEXT, date DATE); INSERT INTO Vulnerabilities (id, cve, severity, description, date) VALUES (1, 'CVE-2021-5678', 'Medium', 'Cross-site scripting vulnerability', '2021-05-01'); CREATE TABLE Systems (id INT PRIMARY KEY, hostname VARCHAR(255), ip VARCHAR(50), vulnerability_id INT, FOREIGN KEY (vulnerability_id) REFERENCES Vulnerabilities(id)); INSERT INTO Systems (id, hostname, ip, vulnerability_id) VALUES (2, 'appserver01', '10.0.1.1', 1);", "output": "SELECT COUNT(*) FROM Systems WHERE vulnerability_id IN (SELECT id FROM Vulnerabilities WHERE severity = 'Medium');"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74\uc758 \ucd5c\uadfc \ub450 \ud68c\uacc4 \uc5f0\ub3c4 \uac04 \uc778\ud504\ub77c \uc608\uc0b0\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE InfrastructureBudget (FiscalYear INT, Region VARCHAR(50), Budget FLOAT); INSERT INTO InfrastructureBudget (FiscalYear, Region, Budget) VALUES (2019, 'South America', 1200000.00), (2020, 'South America', 1300000.00);", "output": "SELECT LAG(Budget, 1) OVER (ORDER BY FiscalYear) - Budget AS BudgetDifference FROM InfrastructureBudget WHERE Region = 'South America' ORDER BY FiscalYear DESC LIMIT 1;"}
{"input": " \ub9e4\ub144 \uac00\uc7a5 \ub9ce\uc774 \uc0dd\uc0b0\ub41c \ud56d\uacf5\uae30 \ubaa8\ub378\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Aircraft (AircraftID INT, Model VARCHAR(50), Manufacturer VARCHAR(50), Year INT, ProductionQuantity INT); INSERT INTO Aircraft (AircraftID, Model, Manufacturer, Year, ProductionQuantity) VALUES (1, 'B737', 'Boeing', 1967, 10497), (2, 'A320', 'Airbus', 1988, 9324);", "output": "SELECT Model, Year, ProductionQuantity, MAX(ProductionQuantity) OVER(PARTITION BY Year) as MaxProduction FROM Aircraft;"}
{"input": " 2021\ub144 \uacf5\uacf5 \uc548\uc804\uacfc \uad00\ub828\ub41c \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CitizenFeedback (Year INT, Topic VARCHAR(20), Feedback VARCHAR(10)); INSERT INTO CitizenFeedback (Year, Topic, Feedback) VALUES (2021, 'Public Safety', 'Positive'), (2021, 'Public Safety', 'Negative'), (2021, 'Public Safety', 'Neutral'), (2021, 'Healthcare', 'Positive'), (2021, 'Healthcare', 'Negative');", "output": "SELECT (COUNT(CASE WHEN Topic = 'Public Safety' AND Feedback IN ('Positive', 'Negative', 'Neutral') THEN 1 END) * 100.0 / COUNT(*)) as Pct_Public_Safety_Feedback FROM CitizenFeedback WHERE Year = 2021;"}
{"input": " \uc131\uc774 'S'\ub85c \uc2dc\uc791\ud558\ub294 \ubcc0\ud638\uc0ac\uac00 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), last_name VARCHAR(20)); INSERT INTO attorneys (attorney_id, name, last_name) VALUES (1, 'Jane Smith', 'Smith'), (2, 'Michael Johnson', 'Johnson'); CREATE TABLE cases (case_id INT, attorney_id INT, case_outcome VARCHAR(10)); INSERT INTO cases (case_id, attorney_id, case_outcome) VALUES (1, 1, 'Won'), (2, 1, 'Won'), (3, 2, 'Lost');", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cases) FROM cases JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.last_name LIKE 'S%' AND cases.case_outcome = 'Won';"}
{"input": " 2022\ub144 'EthicsReview'\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \uc5b8\ub860\uc724\ub9ac \uc704\ubc18\uc0ac\ud56d\uacfc \uadf8\uc5d0 \ub530\ub978 \uc2dc\uc815\uc870\uce58\ub97c \ub098\uc5f4\ud574 \ubcf4\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE EthicsReview (id INT, violation VARCHAR(50), date DATE, action VARCHAR(50));", "output": "SELECT violation, action FROM EthicsReview WHERE date >= '2022-01-01' AND date < '2023-01-01';"}
{"input": " \uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 1\uba85 \uc774\uc0c1\uc778 \uae30\uc5c5\uc758 \ud3c9\uade0 \ucc3d\uc5c5\uc77c\uc740 \uc5b8\uc81c\uc778\uac00\uc694?", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_date DATE, founder_gender TEXT);", "output": "SELECT AVG(founding_date) FROM companies WHERE founder_gender = 'Female';"}
{"input": " \uac01 \ub098\ub77c\uc758 \uc608\uc220 \uacf5\uc5f0\uacfc \ubb38\ud654\uc720\uc0b0 \uc720\uc801\uc9c0 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE CountryData (Country VARCHAR(20), ArtPerformances INT, HeritageSites INT); INSERT INTO CountryData VALUES ('USA', 5, 3), ('Canada', 2, 1); CREATE VIEW ArtPerformanceCount AS SELECT Country, COUNT(*) AS ArtPerformances FROM CityPerformances GROUP BY Country; CREATE VIEW HeritageSiteCount AS SELECT Country, COUNT(*) AS HeritageSites FROM HeritageSites GROUP BY Country;", "output": "SELECT d.Country, a.ArtPerformances, h.HeritageSites FROM CountryData d JOIN ArtPerformanceCount a ON d.Country = a.Country JOIN HeritageSiteCount h ON d.Country = h.Country;"}
{"input": " \uc791\ub144\uc5d0 \ub0b4\ubd80\uc790\uc5d0 \uc758\ud55c \ubcf4\uc548 \uc0ac\uace0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE incidents (incident_id INT, incident_type VARCHAR(255), incident_date DATE, incident_source VARCHAR(255)); INSERT INTO incidents (incident_id, incident_type, incident_date, incident_source) VALUES (1, 'Phishing', '2022-01-01', 'External'), (2, 'Malware', '2022-01-05', 'External'), (3, 'SQL Injection', '2022-01-10', 'Internal');", "output": "SELECT PERCENTAGE(SUM(CASE WHEN incident_source = 'Internal' THEN 1 ELSE 0 END) OVER (), SUM(CASE WHEN incident_source IS NOT NULL THEN 1 ELSE 0 END) OVER ()) as insider_percentage FROM incidents WHERE incident_date >= DATEADD(year, -1, CURRENT_TIMESTAMP) GROUP BY incident_date;"}
{"input": " \ud3c9\uade0 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uac01 \ub3d9\ubb3c \uc720\ud615\uc758 \ud3c9\uade0 \ubcf4\uc874 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AnimalTypes (Type VARCHAR(255), ConservationScore INT); INSERT INTO AnimalTypes (Type, ConservationScore) VALUES ('Tiger', 70), ('Elephant', 65), ('Panda', 80), ('Rhino', 60);", "output": "SELECT Type, AVG(ConservationScore) as AvgScore FROM AnimalTypes GROUP BY Type ORDER BY AvgScore DESC;"}
{"input": " \uc2ec\ubc15\uc218 \ubaa8\ub2c8\ud130\ub97c \uac00\uc9c0\uace0 \uc788\uace0 \ud14d\uc0ac\uc2a4\uc5d0 \uac70\uc8fc\ud558\ub294 \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Users (user_id INT, has_heart_rate_monitor BOOLEAN, state VARCHAR(2)); INSERT INTO Users (user_id, has_heart_rate_monitor, state) VALUES (1, true, 'TX'); INSERT INTO Users (user_id, has_heart_rate_monitor, state) VALUES (2, false, 'NY');", "output": "SELECT COUNT(*) FROM Users WHERE has_heart_rate_monitor = true AND state = 'TX';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ub2e8\uc77c \ud68c\uc0ac\uac00 \uccb4\uacb0\ud558\ub294 \ucd5c\uc18c \ubc29\uc0b0 \uacc4\uc57d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE defense_contracts (dc_id INT, dc_company VARCHAR(50), dc_country VARCHAR(50)); INSERT INTO defense_contracts (dc_id, dc_company, dc_country) VALUES (1, 'Company A', 'United States'), (2, 'Company B', 'United States'), (3, 'Company C', 'Canada');", "output": "SELECT MIN(dc_count) FROM (SELECT COUNT(*) AS dc_count FROM defense_contracts WHERE dc_country = 'United States' GROUP BY dc_company) AS subquery;"}
{"input": " 'A'\ub85c \uc2dc\uc791\ud558\ub294 \ub178\uc120\uc5d0\uc11c\ub294 \uc81c\uacf5\ub418\uc9c0 \uc54a\ub294 \uc694\uae08 \uc720\ud615\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE RouteFares (RouteID int, RouteName varchar(50), FareType varchar(50)); INSERT INTO RouteFares VALUES (1, 'Route A1', 'Standard'); INSERT INTO RouteFares VALUES (1, 'Route A1', 'Discounted'); INSERT INTO RouteFares VALUES (2, 'Route A2', 'Standard'); INSERT INTO RouteFares VALUES (3, 'Route B1', 'Standard'); INSERT INTO RouteFares VALUES (3, 'Route B1', 'Discounted'); INSERT INTO RouteFares VALUES (4, 'Route C1', 'Premium'); INSERT INTO RouteFares VALUES (5, 'Route D1', 'Standard');", "output": "SELECT FareType FROM RouteFares WHERE RouteName NOT LIKE 'A%' EXCEPT SELECT FareType FROM RouteFares WHERE RouteName LIKE 'A%';"}
{"input": " \ub179\uc0c9 \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc640 \ub3d9\uc77c\ud55c \ub3c4\uc2dc\uc5d0 \uc704\uce58\ud558\uc9c0 \uc54a\ub294 \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE renewable_projects (project_name VARCHAR(255), city VARCHAR(255)); CREATE TABLE green_buildings (building_name VARCHAR(255), city VARCHAR(255));", "output": "SELECT project_name FROM renewable_projects RP WHERE city NOT IN (SELECT city FROM green_buildings);"}
{"input": " 3\uac1c \uc774\uc0c1\uc758 \ubb38\ud654\uc720\uc0b0\uc744 \ubcf4\uc720\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HeritageSites (SiteID int, SiteName varchar(50), Country varchar(50)); INSERT INTO HeritageSites (SiteID, SiteName, Country) VALUES (1, 'Giza Pyramids', 'Egypt'), (2, 'African Renaissance Monument', 'Senegal'), (3, 'Taj Mahal', 'India'), (4, 'Angkor Wat', 'Cambodia'), (5, 'Machu Picchu', 'Peru'), (6, 'Petra', 'Jordan'), (7, 'Colosseum', 'Italy');", "output": "SELECT Country, COUNT(*) FROM HeritageSites GROUP BY Country HAVING COUNT(*) > 3;"}
{"input": " \ud2b9\uc815 \uc0dd\ubb3c\ubc18\uc751\uae30\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc0dd\ubb3c\uacf5\uc815 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \uc815\ubcf4\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE bioprocess (id INT, bioreactor VARCHAR(50), parameter VARCHAR(50), value FLOAT); INSERT INTO bioprocess (id, bioreactor, parameter, value) VALUES (1, 'Bioreactor1', 'Temperature', 37);", "output": "SELECT * FROM bioprocess WHERE bioreactor = 'Bioreactor1';"}
{"input": " 2020\ub144 \ubb38\ud654\uc13c\ud130 \uc8fc\ucd5c \ud589\uc0ac\uc758 \ud3c9\uade0 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CulturalEvents (id INT, year INT, visitors INT); INSERT INTO CulturalEvents (id, year, visitors) VALUES (1, 2017, 500), (2, 2018, 700), (3, 2019, 900), (4, 2020, 1100);", "output": "SELECT AVG(visitors) FROM CulturalEvents WHERE year = 2020;"}
{"input": " \uc544\uc2dc\uc544 \uc0c1\uc704 2\uc704 \ubb3c \uc18c\ube44\uad6d\uc758 \uc5f0\uac04 \ubb3c \uc18c\ube44 \ucd94\uc138\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE asian_water_usage (country TEXT, year INT, water_usage FLOAT); INSERT INTO asian_water_usage (country, year, water_usage) VALUES ('India', 2020, 700000), ('China', 2020, 1200000), ('India', 2021, 750000), ('China', 2021, 1300000);", "output": "SELECT country, water_usage FROM asian_water_usage WHERE country IN (SELECT country FROM asian_water_usage GROUP BY country ORDER BY SUM(water_usage) DESC LIMIT 2) ORDER BY year;"}
{"input": " 2020\ub144 \uc0ac\uc774\ubc84 \uc804\uc7c1\uc5d0 \ucc38\uc5ec\ud558\ub294 \uad6d\uac00", "context": "CREATE TABLE cyberwarfare (country VARCHAR(50), year INT, involved BOOLEAN);", "output": "SELECT country FROM cyberwarfare WHERE year = 2020 AND involved = TRUE;"}
{"input": " 50\uc138 \uc774\uc0c1 \uae30\ubd80\uc790\uc758 \uae30\ubd80\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount DECIMAL(10,2), Age INT);", "output": "SELECT SUM(DonationAmount) FROM Donors WHERE Age >= 50;"}
{"input": " \ub274\uc695 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE concerts (id INT, city VARCHAR(50), revenue FLOAT); INSERT INTO concerts (id, city, revenue) VALUES (1, 'New York', 50000.0), (2, 'Los Angeles', 35000.0);", "output": "SELECT SUM(revenue) FROM concerts WHERE city = 'New York';"}
{"input": " \uc2dc\uc560\ud2c0 \uc2dc \uc0c1\uc704 5\uac1c \uace0\uac1d\uc758 \uc6d4\uac04 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), data_usage FLOAT, city VARCHAR(50));", "output": "SELECT data_usage FROM customers WHERE city = 'Seattle' AND id IN (SELECT id FROM (SELECT id FROM customers WHERE city = 'Seattle' ORDER BY data_usage DESC LIMIT 5) subquery) ORDER BY data_usage DESC;"}
{"input": " \uac00\uc7a5 \uc624\ub798\ub41c \ud31d \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Genre VARCHAR(50), Age INT); INSERT INTO Artists (ArtistID, ArtistName, Genre, Age) VALUES (3, 'Madonna', 'Pop', 63); INSERT INTO Artists (ArtistID, ArtistName, Genre, Age) VALUES (4, 'Britney Spears', 'Pop', 40);", "output": "SELECT ArtistName, Age FROM Artists WHERE Genre = 'Pop' AND Age = (SELECT MAX(Age) FROM Artists WHERE Genre = 'Pop');"}
{"input": " \uac8c\uc784 \uce74\ud14c\uace0\ub9ac\uc5d0 \ubaa8\ub4e0 \ub514\uc9c0\ud138 \uc790\uc0b0\uacfc \ud574\ub2f9 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc774\ub984\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Asset_Smart_Contracts (id INT PRIMARY KEY, digital_asset_id INT, smart_contract_id INT, FOREIGN KEY (digital_asset_id) REFERENCES Digital_Assets(id), FOREIGN KEY (smart_contract_id) REFERENCES Smart_Contracts(id)); INSERT INTO Asset_Smart_Contracts (id, digital_asset_id, smart_contract_id) VALUES (1, 1, 2); INSERT INTO Asset_Smart_Contracts (id, digital_asset_id, smart_contract_id) VALUES (2, 2, 4);", "output": "SELECT da.name, sc.name FROM Digital_Assets da INNER JOIN Asset_Smart_Contracts asc ON da.id = asc.digital_asset_id INNER JOIN Smart_Contracts sc ON asc.smart_contract_id = sc.id WHERE sc.category = 'Gaming';"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc2e0\uaddc \uae30\ubd80\uc790\uac00 \uae30\ubd80\ub97c \ud558\uc600\ub098\uc694?", "context": "CREATE TABLE Donors (DonorID INT, DonationDate DATE, Amount DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonationDate, Amount) VALUES (1, '2022-07-01', 50.00), (2, '2022-10-14', 100.00), (3, '2022-09-03', 25.00);", "output": "SELECT COUNT(DonorID) FROM Donors WHERE YEAR(DonationDate) = 2022 AND DonorID NOT IN (SELECT DonorID FROM Donors GROUP BY DonorID HAVING COUNT(DonorID) < 2) AND QUARTER(DonationDate) = 3;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 '\ubd81\ud574'\uc5d0\uc11c \uc5f0\uac04 \uba87 \uac1c\uc758 \uc11d\uc720 \uad74\ucc29 \uc7a5\uce58\uac00 \ud65c\ub3d9\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE oil_rig_years (rig_id INT, region VARCHAR(20), year INT, active INT); INSERT INTO oil_rig_years (rig_id, region, year, active) VALUES (1, 'North Sea', 2018, 1), (2, 'North Sea', 2019, 1), (3, 'North Sea', 2020, 2), (4, 'Nigeria', 2018, 2), (5, 'Nigeria', 2019, 2);", "output": "SELECT year, COUNT(*) FROM oil_rig_years WHERE region = 'North Sea' AND year >= 2018 GROUP BY year;"}
{"input": " \uc9c0\ub09c \ub2ec \uc77c\ubcf8\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \uc5ed\ubb3c\ub958 \uc774\ubca4\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE events (id INT, event_type VARCHAR(50), country VARCHAR(50), event_date DATE); INSERT INTO events VALUES (1, 'Return', 'Japan', '2022-03-05'), (2, 'Repair', 'France', '2022-03-10'), (3, 'Disposal', 'Japan', '2022-02-20');", "output": "SELECT * FROM events WHERE country = 'Japan' AND event_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"input": " \uac00\uaca9\uc774 \uc778\uc0c1\ub41c \uc81c\ud488\uc740 \ubb34\uc5c7\uc774\uba70, \uc774\uc804 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE products (id INT, product_name VARCHAR(50), category VARCHAR(50), size VARCHAR(10), price DECIMAL(10,2), price_date DATE); INSERT INTO products (id, product_name, category, size, price, price_date) VALUES (1, 'Black Dress', 'Dresses', 'S', 120, '2022-01-01'), (2, 'Pink Blouse', 'Tops', 'M', 70, '2022-02-01');", "output": "SELECT product_name, category, size, price, price_date, LAG(price) OVER (PARTITION BY product_name ORDER BY price_date DESC) as previous_price FROM products WHERE price > previous_price OR previous_price IS NULL;"}
{"input": " 2022\ub144 \ub3c4\uc2dc\ubcc4 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE waste_generation (id INT, year INT, city VARCHAR(255), waste_amount INT);", "output": "SELECT city, SUM(waste_amount) as total_waste_generation FROM waste_generation WHERE year = 2022 GROUP BY city;"}
{"input": " \uc9c0\ub09c \ub2ec \uc9c0\uc18d \uac00\ub2a5\uc131\uc5d0 \uc911\uc810\uc744 \ub454 \uac01 \ub808\uc2a4\ud1a0\ub791 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ube44\uac74 \uc694\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (id INT, name TEXT, focus TEXT); INSERT INTO Restaurants (id, name, focus) VALUES (1, 'Bean Scene', 'Sustainability'), (2, 'Cafe Delirium', 'Coffee'), (3, 'Eco Brew', 'Sustainability'); CREATE TABLE Menu (id INT, name TEXT, category TEXT, type TEXT, vegan BOOLEAN, restaurant_id INT); CREATE TABLE Orders (id INT, menu_id INT, order_date DATE, quantity INT);", "output": "SELECT menu.name, menu.category, SUM(orders.quantity) as total_quantity, ROW_NUMBER() OVER (PARTITION BY menu.category ORDER BY SUM(orders.quantity) DESC) as rank FROM Orders JOIN Menu ON Orders.menu_id = Menu.id JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.focus = 'Sustainability' AND Menu.vegan = 1 AND Orders.order_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY menu.name, menu.category ORDER BY menu.category, rank;"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ud50c\ub808\uc774\ub41c \uac8c\uc784 \uc0c1\uc704 3\uac1c\uc640 \ud574\ub2f9 \uc7a5\ub974\ub97c \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04 \uc21c\uc73c\ub85c \uc815\ub82c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE GameData (GameID INT, GameName VARCHAR(50), Genre VARCHAR(50), AvgHoursPlayed DECIMAL(5,2)); INSERT INTO GameData (GameID, GameName, Genre, AvgHoursPlayed) VALUES (1, 'Game1', 'FPS', 12.5), (2, 'Game2', 'RPG', 10.3), (3, 'Game3', 'Sports', 15.6), (4, 'Game4', 'Simulation', 17.2);", "output": "SELECT E.EventCountry, GD.GameName, GD.Genre, SUM(GD.AvgHoursPlayed) AS TotalHoursPlayed, ROW_NUMBER() OVER (PARTITION BY E.EventCountry ORDER BY SUM(GD.AvgHoursPlayed) DESC) AS Rank FROM Players P JOIN EventParticipation EP ON P.PlayerID = EP.PlayerID JOIN EventDates E ON EP.EventID = E.EventID JOIN GameData GD ON P.PlayerID = GD.GameID GROUP BY E.EventCountry, GD.GameName, GD.Genre HAVING COUNT(DISTINCT P.PlayerID) > 1 ORDER BY E.EventCountry, TotalHoursPlayed DESC"}
{"input": " Justice_database\uc758 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ucc98\ub9ac\ub41c \uc0ac\uac74\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cases (id INT, district VARCHAR(255), case_type VARCHAR(255), status VARCHAR(255)); INSERT INTO cases (id, district, case_type, status) VALUES (1, 'Manhattan', 'Felony', 'Closed'), (2, 'Brooklyn', 'Misdemeanor', 'Open');", "output": "SELECT district, COUNT(*) FROM cases GROUP BY district;"}
{"input": " \ub304\uc2a4 \uacf5\uc5f0\uc744 \uc7ac\ubc29\ubb38\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Visits (visit_id INT, visitor_id INT, event_id INT, visit_date DATE); CREATE TABLE Visitors (visitor_id INT, name VARCHAR(255), birthdate DATE); CREATE TABLE Events (event_id INT, name VARCHAR(255), date DATE);", "output": "SELECT 100.0 * COUNT(DISTINCT V.visitor_id) / COUNT(DISTINCT VV.visitor_id) FROM Visits V JOIN Visitors VV ON V.visitor_id = VV.visitor_id JOIN Events E ON V.event_id = E.event_id WHERE E.name LIKE '%Dance%' AND V.visit_id <> (SELECT MIN(visit_id) FROM Visits WHERE Visitors.visitor_id = VV.visitor_id);"}
{"input": "2019\ub144\uacfc 2020\ub144\uc758 \uac01 \uc6d0\uc778\uc5d0 \ub300\ud55c \uc5f0\uac04 \uae30\ubd80 \uc99d\uac00\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DonationCausesYOY (DonationCauseID int, DonationCause varchar(50), DonationYear int, DonationAmount decimal(10,2)); INSERT INTO DonationCausesYOY (DonationCauseID, DonationCause, DonationYear, DonationAmount) VALUES (1, 'Education', 2019, 10000.00), (2, 'Healthcare', 2019, 15000.00), (3, 'Environment', 2019, 12000.00), (4, 'Education', 2020, 12000.00), (5, 'Healthcare', 2020, 18000.00), (6, 'Environment', 2020, 14000.00);", "output": "SELECT DonationCause, DonationYear, DonationAmount, LAG(DonationAmount, 1) OVER (PARTITION BY DonationCause ORDER BY DonationYear) as PreviousYearAmount, (DonationAmount - LAG(DonationAmount, 1) OVER (PARTITION BY DonationCause ORDER BY DonationYear)) * 100.0 / LAG(DonationAmount, 1) OVER (PARTITION BY DonationCause ORDER BY DonationYear) as DonationGrowthRate FROM DonationCausesYOY WHERE DonationYear IN (2019, 2020) ORDER BY DonationCause, DonationYear;"}
{"input": " \ube0c\ub77c\uc9c8 \uc0ac\uc6a9\uc790\uc758 \ucd1d \ud314\ub85c\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, country VARCHAR(255), followers INT); INSERT INTO users (id, country, followers) VALUES (1, 'Brazil', 1000), (2, 'USA', 2000), (3, 'Brazil', 3000), (4, 'USA', 4000);", "output": "SELECT SUM(followers) FROM users WHERE country = 'Brazil';"}
{"input": "\ubd80\ub3d9\uc0b0 \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \uac00\uaca9\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud55c \ubca0\uc774 \uc9c0\uc5ed\uc758 \ud3c9\ubc29\ud53c\ud2b8\ub2f9 \ud3c9\uade0 \uacf5\ub3d9 \uc18c\uc720 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bay_area_properties (property_id INT, price DECIMAL(10,2), size INT, co_ownership BOOLEAN, property_type VARCHAR(20)); INSERT INTO bay_area_properties (property_id, price, size, co_ownership, property_type) VALUES (1, 1000000, 2000, TRUE, 'Condo'), (2, 1500000, 3000, TRUE, 'House'), (3, 800000, 1500, FALSE, 'Condo'), (4, 1200000, 2500, FALSE, 'House');", "output": "SELECT property_type, AVG(price/size) AS avg_price_per_sqft, ROW_NUMBER() OVER (ORDER BY AVG(price/size) DESC) AS rank FROM bay_area_properties WHERE co_ownership = TRUE GROUP BY property_type ORDER BY avg_price_per_sqft DESC;"}
{"input": " \ud2b9\uc815 \uc131\ubd84\uc774 \ud3ec\ud568\ub41c \uc81c\ud488\uc758 \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ud654\ud559\ubb3c\uc9c8\uc758 \ud654\ud559\uc131\ubd84, \uc704\ud5d8\ubd84\ub958, \uc0dd\uc0b0\uc77c\uc790 \ubc0f \ud574\ub2f9 \uacf5\uae09\uc5c5\uccb4 \uc774\ub984\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemicals (chemical_id INT, chemical_name TEXT, composition TEXT, hazard_classification TEXT); CREATE TABLE product_ingredients (ingredient_id INT, product_code TEXT, chemical_id INT); CREATE TABLE chemical_suppliers (supplier_id INT, chemical_id INT, supplier_name TEXT); INSERT INTO chemicals (chemical_id, chemical_name, composition, hazard_classification) VALUES (1, 'Chemical A', 'H2O, NaCl', 'Low'), (2, 'Chemical B', 'CO2, H2O', 'Medium'); INSERT INTO product_ingredients (ingredient_id, product_code, chemical_id) VALUES (1, 'P1', 1), (2, 'P2', 2); INSERT INTO chemical_suppliers (supplier_id, chemical_id, supplier_name) VALUES (1, 1, 'Supplier C'), (2, 2, 'Supplier D');", "output": "SELECT chemicals.composition, chemicals.hazard_classification, products.production_date, chemical_suppliers.supplier_name FROM chemicals INNER JOIN product_ingredients ON chemicals.chemical_id = product_ingredients.chemical_id INNER JOIN chemical_suppliers ON chemicals.chemical_id = chemical_suppliers.chemical_id INNER JOIN products ON product_ingredients.product_code = products.product_code WHERE product_ingredients.product_code = 'P1';"}
{"input": "\uc624\ub808\uace4'\uc5d0 \uc788\ub294 \ud0dc\uc591\uad11 \ubc1c\uc804\uc18c\uc758 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE solar_farms (id INT, state VARCHAR(20), capacity FLOAT); INSERT INTO solar_farms (id, state, capacity) VALUES (1, 'Oregon', 120.5), (2, 'Washington', 150.2), (3, 'Oregon', 180.1), (4, 'Nevada', 200.5);", "output": "SELECT SUM(capacity) FROM solar_farms WHERE state = 'Oregon';"}
{"input": " 2010\ub144 \uc774\ud6c4 \ub3d9\ub0a8\uc544\uc2dc\uc544\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc678\uad50 \uc0ac\uc808\ub2e8\uc774 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Diplomatic_Missions (Mission_ID INT PRIMARY KEY, Mission_Name VARCHAR(255), Country VARCHAR(255), Start_Date DATE, End_Date DATE); INSERT INTO Diplomatic_Missions (Mission_ID, Mission_Name, Country, Start_Date, End_Date) VALUES (1, 'Operation Unified Protector', 'Libya', '2011-03-24', '2011-10-31');", "output": "SELECT COUNT(*) FROM Diplomatic_Missions WHERE Country IN (SELECT Name FROM Countries WHERE Continent = 'Asia' AND Region = 'Southeast Asia') AND Start_Date >= '2010-01-01';"}
{"input": " \uc7ac\ubb34 \ub2a5\ub825 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ub300\ucd9c\uc744 \ubc1b\uc740 \uace0\uac1d\uc758 \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE financial_capability_client (client_id INT PRIMARY KEY, name VARCHAR(100), age INT, education_level VARCHAR(20));CREATE TABLE financial_capability_loan (loan_id INT PRIMARY KEY, client_id INT, loan_amount DECIMAL(10, 2), loan_date DATE);INSERT INTO financial_capability_client (client_id, name, age, education_level) VALUES (4, 'Jane Smith', 40, 'Master'), (5, 'Bob Johnson', 50, 'Bachelor'); INSERT INTO financial_capability_loan (loan_id, client_id, loan_amount, loan_date) VALUES (4, 4, 8000.00, '2022-01-01'), (5, 5, 6000.00, '2022-01-01');", "output": "UPDATE client SET education_level = (SELECT education_level FROM financial_capability_client f WHERE f.client_id = client.client_id) FROM client INNER JOIN financial_capability_loan l ON client.client_id = l.client_id;"}
{"input": "2021\ub144 3\ubd84\uae30 \uac01 \ud68c\uc0ac\uc758 \ucd1d \uc11d\uc720 \ubc0f \uac00\uc2a4 \uc0dd\uc0b0\ub7c9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE company (id INT, name VARCHAR(50)); CREATE TABLE oil_production (company_id INT, date DATE, oil_production FLOAT); CREATE TABLE gas_production (company_id INT, date DATE, gas_production FLOAT);", "output": "SELECT c.name, SUM(op.oil_production) + SUM(gp.gas_production) FROM company c JOIN oil_production op ON c.id = op.company_id JOIN gas_production gp ON c.id = gp.company_id WHERE op.date BETWEEN '2021-07-01' AND '2021-09-30' AND gp.date BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY c.id;"}
{"input": " \uac01 \uad6c\uc5ed\uc758 \ucd1d \ud559\uc0dd \uc218\uc640 \uad50\uc0ac \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, num_students INT, num_teachers INT); INSERT INTO districts (district_id, num_students, num_teachers) VALUES (101, 500, 100), (102, 700, 150), (103, 600, 120);", "output": "SELECT district_id, SUM(num_students) as total_students, SUM(num_teachers) as total_teachers FROM districts GROUP BY district_id;"}
{"input": " \uc720\ub7fd \uc5f0\ud569 \ub0b4 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud558\ub294 '\uacf5\uc815 \ubb34\uc5ed' \uce74\ud14c\uace0\ub9ac \uc81c\ud488\uc758 \ucd5c\uace0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vendor_location (vendor_id INT, vendor_region VARCHAR(50)); INSERT INTO vendor_location (vendor_id, vendor_region) VALUES (1, 'European Union'), (2, 'United States'), (3, 'Canada');", "output": "SELECT MAX(price) FROM products JOIN sales ON products.product_id = sales.product_id JOIN vendors ON sales.vendor_id = vendors.vendor_id JOIN vendor_location ON vendors.vendor_id = vendor_location.vendor_id WHERE products.product_category = 'Fair Trade' AND vendor_location.vendor_region = 'European Union';"}
{"input": " '\ub378\ub9ac'\uc758 \uc790\uc728\uc8fc\ud589\ucc28 \ube44\uc728 \ud655\uc778", "context": "CREATE TABLE public.vehicles (id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO public.vehicles (id, type, city) VALUES (1, 'electric_car', 'Delhi'), (2, 'conventional_car', 'Delhi'), (3, 'autonomous_bus', 'Delhi');", "output": "SELECT (COUNT(*) FILTER (WHERE type LIKE 'autonomous%') * 100.0 / COUNT(*)) AS pct FROM public.vehicles WHERE city = 'Delhi';"}
{"input": " 'rural_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ub18d\ubd80\ub4e4\uc758 \ud3c9\uade0 \uc791\ubb3c \uc218\ud655\ub7c9\uc740 \uadf8\ub4e4\uc774 \uc704\uce58\ud55c \uc9c0\uc5ed\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE farmers (farmer_id INT, name VARCHAR(50), region VARCHAR(50), crop_yield INT); INSERT INTO farmers (farmer_id, name, region, crop_yield) VALUES (1, 'John Doe', 'Midwest', 120), (2, 'Jane Smith', 'Southeast', 150), (3, 'Alice Johnson', 'Northeast', 180);", "output": "SELECT region, AVG(crop_yield) FROM farmers GROUP BY region;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uace0\uc6a9\ub41c \uc9c1\uc6d0\uc758 \ucd5c\uace0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), HireYear INT, Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, Gender, HireYear, Salary) VALUES (1, 'Female', 2022, 90000.00), (2, 'Male', 2021, 85000.00), (3, 'Non-binary', 2020, 75000.00);", "output": "SELECT MAX(Salary) FROM Employees WHERE HireYear = (SELECT MAX(HireYear) FROM Employees);"}
{"input": "\uac01 \ube0c\ub79c\ub4dc\uac00 \uc0ac\uc6a9\ud558\ub294 \uc9c0\uc18d\uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ucd1d\ub7c9\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Brands(Brand_ID INT, Brand_Name TEXT, Sustainable_Material_ID INT, Quantity INT); INSERT INTO Brands(Brand_ID, Brand_Name, Sustainable_Material_ID, Quantity) VALUES (1, 'H&M', 1, 500), (2, 'Zara', 2, 600), (3, 'Levi''s', 1, 400), (4, 'Everlane', 2, 700);", "output": "SELECT Brand_Name, SUM(Quantity) as Total_Quantity FROM Brands GROUP BY Brand_Name ORDER BY Total_Quantity DESC;"}
{"input": " \ud654\ud559\ubb3c\uc9c8\uc778 '\uc218\uc0b0\ud654\ub098\ud2b8\ub968'\uacfc \uadf8 \uc81c\uc870 \uacf5\uc815\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uae30\uacc4\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \uc9c1\uc6d0\uacfc \ud574\ub2f9 \ubd80\uc11c\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(20), LastName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (3, 'Jane', 'Smith', 'Safety'); CREATE TABLE Chemicals (ChemicalID INT, ChemicalName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Chemicals (ChemicalID, ChemicalName, Department) VALUES (3, 'Sodium Hydroxide', 'Chemical Safety'); CREATE TABLE Machinery (MachineID INT, MachineName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Machinery (MachineID, MachineName, Department) VALUES (3, 'Dispenser 3', 'Chemical Safety');", "output": "SELECT Employees.FirstName, Employees.LastName, Chemicals.ChemicalName, Machinery.MachineName FROM Employees RIGHT JOIN (Chemicals RIGHT JOIN Machinery ON Chemicals.Department = Machinery.Department) ON Employees.Department = Chemicals.Department WHERE Chemicals.ChemicalName = 'Sodium Hydroxide';"}
{"input": " 2010\ub144 '\uc778\uc0c1\ud30c' \uc6b4\ub3d9\uc774 \ud310\ub9e4\ud55c \ubaa8\ub4e0 \ubbf8\uc220\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, movement VARCHAR(255), sale_year INT, revenue DECIMAL(10, 2));", "output": "SELECT SUM(revenue) FROM Artworks WHERE movement = 'Impressionist' AND sale_year = 2010;"}
{"input": " \uc62c\ud574 \ub0b4\ubd80 \ubc0f \uc678\ubd80 \uc0ac\uace0 \ubaa8\ub450\uc5d0 \uc5f0\ub8e8\ub41c \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub97c \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uba85\uc758 \uc704\ud611 \ud589\uc704\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE security_incidents (threat_actor VARCHAR(50), is_internal BOOLEAN, incident_year INTEGER); INSERT INTO security_incidents (threat_actor, is_internal, incident_year) VALUES ('APT28', true, 2022); INSERT INTO security_incidents (threat_actor, is_internal, incident_year) VALUES ('Lazarus Group', false, 2022);", "output": "SELECT threat_actor, COUNT(*) AS incident_count FROM security_incidents WHERE incident_year = EXTRACT(YEAR FROM NOW()) GROUP BY threat_actor ORDER BY incident_count DESC LIMIT 5"}
{"input": " \uac24\ub7ec\ub9ac\ubcc4\ub85c \uc870\uac01\ud488\uc758 \ud3c9\uade0 \uc804\uc2dc \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE GalleryC (gallery_name VARCHAR(20), artwork_type VARCHAR(20), exhibition_duration INT); INSERT INTO GalleryC (gallery_name, artwork_type, exhibition_duration) VALUES ('GalleryC', 'Sculpture', 120), ('GalleryC', 'Sculpture', 90), ('GalleryC', 'Painting', 60);", "output": "SELECT gallery_name, AVG(exhibition_duration) as avg_duration FROM (SELECT gallery_name, artwork_type, exhibition_duration, ROW_NUMBER() OVER (PARTITION BY gallery_name, artwork_type ORDER BY exhibition_duration) as rn FROM GalleryC) tmp WHERE rn = 1 GROUP BY gallery_name;"}
{"input": " \uc5f0\ud3c9\uade0 \uae30\uc628\uc774 \uac00\uc7a5 \ub192\uace0 \uac00\uc7a5 \ub0ae\uc740 \ubd81\uadf9 \uc9c0\uc5ed\uc758 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE community_temp_data (community_id INT, year INT, avg_temp FLOAT, community_name VARCHAR(50));", "output": "SELECT community_name, MAX(avg_temp) AS highest_avg_temp, MIN(avg_temp) AS lowest_avg_temp FROM community_temp_data WHERE community_name IN (SELECT community_name FROM communities WHERE region LIKE '%Arctic%') GROUP BY community_name;"}
{"input": " \uc9c0\ub09c \uc8fc \uac01 \ub18d\uc7a5\uc758 \ud3c9\uade0 \ud1a0\uc591 \uc218\ubd84 \uc218\uc900\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE farm_soil_moisture (farm_id INTEGER, date DATE, moisture INTEGER);", "output": "SELECT farm_id, AVG(moisture) as avg_moisture FROM farm_soil_moisture WHERE date >= DATEADD(day, -7, GETDATE()) GROUP BY farm_id;"}
{"input": " \uc0ac\ub9c9 \uae30\ud6c4 \uc9c0\uc5ed\uc5d0\uc11c \uc791\ubb3c\uc744 \uc7ac\ubc30\ud558\ub294 \ub18d\ubd80\uc758 \uc774\ub984\uacfc \uc791\ubb3c\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Farmers (id INT PRIMARY KEY, name VARCHAR(100), age INT, location VARCHAR(100)); INSERT INTO Farmers (id, name, age, location) VALUES (1, 'Ali Al-Khateeb', 45, 'United Arab Emirates'); INSERT INTO Farmers (id, name, age, location) VALUES (2, 'Fathia Al-Mansouri', 50, 'United Arab Emirates'); CREATE TABLE Plots (id INT PRIMARY KEY, farmer_id INT, size FLOAT, crop VARCHAR(50)); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (1, 1, 0.5, 'Dates'); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (2, 2, 0.6, 'Camel Milk'); CREATE TABLE ClimateTypes (id INT PRIMARY KEY, country VARCHAR(50), climate_type VARCHAR(50)); INSERT INTO ClimateTypes (id, country, climate_type) VALUES (1, 'United Arab Emirates', 'Desert');", "output": "SELECT f.name, p.crop FROM Farmers f INNER JOIN Plots p ON f.id = p.farmer_id INNER JOIN ClimateTypes c ON f.location = c.country WHERE c.climate_type = 'Desert';"}
{"input": "\uc5b4\ub5a4 \uc2dd\ub2f9\uc5d0\uc11c\ub3c4 \ud310\ub9e4\ub418\uc9c0 \uc54a\uc740 \uba54\ub274 \ud56d\ubaa9\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Menu_Items_Without_Sales (MenuItemID INT, MenuItemName VARCHAR(255)); INSERT INTO Menu_Items_Without_Sales VALUES (1,'Burger'),(2,'Pizza'),(3,'Pasta'),(4,'Salad'),(5,'Tacos');", "output": "SELECT Menu_Items_Without_Sales.MenuItemName FROM Menu_Items_Without_Sales WHERE Menu_Items_Without_Sales.MenuItemID NOT IN (SELECT Sales.MenuItemID FROM Sales);"}
{"input": " 2021\ub144 7\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uc11c\ube44\uc2a4\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_revenue (revenue_id INT, revenue_date DATE, revenue_amount FLOAT, revenue_type VARCHAR(20)); INSERT INTO mobile_revenue (revenue_id, revenue_date, revenue_amount, revenue_type) VALUES (1, '2021-07-12', 50000, 'Mobile'), (2, '2021-07-28', 75000, 'Broadband'); CREATE TABLE broadband_revenue (revenue_id INT, revenue_date DATE, revenue_amount FLOAT, revenue_type VARCHAR(20)); INSERT INTO broadband_revenue (revenue_id, revenue_date, revenue_amount, revenue_type) VALUES (1, '2021-07-05', 60000, 'Broadband'), (2, '2021-07-25', 90000, 'Broadband');", "output": "SELECT SUM(revenue_amount) FROM mobile_revenue WHERE revenue_date BETWEEN '2021-07-01' AND '2021-07-31' UNION ALL SELECT SUM(revenue_amount) FROM broadband_revenue WHERE revenue_date BETWEEN '2021-07-01' AND '2021-07-31';"}
{"input": "\ub2e8\uc77c \uc8fc\ubb38\uc73c\ub85c \ud310\ub9e4\ub418\ub294 '\uc7ac\ud65c\uc6a9 \ub098\uc77c\ub860 \uac00\ubc29'\uc758 \ucd5c\uace0 \uac00\uaca9\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE garments (id INT, name VARCHAR(255), category VARCHAR(255), country VARCHAR(255), price DECIMAL(10,2)); INSERT INTO garments (id, name, category, country, price) VALUES (1, 'Recycled Nylon Bag', 'Accessories', 'Germany', 120.00); CREATE TABLE orders (id INT, garment_id INT, quantity INT, order_date DATE, price DECIMAL(10,2));", "output": "SELECT MAX(price) FROM orders WHERE garment_id IN (SELECT id FROM garments WHERE name = 'Recycled Nylon Bag');"}
{"input": " \ucd1d \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uc6b0\uc8fc \uc784\ubb34\uc640 \ud574\ub2f9 \uc784\ubb34 \ucc45\uc784\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE missions (mission_name VARCHAR(255), mission_director VARCHAR(255), total_cost DECIMAL(10,2)); INSERT INTO missions (mission_name, mission_director, total_cost) VALUES ('Mission1', 'Dir1', 150000.00), ('Mission2', 'Dir2', 200000.00), ('Mission3', 'Dir3', 120000.00), ('Mission4', 'Dir1', 180000.00), ('Mission5', 'Dir2', 250000.00);", "output": "SELECT mission_name, mission_director, total_cost FROM (SELECT mission_name, mission_director, total_cost, ROW_NUMBER() OVER (ORDER BY total_cost DESC) as rank FROM missions) as ranked_missions WHERE rank = 1;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 '\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591' \uc9c0\uc5ed \uad6d\uac00\uc758 \uad70\uc0ac \uae30\uc220\uc5d0 \ub300\ud55c \ucd1d \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT, name VARCHAR(255)); CREATE TABLE military_spending (id INT, country_id INT, region_id INT, year INT, amount DECIMAL(10,2));", "output": "SELECT SUM(amount) as total_spending FROM military_spending WHERE region_id = (SELECT id FROM regions WHERE name = 'Asia-Pacific') AND year >= (SELECT YEAR(CURRENT_DATE) - 3);"}
{"input": "\ub9e4\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uacfc \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \ub4f1\uae09\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE MenuItems (MenuItemID int, RestaurantID int, MenuItemName varchar(50), SaleAmount numeric(10, 2), SustainabilityRating int); INSERT INTO MenuItems (MenuItemID, RestaurantID, MenuItemName, SaleAmount, SustainabilityRating) VALUES (1, 1, 'Quinoa Salad', 2000, 5); INSERT INTO MenuItems (MenuItemID, RestaurantID, MenuItemName, SaleAmount, SustainabilityRating) VALUES (2, 1, 'Chickpea Curry', 3000, 4); INSERT INTO MenuItems (MenuItemID, RestaurantID, MenuItemName, SaleAmount, SustainabilityRating) VALUES (3, 2, 'Tofu Stir Fry', 4000, 5); INSERT INTO MenuItems (MenuItemID, RestaurantID, MenuItemName, SaleAmount, SustainabilityRating) VALUES (4, 2, 'Vegetable Sushi', 1000, 3);", "output": "SELECT R.RestaurantName, M.MenuItemName, M.SaleAmount, M.SustainabilityRating FROM MenuItems M JOIN (SELECT RestaurantID, MenuItemName, MAX(SaleAmount) AS MaxSaleAmount FROM MenuItems GROUP BY RestaurantID, MenuItemName) T ON M.RestaurantID = T.RestaurantID AND M.MenuItemName = T.MenuItemName AND M.SaleAmount = T.MaxSaleAmount JOIN Restaurants R ON M.RestaurantID = R.RestaurantID ORDER BY R.RestaurantName, M.SaleAmount DESC LIMIT 3;"}
{"input": " \ub9c8\ucf00\ud305 \ucea0\ud398\uc778\uc758 \ub300\uc0c1\uacfc \uc608\uc0b0\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE destination_marketing (id INT, destination VARCHAR(50), campaign_name VARCHAR(50), budget DECIMAL(10, 2), start_date DATE, end_date DATE); INSERT INTO destination_marketing (id, destination, campaign_name, budget, start_date, end_date) VALUES (1, 'Sydney', 'Summer Down Under', 80000, '2022-12-01', '2023-02-28'); INSERT INTO destination_marketing (id, destination, campaign_name, budget, start_date, end_date) VALUES (2, 'Rio de Janeiro', 'Carnival', 70000, '2023-02-01', '2023-02-28');", "output": "SELECT destination, budget FROM destination_marketing ORDER BY budget DESC;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud589\uc0ac \ubc0f \uc7ac\ub09c \ub300\ube44 \ud65c\ub3d9\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_policing (id INT, type VARCHAR(255), location VARCHAR(255), reported_date DATE); INSERT INTO community_policing (id, type, location, reported_date) VALUES (1, 'Meeting', 'Community Center', '2021-01-02'); CREATE TABLE disaster_preparedness (id INT, type VARCHAR(255), location VARCHAR(255), reported_date DATE); INSERT INTO disaster_preparedness (id, type, location, reported_date) VALUES (1, 'Flood', 'River Area', '2021-01-01');", "output": "SELECT COUNT(*) FROM community_policing UNION SELECT COUNT(*) FROM disaster_preparedness;"}
{"input": " \ube48\uace4 \uac10\uc18c \ubd80\ubb38\uc744 \uc9c0\uc6d0\ud55c \uace0\uc720 \ud22c\uc790\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investor_activities (investor VARCHAR(20), sector VARCHAR(30)); INSERT INTO investor_activities (investor, sector) VALUES ('XYZ', 'climate change'), ('ABC', 'climate change'), ('DEF', 'poverty reduction');", "output": "SELECT COUNT(DISTINCT investor) FROM investor_activities WHERE sector = 'poverty reduction';"}
{"input": " \uac01 \ube0c\ub79c\ub4dc\ub294 \uba87 \uac00\uc9c0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac \uc720\ud615\uc744 \uc0ac\uc6a9\ud569\ub2c8\uae4c?", "context": "CREATE TABLE brands (brand_id INT, name TEXT, sustainable_material TEXT); INSERT INTO brands (brand_id, name, sustainable_material) VALUES (1, 'SustainaCloth', 'organic cotton'); INSERT INTO brands (brand_id, name, sustainable_material) VALUES (2, 'EcoFabrics', 'recycled polyester, organic cotton');", "output": "SELECT name, COUNT(sustainable_material) OVER (PARTITION BY name) FROM brands;"}
{"input": " \ud30c\ub9ac\uc640 \ub85c\ub9c8\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5b4\ub290 \uae4c\uc694?", "context": "CREATE TABLE weather (city VARCHAR(20), temperature INT); INSERT INTO weather VALUES ('Paris', 15), ('Paris', 14), ('Rome', 22), ('Rome', 20);", "output": "SELECT AVG(temperature) FROM weather WHERE city = 'Paris' UNION SELECT AVG(temperature) FROM weather WHERE city = 'Rome'"}
{"input": " \ud3c9\uade0 \uc790\uae08 \uae08\uc561\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \ubcf4\uc720\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_communication (country VARCHAR(50), initiative VARCHAR(50), funding DECIMAL(10,2)); INSERT INTO climate_communication (country, initiative, funding) VALUES ('Canada', 'Climate Change Documentary', 1000000), ('Mexico', 'Climate Communication Symposium', 2000000);", "output": "SELECT country, initiative, funding FROM climate_communication WHERE funding > (SELECT AVG(funding) FROM climate_communication);"}
{"input": " \uad6d\uac00\ubcc4 \uac01 \ucc3d\uace0\uc5d0\uc11c \ubc30\uc1a1\ub41c \uc804\uc790\uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (id INT, WarehouseId INT, Product VARCHAR(50), Quantity INT, Destination VARCHAR(50), ShippedDate DATE); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (1, 1, 'Laptop', 50, 'New York', '2022-01-01'); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (2, 1, 'Monitor', 75, 'Los Angeles', '2022-01-05'); INSERT INTO Shipments (id, WarehouseId, Product, Quantity, Destination, ShippedDate) VALUES (3, 2, 'Keyboard', 100, 'Paris', '2022-01-07');", "output": "SELECT WarehouseId, Country, SUM(Quantity) AS TotalQuantity FROM (SELECT WarehouseId, Product, Quantity, Destination, SUBSTRING(Destination, 1, INSTR(Destination, ',') - 1) AS Country FROM Shipments) AS ShippedData GROUP BY WarehouseId, Country;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc2dc\uc758 '\uad50\ud1b5' \ubd80\uc11c\uc5d0 '\uad50\ud1b5 \ud63c\uc7a1'\uc774\ub77c\ub294 \uc0c8\ub85c\uc6b4 \uac1c\ubc29\ud615 \ub370\uc774\ud130 \uc774\ub2c8\uc154\ud2f0\ube0c \uc0bd\uc785", "context": "CREATE TABLE department (id INT, name VARCHAR(255)); INSERT INTO department (id, name) VALUES (1, 'Parks'); INSERT INTO department (id, name) VALUES (2, 'Transportation'); CREATE TABLE initiative (id INT, name VARCHAR(255), department_id INT, status VARCHAR(255));", "output": "INSERT INTO initiative (id, name, department_id, status) VALUES ((SELECT MAX(id) FROM initiative) + 1, 'Traffic Congestion', (SELECT id FROM department WHERE name = 'Transportation'), 'open');"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac00\uc7a5 \ucde8\uc57d\ud55c \uc0c1\uc704 10\uac1c \uc2dc\uc2a4\ud15c\uc758 \ud3c9\uade0 \uc704\ud5d8 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE systems (system_id INT, risk_score INT, last_updated DATETIME); INSERT INTO systems (system_id, risk_score, last_updated) VALUES (1, 8, '2022-01-01'), (2, 5, '2022-01-05'), (3, 10, '2022-01-03'), (4, 6, '2022-01-04'), (5, 15, '2022-01-02');", "output": "SELECT AVG(risk_score) FROM (SELECT risk_score, ROW_NUMBER() OVER (ORDER BY risk_score DESC) rn FROM systems WHERE last_updated >= DATEADD(day, -30, GETDATE())) t WHERE rn <= 10;"}
{"input": " \uc778\ub825\uc758 50% \uc774\uc0c1\uc774 \uc5ec\uc131\uc778 \uad11\uc0b0 \uc0ac\uc5c5\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (operation_id INT, operation_name VARCHAR(50), employee_id INT, first_name VARCHAR(50), last_name VARCHAR(50), position VARCHAR(50), gender VARCHAR(10)); INSERT INTO mining_operations (operation_id, operation_name, employee_id, first_name, last_name, position, gender) VALUES (1, 'Operation A', 1, 'John', 'Doe', 'Engineer', 'Male'), (2, 'Operation B', 2, 'Jane', 'Doe', 'Manager', 'Female'), (3, 'Operation C', 3, 'Mike', 'Johnson', 'Operator', 'Male'), (4, 'Operation D', 4, 'Emily', 'Davies', 'Operator', 'Female');", "output": "SELECT operation_name FROM (SELECT operation_name, (COUNT(*) FILTER (WHERE gender = 'Female'))/COUNT(*) AS female_ratio FROM mining_operations GROUP BY operation_name) AS subquery WHERE female_ratio > 0.5;"}
{"input": " \uc778\ub3c4 \uacf5\uae09\uc5c5\uccb4\uac00 \uacf5\uae09\ud55c \ud654\ud559\ubb3c\uc9c8\uc5d0 \ub300\ud55c \ud654\ud559\ubb3c\uc9c8 \uc774\ub984, \uacf5\uae09\uc5c5\uccb4 \uc704\uce58 \ubc0f \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), products VARCHAR(255)); CREATE TABLE chemical_inventory (id INT PRIMARY KEY, chemical_name VARCHAR(255), quantity INT, supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); CREATE TABLE safety_protocols (id INT PRIMARY KEY, chemical_name VARCHAR(255), protocol VARCHAR(255), FOREIGN KEY (chemical_name) REFERENCES chemical_inventory(chemical_name)); CREATE TABLE environmental_impact (id INT PRIMARY KEY, chemical_name VARCHAR(255), impact FLOAT, FOREIGN KEY (chemical_name) REFERENCES chemical_inventory(chemical_name));", "output": "SELECT chemical_inventory.chemical_name, suppliers.location, environmental_impact.impact FROM chemical_inventory INNER JOIN suppliers ON chemical_inventory.supplier_id = suppliers.id INNER JOIN environmental_impact ON chemical_inventory.chemical_name = environmental_impact.chemical_name WHERE suppliers.location = 'India';"}
{"input": " 2019\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \uac01 \uc885\uc758 \uac1c\uccb4\uc218 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE wildlife (species VARCHAR(255), population INT, year INT); INSERT INTO wildlife (species, population, year) VALUES ('Deer', 5000, 2019), ('Deer', 4500, 2020), ('Deer', 4000, 2021), ('Bear', 3000, 2019), ('Bear', 3200, 2020), ('Bear', 3400, 2021), ('Wolf', 1000, 2019), ('Wolf', 1050, 2020), ('Wolf', 1100, 2021);", "output": "SELECT species, (population_2021 - population_2019) as population_change FROM (SELECT species, MAX(CASE WHEN year = 2021 THEN population END) as population_2021, MAX(CASE WHEN year = 2019 THEN population END) as population_2019 FROM wildlife GROUP BY species) as population_changes;"}
{"input": " \ub2e8\uc5b4 \uc218\uac00 1000\ubcf4\ub2e4 \ud070 \uae30\uc0ac \uc911\uc5d0\uc11c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc0c1\uc704 5\uac1c \uc8fc\uc81c\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE topics (id INT PRIMARY KEY, name TEXT NOT NULL); CREATE TABLE articles_topics (article_id INT, topic_id INT); CREATE TABLE articles (id INT PRIMARY KEY, title TEXT NOT NULL, word_count INT);", "output": "SELECT topics.name, COUNT(articles_topics.article_id) as article_count FROM topics INNER JOIN articles_topics ON topics.id = articles_topics.topic_id INNER JOIN articles ON articles_topics.article_id = articles.id WHERE articles.word_count > 1000 GROUP BY topics.name ORDER BY article_count DESC LIMIT 5;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 R&B \ub178\ub798\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uc0c1\uc704 5\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE users (id INT, name VARCHAR(255)); CREATE TABLE songs (id INT, title VARCHAR(255), genre VARCHAR(255)); CREATE TABLE user_song_interactions (id INT, user_id INT, song_id INT, interaction_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO users (id, name) VALUES (1, 'John Doe'), (2, 'Jane Doe'); INSERT INTO songs (id, title, genre) VALUES (1, 'Love Song', 'R&B'), (2, 'Rap Song', 'Hip-Hop'); INSERT INTO user_song_interactions (id, user_id, song_id, interaction_type, timestamp) VALUES (1, 1, 1, 'Stream', NOW()), (2, 2, 1, 'Stream', NOW()); CREATE VIEW rnb_songs AS SELECT song_id FROM songs WHERE genre = 'R&B';", "output": "SELECT user_id, COUNT(*) AS streams FROM user_song_interactions WHERE song_id IN (SELECT song_id FROM rnb_songs) GROUP BY user_id ORDER BY streams DESC LIMIT 5;"}
{"input": " \uc5f0\uac04 \ucd9c\ud310\ub418\ub294 AI \uc548\uc804 \uc5f0\uad6c \ub17c\ubb38\uc758 \uc218\ub97c \ub204\uacc4\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA ai_safety; CREATE TABLE papers (year INT, title VARCHAR(50), abstract TEXT, published BOOLEAN); INSERT INTO papers (year, title, abstract, published) VALUES (2018, 'Safe AI Research', 'This paper discusses the importance of safety in AI research...', true), (2019, 'Robust AI Algorithms', 'This paper presents a new approach to developing robust AI algorithms...', true), (2020, 'Explainable AI Systems', 'This paper explores the challenges of developing explainable AI systems...', true), (2021, 'Transparent AI Decision-making', 'This paper examines the need for transparency in AI decision-making...', true);", "output": "SELECT year, COUNT(*), SUM(COUNT(*)) OVER (ORDER BY year) as running_total FROM ai_safety.papers WHERE published = true GROUP BY year;"}
{"input": " Location1\uacfc Location2 \ubaa8\ub450\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items(menu_item VARCHAR(255), location VARCHAR(255)); INSERT INTO menu_items(menu_item, location) VALUES ('Burger', 'Location1'), ('Pizza', 'Location2'), ('Pasta', 'Location1'), ('Salad', 'Location2');", "output": "SELECT menu_item FROM menu_items WHERE location = 'Location1' INTERSECT SELECT menu_item FROM menu_items WHERE location = 'Location2';"}
{"input": " \uc791\ubb3c\uc744 \uc2ec\uc740 \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\uc640 \ud574\ub2f9 \uc7ac\ubc30 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, name VARCHAR(255)); CREATE TABLE planting_records (record_id INT, user_id INT, crop_type VARCHAR(255), planting_date DATE);", "output": "DELETE pr, u FROM users u INNER JOIN planting_records pr ON u.user_id = pr.user_id WHERE u.name NOT IN (SELECT DISTINCT u.name FROM users u INNER JOIN planting_records pr ON u.user_id = pr.user_id);"}
{"input": " \uc5ec\uc131\uc774 \uc124\ub9bd\ud55c \uc0c1\uc704 2\uac1c \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \uc774\ub984\uacfc \uc790\uae08 \uc870\ub2ec \uae08\uc561\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups (id INT, name VARCHAR(100), founder_gender VARCHAR(10), funding FLOAT); INSERT INTO biotech.startups (id, name, founder_gender, funding) VALUES (1, 'StartupA', 'Female', 5000000.0), (2, 'StartupB', 'Male', 7000000.0), (3, 'StartupC', 'Female', 6000000.0);", "output": "SELECT name, funding FROM (SELECT name, funding, ROW_NUMBER() OVER (PARTITION BY founder_gender ORDER BY funding DESC) as rn FROM biotech.startups WHERE founder_gender = 'Female') t WHERE rn <= 2;"}
{"input": " \ub274\uc2a4 \uae30\uc0ac \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc5b8\ub860 \ub9e4\uccb4\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE NewsArticles (id INT, title VARCHAR(255), media_outlet VARCHAR(255));", "output": "SELECT media_outlet, COUNT(*) AS count FROM NewsArticles GROUP BY media_outlet;"}
{"input": " \uac01 \uc7a5\ub974\ubcc4 \uac8c\uc784\uc744 \uc120\ud638\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc774\uba70, \ud3c9\uade0 \uc5f0\ub839\uc774 \uac00\uc7a5 \ub192\uc740 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID int, Age int, Gender varchar(10), GamePreference varchar(20)); INSERT INTO Players (PlayerID, Age, Gender, GamePreference) VALUES (8, 27, 'Male', 'Action'); INSERT INTO Players (PlayerID, Age, Gender, GamePreference) VALUES (9, 42, 'Female', 'Strategy');", "output": "SELECT Genre, AVG(Age) AS AvgAge, RANK() OVER (ORDER BY AVG(Age) DESC) AS Rank FROM Players P INNER JOIN Games G ON P.GamePreference = G.Genre GROUP BY Genre;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \ud558\ub098 \uc774\uc0c1 \uc774\uc218\ud55c \uad50\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE teachers (id INT, name VARCHAR(255)); CREATE TABLE courses (id INT, name VARCHAR(255), start_date DATE); CREATE TABLE teacher_courses (teacher_id INT, course_id INT, completed DATE);", "output": "SELECT 100.0 * COUNT(DISTINCT tc.teacher_id) / (SELECT COUNT(DISTINCT t.id) FROM teachers t) as pct_completed FROM teacher_courses tc JOIN courses c ON tc.course_id = c.id WHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": " \ub2e4\uc591\ud55c \uc9c0\uc5ed\uc758 \ubc94\uc8c4 \uc720\ud615\ubcc4 \ubc94\uc8c4 \uc218 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE neighborhoods (neighborhood_id INT, neighborhood_name VARCHAR(255));CREATE TABLE crimes (crime_id INT, crime_type VARCHAR(255), neighborhood_id INT, crime_date DATE); INSERT INTO neighborhoods VALUES (1, 'West Hill'), (2, 'East End'); INSERT INTO crimes VALUES (1, 'Theft', 1, '2019-01-01'), (2, 'Vandalism', 2, '2019-02-01');", "output": "SELECT neighborhood_id, crime_type, DATE_TRUNC('month', crime_date) as month, COUNT(*) as num_crimes FROM crimes GROUP BY neighborhood_id, crime_type, month ORDER BY neighborhood_id, crime_type, month"}
{"input": " \uc6cc\uc2f1\ud134 \uc8fc\uc5d0\uc11c \ud5e5\ud0c0\ub974\ub2f9 30,000\ub9c8\ub9ac \uc774\uc0c1\uc758 \uc0ac\uc721 \ubc00\ub3c4\ub97c \uac00\uc9c4 \uc591\uc5b4\uc7a5\uc758 \ucd1d \uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE fish_farms (id INT, state VARCHAR(255), stocking_density INT); INSERT INTO fish_farms (id, state, stocking_density) VALUES (1, 'Washington', 40000), (2, 'Oregon', 35000), (3, 'California', 32000);", "output": "SELECT COUNT(*) FROM fish_farms WHERE state = 'Washington' AND stocking_density > 30000;"}
{"input": " \uace0\uc18d\ub3c4\ub85c\uc5d0\uc11c \uc804\uae30 \uc790\ub3d9\ucc28\uc758 \ucd5c\ub300 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicle (id INT, name TEXT, is_electric BOOLEAN, highway_traffic_speed FLOAT); INSERT INTO Vehicle (id, name, is_electric, highway_traffic_speed) VALUES (1, 'Model S', true, 120.3), (2, 'Camry', false, 112.5), (3, 'Bolt', true, 95.8);", "output": "SELECT MAX(highway_traffic_speed) FROM Vehicle WHERE is_electric = true;"}
{"input": " 'Atlantic Crusader' \uc120\ubc15\uc774 \ucc98\ub9ac\ud558\ub294 \ucd1d \ud654\ubb3c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cargo_details (id INT, vessel_name VARCHAR(50), cargo_type VARCHAR(50), quantity INT); INSERT INTO cargo_details (id, vessel_name, cargo_type, quantity) VALUES (1, 'Atlantic Crusader', 'Container', 7000), (2, 'Atlantic Crusader', 'Bulk', 8000);", "output": "SELECT SUM(quantity) FROM cargo_details WHERE vessel_name = 'Atlantic Crusader';"}
{"input": " '\uc804\uc790' \ubd80\uc11c\uc5d0 '\uace0\uc704' \uadfc\ub85c\uc790\uac00 \uc788\ub294 \uacf5\uc7a5\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id INT, factory_name VARCHAR(20)); INSERT INTO factories VALUES (1, 'Factory A'), (2, 'Factory B'), (3, 'Factory C'); CREATE TABLE departments (department_id INT, department VARCHAR(20)); INSERT INTO departments VALUES (1, 'textile'), (2, 'metal'), (3, 'electronics'); CREATE TABLE roles (role_id INT, role_name VARCHAR(20)); INSERT INTO roles VALUES (1, 'junior'), (2, 'senior'), (3, 'manager'); CREATE TABLE workers (worker_id INT, factory_id INT, role_id INT, department_id INT); INSERT INTO workers VALUES (1, 1, 2, 3), (2, 1, 1, 3), (3, 2, 1, 2), (4, 3, 3, 3);", "output": "SELECT f.factory_name FROM workers w INNER JOIN factories f ON w.factory_id = f.factory_id INNER JOIN roles r ON w.role_id = r.role_id INNER JOIN departments d ON w.department_id = d.department_id WHERE r.role_name = 'senior' AND d.department = 'electronics' GROUP BY f.factory_name;"}
{"input": " \ubca0\uc774\uc9d5\uacfc \uc0c1\ud558\uc774\uc758 \ub300\uc911\uad50\ud1b5 \ud3c9\uade0 \uc774\ub3d9 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE beijing_transit (trip_id INT, mode VARCHAR(20), start_time TIMESTAMP, end_time TIMESTAMP);   CREATE TABLE shanghai_transit (journey_id INT, mode VARCHAR(20), start_time TIMESTAMP, end_time TIMESTAMP);", "output": "SELECT AVG(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS avg_duration FROM beijing_transit WHERE mode = 'Public Transport'   UNION ALL   SELECT AVG(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS avg_duration FROM shanghai_transit WHERE mode = 'Public Transport';"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uacf5\uc815\ubb34\uc5ed \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE regions (id INT, name TEXT); INSERT INTO regions (id, name) VALUES (1, 'North America'), (2, 'South America'), (3, 'Europe'), (4, 'Asia'), (5, 'Africa'); CREATE TABLE products (id INT, name TEXT, is_fair_trade BOOLEAN); INSERT INTO products (id, name, is_fair_trade) VALUES (1, 'Product X', true), (2, 'Product Y', false), (3, 'Product Z', true), (4, 'Product W', false); CREATE TABLE sales (id INT, product TEXT, quantity INT, region TEXT); INSERT INTO sales (id, product, quantity, region) VALUES (1, 'Product X', 100, 'South America'), (2, 'Product Y', 150, 'North America'), (3, 'Product Z', 80, 'Europe'), (4, 'Product W', 120, 'Asia');", "output": "SELECT SUM(sales.quantity) FROM sales INNER JOIN regions ON sales.region = regions.name INNER JOIN products ON sales.product = products.name WHERE products.is_fair_trade = true AND regions.name = 'South America';"}
{"input": " '\ud14d\uc0ac\uc2a4'\uc5d0\uc11c \uc0ac\uac74\uc744 \ucc98\ub9ac\ud55c '\uc774\ud63c' \uc2e4\ubb34 \ubd84\uc57c \ubcc0\ud638\uc0ac\uc758 \ucd1d \uccad\uad6c\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT, Practice TEXT, BillingRate FLOAT, ClientID INT); INSERT INTO Attorneys (AttorneyID, Practice, BillingRate, ClientID) VALUES (1, 'Bankruptcy', 300.00, 1); INSERT INTO Attorneys (AttorneyID, Practice, BillingRate, ClientID) VALUES (2, 'Divorce', 250.00, 2); INSERT INTO Cases (CaseID, ClientID, Outcome) VALUES (1, 1, 'Dismissed'); INSERT INTO CaseAttorneys (CaseID, AttorneyID) VALUES (1, 1); INSERT INTO CaseAttorneys (CaseID, AttorneyID) VALUES (1, 2); INSERT INTO Cases (CaseID, ClientID, Outcome) VALUES (2, 2, 'Settled'); INSERT INTO Clients (ClientID, Region) VALUES (1, 'Northeast'); INSERT INTO Clients (ClientID, Region) VALUES (2, 'South');", "output": "SELECT SUM(BillingRate) FROM Attorneys INNER JOIN CaseAttorneys ON Attorneys.AttorneyID = CaseAttorneys.AttorneyID INNER JOIN Cases ON CaseAttorneys.CaseID = Cases.CaseID INNER JOIN Clients ON Cases.ClientID = Clients.ClientID WHERE Attorneys.Practice = 'Divorce' AND Clients.Region = 'South';"}
{"input": " \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c 50\uba85 \uc774\uc0c1\uc758 \uc5ec\uc131 \ud32c\uc774 \uc774\uc6a9\ud588\ub358 \uc120\uc218 \uc6f0\ube59 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AthleteWellbeing (id INT, name VARCHAR(255), region VARCHAR(255), access_count INT); INSERT INTO AthleteWellbeing (id, name, region, access_count) VALUES (1, 'Yoga', 'Pacific', 40), (2, 'Meditation', 'Pacific', 60), (3, 'Nutrition', 'Atlantic', 30); CREATE TABLE FanDemographics (id INT, name VARCHAR(255), gender VARCHAR(50), region VARCHAR(50)); INSERT INTO FanDemographics (id, name, gender, region) VALUES (1, 'FanA', 'Female', 'Pacific'), (2, 'FanB', 'Male', 'Pacific'), (3, 'FanC', 'Female', 'Atlantic');", "output": "SELECT name, access_count FROM AthleteWellbeing WHERE region = 'Pacific' AND access_count > (SELECT SUM(access_count) / COUNT(*) FROM FanDemographics WHERE gender = 'Female' AND region = 'Pacific');"}
{"input": " 5\ubc31\ub9cc \uac1c\uac00 \ub118\ub294 \ucee8\ud14c\uc774\ub108\ub97c \ucc98\ub9ac\ud558\uace0 \ube0c\ub77c\uc9c8\uc758 \uc6b4\uc1a1\uc5c5\uccb4\uac00 \uc0ac\uc6a9\ud558\ub294 \ud56d\uad6c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Port (PortID INT, Name VARCHAR(255), Country VARCHAR(255), TotalContainersHandled INT); INSERT INTO Port (PortID, Name, Country, TotalContainersHandled) VALUES (7, 'Port of Santos', 'Brazil', 4000000); INSERT INTO Port (PortID, Name, Country, TotalContainersHandled) VALUES (8, 'Port of Rio de Janeiro', 'Brazil', 2000000); INSERT INTO Port (PortID, Name, Country, TotalContainersHandled) VALUES (9, 'Port of Salvador', 'Brazil', 3000000);", "output": "SELECT PortID, Name FROM Port WHERE TotalContainersHandled > 5000000 AND Port.Country IN (SELECT Country FROM Carrier WHERE Carrier.Country = 'Brazil');"}
{"input": " \uae30\ubd80\uc790\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561 \uad6c\ud558\uae30", "context": "CREATE TABLE DonationAmounts (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL(10,2));", "output": "SELECT DonorID, SUM(DonationAmount) FROM DonationAmounts GROUP BY DonorID;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc774 \ubc29\ubb38\ud55c \uc5ec\ud589\uc9c0 \uc0c1\uc704 3\uac1c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists destinations (destination_id int, destination_name varchar(50), region_id int); INSERT INTO destinations (destination_id, destination_name, region_id) VALUES (1, 'Seattle', 1), (2, 'Portland', 1), (3, 'London', 2), (4, 'Manchester', 2); CREATE TABLE if not exists visitor_stats (visitor_id int, destination_id int, visit_date date); INSERT INTO visitor_stats (visitor_id, destination_id, visit_date) VALUES (1, 1, '2022-06-01'), (2, 1, '2022-06-03'), (3, 2, '2022-06-02'), (4, 3, '2022-06-04'), (5, 3, '2022-06-05'), (6, 4, '2022-06-06');", "output": "SELECT d.region_id, d.destination_name, COUNT(vs.destination_id) as num_visits, RANK() OVER (PARTITION BY d.region_id ORDER BY COUNT(vs.destination_id) DESC) as visit_rank FROM destinations d LEFT JOIN visitor_stats vs ON d.destination_id = vs.destination_id GROUP BY d.region_id, d.destination_name ORDER BY d.region_id, visit_rank;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc778\ub3c4 \ub0b4 \uac00\ub3cc\ub9ac\ub284\uc758 \ucd5c\uc800 \uc2dc\uc7a5 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Gadolinium_Market_Prices (id INT, year INT, country VARCHAR(20), market_price DECIMAL(10,2));", "output": "SELECT MIN(market_price) FROM Gadolinium_Market_Prices WHERE country = 'India' AND year BETWEEN 2020 AND 2022;"}
{"input": "\ub9c8\ucf00\ud305 \ubd80\uc11c\uc5d0\uc11c \uc815\uaddc\uc9c1 \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \ud30c\ud2b8\ud0c0\uc784 \uc9c1\uc6d0\uacfc \ube44\uad50\ud558\uc5ec \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, EmployeeName VARCHAR(50), Department VARCHAR(50), EmploymentType VARCHAR(10), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, EmployeeName, Department, EmploymentType, Salary) VALUES (1, 'John Doe', 'Marketing', 'Full-Time', 70000), (2, 'Jane Smith', 'Marketing', 'Part-Time', 35000), (3, 'Mike Johnson', 'IT', 'Full-Time', 80000), (4, 'Sara Brown', 'HR', 'Full-Time', 75000);", "output": "SELECT EmploymentType, AVG(Salary) AS AverageSalary FROM Employees WHERE Department = 'Marketing' GROUP BY EmploymentType;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uae30\ubd80\uc790\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Countries (CountryID INT PRIMARY KEY, CountryName TEXT, Continent TEXT); INSERT INTO Countries (CountryID, CountryName, Continent) VALUES (1, 'United States', 'North America'); INSERT INTO Countries (CountryID, CountryName, Continent) VALUES (2, 'United Kingdom', 'Europe'); INSERT INTO Countries (CountryID, CountryName, Continent) VALUES (3, 'Nigeria', 'Africa');", "output": "SELECT AVG(AmountDonated) FROM (SELECT AmountDonated FROM Donors INNER JOIN Donors_Countries ON Donors.DonorID = Donors_Countries.DonorID WHERE Donors_Countries.CountryName = 'Nigeria' ORDER BY AmountDonated) AS DonorAmounts WHERE (ROW_NUMBER() OVER (ORDER BY AmountDonated) IN ((COUNT(*) + 1) / 2, (COUNT(*) + 2) / 2));"}
{"input": " \ub178\ub3d9\ubc95\uc744 \uc900\uc218\ud558\ub294 \uacf5\uc7a5\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE labor_compliance (factory_id INT, complies BOOLEAN); INSERT INTO labor_compliance (factory_id, complies) VALUES (1, TRUE), (2, FALSE), (3, TRUE), (4, TRUE);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM labor_compliance)) as percentage FROM labor_compliance WHERE complies = TRUE;"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4 \ud3c9\uade0 \uc778\uac74\ube44\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE labor_costs (cost_id INT, project_type VARCHAR(20), labor_cost DECIMAL(5,2)); INSERT INTO labor_costs (cost_id, project_type, labor_cost) VALUES (1, 'Residential', 15000), (2, 'Commercial', 35000), (3, 'Public', 25000);", "output": "SELECT project_type, AVG(labor_cost) as avg_labor_cost FROM labor_costs GROUP BY project_type;"}
{"input": " \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uace0\uac1d\uc744 \uc704\ud55c \ub370\uc774\ud130 \uc694\uae08\uc81c\ub97c \ubcf4\uc5ec\uc8fc\ub294 'customer_data_plans'\ub77c\ub294 \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE SCHEMA telecom; CREATE TABLE mobile_subscribers (id INT, name TEXT, data_plan TEXT); CREATE TABLE broadband_subscribers (customer_id INT, data_usage FLOAT, data_plan TEXT);", "output": "CREATE VIEW customer_data_plans AS SELECT * FROM telecom.mobile_subscribers UNION ALL SELECT customer_id, name, data_plan FROM telecom.broadband_subscribers;"}
{"input": " \uc9c0\ub09c\ub2ec '\uace0\ud6a8\uc728 \ud0dc\uc591\uad11 \ud328\ub110 \uc0dd\uc0b0' \uacf5\uc815\uc5d0 \uc6d0\uc790\uc7ac\ub97c \uc81c\uacf5\ud55c \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (supplier_id INT, name TEXT); CREATE TABLE raw_materials (raw_material_id INT, name TEXT, supplier_id INT, delivery_date DATE); CREATE TABLE process_raw_materials (process_id INT, raw_material_id INT);", "output": "SELECT DISTINCT suppliers.name FROM suppliers INNER JOIN process_raw_materials ON suppliers.supplier_id = (SELECT supplier_id FROM raw_materials WHERE raw_materials.raw_material_id = process_raw_materials.raw_material_id) INNER JOIN raw_materials ON process_raw_materials.raw_material_id = raw_materials.raw_material_id WHERE process_raw_materials.process_id = (SELECT process_id FROM manufacturing_processes WHERE name = 'High-Efficiency Solar Panel Production') AND raw_materials.delivery_date > DATEADD(month, -1, GETDATE());"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74\uc5d0 \uc788\ub294 \uce5c\ud658\uacbd \uc219\ubc15\uc2dc\uc124\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Accommodations_South_America (id INT, name VARCHAR(50), location VARCHAR(50), type VARCHAR(50)); INSERT INTO Accommodations_South_America (id, name, location, type) VALUES (1, 'Rainforest Lodge', 'Amazon', 'Eco-Friendly'), (2, 'Andes Eco-Hotel', 'Andes', 'Eco-Friendly');", "output": "SELECT name, location FROM Accommodations_South_America WHERE type = 'Eco-Friendly';"}
{"input": " \uac01 \uacb0\uc81c \uc720\ud615\ubcc4\ub85c \uc9d5\uc218\ub41c \ucd1d \uc694\uae08\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE fare_collection (route_id INT, payment_type VARCHAR(10), fare DECIMAL(5,2)); INSERT INTO fare_collection (route_id, payment_type, fare) VALUES (1, 'Cash', 2.50), (1, 'Card', 3.00), (2, 'Cash', 2.75), (2, 'Card', 3.25);", "output": "SELECT payment_type, SUM(fare) as total_fare FROM fare_collection GROUP BY payment_type;"}
{"input": " \ucd5c\uadfc 1\ub144\uac04 \ub178\ub3d9\uc0dd\uc0b0\uc131\uc774 \uac00\uc7a5 \ub192\uc740 \uad11\uc0b0\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Labor_Productivity (Mine_Name VARCHAR(50), Productivity FLOAT, Year INT); INSERT INTO Labor_Productivity (Mine_Name, Productivity, Year) VALUES ('Emerald Peaks', 5.3, 2019), ('Ruby Ridge', 4.8, 2019), ('Sapphire Summit', 5.7, 2019);", "output": "SELECT Mine_Name FROM Labor_Productivity WHERE Productivity = (SELECT MAX(Productivity) FROM Labor_Productivity) AND Year = (SELECT MAX(Year) FROM Labor_Productivity);"}
{"input": " \ud3d0\uae30\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc6b0\uc8fc\uc120 \uc5d4\uc9c4\uc744 \ud68d\ub4dd\ud558\uc138\uc694", "context": "CREATE TABLE spacecraft (id INT PRIMARY KEY, name VARCHAR(50), engine VARCHAR(50), status VARCHAR(10));", "output": "SELECT engine FROM spacecraft WHERE status <> 'decommissioned';"}
{"input": " '\uc2dc\ud2f0J'\uc5d0\uc11c \uc2dc\ubbfc \ud53c\ub4dc\ubc31\uc744 \uac00\uc7a5 \ub9ce\uc774 \uc900 \uc0ac\ub78c\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE city_feedback (city VARCHAR(255), citizen_id INT, feedback TEXT); INSERT INTO city_feedback", "output": "SELECT citizen_id, COUNT(*) as feedback_count FROM city_feedback WHERE city = 'City J' GROUP BY citizen_id ORDER BY feedback_count DESC LIMIT 1"}
{"input": " \uac01 \uc9c1\ubb3c\uc758 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc9c1\ubb3c \uc18c\uc2f1 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE textile_sourcing ( id INT PRIMARY KEY, fabric VARCHAR(255), supplier VARCHAR(255), region VARCHAR(255), production_date DATE );", "output": "SELECT fabric, region, COUNT(*) as production_count, RANK() OVER (PARTITION BY fabric ORDER BY COUNT(*) DESC) as production_rank FROM textile_sourcing GROUP BY fabric, region;"}
{"input": "2020\ub144, 2021\ub144, 2022\ub144\uc5d0 \ud658\uacbd \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EnvBudget (Year INT, Amount INT); INSERT INTO EnvBudget (Year, Amount) VALUES (2020, 1200000), (2021, 1300000), (2022, 1400000);", "output": "SELECT Year, SUM(Amount) FROM EnvBudget GROUP BY Year;"}
{"input": " \uce90\ub098\ub2e4 \uac01 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uac00\ubb44 \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE canada_drought (province VARCHAR(255), year INT, score INT);   INSERT INTO canada_drought (province, year, score) VALUES ('Alberta', 2010, 10), ('Alberta', 2011, 8), ('Alberta', 2012, 12), ('British Columbia', 2010, 15), ('British Columbia', 2011, 12), ('British Columbia', 2012, 14), ('Ontario', 2010, 9), ('Ontario', 2011, 11), ('Ontario', 2012, 13);", "output": "SELECT province, AVG(score) FROM canada_drought GROUP BY province;"}
{"input": " 2021\ub144 \uc81c\uc57d \uc0b0\uc5c5\uc5d0\uc11c R&D \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rd_expenditures (country VARCHAR(50), amount FLOAT, year INT); INSERT INTO rd_expenditures (country, amount, year) VALUES ('USA', 80000, 2021), ('Germany', 45000, 2021), ('Japan', 42000, 2021), ('China', 38000, 2021), ('UK', 35000, 2021);", "output": "SELECT country, SUM(amount) as total_expenditure FROM rd_expenditures WHERE year = 2021 GROUP BY country ORDER BY total_expenditure DESC LIMIT 3;"}
{"input": "\uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \ucc44\uad74 \uc791\uc5c5\uc5d0 \ub300\ud55c \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Mining_Operation (Operation_ID INT, Mine_Name VARCHAR(50), Location VARCHAR(50), Operation_Type VARCHAR(50), Start_Date DATE, End_Date DATE); CREATE TABLE Environmental_Impact (Impact_ID INT, Operation_ID INT, Date DATE, Carbon_Emissions INT, Water_Usage INT, Waste_Generation INT);", "output": "SELECT Operation_ID, Date, Waste_Generation, AVG(Waste_Generation) OVER (PARTITION BY Operation_ID ORDER BY Date ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) AS Waste_Generation_Moving_Avg FROM Environmental_Impact WHERE Operation_ID IN (1, 2, 3);"}
{"input": " '\uad50\ud1b5' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c 10,000\ub300 \uc774\uc0c1\uc758 \uc804\uae30 \uc790\ub3d9\ucc28\ub97c \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ub3c4\uc2dc\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_electric_vehicles (city_name VARCHAR(255), num_electric_vehicles INT); INSERT INTO city_electric_vehicles (city_name, num_electric_vehicles) VALUES ('San Francisco', 15000), ('Los Angeles', 20000), ('New York', 30000);", "output": "SELECT COUNT(*) FROM (SELECT city_name FROM city_electric_vehicles WHERE num_electric_vehicles > 10000 GROUP BY city_name) AS subquery;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc77c\uc77c \uc218\uc775 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE daily_revenue(date DATE, revenue INT); INSERT INTO daily_revenue VALUES ('2022-01-01', 1000), ('2022-01-02', 1200), ('2022-01-03', 1100), ('2021-01-04', 1300), ('2021-01-05', 1500), ('2021-01-06', 1600), ('2021-01-07', 1700);", "output": "SELECT date, revenue, ROW_NUMBER() OVER (ORDER BY revenue DESC) as ranking FROM daily_revenue WHERE date >= CURRENT_DATE - INTERVAL '1 year' ORDER BY date;"}
{"input": " \uc774\uba54\uc77c \uc8fc\uc18c\ub97c \ud655\uc778\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub97c \uc81c\uc678\ud558\uace0 'YouTube' \ubc0f 'Vimeo' \ud50c\ub7ab\ud3fc\uc758 \ucd1d \uc0ac\uc6a9\uc790 \ubc0f \uac8c\uc2dc\ubb3c \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE YouTube(id INT, user_id INT, content TEXT, email_confirmed BOOLEAN); CREATE TABLE Vimeo(id INT, user_id INT, content TEXT, email_confirmed BOOLEAN);", "output": "SELECT COUNT(DISTINCT user_id) AS total_users, COUNT(*) AS total_posts FROM YouTube WHERE email_confirmed = TRUE UNION ALL SELECT COUNT(DISTINCT user_id) AS total_users, COUNT(*) AS total_posts FROM Vimeo WHERE email_confirmed = TRUE;"}
{"input": " \ucc28\ub7c9\uc758 \uac01 \uc720\ud615\uc5d0 \ub300\ud574 \uc811\uadfc \uac00\ub2a5\ud55c \ucc28\ub7c9\uc774 \uba87 \ub300 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE fleet (vehicle_id INT, type VARCHAR(50), accessibility BOOLEAN); INSERT INTO fleet VALUES (1, 'Bus', TRUE), (2, 'Bus', FALSE), (3, 'Tram', TRUE), (4, 'Tram', TRUE);", "output": "SELECT type, COUNT(*) FILTER (WHERE accessibility = TRUE) FROM fleet GROUP BY type;"}
{"input": "2016\ub144 \uc774\ud6c4 \uc5f0\uac04 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac\uc758 \ucd1d \ud69f\uc218\uc640 \uc608\uc0b0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE defense_diplomacy (id INT, event_name VARCHAR(50), region VARCHAR(50), year INT, budget INT);", "output": "SELECT year, COUNT(*), SUM(budget) FROM defense_diplomacy WHERE year >= 2016 GROUP BY year;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac01 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc5d0\uc11c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ub18d\uc5c5 \ud601\uc2e0 \uc720\ud615\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE agricultural_innovations (country TEXT, type TEXT, year INT); INSERT INTO agricultural_innovations (country, type, year) VALUES ('Kenya', 'Drip Irrigation', 2017), ('Kenya', 'Genetic Engineering', 2018), ('Kenya', 'Precision Farming', 2019), ('Kenya', 'Vertical Farming', 2020), ('Kenya', 'Aquaponics', 2021), ('Nigeria', 'Drip Irrigation', 2017), ('Nigeria', 'Genetic Engineering', 2018), ('Nigeria', 'Precision Farming', 2019), ('Nigeria', 'Vertical Farming', 2020), ('Nigeria', 'Aquaponics', 2021), ('Tanzania', 'Drip Irrigation', 2017), ('Tanzania', 'Genetic Engineering', 2018), ('Tanzania', 'Precision Farming', 2019), ('Tanzania', 'Vertical Farming', 2020), ('Tanzania', 'Aquaponics', 2021);", "output": "SELECT country, type, COUNT(*) OVER (PARTITION BY country) AS count FROM agricultural_innovations WHERE year BETWEEN 2017 AND 2021 GROUP BY country, type ORDER BY country, count DESC;"}
{"input": "6\uc6d4 \ube14\ub8e8\uc2a4 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ucd5c\uace0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Concerts (id INT, genre VARCHAR(20), price DECIMAL(5,2)); INSERT INTO Concerts (id, genre, price) VALUES (1, 'Blues', 150.00), (2, 'Jazz', 100.00), (3, 'Blues', 200.00);", "output": "SELECT MAX(price) FROM Concerts WHERE genre = 'Blues' AND date BETWEEN '2022-06-01' AND '2022-06-30';"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc774\uc6a9\ud560 \uc218 \uc788\ub294 \uacf5\uacf5 \ub3c4\uc11c\uad00\uc740 \uba87 \uac1c\uc774\uba70, \uc774\uc6a9 \uac00\ub2a5 \uc5ec\ubd80\uc5d0 \ub530\ub978 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Libraries (Region VARCHAR(255), Library VARCHAR(255)); INSERT INTO Libraries (Region, Library) VALUES ('Central', 'Library A'), ('North', 'Library B'), ('South', 'Library C'), ('East', 'Library D'), ('West', 'Library E'), ('Central', 'Library F');", "output": "SELECT Region, Library, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY Library) AS Rank FROM Libraries;"}
{"input": " \uc77c\ub9ac\ub178\uc774 \uc8fc \uc2dc\uce74\uace0 \uc2dc\uc758 \ud48d\ub825 \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\ub300 \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_energy_projects ( id INT PRIMARY KEY, project_name VARCHAR(255), project_type VARCHAR(255), city VARCHAR(255), state VARCHAR(255), capacity FLOAT );", "output": "SELECT MAX(capacity) FROM wind_energy_projects WHERE city = 'Chicago' AND state = 'Illinois';"}
{"input": " \uc2dc\uce74\uace0 \uc2dc\uc758 \ubcf4\uc874 \ud65c\ub3d9\uc73c\ub85c \uc778\ud55c \uc6d4\uac04 \ubb3c \uc808\uc57d\ub7c9\uc744 \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE city (id INT, name VARCHAR(255)); INSERT INTO city (id, name) VALUES (1, 'Chicago'); CREATE TABLE water_meter_readings (id INT, city_id INT, consumption FLOAT, reading_date DATE); INSERT INTO water_meter_readings (id, city_id, consumption, reading_date) VALUES (1, 1, 100, '2022-01-01'); INSERT INTO water_meter_readings (id, city_id, consumption, reading_date) VALUES (2, 1, 80, '2022-02-01'); CREATE TABLE conservation_initiatives (id INT, city_id INT, savings FLOAT, start_date DATE, end_date DATE); INSERT INTO conservation_initiatives (id, city_id, savings, start_date, end_date) VALUES (1, 1, 20, '2022-02-01', '2022-02-28');", "output": "SELECT EXTRACT(MONTH FROM water_meter_readings.reading_date) as month, SUM(conservation_initiatives.savings) as monthly_savings FROM water_meter_readings JOIN city ON water_meter_readings.city_id = city.id JOIN conservation_initiatives ON city.id = conservation_initiatives.city_id WHERE city.name = 'Chicago' AND water_meter_readings.reading_date >= conservation_initiatives.start_date AND water_meter_readings.reading_date <= conservation_initiatives.end_date GROUP BY month;"}
{"input": " 5\ud559\ub144\uacfc 7\ud559\ub144 \ud559\uc0dd\ub4e4\uc758 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE mental_health_scores (student_id INT, grade INT, mental_health_score INT); INSERT INTO mental_health_scores (student_id, grade, mental_health_score) VALUES (1, 5, 80), (2, 5, 85), (3, 6, 70), (4, 6, 75), (5, 7, 80), (6, 7, 85);", "output": "SELECT grade, mental_health_score, CASE WHEN grade = 5 THEN mental_health_score - LAG(mental_health_score, 2) OVER (ORDER BY grade) ELSE mental_health_score - LEAD(mental_health_score, -2) OVER (ORDER BY grade) END AS score_difference FROM mental_health_scores;"}
{"input": " 2020\ub144\uc5d0 \ud504\ub791\uc2a4\uc640 \uc774\ud0c8\ub9ac\uc544\uc758 \ubb38\ud654\uc720\uc0b0\uc744 \ubc29\ubb38\ud55c \uad00\uad11\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE france_culture (year INT, visitors INT); INSERT INTO france_culture (year, visitors) VALUES (2020, 4000000), (2019, 5000000); CREATE TABLE italy_culture (year INT, visitors INT); INSERT INTO italy_culture (year, visitors) VALUES (2020, 3500000), (2019, 4000000);", "output": "SELECT visitors FROM france_culture WHERE year = 2020 UNION ALL SELECT visitors FROM italy_culture WHERE year = 2020;"}
{"input": " \uc911\uc11c\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc774 \uc120\ud638\ud558\ub294 \uc0c1\uc704 3\uac1c \uc694\ub9ac\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE orders (order_id INT, customer_id INT, location_id INT, item_id INT, quantity INT, date DATE); CREATE TABLE menu (item_id INT, item_name VARCHAR(50), category VARCHAR(50), cuisine VARCHAR(50), price DECIMAL(5,2)); CREATE TABLE location (location_id INT, location_name VARCHAR(50), region VARCHAR(50));", "output": "SELECT l.region, m.cuisine, SUM(o.quantity) as total_quantity FROM orders o JOIN menu m ON o.item_id = m.item_id JOIN location l ON o.location_id = l.location_id WHERE l.region = 'Midwest' GROUP BY l.region, m.cuisine ORDER BY total_quantity DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ud2b9\uc815 \uad70\uc0ac \uae30\uc220\uc744 \ud68d\ub4dd\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitaryTech (TechID INT, TechName VARCHAR(255), TechCategory VARCHAR(255), ReleaseYear INT);CREATE TABLE CountryTech (CountryID INT, TechID INT, AcquisitionYear INT);CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(255));", "output": "SELECT C.CountryName FROM Countries C INNER JOIN CountryTech CT ON C.CountryID = CT.CountryID INNER JOIN MilitaryTech MT ON CT.TechID = MT.TechID WHERE MT.ReleaseYear BETWEEN EXTRACT(YEAR FROM CURRENT_DATE)-1 AND EXTRACT(YEAR FROM CURRENT_DATE);"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ucd94\uac00\ub41c \uc704\ud611 \uc9c0\ud45c\uc758 \ucd1d \uac1c\uc218\uc640 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ThreatIntel (indicator_id INT, indicator VARCHAR(50), type VARCHAR(20), timestamp TIMESTAMP); INSERT INTO ThreatIntel (indicator_id, indicator, type, timestamp) VALUES (1, '192.168.1.1', 'IP', '2022-01-01 10:00:00');", "output": "SELECT type, COUNT(indicator_id) as total_indicators FROM ThreatIntel WHERE timestamp BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) AND CURRENT_TIMESTAMP GROUP BY type;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uac01 \uc0dd\uc0b0 \ub77c\uc778\uc5d0\uc11c \ud558\ub8e8\uc5d0 \uc0dd\uc0b0\ub41c \ucd5c\ub300 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production_lines (id INT, name TEXT); INSERT INTO production_lines (id, name) VALUES (1, 'Line 1'), (2, 'Line 2'), (3, 'Line 3'), (4, 'Line 4'); CREATE TABLE production (line_id INT, production_date DATE, units INT); INSERT INTO production (line_id, production_date, units) VALUES (1, '2022-04-01', 500), (1, '2022-04-02', 550), (1, '2022-04-03', 600), (2, '2022-04-01', 400), (2, '2022-04-02', 450), (2, '2022-04-03', 500), (3, '2022-04-01', 650), (3, '2022-04-02', 700), (3, '2022-04-03', 750), (4, '2022-04-01', 800), (4, '2022-04-02', 850), (4, '2022-04-03', 900);", "output": "SELECT line_id, MAX(units) as max_units_per_day FROM production WHERE production_date BETWEEN DATE_SUB(NOW(), INTERVAL 60 DAY) AND NOW() GROUP BY line_id;"}
{"input": " \uac01 \uc6d0\uc778\uc5d0 \ub300\ud55c \uc790\uae08 \uc9c0\uc6d0\uc758 \uc5f0\uac04 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DonationsY2021 (DonationID INT, DonationDate DATE, DonationAmount DECIMAL, CauseID INT); INSERT INTO DonationsY2021 (DonationID, DonationDate, DonationAmount, CauseID) SELECT DonationID, DonationDate, DonationAmount, CauseID FROM Donations WHERE YEAR(DonationDate) = 2021;", "output": "SELECT C.CauseName, ((SUM(D.DonationAmount) - SUM(DY2021.DonationAmount))/SUM(DY2021.DonationAmount))*100 as YOYChange FROM Donations D JOIN Causes C ON D.CauseID = C.CauseID JOIN DonationsY2021 DY2021 ON D.CauseID = DY2021.CauseID GROUP BY C.CauseName HAVING COUNT(DISTINCT D.DonationDate) > COUNT(DISTINCT DY2021.DonationDate);"}
{"input": " 'NY' \ubcf4\ud5d8 \uc99d\uad8c\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policyholders (id INT, name TEXT, city TEXT, state TEXT); INSERT INTO policyholders (id, name, city, state) VALUES (1, 'John Doe', 'Oakland', 'CA'); INSERT INTO policyholders (id, name, city, state) VALUES (2, 'Jane Smith', 'San Francisco', 'CA'); CREATE TABLE claims (id INT, policyholder_id INT, amount INT); INSERT INTO claims (id, policyholder_id, amount) VALUES (1, 1, 500); INSERT INTO claims (id, policyholder_id, amount) VALUES (2, 1, 300); INSERT INTO claims (id, policyholder_id, amount) VALUES (3, 2, 700); CREATE TABLE policy_claims (policyholder_id INT, total_claims INT); INSERT INTO policy_claims (policyholder_id, total_claims) VALUES (1, 800); INSERT INTO policy_claims (policyholder_id, total_claims) VALUES (2, 700);", "output": "SELECT AVG(claims) FROM (SELECT policyholder_id, SUM(amount) AS claims FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id WHERE policyholders.state = 'NY' GROUP BY policyholder_id) AS subquery;"}
{"input": " \uc5b4\ub5a4 \uc694\ub9ac\uac00 \uac00\uaca9\uc774 \uac00\uc7a5 \uc800\ub834\ud569\ub2c8\uae4c?", "context": "CREATE TABLE dishes (id INT, name TEXT, type TEXT, price DECIMAL, cost DECIMAL); INSERT INTO dishes (id, name, type, price, cost) VALUES (1, 'Quinoa Salad', 'Vegan', 12.99, 5.50), (2, 'Chickpea Curry', 'Vegan', 10.99, 7.99), (3, 'Beef Burger', 'Non-Vegan', 15.99, 10.50), (4, 'Chicken Sandwich', 'Non-Vegan', 14.99, 9.50);", "output": "SELECT name, cost FROM dishes WHERE cost = (SELECT MIN(cost) FROM dishes);"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uac74\uc124\ub41c \ub179\uc0c9 \uac74\ubb3c\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, name TEXT, year INT, co2_emission FLOAT);", "output": "SELECT AVG(co2_emission) FROM green_buildings WHERE year BETWEEN 2015 AND 2020;"}
{"input": "\uacc4\uc57d \uc218 \uae30\uc900\uc73c\ub85c \uc544\ud504\ub9ac\uce74\uc758 \uc0c1\uc704 3\ub300 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc791\uc131\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (id INT, creator VARCHAR(50), region VARCHAR(10)); INSERT INTO smart_contracts (id, creator, region) VALUES ('Creator1', 'Africa'), ('Creator2', 'Africa'), ('Creator3', 'Africa'); INSERT INTO smart_contracts (id, creator, region) VALUES (4, 'Creator4', 'Asia'), (5, 'Creator5', 'Asia');", "output": "SELECT creator, COUNT(*) as contract_count, RANK() OVER (PARTITION BY region ORDER BY COUNT(*) DESC) as rank FROM smart_contracts GROUP BY creator;"}
{"input": " \uad6d\uac00\ubcc4 \ub9c8\ucf00\ud305 \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 TV \ud504\ub85c\uadf8\ub7a8\uacfc \ud574\ub2f9 \uc81c\uc791\uc0ac\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE TVShows (ShowID INT, Title VARCHAR(255), Country VARCHAR(50), MarketingExpenses DECIMAL(10,2), ProductionCompany VARCHAR(255)); CREATE TABLE ProductionCompanies (CompanyID INT, CompanyName VARCHAR(255));", "output": "SELECT T1.Title, T1.Country, T1.MarketingExpenses, T2.CompanyName FROM TVShows T1 INNER JOIN (SELECT Country, MAX(MarketingExpenses) AS Max_Expenses FROM TVShows GROUP BY Country) T2 ON T1.Country = T2.Country AND T1.MarketingExpenses = T2.Max_Expenses INNER JOIN ProductionCompanies T3 ON T1.ProductionCompany = T3.CompanyName;"}
{"input": " \uce90\ub098\ub2e4\uc640 \uba55\uc2dc\ucf54\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \ud328\ud0a4\uc9c0\ub97c \uc774\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_tours (package_id INT, package_name VARCHAR(255), country VARCHAR(255), available INT); INSERT INTO sustainable_tours (package_id, package_name, country, available) VALUES (1, 'Sustainable Tour Vancouver', 'Canada', 20); INSERT INTO sustainable_tours (package_id, package_name, country, available) VALUES (2, 'Sustainable Tour Toronto', 'Canada', 25); INSERT INTO sustainable_tours (package_id, package_name, country, available) VALUES (3, 'Sustainable Tour Cancun', 'Mexico', 30); INSERT INTO sustainable_tours (package_id, package_name, country, available) VALUES (4, 'Sustainable Tour Playa del Carmen', 'Mexico', 35);", "output": "SELECT country, SUM(available) FROM sustainable_tours GROUP BY country;"}
{"input": " \uc778\uad6c 100\ub9cc \uc774\uc0c1 \ub3c4\uc2dc\uc758 \uce5c\ud658\uacbd \uc8fc\ud0dd \uc815\ucc45\uc744 \ubaa8\ub450 \ub098\uc5f4", "context": "CREATE TABLE housing_policies (id INT, city VARCHAR(50), eco_friendly BOOLEAN); INSERT INTO housing_policies VALUES (1, 'NYC', TRUE); INSERT INTO housing_policies VALUES (2, 'LA', FALSE); INSERT INTO housing_policies VALUES (3, 'Chicago', TRUE);", "output": "SELECT city FROM housing_policies WHERE eco_friendly = TRUE INTERSECT SELECT city FROM cities WHERE population > 1000000;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ud3c9\ud654\uc720\uc9c0\ud65c\ub3d9 \uc608\uc0b0 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE peacekeeping_operations (id INT, region VARCHAR(255), operation VARCHAR(255), budget DECIMAL(10,2));", "output": "SELECT region, SUM(budget) FROM peacekeeping_operations GROUP BY region;"}
{"input": " \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uc758 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ubc94\uc8fc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cybersecurity (id INT, title VARCHAR(50), category VARCHAR(50), description TEXT, date DATE); INSERT INTO Cybersecurity (id, title, category, description, date) VALUES (1, 'Zero Trust Architecture', 'Network Security', 'Description...', '2021-03-01');", "output": "SELECT category, COUNT(*) FROM Cybersecurity GROUP BY category ORDER BY COUNT(*) DESC;"}
{"input": " \uac01 \ud300\ubcc4 \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \ud310\ub9e4\ub7c9 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE TeamTicketSales (Team VARCHAR(255), TotalSales INT); INSERT INTO TeamTicketSales (Team, TotalSales) VALUES ('TeamA', 1200), ('TeamB', 1500), ('TeamC', 1800);", "output": "SELECT Team, TotalSales, RANK() OVER (ORDER BY TotalSales DESC) AS SalesRank FROM TeamTicketSales;"}
{"input": " 2017\ub144\uacfc 2018\ub144\uc5d0 \uc568\ubc94\uc744 \ub0b8 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Albums (AlbumID INT, AlbumName VARCHAR(100), ReleaseYear INT, Artist VARCHAR(100)); INSERT INTO Albums (AlbumID, AlbumName, ReleaseYear, Artist) VALUES (1, 'DAMN', 2017, 'Kendrick Lamar'); INSERT INTO Albums (AlbumID, AlbumName, ReleaseYear, Artist) VALUES (2, 'Reputation', 2017, 'Taylor Swift'); INSERT INTO Albums (AlbumID, AlbumName, ReleaseYear, Artist) VALUES (3, 'Sweetener', 2018, 'Ariana Grande');", "output": "SELECT Artist FROM Albums WHERE ReleaseYear = 2017 INTERSECT SELECT Artist FROM Albums WHERE ReleaseYear = 2018;"}
{"input": " \uc778\ub514\uc5b8 \uc288\ud37c\ub9ac\uadf8\uc758 \ud55c \uc2dc\uc98c \ub3d9\uc548 \uc120\uc218\uac00 \ub4dd\uc810\ud55c \ucd5c\ub2e4 \uace8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE isl_stats (player TEXT, goals INT, season TEXT); INSERT INTO isl_stats (player, goals, season) VALUES ('Bartholomew Ogbeche', 32, '2018-2019'); INSERT INTO isl_stats (player, goals, season) VALUES ('Ferr\u00e1n Corominas', 26, '2017-2018');", "output": "SELECT player, SUM(goals) FROM isl_stats ORDER BY SUM(goals) DESC LIMIT 1;"}
{"input": " 2018\ub144\uc5d0 \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE genetic_research (id INT, project_name VARCHAR(50), completion_year INT, region VARCHAR(50)); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (1, 'Genome Mapping', 2019, 'North America'); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (2, 'DNA Sequencing', 2020, 'South America'); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (3, 'CRISPR Therapy', 2018, 'Africa');", "output": "SELECT COUNT(*) FROM genetic_research WHERE completion_year = 2018 AND region = 'Africa';"}
{"input": " \uc5c5\uc885\ubcc4 \uc5f0\ubd09 \ucd5c\uace0 \uadfc\ub85c\uc790\uc758 \ub178\uc870 \uac00\uc785 \ud604\ud669\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE workers (id INT, name TEXT, industry TEXT, union_member BOOLEAN, salary REAL); INSERT INTO workers (id, name, industry, union_member, salary) VALUES (1, 'John Doe', 'construction', true, 80000.00), (2, 'Jane Smith', 'retail', false, 50000.00);", "output": "SELECT industry, union_member FROM workers w1 WHERE salary = (SELECT MAX(salary) FROM workers w2 WHERE w1.industry = w2.industry);"}
{"input": " IT \ubd80\uc11c\uc5d0\uc11c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc744 \uc774\uc218\ud55c \uc5ec\uc131 \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE employees (employee_id INT, department VARCHAR(255), gender VARCHAR(10), age INT); INSERT INTO employees (employee_id, department, gender, age) VALUES (1, 'IT', 'Female', 30), (2, 'HR', 'Male', 25), (3, 'IT', 'Female', 35), (4, 'Finance', 'Male', 40); CREATE TABLE training_programs (program_id INT, department VARCHAR(255)); INSERT INTO training_programs (program_id, department) VALUES (1, 'IT'), (2, 'HR'); CREATE TABLE completed_training (employee_id INT, program_id INT); INSERT INTO completed_training (employee_id, program_id) VALUES (1, 1), (2, 2), (3, 1);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM employees e WHERE e.department = 'IT' AND e.gender = 'Female')) AS percentage FROM completed_training ct JOIN employees e ON ct.employee_id = e.employee_id WHERE e.department = 'IT' AND e.gender = 'Female';"}
{"input": " \uc9c0\uae08\uae4c\uc9c0 \uae30\ub85d\ub41c \ucd5c\uc18c \ud574\uc591 \uc0b0\uc131\ud654 \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_acidification (id INT, avg_level FLOAT); INSERT INTO ocean_acidification (id, avg_level) VALUES (1, 7.5); INSERT INTO ocean_acidification (id, avg_level) VALUES (2, 8.0);", "output": "SELECT MIN(avg_level) FROM ocean_acidification;"}
{"input": " 'rural_development' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ub18d\ubbfc\uc758 2020\ub144 \ud3c9\uade0 \uc791\ubb3c \uc218\ud655\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE farmers (farmer_id INT, name TEXT, location TEXT, crop_yield INT, year INT); INSERT INTO farmers (farmer_id, name, location, crop_yield, year) VALUES (1, 'John Doe', 'Smithville', 500, 2020); INSERT INTO farmers (farmer_id, name, location, crop_yield, year) VALUES (2, 'Jane Smith', 'Brownfield', 600, 2020);", "output": "SELECT AVG(crop_yield) FROM farmers WHERE year = 2020 AND location LIKE 'rural_development%';"}
{"input": "Atlantic Ocean' \ubc14\ub2e4\ub97c \uc0ad\uc81c\ud558\uace0 \uc0ad\uc81c\ub41c \ubc14\ub2e4\uc758 \ud3c9\uade0 \uae4a\uc774\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE oceans (ocean_name VARCHAR(50), avg_depth NUMERIC(10,2)); INSERT INTO oceans VALUES ('Atlantic Ocean', 3646);", "output": "WITH deleted_ocean AS (DELETE FROM oceans WHERE ocean_name = 'Atlantic Ocean' RETURNING avg_depth) SELECT AVG(avg_depth) FROM deleted_ocean;"}
{"input": " '\ub3c4\uc2dc' \ub18d\uc5c5 \uacf5\ub3d9\uccb4\uc758 \uba74\uc801 \uae30\uc900 \uc0c1\uc704 3\uac1c \uc791\ubb3c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE urban_community_farms AS SELECT f.name AS farmer_name, c.crop_name, c.acres FROM farmers f JOIN crops c ON f.id = c.farmer_id JOIN farm_communities fr ON f.id = fr.farm_id WHERE fr.community = 'urban'; INSERT INTO urban_community_farms (farmer_name, crop_name, acres) VALUES ('Jane', 'maize', 50), ('Alice', 'carrot', 75), ('Bob', 'soybean', 100), ('Jane', 'carrot', 25);", "output": "SELECT crop_name, SUM(acres) AS total_acres FROM urban_community_farms GROUP BY crop_name ORDER BY total_acres DESC LIMIT 3;"}
{"input": "2020\ub144\uc5d0\ub294 \uc0c1\uc2b5\ubc94\uc774 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc94\uc8c4\ub97c \uc800\uc9c8\ub800\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE offenders (oid INT, name TEXT, PRIMARY KEY(oid)); CREATE TABLE crimes (cid INT, oid INT, year INT, PRIMARY KEY(cid), FOREIGN KEY(oid) REFERENCES offenders(oid));", "output": "SELECT COUNT(DISTINCT c.oid) FROM crimes c JOIN offenders o ON c.oid = o.oid WHERE c.year = 2020 AND o.oid IN (SELECT oid FROM crimes GROUP BY oid HAVING COUNT(*) > 1);"}
{"input": " \ub9e4\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE menu_sales (menu_item VARCHAR(255), category VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO menu_sales (menu_item, category, revenue) VALUES ('Bruschetta', 'Appetizers', 1500.00), ('Spaghetti Bolognese', 'Entrees', 2500.00), ('Cheesecake', 'Desserts', 1800.00);", "output": "SELECT category, SUM(revenue) as total_revenue FROM menu_sales GROUP BY category ORDER BY total_revenue DESC LIMIT 3;"}
{"input": " 2018\ub144 \uc774\ud6c4 \ub18d\ucd0c \ud658\uc790 \uae30\ubc18\uc774 15% \uc774\uc0c1 \uac10\uc18c\ud55c \uc560\ub9ac\uc870\ub098\uc758 \ubaa8\ub4e0 \uc9c4\ub8cc\uc18c\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE clinics (clinic_id INT, name TEXT, location TEXT, rural BOOLEAN);CREATE TABLE patients (patient_id INT, clinic_id INT, year INT, rural BOOLEAN);", "output": "SELECT c.name FROM clinics c JOIN (SELECT clinic_id, 100.0 * COUNT(*) FILTER (WHERE rural) / SUM(COUNT(*)) OVER (PARTITION BY clinic_id) AS reduction_ratio FROM patients WHERE year IN (2018, 2022) GROUP BY clinic_id) t ON c.clinic_id = t.clinic_id WHERE t.reduction_ratio > 15.0 AND c.state = 'Arizona';"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ub9e4\ub144 \uba87 \uac74\uc758 \ube59\ud558 \ub179\ub294 \uc0ac\uac74\uc774 \uae30\ub85d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE glacier_data (region VARCHAR(255), year INT, melting_incidents INT);", "output": "SELECT region, year, COUNT(melting_incidents) OVER (PARTITION BY region, year)  FROM glacier_data;"}
{"input": " 2015\ub144\ubd80\ud130 2017\ub144 \uc0ac\uc774\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \uc81c\uc791\ub418\uc5b4 \uac1c\ubd09\ub41c \uc601\ud654\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (title VARCHAR(255), release_year INT, rating DECIMAL(3,2), production_country VARCHAR(50)); INSERT INTO movies (title, release_year, rating, production_country) VALUES ('The Revenant', 2015, 8.0, 'USA'), ('Mad Max: Fury Road', 2015, 8.1, 'Australia'), ('Zootopia', 2016, 8.0, 'USA'), ('La La Land', 2016, 8.3, 'USA'), ('Moonlight', 2016, 7.4, 'USA'), ('Get Out', 2017, 7.7, 'USA'), ('Wonder Woman', 2017, 7.4, 'USA');", "output": "SELECT AVG(rating) FROM movies WHERE release_year BETWEEN 2015 AND 2017 AND production_country = 'USA';"}
{"input": " \uc774\ubc88 \ub2ec \ud53c\uc2f1 \uacf5\uaca9\uc758 \uc0c1\uc704 3\uac1c \ub300\uc0c1\uc740 \ub204\uad6c\uc774\uba70, \uc774\ub4e4\uc758 \ucd1d \uacf5\uaca9 \ud69f\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists phishing_targets (target_id INT, target_name VARCHAR, attack_count INT); INSERT INTO phishing_targets (target_id, target_name, attack_count) VALUES (1, 'David', 12), (2, 'Eva', 18), (3, 'Frank', 8);", "output": "SELECT target_id, target_name, SUM(attack_count) as total_attacks FROM phishing_targets WHERE attack_date >= DATEADD(month, 0, GETDATE()) AND target_name IN ('David', 'Eva', 'Frank') GROUP BY target_id, target_name ORDER BY total_attacks DESC LIMIT 3;"}
{"input": " \ud658\uacbd \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \ucf00\ub0d0\uc640 \uc6b0\uac04\ub2e4 \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Country TEXT); INSERT INTO Volunteers (VolunteerID, VolunteerName, Country) VALUES (1, 'Esther Mwangi', 'Kenya'), (2, 'Yusuf Kibira', 'Uganda'), (3, 'Alex Nguyen', 'Canada'); CREATE TABLE VolunteerPrograms (ProgramID INT, ProgramName TEXT); INSERT INTO VolunteerPrograms (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Environment'); CREATE TABLE VolunteerAssignments (AssignmentID INT, VolunteerID INT, ProgramID INT); INSERT INTO VolunteerAssignments (AssignmentID, VolunteerID, ProgramID) VALUES (1, 1, 2), (2, 2, 2);", "output": "SELECT COUNT(DISTINCT Volunteers.VolunteerID) AS TotalVolunteers FROM Volunteers INNER JOIN VolunteerAssignments ON Volunteers.VolunteerID = VolunteerAssignments.VolunteerID INNER JOIN VolunteerPrograms ON VolunteerAssignments.ProgramID = VolunteerPrograms.ProgramID WHERE Volunteers.Country IN ('Kenya', 'Uganda') AND VolunteerPrograms.ProgramName = 'Environment';"}
{"input": " \uc2a4\ud398\uc778\uc5b4\ub85c \ubc1c\ud45c\ub41c \ub178\ub798\uc758 \ucd1d \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Songs (SongID int, SongName varchar(100), Duration int, Language varchar(50), ArtistID int); INSERT INTO Songs VALUES (1, 'Viva la Vida', 250, 'Spanish', 1); INSERT INTO Songs VALUES (2, 'Hasta Siempre', 300, 'Spanish', 2); INSERT INTO Songs VALUES (3, 'Shape of You', 200, 'English', 3);", "output": "SELECT SUM(Duration) FROM Songs WHERE Language = 'Spanish';"}
{"input": " \ub274\uc695\uacfc \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc758 \uc9c0\uc5ed \uacbd\uc81c \uc601\ud5a5 \ube44\uc728\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE local_impact (id INT, city VARCHAR(50), value INT); INSERT INTO local_impact (id, city, value) VALUES (1, 'New York', 1000), (2, 'Los Angeles', 800), (3, 'Tokyo', 800);", "output": "SELECT city, ROUND(100.0 * value / SUM(value) OVER (PARTITION BY NULL), 2) AS percentage FROM local_impact WHERE city IN ('New York', 'Los Angeles');"}
{"input": "\uac01 \ub300\ub959\uc5d0\uc11c VR\uc774 \uc544\ub2cc \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\ub294 \ud50c\ub808\uc774\uc5b4\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (id, name, continent) VALUES (1, 'USA', 'North America'), (2, 'Canada', 'North America'), (3, 'Mexico', 'North America'), (4, 'Brazil', 'South America'), (5, 'Argentina', 'South America');", "output": "SELECT c.continent, COUNT(DISTINCT p.id) as num_players FROM players p JOIN player_games pg ON p.id = pg.player_id JOIN games g ON pg.game_id = g.id JOIN countries c ON p.country = c.name WHERE g.category = 'Non-VR' GROUP BY c.continent;"}
{"input": " \uac01 \ud1b5\ud654 \uc720\ud615\uc5d0 \ub300\ud574 \uc751\ub2f5 \uc2dc\uac04\uc774 \ud3c9\uade0\ubcf4\ub2e4 \ub0ae\uc740 \uae34\uae09 \ud1b5\ud654\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, call_type TEXT, response_time FLOAT);", "output": "SELECT call_type, AVG(response_time) as avg_response_time, 100.0 * SUM(CASE WHEN response_time < (SELECT AVG(response_time) FROM emergency_calls) THEN 1 ELSE 0 END) / COUNT(*) as pct_below_avg FROM emergency_calls GROUP BY call_type;"}
{"input": " \ud3d0\uae30\ub41c \uc6b0\uc8fc\uc120 \uc5d4\uc9c4\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE spacecraft (id INT PRIMARY KEY, name VARCHAR(50), engine VARCHAR(50), status VARCHAR(10));", "output": "SELECT engine FROM spacecraft WHERE status = 'decommissioned';"}
{"input": " 2019\ub144 3\ubd84\uae30\uc5d0 \uc911\uc11c\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubb3c \uc808\uc57d \uacc4\ud68d\uc774 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE conservation_initiatives (id INT, name TEXT, region TEXT, timestamp DATETIME); INSERT INTO conservation_initiatives (id, name, region, timestamp) VALUES (1, 'Initiative A', 'Midwest', '2019-07-01 10:00:00'), (2, 'Initiative B', 'Midwest', '2019-04-01 15:00:00'), (3, 'Initiative C', 'Midwest', '2019-07-15 09:30:00');", "output": "SELECT COUNT(*) FROM conservation_initiatives WHERE region = 'Midwest' AND QUARTER(timestamp) = 3 AND YEAR(timestamp) = 2019;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc0c1\uc704 2\uba85\uc758 \uae30\ubd80\uc790\ub97c \uc81c\uc678\ud55c \uc9c0\uc5ed\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, region TEXT, donation_amount DECIMAL(10,2)); INSERT INTO donors (id, name, region, donation_amount) VALUES (1, 'John Smith', 'Asia-Pacific', 500.00), (2, 'Jane Doe', 'Europe', 1500.00), (3, 'James Lee', 'Middle East', 3000.00), (4, 'Fatima Al-Faisal', 'Middle East', 4000.00), (5, 'Tariq Al-Saadi', 'Middle East', 5000.00), (6, 'Sophia Wang', 'Asia-Pacific', 600.00), (7, 'Peter Johnson', 'Europe', 700.00);", "output": "SELECT region, SUM(donation_amount) FROM donors d1 WHERE donation_amount < (SELECT DISTINCT donation_amount FROM donors d2 WHERE d1.region = d2.region ORDER BY donation_amount DESC LIMIT 2 OFFSET 1) GROUP BY region;"}
{"input": " \uc9c0\ub09c \ub2ec \uacbd\ucc30\uc11c\ubcc4 \uae34\uae09\uc804\ud654 \ucd1d \uac74\uc218\uc640 \ube48\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \ud1b5\ud654 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PoliceStations (StationID INT, StationName VARCHAR(255)); CREATE TABLE CallTypes (CallTypeID INT, CallType VARCHAR(255)); CREATE TABLE Calls (CallID INT, CallTypeID INT, StationID INT, CallDate DATE);", "output": "SELECT StationName, CallType, COUNT(CallID) as CallsCount FROM Calls c JOIN PoliceStations s ON c.StationID = s.StationID JOIN CallTypes ct ON c.CallTypeID = ct.CallTypeID WHERE c.CallDate >= DATEADD(month, -1, GETDATE()) GROUP BY StationName, CallType ORDER BY StationName, CallsCount DESC;"}
{"input": " \uc9c0\uc18d\uc801\uc778 \ubcf4\uc874 \ub178\ub825\uc744 \ud1b5\ud574 \uc11c\uc2dd\uc9c0\uc5d0 \uc788\ub294 \uc885\ub2f9 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE animal (id INT, name VARCHAR(50), species VARCHAR(50), population INT); CREATE TABLE habitat (id INT, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE conservation_effort (id INT, habitat_id INT, animal_id INT, start_date DATE, end_date DATE); INSERT INTO animal (id, name, species, population) VALUES (1, 'Tiger', 'Panthera tigris', 250), (2, 'Elephant', 'Loxodonta africana', 500); INSERT INTO habitat (id, name, location) VALUES (1, 'Tropical Rainforest', 'Amazon'), (2, 'Savannah', 'Africa'); INSERT INTO conservation_effort (id, habitat_id, animal_id, start_date, end_date) VALUES (1, 1, 1, '2020-01-01', '2025-12-31'), (2, 2, 2, '2018-07-01', '2023-06-30');", "output": "SELECT a.species, SUM(a.population) as total_population FROM animal a INNER JOIN habitat h ON h.id = a.habitat_id INNER JOIN conservation_effort ce ON ce.habitat_id = h.id WHERE ce.end_date >= CURDATE() GROUP BY a.species;"}
{"input": " \uac01 \uacbd\ub85c\ubcc4\ub85c 10\ubd84 \uc774\uc0c1 \uc9c0\uc5f0\ub41c \uc5f4\ucc28 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE train_delays (train_id INT, route_id INT, delay TIME);", "output": "SELECT route_id, COUNT(*) AS late_trains FROM train_delays WHERE delay > '00:10:00' GROUP BY route_id;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc804\uc2dc\ud68c\ub97c \uac00\uc9c4 \uc791\uac00 TOP 3\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (id INT, name VARCHAR(50), exhibition_count INT); INSERT INTO Artists (id, name, exhibition_count) VALUES (1, 'Vincent van Gogh', 10), (2, 'Pablo Picasso', 15), (3, 'Claude Monet', 12);", "output": "SELECT name, RANK() OVER (ORDER BY exhibition_count DESC) AS rank FROM Artists WHERE rank <= 3;"}
{"input": " 2021 \uc2dc\uc98c NFL \uacbd\uae30\uc758 \ud3c9\uade0 \uad00\uc911\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE nfl_attendance (team VARCHAR(50), season YEAR, home_attendance INT); INSERT INTO nfl_attendance (team, season, home_attendance) VALUES ('Buffalo Bills', 2021, 68632), ('Kansas City Chiefs', 2021, 73377);", "output": "SELECT AVG(home_attendance) FROM nfl_attendance WHERE season = 2021;"}
{"input": " \uacf5\ud559\ubd80 \uad50\uc9c1\uc6d0\uc5d0\uac8c \uc9c0\uae09\ub418\ub294 \ud3c9\uade0 \ubcf4\uc870\uae08 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department VARCHAR(50)); INSERT INTO departments VALUES (1, 'Computer Science'); INSERT INTO departments VALUES (2, 'Engineering'); INSERT INTO departments VALUES (3, 'Mathematics'); CREATE TABLE faculty_departments (faculty_id INT, department_id INT); INSERT INTO faculty_departments VALUES (1, 1); INSERT INTO faculty_departments VALUES (2, 2); INSERT INTO faculty_departments VALUES (3, 2); INSERT INTO faculty_departments VALUES (4, 3); CREATE TABLE grants_faculty (grant_id INT, faculty_id INT, amount DECIMAL(10, 2)); INSERT INTO grants_faculty VALUES (1, 1, 50000); INSERT INTO grants_faculty VALUES (2, 2, 75000); INSERT INTO grants_faculty VALUES (3, 2, 60000); INSERT INTO grants_faculty VALUES (4, 1, 65000);", "output": "SELECT AVG(g.amount) FROM grants_faculty g INNER JOIN faculty_departments fd ON g.faculty_id = fd.faculty_id INNER JOIN departments d ON fd.department_id = d.department_id WHERE d.department = 'Engineering';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \"#adoptdontshop\"\uc774\ub77c\ub294 \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \"\ub3d9\ubb3c \uad8c\ub9ac\" \uce74\ud14c\uace0\ub9ac\uc758 \uc774\ubbf8\uc9c0\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, user_id INT, category TEXT, has_image BOOLEAN, hashtags TEXT); INSERT INTO posts (id, user_id, category, has_image, hashtags) VALUES (1, 1, 'animal rights', true, '#adoptdontshop'), (2, 2, 'animal rights', false, '');", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE category = 'animal rights') AS percentage FROM posts WHERE category = 'animal rights' AND has_image = true AND hashtags LIKE '%#adoptdontshop%' AND timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 6 MONTH) AND NOW();"}
{"input": " \uac01 \uc18c\ub9e4\uc5c5\uccb4\uc5d0\uc11c \ud310\ub9e4\ud558\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc218\uc0b0\ubb3c\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE retailers (retailer_id INT, retailer_name TEXT);CREATE TABLE products (product_id INT, product_name TEXT, is_sustainable BOOLEAN, product_category TEXT, price INT);CREATE TABLE inventory (retailer_id INT, product_id INT);", "output": "SELECT retailers.retailer_name, AVG(products.price) as avg_price FROM retailers JOIN inventory ON retailers.retailer_id = inventory.retailer_id JOIN products ON inventory.product_id = products.product_id WHERE products.is_sustainable = TRUE AND products.product_category = 'seafood' GROUP BY retailers.retailer_name;"}
{"input": " \ubbf8\uad6d\uc758 \uc720\uae30\ub18d \ub18d\uc7a5\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uace0\uc720\ud55c \uc791\ubb3c \uc720\ud615\uacfc \uac01\uac01\uc758 \ucd1d \uc218\ud655\ub7c9\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Farm (FarmID int, CropType varchar(50), FarmType varchar(20), Country varchar(50), Yield int); INSERT INTO Farm (FarmID, CropType, FarmType, Country, Yield) VALUES (1, 'Corn', 'Organic', 'USA', 150), (2, 'Soybeans', 'Conventional', 'Canada', 200), (3, 'Wheat', 'Urban', 'Mexico', 100), (4, 'Potatoes', 'Organic', 'USA', 180), (5, 'Rice', 'Organic', 'Mexico', 120);", "output": "SELECT DISTINCT CropType, SUM(Yield) OVER (PARTITION BY CropType) as TotalYield FROM Farm WHERE FarmType = 'Organic' AND Country = 'USA';"}
{"input": " \uacfc\uac70 IoT \uc13c\uc11c \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c \uc9c0\ub09c 5\ub144\uac04 \ud504\ub791\uc2a4\uc758 \ud3c9\uade0 \uae30\uc628 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE weather_data (location VARCHAR(255), date DATE, temperature FLOAT); INSERT INTO weather_data (location, date, temperature) VALUES ('France', '2017-01-01', 4.2), ('France', '2017-01-02', 4.5), ('France', '2018-01-01', 3.9), ('France', '2018-01-02', 4.1), ('France', '2019-01-01', 3.7), ('France', '2019-01-02', 3.8), ('France', '2020-01-01', 4.0), ('France', '2020-01-02', 4.3);", "output": "SELECT AVG(temperature) FROM (SELECT temperature FROM weather_data WHERE location = 'France' AND date BETWEEN '2017-01-01' AND '2021-12-31' GROUP BY YEAR(date)) AS subquery;"}
{"input": " \ucd5c\ub300 \ubcc4 \uac1c\uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uac01 \uad6d\uac00\ubcc4 \ud638\ud154\uc758 \ucd5c\ub300 \ubcc4 \uac1c\uc218\uc640 \ucd5c\uc18c \ubcc4 \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, country VARCHAR(20), num_stars INT); INSERT INTO hotels (hotel_id, country, num_stars) VALUES (1, 'Italy', 4), (2, 'Italy', 5), (3, 'Greece', 3), (4, 'Greece', 4), (5, 'France', 3), (6, 'France', 5);", "output": "SELECT country, MAX(num_stars) AS max_stars, MIN(num_stars) AS min_stars FROM hotels GROUP BY country ORDER BY max_stars DESC;"}
{"input": " \ub2e4\uc591\ud55c \uc7a5\ub974\uc758 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE PlayerGames (PlayerID INT, GameID INT, GameGenre TEXT); INSERT INTO PlayerGames (PlayerID, GameID, GameGenre) VALUES (1, 1, 'Action'), (1, 2, 'RPG'), (2, 3, 'Strategy'), (2, 4, 'Simulation'), (3, 5, 'FPS'), (3, 6, 'FPS'), (4, 7, 'Action'), (4, 8, 'RPG'), (5, 9, 'Strategy'), (5, 10, 'Simulation'); CREATE TABLE Players (PlayerID INT); INSERT INTO Players (PlayerID) VALUES (1), (2), (3), (4), (5);", "output": "SELECT COUNT(DISTINCT PlayerID) FROM (SELECT PlayerID FROM PlayerGames GROUP BY PlayerID HAVING COUNT(DISTINCT GameGenre) > 1) AS MultiGenrePlayers;"}
{"input": " 50\uc138 \uc774\uc0c1\uc774\uace0 1\uc5d0\uc774\ucee4\ubcf4\ub2e4 \ud070 \ud1a0\uc9c0\ub97c \uc18c\uc720\ud55c \ub18d\ubd80\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farmers (id INT PRIMARY KEY, name VARCHAR(100), age INT, location VARCHAR(100)); INSERT INTO Farmers (id, name, age, location) VALUES (1, 'Jose Mendoza', 53, 'Mexico'); INSERT INTO Farmers (id, name, age, location) VALUES (2, 'Fatima Nieto', 61, 'Mexico'); CREATE TABLE Plots (id INT PRIMARY KEY, farmer_id INT, size FLOAT, crop VARCHAR(50)); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (1, 1, 1.2, 'Corn'); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (2, 2, 1.5, 'Beans'); CREATE TABLE Currencies (id INT PRIMARY KEY, country VARCHAR(50), currency VARCHAR(50)); INSERT INTO Currencies (id, country, currency) VALUES (1, 'Mexico', 'Peso');", "output": "SELECT f.name FROM Farmers f INNER JOIN Plots p ON f.id = p.farmer_id INNER JOIN Currencies c ON f.location = c.country WHERE f.age > 50 AND p.size > 1;"}
{"input": " \uc88c\uc11d\uc774 200\uac1c \uc774\uc0c1\uc778 \ubaa8\ub4e0 \ud56d\uacf5\uae30\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE aircraft (aircraft_id INT, model VARCHAR(100), num_seats INT);", "output": "SELECT model FROM aircraft WHERE num_seats > 200;"}
{"input": " '\uc2e4\ud06c' \uc9c1\ubb3c \uc720\ud615\uc5d0 \ub300\ud574 \ub9e4\uc7a5\ub2f9 \ud310\ub9e4\ub41c \uc758\ub958\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE garment_sales (id INT PRIMARY KEY, garment_id INT, store_id INT, sale_date DATE, quantity INT, price DECIMAL(5,2)); INSERT INTO garment_sales (id, garment_id, store_id, sale_date, quantity, price) VALUES (1, 1001, 101, '2022-01-01', 5, 150.00), (2, 1002, 101, '2022-01-02', 10, 120.00), (3, 1003, 102, '2022-01-03', 8, 180.00); CREATE TABLE fabric_garment (id INT PRIMARY KEY, fabric_type VARCHAR(50), garment_id INT); INSERT INTO fabric_garment (id, fabric_type, garment_id) VALUES (1, 'denim', 1001), (2, 'silk', 1002);", "output": "SELECT s.store_id, SUM(gs.quantity) AS total_quantity FROM garment_sales gs JOIN fabric_garment fg ON gs.garment_id = fg.garment_id JOIN garment g ON gs.garment_id = g.id JOIN store s ON gs.store_id = s.id WHERE fg.fabric_type = 'silk' GROUP BY s.store_id;"}
{"input": " \uc544\uce68 \uc6b4\ub3d9 \uc911 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workouts (id INT, user_id INT, duration INT, heart_rate INT, workout_time TIME); INSERT INTO workouts (id, user_id, duration, heart_rate, workout_time) VALUES (1, 1, 60, 120, '07:00:00');", "output": "SELECT AVG(heart_rate) FROM workouts WHERE workout_time BETWEEN '06:00:00' AND '11:59:59';"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uce90\ub098\ub2e4\ub85c \ubc30\uc1a1\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipment (shipment_id INT, container_id INT, port_id INT, shipping_date DATE); CREATE TABLE Container (container_id INT, weight FLOAT);", "output": "SELECT SUM(c.weight) as total_weight FROM Container c JOIN Shipment s ON c.container_id = s.container_id JOIN Port p ON s.port_id = p.port_id WHERE p.country = 'Canada' AND s.shipping_date >= NOW() - INTERVAL '3 months';"}
{"input": " \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\uc758 \ud3c9\uade0 \uae30\ubd80\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, program TEXT, amount INT); INSERT INTO donors (id, name, program, amount) VALUES (1, 'John Doe', 'Arts', 500), (2, 'Jane Smith', 'Education', 1000), (3, 'Alice Johnson', 'Arts', 750), (4, 'ABC Corp', 'Arts', 2000), (5, 'XYZ Foundation', 'Education', 5000);", "output": "SELECT AVG(amount) FROM (SELECT amount FROM donors WHERE id IN (1, 2, 3) ORDER BY amount DESC LIMIT 3) AS top_3_donors;"}
{"input": " \ud3c9\uade0 THC \ube44\uc728\uc774 15% \uc774\uc0c1\uc778 \ubaa8\ub4e0 \uc778\ub514\uce74 \uacc4\ud1b5\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Strains (strain_id INT, strain_type TEXT, thc_percentage DECIMAL(4,2));", "output": "SELECT strain_name FROM Strains WHERE strain_type = 'indica' GROUP BY strain_name HAVING AVG(thc_percentage) > 15.00;"}
{"input": " \ub9e4\ub2ec \ucc98\uc74c\uc73c\ub85c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc740 \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodations (accommodation_id INT, student_id INT, accommodation_type VARCHAR(255), accommodation_date DATE); CREATE TABLE Students (student_id INT, department VARCHAR(255));", "output": "SELECT MONTH(accommodation_date) as month, COUNT(DISTINCT student_id) as number_of_students FROM Accommodations WHERE student_id NOT IN ( SELECT student_id FROM Accommodations WHERE accommodation_date < ( SELECT MIN(accommodation_date) FROM Accommodations )) GROUP BY month;"}
{"input": " \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ud55c \uac01 \uc758\ub958 \ub9e4\ucd9c\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (garment VARCHAR(50), category VARCHAR(50), quantity INT, sale_date DATE); INSERT INTO sales (garment, category, quantity, sale_date) VALUES ('Shirt', 'Tops', 15, '2021-01-05'), ('Pants', 'Bottoms', 20, '2021-01-05'), ('Dress', 'Tops', 30, '2021-01-10');", "output": "SELECT garment, category, sale_date, AVG(quantity) OVER (PARTITION BY category ORDER BY sale_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as moving_average FROM sales;"}
{"input": " '\ud5ec\uc2a4\ucf00\uc5b4' \uc5c5\uc885\uc758 \uc804\uccb4 \uc870\ud569\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_members (id INT, name VARCHAR(50), union_id INT, industry VARCHAR(20)); INSERT INTO union_members (id, name, union_id, industry) VALUES (1, 'John Doe', 123, 'construction'), (2, 'Jane Smith', 456, 'retail'), (3, 'Mike Johnson', 789, 'healthcare');", "output": "SELECT COUNT(*) FROM union_members WHERE industry = 'healthcare';"}
{"input": " '\ub274\uc695'\uacfc '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4' \ubaa8\ub450\uc5d0\uc11c \ubc30\uc1a1\uc744 \ubc1b\uc740 \uace0\uac1d\uc758 \uc774\ub984\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Shipment (id INT PRIMARY KEY, warehouse_id INT, customer_id INT, shipped_date DATE); INSERT INTO Shipment (id, warehouse_id, customer_id, shipped_date) VALUES (1, 1, 1, '2022-01-01'), (2, 2, 2, '2022-01-05'), (3, 3, 3, '2022-01-07'), (4, 1, 2, '2022-02-10'), (5, 2, 1, '2022-03-14'); CREATE TABLE Customer (id INT PRIMARY KEY, name VARCHAR(100), address VARCHAR(200), phone VARCHAR(15)); INSERT INTO Customer (id, name, address, phone) VALUES (1, 'John Doe', '123 Main St, Miami, FL', '305-555-1212'), (2, 'Jane Smith', '456 Oak St, San Francisco, CA', '415-555-3434'), (3, 'Mike Johnson', '789 Elm St, Dallas, TX', '214-555-5656');", "output": "SELECT c.name FROM Customer c JOIN Shipment s1 ON c.id = s1.customer_id JOIN Shipment s2 ON c.id = s2.customer_id WHERE s1.warehouse_id = (SELECT id FROM Warehouse WHERE city = 'New York') AND s2.warehouse_id = (SELECT id FROM Warehouse WHERE city = 'Los Angeles') GROUP BY c.id HAVING COUNT(DISTINCT s1.warehouse_id) = 2;"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \ud2b9\uc815 \uce58\ub8cc \uc811\uadfc\ubc95 \uc774\ud6c4 \uac1c\uc120\uc744 \ubcf4\uc774\uc9c0 \uc54a\uc740 \ud658\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TherapyApproaches (TherapyID INT, TherapyName VARCHAR(50)); CREATE TABLE Patients (PatientID INT, Age INT, Gender VARCHAR(10), TherapyStartYear INT, Improvement VARCHAR(10)); CREATE TABLE TherapySessions (SessionID INT, PatientID INT, TherapyID INT);", "output": "SELECT TherapyApproaches.TherapyName, Patients.TherapyStartYear, SUM(CASE WHEN Patients.Improvement = 'No' THEN 1 ELSE 0 END) as NoImprovementCount FROM TherapyApproaches INNER JOIN TherapySessions ON TherapyApproaches.TherapyID = TherapySessions.TherapyID INNER JOIN Patients ON TherapySessions.PatientID = Patients.PatientID GROUP BY TherapyApproaches.TherapyName, Patients.TherapyStartYear;"}
{"input": " \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc5d0\uc11c \uc720\ud615\ubcc4 \uae34\uae09 \uc0ac\uac74\uc5d0 \ub300\ud55c \ucd5c\ub300 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE san_francisco_boroughs (id INT, name TEXT); INSERT INTO san_francisco_boroughs (id, name) VALUES (1, 'Downtown'), (2, 'North Beach'), (3, 'Chinatown'); CREATE TABLE emergency_response (id INT, borough_id INT, incident_id INT, response_time INT); INSERT INTO emergency_response (id, borough_id, incident_id, response_time) VALUES (1, 1, 1, 300), (2, 1, 2, 450), (3, 3, 3, 600); CREATE TABLE emergency_incidents (id INT, type TEXT, date DATE); INSERT INTO emergency_incidents (id, type, date) VALUES (1, 'Fire', '2021-01-01'), (2, 'Theft', '2021-01-02'), (3, 'Assault', '2021-01-03');", "output": "SELECT e.type, MAX(er.response_time) as max_response_time FROM emergency_response er JOIN emergency_incidents e ON er.incident_id = e.id JOIN san_francisco_boroughs b ON er.borough_id = b.id GROUP BY e.type;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uc720\ub7fd\uc5d0\uc11c \ubcf4\uace0\ub41c \uc131\uacf5\uc801\uc778 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0\uc758 \ud3c9\uade0 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cyber_incidents_europe (region VARCHAR(255), year INT, success BOOLEAN); INSERT INTO cyber_incidents_europe (region, year, success) VALUES ('Europe', 2021, TRUE), ('Europe', 2021, FALSE), ('Europe', 2020, TRUE);", "output": "SELECT AVG(COUNT(CASE WHEN success THEN 1 END)) FROM cyber_incidents_europe WHERE region = 'Europe' GROUP BY year;"}
{"input": " \ud50c\ub7ab\ud3fc\ubcc4\ub85c \ubd84\ud560\ub41c 'social_media' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uac01 \uad6d\uac00 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ucd5c\ub300 'screen_time'\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE social_media (id INT, user_id INT, country VARCHAR(50), platform VARCHAR(50), screen_time INT); INSERT INTO social_media (id, user_id, country, platform, screen_time) VALUES (1, 1001, 'USA', 'Facebook', 360); INSERT INTO social_media (id, user_id, country, platform, screen_time) VALUES (2, 1002, 'Canada', 'Instagram', 420); INSERT INTO social_media (id, user_id, country, platform, screen_time) VALUES (3, 1003, 'Mexico', 'Twitter', 240);", "output": "SELECT country, platform, MAX(screen_time) OVER (PARTITION BY country, platform) as max_screen_time FROM social_media;"}
{"input": " \ub274\uc695 \uc8fc\uc5d0\ub294 \uba87 \uac1c\uc758 \uc7ac\ud65c\uc6a9 \uc13c\ud130\uac00 \uc788\uc73c\uba70 \uc5b4\ub5a4 \uc9c0\uc5ed\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\uae4c?", "context": "CREATE TABLE recycling_centers (id INT, name VARCHAR(20), location VARCHAR(20), district VARCHAR(20));", "output": "SELECT COUNT(*), district FROM recycling_centers WHERE location = 'New York' GROUP BY district;"}
{"input": " \uc2dc\ub9ac\uc544\uc758 \ud6c4\uc6d0\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE supporters (id INT, name TEXT, country TEXT, donation FLOAT); INSERT INTO supporters (id, name, country, donation) VALUES (1, 'John Doe', 'Syria', 50.00), (2, 'Jane Smith', 'Iraq', 100.00);", "output": "SELECT AVG(donation) FROM supporters WHERE country = 'Syria';"}
{"input": " 2021\ub144\uc5d0 \ubbf8\uad6d\uacfc \uc911\uad6d\uc758 \uc800\uc790\ub4e4\uc774 \ubc1c\ud45c\ud55c \uc790\uc728\uc8fc\ud589\ucc28 \uc5f0\uad6c \ub17c\ubb38\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Research_Papers (id INT, title VARCHAR(255), author_country VARCHAR(50), publication_year INT); INSERT INTO Research_Papers (id, title, author_country, publication_year) VALUES (1, 'Autonomous Vehicles and Traffic Flow', 'USA', 2021); INSERT INTO Research_Papers (id, title, author_country, publication_year) VALUES (2, 'Deep Learning for Autonomous Driving', 'China', 2021);", "output": "SELECT COUNT(*) FROM Research_Papers WHERE author_country IN ('USA', 'China') AND publication_year = 2021;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ub274\uc695\uc758 \ubcd1\uc6d0 \uc218\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE states (name PRIMARY KEY, population INT); INSERT INTO states (name, population) VALUES ('California', 39512223), ('New York', 19453561); CREATE TABLE hospitals (name PRIMARY KEY, state VARCHAR(20)); INSERT INTO hospitals (name, state) VALUES ('Hospital A', 'California'), ('Hospital B', 'California'), ('Hospital C', 'New York'), ('Hospital D', 'New York');", "output": "SELECT SUM(h.num_hospitals) FROM (SELECT states.name, COUNT(hospitals.name) AS num_hospitals FROM hospitals JOIN states ON hospitals.state = states.name WHERE states.name IN ('California', 'New York') GROUP BY states.name) AS h;"}
{"input": " 2019\ub144 \uc774\ud6c4 \ub9e4\ub144 \uc548\uc804\uc0ac\uace0\uac00 \ubc1c\uc0dd\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE safety_incident (id INT, product_id INT, country VARCHAR(50), year INT, PRIMARY KEY (id)); INSERT INTO safety_incident (id, product_id, country, year) VALUES (1, 1, 'USA', 2019), (2, 2, 'Canada', 2019), (3, 3, 'Mexico', 2019), (4, 4, 'USA', 2020), (5, 5, 'Canada', 2020), (6, 6, 'Mexico', 2020);", "output": "SELECT country FROM safety_incident WHERE year IN (2019, 2020) GROUP BY country HAVING COUNT(DISTINCT year) = 2;"}
{"input": " \uc720\uae30\ub18d \uba74 \uc758\ub958\uc758 \ud3c9\uade0 \uc0dd\uc0b0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organic_cotton_garments (id INT, production_cost DECIMAL); INSERT INTO organic_cotton_garments (id, production_cost) VALUES (1, 25.00), (2, 30.50), (3, 28.75);", "output": "SELECT AVG(production_cost) FROM organic_cotton_garments;"}
{"input": " \ubb3c\uc744 \uac00\uc7a5 \uc801\uac8c \uc0ac\uc6a9\ud558\ub294 \uc0c1\uc704 3\uac1c \uc758\ub958 \ube0c\ub79c\ub4dc\uc758 \ud488\ubaa9\ub2f9 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_consumption (id INT PRIMARY KEY, brand VARCHAR(50), items_produced INT, water_consumption FLOAT); INSERT INTO water_consumption (id, brand, items_produced, water_consumption) VALUES (1, 'Brand A', 100000, 1000.00), (2, 'Brand B', 150000, 1200.00), (3, 'Brand C', 80000, 800.00), (4, 'Brand D', 120000, 1500.00), (5, 'Brand E', 200000, 2000.00);", "output": "SELECT AVG(water_consumption) FROM (SELECT brand, water_consumption FROM water_consumption ORDER BY water_consumption ASC LIMIT 3) as lowest_water_users;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc6b0\uc8fc \uc784\ubb34\uac00 \uc131\uacf5\ud588\uac70\ub098 \ubd80\ubd84\uc801\uc73c\ub85c \uc131\uacf5\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE space_missions_all (id INT, mission_name VARCHAR(50), mission_year INT, mission_outcome VARCHAR(50)); INSERT INTO space_missions_all (id, mission_name, mission_year, mission_outcome) VALUES (1, 'Mars Rover 2018', 2018, 'Successful'); INSERT INTO space_missions_all (id, mission_name, mission_year, mission_outcome) VALUES (2, 'Moon Landing 2019', 2019, 'Partially Successful'); INSERT INTO space_missions_all (id, mission_name, mission_year, mission_outcome) VALUES (3, 'ISS Supply 2020', 2020, 'Successful');", "output": "SELECT COUNT(*) FROM space_missions_all WHERE mission_outcome IN ('Successful', 'Partially Successful') AND mission_year BETWEEN (SELECT EXTRACT(YEAR FROM NOW()) - 5) AND (SELECT EXTRACT(YEAR FROM NOW()));"}
{"input": " AI \ucee8\uc2dc\uc5b4\uc9c0 \uc11c\ube44\uc2a4\ub97c \uad6c\ud604\ud55c \uc624\uc138\uc544\ub2c8\uc544 \ud638\ud154\uc740 \uba87 \uad70\ub370\uc778\uac00\uc694?", "context": "CREATE TABLE hotel_features (hotel_id INT, hotel_name TEXT, country TEXT, ai_concierge BOOLEAN);", "output": "SELECT COUNT(*) FROM hotel_features WHERE country = 'Oceania' AND ai_concierge = TRUE;"}
{"input": "\uac8c\uc784' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uac01 \uac8c\uc784\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (game_id INT, game_name VARCHAR(50), revenue FLOAT); INSERT INTO games (game_id, game_name, revenue) VALUES (1, 'GameA', 5000000), (2, 'GameB', 7000000), (3, 'GameC', 3000000);", "output": "SELECT game_name, SUM(revenue) as total_revenue FROM games GROUP BY game_name;"}
{"input": " 2022\ub144 8\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ubaa8\ub4e0 \uad6c\ub97c \ud3ec\ud568\ud558\uc5ec \uc2dc\uce74\uace0 \uc2dc\uc758 \uacf5\uacf5 \uc11c\ube44\uc2a4 \uc694\uccad\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE public_service_requests (ward INT, response_time INT, request_date DATE); INSERT INTO public_service_requests (ward, response_time, request_date) VALUES (1, 60, '2022-08-01');", "output": "SELECT AVG(response_time) FROM public_service_requests WHERE request_date BETWEEN '2022-08-01' AND '2022-08-31' GROUP BY ward;"}
{"input": " \ud0dc\uc591\uad11 \ubc1c\uc804 \ud504\ub85c\uc81d\ud2b8\ub97c \uac00\uc7a5 \ub9ce\uc774 \uc9c4\ud589\ud558\ub294 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE solar_projects (project_id INT, project_name TEXT, country TEXT, capacity_mw FLOAT); INSERT INTO solar_projects (project_id, project_name, country, capacity_mw) VALUES (1, 'Solarpark A', 'Germany', 50), (2, 'Solarpark B', 'France', 75), (3, 'Solarpark C', 'Spain', 60);", "output": "SELECT country, SUM(capacity_mw) AS total_capacity FROM solar_projects GROUP BY country ORDER BY total_capacity DESC LIMIT 3;"}
{"input": " \ud734\uc2a4\ud134\uc2dc \uc120\ubd88 \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \uc6d4 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_customers (customer_id INT, data_usage FLOAT, city VARCHAR(20), plan_type VARCHAR(10)); INSERT INTO mobile_customers (customer_id, data_usage, city, plan_type) VALUES (1, 3.5, 'Houston', 'prepaid'), (2, 4.2, 'New York', 'postpaid'), (3, 3.8, 'Houston', 'prepaid');", "output": "SELECT AVG(data_usage) FROM mobile_customers WHERE city = 'Houston' AND plan_type = 'prepaid';"}
{"input": " \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc774 80 \uc774\uc0c1\uc778 \uacf5\uc7a5\uc758 \uc774\ub984, \uc704\uce58, \uc5d0\ub108\uc9c0\uc6d0\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE factories_energy (id INT, name VARCHAR(50), location VARCHAR(50), energy_source VARCHAR(50), energy_efficiency_rating INT); INSERT INTO factories_energy (id, name, location, energy_source, energy_efficiency_rating) VALUES (1, 'Factory A', 'New York', 'solar', 85), (2, 'Factory B', 'California', 'wind', 70), (3, 'Factory C', 'Texas', 'fossil_fuels', 60);", "output": "SELECT name, location, energy_source FROM factories_energy WHERE energy_efficiency_rating > 80;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc815\ucc45 \uc720\ud615 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Policy (PolicyID INT, PolicyType VARCHAR(20), Region VARCHAR(20)); INSERT INTO Policy (PolicyID, PolicyType, Region) VALUES (1, 'Auto', 'Northeast'), (2, 'Home', 'Northeast'), (3, 'Life', 'Midwest');", "output": "SELECT PolicyType, Region, COUNT(*) OVER (PARTITION BY PolicyType, Region) AS CountByTypeRegion, ROW_NUMBER() OVER (PARTITION BY PolicyType ORDER BY Region) AS RankByPolicyType FROM Policy;"}
{"input": "2021\ub144 \ubd04\ud559\uae30\uc5d0 \uacfc\ud559\ubd80\uc5d0\uc11c \ud3b8\uc758\ub97c \ubc1b\uc740 \ucd1d \ud559\uc0dd \uc218\uc640 \uc218\ud559\ubd80\uc5d0\uc11c \ud3b8\uc758\ub97c \ubc1b\uc740 \ucd1d \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE science_accommodations (student_id INT, semester VARCHAR(10));CREATE TABLE math_accommodations (student_id INT, semester VARCHAR(10)); INSERT INTO science_accommodations VALUES (1, 'spring 2021'), (2, 'spring 2021'), (3, 'spring 2021'); INSERT INTO math_accommodations VALUES (2, 'spring 2021'), (3, 'spring 2021'), (4, 'spring 2021');", "output": "SELECT COUNT(*) FROM science_accommodations WHERE semester = 'spring 2021' UNION ALL SELECT COUNT(*) FROM math_accommodations WHERE semester = 'spring 2021';"}
{"input": "\uc791\ub144\uc5d0 \uc2b9\uc9c4\ud55c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec \uc778\uc0c1\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Salaries (EmployeeID INT, Salary DECIMAL(10,2), PromotionDate DATE);", "output": "SELECT AVG(Difference) as AvgSalaryIncrease FROM (SELECT Salaries.EmployeeID, Salaries.PromotionDate, Salaries.Salary - LAG(Salaries.Salary, 1) OVER (PARTITION BY Salaries.EmployeeID ORDER BY Salaries.PromotionDate) as Difference FROM Salaries WHERE Salaries.PromotionDate BETWEEN DATEADD(YEAR, -1, GETDATE()) AND GETDATE()) as Subquery;"}
{"input": " 'africa_hotels' \ubcf4\uae30\uc758 \ud638\ud154\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \uc628\ub77c\uc778 \uc5ec\ud589\uc0ac \uc608\uc57d\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE VIEW africa_hotels AS SELECT * FROM hotels WHERE continent = 'Africa'; CREATE VIEW online_travel_agency_bookings AS SELECT hotel_id, COUNT(*) as bookings, DATE_TRUNC('month', booking_date) as month FROM online_travel_agency GROUP BY hotel_id, month;", "output": "SELECT l.name, LAG(o.bookings) OVER (PARTITION BY l.id ORDER BY o.month) as previous_month_bookings, o.bookings as current_month_bookings FROM africa_hotels l JOIN online_travel_agency_bookings o ON l.id = o.hotel_id ORDER BY o.month;"}
{"input": " \uc62c\ud574\uc640 \uc804\ub144\ub3c4 \uc804\ud1b5\uc608\uc220\ubcc4 \ud589\uc0ac\ud69f\uc218 \ucc28\uc774\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE TraditionalArtEvents (ID INT, Art VARCHAR(50), Year INT, Events INT); INSERT INTO TraditionalArtEvents (ID, Art, Year, Events) VALUES (1, 'Kabuki', 2022, 50); INSERT INTO TraditionalArtEvents (ID, Art, Year, Events) VALUES (2, 'Flamenco', 2022, 60);", "output": "SELECT Art, Events AS CurrentYearEvents, LEAD(Events) OVER (PARTITION BY Art ORDER BY Year) AS PreviousYearEvents, CurrentYearEvents - PreviousYearEvents AS Difference FROM TraditionalArtEvents;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc804\ub144 \ub300\ube44 \uc99d\uac00\ud55c \uac74\uc124 \ub178\ub3d9 \ud1b5\uacc4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Labor_Statistics (Statistic_ID INT, Statistic_Name VARCHAR(255), State VARCHAR(255), Value DECIMAL(10,2), Year INT); INSERT INTO Labor_Statistics (Statistic_ID, Statistic_Name, State, Value, Year) VALUES (1, 'Construction Jobs', 'California', 100000.00, 2021), (2, 'Construction Wages', 'California', 30.00, 2021), (3, 'Construction Jobs', 'California', 105000.00, 2022);", "output": "SELECT State, Statistic_Name, (Value - LAG(Value) OVER (PARTITION BY Statistic_Name ORDER BY Year)) AS YoY_Change FROM Labor_Statistics WHERE State = 'California' AND Value > LAG(Value) OVER (PARTITION BY Statistic_Name ORDER BY Year);"}
{"input": " '\uba78\uc885\uc704\uae30' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc18d\ud558\ub294 \ub3d9\ubb3c \uc911 '2021\ub144'\uacfc '2022\ub144'\uc5d0 \uc11c\uc2dd\uc9c0\uac00 \ud655\uc7a5\ub41c \ub3d9\ubb3c\uc740 \uba87 \ub9c8\ub9ac\uc778\uac00\uc694?", "context": "CREATE TABLE animal_population(animal_id INT, animal_name VARCHAR(50), category VARCHAR(20), year INT, habitat_size INT);INSERT INTO animal_population VALUES (1, 'Giant Panda', 'Endangered', 2021, 5), (2, 'Polar Bear', 'Endangered', 2022, 7);CREATE TABLE habitat_preservation(animal_id INT, expansion_year INT, expansion_size INT);INSERT INTO habitat_preservation VALUES (1, 2021, 2), (1, 2022, 3), (3, 2021, 1);", "output": "SELECT COUNT(*) FROM (SELECT ap.animal_id FROM animal_population ap JOIN habitat_preservation hp ON ap.animal_id = hp.animal_id WHERE ap.category = 'Endangered' AND hp.expansion_year BETWEEN 2021 AND 2022 GROUP BY ap.animal_id HAVING SUM(hp.expansion_size) > 0);"}
{"input": " \uae30\uc220 \ubd80\ubb38\uc5d0\uc11c \uc724\ub9ac\uc801 AI \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai (initiative_id INT, initiative_name VARCHAR(50), sector VARCHAR(50), launch_year INT); INSERT INTO ethical_ai (initiative_id, initiative_name, sector, launch_year) VALUES (1, 'EthicalAI1', 'Technology', 2018), (2, 'EthicalAI2', 'Finance', 2019), (3, 'EthicalAI3', 'Healthcare', 2017);", "output": "SELECT sector, COUNT(*) as count FROM ethical_ai WHERE sector = 'Technology' GROUP BY sector;"}
{"input": " \ub300\uc11c\uc591\uacfc \ud0dc\ud3c9\uc591\uc5d0 \ud574\uc591 \uc2dc\ucd94 \ud50c\ub7ab\ud3fc\uc744 \ubcf4\uc720\ud55c \ubaa8\ub4e0 \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE platform_locations(country VARCHAR(255), location VARCHAR(255), platform_type VARCHAR(255), count INT);INSERT INTO platform_locations(country, location, platform_type, count) VALUES('Brazil','Atlantic Ocean','Offshore',50),('Norway','North Sea','Offshore',30),('United Kingdom','North Sea','Offshore',20),('Mexico','Gulf of Mexico','Offshore',40),('United States','Pacific Ocean','Offshore',10),('China','South China Sea','Offshore',20);", "output": "SELECT country FROM platform_locations WHERE location IN ('Atlantic Ocean', 'Pacific Ocean') AND platform_type = 'Offshore' GROUP BY country;"}
{"input": " #food\uc5d0 \ub300\ud574 \uac8c\uc2dc\ud55c \uc801\uc774 \uc5c6\uace0 \ube44\uacf5\uac1c \ud504\ub85c\ud544\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE users (id INT, name VARCHAR(50), gender VARCHAR(10), public_profile BOOLEAN); INSERT INTO users (id, name, gender, public_profile) VALUES (1, 'Anna', 'Female', TRUE); INSERT INTO users (id, name, gender, public_profile) VALUES (2, 'Beto', 'Male', FALSE); INSERT INTO users (id, name, gender, public_profile) VALUES (3, 'Carla', 'Female', TRUE); CREATE TABLE posts (id INT, user_id INT, content TEXT, timestamp TIMESTAMP); INSERT INTO posts (id, user_id, content, timestamp) VALUES (1, 1, 'I love #food', '2021-06-15 10:00:00'); INSERT INTO posts (id, user_id, content, timestamp) VALUES (2, 3, 'Reading a great book right now', '2021-06-20 15:30:00'); CREATE TABLE post_topics (post_id INT, topic_id INT); INSERT INTO post_topics (post_id, topic_id) VALUES (1, 1); INSERT INTO post_topics (post_id, topic_id) VALUES (2, 3); CREATE TABLE topics (id INT, name VARCHAR(50)); INSERT INTO topics (id, name) VALUES (1, '#food'); INSERT INTO topics (id, name) VALUES (2, '#books');", "output": "SELECT users.name FROM users LEFT JOIN posts ON users.id = posts.user_id LEFT JOIN post_topics ON posts.id = post_topics.post_id LEFT JOIN topics ON post_topics.topic_id = topics.id WHERE users.public_profile = FALSE AND topics.name IS NULL;"}
{"input": " 2010\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc6b0\uc8fc\uad6d\uc774 \ubc1c\uc0ac\ud55c \ub2e8\uc77c \uc6b0\uc8fc \uc784\ubb34\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_mission_budgets(id INT, agency VARCHAR(255), mission_name VARCHAR(255), launch_date DATE, budget DECIMAL(10,2));", "output": "SELECT MAX(budget) FROM space_mission_budgets WHERE launch_date BETWEEN '2010-01-01' AND '2020-12-31';"}
{"input": " \ub3c4\uc2dc \uc9c0\uc5ed\uacfc \ube44\uad50\ud558\uc5ec \ub18d\ucd0c \uc9c0\uc5ed\uc5d0\uc11c \uc811\uc218\ub41c \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uae30\ub85d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE feedback (service varchar(20), location varchar(20), date date); INSERT INTO feedback (service, location, date) VALUES ('Education', 'Urban', '2021-01-01'), ('Healthcare', 'Urban', '2021-02-01'), ('Education', 'Rural', '2020-12-01'), ('Healthcare', 'Rural', '2020-11-01');", "output": "SELECT 100.0 * SUM(CASE WHEN location = 'Rural' THEN 1 ELSE 0 END) / COUNT(*) FROM feedback;"}
{"input": " \uc9c0\ub09c 10\ub144\uac04 \ubd81\uadf9\ud574 \uc0c1\uc5b4 \uac1c\uccb4\uc218\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shark_population (year INT, ocean VARCHAR(255), population INT); INSERT INTO shark_population (year, ocean, population) VALUES (2011, 'Arctic Ocean', 15000), (2012, 'Arctic Ocean', 14500), (2013, 'Arctic Ocean', 14000), (2014, 'Arctic Ocean', 13500), (2015, 'Arctic Ocean', 13000), (2016, 'Arctic Ocean', 12500), (2017, 'Arctic Ocean', 12000), (2018, 'Arctic Ocean', 11500), (2019, 'Arctic Ocean', 11000), (2020, 'Arctic Ocean', 10500);", "output": "SELECT year, population, LAG(population) OVER (ORDER BY year) as prev_population, population - LAG(population) OVER (ORDER BY year) as population_change FROM shark_population WHERE ocean = 'Arctic Ocean';"}
{"input": " \ud0d0\uc0ac \uc784\ubb34\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc6b0\uc8fc\uc120\uc744 \uc8fc\uc694 \uc870\uc0ac\uad00\uacfc \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecraft (id INT PRIMARY KEY, name VARCHAR(100), manufacturer VARCHAR(100), launch_date DATE); INSERT INTO Spacecraft (id, name, manufacturer, launch_date) VALUES (3, 'Cassini', 'NASA', '1997-10-15'); CREATE TABLE Research_Projects (id INT PRIMARY KEY, name VARCHAR(100), field VARCHAR(100), start_date DATE, end_date DATE, principal_investigator_id INT, FOREIGN KEY (principal_investigator_id) REFERENCES Astronauts(id)); INSERT INTO Research_Projects (id, name, field, start_date, end_date, principal_investigator_id) VALUES (3, 'Saturn Exploration', 'Astrophysics', '1995-01-01', '2000-12-31', 3); CREATE TABLE Astronauts (id INT PRIMARY KEY, name VARCHAR(100), age INT, country VARCHAR(100)); INSERT INTO Astronauts (id, name, age, country) VALUES (3, 'Carolyn Porco', 65, 'USA');", "output": "SELECT s.name AS spacecraft_name, r.name AS research_project, a.name AS principal_investigator FROM Spacecraft s INNER JOIN Research_Projects r ON s.id = r.id INNER JOIN Astronauts a ON r.principal_investigator_id = a.id WHERE r.field = 'Astrophysics';"}
{"input": " \ud638\uc8fc\uc0b0 \uc131\ubd84\uc744 \uc0ac\uc6a9\ud558\ub294 \ubb34\uc790\ube44 \uc778\uc99d \ud654\uc7a5\ud488 \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE BrandIngredientSource (BrandID INT, ProductID INT, IngredientSourceCountry VARCHAR(50)); CREATE TABLE CrueltyFreeCertification (BrandID INT, Certified BIT); INSERT INTO BrandIngredientSource (BrandID, ProductID, IngredientSourceCountry) VALUES (1001, 100, 'Australia'), (1002, 101, 'Australia'), (1003, 102, 'Canada'); INSERT INTO CrueltyFreeCertification (BrandID, Certified) VALUES (1001, 1), (1002, 1), (1003, 0);", "output": "SELECT DISTINCT B.BrandName FROM BrandIngredientSource BIS INNER JOIN Brands B ON BIS.BrandID = B.BrandID INNER JOIN CrueltyFreeCertification CFC ON B.BrandID = CFC.BrandID WHERE BIS.IngredientSourceCountry = 'Australia' AND CFC.Certified = 1;"}
{"input": " \ud50c\ub85c\ub9ac\ub2e4\uc758 \ucd5c\ub300 \uad50\ub7c9 \uae38\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bridges (id INT, name VARCHAR(50), state VARCHAR(50), length FLOAT); INSERT INTO bridges (id, name, state, length) VALUES (1, 'Bridge A', 'Florida', 700.00), (2, 'Bridge B', 'Florida', 500.33), (3, 'Bridge C', 'Texas', 800.00);", "output": "SELECT MAX(length) FROM bridges WHERE state = 'Florida';"}
{"input": " 2020\ub144 \ubd84\uae30\ubcc4 \uae30\ubd80\uc790\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, DonorName varchar(50), DonationDate date); INSERT INTO Donors (DonorID, DonorName, DonationDate) VALUES (1, 'John Doe', '2020-01-01'); INSERT INTO Donors (DonorID, DonorName, DonationDate) VALUES (2, 'Jane Smith', '2020-03-15');", "output": "SELECT DonorName, DATE_FORMAT(DonationDate, '%Y-%q') as Quarter, SUM(DonationAmount) as TotalDonated FROM Donations GROUP BY DonorName, Quarter;"}
{"input": " 2020\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c\ub294 \uba87 \ub300\uc758 \uc804\uae30 \uc790\ub3d9\ucc28\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Sales (Id INT, Vehicle VARCHAR(100), Year INT, State VARCHAR(50), IsElectric BOOLEAN); INSERT INTO Sales (Id, Vehicle, Year, State, IsElectric) VALUES (1, 'Model S', 2020, 'California', true), (2, 'Model 3', 2020, 'California', true), (3, 'Golf', 2020, 'California', false), (4, 'Polo', 2020, 'California', false), (5, 'Tesla Model X', 2020, 'California', true);", "output": "SELECT COUNT(*) FROM Sales WHERE Year = 2020 AND State = 'California' AND IsElectric = true"}
{"input": "2022\ub144 2\uc6d4\uc5d0 \uc218\ud589\ub41c \ucd1d \uc6b4\ub3d9 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workouts (workout_id INT, member_id INT, date DATE); INSERT INTO workouts VALUES (1,1,'2022-01-01'),(2,1,'2022-01-02'),(3,2,'2022-01-03'),(4,3,'2022-01-04'),(5,3,'2022-01-05'),(6,4,'2022-02-06'),(7,4,'2022-02-07'),(8,5,'2022-02-08'),(9,5,'2022-02-09'),(10,5,'2022-02-10');", "output": "SELECT COUNT(*) FROM workouts WHERE date BETWEEN '2022-02-01' AND '2022-02-28';"}
{"input": " 2019\ub144\ubd80\ud130 2021\ub144 \uc0ac\uc774\uc5d0 \uc625\uc218\uc218 \uc218\ud655\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE CornYield (country TEXT, year INTEGER, corn_yield INTEGER); INSERT INTO CornYield (country, year, corn_yield) VALUES ('Mexico', 2019, 80), ('Mexico', 2021, 95), ('Brazil', 2019, 120), ('Brazil', 2021, 145), ('India', 2019, 100), ('India', 2021, 130);", "output": "SELECT country, (LAG(corn_yield, 1, 0) OVER (PARTITION BY country ORDER BY year) - corn_yield) AS yield_difference FROM CornYield WHERE year = 2021 ORDER BY yield_difference DESC LIMIT 3;"}
{"input": "\uc720\ud615\uc774 '\ub274\uc2a4'\uc774\uace0 \uc5b8\uc5b4\uac00 '\ub3c5\uc77c\uc5b4'\uc778 \uc0c8 \ucf58\ud150\uce20 \ud56d\ubaa9\uc744 \uc0bd\uc785\ud558\uc138\uc694.", "context": "CREATE TABLE Content (ContentID int, ContentType varchar(50), LanguageID int); CREATE TABLE Languages (LanguageID int, LanguageName varchar(50)); INSERT INTO Languages (LanguageID, LanguageName) VALUES (1, 'English'), (2, 'Spanish'), (3, 'French'), (4, 'German');", "output": "INSERT INTO Content (ContentID, ContentType, LanguageID) VALUES (4, 'News', (SELECT LanguageID FROM Languages WHERE LanguageName = 'German'));"}
{"input": " \ub274\uc695\uc8fc \uc804\uccb4 \uae34\uae09\uc804\ud654 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, state VARCHAR(20), response_time FLOAT); INSERT INTO emergency_calls (id, state, response_time) VALUES (1, 'New York', 5.2), (2, 'New York', 6.1), (3, 'California', 4.9);", "output": "SELECT COUNT(*) FROM emergency_calls WHERE state = 'New York';"}
{"input": "\uc9c0\ub09c 3\ub144\uac04 \uc720\ub7fd\uc5f0\ud569\uacfc \ubbf8\uad6d\uc774 \uc790\uae08\uc744 \uc9c0\uc6d0\ud55c \ud574\uc591 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE research_projects (id INT, country VARCHAR(30), funder VARCHAR(30), project_name VARCHAR(50), date DATE); INSERT INTO research_projects (id, country, funder, project_name, date) VALUES (1, 'France', 'European Union', 'Marine Life Research', '2021-04-15'); INSERT INTO research_projects (id, country, funder, project_name, date) VALUES (2, 'Spain', 'United States', 'Ocean Mapping', '2020-07-22');", "output": "SELECT SUM(total) FROM (SELECT COUNT(*) AS total FROM research_projects WHERE country = 'European Union' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) UNION ALL SELECT COUNT(*) AS total FROM research_projects WHERE country = 'United States' AND date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)) AS combined_funders;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uae30\uc5c5\ubcc4 \ucc44\uad74\ub41c \uad11\ubb3c\uc758 \ucd1d\ub7c9\uacfc \uc9c0\uc5ed\ubcc4 \uae30\uc5c5\ubcc4 \uc9c1\uc6d0, \uacc4\uc57d\uc790, \uad11\uc0b0 \ud604\uc7a5\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT, name VARCHAR(50)); CREATE TABLE companies (id INT, name VARCHAR(50)); CREATE TABLE company_sites (id INT, company_id INT, site_id INT); CREATE TABLE mining_sites (id INT, name VARCHAR(50), location VARCHAR(50), region_id INT, company_id INT); CREATE TABLE employees (id INT, site_id INT, role VARCHAR(50), quantity INT); CREATE TABLE contractors (id INT, site_id INT, quantity INT); CREATE TABLE minerals_extracted (id INT, site_id INT, quantity INT);", "output": "SELECT r.name AS region, c.name AS company, SUM(me.quantity) AS total_minerals_extracted, COUNT(DISTINCT ms.id) AS total_sites, SUM(e.quantity + c.quantity) AS total_workforce FROM regions r INNER JOIN mining_sites ms ON r.id = ms.region_id INNER JOIN companies c ON ms.company_id = c.id INNER JOIN company_sites cs ON c.id = cs.company_id INNER JOIN mining_sites ms2 ON cs.site_id = ms2.id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM employees GROUP BY site_id) e ON ms2.id = e.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM contractors GROUP BY site_id) c ON ms2.id = c.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM minerals_extracted GROUP BY site_id) me ON ms2.id = me.site_id GROUP BY r.name, c.name;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ubca0\uc9c0\ubc84\uac70\ub97c \uba87 \ubc88 \uc8fc\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE menus (id INT, name VARCHAR(255), category VARCHAR(255), price DECIMAL(10,2), PRIMARY KEY(id)); INSERT INTO menus VALUES (1, 'Pizza Margherita', 'Pizza', 9.99), (2, 'Chicken Alfredo', 'Pasta', 12.49), (3, 'Veggie Burger', 'Burgers', 8.99), (4, 'Seasonal Fruit Bowl', 'Starters', 7.99); CREATE TABLE orders (id INT, menu_id INT, order_date DATE, PRIMARY KEY(id), FOREIGN KEY (menu_id) REFERENCES menus(id));", "output": "SELECT COUNT(*) as veggie_burger_orders FROM orders WHERE menu_id = (SELECT id FROM menus WHERE name = 'Veggie Burger') AND order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ud3c9\uade0 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates (country VARCHAR(255), recycling_rate FLOAT); INSERT INTO recycling_rates (country, recycling_rate) VALUES ('South Africa', 0.36), ('Egypt', 0.22), ('Nigeria', 0.15);", "output": "SELECT AVG(recycling_rate) FROM recycling_rates WHERE country IN ('South Africa', 'Egypt', 'Nigeria');"}
{"input": " \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74\uc758 \uc778\uad6c 100,000\uba85\ub2f9 \uc815\uc2e0 \uac74\uac15 \uc804\ubb38\uac00 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE professionals (id INT, name TEXT, age INT, country TEXT, role TEXT); INSERT INTO professionals (id, name, age, country, role) VALUES (1, 'John Doe', 45, 'Brazil', 'Psychologist'), (2, 'Jane Smith', 35, 'Argentina', 'Psychiatrist'), (3, 'Alice Johnson', 40, 'Colombia', 'Social Worker'), (4, 'Bob Brown', 50, 'Mexico', 'Counselor'); CREATE TABLE population (country TEXT, people INT); INSERT INTO population (country, people) VALUES ('Brazil', 210147125), ('Argentina', 45195770), ('Colombia', 50882884), ('Mexico', 130759074);", "output": "SELECT country, COUNT(*)*100000.0 / (SELECT people FROM population WHERE country = p.country) as rate FROM professionals p GROUP BY country;"}
{"input": " \uc6d4\uac04 \ud310\ub9e4 \ud69f\uc218\uc5d0 \ub530\ub77c \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc758 \uc21c\uc704\ub97c \ub9e4\uae30\uace0 \ub9e4\ub2ec \uc0c1\uc704 \uc21c\uc704 \uce74\ud14c\uace0\ub9ac\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GarmentSales (SaleID INT, Category VARCHAR(255), SaleMonth VARCHAR(255)); INSERT INTO GarmentSales (SaleID, Category, SaleMonth) VALUES (1, 'Tops', 'January');", "output": "SELECT Category, SaleMonth, ROW_NUMBER() OVER (PARTITION BY SaleMonth ORDER BY COUNT(*) DESC) as Rank FROM GarmentSales GROUP BY Category, SaleMonth HAVING Rank = 1;"}
{"input": " \uac01 \ud559\uad70\uc758 \ucd1d \ud559\uc0dd \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uac01 \uacfc\ubaa9 \uc601\uc5ed\uc5d0\uc11c \uad50\uc0ac\uac00 \uc774\uc218\ud55c \uc804\ubb38 \uac1c\ubc1c \uacfc\uc815\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name TEXT); INSERT INTO districts (district_id, district_name) VALUES (1, 'Rural'), (2, 'Urban'), (3, 'Suburban'); CREATE TABLE teachers (teacher_id INT, teacher_name TEXT, district_id INT, subject_area TEXT, courses_completed INT); INSERT INTO teachers (teacher_id, teacher_name, district_id, subject_area, courses_completed) VALUES (1, 'Sonia', 1, 'Math', 5), (2, 'Tariq', 2, 'Science', 3), (3, 'Ella', 3, 'English', 7), (4, 'Victor', 1, 'Math', 2), (5, 'Kiara', 2, 'Science', 4); CREATE TABLE students (student_id INT, student_name TEXT, district_id INT); INSERT INTO students (student_id, student_name, district_id) VALUES (1, 'Alex', 1), (2, 'Bella', 2), (3, 'Charlie', 3), (4, 'Danielle', 1), (5, 'Eli', 3);", "output": "SELECT districts.district_name, teachers.subject_area, COUNT(students.student_id) AS total_students, MAX(teachers.courses_completed) AS max_courses_completed FROM districts JOIN teachers ON districts.district_id = teachers.district_id JOIN students ON districts.district_id = students.district_id GROUP BY districts.district_name, teachers.subject_area;"}
{"input": " \uce90\ub098\ub2e4 \ubaa8\ub4e0 \uc815\ubd80 \ubd80\uc11c\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GovernmentDepartments (DepartmentID int, DepartmentName varchar(255), Country varchar(255), Budget decimal(10,2)); INSERT INTO GovernmentDepartments (DepartmentID, DepartmentName, Country, Budget) VALUES (1, 'Canadian Department of Defense', 'Canada', 25000000.00), (2, 'Canadian Department of Health', 'Canada', 30000000.00);", "output": "SELECT SUM(Budget) FROM GovernmentDepartments WHERE Country = 'Canada';"}
{"input": " 2020\ub144 \ub274\uc695\uc8fc\uc5d0\uc11c \uc800\uc9c0\ub978 \ubc94\uc8c4\uc758 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE public.crimes (id SERIAL PRIMARY KEY, state VARCHAR(255), year INTEGER, crime_count INTEGER); INSERT INTO public.crimes (state, year, crime_count) VALUES ('New York', 2020, 500), ('New York', 2020, 700), ('New York', 2019, 600);", "output": "SELECT SUM(crime_count) FROM public.crimes WHERE state = 'New York' AND year = 2020;"}
{"input": " 2020\ub144\uc5d0 \uac1c\ubd09\ub41c \ubaa8\ub4e0 \uc601\ud654 \ubc0f TV \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc218\uc775\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE movie_sales (id INT, movie_name VARCHAR(50), revenue FLOAT, release_date DATE); CREATE TABLE show_sales (id INT, show_name VARCHAR(50), revenue FLOAT, air_date DATE);", "output": "SELECT SUM(revenue) FROM movie_sales WHERE YEAR(release_date) = 2020 UNION SELECT SUM(revenue) FROM show_sales WHERE YEAR(air_date) = 2020;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud55c \ubbfc\uac04 \ubc0f \uacf5\uacf5 \ucd9c\ucc98\uc758 \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program_funding (program_category VARCHAR(15), funding_source VARCHAR(15), amount INT);", "output": "SELECT program_category, SUM(CASE WHEN funding_source = 'private' THEN 1 ELSE 0 END) + SUM(CASE WHEN funding_source = 'public' THEN 1 ELSE 0 END) AS total_funding FROM program_funding GROUP BY program_category;"}
{"input": " 2018\ub144\ubd80\ud130 2022\ub144\uae4c\uc9c0 '\ub18d\ucd0c' \ubd80\ubb38\uc758 \ubaa8\ub4e0 \ubb3c \uc808\uc57d \uacc4\ud68d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE conservation_initiatives (initiative VARCHAR(255), sector VARCHAR(255), start_year INT, end_year INT); INSERT INTO conservation_initiatives (initiative, sector, start_year, end_year) VALUES ('Initiative A', 'rural', 2018, 2021), ('Initiative B', 'rural', 2020, 2022), ('Initiative C', 'urban', 2019, 2020), ('Initiative D', 'suburban', 2021, 2023), ('Initiative E', 'rural', 2019, 2022);", "output": "SELECT initiative FROM conservation_initiatives WHERE sector = 'rural' AND start_year BETWEEN 2018 AND 2022;"}
{"input": " PC\uc640 \ubaa8\ubc14\uc77c \ud50c\ub7ab\ud3fc \ubaa8\ub450\uc5d0\uc11c \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ucd1d \ud50c\ub808\uc774\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Platform VARCHAR(10)); INSERT INTO Players (PlayerID, Platform) VALUES (1, 'PC'), (2, 'Mobile'), (3, 'PC'), (4, 'Mobile');", "output": "SELECT PlayerID FROM Players WHERE Platform = 'PC' INTERSECT SELECT PlayerID FROM Players WHERE Platform = 'Mobile';"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INT, org_id INT);CREATE TABLE programs (program_id INT, program_category_id INT);CREATE TABLE donations (donation_id INT, donor_id INT, program_id INT, donation_amount DECIMAL(10,2)); INSERT INTO volunteers (volunteer_id, org_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 3), (7, 3); INSERT INTO programs (program_id, program_category_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3); INSERT INTO donations (donation_id, donor_id, program_id, donation_amount) VALUES (1, 1, 1, 500.00), (2, 2, 1, 750.00), (3, 3, 2, 300.00), (4, 4, 3, 400.00), (5, 5, 3, 600.00), (6, 1, 1, 800.00), (7, 2, 2, 500.00);", "output": "SELECT pc.program_category_name, AVG(d.donation_amount) as avg_donation_amount_per_volunteer FROM programs p JOIN donations d ON p.program_id = d.program_id JOIN volunteers v ON p.org_id = v.org_id JOIN program_categories pc ON p.program_category_id = pc.program_category_id GROUP BY pc.program_category_name;"}
{"input": " 2021\ub144 \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \uae30\ubd80\uc790 \uc218\ub294 \ucd1d \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE donations (id INT, donor_id INT, donation_amount DECIMAL, donation_date DATE, donor_program VARCHAR); INSERT INTO donations (id, donor_id, donation_amount, donation_date, donor_program) VALUES (1, 101, '500', '2021-01-01', 'Arts & Culture'), (2, 102, '300', '2021-02-01', 'Sports'), (3, 103, '800', '2021-03-01', 'Arts & Culture'); CREATE TABLE volunteers (id INT, name VARCHAR, program VARCHAR); INSERT INTO volunteers (id, name, program) VALUES (101, 'Jamila Davis', 'Arts & Culture'), (102, 'Ricardo Silva', 'Sports'), (103, 'Xiao Liu', 'Arts & Culture'), (104, 'Kim Lee', 'Education'); CREATE TABLE programs (id INT, name VARCHAR); INSERT INTO programs (id, name) VALUES (1, 'Arts & Culture'), (2, 'Sports'), (3, 'Education');", "output": "SELECT p.name as program_name, COUNT(DISTINCT v.id) as total_volunteers, COUNT(DISTINCT d.donor_id) as total_donors FROM programs p LEFT JOIN volunteers v ON p.name = v.program LEFT JOIN donations d ON p.name = d.donor_program AND YEAR(d.donation_date) = 2021 GROUP BY p.name;"}
{"input": " '\uc911\uc11c\ubd80' \uc9c0\uc5ed\uc5d0 \ud68c\uc6d0 500\uba85\uc73c\ub85c \uad6c\uc131\ub41c \uc0c8\ub85c\uc6b4 \ub178\ub3d9\uc870\ud569 '\uad50\uc721\uc790 \uc5f0\ud569'\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE unions (id INT, name TEXT, member_count INT, region TEXT);   CREATE TABLE members (id INT, union_id INT);", "output": "INSERT INTO unions (id, name, member_count, region) VALUES (1, 'Educators Union', 500, 'midwest');   INSERT INTO members (id, union_id) SELECT NULL, id FROM (SELECT 1 + (SELECT MAX(id) FROM unions) AS id) AS seq_table;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 1000\ud30c\uc6b4\ub4dc \uc774\uc0c1\uc758 \ud574\uc0b0\ubb3c\uc744 \uc7a1\uc740 \uc5b4\ubd80\ub4e4\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2dc\uc624.", "context": "CREATE TABLE Fishermen(FishermanID INT, Name VARCHAR(50), Active BOOLEAN);CREATE TABLE Seafood(FishID INT, FishermanID INT, Species VARCHAR(50), Weight INT, CatchDate DATE);INSERT INTO Fishermen VALUES (1, 'John', TRUE), (2, 'Jane', TRUE), (3, 'Mike', FALSE);INSERT INTO Seafood VALUES (1, 1, 'Tuna', 800, '2022-06-01'), (2, 1, 'Salmon', 500, '2022-05-15'), (3, 2, 'Shrimp', 300, '2022-04-20'), (4, 3, 'Lobster', 700, '2022-05-10');", "output": "SELECT Name FROM Fishermen WHERE FishermanID IN (SELECT FishermanID FROM Seafood WHERE Weight > 1000 AND CatchDate >= DATEADD(month, -1, GETDATE()) GROUP BY FishermanID HAVING COUNT(*) > 1);"}
{"input": " \ub3d9\ubb3c \ud559\ub300 \ube44\uc728\uc774 \ub192\uc740 \uad6d\uac00\uc5d0 \uc704\uce58\ud55c \uacf5\uae09\uc5c5\uccb4\uc758 \uc778\uc99d \uc0c1\ud0dc\ub97c '\uc544\ub2c8\uc694'\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Supplier (ID INT PRIMARY KEY, SupplierName TEXT, Country TEXT, Certified TEXT); CREATE TABLE Country (ID INT PRIMARY KEY, Country TEXT, AnimalCrueltyRate DECIMAL(3,2));", "output": "UPDATE Supplier SET Supplier.Certified = 'No' WHERE Supplier.Country IN (SELECT Country FROM Country WHERE Country.AnimalCrueltyRate > 0.8);"}
{"input": " \ucef4\ud4e8\ud130\uacf5\ud559\uacfc \uad50\uc218\uc9c4\uc5d0\uac8c \uc218\uc5ec\ub41c \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE department (id INT, name TEXT);CREATE TABLE faculty (id INT, department_id INT);CREATE TABLE research_grant (id INT, faculty_id INT, amount INT);", "output": "SELECT SUM(rg.amount) FROM research_grant rg JOIN faculty f ON rg.faculty_id = f.id JOIN department d ON f.department_id = d.id WHERE d.name = 'Computer Science';"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \uba87 \uac74\uc758 \uc0ac\uae30 \uc0ac\uac74\uc774 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE fraud (fraud_id INT, country VARCHAR(50), fraud_date DATE); INSERT INTO fraud (fraud_id, country, fraud_date) VALUES (1, 'US', '2022-01-10'), (2, 'UK', '2022-02-15'), (3, 'US', '2022-03-01');", "output": "SELECT COUNT(*) as num_fraud_cases FROM fraud WHERE country = 'US' AND fraud_date BETWEEN '2022-01-01' AND '2022-06-30';"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc57c\uad6c\uc640 \ud558\ud0a4 \uacbd\uae30\uc5d0 \ubaa8\ub450 \ucc38\uc11d\ud55c \ud32c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE fan_attendance(fan_id INT, game_type VARCHAR(10), attendance_date DATE); INSERT INTO fan_attendance(fan_id, game_type, attendance_date) VALUES (1, 'baseball', '2022-01-05'), (2, 'hockey', '2022-02-07'), (3, 'baseball', '2022-03-10'), (1, 'hockey', '2022-03-12'), (4, 'baseball', '2022-04-15'), (3, 'hockey', '2022-04-17');", "output": "SELECT fan_id FROM fan_attendance WHERE game_type = 'baseball' AND attendance_date >= DATEADD(month, -6, GETDATE()) INTERSECT SELECT fan_id FROM fan_attendance WHERE game_type = 'hockey' AND attendance_date >= DATEADD(month, -6, GETDATE());"}
{"input": " \uc911\uc2dd\ub2f9 \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uc9c0\ub09c\ub2ec \uc8fc\ubb38\ub7c9\ub9cc \uace0\ub824\ud558\uc5ec \uc778\uae30\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae30\uc790\uba74?", "context": "CREATE TABLE Restaurants (id INT, name TEXT, cuisine TEXT); INSERT INTO Restaurants (id, name, cuisine) VALUES (1, 'Golden Palace', 'Chinese'), (2, 'La Trattoria', 'Italian'); CREATE TABLE Menu (id INT, name TEXT, category TEXT, price FLOAT, restaurant_id INT); CREATE TABLE Orders (id INT, menu_id INT, order_date DATE, quantity INT);", "output": "SELECT menu.name, menu.category, SUM(orders.quantity) as total_quantity, ROW_NUMBER() OVER (PARTITION BY menu.category ORDER BY SUM(orders.quantity) DESC) as rank FROM Orders JOIN Menu ON Orders.menu_id = Menu.id JOIN Restaurants ON Menu.restaurant_id = Restaurants.id WHERE Restaurants.cuisine = 'Chinese' AND Orders.order_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY menu.name, menu.category ORDER BY menu.category, rank;"}
{"input": " \uc218\ud61c\uc790\uc758 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uacfc \uac19\uac70\ub098 \uadf8 \uc774\uc0c1\uc758 \uae08\uc561\uc744 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (Id INT, Name VARCHAR(50), Age INT, Amount DECIMAL(10,2)); INSERT INTO Donors (Id, Name, Age, Amount) VALUES (1, 'Ella Davis', 45, 1200.00), (2, 'Avery Thompson', 50, 1500.00), (3, 'Scarlett White', 55, 1800.00); CREATE TABLE Recipients (Id INT, Name VARCHAR(50), Age INT, Amount DECIMAL(10,2)); INSERT INTO Recipients (Id, Name, Age, Amount) VALUES (1, 'Mental Health Support', 60, 1000.00), (2, 'Disaster Relief', 65, 1300.00), (3, 'Climate Change Action', 70, 1600.00);", "output": "SELECT Name FROM Donors WHERE Amount >= (SELECT AVG(Amount) FROM Recipients);"}
{"input": " 1800\ub144 \uc774\uc804\uc5d0 \uc2dc\uc791\ub41c \uc608\uc220 \uc6b4\ub3d9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtMovements (MovementID INT, Name VARCHAR(50), YearStart INT, YearEnd INT, Description TEXT); INSERT INTO ArtMovements (MovementID, Name, YearStart, YearEnd, Description) VALUES (1, 'Renaissance', 1400, 1600, 'A period of cultural, artistic, political and economic rebirth following the Middle Ages.'), (2, 'Baroque', 1600, 1750, 'A style of European art, architecture, and music that started around 1600.'), (3, 'Neoclassicism', 1750, 1830, 'A Western movement in the decorative and visual arts, literature, theatre, music, and architecture that drew inspiration from the \"classical\" art and culture of Ancient Greece and Rome.');", "output": "SELECT Name FROM ArtMovements WHERE YearStart < 1800;"}
{"input": "\uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ub300\ub959\ubcc4\ub85c \uba87 \uba85\uc758 \uad00\uad11\uac1d\uc774 \uac01 \uad6d\uac00\ub97c \ubc29\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Tourists (id INT, nationality VARCHAR(50), visit_date DATE); CREATE TABLE Countries (id INT, country_name VARCHAR(50), continent VARCHAR(50)); CREATE TABLE Tourists_Countries (tourist_id INT, country_id INT, visit_date DATE); INSERT INTO Countries VALUES (1, 'France', 'Europe'); INSERT INTO Countries VALUES (2, 'Brazil', 'South America'); INSERT INTO Tourists VALUES (1, 'France', '2022-01-01'); INSERT INTO Tourists VALUES (2, 'Brazil', '2022-01-02'); INSERT INTO Tourists_Countries VALUES (1, 1, '2022-01-01'); INSERT INTO Tourists_Countries VALUES (2, 2, '2022-01-02');", "output": "SELECT Countries.continent, Countries.country_name, COUNT(DISTINCT Tourists_Countries.tourist_id) AS num_tourists FROM Tourists_Countries INNER JOIN Tourists ON Tourists_Countries.tourist_id = Tourists.id INNER JOIN Countries ON Tourists_Countries.country_id = Countries.id WHERE Tourists.visit_date BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() GROUP BY Countries.continent, Countries.country_name;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uac01 \uac8c\uc784\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (id INT, name VARCHAR(100), revenue FLOAT); CREATE TABLE sales (id INT, game_id INT, sale_date DATE); INSERT INTO games (id, name, revenue) VALUES (1, 'Racing Game', 5000000), (2, 'Adventure Game', 8000000); INSERT INTO sales (id, game_id, sale_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-02-01'), (3, 2, '2022-03-01');", "output": "SELECT g.name, SUM(s.revenue) as total_revenue FROM games g JOIN sales s ON g.id = s.game_id JOIN (SELECT EXTRACT(QUARTER FROM sale_date) as q, game_id FROM sales GROUP BY q, game_id) q ON s.game_id = q.game_id AND EXTRACT(QUARTER FROM s.sale_date) = q.q GROUP BY g.name;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uc81c\uc870\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (satellite_id INT, name VARCHAR(100), manufacturer VARCHAR(100), launch_date DATE); INSERT INTO satellites (satellite_id, name, manufacturer, launch_date) VALUES (1, 'Sat1', 'SpaceTech Inc.', '2005-03-14'); INSERT INTO satellites (satellite_id, name, manufacturer, launch_date) VALUES (2, 'Sat2', 'Aerospace Corp.', '2008-09-27'); INSERT INTO satellites (satellite_id, name, manufacturer, launch_date) VALUES (3, 'Sat3', 'SpaceTech Inc.', '2020-02-17');", "output": "SELECT DISTINCT manufacturer FROM satellites WHERE launch_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 5 YEAR) AND CURDATE();"}
{"input": " 2021\ub144\uc5d0\ub294 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uba87 \uba85\uc758 \ubbf8\uad6d \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Country TEXT); INSERT INTO Volunteers (VolunteerID, VolunteerName, Country) VALUES (1, 'Alice', 'USA'); INSERT INTO Volunteers (VolunteerID, VolunteerName, Country) VALUES (2, 'Bob', 'Mexico'); CREATE TABLE VolunteerPrograms (ProgramID INT, ProgramName TEXT); INSERT INTO VolunteerPrograms (ProgramID, ProgramName) VALUES (1, 'Feeding the Homeless'); INSERT INTO VolunteerPrograms (ProgramID, ProgramName) VALUES (2, 'Tutoring Kids'); CREATE TABLE VolunteerEvents (EventID INT, ProgramID INT, VolunteerID INT, EventDate DATE); INSERT INTO VolunteerEvents (EventID, ProgramID, VolunteerID, EventDate) VALUES (1, 1, 1, '2021-01-01'); INSERT INTO VolunteerEvents (EventID, ProgramID, VolunteerID, EventDate) VALUES (2, 2, 2, '2021-02-01');", "output": "SELECT VolunteerPrograms.ProgramName, COUNT(DISTINCT Volunteers.VolunteerID) AS VolunteerCount FROM Volunteers INNER JOIN VolunteerEvents ON Volunteers.VolunteerID = VolunteerEvents.VolunteerID INNER JOIN VolunteerPrograms ON VolunteerEvents.ProgramID = VolunteerPrograms.ProgramID WHERE Volunteers.Country = 'USA' AND YEAR(VolunteerEvents.EventDate) = 2021 GROUP BY VolunteerPrograms.ProgramName;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc640 \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \ucd1d \ub3d9\ubb3c \uc218\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE regions (id INT, region_name VARCHAR(255)); INSERT INTO regions (id, region_name) VALUES (1, 'Asia'), (2, 'Africa'), (3, 'North America'); CREATE TABLE animal_location (id INT, animal_id INT, region_id INT); INSERT INTO animal_location (id, animal_id, region_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3); CREATE TABLE animals (id INT, animal_name VARCHAR(255), region_id INT); INSERT INTO animals (id, animal_name, region_id) VALUES (1, 'Tiger', 1), (2, 'Elephant', 2), (3, 'Crane', 3);", "output": "SELECT r.region_name, COUNT(a.id) as animal_count FROM regions r INNER JOIN animal_location al ON r.id = al.region_id INNER JOIN animals a ON al.animal_id = a.id WHERE r.region_name IN ('Africa', 'North America') GROUP BY r.region_name;"}
{"input": " \uc9c0\ub09c \uc8fc '30~40' \uc5f0\ub839\ub300 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc6b4\ub3d9 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE age_info (id INT, user_id INT, age INT); INSERT INTO age_info (id, user_id, age) VALUES (1, 1, 35), (2, 2, 28); CREATE TABLE workout_logs (id INT, user_id INT, workout_duration INT, workout_date DATE); INSERT INTO workout_logs (id, user_id, workout_duration, workout_date) VALUES (1, 1, 60, '2023-01-01'), (2, 2, 45, '2023-01-02');", "output": "SELECT SUM(workout_duration) FROM (SELECT workout_duration FROM age_info JOIN workout_logs ON age_info.user_id = workout_logs.user_id WHERE age BETWEEN 30 AND 40 AND workout_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 WEEK) AND CURRENT_DATE()) AS subquery;"}
{"input": " \ub0b4 \uc6d4\uac04 \ubb3c \uc18c\ube44\ub7c9\uc774 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine_water_consumption (consumption_date DATE, mine_id INT, water_consumption INT); INSERT INTO mine_water_consumption (consumption_date, mine_id, water_consumption) VALUES ('2021-01-15', 1, 3000), ('2021-02-03', 2, 4000), ('2021-03-12', 3, 5000), ('2021-04-20', 4, 2000), ('2021-05-05', 1, 2500), ('2021-06-18', 2, 3500), ('2021-07-02', 3, 6000), ('2021-08-16', 4, 2200), ('2021-09-01', 1, 3000), ('2021-10-14', 2, 4500), ('2021-11-29', 3, 5500), ('2021-12-15', 4, 3000);", "output": "SELECT mine_id, EXTRACT(MONTH FROM consumption_date) AS month, AVG(water_consumption) AS avg_water_consumption, RANK() OVER (ORDER BY AVG(water_consumption) DESC) AS rank FROM mine_water_consumption GROUP BY mine_id, EXTRACT(MONTH FROM consumption_date) ORDER BY rank;"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uc720\ud615\uc774 '\uccad\uc18c\ub144' \ub610\ub294 '\uad50\uc721'\uc778 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc608\uc0b0\uc744 \ucd1d \uc608\uc0b0 \uae30\uc900 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE programs (id INT, budget INT, program_type VARCHAR(20)); INSERT INTO programs (id, budget, program_type) VALUES (1, 120000, 'Education'), (2, 50000, 'Health'), (3, 80000, 'Arts'), (4, 90000, 'Youth');", "output": "SELECT ROW_NUMBER() OVER (ORDER BY SUM(budget) DESC) AS record_id, SUM(budget) AS total_budget FROM programs WHERE program_type IN ('Youth', 'Education') GROUP BY program_type;"}
{"input": " \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\uc640 \uba54\ub274 \ud56d\ubaa9\uc744 \uace0\ub824\ud558\uc5ec \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (id INT, name VARCHAR(255), city VARCHAR(255), revenue FLOAT); CREATE TABLE Menu (id INT, rest_id INT, item VARCHAR(255), price FLOAT); CREATE TABLE Vendors (id INT, name VARCHAR(255), sustainability_score INT); CREATE TABLE Menu_Vendors (menu_id INT, vendor_id INT); CREATE TABLE Sustainable_Sourcing (id INT, rest_id INT, sustainable BOOLEAN);", "output": "SELECT R.name, (SUM(SS.sustainable) * 100.0 / COUNT(MV.menu_id)) as sustainability_percentage FROM Restaurants R JOIN Menu M ON R.id = M.rest_id JOIN Menu_Vendors MV ON M.id = MV.menu_id JOIN Sustainable_Sourcing SS ON R.id = SS.rest_id GROUP BY R.name;"}
{"input": " \uae30\uad00\ubcc4\ub85c \ubc1c\ud45c\ub41c AI \uc548\uc804 \ub17c\ubb38\uc758 3\uac1c\uc6d4 \uc774\ub3d9\ud3c9\uade0\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE safety_paper (id INT, title VARCHAR(255), institution VARCHAR(255), publication_date DATE); INSERT INTO safety_paper (id, title, institution, publication_date) VALUES (1, 'Safe AI Systems', 'MIT', '2021-05-15'), (2, 'Robust AI Design', 'Stanford University', '2020-08-23'), (3, 'Secure AI Development', 'Oxford University', '2019-12-18');", "output": "SELECT institution, AVG(COUNT(*)) OVER (PARTITION BY institution ORDER BY MIN(publication_date) ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as moving_avg FROM safety_paper GROUP BY institution, publication_date ORDER BY publication_date;"}
{"input": " '\uad50\uc721 \ubc0f \ubd09\uc0ac\ud65c\ub3d9'\uc5d0\uc11c \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc744 \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE program_donations (program_id INT, donation_amount DECIMAL);", "output": "SELECT program_id, SUM(donation_amount) FROM program_donations WHERE program_id IN (SELECT id FROM programs WHERE name = 'Education & Outreach') GROUP BY program_id;"}
{"input": " 2023\ub144 2\ubd84\uae30 '\ubdf0\ud2f0' \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud574 \ubca0\ud2b8\ub0a8\uacfc \ud0dc\uad6d \uc0ac\uc6a9\uc790\ub85c\ubd80\ud130 \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255)); INSERT INTO products (product_id, product_name, category) VALUES (1, 'Cream 1', 'beauty'), (2, 'Lipstick 1', 'beauty'); CREATE TABLE users (user_id INT, user_country VARCHAR(255)); INSERT INTO users (user_id, user_country) VALUES (1, 'Vietnam'), (2, 'Thailand'); CREATE TABLE orders (order_id INT, user_id INT, product_id INT, order_date DATE, revenue DECIMAL(10, 2)); INSERT INTO orders (order_id, user_id, product_id, order_date, revenue) VALUES (1, 1, 1, '2023-04-01', 25), (2, 2, 1, '2023-04-05', 30);", "output": "SELECT SUM(revenue) FROM orders o JOIN products p ON o.product_id = p.product_id JOIN users u ON o.user_id = u.user_id WHERE u.user_country IN ('Vietnam', 'Thailand') AND p.category = 'beauty' AND o.order_date BETWEEN '2023-04-01' AND '2023-06-30';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ubc1c\ud589\ub41c \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \uc218\uc640 \ud574\ub2f9 \uc790\uc0b0 \ud074\ub798\uc2a4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE digital_assets (asset_id INT, name VARCHAR(255), issue_country VARCHAR(50), asset_class VARCHAR(50)); INSERT INTO digital_assets (asset_id, name, issue_country, asset_class) VALUES (1, 'Asset1', 'USA', 'Equity'), (2, 'Asset2', 'USA', 'Commodity'), (3, 'Asset3', 'Canada', 'Currency');", "output": "SELECT issue_country, asset_class, COUNT(*) as num_assets FROM digital_assets WHERE issue_country = 'USA' GROUP BY issue_country, asset_class;"}
{"input": " 2021\ub144 3\ubd84\uae30\uc5d0 \ud0c4\uc18c \uac00\uaca9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uc8fc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE carbon_pricing (id INT, state VARCHAR(2), quarter INT, price FLOAT); INSERT INTO carbon_pricing (id, state, quarter, price) VALUES (1, 'California', 3, 15.5), (2, 'New York', 3, 13.2), (3, 'Washington', 3, 12.9), (4, 'Oregon', 3, 12.5), (5, 'Minnesota', 3, 11.8), (6, 'California', 3, 16.1), (7, 'New York', 3, 14.0), (8, 'Washington', 3, 13.4), (9, 'Oregon', 3, 12.8), (10, 'Minnesota', 3, 12.1);", "output": "SELECT state, AVG(price) as avg_price FROM carbon_pricing WHERE quarter = 3 GROUP BY state ORDER BY avg_price DESC LIMIT 5;"}
{"input": " \ubaa8\ub4e0 \uc13c\uc11c, \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uc54c\ub824\uc9c4 \uc704\uce58 \ubc0f \uc9c0\ub09c \ub2ec\uc5d0 \uc624\uc791\ub3d9\ud55c \ud69f\uc218\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Sensor (sensor_id INT, location VARCHAR(20), last_seen DATE, malfunction BOOLEAN);", "output": "SELECT sensor_id, location, COUNT(*) FROM Sensor WHERE last_seen >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND malfunction = TRUE GROUP BY sensor_id, location;"}
{"input": "\ucf00\ub0d0\uc758 \ucd1d \ub300\ud53c\uc18c \uc218\uc640 \uadf8\uacf3\uc5d0\uc11c \uc218\uc6a9\ud558\ub294 \uac00\uc871 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shelters (id INT, name TEXT, location TEXT, capacity INT); INSERT INTO shelters (id, name, location, capacity) VALUES (1, 'Shelter A', 'Nairobi', 50), (2, 'Shelter B', 'Mombasa', 75);", "output": "SELECT SUM(capacity) as total_capacity, (SELECT COUNT(DISTINCT id) FROM shelters WHERE location = 'Kenya') as family_count FROM shelters WHERE location = 'Kenya';"}
{"input": " \ud0c0\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc57c\uad6c\ud300\uc740 \uc5b4\ub514\uc77c\uae4c\uc694?", "context": "CREATE TABLE Teams (team_name TEXT, batting_average REAL); INSERT INTO Teams (team_name, batting_average) VALUES ('Team A', 0.300), ('Team B', 0.280), ('Team C', 0.290);", "output": "SELECT team_name FROM Teams WHERE batting_average = (SELECT MAX(batting_average) FROM Teams);"}
{"input": "\uac01 \ub3c4\uc2dc\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \ubc94\uc8c4 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crimes (id INT, city VARCHAR(255), crime_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO crimes (id, city, crime_type, timestamp) VALUES (1, 'Chicago', 'Theft', '2021-01-01 10:00:00'); INSERT INTO crimes (id, city, crime_type, timestamp) VALUES (2, 'Houston', 'Burglary', '2021-01-02 15:30:00');", "output": "SELECT city, crime_type, COUNT(*) as count, RANK() OVER(PARTITION BY city ORDER BY count DESC) as rank FROM (SELECT city, crime_type, COUNT(*) as count FROM crimes GROUP BY city, crime_type) sub;"}
{"input": " \ubd84\uae30\ubcc4\ub85c \uc2e4\uc2dc\ub41c \ucd1d \uc548\uc804 \ud14c\uc2a4\ud2b8 \ud69f\uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE safety_tests (id INT, test_date DATE); INSERT INTO safety_tests (id, test_date) VALUES (1, '2022-01-15'), (2, '2022-02-12'), (3, '2022-03-17'), (4, '2022-04-05'), (5, '2022-05-03'), (6, '2022-06-10'), (7, '2022-07-01'), (8, '2022-08-14'), (9, '2022-09-28'), (10, '2022-10-06'), (11, '2022-11-19'), (12, '2022-12-25');", "output": "SELECT EXTRACT(QUARTER FROM test_date) as quarter, COUNT(*) as tests_per_quarter FROM safety_tests GROUP BY quarter;"}
{"input": " \ub300\ub959\ubcc4\ub85c \uad6c\ubd84\ub41c \uac01 \uad6d\uac00\uc758 CO2 \ubc30\ucd9c\ub7c9 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CO2EmissionsContinent (id INT, country VARCHAR(20), continent VARCHAR(20), emission INT); INSERT INTO CO2EmissionsContinent (id, country, continent, emission) VALUES (1, 'USA', 'North America', 5000), (2, 'China', 'Asia', 4000), (3, 'India', 'Asia', 3000);", "output": "SELECT country, continent, ROW_NUMBER() OVER (PARTITION BY continent ORDER BY emission DESC) AS rank FROM CO2EmissionsContinent;"}
{"input": " \ud638\uc8fc\uc5d0\uc11c \ucc9c\uc5f0 \uc131\ubd84\uc774 \ud568\uc720\ub41c \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc5d0 \ub300\ud55c \ucd1d \uc9c0\ucd9c\uc561 \uae30\uc900 \uc0c1\uc704 5\uc704 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, customer_name TEXT, country TEXT); INSERT INTO customers (customer_id, customer_name, country) VALUES (1, 'Sarah Mitchell', 'AU'), (2, 'David Young', 'US'), (3, 'Emily Johnson', 'AU'), (4, 'Michael Brown', 'UK'), (5, 'Grace Lee', 'AU'); CREATE TABLE sales (sale_id INT, customer_id INT, product_id INT, sale_quantity INT); INSERT INTO sales (sale_id, customer_id, product_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); CREATE TABLE products (product_id INT, product_name TEXT, category TEXT, has_natural_ingredients BOOLEAN); INSERT INTO products (product_id, product_name, category, has_natural_ingredients) VALUES (1, 'Gentle Cleanser', 'skincare', true), (2, 'Age Defying Moisturizer', 'skincare', false), (3, 'Hydrating Serum', 'skincare', true), (4, 'Mattifying Powder', 'makeup', false), (5, 'Nourishing Lip Balm', 'makeup', true);", "output": "SELECT c.customer_name, SUM(s.sale_quantity) as total_spent_on_natural_skincare FROM sales s JOIN customers c ON s.customer_id = c.customer_id JOIN products p ON s.product_id = p.product_id WHERE c.country = 'AU' AND p.category = 'skincare' AND p.has_natural_ingredients = true GROUP BY c.customer_name ORDER BY total_spent_on_natural_skincare DESC LIMIT 5;"}
{"input": " \uc7a5\uc560\uc778 \uc2b9\uac1d\uc744 \uc704\ud55c \uc811\uadfc\uc131 \uae30\ub2a5\uc744 \uac16\ucd98 \ub7f0\ub358\uacfc \ub3c4\ucfc4\uc758 \ubaa8\ub4e0 \ubc84\uc2a4 \ubc0f \uae30\ucc28 \ub178\uc120\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE london_routes (route_id INT, route_name VARCHAR(50), is_accessible BOOLEAN); INSERT INTO london_routes (route_id, route_name, is_accessible) VALUES (1, 'Victoria Line', true), (2, 'Central Line', false), (3, 'Northern Line', true); CREATE TABLE tokyo_routes (route_id INT, route_name VARCHAR(50), is_accessible BOOLEAN); INSERT INTO tokyo_routes (route_id, route_name, is_accessible) VALUES (4, 'Yamanote Line', true), (5, 'Chuo Line', false), (6, 'Tokaido Line', true);", "output": "SELECT route_name FROM london_routes WHERE is_accessible = true UNION SELECT route_name FROM tokyo_routes WHERE is_accessible = true;"}
{"input": " \ud5c8\uac00\uac00 \uc804\ud600 \ubc1c\uae09\ub418\uc9c0 \uc54a\uc740 \uac74\ubb3c\uc744 \ud3ec\ud568\ud558\uc5ec 2018\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \ub274\uc695\uc2dc\uc5d0\uc11c \uace0\uce35 \uc8fc\uac70\uc6a9 \uac74\ubb3c\uc5d0 \ub300\ud574 \ubc1c\uae09\ub41c \uac74\ucd95 \ud5c8\uac00 \uac74\uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Building_Permits (permit_id INT, building_type VARCHAR(50), location VARCHAR(50), year_issued INT); INSERT INTO Building_Permits (permit_id, building_type, location, year_issued) VALUES (1, 'High-rise residential', 'New York City', 2018); INSERT INTO Building_Permits (permit_id, building_type, location, year_issued) VALUES (2, 'Single-family home', 'New York City', 2019);", "output": "SELECT COUNT(*) FROM (SELECT 1 FROM Building_Permits WHERE building_type = 'High-rise residential' AND location = 'New York City' AND year_issued BETWEEN 2018 AND 2020 GROUP BY year_issued) AS Subquery;"}
{"input": " '2022-04-01 06:00:00' \uc774\uc804\uc5d0 sensor_id 13\uc5d0 \ub300\ud55c IoT \uc13c\uc11c \uce21\uc815\ud56d\ubaa9 \uc0ad\uc81c", "context": "CREATE TABLE iot_sensor_metrics (sensor_id INT, value INT, timestamp TIMESTAMP); INSERT INTO iot_sensor_metrics (sensor_id, value, timestamp) VALUES (13, 900, '2022-04-01 05:00:00'), (13, 950, '2022-04-01 07:00:00');", "output": "WITH data_to_delete AS (DELETE FROM iot_sensor_metrics WHERE sensor_id = 13 AND timestamp < '2022-04-01 06:00:00' RETURNING *) SELECT * FROM data_to_delete;"}
{"input": " \uc0dd\uc0b0\uc728\uc774 \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \uc6b0\ubb3c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE wells (well_id INT, well_type VARCHAR(10), location VARCHAR(20), production_rate FLOAT); INSERT INTO wells (well_id, well_type, location, production_rate) VALUES (1, 'offshore', 'Gulf of Mexico', 1000), (2, 'onshore', 'Texas', 800), (3, 'offshore', 'North Sea', 1200), (4, 'onshore', 'Alberta', 900);", "output": "SELECT * FROM (SELECT well_id, well_type, location, production_rate, ROW_NUMBER() OVER (ORDER BY production_rate DESC) rn FROM wells) t WHERE rn = 2;"}
{"input": " 2021 \uc2dc\uc98c\uc5d0 \uac00\uc7a5 \ub9ce\uc740 3\uc810 \ud544\ub4dc\uace8\uc744 \ub123\uc740 \uc120\uc218\uc640 \ucd1d 3\uc810 \ud544\ub4dc\uace8\uc744 \uae30\ub85d\ud55c \uc120\uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE nba_players (player_id INT, player_name VARCHAR(255)); INSERT INTO nba_players (player_id, player_name) VALUES (1, 'Player1'), (2, 'Player2'), (3, 'Player3'), (4, 'Player4'); CREATE TABLE nba_3_point_field_goals (game_id INT, player_id INT, three_point_field_goals INT);", "output": "SELECT player_name, SUM(three_point_field_goals) AS total_three_point_field_goals FROM nba_3_point_field_goals JOIN nba_players ON nba_3_point_field_goals.player_id = nba_players.player_id WHERE game_id >= (SELECT MIN(game_id) FROM nba_games WHERE game_date >= '2021-01-01' AND game_date < '2022-01-01') GROUP BY player_name ORDER BY total_three_point_field_goals DESC LIMIT 3;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\uc131 \ub4f1\uae09\uc774 80 \ubbf8\ub9cc\uc778 \uacf5\uae09\uc5c5\uccb4\uc758 \uc81c\ud488\uc744 \ud310\ub9e4\ud558\ub294 \ub9e4\uc7a5\uc758 \uc774\ub984\uacfc \ub3c4\uc2dc\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stores (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(50)); INSERT INTO stores (id, name, city, state) VALUES (1, 'Sustainable Fashion', 'New York', 'NY'), (2, 'Eco Outfitters', 'Los Angeles', 'CA'); CREATE TABLE products (id INT, name VARCHAR(50), price DECIMAL(5,2), store_id INT, supplier_id INT); INSERT INTO products (id, name, price, store_id, supplier_id) VALUES (1, 'Eco Jeans', 39.99, 1, 1), (2, 'Green Shoes', 25.99, 1, 2), (3, 'Fair Trade Shirt', 19.99, 2, 3); CREATE TABLE suppliers (id INT, name VARCHAR(50), country VARCHAR(50), sustainability_rating INT); INSERT INTO suppliers (id, name, country, sustainability_rating) VALUES (1, 'Green Cotton Inc.', 'India', 75), (2, 'Eco Rubber Co.', 'Malaysia', 90), (3, 'Fair Trade Fabrics', 'Bangladesh', 70);", "output": "SELECT s.name, s.city FROM stores s JOIN products p ON s.id = p.store_id JOIN suppliers sup ON p.supplier_id = sup.id WHERE sup.sustainability_rating < 80;"}
{"input": " \uac01 \uace0\uac1d\uc758 \uac70\ub798 \uae08\uc561\uc758 7\uc77c \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (customer_id INT, transaction_date DATE, amount DECIMAL(10,2)); INSERT INTO transactions (customer_id, transaction_date, amount) VALUES (1, '2022-01-01', 100), (1, '2022-01-02', 200), (1, '2022-01-03', 150), (1, '2022-01-04', 50), (2, '2022-01-01', 50), (2, '2022-01-03', 200), (2, '2022-01-05', 100), (3, '2022-01-02', 300), (3, '2022-01-04', 250);", "output": "SELECT customer_id, transaction_date, AVG(amount) OVER (PARTITION BY customer_id ORDER BY transaction_date ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS moving_avg FROM transactions ORDER BY customer_id, transaction_date;"}
{"input": " '\uc720\uae30\ub18d \ucc44\uc18c' \ub808\uc2a4\ud1a0\ub791\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (restaurant_name TEXT, revenue FLOAT); INSERT INTO Restaurants (restaurant_name, revenue) VALUES ('Urban Plate', 45000.0), ('Organic Greens', 38000.0), ('Fiesta Mex', 52000.0);", "output": "SELECT revenue FROM Restaurants WHERE restaurant_name = 'Organic Greens';"}
{"input": " \uac01 \ud2b8\ub799\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TrackRevenue (TrackID INT, Revenue DECIMAL(10,2)); INSERT INTO TrackRevenue (TrackID, Revenue) VALUES (1, 1.25), (2, 1.50), (3, 0.99), (4, 2.00);", "output": "SELECT TrackID, Revenue, ROW_NUMBER() OVER (ORDER BY Revenue DESC) AS 'Revenue Rank' FROM TrackRevenue;"}
{"input": " \uc608\uc0b0\ubcc4 \ud3c9\uc810 \uc0c1\uc704 5\uac1c \uc601\ud654\ub294?", "context": "CREATE TABLE MovieRatings (MovieID INT, Title VARCHAR(100), Budget DECIMAL(10,2), Rating DECIMAL(3,2));", "output": "SELECT Title, Budget, Rating FROM (SELECT Title, Budget, Rating, ROW_NUMBER() OVER (ORDER BY Rating DESC, Budget DESC) as rn FROM MovieRatings) t WHERE rn <= 5;"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed \ub3c4\uc2dc\ubcc4 \ud6c4\ubd88 \ubc0f \uc120\ubd88 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscriber_data (subscriber_id INT, subscriber_type VARCHAR(10), city VARCHAR(20), region VARCHAR(20)); INSERT INTO subscriber_data (subscriber_id, subscriber_type, city, region) VALUES (1, 'postpaid', 'LA', 'West'), (2, 'prepaid', 'San Diego', 'West'), (3, 'postpaid', 'Seattle', 'West'), (4, 'prepaid', 'Portland', 'West'), (5, 'postpaid', 'San Francisco', 'West');", "output": "SELECT city, COUNT(*) as total_subscribers FROM subscriber_data WHERE region = 'West' GROUP BY city;"}
{"input": " \ubbf8\uad6d \uc8fc\uc2dd\uacfc \ud574\uc678 \uc8fc\uc2dd\uc5d0 \ubaa8\ub450 \ud22c\uc790\ud55c \uace0\uac1d\uc758 \ucd1d \uc790\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, total_assets DECIMAL(10,2)); CREATE TABLE investments (client_id INT, investment_type VARCHAR(20)); INSERT INTO clients VALUES (1,50000),(2,80000),(3,60000),(4,90000); INSERT INTO investments VALUES (1,'US Equities'),(1,'International Equities'),(2,'US Equities'),(3,'Bonds'),(4,'International Equities');", "output": "SELECT SUM(clients.total_assets) FROM clients INNER JOIN investments investments_1 ON clients.client_id = investments_1.client_id INNER JOIN investments investments_2 ON clients.client_id = investments_2.client_id WHERE investments_1.investment_type = 'US Equities' AND investments_2.investment_type = 'International Equities';"}
{"input": " '\uc911\ub3d9' \uc9c0\uc5ed\uc5d0 AI\ub97c \ud65c\uc6a9\ud55c \ud638\ud154\uc740 \uc5bc\ub9c8\ub098 \ub420\uae4c?", "context": "CREATE TABLE hotel_ai (hotel_id INT, hotel_name TEXT, region TEXT, ai_adoption BOOLEAN); INSERT INTO hotel_ai (hotel_id, hotel_name, region, ai_adoption) VALUES (1, 'Burj Al Arab', 'Middle East', true), (2, 'Kingdom Centre Hotel', 'Middle East', true), (3, 'The Abu Dhabi Grand', 'Middle East', false), (4, 'Four Seasons Doha', 'Middle East', true);", "output": "SELECT region, COUNT(*) FROM hotel_ai WHERE region = 'Middle East' AND ai_adoption = true GROUP BY region;"}
{"input": "\uac01 \ubd80\uc11c\uc758 \uad00\ub9ac\uc790\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \uac01 \ubd80\uc11c\uc758 \ucd1d \uae09\uc5ec \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, Department varchar(50), Manager varchar(50), Salary decimal(10,2)); INSERT INTO Employees (EmployeeID, Department, Manager, Salary) VALUES (1, 'Engineering', 'John Doe', 80000.00), (2, 'Marketing', 'Jane Smith', 70000.00), (3, 'Sales', 'Bob Johnson', 75000.00);", "output": "SELECT e.Manager, e.Department, SUM(e.Salary) as SalaryExpense FROM Employees e GROUP BY e.Manager, e.Department;"}
{"input": "\ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ud654\ud559 \ucf54\ub4dc \ud45c\uc2dc", "context": "CREATE TABLE chemical_production (production_date DATE, chemical_code VARCHAR(10), quantity INT); INSERT INTO chemical_production (production_date, chemical_code, quantity) VALUES ('2021-01-03', 'A123', 450), ('2021-01-07', 'A123', 620), ('2021-01-12', 'A123', 390), ('2021-02-15', 'B456', 550), ('2021-02-19', 'B456', 700), ('2021-03-05', 'C789', 800), ('2021-03-10', 'C789', 900), ('2021-03-15', 'C789', 850);", "output": "SELECT chemical_code, AVG(quantity) AS avg_quantity FROM chemical_production GROUP BY chemical_code ORDER BY avg_quantity DESC LIMIT 1;"}
{"input": " 2020\ub144 \uce5c\ud658\uacbd \ud638\ud154\uc744 \ubc29\ubb38\ud55c \uc0c1\uc704 5\uac1c\uad6d \ubc29\ubb38\uac1d\uc758 \ucd1d \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_code CHAR(3), country_name VARCHAR(100));CREATE TABLE hotels (hotel_id INT, hotel_name VARCHAR(100), is_eco_friendly BOOLEAN);CREATE TABLE bookings (booking_id INT, guest_id INT, hotel_id INT, country_code CHAR(3), booking_date DATE);INSERT INTO countries (country_code, country_name) VALUES ('USA', 'United States'), ('CAN', 'Canada'), ('AUS', 'Australia'), ('DEU', 'Germany'), ('GBR', 'United Kingdom');", "output": "SELECT SUM(1) FROM (SELECT DISTINCT booking_id FROM bookings b JOIN hotels h ON b.hotel_id = h.hotel_id JOIN countries c ON b.country_code = c.country_code WHERE h.is_eco_friendly = TRUE AND b.booking_date BETWEEN '2020-01-01' AND '2020-12-31' LIMIT 5) subquery;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uae30\uc0c1 \uc774\ubcc0\uc774 \ubc1c\uc0dd\ud55c \uc77c\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE extreme_weather_data (region VARCHAR(255), year INT, days_with_extreme_weather INT);", "output": "SELECT region, SUM(days_with_extreme_weather) OVER (PARTITION BY region)  FROM extreme_weather_data WHERE year BETWEEN 2018 AND 2022;"}
{"input": " ROE\uac00 15%\ub97c \ub118\ub294 \uc720\ub7fd\uc758 \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c \uae30\uad00\uc758 \ucd1d \uc790\uc0b0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE socially_responsible_lending (id INT, institution_name VARCHAR(255), country VARCHAR(255), assets FLOAT, ROE FLOAT); INSERT INTO socially_responsible_lending (id, institution_name, country, assets, ROE) VALUES (1, 'Green Lending', 'Germany', 2000000.0, 0.18), (2, 'Sustainable Finance', 'France', 3000000.0, 0.16), (3, 'Eco Lending', 'UK', 1500000.0, 0.20);", "output": "SELECT SUM(assets) FROM socially_responsible_lending WHERE country = 'Europe' AND ROE > 0.15;"}
{"input": " '\ud504\ub85c\ub355\ud2b8G' \uc81c\ud488\ubcf4\ub2e4 \uc18c\ube44\uc790 \uc120\ud638\ub3c4 \uc810\uc218\uac00 \ub192\uc740 \ud654\uc7a5\ud488 \uc774\ub984\uc740?", "context": "CREATE TABLE cosmetics (product_name TEXT, consumer_preference_score INTEGER); INSERT INTO cosmetics (product_name, consumer_preference_score) VALUES ('ProductA', 85), ('ProductB', 90), ('ProductC', 70), ('ProductD', 95), ('ProductE', 80), ('ProductF', 75), ('ProductG', 82);", "output": "SELECT product_name FROM cosmetics WHERE consumer_preference_score > (SELECT consumer_preference_score FROM cosmetics WHERE product_name = 'ProductG');"}
{"input": " 2022\ud68c\uacc4\uc5f0\ub3c4 \uad70\uc0ac\uae30\uc220 R&D \ubc0f \uc0ac\uc774\ubc84\ubcf4\uc548\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (fiscal_year INT, category VARCHAR(30), amount INT); INSERT INTO Budget (fiscal_year, category, amount) VALUES (2022, 'Military Technology R&D', 1000000), (2022, 'Cybersecurity', 750000), (2023, 'Military Technology R&D', 1250000), (2023, 'Cybersecurity', 850000);", "output": "SELECT SUM(amount) FROM Budget WHERE fiscal_year = 2022 AND (category = 'Military Technology R&D' OR category = 'Cybersecurity');"}
{"input": " \uc11c\uc6b8\uc758 \uac01 \uad6c\ub97c \uc6b4\ud589\ud558\ub294 \ub300\uc911\uad50\ud1b5 \ub178\uc120\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE seoul_routes(route_number text, district text);", "output": "SELECT district, COUNT(DISTINCT route_number) FROM seoul_routes GROUP BY district;"}
{"input": " \uc778\ub3c4 \uc544\ud2f0\uc2a4\ud2b8\uac00 \ubc1c\ud45c\ud55c \ub178\ub798\uc758 \ud3c9\uade0 \uae38\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Country VARCHAR(50)); INSERT INTO Artists (ArtistID, ArtistName, Country) VALUES (1, 'A.R. Rahman', 'India'), (2, 'Green Day', 'USA'); CREATE TABLE Songs (SongID INT, SongName VARCHAR(100), ArtistID INT, Length FLOAT); INSERT INTO Songs (SongID, SongName, ArtistID, Length) VALUES (1, 'Jai Ho', 1, 3.4), (2, 'American Idiot', 2, 4.7);", "output": "SELECT AVG(Length) AS AvgLength FROM Songs WHERE ArtistID IN (SELECT ArtistID FROM Artists WHERE Country = 'India');"}
{"input": " \ud504\ub85c\uc81d\ud2b8, \ud300 \uad6c\uc131\uc6d0, \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc0ac\uc6a9\ub41c \uac01 \ud654\ud559\ubb3c\uc9c8\uacfc \uad00\ub828\ub41c \uc548\uc804 \ud504\ub85c\ud1a0\ucf5c \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE projects (id INT PRIMARY KEY, name VARCHAR(255), start_date DATE, end_date DATE); CREATE TABLE project_team_members (id INT PRIMARY KEY, project_id INT, employee_id INT, role VARCHAR(255), FOREIGN KEY (project_id) REFERENCES projects(id), FOREIGN KEY (employee_id) REFERENCES employees(id)); CREATE TABLE project_chemicals (id INT PRIMARY KEY, project_id INT, chemical_name VARCHAR(255), FOREIGN KEY (project_id) REFERENCES projects(id), FOREIGN KEY (chemical_name) REFERENCES chemical_inventory(chemical_name)); CREATE TABLE safety_protocols (id INT PRIMARY KEY, chemical_name VARCHAR(255), protocol VARCHAR(255), FOREIGN KEY (chemical_name) REFERENCES chemical_inventory(chemical_name));", "output": "SELECT projects.name, employees.name AS team_member, COUNT(safety_protocols.id) AS safety_protocols_count FROM projects INNER JOIN project_team_members ON projects.id = project_team_members.project_id INNER JOIN employees ON project_team_members.employee_id = employees.id INNER JOIN project_chemicals ON projects.id = project_chemicals.project_id INNER JOIN chemical_inventory ON project_chemicals.chemical_name = chemical_inventory.chemical_name INNER JOIN safety_protocols ON chemical_inventory.chemical_name = safety_protocols.chemical_name GROUP BY projects.id, employees.id;"}
{"input": " 2021\ub144\uacfc 2022\ub144\uc5d0 \ub85d \ubc0f \ud31d \uc7a5\ub974\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE Revenue (Date DATE, Genre VARCHAR(10), Revenue DECIMAL(10, 2)); INSERT INTO Revenue VALUES ('2021-01-01', 'Rock', 1500), ('2021-02-01', 'Pop', 2000), ('2022-01-01', 'Rock', 1800), ('2022-02-01', 'Pop', 2200);", "output": "(SELECT Genre, SUM(Revenue) FROM Revenue WHERE Date >= '2021-01-01' AND Date <= '2022-12-31' AND Genre = 'Rock' GROUP BY Genre) UNION (SELECT Genre, SUM(Revenue) FROM Revenue WHERE Date >= '2021-01-01' AND Date <= '2022-12-31' AND Genre = 'Pop' GROUP BY Genre);"}
{"input": " \uc791\ub144\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubb38\ud654\uc720\uc0b0\uc774 \ucd94\uac00\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE HeritageSites (SiteID int, SiteName varchar(100), AddedDate date); INSERT INTO HeritageSites (SiteID, SiteName, AddedDate) VALUES (1, 'Angkor Wat', '2022-01-01'), (2, 'Forbidden City', '2021-05-15'), (3, 'Taj Mahal', '2022-03-10');", "output": "SELECT COUNT(*) FROM (SELECT * FROM HeritageSites WHERE AddedDate >= DATEADD(YEAR, -1, GETDATE())) t;"}
{"input": " \uba55\uc2dc\ucf54, \ucf5c\ub86c\ube44\uc544, \uce60\ub808\uc5d0\uc11c \ubc1c\uae09\ub41c \uc218\uc0dd\uc591\uc2dd \uba74\ud5c8 \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE mexico_licenses (id INT, license_number INT);CREATE TABLE colombia_licenses (id INT, license_number INT);CREATE TABLE chile_licenses (id INT, license_number INT);INSERT INTO mexico_licenses (id, license_number) VALUES (1, 1001), (2, 1002);INSERT INTO colombia_licenses (id, license_number) VALUES (1, 2001), (2, 2002);INSERT INTO chile_licenses (id, license_number) VALUES (1, 3001), (2, 3002);", "output": "SELECT COUNT(*) FROM mexico_licenses UNION SELECT COUNT(*) FROM colombia_licenses UNION SELECT COUNT(*) FROM chile_licenses"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \uad11\ub300\uc5ed \uc11c\ube44\uc2a4\uc5d0 \uac00\uc785\ud55c \ubaa8\ubc14\uc77c \uace0\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE broadband_subscriptions (customer_id INT, subscription BOOLEAN); INSERT INTO broadband_subscriptions (customer_id, subscription) VALUES (1, TRUE), (2, FALSE), (3, TRUE); CREATE TABLE city_customers (customer_id INT, city VARCHAR(50)); INSERT INTO city_customers (customer_id, city) VALUES (1, 'Seattle'), (2, 'Bellevue'), (3, 'Seattle');", "output": "SELECT mc.city, (COUNT(CASE WHEN bs.subscription = TRUE THEN 1 END) * 100.0 / COUNT(bs.customer_id)) AS percentage FROM city_customers cc JOIN broadband_subscriptions bs ON cc.customer_id = bs.customer_id JOIN mobile_customers mc ON cc.customer_id = mc.customer_id GROUP BY mc.city;"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74\uc758 \uad11\uc5c5 \uc0b0\uc5c5\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ud3d0\uae30\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_waste (id INT, operation_id INT, waste_amount FLOAT); INSERT INTO mining_waste (id, operation_id, waste_amount) VALUES (1, 1, 500), (2, 1, 700), (3, 2, 300);", "output": "SELECT SUM(waste_amount) FROM mining_waste;"}
{"input": " \uc99d\uc5b8\ud55c \uc0ac\uac74 \uc218\ub97c \uc778\uc885\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \uac01 \uc99d\uc778\uc758 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE public.witnesses (id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, ethnicity VARCHAR(255), testimony_date DATE); CREATE TABLE public.cases (id SERIAL PRIMARY KEY, witness_id INT, case_number VARCHAR(255), case_date DATE, case_type VARCHAR(255), court_location VARCHAR(255)); CREATE TABLE public.verdicts (id SERIAL PRIMARY KEY, case_number VARCHAR(255), verdict_date DATE, verdict_type VARCHAR(255)); CREATE TABLE public.appeals (id SERIAL PRIMARY KEY, case_number VARCHAR(255), appeal_date DATE, appeal_outcome VARCHAR(255));", "output": "SELECT w.ethnicity, w.name, rank() over (partition by w.ethnicity order by count(c.id) desc) as rank FROM public.witnesses w JOIN public.cases c ON w.id = c.witness_id GROUP BY w.ethnicity, w.name;"}
{"input": " \ud574\uc591 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\uc640 \uac01 \ud504\ub85c\uc81d\ud2b8\uc758 \uc8fc\uc694 \uc870\uc0ac\uc790\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ResearchProjects (ProjectName VARCHAR(50), PrincipalInvestigator VARCHAR(50)); INSERT INTO ResearchProjects (ProjectName, PrincipalInvestigator) VALUES ('Project1', 'John Doe');", "output": "SELECT ProjectName, PrincipalInvestigator, COUNT(*) OVER () AS 'Total Projects' FROM ResearchProjects;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac01 \uae30\uad00\uc5d0\uc11c \uc0dd\uc131\ub41c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \ubcf4\uace0\uc11c \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence_reports (report_id INT, report_date DATE, threat_category VARCHAR(255), generating_agency VARCHAR(255));", "output": "SELECT generating_agency, COUNT(*) as report_count FROM threat_intelligence_reports WHERE report_date >= DATEADD(day, -30, CURRENT_DATE) GROUP BY generating_agency;"}
{"input": " \uad6d\uac00\ubcc4\ub85c \ubc1c\uc0ac\ub41c \uc6b0\uc8fc\uc120\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE spacecraft (id INT, name VARCHAR(100), country VARCHAR(50), launch_date DATE); INSERT INTO spacecraft (id, name, country, launch_date) VALUES (1, 'Voyager 1', 'USA', '1977-09-05'); INSERT INTO spacecraft (id, name, country, launch_date) VALUES (2, 'Galileo', 'USA', '1989-10-18'); INSERT INTO spacecraft (id, name, country, launch_date) VALUES (3, 'Cassini', 'France', '1997-10-15'); INSERT INTO spacecraft (id, name, country, launch_date) VALUES (4, 'Mars Express', 'Europe', '2003-06-02');", "output": "SELECT country, COUNT(*) as total_launches FROM spacecraft GROUP BY country;"}
{"input": "\uc811\uadfc \uac00\ub2a5\ud55c \uad50\ud1b5\uc218\ub2e8\uacfc \uad00\ub828\ub41c \ubaa8\ub4e0 \uc815\ucc45 \uc639\ud638 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE policy_advocacy_transportation (id INT, title TEXT, transportation_type TEXT); INSERT INTO policy_advocacy_transportation (id, title, transportation_type) VALUES (1, 'Policy 1', 'Public Transportation'), (2, 'Policy 2', 'Para-transit'), (3, 'Policy 3', 'Rideshare'), (4, 'Policy 4', 'Bicycle');", "output": "SELECT title FROM policy_advocacy_transportation WHERE transportation_type IS NOT NULL;"}
{"input": " Precision_farming \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc791\ubb3c\uc758 \ud3c9\uade0 \ud1a0\uc591 \uc218\ubd84 \uc218\uc900\uc740 \uc791\ubb3c \uc720\ud615 \ubc0f \uc9c0\uc5ed\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE crops (id INT, type VARCHAR(255), region VARCHAR(255)); INSERT INTO crops (id, type, region) VALUES (1, 'corn', 'North'), (2, 'soybean', 'North'), (3, 'cotton', 'South'); CREATE TABLE soil_moisture (id INT, crop_id INT, level INT, timestamp TIMESTAMP); INSERT INTO soil_moisture (id, crop_id, level, timestamp) VALUES (1, 1, 60, '2022-01-01 00:00:00'), (2, 1, 65, '2022-01-02 00:00:00'), (3, 2, 55, '2022-01-01 00:00:00'), (4, 3, 70, '2022-01-01 00:00:00');", "output": "SELECT c.type, r.region, AVG(sm.level) FROM crops c INNER JOIN soil_moisture sm ON c.id = sm.crop_id INNER JOIN (SELECT region, id FROM crops GROUP BY region) r ON c.region = r.region GROUP BY c.type, r.region;"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd80\uc11c\uc758 \uc5ec\uc131, \ub0a8\uc131, \ub17c\ubc14\uc774\ub108\ub9ac \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeDemographics (EmployeeID int, Gender varchar(10), Department varchar(20)); INSERT INTO EmployeeDemographics (EmployeeID, Gender, Department) VALUES (1, 'Female', 'Engineering'), (2, 'Male', 'IT'), (3, 'Non-binary', 'Engineering');", "output": "SELECT Department, ROUND(COUNT(CASE WHEN Gender = 'Female' THEN 1 END) * 100.0 / COUNT(*), 1) AS FemalePercentage, ROUND(COUNT(CASE WHEN Gender = 'Male' THEN 1 END) * 100.0 / COUNT(*), 1) AS MalePercentage, ROUND(COUNT(CASE WHEN Gender = 'Non-binary' THEN 1 END) * 100.0 / COUNT(*), 1) AS NonBinaryPercentage FROM EmployeeDemographics GROUP BY Department;"}
{"input": " 2021\ub144\uc5d0 \ucf5c\ub85c\ub77c\ub3c4\uc5d0\uc11c \uc6d4\uac04 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Sustainable_Projects (project_id INT, project_start_date DATE, project_end_date DATE, state VARCHAR(20)); INSERT INTO Sustainable_Projects (project_id, project_start_date, project_end_date, state) VALUES (1, '2021-01-01', '2021-03-31', 'Colorado'), (2, '2021-02-01', '2021-04-15', 'Colorado'), (3, '2022-03-01', '2022-06-15', 'Colorado');", "output": "SELECT project_start_date, COUNT(*) OVER (PARTITION BY EXTRACT(MONTH FROM project_start_date)) AS projects_per_month FROM Sustainable_Projects WHERE state = 'Colorado' AND project_start_date >= '2021-01-01' AND project_start_date < '2022-01-01' ORDER BY project_start_date;"}
{"input": " \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc5d0 \ub300\ud574 \ud558\ub8e8\uc5d0 \uc9c0\uae09\ub418\ub294 \ub300\ucd9c \uae08\uc561\uc744 \uc8fc\ubcc4\ub85c \ub098\ub204\uc5b4 \ubcf4\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE socially_responsible_loans (customer_id INT, loan_amount DECIMAL(10, 2), disbursement_date DATE); INSERT INTO socially_responsible_loans VALUES (1, 5000, '2021-01-15'), (2, 7000, '2021-03-20'), (1, 3000, '2021-06-05'), (3, 8000, '2021-09-10');", "output": "SELECT date_trunc('week', disbursement_date) as week, SUM(loan_amount) OVER (PARTITION BY date_trunc('week', disbursement_date)) as total_loan_amount FROM socially_responsible_loans;"}
{"input": " \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0ac\ub8cc\ucca8\uac00\uc81c\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE feed_additives (id INT, name VARCHAR(255), manufacturer_id INT, usage_volume FLOAT); INSERT INTO feed_additives (id, name, manufacturer_id, usage_volume) VALUES (1, 'Aquaculture', 1, 3500.0), (2, 'Aquafeed Colorant', 2, 2800.0), (3, 'Aquafeed Preservative', 3, 4200.0), (4, 'Aquafeed Attractant', 1, 3000.0), (5, 'Aquafeed Binder', 2, 4500.0);", "output": "SELECT name, usage_volume FROM feed_additives WHERE usage_volume = (SELECT MAX(usage_volume) FROM feed_additives);"}
{"input": " \ubaa8\ub85c\ucf54\uc5d0 \uc788\ub294 \uce5c\ud658\uacbd \ud638\ud154\uc758 \ucd5c\uc18c \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE moroccan_hotels (hotel_id INT, hotel_name TEXT, rating FLOAT); INSERT INTO moroccan_hotels (hotel_id, hotel_name, rating) VALUES (1, 'Eco Hotel Marrakech', 4.6), (2, 'Green Riad Fez', 4.8);", "output": "SELECT MIN(rating) FROM moroccan_hotels;"}
{"input": " \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \uad50\uc721 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BudgetAllocation (Department VARCHAR(25), Location VARCHAR(25), Budget INT); INSERT INTO BudgetAllocation (Department, Location, Budget) VALUES ('Education', 'City A', 10000000), ('Health', 'City A', 8000000), ('Education', 'City B', 12000000);", "output": "SELECT SUM(Budget) FROM BudgetAllocation WHERE Department = 'Education' AND Location = 'City A';"}
{"input": " \uad11\uc0b0 \uc6b4\uc601\uacfc \uc0c1\ud638 \uc791\uc6a9\ud558\ub294 \uac01 \ubd80\uc11c\uc5d0\uc11c \uc18c\uc678\ub41c \uc131\ubcc4\uc758 \uc9c1\uc6d0\uc774 \uba87 \uba85\uc774\ub098 \uadfc\ubb34\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(255), LastName VARCHAR(255), Position VARCHAR(255), Department VARCHAR(255), Gender VARCHAR(255), Country VARCHAR(255));", "output": "SELECT Department, COUNT(*) as Total FROM Employees WHERE Gender IN ('Non-binary', 'Female') AND Department IN ('Mining Operations', 'Geology', 'Maintenance') GROUP BY Department;"}
{"input": " \ud658\uacbd \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (id INT, volunteer_name TEXT, program TEXT, participation_date DATE, hours FLOAT); INSERT INTO Volunteers (id, volunteer_name, program, participation_date, hours) VALUES (1, 'Olivia', 'Tree Planting', '2022-02-01', 5), (2, 'Mateo', 'Beach Cleanup', '2022-03-05', 7.5);", "output": "SELECT program, COUNT(*), SUM(hours) FROM Volunteers WHERE program LIKE '%Environment%' GROUP BY program;"}
{"input": " '\uc9c0\uc18d\uac00\ub2a5' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uc81c\ud488\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (id INT, name VARCHAR(50), category VARCHAR(20)); INSERT INTO products (id, name, category) VALUES (1, 'Product 1', 'sustainable'), (2, 'Product 2', 'non-sustainable');", "output": "SELECT COUNT(*) FROM products WHERE category = 'sustainable';"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c \ubbf8\uad6d\uc73c\ub85c \ubc30\uc1a1\ub41c 'WidgetA' \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, item VARCHAR(50), quantity INT, country VARCHAR(50)); INSERT INTO Warehouse (id, item, quantity, country) VALUES (1, 'WidgetA', 200, 'France'), (2, 'WidgetB', 300, 'USA');", "output": "SELECT SUM(quantity) FROM Warehouse WHERE item = 'WidgetA' AND country = 'France' AND EXISTS (SELECT 1 FROM Warehouse w2 WHERE w2.item = 'WidgetA' AND w2.country = 'USA');"}
{"input": " \uc9c0\ub09c 3\ub144 \ub3d9\uc548 1\ucc9c\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc758 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ubaa8\ub4e0 \ud68c\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE funding (id INT, company_name VARCHAR(30), funding_amount DECIMAL(10,2), funding_date DATE); INSERT INTO funding (id, company_name, funding_amount, funding_date) VALUES (1, 'CompanyA', 5000000.00, '2020-01-01'); INSERT INTO funding (id, company_name, funding_amount, funding_date) VALUES (2, 'CompanyB', 20000000.00, '2019-06-15');", "output": "SELECT company_name FROM funding WHERE funding_amount > 10000000 AND funding_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR);"}
{"input": " \uc5d0\ub108\uc9c0 \ubd80\ubb38\uc5d0\uc11c ESG \uc810\uc218\uac00 80\uc810 \uc774\uc0c1\uc778 \uae30\uc5c5\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, sector VARCHAR(20), ESG_score FLOAT); INSERT INTO companies (id, sector, ESG_score) VALUES (1, 'Energy', 85.2), (2, 'Energy', 76.3), (3, 'Energy', 88.1), (4, 'Healthcare', 69.9);", "output": "SELECT COUNT(*) FROM companies WHERE sector = 'Energy' AND ESG_score > 80;"}
{"input": " '\ud50c\ub7ab\ud3ec\uba38' \uc7a5\ub974\uc5d0\uc11c \uac01 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \uac8c\uc784 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE PlayerGames (PlayerID int, PlayerName varchar(50), Game varchar(50), Category varchar(50));", "output": "SELECT PlayerName, COUNT(DISTINCT Game) OVER(PARTITION BY PlayerID) as GamesCount FROM PlayerGames WHERE Category = 'Platformer';"}
{"input": " \uc0ac\ud68c\uc801\uc73c\ub85c \ucc45\uc784 \uc788\ub294 \ub300\ucd9c\ub9cc \ud55c \uc9c1\uc6d0\uc758 \uae09\uc5ec\ub97c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE transactions (id INT, employee_id INT, loan_id INT, transaction_type TEXT, amount INT); INSERT INTO transactions (id, employee_id, loan_id, transaction_type, amount) VALUES (1, 1, 1, 'Disbursement', 25000), (2, 1, NULL, 'Salary', 55000), (3, 2, 2, 'Disbursement', 30000), (4, 2, NULL, 'Salary', 45000), (5, 3, NULL, 'Salary', 60000), (6, 3, 3, 'Disbursement', 45000);", "output": "SELECT employees.salary FROM employees JOIN transactions ON employees.id = transactions.employee_id WHERE transactions.loan_id IS NOT NULL AND transactions.transaction_type = 'Disbursement' AND transactions.id NOT IN (SELECT loan_id FROM transactions WHERE transaction_type = 'Disbursement' AND is_shariah_compliant = TRUE);"}
{"input": " \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc758 \uc774\ub984\uacfc \ud0dc\ud3c9\uc591\uc758 \ud574\ub2f9 \uae4a\uc774\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE marine_protected_areas_pacific (area_name VARCHAR(255), depth FLOAT); INSERT INTO marine_protected_areas_pacific (area_name, depth) VALUES ('Great Barrier Reef', 10.0), ('Channel Islands National Park', 200.0), ('Monterey Bay National Marine Sanctuary', 400.0);", "output": "SELECT area_name, depth FROM marine_protected_areas_pacific;"}
{"input": " '\ud3ec\uc2a4\ud2b8 \uc778\uc0c1\uc8fc\uc758' \uc804\uc2dc\ud68c\uc758 \uc5b4\ub5a4 \uc791\ud488\uc774 \ud504\ub791\uc2a4 \uc608\uc220\uac00\ub4e4\uc758 \uc791\ud488\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (ArtistID int, Name varchar(50), Nationality varchar(50)); CREATE TABLE Artworks (ArtworkID int, ArtistID int, Title varchar(50)); CREATE TABLE Exhibits (ExhibitID int, Gallery varchar(50), ArtworkID int); CREATE TABLE ExhibitionTitles (ExhibitID int, Title varchar(50)); INSERT INTO Artists (ArtistID, Name, Nationality) VALUES (1, 'Pablo Picasso', 'Spanish'), (2, 'Claude Monet', 'French'), (3, 'Vincent Van Gogh', 'Dutch'); INSERT INTO Artworks (ArtworkID, ArtistID, Title) VALUES (101, 1, 'Guernica'), (102, 2, 'Water Lilies'), (103, 3, 'Starry Night'); INSERT INTO Exhibits (ExhibitID, Gallery, ArtworkID) VALUES (1, 'Impressionism', 102), (2, 'Post-Impressionism', 103), (3, 'Surrealism', 201); INSERT INTO ExhibitionTitles (ExhibitID, Title) VALUES (1, 'Impressionist Masterpieces'), (2, 'Post-Impressionism'), (3, 'Surrealist Dreams');", "output": "SELECT a.Title FROM Artists a INNER JOIN Artworks aw ON a.ArtistID = aw.ArtistID INNER JOIN Exhibits e ON aw.ArtworkID = e.ArtworkID INNER JOIN ExhibitionTitles et ON e.ExhibitID = et.ExhibitID WHERE et.Title = 'Post-Impressionism' AND a.Nationality = 'French';"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc6a9\ub7c9\uc758 \ud654\ubb3c\uc120\uc744 \ubcf4\uc720\ud55c \uc120\ub2e8\uc758 \uad00\ub9ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CargoShips(id INT, name VARCHAR(50), flag VARCHAR(50), capacity INT); CREATE TABLE Fleet(id INT, name VARCHAR(50), manager VARCHAR(50)); ALTER TABLE CargoShips ADD COLUMN fleet_id INT; UPDATE CargoShips SET fleet_id = 1 WHERE id = 1; INSERT INTO CargoShips VALUES (2, 'Ocean Giant', 'Marshall Islands', 200000); UPDATE CargoShips SET fleet_id = 2 WHERE id = 2; INSERT INTO Fleet VALUES (2, 'XYZ Shipping', 'Jane Smith');", "output": "SELECT Fleet.manager FROM Fleet INNER JOIN (SELECT fleet_id, MAX(capacity) as max_capacity FROM CargoShips GROUP BY fleet_id) AS max_capacities ON Fleet.id = max_capacities.fleet_id;"}
{"input": " \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc5d0\uc11c \uc704\ud5d8\uc5d0 \ucc98\ud55c \ud574\uc591 \uc0dd\ubb3c\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE marine_species (species_id INT, name VARCHAR(255), status VARCHAR(255));   CREATE TABLE area_species (area_id INT, species_id INT);   CREATE TABLE marine_protected_areas (area_id INT, name VARCHAR(255), depth FLOAT);", "output": "SELECT s.name AS species_name, mpa.name AS protected_area    FROM marine_species s    JOIN area_species a ON s.species_id = a.species_id    JOIN marine_protected_areas mpa ON a.area_id = mpa.area_id    WHERE s.status = 'At Risk';"}
{"input": " \ud574\ub2f9 \uc639\ud638 \uadf8\ub8f9\uacfc \ud568\uaed8 \ubaa8\ub4e0 \uc815\ucc45\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Policies (PolicyID INT, PolicyName VARCHAR(50)); INSERT INTO Policies (PolicyID, PolicyName) VALUES (1, 'Policy A'); INSERT INTO Policies (PolicyID, PolicyName) VALUES (2, 'Policy B'); CREATE TABLE AdvocacyGroups (AdvocacyGroupID INT, AdvocacyGroupName VARCHAR(50)); INSERT INTO AdvocacyGroups (AdvocacyGroupID, AdvocacyGroupName) VALUES (1, 'AG1'); INSERT INTO AdvocacyGroups (AdvocacyGroupID, AdvocacyGroupName) VALUES (2, 'AG2'); CREATE TABLE PolicyAdvocacy (PolicyID INT, AdvocacyGroupID INT); INSERT INTO PolicyAdvocacy (PolicyID, AdvocacyGroupID) VALUES (1, 1); INSERT INTO PolicyAdvocacy (PolicyID, AdvocacyGroupID) VALUES (2, 2);", "output": "SELECT p.PolicyName, ag.AdvocacyGroupName FROM Policies p INNER JOIN PolicyAdvocacy pa ON p.PolicyID = pa.PolicyID INNER JOIN AdvocacyGroups ag ON pa.AdvocacyGroupID = ag.AdvocacyGroupID;"}
{"input": " \ubc18\ubcf5 \uc704\ubc18\uc790\uac00 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uad50\ud1b5 \uc704\ubc18\uc744 \uc800\uc9c8\ub800\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE TrafficViolations (ID INT, Driver VARCHAR(255), Violation VARCHAR(50)); INSERT INTO TrafficViolations VALUES (1, 'John Doe', 'Speeding'), (2, 'Jane Smith', 'Reckless Driving'), (3, 'John Doe', 'Speeding');", "output": "SELECT COUNT(*) OVER (PARTITION BY Driver) AS ViolationCount, RANK() OVER (PARTITION BY NULL ORDER BY COUNT(*) DESC) AS OffenderRank FROM TrafficViolations GROUP BY Driver HAVING COUNT(*) > 1;"}
{"input": " \uc9c0\ub09c 3\ub144 \ub3d9\uc548 3\uba85 \uc774\uc0c1\uc758 \uc5f0\uc8fc\uc790\uac00 \uc788\uace0 \ud3c9\uade0 \ucc38\uc11d\uc790\uac00 50\uba85 \uc774\uc0c1\uc778 \uba55\uc2dc\ucf54\uc758 \uc804\ud1b5 \uc74c\uc545 \ud589\uc0ac\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MusicEvents (id INT, name VARCHAR(255), country VARCHAR(255), UNIQUE (id)); CREATE TABLE Performers (id INT, name VARCHAR(255), music_event_id INT, UNIQUE (id), FOREIGN KEY (music_event_id) REFERENCES MusicEvents(id)); CREATE TABLE Attendance (id INT, music_event_id INT, year INT, attendees INT, UNIQUE (id), FOREIGN KEY (music_event_id) REFERENCES MusicEvents(id));", "output": "SELECT me.name FROM MusicEvents me JOIN Performers p ON me.id = p.music_event_id JOIN Attendance a ON me.id = a.music_event_id WHERE me.country = 'Mexico' GROUP BY me.name HAVING COUNT(DISTINCT p.id) > 3 AND AVG(a.attendees) > 50 AND a.year BETWEEN 2020 AND 2022;"}
{"input": "\uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54 \uc2dc\uc758 \uacf5\uac1c \uc774\ubca4\ud2b8 \uc218\uc640 \uac01 \uc774\ubca4\ud2b8\uc758 \ucc38\uc11d\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE events (id INT, event_name VARCHAR(255), event_type VARCHAR(255), city_id INT);CREATE TABLE attendees (id INT, event_id INT, attendee_name VARCHAR(255));", "output": "SELECT e.event_name, COUNT(a.id) as num_attendees FROM events e INNER JOIN attendees a ON e.id = a.event_id WHERE e.city_id = (SELECT id FROM cities WHERE city_name = 'San Francisco') GROUP BY e.id;"}
{"input": " 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ud3c9\ud654\uc720\uc9c0 \uc791\uc804 \uc0ac\uc0c1\uc790\uac00 \uac10\uc18c\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PeacekeepingCasualties (Country VARCHAR(50), Year INT, Casualties INT); INSERT INTO PeacekeepingCasualties (Country, Year, Casualties) VALUES ('USA', 2020, 50), ('USA', 2021, 40), ('China', 2020, 30), ('China', 2021, 35), ('France', 2020, 20), ('France', 2021, 18);", "output": "SELECT Country FROM (SELECT Country, Year, Casualties, LAG(Casualties) OVER (PARTITION BY Country ORDER BY Year) AS PreviousYearCasualties FROM PeacekeepingCasualties) AS Subquery WHERE Subquery.Country = Subquery.Country AND Subquery.Casualties < Subquery.PreviousYearCasualties;"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30 \uc7ac\ubc29\ubb38 \uae30\ubd80\uc790\uc758 \ucd5c\ub300 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donations2022H1 (DonationID int, DonorType varchar(50), DonationAmount decimal(10,2), DonationDate date, ReturningDonor char(1)); INSERT INTO Donations2022H1 (DonationID, DonorType, DonationAmount, DonationDate, ReturningDonor) VALUES (1, 'Individual', 300, '2022-04-15', 'Y'); INSERT INTO Donations2022H1 (DonationID, DonorType, DonationAmount, DonationDate, ReturningDonor) VALUES (2, 'Corporation', 2000, '2022-01-10', 'Y');", "output": "SELECT MAX(DonationAmount) FROM Donations2022H1 WHERE DonorType = 'Individual' AND ReturningDonor = 'Y' AND DonationDate BETWEEN '2022-01-01' AND '2022-06-30';"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac01 \uae30\uad00\uc5d0\uc11c \uc2e4\uc2dc\ud55c \uc2ec\ud574\ud0d0\uc0ac \ud69f\uc218\ub97c \ud0d0\uc0ac \uc5f0\ub3c4\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE deep_sea_expeditions (expedition_id INT, organization VARCHAR(255), year INT); INSERT INTO deep_sea_expeditions (expedition_id, organization, year) VALUES (1, 'NOAA', 2018), (2, 'WHOI', 2019), (3, 'NASA', 2020), (4, 'NOAA', 2021), (5, 'WHOI', 2021);", "output": "SELECT year, organization, COUNT(*) as expeditions_in_last_5_years FROM deep_sea_expeditions WHERE year >= 2017 GROUP BY year, organization;"}
{"input": " 'CountryX'\uc758 \uae30\ubd80\uc790\ub4e4\uc774 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud589\uc0ac\uc5d0 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE Donors (donor_id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE Donations (donation_id INT, donor_id INT, event_id INT); CREATE TABLE Events (event_id INT, name VARCHAR(255), date DATE);", "output": "SELECT COUNT(*) FROM Donors D JOIN Donations DN ON D.donor_id = DN.donor_id JOIN Events E ON DN.event_id = E.event_id WHERE D.country = 'CountryX';"}
{"input": " 2021\ub144 25~34\uc138 \uc18c\ube44\uc790\uac00 \uac00\uc7a5 \ub9ce\uc774 \uad6c\ub9e4\ud55c \uc0c1\uc704 3\uac1c \uc81c\ud488\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE purchases (product_name VARCHAR(255), customer_age INT, purchase_date DATE); INSERT INTO purchases (product_name, customer_age, purchase_date) VALUES ('Cleanser', 27, '2021-02-01'), ('Mascara', 32, '2021-01-01'), ('Conditioner', 25, '2021-12-25'), ('Lipstick', 34, '2021-06-10'), ('Serum', 27, '2021-11-11');", "output": "SELECT product_name, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank FROM purchases WHERE customer_age BETWEEN 25 AND 34 AND purchase_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY product_name HAVING rank <= 3;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc6e8\uc5b4\ub7ec\ube14 \uae30\uc220 \uae30\uae30\ub97c \uc0ac\uc6a9\ud55c \ub274\uc695 \uc9c0\uc5ed \ud68c\uc6d0\uc73c\ub85c\ubd80\ud130 \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Members (MemberID INT, Region VARCHAR(20), MembershipDate DATE); INSERT INTO Members (MemberID, Region, MembershipDate) VALUES (1, 'New York', '2021-01-01'); CREATE TABLE WearableTech (DeviceID INT, MemberID INT, UsageDate DATE); INSERT INTO WearableTech (DeviceID, MemberID, UsageDate) VALUES (10, 1, '2021-05-15'); CREATE TABLE Transactions (TransactionID INT, MemberID INT, Amount DECIMAL(5,2)); INSERT INTO Transactions (TransactionID, MemberID, Amount) VALUES (100, 1, 50.00);", "output": "SELECT SUM(Transactions.Amount) FROM Members INNER JOIN WearableTech ON Members.MemberID = WearableTech.MemberID INNER JOIN Transactions ON Members.MemberID = Transactions.MemberID WHERE Members.Region = 'New York' AND Transactions.TransactionDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND CURRENT_DATE;"}
{"input": " \ud654\ubb3c \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uac01 \ud56d\uad6c\uc758 \ucd1d \ud654\ubb3c \ucc98\ub9ac \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE cargo_types (cargo_type_id INT, cargo_type VARCHAR(50)); CREATE TABLE cargo_handling (id INT, port_id INT, cargo_type_id INT, weight FLOAT, handling_cost FLOAT);", "output": "SELECT p.port_name, ct.cargo_type, SUM(ch.handling_cost) as total_cost FROM cargo_handling ch JOIN ports p ON ch.port_id = p.port_id JOIN cargo_types ct ON ch.cargo_type_id = ct.cargo_type_id GROUP BY p.port_name, ct.cargo_type;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \ud574\uc591 \ud574\uad6c \uc0c1\uc704 3\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Atlantic_plate (trench_name TEXT, location TEXT, avg_depth FLOAT); INSERT INTO Atlantic_plate (trench_name, location, avg_depth) VALUES ('Puerto Rico Trench', 'Puerto Rico', 27400.0), ('South Sandwich Trench', 'South Sandwich Islands', 24400.0), ('Cayman Trough', 'Cayman Islands', 7686.0);", "output": "SELECT trench_name, avg_depth FROM (SELECT trench_name, avg_depth, ROW_NUMBER() OVER (ORDER BY avg_depth DESC) as rn FROM Atlantic_plate) tmp WHERE rn <= 3;"}
{"input": " \uac01 \uac8c\uc784 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ud574\ub2f9 \uce74\ud14c\uace0\ub9ac\uc758 \ud3c9\uade0 \uc810\uc218\ubcf4\ub2e4 \ub192\uc740 \uc810\uc218\ub97c \ubc1b\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CategoryScores (PlayerID int, PlayerName varchar(50), Game varchar(50), Category varchar(50), Score int); INSERT INTO CategoryScores (PlayerID, PlayerName, Game, Category, Score) VALUES (1, 'Player1', 'Game1', 'Action', 1000), (2, 'Player2', 'Game2', 'RPG', 1200), (3, 'Player3', 'Game3', 'Strategy', 1400), (4, 'Player4', 'Game1', 'Action', 800);", "output": "SELECT Category, COUNT(*) as NumPlayers, AVG(Score) OVER (PARTITION BY Category) as AvgScore, COUNT(*) FILTER (WHERE Score > AVG(Score) OVER (PARTITION BY Category)) * 100.0 / COUNT(*) as Percentage FROM CategoryScores GROUP BY Category;"}
{"input": " 2020\ub144\uacfc 2021\ub144\uc5d0 \uc2dc\uc560\ud2c0 \uc2dc\uc5d0\uc11c \uc8fc\uac70\uc6a9 \uac74\ubb3c\uc5d0 \ub300\ud574 \ubc1c\uae09\ub41c \uac74\ucd95 \ud5c8\uac00\uc758 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE building_permits (permit_id INT, building_type VARCHAR(50), city VARCHAR(50), issue_date DATE); INSERT INTO building_permits (permit_id, building_type, city, issue_date) VALUES (1, 'Residential', 'Seattle', '2020-01-01'); INSERT INTO building_permits (permit_id, building_type, city, issue_date) VALUES (2, 'Residential', 'Seattle', '2020-02-01');", "output": "SELECT SUM(total) FROM (SELECT COUNT(*) AS total FROM building_permits WHERE building_type = 'Residential' AND city = 'Seattle' AND issue_date BETWEEN '2020-01-01' AND '2020-12-31' UNION ALL SELECT COUNT(*) AS total FROM building_permits WHERE building_type = 'Residential' AND city = 'Seattle' AND issue_date BETWEEN '2021-01-01' AND '2021-12-31') AS subquery;"}
{"input": " \ud55c\uad6d\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ub9e4\ucd9c\uc744 \uc62c\ub9b0 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uba54\uc774\ud06c\uc5c5 \uc81c\ud488 2\uac1c\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cosmetics_sales(product_id INT, country VARCHAR(255), product_type VARCHAR(255), sales_quantity INT, sales_revenue DECIMAL(10,2)); CREATE TABLE product_details(product_id INT, is_cruelty_free BOOLEAN); CREATE TABLE cosmetics_products(product_id INT, product_name VARCHAR(255), product_type VARCHAR(255));", "output": "SELECT cp.product_name, SUM(cs.sales_revenue) AS total_revenue FROM cosmetics_sales cs JOIN cosmetics_products cp ON cs.product_id = cp.product_id JOIN product_details pd ON cs.product_id = pd.product_id WHERE cs.country = 'South Korea' AND pd.is_cruelty_free = TRUE AND cs.product_type = 'makeup' GROUP BY cp.product_id, cp.product_name ORDER BY total_revenue DESC LIMIT 2;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc811\uc18d \ud69f\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc120\uc218 \uc6f0\ube59 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AthleteWellbeing (id INT, name VARCHAR(255), region VARCHAR(255), access_count INT); INSERT INTO AthleteWellbeing (id, name, region, access_count) VALUES (1, 'Yoga', 'Pacific', 40), (2, 'Meditation', 'Pacific', 60), (3, 'Nutrition', 'Atlantic', 30), (4, 'Yoga', 'Atlantic', 50), (5, 'Meditation', 'Atlantic', 80); CREATE TABLE FanDemographics (id INT, name VARCHAR(255), gender VARCHAR(50), region VARCHAR(50)); INSERT INTO FanDemographics (id, name, gender, region) VALUES (1, 'FanA', 'Female', 'Pacific'), (2, 'FanB', 'Male', 'Pacific'), (3, 'FanC', 'Female', 'Atlantic');", "output": "SELECT region, name, access_count FROM (SELECT region, name, access_count, DENSE_RANK() OVER (PARTITION BY region ORDER BY access_count DESC) as rank FROM AthleteWellbeing) subquery WHERE rank = 1;"}
{"input": " \ub3c4\ucfc4\uc640 \uc11c\uc6b8\uc758 \ubc15\ubb3c\uad00\uc744 \ubc29\ubb38\ud55c \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Museums (city VARCHAR(20), name VARCHAR(30), visitors INT); INSERT INTO Museums (city, name, visitors) VALUES ('Tokyo', 'Tokyo National Museum', 2000000), ('Tokyo', 'Edo-Tokyo Museum', 1500000), ('Seoul', 'National Museum of Korea', 3000000), ('Seoul', 'Gyeongbokgung Palace', 2500000);", "output": "SELECT city, SUM(visitors) FROM Museums GROUP BY city;"}
{"input": " \uc778\uad6c\uac00 5\ucc9c\ub9cc \uba85\uc774 \ub118\uace0 \ud558\ub098 \uc774\uc0c1\uc758 \uae30\ud6c4 \ubcc0\ud654 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uac00 \uc788\ub294 \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uad6d\uac00\uc758 \ud3c9\uade0 \ucde8\uc57d\uc131 \uc9c0\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), start_date DATE, end_date DATE, budget DECIMAL(10,2)); CREATE TABLE mitigation_activities (id INT PRIMARY KEY, project_id INT, activity VARCHAR(255), cost DECIMAL(10,2)); CREATE TABLE countries (id INT PRIMARY KEY, country VARCHAR(255), population INT); CREATE TABLE vulnerability_index (id INT PRIMARY KEY, country VARCHAR(255), index DECIMAL(10,2));", "output": "SELECT AVG(vulnerability_index.index) as avg_vulnerability_index FROM projects JOIN countries ON projects.country = countries.country JOIN vulnerability_index ON projects.country = vulnerability_index.country WHERE countries.region = 'Asia-Pacific' AND countries.population > 50000000 AND EXISTS (SELECT 1 FROM mitigation_activities WHERE projects.id = mitigation_activities.project_id AND mitigation_activities.activity = 'Climate Change Adaptation');"}
{"input": " \ubcf4\uc548 \ub4f1\uae09\uc774 '\uc77c\uae09\ube44\ubc00' \uc774\uc0c1\uc778 \uc815\ubcf4\uc694\uc6d0\uc758 \uc774\ub984\uacfc \uc9c1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Officers (id INT, name VARCHAR(50), rank VARCHAR(20), department VARCHAR(20)); INSERT INTO Officers (id, name, rank, department) VALUES (1, 'John Doe', 'Captain', 'Intelligence'), (2, 'Jane Smith', 'Lieutenant', 'Intelligence'), (3, 'Alice Johnson', 'Colonel', 'Military'), (4, 'Bob Brown', 'Petty Officer', 'Navy'); CREATE TABLE ClearanceLevels (id INT, level VARCHAR(20)); INSERT INTO ClearanceLevels (id, level) VALUES (1, 'Secret'), (2, 'Top Secret'), (3, 'Confidential'); CREATE TABLE OfficerClearances (officer_id INT, clearance_id INT); INSERT INTO OfficerClearances (officer_id, clearance_id) VALUES (1, 2), (2, 2), (3, 1), (4, 1);", "output": "SELECT o.name, o.rank FROM Officers o INNER JOIN OfficerClearances oc ON o.id = oc.officer_id INNER JOIN ClearanceLevels cl ON oc.clearance_id = cl.id WHERE cl.level IN ('Top Secret', 'Secret Plus');"}
{"input": " \uc11c\uc6b8\uc9c0\ud558\ucca0 \ub178\uc120\ubcc4 \ucd5c\uc800\uc694\uae08\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE seoul_subway (route_id INT, fare DECIMAL(5,2)); INSERT INTO seoul_subway (route_id, fare) VALUES (1, 1.30), (2, 1.50), (3, 1.70), (4, 2.10);", "output": "SELECT route_id, MIN(fare) as min_fare FROM seoul_subway GROUP BY route_id;"}
{"input": " \uac01 \uc81c\uc870 \ud604\uc7a5\uc758 3\uac1c\uc6d4\uac04 \uc0dd\uc0b0\ub7c9 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production (site_id INT, production_date DATE, quantity INT);", "output": "SELECT site_id, AVG(quantity) OVER (PARTITION BY site_id ORDER BY production_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as moving_avg FROM production;"}
{"input": " \ub178\ub3d9\uc870\ud569\ubcc4 \ub178\ub3d9\uad8c \uc639\ud638 \ud589\uc0ac \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE labor_rights_advocacy (id INT, union_id INT, event_date DATE, event_type VARCHAR); INSERT INTO labor_rights_advocacy (id, union_id, event_date, event_type) VALUES (7, 3, '2021-04-10', 'Protest'); INSERT INTO labor_rights_advocacy (id, union_id, event_date, event_type) VALUES (8, 4, '2020-12-12', 'Strike');", "output": "SELECT union_id, COUNT(*) OVER (PARTITION BY union_id) as events_per_union FROM labor_rights_advocacy;"}
{"input": " \uc0c8\ub85c\uc6b4 \uce21\uc815\uac12\uc73c\ub85c \uc2a4\ubc1c\ubc14\ub974\uc758 \uc628\ub3c4 \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE arctic_regions (region_id INT, region_name VARCHAR(50)); CREATE TABLE weather (weather_id INT, region_id INT, measurement_date DATE, temperature DECIMAL(5,2)); INSERT INTO arctic_regions (region_id, region_name) VALUES (1, 'Alaska'), (2, 'Greenland'), (3, 'Svalbard'); INSERT INTO weather (weather_id, region_id, measurement_date, temperature) VALUES (1, 1, '2017-01-01', -10.5), (2, 1, '2017-12-31', 15.2), (3, 2, '2017-01-01', -25.6), (4, 2, '2017-12-31', -5.2), (5, 3, '2017-01-01', -12.2);", "output": "UPDATE weather SET temperature = -3.0 WHERE region_id = (SELECT region_id FROM arctic_regions WHERE region_name = 'Svalbard') AND measurement_date = '2017-01-01'; UPDATE weather SET temperature = -4.2 WHERE region_id = (SELECT region_id FROM arctic_regions WHERE region_name = 'Svalbard') AND measurement_date = '2017-12-31';"}
{"input": " \uc11c\ube44\uc2a4 \uc720\ud615 \ubc0f \uc704\uce58\ubcc4\ub85c \uc81c\uacf5\ub418\ub294 \ucd1d \ubc95\ub960 \uc9c0\uc6d0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE legal_aid_hours (hour_id INT, hour_type VARCHAR(255), location VARCHAR(255), hours DECIMAL(10,2)); INSERT INTO legal_aid_hours (hour_id, hour_type, location, hours) VALUES (1, 'Consultation', 'California', 5.5), (2, 'Representation', 'New York', 8.0);", "output": "SELECT hour_type, location, SUM(hours) as total_hours FROM legal_aid_hours GROUP BY hour_type, location;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program_volunteers (id INT, program_id INT, volunteer_id INT, signup_date DATE); INSERT INTO program_volunteers (id, program_id, volunteer_id, signup_date) VALUES (1, 1, 1, '2021-01-01'), (2, 2, 2, '2021-01-01'), (3, 1, 3, '2021-02-01'); CREATE TABLE program_donations (id INT, program_id INT, donor_id INT, donation_date DATE, amount FLOAT); INSERT INTO program_donations (id, program_id, donor_id, donation_date, amount) VALUES (1, 1, 1, '2021-01-01', 500.00), (2, 2, 2, '2021-02-01', 300.00), (3, 1, 4, '2022-03-01', 600.00); CREATE TABLE programs (id INT, program_name TEXT); INSERT INTO programs (id, program_name) VALUES (1, 'Education'), (2, 'Health');", "output": "SELECT p.program_name, COUNT(DISTINCT program_volunteers.volunteer_id) AS total_volunteers, SUM(program_donations.amount) AS total_donations FROM programs LEFT JOIN program_volunteers ON programs.id = program_volunteers.program_id LEFT JOIN program_donations ON programs.id = program_donations.program_id GROUP BY p.program_name;"}
{"input": " \uc190\ub2d8 \ud3c9\uac00\uac00 4.5 \uc774\uc0c1\uc778 \ub85c\ub9c8\uc758 \uac01 \uc608\uc220\uac00 \uc791\ud488\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud558\uace0 \ube44\uc728\uc774 \ub192\uc740 \uc21c\uc11c\ub300\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (id INT, name VARCHAR(30)); CREATE TABLE Works (id INT, artist_id INT, title VARCHAR(50)); CREATE TABLE Exhibitions (id INT, work_id INT, city VARCHAR(20), guest_rating FLOAT, revenue FLOAT); INSERT INTO Exhibitions (id, work_id, city, guest_rating, revenue) VALUES (1, 1, 'Rome', 4.6, 5000), (2, 2, 'Rome', 4.3, 6000), (3, 3, 'Rome', 4.5, 7000);", "output": "SELECT a.name, COUNT(e.work_id) as total_works, COUNT(CASE WHEN e.guest_rating >= 4.5 THEN e.work_id END) as high_rating_works, 100.0 * COUNT(CASE WHEN e.guest_rating >= 4.5 THEN e.work_id END) / COUNT(e.work_id) as percentage, RANK() OVER (PARTITION BY a.name ORDER BY 100.0 * COUNT(CASE WHEN e.guest_rating >= 4.5 THEN e.work_id END) / COUNT(e.work_id) DESC) as rank FROM Artists a JOIN Works w ON a.id = w.artist_id JOIN Exhibitions e ON w.id = e.work_id WHERE e.city = 'Rome' GROUP BY a.name, rank ORDER BY percentage DESC;"}
{"input": " \uc8fc\ubcc4\ub85c \uac00\uc7a5 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc7a5\uc560 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8 \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE StateDisabilityBudget (StateName VARCHAR(50), ProgramName VARCHAR(50), Budget NUMERIC(18,2)); INSERT INTO StateDisabilityBudget VALUES ('California', 'Disability Support Program 1', 500000.00), ('California', 'Disability Support Program 2', 750000.00), ('California', 'Disability Support Program 3', 900000.00), ('New York', 'Disability Support Program 1', 600000.00), ('New York', 'Disability Support Program 2', 800000.00), ('New York', 'Disability Support Program 3', 1000000.00);", "output": "SELECT StateName, ProgramName, Budget, ROW_NUMBER() OVER (PARTITION BY StateName ORDER BY Budget DESC) as Rank FROM StateDisabilityBudget WHERE Rank <= 3;"}
{"input": " '\ubbf8\uc220\uac10\uc0c1' \ud504\ub85c\uadf8\ub7a8\uacfc '\uc74c\uc545\uacfc \ucda4' \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uad00\ub78c\uac1d \uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE ArtAppreciation(id INT, age INT, gender VARCHAR(10), visit_date DATE); CREATE TABLE MusicAndDance(id INT, age INT, gender VARCHAR(10), visit_date DATE);", "output": "SELECT COUNT(*) FROM ArtAppreciation UNION SELECT COUNT(*) FROM MusicAndDance;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c 3\uac00\uc9c0 \uc774\uc0c1\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\ud589\uc744 \uc2dc\ud589\ud558\uace0 \uc5ec\ud589 \uacbd\uace0\ub97c \ubc1c\ub839\ud55c \ubaa9\uc801\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_practices (destination_id INT, practice_id INT, year INT, implemented BOOLEAN); CREATE VIEW sustainable_destinations AS SELECT destination_id, COUNT(*) as num_practices FROM sustainable_practices WHERE implemented = TRUE GROUP BY destination_id; CREATE TABLE travel_warnings (destination_id INT, warning_level VARCHAR(10), warning_text TEXT, start_date DATE, end_date DATE); CREATE VIEW current_travel_warnings AS SELECT destination_id FROM travel_warnings WHERE CURRENT_DATE BETWEEN start_date AND end_date;", "output": "SELECT d.country FROM destinations d JOIN sustainable_destinations s ON d.id = s.destination_id JOIN current_travel_warnings ctw ON d.id = ctw.destination_id WHERE d.region = 'Africa' AND s.num_practices > 3;"}
{"input": " \ubbf8\uad6d \ub0b4 \ud310\ub9e4 \uae30\uc900\uc73c\ub85c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc0c1\uc704 3\uac1c \ube0c\ub79c\ub4dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Brands (BrandID INT, BrandName VARCHAR(100), SustainabilityScore INT, TotalSales DECIMAL(10,2)); INSERT INTO Brands (BrandID, BrandName, SustainabilityScore, TotalSales) VALUES (1, 'Brand X', 85, 50000), (2, 'Brand Y', 92, 65000), (3, 'Brand Z', 78, 42000);", "output": "SELECT BrandName, SustainabilityScore, TotalSales FROM (SELECT BrandName, SustainabilityScore, TotalSales, ROW_NUMBER() OVER (ORDER BY TotalSales DESC) as rn FROM Brands WHERE Country = 'US') t WHERE rn <= 3;"}
{"input": " '\uc911\uc11c\ubd80' \uc9c0\uc5ed\uc5d0\uc11c 100\ub2ec\ub7ec \uc774\uc0c1 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (id INT, name TEXT, region TEXT, donation FLOAT); INSERT INTO Donors (id, name, region, donation) VALUES (1, 'Carol', 'Mid West', 120.5), (2, 'Dave', 'South East', 75.2);", "output": "SELECT COUNT(*) FROM Donors WHERE region = 'Mid West' AND donation > 100;"}
{"input": " \ubd84\uae30\ubcc4 \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \ucd1d \ub178\ub3d9 \uc2dc\uac04\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE project (project_id INT, quarter VARCHAR(10), labor_hours INT); INSERT INTO project VALUES (1, 'Q1', 500); INSERT INTO project VALUES (2, 'Q1', 600);", "output": "SELECT quarter, COUNT(*) as projects_count, SUM(labor_hours) as total_labor_hours FROM project GROUP BY quarter;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc \uc804\ud1b5 \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\uc18c \ub178\ub3d9 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, state VARCHAR(20), type VARCHAR(20), hours INT); INSERT INTO project (id, state, type, hours) VALUES (1, 'Texas', 'Sustainable', 400), (2, 'Texas', 'Traditional', 300), (3, 'Seattle', 'Sustainable', 500), (4, 'California', 'Traditional', 200);", "output": "SELECT MIN(hours) FROM project WHERE state = 'California' AND type = 'Traditional';"}
{"input": " '\uc5d0\ucf54' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \ud3c9\uac00\ub97c \ubc1b\uc740 \uc81c\ud488\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE products (product_id INT, name TEXT, rating FLOAT, category TEXT); INSERT INTO products (product_id, name, rating, category) VALUES (1, 'Shirt', 4.5, 'Eco'); INSERT INTO products (product_id, name, rating, category) VALUES (2, 'Pants', 4.7, 'Eco'); INSERT INTO products (product_id, name, rating, category) VALUES (3, 'Jacket', 4.3, 'Eco');", "output": "SELECT name, rating FROM (SELECT name, rating, ROW_NUMBER() OVER (ORDER BY rating DESC) rn FROM products WHERE category = 'Eco') t WHERE rn = 2;"}
{"input": " 2019\ub144\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ud3d0\uae30\ubb3c\uc744 \ubc30\ucd9c\ud55c \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation (city VARCHAR(20), year INT, total_waste_gen FLOAT); INSERT INTO waste_generation (city, year, total_waste_gen) VALUES ('Seattle', 2019, 240000), ('Portland', 2019, 260000), ('San Francisco', 2019, 270000);", "output": "SELECT city, MAX(total_waste_gen) FROM waste_generation GROUP BY year HAVING year = 2019;"}
{"input": " \ud0dc\ud3c9\uc591\uc5d0\uc11c \uace0\ub798\ub97c \ubaa9\uaca9\ud55c \ud69f\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE whale_sightings (species TEXT, location TEXT, date DATE); INSERT INTO whale_sightings (species, location, date) VALUES ('Blue Whale', 'Pacific Ocean', '2020-01-01'), ('Humpback Whale', 'Atlantic Ocean', '2019-12-31');", "output": "SELECT COUNT(*) FROM whale_sightings WHERE location = 'Pacific Ocean';"}
{"input": " \uad6c\ud638\uae30\uad00 \uc885\ub958\ubcc4 \ucd5c\ub300 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774 \uae08\uc561\uc744 \uc9c0\uc6d0\ud55c \uae30\uad00\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Aid_Agencies (id INT, name TEXT, type TEXT, headquarters TEXT); INSERT INTO Aid_Agencies (id, name, type, headquarters) VALUES (4, 'AgencyG', 'Local', 'CityG'); INSERT INTO Aid_Agencies (id, name, type, headquarters) VALUES (5, 'AgencyH', 'International', 'CityH'); INSERT INTO Aid_Agencies (id, name, type, headquarters) VALUES (6, 'AgencyI', 'Local', 'CityI'); CREATE TABLE Donations (id INT, agency_id INT, donation_amount INT); INSERT INTO Donations (id, agency_id, donation_amount) VALUES (4, 4, 28000); INSERT INTO Donations (id, agency_id, donation_amount) VALUES (5, 4, 30000); INSERT INTO Donations (id, agency_id, donation_amount) VALUES (6, 6, 25000);", "output": "SELECT agency_id, donation_amount FROM (SELECT agency_id, donation_amount, DENSE_RANK() OVER (PARTITION BY agency_id ORDER BY donation_amount DESC) AS rank FROM Donations) AS donation_ranks WHERE rank = 1;"}
{"input": " 2020\ub144\uc5d0 '\ub0a8\uadf9\ub300\ub959'\uacfc '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c \ubc1c\uacac\ub41c \ud574\uc591\uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Species_2 (id INT, name VARCHAR(255), region VARCHAR(255), year INT); INSERT INTO Species_2 (id, name, region, year) VALUES (1, 'Penguin', 'Antarctica', 2020); INSERT INTO Species_2 (id, name, region, year) VALUES (2, 'Shark', 'Africa', 2020); INSERT INTO Species_2 (id, name, region, year) VALUES (3, 'Whale', 'Africa', 2020);", "output": "SELECT name FROM Species_2 WHERE region = 'Antarctica' UNION SELECT name FROM Species_2 WHERE region = 'Africa';"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \uc6d0\uaca9\uc758\ub8cc \uc5ed\ub7c9\uc744 \uac16\ucd98 \ub18d\ucd0c \ubcd1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (hospital_id INT, hospital_name VARCHAR, rural_county VARCHAR, state VARCHAR, has_telemedicine BOOLEAN); INSERT INTO hospitals (hospital_id, hospital_name, rural_county, state, has_telemedicine) VALUES (1, 'Rural Hospital A', 'County X', 'New York', true); INSERT INTO hospitals (hospital_id, hospital_name, rural_county, state, has_telemedicine) VALUES (2, 'Rural Hospital B', 'County Y', 'Pennsylvania', false); CREATE TABLE regions (region_id INT, region_name VARCHAR, state VARCHAR); INSERT INTO regions (region_id, region_name, state) VALUES (1, 'Northeast', 'New York'); INSERT INTO regions (region_id, region_name, state) VALUES (2, 'Midwest', 'Pennsylvania');", "output": "SELECT regions.region_name, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM hospitals JOIN regions ON hospitals.state = regions.state) AS percentage FROM hospitals JOIN regions ON hospitals.state = regions.state WHERE hospitals.has_telemedicine = true GROUP BY regions.region_name;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc740 \uc548\uc804 \uc810\uac80\uc744 \ubc1b\uc740 \uc704\uce58\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE safety_inspections_new3 (id INT PRIMARY KEY, location VARCHAR(50), inspection_date DATE, passed BOOLEAN);", "output": "SELECT location, COUNT(*) as num_inspections FROM safety_inspections_new3 WHERE inspection_date > CURDATE() - INTERVAL 60 DAY GROUP BY location ORDER BY num_inspections DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \uac01 \uc0ac\uc6a9\uc790\uc758 \uba64\ubc84\uc2ed \uc5c5\uadf8\ub808\uc774\ub4dc\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Memberships (ID INT PRIMARY KEY, UserID INT, MembershipType VARCHAR(50), StartDate DATE, EndDate DATE, Revenue DECIMAL(10,2));   CREATE TABLE Upgrades (ID INT PRIMARY KEY, UserID INT, UpgradeDate DATE, UpgradeRevenue DECIMAL(10,2));", "output": "SELECT Users.Name, SUM(Upgrades.UpgradeRevenue) AS TotalUpgradeRevenue FROM Users JOIN Memberships ON Users.ID = Memberships.UserID JOIN Upgrades ON Users.ID = Upgrades.UserID WHERE Upgrades.UpgradeDate >= DATEADD(year, -1, GETDATE()) GROUP BY Users.Name;"}
{"input": " \uc77c\ubcf8\uc774\ub098 \ub7ec\uc2dc\uc544 \uc81c\uc870\uc5c5\uccb4\uc758 \uc6b0\uc8fc \uc784\ubb34\uc5d0 \ucc38\uc5ec\ud558\uace0 \uc6b0\uc8fc\uc0dd\ubb3c\ud559 \uc2e4\ud5d8\uc744 \uc218\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (Name TEXT, Age INT, Gender TEXT, Nationality TEXT); INSERT INTO Astronauts (Name, Age, Gender, Nationality) VALUES ('Yuri Ivanov', 50, 'Male', 'Russian'); CREATE TABLE Spacecraft (Name TEXT, Manufacturer TEXT, LaunchDate DATE); INSERT INTO Spacecraft (Name, Manufacturer, LaunchDate) VALUES ('Soyuz-2.1b', 'Roscosmos', '2022-03-18'); CREATE TABLE Mission_Astronauts (Astronaut TEXT, Spacecraft TEXT); INSERT INTO Mission_Astronauts (Astronaut, Spacecraft) VALUES ('Yuri Ivanov', 'Soyuz-2.1b'); CREATE TABLE Research_Data (Astronaut TEXT, Experiment TEXT, Result TEXT); INSERT INTO Research_Data (Astronaut, Experiment, Result) VALUES ('Yuri Ivanov', 'Astrobiology', 'Positive');", "output": "SELECT Astronaut FROM Mission_Astronauts WHERE Manufacturer IN ('JAXA', 'Roscosmos') INTERSECT SELECT Astronaut FROM Research_Data WHERE Experiment = 'Astrobiology';"}
{"input": " 2021\ub144\uc5d0 \uae30\ub85d\ub41c \ucd5c\uace0 \uae30\uc628\uacfc \ucd5c\uc800 \uae30\uc628\uc744 \uae30\ub85d\ud55c \uad00\uce21\uc18c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE arctic_stations (id INT, station_name TEXT, temperature DECIMAL(5,2), measurement_date DATE); INSERT INTO arctic_stations (id, station_name, temperature, measurement_date) VALUES (1, 'Station1', 15.2, '2021-01-01'); INSERT INTO arctic_stations (id, station_name, temperature, measurement_date) VALUES (2, 'Station2', -12.5, '2021-01-01');", "output": "SELECT station_name, MAX(temperature) FROM arctic_stations WHERE measurement_date BETWEEN '2021-01-01' AND '2021-12-31' UNION SELECT station_name, MIN(temperature) FROM arctic_stations WHERE measurement_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"input": " 2022\ub144 '\uc54c\uc790\uc9c0\ub77c'\uac00 \ud558\ub8e8\uc5d0 \uac8c\uc2dc\ud558\ub294 \ucd5c\ub300 \uae30\uc0ac \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title TEXT, publication TEXT, published_at DATE); INSERT INTO articles (id, title, publication, published_at) VALUES (1, 'Article 1', 'Al Jazeera', '2022-01-01'); INSERT INTO articles (id, title, publication, published_at) VALUES (2, 'Article 2', 'Al Jazeera', '2022-01-02'); INSERT INTO articles (id, title, publication, published_at) VALUES (3, 'Article 3', 'Al Jazeera', '2022-01-02');", "output": "SELECT MAX(cnt) FROM (SELECT published_at, COUNT(*) as cnt FROM articles WHERE publication = 'Al Jazeera' AND YEAR(published_at) = 2022 GROUP BY published_at) as t;"}
{"input": " \uc2ec\uac01\ud558\uac8c \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud55c \uc2ec\ud574 \uc0dd\ubb3c\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE deep_sea_species (id INTEGER, name TEXT, status TEXT); INSERT INTO deep_sea_species (id, name, status) VALUES (1, 'Deep-sea anglerfish', 'Critically Endangered'), (2, 'Frilled shark', 'Endangered'), (3, 'Goblin shark', 'Near Threatened');", "output": "SELECT COUNT(*) FROM deep_sea_species WHERE status = 'Critically Endangered';"}
{"input": " \ud55c\uad6d\uacfc \uce60\ub808\uc758 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE avg_energy_storage (country VARCHAR(20), capacity INT); INSERT INTO avg_energy_storage (country, capacity) VALUES ('South Korea', 65), ('South Korea', 70), ('South Korea', 75), ('Chile', 80), ('Chile', 85), ('Chile', 90);", "output": "SELECT AVG(capacity) FROM avg_energy_storage WHERE country IN ('South Korea', 'Chile');"}
{"input": " \uc601\uc5b4 \uc774\uc678\uc758 \uc5b8\uc5b4\ub97c \uad6c\uc0ac\ud558\ub294 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Languages (language_id INT, language_name TEXT);CREATE TABLE CommunityHealthWorkers (worker_id INT, worker_language INT);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM CommunityHealthWorkers) as pct_other_lang FROM CommunityHealthWorkers cwh JOIN Languages l ON cwh.worker_language = l.language_id WHERE l.language_name != 'English';"}
{"input": "2022\ub144 2\uc6d4 \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4 \ub9e4\ucd9c \ucd5c\uc800\uc77c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE menu_sales_6 (menu_category VARCHAR(255), sale_date DATE, revenue INT); INSERT INTO menu_sales_6 (menu_category, sale_date, revenue) VALUES ('Appetizers', '2022-02-23', 1200), ('Appetizers', '2022-02-24', 1500), ('Entrees', '2022-02-23', 3000), ('Entrees', '2022-02-24', 3500);", "output": "SELECT menu_category, MIN(revenue) FROM menu_sales_6 WHERE sale_date BETWEEN '2022-02-01' AND '2022-02-28' GROUP BY menu_category;"}
{"input": " \uc791\ub144 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub85c \uc778\ud55c \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Concerts (ConcertID INT, ConcertName VARCHAR(100), Country VARCHAR(50), Year INT, Revenue INT); INSERT INTO Concerts VALUES (1, 'Concert1', 'France', 2020, 10000); INSERT INTO Concerts VALUES (2, 'Concert2', 'Germany', 2021, 15000); INSERT INTO Concerts VALUES (3, 'Concert3', 'Spain', 2019, 12000);", "output": "SELECT AVG(Revenue) FROM Concerts WHERE Year = 2021;"}
{"input": " 1920\ub144\uc5d0\uc11c 1930\ub144 \uc0ac\uc774\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 '\ucd08\ud604\uc2e4\uc8fc\uc758' \uc791\ud488\uc774 \ucc3d\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, creation_year INT, style VARCHAR(20), price DECIMAL(10,2)); INSERT INTO Artworks (artwork_id, creation_year, style, price) VALUES (1, 1910, 'Impressionist', 1200.00), (2, 1925, 'Surrealist', 2500.00), (3, 1915, 'Impressionist', 1800.00), (4, 1928, 'Surrealist', 2200.00), (5, 1905, 'Impressionist', 1500.00);", "output": "SELECT COUNT(*) FROM Artworks WHERE style = 'Surrealist' AND creation_year BETWEEN 1920 AND 1930;"}
{"input": " \uc5ec\uc131 \uc791\uac00\uac00 \uae30\uc220 \ubc0f \uacfc\ud559\uc5d0 \uad00\ud55c \uae30\uc0ac\ub97c \uc4f4 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(50), category VARCHAR(20), author_id INT); INSERT INTO articles (id, title, category, author_id) VALUES (1, 'Oil Prices Rising', 'technology', 1), (2, 'Government Corruption', 'science', 2), (3, 'Baseball Game', 'sports', 3), (4, 'Climate Change', 'technology', 3); CREATE TABLE authors (id INT, name VARCHAR(50), gender VARCHAR(10)); INSERT INTO authors (id, name, gender) VALUES (1, 'Anna Smith', 'female'), (2, 'John Doe', 'male'), (3, 'Alice Johnson', 'female'), (4, 'Bob Brown', 'male');", "output": "SELECT (COUNT(articles.id) * 100.0 / (SELECT COUNT(*) FROM articles)) AS percentage FROM articles INNER JOIN authors ON articles.author_id = authors.id WHERE articles.category IN ('technology', 'science') AND authors.gender = 'female';"}
{"input": " \uc18c\ub9e4 \ubd80\ubb38\uacfc \uace0\uc704\ud5d8 \ubd80\ubb38 \ubaa8\ub450\uc5d0 \uacc4\uc88c\ub97c \ubcf4\uc720\ud55c \uace0\uac1d\uc758 \ucd1d \uc790\uc0b0 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Retail (customer_id INT, account_balance DECIMAL(10,2)); INSERT INTO Retail (customer_id, account_balance) VALUES (1, 5000.00), (2, 7000.00), (3, 9000.00); CREATE TABLE High_Risk (customer_id INT, account_balance DECIMAL(10,2)); INSERT INTO High_Risk (customer_id, account_balance) VALUES (1, 6000.00), (2, 8000.00), (4, 10000.00);", "output": "SELECT r.customer_id, SUM(r.account_balance + hr.account_balance) AS total_value FROM Retail r INNER JOIN High_Risk hr ON r.customer_id = hr.customer_id WHERE r.customer_id IN (SELECT customer_id FROM High_Risk);"}
{"input": "\ubcf4\ud5d8 \uc720\ud615 \ubc0f \ubcf4\uc7a5 \uc218\uc900\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ud14d\uc0ac\uc2a4 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0 \ub300\ud55c \ucd1d \uccad\uad6c \uae08\uc561\uacfc \ud568\uaed8 \ubaa8\ub4e0 \ubcf4\ud5d8\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policies (id INT, policy_type VARCHAR(20), coverage_level INT, price FLOAT); INSERT INTO policies (id, policy_type, coverage_level, price) VALUES (1, 'Comprehensive', 3, 1200.00), (2, 'Third-Party', 2, 800.00), (3, 'Third-Party', 3, 1000.00); CREATE TABLE policyholders (id INT, age INT, gender VARCHAR(10), policy_type VARCHAR(20), premium FLOAT, state VARCHAR(20)); INSERT INTO policyholders (id, age, gender, policy_type, premium, state) VALUES (1, 32, 'Female', 'Comprehensive', 1200.00, 'Texas'), (2, 41, 'Male', 'Third-Party', 800.00, 'California'); CREATE TABLE claims (id INT, policyholder_id INT, claim_amount FLOAT, claim_date DATE); INSERT INTO claims (id, policyholder_id, claim_amount, claim_date) VALUES (4, 3, 2000.00, '2021-01-01'), (5, 2, 1500.00, '2021-02-01');", "output": "SELECT policy_type, coverage_level, SUM(claim_amount) FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id JOIN policies ON policyholders.policy_type = policies.policy_type WHERE policyholders.state = 'Texas' GROUP BY policy_type, coverage_level;"}
{"input": " \uc601\ud654\uc640 TV \ud504\ub85c\uadf8\ub7a8\uc5d0 \ubaa8\ub450 \ucd9c\uc5f0\ud55c \ubc30\uc6b0\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE actors (id INT, name VARCHAR(255)); CREATE TABLE roles (id INT, actor_id INT, media_id INT, media_type VARCHAR(10)); INSERT INTO actors VALUES (1, 'Actor A'); INSERT INTO actors VALUES (2, 'Actor B'); INSERT INTO roles VALUES (1, 1, 1, 'movie'); INSERT INTO roles VALUES (2, 1, 2, 'tv_show'); INSERT INTO roles VALUES (3, 2, 3, 'movie'); INSERT INTO roles VALUES (4, 2, 4, 'tv_show');", "output": "SELECT a.name FROM actors a JOIN roles r ON a.id = r.actor_id JOIN (SELECT media_id FROM roles WHERE media_type = 'movie' INTERSECT SELECT media_id FROM roles WHERE media_type = 'tv_show') intersect_table ON r.media_id = intersect_table.media_id;"}
{"input": " \uad11\uc0b0 \uc9c0\uc5ed\ub2f9 \ucd5c\ub300 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \ud574\ub2f9 \uc9c0\uc5ed\uc5d0\ub294 \uc5b4\ub5a4 \uc554\uc11d\uce35\uc774 \uc874\uc7ac\ud569\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (id INT PRIMARY KEY, mining_site_id INT, pollution_level INT, water_consumption FLOAT, FOREIGN KEY (mining_site_id) REFERENCES mining_sites(id)); INSERT INTO environmental_impact (id, mining_site_id, pollution_level, water_consumption) VALUES (1, 1, 5, 1500.5), (2, 2, 3, 1200.3), (3, 3, 7, 2000.0), (4, 1, 2, 2000.0); CREATE TABLE geological_survey (id INT PRIMARY KEY, mining_site_id INT, rock_formation VARCHAR(255), depth FLOAT, FOREIGN KEY (mining_site_id) REFERENCES mining_sites(id)); INSERT INTO geological_survey (id, mining_site_id, rock_formation, depth) VALUES (1, 1, 'Granite', 50.2), (2, 2, 'Basalt', 30.0), (3, 3, 'Shale', 75.5), (4, 1, 'Limestone', 60.0);", "output": "SELECT e.name, MAX(ei.water_consumption) AS max_water_consumption, GROUP_CONCAT(DISTINCT gs.rock_formation) AS rock_formations FROM environmental_impact ei JOIN mining_sites e ON ei.mining_site_id = e.id JOIN geological_survey gs ON e.id = gs.mining_site_id GROUP BY e.name;"}
{"input": " \ucd1d \ubd09\uc0ac \uc2dc\uac04 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (Id INT, Name TEXT, Hours DECIMAL(10,2)); INSERT INTO Volunteers VALUES (1, 'Charlie', 50.00), (2, 'David', 30.00), (3, 'Eve', 40.00);", "output": "SELECT Name, RANK() OVER (ORDER BY Hours DESC) as Rank FROM Volunteers WHERE Rank <= 3;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uac01 \uc791\ubb3c \uc720\ud615\uc5d0 \ub300\ud55c \ucd1d \uac15\uc218\ub7c9\uc744 \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Rainfall (date DATE, rainfall INT, crop_type VARCHAR(20));", "output": "SELECT crop_type, EXTRACT(MONTH FROM date) as month, SUM(rainfall) OVER(PARTITION BY crop_type, EXTRACT(MONTH FROM date) ORDER BY crop_type, EXTRACT(MONTH FROM date)) as total_rainfall FROM Rainfall WHERE date >= DATEADD(year, -1, CURRENT_DATE);"}
{"input": " 2020\ub144 '\uc608\uc220' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ubc30\uc815\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Budget (program_id INT, program_name VARCHAR(255), year INT, allocated_budget DECIMAL(10, 2)); INSERT INTO Budget (program_id, program_name, year, allocated_budget) VALUES (1, 'Arts', 2020, 2000.00), (2, 'Education', 2020, 3000.00), (3, 'Environment', 2020, 4000.00), (1, 'Arts', 2019, 1500.00), (2, 'Education', 2019, 2500.00), (3, 'Environment', 2019, 3500.00);", "output": "SELECT SUM(allocated_budget) FROM Budget WHERE program_name = 'Arts' AND year = 2020;"}
{"input": " \uacfc\ubaa9\ubcc4 \uac01 \uacfc\uc815\uc5d0 \ub4f1\ub85d\ud55c \ucd1d \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subject_areas (id INT, name VARCHAR(255)); CREATE TABLE courses (id INT, subject_area_id INT, name VARCHAR(255)); CREATE TABLE enrollments (id INT, student_id INT, course_id INT); INSERT INTO subject_areas (id, name) VALUES (1, 'Mathematics'), (2, 'Science'), (3, 'Humanities'); INSERT INTO courses (id, subject_area_id, name) VALUES (1, 1, 'Algebra'), (2, 1, 'Geometry'), (3, 2, 'Biology'), (4, 2, 'Chemistry'), (5, 3, 'History'), (6, 3, 'Literature'); INSERT INTO enrollments (id, student_id, course_id) VALUES (1, 1, 1), (2, 2, 1), (3, 3, 1), (4, 1, 2), (5, 2, 3), (6, 3, 3), (7, 1, 4), (8, 2, 4), (9, 3, 4), (10, 1, 5), (11, 2, 5), (12, 3, 5), (13, 1, 6), (14, 2, 6), (15, 3, 6);", "output": "SELECT sa.name AS subject_area, c.name AS course_name, COUNT(e.id) AS num_students FROM subject_areas sa JOIN courses c ON sa.id = c.subject_area_id JOIN enrollments e ON c.id = e.course_id GROUP BY sa.name, c.name;"}
{"input": " \uc9c0\uc5ed\ubcc4, \uc5f0\ub3c4\ubcc4\ub85c \ubd84\ub958\ub41c 'rural_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ub18d\ucd0c \uc778\ud504\ub77c \ubc0f \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT, region TEXT, year INT, amount FLOAT, project_type TEXT);", "output": "SELECT region, year, SUM(amount) FROM investments WHERE project_type IN ('rural_infrastructure', 'community_development') GROUP BY region, year;"}
{"input": " 2021\ub144 '\uc608\uc220 \ud0d0\ud5d8\uac00' \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE SCHEMA if not exists arts_culture;CREATE TABLE if not exists arts_culture.programs (program_id INT, program_name VARCHAR(50), start_date DATE, end_date DATE, revenue INT); INSERT INTO arts_culture.programs (program_id, program_name, start_date, end_date, revenue) VALUES (1, 'Artistic Explorers', '2021-01-01', '2021-12-31', 0);", "output": "WITH total_revenue AS (UPDATE arts_culture.programs SET revenue = (SELECT SUM(ticket_price) FROM arts_culture.events WHERE events.program_id = programs.program_id) WHERE programs.program_name = 'Artistic Explorers' AND programs.start_date <= '2021-12-31' AND programs.end_date >= '2021-01-01' RETURNING revenue) SELECT * FROM total_revenue;"}
{"input": "\uc2dc\uc560\ud2c0 \uc2dc\uc758 \uc8fc\uac70\uc6a9 \uac74\ubb3c\uc5d0 \ub300\ud574 \ubc1c\uae09\ub41c \ud5c8\uac00\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE building_permits (permit_id INT, building_type VARCHAR(20), city VARCHAR(20)); INSERT INTO building_permits (permit_id, building_type, city) VALUES (1, 'Residential', 'Seattle');", "output": "SELECT COUNT(*) FROM building_permits WHERE building_type = 'Residential' AND city = 'Seattle';"}
{"input": " \ud5ec\uc2a4\ud14c\ud06c \ubd84\uc57c \uc2a4\ud0c0\ud2b8\uc5c5\uc744 \uc704\ud55c \uc2dc\ub9ac\uc988 A \ub610\ub294 \uc2dc\ub9ac\uc988 B \ub77c\uc6b4\ub4dc\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud22c\uc790\uc790\uac00 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE IF NOT EXISTS investment_rounds(id INT, startup_id INT, round_type TEXT, investor_id INT); INSERT INTO investment_rounds (id, startup_id, round_type, investor_id) VALUES (1, 1, 'Series A', 1001); INSERT INTO investment_rounds (id, startup_id, round_type, investor_id) VALUES (2, 2, 'Series A', 1002); INSERT INTO investment_rounds (id, startup_id, round_type, investor_id) VALUES (3, 3, 'Series B', 1003); INSERT INTO investment_rounds (id, startup_id, round_type, investor_id) VALUES (4, 1, 'Series B', 1004);", "output": "SELECT COUNT(DISTINCT investor_id) FROM investment_rounds WHERE round_type IN ('Series A', 'Series B') AND startup_id IN (SELECT id FROM startups WHERE industry = 'Healthtech');"}
{"input": " 2022\ub144 4\ubd84\uae30\uc5d0 \ub9e4\uc0ac\ucd94\uc138\uce20\uc5d0\uc11c \ud310\ub9e4\ub41c \uac01 \uc778\ub514\uce74 \ud488\uc885\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cultivars (id INT, name TEXT, type TEXT);CREATE TABLE Inventory (id INT, cultivar_id INT, quantity INT, dispensary_id INT);CREATE TABLE Sales (id INT, inventory_id INT, quantity INT, sale_date DATE); INSERT INTO Cultivars (id, name, type) VALUES (1, 'Cultivar A', 'Indica'); INSERT INTO Inventory (id, cultivar_id, quantity, dispensary_id) VALUES (1, 1, 100, 1); INSERT INTO Sales (id, inventory_id, quantity, sale_date) VALUES (1, 1, 20, '2022-10-01');", "output": "SELECT c.name, SUM(sales.quantity) as total_quantity_sold FROM Cultivars c JOIN Inventory i ON c.id = i.cultivar_id JOIN Sales sales ON i.id = sales.inventory_id WHERE c.type = 'Indica' AND i.dispensary_id IN (SELECT id FROM Dispensaries WHERE state = 'Massachusetts') AND sales.sale_date BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY c.name;"}
{"input": " \uc544\ud504\ub9ac\uce74\ub098 \ub0a8\ubbf8\uc5d0 \ubcf8\uc0ac\ub97c \ub454 \ud68c\uc0ac\uac00 \uacf5\uae09\ud558\ub294 \uc758\ub958\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (supplier_id INT, supplier_name VARCHAR(255), country VARCHAR(255), industry VARCHAR(255)); INSERT INTO Suppliers (supplier_id, supplier_name, country, industry) VALUES (1, 'ABC Inc.', 'USA', 'Textile'), (2, 'XYZ Ltd.', 'Brazil', 'Garment'), (3, 'LMN Corp.', 'China', 'Accessories'), (4, ' DEF GmbH', 'Germany', 'Sustainable Fabrics'), (5, 'GHI Enterprises', 'Nigeria', 'Garment');", "output": "SELECT SUM(quantity) FROM (SELECT 1 AS quantity UNION ALL SELECT 0) q LEFT JOIN Suppliers s ON q.quantity = 1 WHERE s.country IN ('Africa', 'South America');"}
{"input": " \uacf5\ud3ec \uc7a5\ub974\uc758 \uc601\ud654\uc640 TV \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Movies (id INT, title VARCHAR(255), genre VARCHAR(50), rating DECIMAL(2,1)); CREATE TABLE TVShows (id INT, title VARCHAR(255), genre VARCHAR(50), rating DECIMAL(2,1));", "output": "SELECT 'Movies' AS Type, AVG(rating) AS Average_Rating FROM Movies WHERE genre = 'horror' UNION ALL SELECT 'TV Shows' AS Type, AVG(rating) AS Average_Rating FROM TVShows WHERE genre = 'horror';"}
{"input": " \ud55c\uad6d\uc758 \uc784\uc0c1\uc2dc\ud5d8\uc744 \uc81c\uc678\ud558\uace0, 2017\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uc885\uc591\ud559 \ubd80\ubb38\uc5d0\uc11c \uc544\uc2dc\uc544 \uc0dd\uba85\uacf5\ud559 \uae30\uc5c5\uc774 \uc218\ud589\ud55c \uc784\uc0c1\uc2dc\ud5d8 \uc911 \uc131\uacf5\ud588\uc9c0\ub9cc \uc544\uc9c1 FDA \uc2b9\uc778\uc744 \ubc1b\uc9c0 \ubabb\ud55c \uc784\uc0c1\uc2dc\ud5d8\uc758 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE clinical_trials (id INT, company VARCHAR(255), department VARCHAR(255), trial_status VARCHAR(255), fda_approval_date DATE, company_location VARCHAR(255)); INSERT INTO clinical_trials (id, company, department, trial_status, fda_approval_date, company_location) VALUES (1, 'Asian BioTech 1', 'Oncology', 'Successful', NULL, 'Japan'), (2, 'Asian BioTech 2', 'Oncology', 'Failed', '2018-04-02', 'China'), (3, 'Asian BioTech 3', 'Neurology', 'Successful', '2019-09-10', 'South Korea');", "output": "SELECT COUNT(*) FROM clinical_trials WHERE department = 'Oncology' AND trial_status = 'Successful' AND fda_approval_date IS NULL AND company_location NOT IN ('South Korea') AND fda_approval_date BETWEEN '2017-01-01' AND '2020-12-31';"}
{"input": "\ubb38\ud654\uc801 \uc5ed\ub7c9 \uc810\uc218 \uc0ac\ubd84\uc704\uc218\ub97c \uae30\uc900\uc73c\ub85c LGBTQ+\ub85c \ud655\uc778\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CommunityHealthWorkers (WorkerID INT, LGBTQ VARCHAR(5), CulturalCompetencyScore INT); INSERT INTO CommunityHealthWorkers (WorkerID, LGBTQ, CulturalCompetencyScore) VALUES (1, 'Yes', 80), (2, 'No', 85), (3, 'Yes', 70), (4, 'No', 90);", "output": "SELECT CulturalCompetencyScoreQuartile, COUNT(*) as Count FROM (SELECT CulturalCompetencyScore, NTILE(4) OVER (ORDER BY CulturalCompetencyScore) as CulturalCompetencyScoreQuartile, LGBTQ FROM CommunityHealthWorkers) as Data WHERE LGBTQ = 'Yes' GROUP BY CulturalCompetencyScoreQuartile;"}
{"input": " \ubc84\ud074\ub9ac\uc758 \ucd5c\ub300 \uc9c0\uc18d \uac00\ub2a5\ud55c \ub3c4\uc2dc\ud654 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_urbanism (property_id INT, city VARCHAR(20), score FLOAT); INSERT INTO sustainable_urbanism (property_id, city, score) VALUES (1, 'Vancouver', 85.5), (2, 'Seattle', 80.0), (3, 'NYC', 75.5), (4, 'Berkeley', 88.0);", "output": "SELECT MAX(score) FROM sustainable_urbanism WHERE city = 'Berkeley';"}
{"input": " \ubbf8\uad6d\uacfc \uc911\uad6d\uc774 \ubaa8\ub450 \uc0ac\uc6a9\ud558\ub294 \uad70\uc6a9\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_aircraft (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO us_aircraft (id, name, country) VALUES (1, 'F-15 Eagle', 'USA'), (2, 'F-16 Fighting Falcon', 'USA'); CREATE TABLE china_aircraft (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO china_aircraft (id, name, country) VALUES (3, 'J-10', 'China'), (4, 'J-11', 'China');", "output": "SELECT name FROM us_aircraft WHERE country = 'USA' INTERSECT SELECT name FROM china_aircraft WHERE country = 'China';"}
{"input": " 2015\ub144\ubd80\ud130 2018\ub144\uae4c\uc9c0 \uc544\uc2dc\uc544\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uac00 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE climate_adaptation (project_name VARCHAR(255), location VARCHAR(255), year INT, type VARCHAR(255)); INSERT INTO climate_adaptation (project_name, location, year, type) VALUES ('GreenTech Education', 'Nepal', 2015, 'Adaptation'), ('Solar for Agriculture', 'Bangladesh', 2016, 'Adaptation'), ('Climate Resilient Infrastructure', 'Pakistan', 2017, 'Adaptation'), ('Community Based Adaptation', 'Sri Lanka', 2018, 'Adaptation');", "output": "SELECT COUNT(*) FROM climate_adaptation WHERE location LIKE 'Asia%' AND year BETWEEN 2015 AND 2018 AND type = 'Adaptation';"}
{"input": " \uc815\ubd80 \uae30\uad00\uc73c\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uace0 \uc778\ub3c4\ub098 \uc911\uad6d\uc5d0 \uc704\uce58\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \uc0dd\uc0b0\ud558\ub294 \ubc14\uc774\uc624\uc13c\uc11c\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE public.biosensors ( id SERIAL PRIMARY KEY, name VARCHAR(100), type VARCHAR(50), country VARCHAR(50), funding INTEGER ); CREATE TABLE public.startups ( id SERIAL PRIMARY KEY, name VARCHAR(100), industry VARCHAR(50), funding INTEGER ); CREATE TABLE public.investors ( id SERIAL PRIMARY KEY, name VARCHAR(100), type VARCHAR(50), funds INTEGER ); CREATE TABLE public.investments ( id SERIAL PRIMARY KEY, investor_id INTEGER, startup_id INTEGER );", "output": "SELECT biosensors.name FROM public.biosensors JOIN public.startups ON biosensors.name = startups.name JOIN public.investments ON startups.id = investments.startup_id JOIN public.investors ON investments.investor_id = investors.id WHERE (biosensors.country = 'India' OR biosensors.country = 'China') AND investors.type = 'Government Organization';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE tour_bookings(id INT, city TEXT, booking_date DATE, booking_type TEXT); INSERT INTO tour_bookings (id, city, booking_date, booking_type) VALUES (1, 'New York', '2022-04-01', 'virtual'), (2, 'Los Angeles', '2022-04-02', 'virtual'), (3, 'Chicago', '2022-04-03', 'in-person');", "output": "SELECT city, COUNT(*) AS num_virtual_tours FROM tour_bookings WHERE booking_type = 'virtual' GROUP BY city ORDER BY num_virtual_tours DESC LIMIT 2;"}
{"input": " \uac01 \ubd80\ub3d9\uc0b0 \uad00\ub9ac \ud68c\uc0ac\uc5d0 \ub300\ud574 \ud3ec\uad04\uc801\uc778 \uc8fc\ud0dd \uc815\ucc45\uc744 \uc801\uc6a9\ud55c \ubd80\ub3d9\uc0b0\uc758 \ube44\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE property_management_companies (company_id INT, name VARCHAR(255)); CREATE TABLE properties (property_id INT, size INT, company_id INT, PRIMARY KEY (property_id), FOREIGN KEY (company_id) REFERENCES property_management_companies(company_id)); CREATE TABLE inclusive_housing_policies (property_id INT, PRIMARY KEY (property_id), FOREIGN KEY (property_id) REFERENCES properties(property_id));", "output": "SELECT property_management_companies.name, 100.0 * COUNT(inclusive_housing_policies.property_id) / COUNT(properties.property_id) as pct FROM property_management_companies LEFT JOIN properties ON property_management_companies.company_id = properties.company_id LEFT JOIN inclusive_housing_policies ON properties.property_id = inclusive_housing_policies.property_id GROUP BY property_management_companies.name;"}
{"input": " \ud654\uc131\uc744 \uc5ec\ud589\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc\uc120\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft (id INT, name VARCHAR(50), launch_date DATE, max_speed FLOAT); INSERT INTO Spacecraft (id, name, launch_date, max_speed) VALUES (1, 'Mars Reconnaissance Orbiter', '2005-08-12', 9.63);", "output": "SELECT AVG(max_speed) FROM Spacecraft WHERE name IN ('Mars Reconnaissance Orbiter', 'Perseverance Rover', 'Curiosity Rover', 'Spirit Rover', 'Opportunity Rover');"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \ubd80\uc11c\uc758 SLA \ub0b4\uc5d0\uc11c \ud574\uacb0\ub41c \ubcf4\uc548 \uc0ac\uace0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, department VARCHAR(255), resolution_time INT, timestamp DATETIME, SLA_time INT);", "output": "SELECT department, 100.0 * COUNT(*) / (SELECT COUNT(*) FROM security_incidents WHERE department = security_incidents.department AND timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)) as percentage_SLA FROM security_incidents WHERE resolution_time <= SLA_time AND timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY department;"}
{"input": " \uae30\ud638\uc6a9 \ub300\ub9c8\ucd08 \uc0ac\uc6a9\uc774 \ud5c8\uc6a9\ub41c \uc8fc\uc5d0 \uc704\uce58\ud55c \uc57d\uad6d\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc885\ub958\uac00 \ud310\ub9e4\ub429\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT); CREATE TABLE strains (id INT, name TEXT, dispensary_id INT); CREATE TABLE state_cannabis_regulations (state TEXT, recreational_use BOOLEAN); INSERT INTO dispensaries (id, name, state) VALUES (1, 'The Joint', 'Washington'), (2, '3D Cannabis Center', 'Colorado'); INSERT INTO strains (id, name, dispensary_id) VALUES (1, 'Blue Dream', 1), (2, 'OG Kush', 1), (3, 'Sour Diesel', 2); INSERT INTO state_cannabis_regulations (state, recreational_use) VALUES ('Washington', TRUE), ('Colorado', TRUE);", "output": "SELECT s.name FROM strains s JOIN dispensaries d ON s.dispensary_id = d.id JOIN state_cannabis_regulations scr ON d.state = scr.state WHERE scr.recreational_use = TRUE;"}
{"input": " Water_Infrastructure \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Water_Infrastructure (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO Water_Infrastructure (id, project_name, location, cost) VALUES (1, 'Aquifer Recharge', 'City M', 5000000); INSERT INTO Water_Infrastructure (id, project_name, location, cost) VALUES (2, 'Wastewater Treatment', 'City N', 8000000);", "output": "SELECT AVG(cost) FROM Water_Infrastructure;"}
{"input": " \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \ud654\ud559\ubb3c\uc9c8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation (id INT PRIMARY KEY, chemical_name VARCHAR(255), waste_generation INT); INSERT INTO waste_generation (id, chemical_name, waste_generation) VALUES (1, 'Sodium Hydroxide', 300);", "output": "SELECT chemical_name, waste_generation, RANK() OVER (ORDER BY waste_generation DESC) AS rank FROM waste_generation WHERE rank = 1;"}
{"input": " \uac01\uad6d \uc0b0\ub9bc\uc758 \ucd5c\ub300 \ud0c4\uc18c\uaca9\ub9ac\uac12\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE forests (forest_id INT, country TEXT, area REAL, carbon_sequestration REAL); INSERT INTO forests (forest_id, country, area, carbon_sequestration) VALUES (1, 'USA', 5000, 120), (2, 'Canada', 7000, 150), (3, 'Mexico', 3000, 100);", "output": "SELECT country, MAX(carbon_sequestration) as max_carbon_sequestration FROM forests GROUP BY country;"}
{"input": " 2020\ub144 \uc804 \uc9c0\uc5ed\uc5d0 \uac78\uccd0 \uad50\ud1b5\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Budget (Year INT, Region VARCHAR(255), Department VARCHAR(255), Amount DECIMAL(10,2)); INSERT INTO Budget (Year, Region, Department, Amount) VALUES (2020, 'Northeast', 'Transportation', 550000.00), (2020, 'Southeast', 'Transportation', 650000.00), (2020, 'Southwest', 'Transportation', 750000.00), (2020, 'Northwest', 'Transportation', 850000.00);", "output": "SELECT SUM(Amount) FROM Budget WHERE Year = 2020 AND Department = 'Transportation';"}
{"input": " \ub3d9\uc77c\ud55c \uc81c\uc870\uc5c5\uccb4\uac00 \ub450 \ubc88\uc758 \uc5f0\uc18d \uc704\uc131 \ubc1c\uc0ac \uc0ac\uc774\uc5d0 \uac00\uc7a5 \uae34 \uae30\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (SatelliteID INT, Name VARCHAR(50), LaunchDate DATE, Manufacturer VARCHAR(50)); INSERT INTO Satellites (SatelliteID, Name, LaunchDate, Manufacturer) VALUES (1, 'Sat1', '2022-02-01', 'SpaceCorp'), (2, 'Sat2', '2022-02-10', 'Galactic'), (3, 'Sat3', '2022-02-20', 'SpaceCorp'), (4, 'Sat4', '2022-03-01', 'AstroTech'), (5, 'Sat5', '2022-03-15', 'SpaceCorp'), (6, 'Sat6', '2022-03-25', 'Galactic');", "output": "SELECT Manufacturer, DATEDIFF(DAY, LAG(LaunchDate) OVER (PARTITION BY Manufacturer ORDER BY LaunchDate), LaunchDate) AS Longest_Gap FROM Satellites;"}
{"input": "\uc9c0\uc18d\uac00\ub2a5\uc131\uc5d0 \uc804\ub150\ud558\ub294 \uc0c1\uc704 2\uac1c \uc758\ub958 \ube0c\ub79c\ub4dc\uc758 \uc7ac\ud65c\uc6a9 \uacc4\ud68d\uacfc \uac01\uac01\uc758 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recycling_initiatives (brand VARCHAR(50), initiative VARCHAR(50), budget FLOAT); INSERT INTO recycling_initiatives (brand, initiative, budget) VALUES ('Brand N', 'Recycled Fabrics', 500000.00), ('Brand N', 'Clothing Recycling Program', 750000.00), ('Brand O', 'Recycled Buttons', 150000.00), ('Brand O', 'Clothing Donation Program', 300000.00);", "output": "SELECT initiative, budget FROM recycling_initiatives WHERE brand IN ('Brand N', 'Brand O') ORDER BY budget DESC LIMIT 2;"}
{"input": " 2017\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 '\uc2dc\ubca0\ub9ac\uc544'\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \uc6b0\ubb3c\uc744 \ub6ab\uc5c8\ub098\uc694?", "context": "CREATE TABLE wells (well_id INT, field VARCHAR(50), region VARCHAR(50), drill_year INT, production_oil FLOAT, production_gas FLOAT); INSERT INTO wells (well_id, field, region, drill_year, production_oil, production_gas) VALUES (1, 'Vankor', 'Siberia', 2018, 18000.0, 6000.0), (2, 'Severo-Kurilsk', 'Siberia', 2019, 12000.0, 4000.0);", "output": "SELECT COUNT(*) FROM wells WHERE region = 'Siberia' AND drill_year BETWEEN 2017 AND 2020;"}
{"input": " 'Personal Care' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ud50c\ub77c\uc2a4\ud2f1\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc740 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255), plastic_free BOOLEAN); INSERT INTO products (product_id, product_name, category, plastic_free) VALUES (1, 'Plastic-Free Shampoo', 'Personal Care', true); INSERT INTO products (product_id, product_name, category, plastic_free) VALUES (2, 'Regular Shampoo', 'Personal Care', false);", "output": "SELECT (COUNT(plastic_free) * 100.0 / (SELECT COUNT(*) FROM products WHERE category = 'Personal Care')) FROM products WHERE plastic_free = true AND category = 'Personal Care';"}
{"input": " 2022\ub144 \uac01 \uc120\ubc15\uc758 \ud56d\ud574\ub2f9 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cargo_voyage (cargo_voyage_id INT, cargo_id INT, voyage_id INT, cargo_weight INT); INSERT INTO cargo_voyage VALUES (1, 1, 1, 5000); INSERT INTO cargo_voyage VALUES (2, 2, 1, 4000); INSERT INTO cargo_voyage VALUES (3, 3, 2, 6000);", "output": "SELECT vessels.vessel_name, AVG(cargo_weight) as avg_cargo_weight FROM cargo_voyage JOIN voyages ON cargo_voyage.voyage_id = voyages.voyage_id JOIN vessels ON voyages.vessel_id = vessels.vessel_id WHERE cargo_voyage.cargo_voyage_id >= (SELECT cargo_voyage_id FROM cargo_voyage WHERE EXTRACT(YEAR FROM voyage_start_date) = 2022 ORDER BY cargo_voyage_id LIMIT 1) GROUP BY vessels.vessel_name;"}
{"input": " \ud638\uc8fc\uc758 \ub3c4\uc2dc \ub18d\uc5c5 \uacc4\ud68d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE urban_initiatives (country VARCHAR(255), initiative_type VARCHAR(255), percentage DECIMAL(5,2)); INSERT INTO urban_initiatives (country, initiative_type, percentage) VALUES ('Australia', 'Urban Agriculture', 60.5), ('Canada', 'Urban Agriculture', 55.2), ('New Zealand', 'Urban Farming', 45.6); CREATE VIEW australian_urban_initiatives AS SELECT * FROM urban_initiatives WHERE country = 'Australia';", "output": "SELECT percentage FROM australian_urban_initiatives WHERE initiative_type = 'Urban Agriculture';"}
{"input": " '\ub864\ud50c\ub808\uc789' \uc7a5\ub974\uc5d0\uc11c '\uc778\ub3c4' \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \uad6c\ub9e4 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Purchases (PurchaseID INT, PlayerID INT, GameID INT, PurchaseDate DATE, Price DECIMAL(5, 2)); INSERT INTO Purchases (PurchaseID, PlayerID, GameID, PurchaseDate, Price) VALUES (1, 1, 1, '2021-01-15', 29.99), (2, 2, 2, '2021-02-03', 19.99), (3, 3, 3, '2021-03-10', 39.99), (4, 1, 4, '2021-03-15', 49.99), (5, 2, 5, '2021-04-01', 59.99), (6, 3, 1, '2021-04-05', 29.99); CREATE TABLE GameGenres (GameID INT, Genre VARCHAR(20)); INSERT INTO GameGenres (GameID, Genre) VALUES (1, 'Role-playing'), (2, 'Action'), (3, 'Strategy'), (4, 'Adventure'), (5, 'Simulation'), (6, 'Virtual Reality'); CREATE TABLE Players (PlayerID INT, Country VARCHAR(20)); INSERT INTO Players (PlayerID, Country) VALUES (1, 'Canada'), (2, 'Brazil'), (3, 'India');", "output": "SELECT COUNT(*) FROM Purchases INNER JOIN GameGenres ON Purchases.GameID = GameGenres.GameID INNER JOIN Players ON Purchases.PlayerID = Players.PlayerID WHERE Players.Country = 'India' AND GameGenres.Genre = 'Role-playing';"}
{"input": " \uc791\ub144\uc5d0 \"#gaming\"\uc774 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc774 20\uac1c \uc774\uc0c1\uc73c\ub85c \uac00\uc7a5 \ub9ce\uc740 \uac8c\uc2dc\ubb3c\uc744 \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE users (id INT, name VARCHAR(255), posts INT); CREATE TABLE posts (id INT, user INT, content TEXT, timestamp TIMESTAMP);", "output": "SELECT u.name FROM users u JOIN (SELECT user, COUNT(*) AS post_count FROM posts WHERE content LIKE '%#gaming%' AND timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() GROUP BY user HAVING COUNT(*) >= 20) pc ON u.id = pc.user ORDER BY u.posts DESC, pc.post_count DESC LIMIT 1;"}
{"input": " '\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1' \ubd80\uc11c\uc640 '\ud488\uc9c8 \uad00\ub9ac' \ubd80\uc11c \ubaa8\ub450\uc5d0 \uc9c1\uc6d0\uc774 \uc788\ub294 \uacf5\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id INT, factory_name VARCHAR(20)); INSERT INTO factories VALUES (1, 'Factory X'), (2, 'Factory Y'), (3, 'Factory Z'); CREATE TABLE departments (department_id INT, department VARCHAR(20)); INSERT INTO departments VALUES (1, 'engineering'), (2, 'quality control'), (3, 'maintenance'); CREATE TABLE workers (worker_id INT, factory_id INT, department_id INT); INSERT INTO workers VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1), (4, 2, 3), (5, 3, 2), (6, 3, 3);", "output": "SELECT f.factory_name FROM workers w INNER JOIN factories f ON w.factory_id = f.factory_id INNER JOIN departments d ON w.department_id = d.department_id WHERE d.department IN ('engineering', 'quality control') GROUP BY f.factory_name HAVING COUNT(DISTINCT d.department_id) = 2;"}
{"input": " \uac01 \ub178\ub3d9\uc870\ud569\uc758 \ud3c9\uade0 \uc791\uc5c5\uc7a5 \uc548\uc804\uc0ac\uace0 \uc2ec\uac01\ub3c4\ub294 \uc5b4\ub290 \uc815\ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplace_safety (safety_id INT, union_name VARCHAR(50), incident_date DATE, incident_type VARCHAR(50), severity VARCHAR(50));CREATE VIEW union_safety_incidents AS SELECT union_name, severity FROM workplace_safety;", "output": "SELECT union_name, AVG(RANK() OVER (PARTITION BY union_name ORDER BY CASE severity WHEN 'High' THEN 1 WHEN 'Medium' THEN 2 WHEN 'Low' THEN 3 END)) as avg_severity FROM union_safety_incidents GROUP BY union_name;"}
{"input": " \ucd5c\uadfc \ub179\uc0c9 \uc5d0\ub108\uc9c0 \ub300\ucd9c \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc2e0\uaddc \uace0\uac1d\uc5d0 \ub300\ud55c \uae30\ub85d\uc744 \uc0bd\uc785\ud558\uc138\uc694.", "context": "CREATE TABLE clients (client_id INT, name VARCHAR(50), program VARCHAR(50)); CREATE TABLE green_energy_lending_programs (program VARCHAR(50));", "output": "INSERT INTO clients (client_id, name, program) SELECT seq.client_id, 'Grace Gichuru', 'Green Energy Lending' FROM (SELECT 1001 + ROW_NUMBER() OVER() AS client_id FROM green_energy_lending_programs LIMIT 5) AS seq; INSERT INTO green_energy_lending_programs (program) VALUES ('Green Energy Lending');"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 '\ud5ec\uc2a4\ucf00\uc5b4' \uc0b0\uc5c5\uc758 \uc804\uccb4 \uc0ac\uace0 \uc911 \uac01 \uc0ac\uace0 \uc720\ud615\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE security_incidents (id INT, timestamp TIMESTAMP, industry VARCHAR(255), country VARCHAR(255), incident_type VARCHAR(255)); INSERT INTO security_incidents (id, timestamp, industry, country, incident_type) VALUES (1, '2022-04-01 10:00:00', 'Healthcare', 'USA', 'malware'), (2, '2022-04-02 15:00:00', 'Healthcare', 'Canada', 'phishing'), (3, '2022-04-03 08:00:00', 'Finance', 'USA', 'DDoS'), (4, '2022-05-04 11:00:00', 'Healthcare', 'Mexico', 'data exfiltration'), (5, '2022-05-05 13:00:00', 'Healthcare', 'Brazil', 'malware');", "output": "SELECT incident_type, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM security_incidents WHERE industry = 'Healthcare' AND timestamp >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 3 MONTH)) , 2) as percentage FROM security_incidents WHERE industry = 'Healthcare' AND timestamp >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 3 MONTH) GROUP BY incident_type;"}
{"input": " 2020\ub144\uc5d0 \uac01 \ub098\ubb34 \uc885\uc5d0 \uc758\ud574 \uaca9\ub9ac\ub41c \ucd1d \ud0c4\uc18c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE trees (id INT, species VARCHAR(255), carbon_sequestered DECIMAL(10,2), year INT);", "output": "SELECT species, SUM(carbon_sequestered) as total_carbon_sequestered FROM trees WHERE year = 2020 GROUP BY species;"}
{"input": " \uac01 \ud300\uc758 \ucd5c\uadfc 4\uacbd\uae30\uc5d0\uc11c \ub4dd\uc810\ud55c \ud3c9\uade0 \ub4dd\uc810 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE games (game_id INT, game_name VARCHAR(50), team VARCHAR(50), runs INT); INSERT INTO games (game_id, game_name, team, runs) VALUES (1, 'Game 1', 'Team A', 2), (2, 'Game 2', 'Team A', 1), (3, 'Game 3', 'Team A', 3), (4, 'Game 4', 'Team B', 1), (5, 'Game 5', 'Team B', 0), (6, 'Game 6', 'Team B', 4), (7, 'Game 7', 'Team C', 2), (8, 'Game 8', 'Team C', 3), (9, 'Game 9', 'Team C', 5);", "output": "SELECT team, AVG(runs) as avg_runs FROM (SELECT team, runs, ROW_NUMBER() OVER (PARTITION BY team ORDER BY game_id DESC) as rn FROM games) t WHERE rn <= 4 GROUP BY team;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544 \ub300\ud559\uc758 AI \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uac00 \ubcf4\ub0b8 \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE communities_indigenous (community_id INT, community_name VARCHAR(100), region VARCHAR(50)); INSERT INTO communities_indigenous VALUES (1, 'Indigenous Australian STEM', 'Oceania'), (2, 'Maori AI Learners', 'Oceania'); CREATE TABLE university_programs (program_id INT, program_name VARCHAR(100), community_id INT); INSERT INTO university_programs VALUES (1, 'AI for Good', 1), (2, 'AI Ethics', 1), (3, 'AI Basics', 2); CREATE TABLE participation (participation_id INT, participant_id INT, program_id INT, hours DECIMAL(5,2)); INSERT INTO participation VALUES (1, 1, 1, 20.00), (2, 2, 1, 25.00), (3, 3, 2, 15.00);", "output": "SELECT SUM(hours) FROM participation INNER JOIN university_programs ON participation.program_id = university_programs.program_id INNER JOIN communities_indigenous ON university_programs.community_id = communities_indigenous.community_id WHERE communities_indigenous.region = 'Oceania';"}
{"input": " \uc0b0\uc5c5\ubcc4 \uc791\uc5c5\uc7a5\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ucd5c\uc18c \uc548\uc804 \ubb38\uc81c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplaces (id INT, industry VARCHAR(10), safety_issues INT); INSERT INTO workplaces (id, industry, safety_issues) VALUES (1, 'Manufacturing', 10), (2, 'Construction', 5), (3, 'Manufacturing', 15), (4, 'Retail', 8);", "output": "SELECT industry, MIN(safety_issues) OVER (PARTITION BY industry) AS min_safety_issues FROM workplaces;"}
{"input": " Global Shipping \ud68c\uc0ac\uac00 \uc18c\uc720\ud558\uace0 \uc6a9\ub7c9\uc774 180,000\uba85\uc774\uba70 ID\uac00 4\uc774\uace0 \uc774\ub984\uc774 'Atlantic Explorer'\uc778 \ud654\ubb3c\uc120\uc5d0 \ub300\ud55c \uc0c8 \ub808\ucf54\ub4dc\ub97c \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cargo_ships (id INT, name VARCHAR(50), capacity INT, owner_id INT); INSERT INTO cargo_ships (id, name, capacity, owner_id) VALUES (1, 'Sea Titan', 150000, 1), (2, 'Ocean Marvel', 200000, 1), (3, 'Cargo Master', 120000, 2); CREATE TABLE owners (id INT, name VARCHAR(50)); INSERT INTO owners (id, name) VALUES (1, 'ACME Corporation'), (2, 'Global Shipping');", "output": "INSERT INTO cargo_ships (id, name, capacity, owner_id) VALUES (4, 'Atlantic Explorer', 180000, (SELECT id FROM owners WHERE name = 'Global Shipping'));"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ubbf8\uad6d\uacfc \ub3c5\uc77c\uc5d0 \ubcf8\uc0ac\ub97c \ub454 \uae30\uc5c5\uc774 \ubc1c\ud45c\ud55c \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \ub17c\ubb38\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Company_Publications (Company VARCHAR(50), Publication_Date DATE);", "output": "SELECT c.Company, COUNT(p.Id) as publications FROM Company_Publications c INNER JOIN (SELECT * FROM (SELECT Id, Company, Publication_Date FROM Company_Publications WHERE Publication_Date >= DATE(NOW()) - INTERVAL 3 YEAR) cp1 WHERE cp1.Company IN ('US_Company', 'German_Company')) p ON c.Publication_Date = p.Publication_Date GROUP BY c.Company;"}
{"input": " \uc804\uccb4 \ud310\ub9e4\ub7c9\uacfc \uac01 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc81c\ud488\ubcc4 \ud3c9\uade0 \ud310\ub9e4\ub7c9\uc744 \ud3ec\ud568\ud558\uc5ec \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc758 \uc6d4\ubcc4 \ud310\ub9e4\ub7c9\uc744 \uc81c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (id INT, name VARCHAR(50), category VARCHAR(50), price DECIMAL(5,2)); CREATE TABLE purchases (id INT, product_id INT, purchase_date DATE, quantity INT, purchase_price DECIMAL(5,2)); CREATE TABLE stores (id INT, name VARCHAR(50), city VARCHAR(50), region VARCHAR(50));", "output": "SELECT category, SUM(quantity * purchase_price) AS total_sales, AVG(quantity * purchase_price) AS avg_sales_per_product FROM purchases JOIN products ON purchases.product_id = products.id JOIN stores ON purchases.store_id = stores.id GROUP BY category ORDER BY total_sales DESC;"}
{"input": "\uac01 \ubd80\uc11c\uc5d0\uc11c \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871\uc73c\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Department VARCHAR(20), Race VARCHAR(20)); INSERT INTO Employees (EmployeeID, Gender, Department, Race) VALUES (1, 'Male', 'IT', 'White'), (2, 'Female', 'IT', 'Asian'), (3, 'Male', 'HR', 'Black'), (4, 'Female', 'HR', 'Hispanic'), (5, 'Non-binary', 'Marketing', 'White'), (6, 'Male', 'IT', 'Black'), (7, 'Female', 'HR', 'White');", "output": "SELECT Department, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees WHERE Department = e.Department)) AS Percentage FROM Employees e WHERE Race <> 'White' GROUP BY Department;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc724\ub9ac\uc801 \ud328\uc158\uc5d0 \ub300\ud55c \uc18c\ube44\uc790 \uc778\uc2dd \ub3d9\ud5a5\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE consumer_awareness (date DATE, awareness INT); INSERT INTO consumer_awareness (date, awareness) VALUES ('2022-01-01', 75), ('2022-02-01', 78), ('2022-03-01', 82), ('2022-04-01', 80), ('2022-05-01', 85), ('2022-06-01', 88);", "output": "SELECT date, awareness, LAG(awareness, 2) OVER (ORDER BY date) as lagged_awareness FROM consumer_awareness;"}
{"input": " ISRO\uc758 \ud654\uc131 \uc784\ubb34 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mars_mission (name VARCHAR(50), launch_year INT, agency VARCHAR(50));INSERT INTO mars_mission (name, launch_year, agency) VALUES ('Mangalyaan', 2013, 'ISRO');", "output": "SELECT name FROM mars_mission WHERE agency = 'ISRO';"}
{"input": " \uc544\ud504\uac00\ub2c8\uc2a4\ud0c4\uc758 \uc758\ub8cc \ubd80\ubb38\uc744 \uc9c0\uc6d0\ud558\ub294 \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name VARCHAR(100)); INSERT INTO countries (id, name) VALUES (1, 'Afghanistan'); CREATE TABLE sectors (id INT, name VARCHAR(50)); INSERT INTO sectors (id, name) VALUES (1, 'Health'); CREATE TABLE donors (id INT, name VARCHAR(100), country_id INT); INSERT INTO donors (id, name, country_id) VALUES (1, 'USAID', 1), (2, 'World Health Organization', 1); CREATE TABLE donations (id INT, donor_id INT, sector_id INT, amount FLOAT); INSERT INTO donations (id, donor_id, sector_id, amount) VALUES (1, 1, 1, 5000000), (2, 2, 1, 3000000);", "output": "SELECT d.name, SUM(donations.amount) as total_donation FROM donors d INNER JOIN donations ON d.id = donations.donor_id INNER JOIN sectors ON donations.sector_id = sectors.id INNER JOIN countries ON d.country_id = countries.id WHERE sectors.name = 'Health' AND countries.name = 'Afghanistan' GROUP BY d.id ORDER BY total_donation DESC LIMIT 5;"}
{"input": " \uac01 \uc8fc\uc758 \ud1f4\uc5ed \uad70\uc778\uc5d0 \ub300\ud55c \ucd5c\uc18c \uace0\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Veterans (State VARCHAR(255), Employment_Rate FLOAT); INSERT INTO Veterans (State, Employment_Rate) VALUES ('California', 65.2), ('Texas', 70.5), ('New York', 68.7), ('Florida', 72.1), ('Illinois', 66.9);", "output": "SELECT State, MIN(Employment_Rate) FROM Veterans GROUP BY State;"}
{"input": " 2019\ub144\uc5d0 \ubb38\ud654 \ud589\uc0ac \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cultural_events (event_id INT, country VARCHAR(50), year INT, events_count INT); INSERT INTO cultural_events (event_id, country, year, events_count) VALUES (1, 'USA', 2019, 300); INSERT INTO cultural_events (event_id, country, year, events_count) VALUES (2, 'France', 2019, 400);", "output": "SELECT country, MAX(events_count) FROM cultural_events WHERE year = 2019 GROUP BY country HAVING MAX(events_count) = (SELECT MAX(events_count) FROM cultural_events WHERE year = 2019);"}
{"input": " \uc778\uc99d\uc744 \ubc1b\uc740 '\uc544\ud504\ub9ac\uce74'\uc5d0\ub294 \uc720\uae30\ub18d \ub18d\uc7a5\uc774 \uba87 \uacf3\uc774\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE organic_farms (id INT, country VARCHAR(50), region VARCHAR(50), no_farms INT, certified BOOLEAN); INSERT INTO organic_farms (id, country, region, no_farms, certified) VALUES (1, 'Kenya', 'Africa', 1000, TRUE); INSERT INTO organic_farms (id, country, region, no_farms, certified) VALUES (2, 'Tanzania', 'Africa', 2000, FALSE); INSERT INTO organic_farms (id, country, region, no_farms, certified) VALUES (3, 'Nigeria', 'Africa', 1500, TRUE);", "output": "SELECT SUM(no_farms) FROM organic_farms WHERE region = 'Africa' AND certified = TRUE;"}
{"input": " '\ud504\ub9ac\ubbf8\uc5c4' \uc694\uae08 \uc720\ud615\uc744 \uc81c\uc678\ud55c \uac01 \uc6b4\uc1a1 \uc218\ub2e8\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Fares (FareID int, FareType varchar(50), TransportMode varchar(50), Revenue int); INSERT INTO Fares VALUES (1, 'Standard', 'Bus', 5000); INSERT INTO Fares VALUES (2, 'Discounted', 'Bus', 3000); INSERT INTO Fares VALUES (3, 'Standard', 'Subway', 7000); INSERT INTO Fares VALUES (4, 'Discounted', 'Subway', 4000); INSERT INTO Fares VALUES (5, 'Premium', 'Tram', 6000);", "output": "SELECT TransportMode, SUM(Revenue) FROM Fares WHERE FareType <> 'Premium' GROUP BY TransportMode;"}
{"input": " 'SustainabilityCity'\uc5d0 \uc704\uce58\ud55c \uacf5\uae09\uc5c5\uccb4\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc2dd\ud488 \ud488\ubaa9\uc758 \ucd1d \ube44\uc6a9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE FoodItems (item_id INT, item_name VARCHAR(50), sustainable BOOLEAN, cost INT); CREATE TABLE SupplierFoodItems (supplier_id INT, item_id INT); INSERT INTO FoodItems (item_id, item_name, sustainable, cost) VALUES (1, 'Quinoa', true, 5), (2, 'Tofu', true, 8), (3, 'Beef', false, 20); INSERT INTO SupplierFoodItems (supplier_id, item_id) VALUES (1, 1), (1, 2), (2, 3);", "output": "SELECT SUM(FoodItems.cost) FROM FoodItems INNER JOIN SupplierFoodItems ON FoodItems.item_id = SupplierFoodItems.item_id INNER JOIN Suppliers ON SupplierFoodItems.supplier_id = Suppliers.supplier_id WHERE Suppliers.location = 'SustainabilityCity' AND FoodItems.sustainable = true"}
{"input": " \ucd1d \uae30\ubd80\uc561 \uae30\uc900 \uc0c1\uc704 3\uac1c \uae30\ubd80 \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE donations (country TEXT, donation FLOAT); INSERT INTO donations (country, donation) VALUES ('Haiti', 1000.00), ('Pakistan', 2000.00), ('Syria', 3000.00), ('Afghanistan', 4000.00);", "output": "SELECT country, SUM(donation) OVER (ORDER BY SUM(donation) DESC) AS total_donation FROM donations;"}
{"input": " \uc9c0\ub09c \ub2ec '\ub2e4\uc6b4\ud0c0\uc6b4' \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc94\uc8c4\uac00 \uc2e0\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name TEXT);CREATE TABLE crimes (crime_id INT, district_id INT, crime_date DATE);", "output": "SELECT COUNT(*) FROM crimes WHERE district_id = (SELECT district_id FROM districts WHERE district_name = 'Downtown') AND crime_date >= DATEADD(month, -1, GETDATE());"}
{"input": "\uac01 \uc81c\uc870\uc0ac\uac00 \uc5f0\uac04 \uc0dd\uc0b0\ud558\ub294 \ud56d\uacf5\uae30 \uc218", "context": "CREATE TABLE Aircraft (AircraftID INT, Model VARCHAR(50), Manufacturer VARCHAR(50), Year INT, ProductionQuantity INT); INSERT INTO Aircraft (AircraftID, Model, Manufacturer, Year, ProductionQuantity) VALUES (1, 'B737', 'Boeing', 1967, 10497), (2, 'A320', 'Airbus', 1988, 9324);", "output": "SELECT Manufacturer, Year, ProductionQuantity, COUNT(*) OVER(PARTITION BY Manufacturer, Year) as Count FROM Aircraft;"}
{"input": " \ud638\uc8fc \uc2dc\uc7a5\uc5d0\uc11c \ube44\uac74 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE skincare_products (product_id INT, product_name VARCHAR(255), is_vegan BOOLEAN, country VARCHAR(255)); INSERT INTO skincare_products (product_id, product_name, is_vegan, country) VALUES (1, 'Hydrating Serum', true, 'Australia'), (2, 'Facial Cleanser', false, 'Australia'), (3, 'Nourishing Cream', false, 'Australia');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM skincare_products WHERE country = 'Australia')) AS percentage FROM skincare_products WHERE is_vegan = true;"}
{"input": " 2019\ub144 \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\uc11c \ubcf4\uace0\ub41c \ubaa8\ub4e0 \uc0ac\uc774\ubc84\ubcf4\uc548 \uc0ac\uac74\uc744 \uad6d\uac00\uba85, \uc0ac\uac74 \uc720\ud615\uacfc \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE country (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE region (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE incident (id INT PRIMARY KEY, country_id INT, region_id INT, reported_date DATE, type VARCHAR(255)); INSERT INTO country (id, name) VALUES (1, 'Nigeria'), (2, 'South Africa'), (3, 'Egypt'); INSERT INTO region (id, name) VALUES (1, 'Africa'); INSERT INTO incident (id, country_id, region_id, reported_date, type) VALUES (1, 1, 1, '2019-01-01', 'Phishing'), (2, 2, 1, '2019-02-01', 'Malware'), (3, 3, 1, '2019-03-01', 'Data Breach');", "output": "SELECT c.name as country_name, i.type as incident_type FROM country c INNER JOIN incident i ON c.id = i.country_id INNER JOIN region r ON i.region_id = r.id WHERE r.name = 'Africa' AND YEAR(i.reported_date) = 2019;"}
{"input": " \uac01 \uc6b0\uc8fc\uad6d\uc758 \uc131\uacf5\uc801\uc778 \ud654\uc131 \ud0d0\uc0ac\uc120 \uc784\ubb34 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE AgencyMarsRovers (Agency VARCHAR(50), Name VARCHAR(50), Status VARCHAR(10), LaunchYear INT); INSERT INTO AgencyMarsRovers (Agency, Name, Status, LaunchYear) VALUES ('NASA', 'Sojourner', 'Success', 1996), ('NASA', 'Spirit', 'Success', 2003), ('NASA', 'Opportunity', 'Success', 2003), ('NASA', 'Phoenix', 'Success', 2007), ('NASA', 'Curiosity', 'Success', 2011), ('NASA', 'Perseverance', 'Success', 2020), ('ESA', 'ExoMars Rover', 'Failure', 2016), ('CNSA', 'Zhurong', 'Success', 2020);", "output": "SELECT Agency, COUNT(*) FROM AgencyMarsRovers WHERE Status = 'Success' GROUP BY Agency;"}
{"input": " 'John Doe'\ub77c\ub294 \uc774\ub984\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \ucc38\uac00\ud55c \ud1a0\ub108\uba3c\ud2b8\uc758 \ucd1d \uc0c1\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tournaments (id INT, name VARCHAR(50), prize_pool INT); CREATE TABLE tournament_participation (id INT, tournament_id INT, player_id INT); INSERT INTO tournaments VALUES (1, 'Tournament1', 70000); INSERT INTO tournaments VALUES (2, 'Tournament2', 30000); INSERT INTO tournament_participation VALUES (1, 1, 1); INSERT INTO tournament_participation VALUES (2, 2, 2); INSERT INTO tournament_participation VALUES (3, 1, 3);", "output": "SELECT SUM(tournaments.prize_pool)  FROM tournaments  INNER JOIN tournament_participation ON tournaments.id = tournament_participation.tournament_id  INNER JOIN players ON tournament_participation.player_id = players.id  WHERE players.name = 'John Doe';"}
{"input": " \ucd9c\uc2dc \uc5f0\ub3c4\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc774 \uc778\uc6a9\ub41c \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE citation_data (application VARCHAR(255), year INT, citations INT); INSERT INTO citation_data (application, year, citations) VALUES ('App1', 2018, 50); INSERT INTO citation_data (application, year, citations) VALUES ('App2', 2019, 75); INSERT INTO citation_data (application, year, citations) VALUES ('App3', 2020, 60);", "output": "SELECT application, year, citations, RANK() OVER (PARTITION BY year ORDER BY citations DESC) as rank FROM citation_data ORDER BY year, citations DESC;"}
{"input": " 2020\ub144 1\ubd84\uae30\uc5d0 \uace0\uac08\ub41c \ucd1d \uc790\uc6d0\ub7c9\uc744 \ud655\uc778\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE resources_depleted (id INT, date DATE, resource VARCHAR(50), quantity INT); CREATE VIEW q1_2020 AS SELECT * FROM resources_depleted WHERE date BETWEEN '2020-01-01' AND '2020-03-31';", "output": "SELECT SUM(quantity) FROM q1_2020 WHERE resource = 'coal';"}
{"input": " \uc815\ucc45 \uc720\ud615 '\uac1c\uc778 \uc790\ub3d9'\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc815\ucc45 \uae30\ub85d\uc744 \uc815\ucc45 ID, \uc720\ud6a8 \ub0a0\uc9dc \ubc0f \uac01 \uc815\ucc45 \uc720\ud615 \uac12\uc5d0 \ub300\ud55c \uc5f4\uc5d0 \ub300\ud55c \ubcc4\ub3c4\uc758 \uc5f4\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policy (policy_id INT, policy_type VARCHAR(20), effective_date DATE); INSERT INTO policy VALUES (1, 'Personal Auto', '2018-01-01'); INSERT INTO policy VALUES (2, 'Personal Auto', '2020-01-01');", "output": "SELECT policy_id, effective_date, MAX(CASE WHEN policy_type = 'Personal Auto' THEN policy_type END) AS Personal_Auto, MAX(CASE WHEN policy_type = 'Commercial Auto' THEN policy_type END) AS Commercial_Auto FROM policy GROUP BY policy_id, effective_date;"}
{"input": " \ubaa8\ub4e0 \ub808\uc2a4\ud1a0\ub791\uc758 \uac01 \uc694\ub9ac \uc720\ud615\uc5d0 \ub300\ud55c \uc77c\uc77c \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_revenue (date DATE, restaurant_id INT, cuisine VARCHAR(255), revenue FLOAT); INSERT INTO daily_revenue VALUES ('2021-01-01', 1, 'Italian', 500), ('2021-01-02', 1, 'Mexican', 700), ('2021-01-03', 1, 'Italian', 600), ('2021-01-01', 2, 'Italian', 800), ('2021-01-02', 2, 'Chinese', 900), ('2021-01-03', 2, 'Chinese', 700);", "output": "SELECT cuisine, AVG(revenue) as avg_daily_revenue FROM daily_revenue GROUP BY cuisine;"}
{"input": " \ud55c \uc7a5\ub974\uc758 \ucd1d \ud50c\ub808\uc774 \uc218 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (artist_id INT, artist_name VARCHAR(255)); INSERT INTO Artists (artist_id, artist_name) VALUES (1, 'Artist1'), (2, 'Artist2'), (3, 'Artist3'); CREATE TABLE Genres (genre_id INT, genre_name VARCHAR(255)); INSERT INTO Genres (genre_id, genre_name) VALUES (1, 'Pop'), (2, 'Rock'); CREATE TABLE Plays (play_id INT, song_id INT, artist_id INT, genre_id INT); INSERT INTO Plays (play_id, song_id, artist_id, genre_id) VALUES (1, 1, 1, 1), (2, 2, 1, 1), (3, 3, 2, 2);", "output": "SELECT a.artist_name, g.genre_name, SUM(p.plays) AS total_plays FROM Artists a JOIN Plays p ON a.artist_id = p.artist_id JOIN Songs s ON p.song_id = s.song_id JOIN Albums al ON s.album_id = al.album_id JOIN Genres g ON al.genre_id = g.genre_id GROUP BY a.artist_name, g.genre_name ORDER BY total_plays DESC LIMIT 3;"}
{"input": " \uac01 \ud328\uc158 \ud2b8\ub80c\ub4dc\uc5d0 \ub530\ub77c \uc81c\uc870\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc6d0\ub2e8\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Manufacturing (id INT, fabric VARCHAR(20), trend VARCHAR(20), quantity INT); INSERT INTO Manufacturing (id, fabric, trend, quantity) VALUES (1, 'organic cotton', 'minimalism', 500), (2, 'recycled polyester', 'vintage', 700);", "output": "SELECT trend, SUM(quantity) FROM Manufacturing WHERE fabric LIKE '%sustainable%' GROUP BY trend;"}
{"input": "\uac01 \uad6d\uac00\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uc801\uc7ac \uc6a9\ub7c9\uc744 \ubcf4\uc720\ud55c \uc120\ubc15\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (VesselID int, VesselName varchar(50), VoyageID int, LoadCapacity int, CountryOfRegistry varchar(50)); INSERT INTO Vessels (VesselID, VesselName, VoyageID, LoadCapacity, CountryOfRegistry) VALUES (3, 'Marine Serpent', 103, 10000, 'Liberia'); INSERT INTO Vessels (VesselID, VesselName, VoyageID, LoadCapacity, CountryOfRegistry) VALUES (4, 'River Eagle', 104, 8000, 'Bahamas'); INSERT INTO Vessels (VesselID, VesselName, VoyageID, LoadCapacity, CountryOfRegistry) VALUES (5, 'Caribbean Tide', 105, 12000, 'Jamaica');", "output": "SELECT VesselName, LoadCapacity, RANK() OVER (PARTITION BY CountryOfRegistry ORDER BY LoadCapacity DESC) as Rank FROM Vessels WHERE LoadCapacity = (SELECT MAX(LoadCapacity) FROM Vessels v WHERE v.CountryOfRegistry = Vessels.CountryOfRegistry);"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc774\ub2c8\uc154\ud2f0\ube0c \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc778\ud504\ub77c\uc5d0 \uc911\uc810\uc744 \ub450\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE digital_divide_initiatives (initiative_id INT, region VARCHAR(20), type VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO digital_divide_initiatives (initiative_id, region, type, budget) VALUES (1, 'North America', 'education', 50000.00), (2, 'North America', 'infrastructure', 100000.00), (3, 'North America', 'policy', 75000.00), (4, 'South America', 'education', 25000.00);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM digital_divide_initiatives WHERE region = 'North America')) as percentage FROM digital_divide_initiatives WHERE region = 'North America' AND type = 'infrastructure';"}
{"input": " \uc804\ubd84\uae30 \ub300\ube44 \ub178\ub3d9\uc2dc\uac04\uc774 \uac10\uc18c\ud55c \ud504\ub85c\uc81d\ud2b8\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE project (project_id INT, quarter VARCHAR(10), region VARCHAR(20), labor_hours INT); INSERT INTO project VALUES (1, 'Q1', 'Northeast', 800); INSERT INTO project VALUES (1, 'Q2', 'Northeast', 700);", "output": "SELECT a.project_id, a.region, a.labor_hours, b.labor_hours as prev_quarter_labor_hours FROM project a JOIN project b ON a.project_id = b.project_id AND b.quarter = LEAD(a.quarter) OVER (PARTITION BY a.project_id ORDER BY a.quarter) WHERE a.region = 'Northeast' AND a.labor_hours < b.labor_hours;"}
{"input": " \uc8fc\ubcc4 \ucd5c\ucd08\uc758 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE HealthEquityMetrics (HEMId INT, Metric VARCHAR(255), State VARCHAR(50), MetricDate DATE); INSERT INTO HealthEquityMetrics (HEMId, Metric, State, MetricDate) VALUES (1, 'Health Equity Index', 'California', '2021-01-01'), (2, 'Equity Score', 'Texas', '2021-02-01'), (3, 'Health Equity Report', 'Florida', '2021-03-01'), (4, 'Health Equity Indicator', 'New York', '2021-04-01');", "output": "SELECT State, Metric, MetricDate FROM HealthEquityMetrics WHERE MetricDate = (SELECT MIN(MetricDate) FROM HealthEquityMetrics);"}
{"input": " 2021\ub144 \ub9e4\uc6d4 \uace0\uc6a9\ub41c \uc9c1\uc6d0 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE HiringDates (EmployeeID INT, HireDate DATE); INSERT INTO HiringDates (EmployeeID, HireDate) VALUES (1, '2021-02-15'), (2, '2021-05-01'), (3, '2020-11-01'), (4, '2021-01-10'), (5, '2022-03-15');", "output": "SELECT EXTRACT(MONTH FROM HireDate), COUNT(*) FROM HiringDates WHERE YEAR(HireDate) = 2021 GROUP BY EXTRACT(MONTH FROM HireDate);"}
{"input": " \uac01 \uae30\uad00\ubcc4 \uc6d0\uc815 \ud69f\uc218\ub294 \ucd1d \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE expedition (org VARCHAR(20), depth INT); INSERT INTO expedition VALUES ('Ocean Explorer', 2500), ('Ocean Explorer', 3000), ('Sea Discoverers', 2000), ('Marine Investigators', 4000), ('Marine Investigators', 4500);", "output": "SELECT org, COUNT(*) FROM expedition GROUP BY org;"}
{"input": " \uc568\ub77c\ubc30\ub9c8 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uc774\uc804 6\uac1c\uc6d4\uc5d0 \ube44\ud574 \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc758\ub8cc \ubc29\ubb38\uc774 \uc99d\uac00\ud55c \ud658\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE medical_visits (id INT, patient_id INT, visit_date DATE, rural_al BOOLEAN); INSERT INTO medical_visits (id, patient_id, visit_date, rural_al) VALUES (1, 1, '2019-06-01', true), (2, 1, '2019-07-01', true);", "output": "SELECT patient_id, COUNT(*) as last_6_months, LAG(COUNT(*)) OVER (PARTITION BY patient_id ORDER BY visit_date) as previous_6_months FROM medical_visits WHERE rural_al = true GROUP BY patient_id, visit_date HAVING last_6_months > previous_6_months;"}
{"input": " \ub9e4\ub144 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc6b0\uc8fc \uc784\ubb34\uac00 \uc131\uacf5\ud558\uace0 \uc2e4\ud328\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (year INT, result TEXT); INSERT INTO space_missions (year, result) VALUES (2015, 'Success'), (2015, 'Failure'), (2016, 'Success'), (2016, 'Success'), (2017, 'Failure'), (2017, 'Failure'), (2018, 'Success'), (2018, 'Success'), (2018, 'Success'), (2019, 'Failure');", "output": "SELECT year, SUM(CASE WHEN result = 'Success' THEN 1 ELSE 0 END) AS num_successes, SUM(CASE WHEN result = 'Failure' THEN 1 ELSE 0 END) AS num_failures FROM space_missions GROUP BY year;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uba54\ub274 \ud56d\ubaa9 \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubc1c\uc0dd\ud55c \uc218\uc775\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (sale_id INT, menu_item_id INT, sale_amount DECIMAL(10, 2), sale_date DATE); INSERT INTO sales VALUES (1, 1, 50.00, '2022-02-01'), (2, 2, 75.00, '2022-03-01'), (3, 3, 60.00, '2022-02-02'), (4, 1, 100.00, '2022-03-02'); CREATE TABLE menu_items (menu_item_id INT, category VARCHAR(255)); INSERT INTO menu_items VALUES (1, 'Entrees'), (2, 'Soups'), (3, 'Salads');", "output": "SELECT c1.category, SUM(s1.sale_amount) AS total_revenue FROM sales s1 INNER JOIN menu_items m1 ON s1.menu_item_id = m1.menu_item_id INNER JOIN (SELECT menu_item_id, category FROM menu_items EXCEPT SELECT menu_item_id, category FROM menu_items WHERE menu_item_id NOT IN (SELECT menu_item_id FROM sales)) c1 ON m1.menu_item_id = c1.menu_item_id WHERE s1.sale_date > DATEADD(day, -30, GETDATE()) GROUP BY c1.category;"}
{"input": "\uc720\ub7fd \uc2dc\uc7a5\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ube44\uac74 \uc81c\ud488\uc774 \ud310\ub9e4\ub418\ub098\uc694?", "context": "CREATE TABLE products (product_id INT, vegan BOOLEAN, region TEXT); INSERT INTO products (product_id, vegan, region) VALUES (1, true, 'Europe'), (2, false, 'North America'), (3, true, 'Asia');", "output": "SELECT COUNT(*) FROM products WHERE vegan = true AND region = 'Europe';"}
{"input": " \uac01 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc8fc\uc18c\uc758 \ucd5c\uc2e0 \uac70\ub798 \ub0a0\uc9dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE transactions (address TEXT, tx_date DATE); INSERT INTO transactions (address, tx_date) VALUES ('0x123', '2021-01-01'), ('0x123', '2021-01-02'), ('0x456', '2021-01-03');", "output": "SELECT address, MAX(tx_date) AS latest_tx_date FROM transactions GROUP BY address;"}
{"input": " \uac01 \uacf5\uae09\uc5c5\uccb4\uc758 \ud3c9\uade0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE supplier_scores (supplier_id INT, score INT); INSERT INTO supplier_scores (supplier_id, score) VALUES (1, 85); INSERT INTO supplier_scores (supplier_id, score) VALUES (2, 92); INSERT INTO supplier_scores (supplier_id, score) VALUES (3, 78);", "output": "SELECT AVG(score) as avg_score FROM supplier_scores;"}
{"input": " \uc774\uc804 \uae30\ub85d\uc758 \uc694\uae08\uacfc \ud568\uaed8 \uac01 \ub178\uc120\uc758 \ud3c9\uade0 \uc694\uae08\uacfc \ud574\ub2f9 \ud1b5\ud654\ub294 \uc694\uae08 \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE fares (fare_id INT, route_id INT, fare FLOAT, fare_currency VARCHAR(3), fare_date DATE); INSERT INTO fares (fare_id, route_id, fare, fare_currency, fare_date) VALUES (1, 1, 3.0, 'USD', '2022-05-01'), (2, 2, 4.0, 'USD', '2022-05-02'), (3, 1, 3.5, 'USD', '2022-05-03');", "output": "SELECT route_id, fare, fare_currency, fare_date, LAG(fare) OVER (PARTITION BY route_id ORDER BY fare_date) as prev_fare FROM fares;"}
{"input": " \uac01 \uad6c\uc5ed\ubcc4 \uacbd\ucc30\uad00\uacfc \uc18c\ubc29\uad00\uc758 \uad50\ub300 \uadfc\ubb34 \uc778\uc6d0\uc740 \ubaa8\ub450 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (did INT, name VARCHAR(50), PRIMARY KEY(did)); CREATE TABLE shifts (sid INT, start_time TIME, end_time TIME, PRIMARY KEY(sid)); CREATE TABLE district_personnel (pid INT, did INT, position ENUM('police_officer', 'firefighter'), sid INT, PRIMARY KEY(pid), FOREIGN KEY (did) REFERENCES districts(did), FOREIGN KEY (sid) REFERENCES shifts(sid));", "output": "SELECT d.name, s.sid, SUM(IF(dp.position = 'police_officer', 1, 0)) as num_police_officers, SUM(IF(dp.position = 'firefighter', 1, 0)) as num_firefighters FROM districts d JOIN district_personnel dp ON d.did = dp.did JOIN shifts s ON dp.sid = s.sid GROUP BY d.name, s.sid;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc6cc\uc2f1\ud134 \uc8fc\uc5d0\uc11c \uacf5\uad50\uc721\uc5d0 \uc9c0\ucd9c\ud55c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_education_spending (state VARCHAR(255), education_spending DECIMAL(10,2), spending_date DATE); INSERT INTO state_education_spending (state, education_spending, spending_date) VALUES ('Washington', 10000, '2022-01-01'), ('Washington', 12000, '2021-01-01'), ('Washington', 11000, '2020-01-01');", "output": "SELECT SUM(education_spending) FROM state_education_spending WHERE state = 'Washington' AND spending_date >= DATEADD(year, -5, GETDATE());"}
{"input": "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ud5c8\uac00 2021-003 \uc81c\uac70", "context": "CREATE TABLE building_permits (permit_number TEXT, contractor TEXT); INSERT INTO building_permits (permit_number, contractor) VALUES ('2021-003', 'Contractor B');", "output": "WITH cte AS (DELETE FROM building_permits WHERE permit_number = '2021-003') SELECT * FROM cte;"}
{"input": " NYC \uc9c0\uc5ed \uc0ac\ubb34\uc18c\uc5d0\ub294 \uba87 \uba85\uc758 \uad11\ub300\uc5ed \uace0\uac1d\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE broadband_subscribers (subscriber_id INT, regional_office VARCHAR(20)); INSERT INTO broadband_subscribers (subscriber_id, regional_office) VALUES (1, 'Boston'), (2, 'Boston'), (3, 'NYC'), (4, 'NYC'), (5, 'NYC');", "output": "SELECT COUNT(*) FROM broadband_subscribers WHERE regional_office = 'NYC';"}
{"input": " \ub7f0\ub358 \ubbf8\uc220 \uc804\uc2dc\ud68c\uc758 \ucd5c\uc18c \ud2f0\ucf13 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Exhibits (exhibit_id INT, city VARCHAR(50), price DECIMAL(5,2)); INSERT INTO Exhibits (exhibit_id, city, price) VALUES (1, 'London', 35.99), (2, 'Berlin', 40.00);", "output": "SELECT MIN(price) FROM Exhibits WHERE city = 'London';"}
{"input": " \uc9c0\ub09c \ud574 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\uc11c \uc804\ubb38\uc131 \uac1c\ubc1c \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uad50\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE states (state_name VARCHAR(255), state_id INT); INSERT INTO states (state_name, state_id) VALUES ('California', 1); CREATE TABLE schools (school_name VARCHAR(255), state_id INT, PRIMARY KEY (school_name, state_id)); CREATE TABLE teachers (teacher_id INT, teacher_age INT, school_name VARCHAR(255), state_id INT, PRIMARY KEY (teacher_id), FOREIGN KEY (school_name, state_id) REFERENCES schools(school_name, state_id)); CREATE TABLE professional_development (pd_id INT, teacher_id INT, pd_date DATE, PRIMARY KEY (pd_id), FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id));", "output": "SELECT AVG(teachers.teacher_age) FROM teachers INNER JOIN professional_development ON teachers.teacher_id = professional_development.teacher_id INNER JOIN schools ON teachers.school_name = schools.school_name WHERE schools.state_id = 1 AND professional_development.pd_date >= DATEADD(year, -1, GETDATE());"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc774\uc9d1\ud2b8\uc758 \ud3c9\uade0 \uacbd\uc81c \ub2e4\uac01\ud654 \uc9c4\ud589 \uc0c1\ud669\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE economic_diversification (id INT, country VARCHAR(50), year INT, progress DECIMAL(5,2)); INSERT INTO economic_diversification (id, country, year, progress) VALUES (1, 'Egypt', 2019, 45.60), (2, 'Egypt', 2020, 48.20), (3, 'Egypt', 2021, 52.10);", "output": "SELECT AVG(progress) FROM economic_diversification WHERE country = 'Egypt' AND year BETWEEN (SELECT YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE);"}
{"input": " \uc131\ubcc4\uc5d0 \ub530\ub978 \ucd1d \uc9c1\uc6d0 \uc218\uc640 \uad6c\uc9c1\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10)); INSERT INTO Employees (EmployeeID, Gender) VALUES (1, 'Male'), (2, 'Female'), (3, 'Non-binary'); CREATE TABLE Applicants (ApplicantID INT, Gender VARCHAR(10)); INSERT INTO Applicants (ApplicantID, Gender) VALUES (1, 'Male'), (2, 'Female'), (3, 'Transgender'), (4, 'Non-binary');", "output": "SELECT 'Employees' AS source, Gender, COUNT(*) as total FROM Employees GROUP BY Gender UNION ALL SELECT 'Applicants', Gender, COUNT(*) FROM Applicants GROUP BY Gender;"}
{"input": " \uacf5\ud559\uacc4\uc5f4 \ub300\ud559\uc6d0\uc0dd \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc720\ud559\uc0dd\uc778\uac00\uc694?", "context": "CREATE TABLE graduate_students (id INT, student_name VARCHAR(255), department VARCHAR(255), is_international BOOLEAN); INSERT INTO graduate_students (id, student_name, department, is_international) VALUES (1, 'Student1', 'Engineering', true), (2, 'Student2', 'Engineering', false), (3, 'Student3', 'Engineering', true), (4, 'Student4', 'Mathematics', false), (5, 'Student5', 'Mathematics', false);", "output": "SELECT (COUNT(*) FILTER (WHERE is_international = true)) * 100.0 / COUNT(*) as percentage FROM graduate_students WHERE department = 'Engineering';"}
{"input": " \uac01 \uae30\ubd80\uc790\uac00 \ubb38\ud654\uc608\uc220 \ubd84\uc57c\uc5d0 \uae30\ubd80\ud55c \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL, Sector TEXT);", "output": "SELECT DonorID, SUM(DonationAmount) OVER (PARTITION BY DonorID ORDER BY SUM(DonationAmount) DESC) AS TotalDonation FROM Donations WHERE Sector = 'Arts and Culture';"}
{"input": "\ubd81\uadf9\uc5d0\uc11c \ubaa9\uaca9 \ud69f\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc885\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc885\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE species_count (id INT, species_name VARCHAR, biome VARCHAR, animal_count INT);", "output": "SELECT species_name, animal_count FROM (SELECT species_name, biome, animal_count, RANK() OVER (PARTITION BY biome ORDER BY animal_count DESC, species_name ASC) as rank FROM species_count WHERE biome = 'Arctic') as subquery WHERE rank IN (1, (SELECT COUNT(DISTINCT species_name) FROM species_count WHERE biome = 'Arctic'));"}
{"input": " \ud658\uc728\uc774 1.3\uc77c \ub54c \ud1a0\ub860\ud1a0\uc5d0\uc11c \uce90\ub098\ub2e4 \uad00\uad11\uac1d\uc758 \ucd1d \uc9c0\ucd9c\uc744 \uce90\ub098\ub2e4 \ub2ec\ub7ec\ub85c \uad6c\ud574 \ubcf4\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE tourism_stats (visitor_country VARCHAR(20), destination VARCHAR(20), expenditure DECIMAL(10,2)); CREATE TABLE exchange_rates (country VARCHAR(20), currency VARCHAR(10), rate DECIMAL(10,2)); INSERT INTO exchange_rates (country, currency, rate) VALUES ('Canada', 'CAD', 1.0), ('Canada', 'USD', 1.3);", "output": "SELECT SUM(expenditure * (SELECT rate FROM exchange_rates WHERE country = 'Canada' AND currency = 'CAD')) FROM tourism_stats WHERE visitor_country = 'Canada' AND destination = 'Toronto';"}
{"input": " \ubca0\uc774\uc9d5\uacfc \uc0c1\ud558\uc774\uc758 \ud604\uc7ac \ub9e4\ub9bd \uc6a9\ub7c9\uacfc \uc9c0\ub09c 3\ub144 \ub3d9\uc548 \ub9e4\ub9bd\ub41c \ud3d0\uae30\ubb3c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?'", "context": "CREATE TABLE landfill_capacity_china(city VARCHAR(20), capacity INT); INSERT INTO landfill_capacity_china VALUES ('Beijing', 600000), ('Shanghai', 700000); CREATE TABLE landfill_waste(city VARCHAR(20), year INT, waste_disposed INT); INSERT INTO landfill_waste VALUES ('Beijing', 2019, 30000), ('Beijing', 2020, 32000), ('Beijing', 2021, 34000), ('Shanghai', 2019, 35000), ('Shanghai', 2020, 37000), ('Shanghai', 2021, 39000);", "output": "SELECT city, AVG(waste_disposed/capacity*100) FROM (SELECT city, year, SUM(waste_disposed) AS waste_disposed FROM landfill_waste GROUP BY city, year) landfill_waste, landfill_capacity_china WHERE landfill_waste.city = landfill_capacity_china.city GROUP BY city;"}
{"input": " \uad6d\uac00\ubcc4 \ucd1d \ud654\ubb3c\ub7c9\uc744 \uac00\uc7a5 \ub192\uc740 \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Port (PortID INT, PortName VARCHAR(100), City VARCHAR(100), Country VARCHAR(100)); INSERT INTO Port (PortID, PortName, City, Country) VALUES (1, 'Port of Los Angeles', 'Los Angeles', 'USA'); INSERT INTO Port (PortID, PortName, City, Country) VALUES (2, 'Port of Rotterdam', 'Rotterdam', 'Netherlands'); CREATE TABLE Cargo (CargoID INT, CargoName VARCHAR(100), PortID INT, Weight INT, Volume INT); INSERT INTO Cargo (CargoID, CargoName, PortID, Weight, Volume) VALUES (1, 'Container 1', 1, 15000, 5000); INSERT INTO Cargo (CargoID, CargoName, PortID, Weight, Volume) VALUES (2, 'Container 2', 2, 18000, 5500);", "output": "SELECT Country, SUM(Volume) OVER(PARTITION BY Country ORDER BY Country) AS TotalVolume FROM Cargo ORDER BY TotalVolume DESC"}
{"input": " \uac01 \uad00\uce21\uc18c\uc758 \uc9c0\ub09c 5\ub144\uac04 \ud3c9\uade0 \uc774\uc0b0\ud654\ud0c4\uc18c \ub18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MonitoringStation (ID INT, Name VARCHAR(100), Location VARCHAR(100), Elevation FLOAT, AnnualCO2 FLOAT); INSERT INTO MonitoringStation (ID, Name, Location, Elevation, AnnualCO2) VALUES (1, 'Station C', 'Svalbard', 150, 420); INSERT INTO MonitoringStation (ID, Name, Location, Elevation, AnnualCO2) VALUES (2, 'Station D', 'Greenland', 250, 450);", "output": "SELECT Name, AVG(AnnualCO2) OVER (PARTITION BY Name ORDER BY Name ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS AvgAnnualCO2 FROM MonitoringStation WHERE YEAR(CurrentDate) - YEAR(DateInstalled) BETWEEN 1 AND 5;"}
{"input": "\ud604\uc7ac \uc778\ub3c4 \ubb44\ubc14\uc774\uc758 \ub9e4\ub9bd \uc6a9\ub7c9\uacfc 2030\ub144 \uc608\uc0c1 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE landfill_capacity (city VARCHAR(20), current_capacity INT, projected_capacity INT); INSERT INTO landfill_capacity (city, current_capacity, projected_capacity) VALUES ('Mumbai', 5000, 7000);", "output": "SELECT current_capacity as current_landfill_capacity, projected_capacity as projected_landfill_capacity FROM landfill_capacity WHERE city = 'Mumbai';"}
{"input": " 2019\ub144 1\ubd84\uae30\ubd80\ud130 2019\ub144 2\ubd84\uae30\uae4c\uc9c0 \uc720\ub85c\ubbb4\uc758 \uc6d4 \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (id INT, element TEXT, month INT, year INT, quantity INT);", "output": "SELECT ((Q2_avg - Q1_avg) / Q1_avg) * 100 as percentage_change FROM (SELECT AVG(quantity) as Q1_avg FROM production WHERE element = 'Europium' AND month BETWEEN 1 AND 3 AND year = 2019) q1, (SELECT AVG(quantity) as Q2_avg FROM production WHERE element = 'Europium' AND month BETWEEN 4 AND 6 AND year = 2019) q2;"}
{"input": " \uce90\ub098\ub2e4\uc758 \ucd1d \uacf5\uacf5\ub3c4\uc11c\uad00 \uc218\ub294 \uba87 \uac1c\uc774\uba70, \uadf8 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE libraries (name VARCHAR(255), country VARCHAR(255), num_books INT); INSERT INTO libraries (name, country, num_books) VALUES ('Toronto Public Library', 'Canada', 1000000), ('Vancouver Public Library', 'Canada', 2000000);", "output": "SELECT SUM(num_books) FROM libraries WHERE country = 'Canada'; SELECT name FROM libraries WHERE country = 'Canada';"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \ub9e4\uc8fc \ucd5c\ub300 \ucf54\ub85c\ub09819 \uc9c4\ub2e8\uc744 \ubc1b\ub294 \ud658\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Patients (ID INT, Disease VARCHAR(20), DiagnosisDate DATE, State VARCHAR(20)); INSERT INTO Patients (ID, Disease, DiagnosisDate, State) VALUES (1, 'COVID-19', '2022-01-01', 'California'), (2, 'COVID-19', '2022-01-05', 'California');", "output": "SELECT State, MAX(CountPerWeek) AS MaxCountPerWeek FROM (SELECT State, DATEPART(WEEK, DiagnosisDate) AS WeekNumber, COUNT(*) AS CountPerWeek FROM Patients WHERE Disease = 'COVID-19' GROUP BY State, WeekNumber) AS Subquery GROUP BY State;"}
{"input": "\ud638\uc8fc \uc2dc\ub4dc\ub2c8\uc758 'Farm Fresh Organics'\uc5d0\uc11c \uc720\uae30\ub18d \uc81c\ud488\uc744 \uad6c\ub9e4\ud55c \uace0\uc720 \uace0\uac1d \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, name TEXT, email TEXT); INSERT INTO customers (customer_id, name, email) VALUES (1, 'John Doe', '[john.doe@gmail.com](mailto:john.doe@gmail.com)'), (2, 'Jane Smith', '[jane.smith@yahoo.com](mailto:jane.smith@yahoo.com)'); CREATE TABLE orders (order_id INT, customer_id INT, supplier_id INT, order_date DATE); INSERT INTO orders (order_id, customer_id, supplier_id, order_date) VALUES (1, 1, 1, '2021-05-01'), (2, 1, 1, '2021-06-15'), (3, 2, 1, '2021-07-20'); CREATE TABLE organic_products (product_id INT, name TEXT, supplier_id INT, organic BOOLEAN); INSERT INTO organic_products (product_id, name, supplier_id, organic) VALUES (1, 'Organic Apples', 1, true), (2, 'Free-Range Eggs', 1, true), (3, 'Regular Apples', 1, false); CREATE TABLE suppliers (supplier_id INT, name TEXT, city TEXT); INSERT INTO suppliers (supplier_id, name, city) VALUES (1, 'Farm Fresh Organics', 'Sydney');", "output": "SELECT COUNT(DISTINCT customers.customer_id) FROM customers JOIN orders ON customers.customer_id = orders.customer_id JOIN organic_products ON orders.supplier_id = organic_products.supplier_id JOIN suppliers ON orders.supplier_id = suppliers.supplier_id WHERE suppliers.name = 'Farm Fresh Organics' AND organic_products.organic = true;"}
{"input": " \"GreenTech \uc194\ub8e8\uc158\"\uc5d0 \ub300\ud55c \ud601\uc2e0 \ucd94\uc138 \"\uc7ac\uc0dd \uc5d0\ub108\uc9c0\uc758 \uc778\uacf5 \uc9c0\ub2a5\"\uc758 \uc601\ud5a5\uc744 0.75\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE innovation (id INT PRIMARY KEY AUTO_INCREMENT, company_id INT, trend VARCHAR(255), impact FLOAT, innovation_date DATE);", "output": "UPDATE innovation SET impact = 0.75 WHERE trend = 'Artificial Intelligence in Renewable Energy' AND company_id IN (SELECT id FROM company WHERE name = 'GreenTech Solutions');"}
{"input": " \uac01 \uad6d\uac00\uac00 \ucc38\uc5ec\ud558\ub294 \ucd5c\uc18c \ud3c9\ud654\uc720\uc9c0 \ud65c\ub3d9 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CountryParticipation (id INT, country VARCHAR(50), num_operations INT);", "output": "SELECT country, MIN(num_operations) FROM CountryParticipation GROUP BY country;"}
{"input": " \ud5ec\uc2a4\ucf00\uc5b4 \ubd80\ubb38\uc5d0\uc11c \ubcf4\uace0\ub41c AI \uc548\uc804\uc0ac\uace0 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ub2e8\uc77c \uc0ac\uac74 \uc720\ud615\ubcc4\ub85c \ubcf4\uace0\ub41c \ucd5c\ub300 \uc0ac\uace0 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE AISafety (id INT, incident_sector VARCHAR(50), incident_type VARCHAR(50)); INSERT INTO AISafety (id, incident_sector, incident_type) VALUES (1, 'Healthcare', 'Data Privacy'), (2, 'Healthcare', 'Medical Error'), (3, 'Finance', 'Financial Loss'), (4, 'Healthcare', 'Unintended Consequence'), (5, 'Healthcare', 'System Failure');", "output": "SELECT incident_sector, COUNT(incident_type) as incident_count FROM AISafety WHERE incident_sector = 'Healthcare' GROUP BY incident_sector; SELECT MAX(incident_count) as max_incidents FROM (SELECT incident_sector, COUNT(incident_type) as incident_count FROM AISafety WHERE incident_sector = 'Healthcare' GROUP BY incident_sector) as subquery;"}
{"input": " '\ube0c\ub871\ud06c\uc2a4' \ucd9c\ud1f4\uadfc \uc2dc\uac04 \ub3d9\uc548 \uae34\uae09 \uc804\ud654 \uac74\uc218\ub294 \ucd1d \uba87 \ud1b5\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emergencies (id INT, hour INT, neighborhood VARCHAR(20), response_time FLOAT); INSERT INTO emergencies (id, hour, neighborhood, response_time) VALUES (1, 8, 'Bronx', 12.5), (2, 17, 'Bronx', 9.3), (3, 17, 'Downtown', 10.1), (4, 17, 'Bronx', 11.8), (5, 8, 'Bronx', 13.9);", "output": "SELECT COUNT(*) FROM emergencies WHERE neighborhood = 'Bronx' AND hour IN (7, 8, 16, 17, 18);"}
{"input": " 2021\ub144 \uac01 \uc81c\uc870 \uc2dc\uc124\uc758 \uc6d4\ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE co2_emissions (facility_id INT, facility_name VARCHAR(255), emission_date DATE, co2_emission DECIMAL(10,2)); INSERT INTO co2_emissions (facility_id, facility_name, emission_date, co2_emission) VALUES (1, 'Facility A', '2021-01-01', 500.00), (2, 'Facility B', '2021-02-01', 700.00), (3, 'Facility C', '2021-03-01', 800.00);", "output": "SELECT facility_name, AVG(co2_emission) as avg_monthly_emission FROM co2_emissions WHERE emission_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY facility_name;"}
{"input": " \uac01 \ubd80\ubb38\ubcc4 \uc9c0\uc18d\uac00\ub2a5 \ud22c\uc790 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_investments (id INT, sector VARCHAR(255), sustainable BOOLEAN); INSERT INTO sustainable_investments (id, sector, sustainable) VALUES (1, 'Education', TRUE), (2, 'Healthcare', FALSE), (3, 'Education', TRUE), (4, 'Technology', TRUE);", "output": "SELECT sector, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () FROM sustainable_investments GROUP BY sector;"}
{"input": " \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uc8fc\uc758 1\uc778\ub2f9 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_water_usage (state_name TEXT, total_water_consumption INTEGER, population INTEGER); INSERT INTO state_water_usage (state_name, total_water_consumption, population) VALUES ('California', 10000, 40000000), ('Texas', 8000, 30000000), ('Florida', 7000, 22000000), ('New York', 6000, 20000000), ('Pennsylvania', 5000, 13000000);", "output": "SELECT AVG(total_water_consumption/population) FROM (SELECT state_name, total_water_consumption, population, ROW_NUMBER() OVER (ORDER BY total_water_consumption DESC) rn FROM state_water_usage) t WHERE rn <= 5;"}
{"input": " \uac00\uc0c1 \ud22c\uc5b4\ub97c \uc81c\uacf5\ud558\ub294 \ubb38\ud654\uc720\uc0b0\uc774 \uc5c6\ub294 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CulturalHeritageSites (site_id INT, site_name TEXT, country TEXT, has_virtual_tour BOOLEAN); INSERT INTO CulturalHeritageSites (site_id, site_name, country, has_virtual_tour) VALUES (1, 'Site A', 'Germany', TRUE), (2, 'Site B', 'Italy', FALSE), (3, 'Site C', 'Greece', TRUE);", "output": "SELECT country FROM CulturalHeritageSites WHERE has_virtual_tour = FALSE GROUP BY country HAVING COUNT(*) = 0;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc548\uc804 \uad50\uc721\uc744 \ubc1b\uc9c0 \uc54a\uc740 \uadfc\ub85c\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE workers (id INT, name VARCHAR(255), last_safety_training_date DATE);", "output": "SELECT workers.name FROM workers WHERE workers.last_safety_training_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " \ub308\ub7ec\uc2a4\uc758 5\ub144\uac04 \ubc94\uc8c4 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE crime_trend (id INT, crime VARCHAR(20), city VARCHAR(20), year INT, count INT); INSERT INTO crime_trend (id, crime, city, year, count) VALUES (1, 'Murder', 'Dallas', 2016, 120), (2, 'Robbery', 'Dallas', 2016, 350), (3, 'Assault', 'Dallas', 2016, 600), (4, 'Murder', 'Dallas', 2017, 130), (5, 'Robbery', 'Dallas', 2017, 360), (6, 'Assault', 'Dallas', 2017, 610), (7, 'Murder', 'Dallas', 2018, 140), (8, 'Robbery', 'Dallas', 2018, 370), (9, 'Assault', 'Dallas', 2018, 620), (10, 'Murder', 'Dallas', 2019, 150), (11, 'Robbery', 'Dallas', 2019, 380), (12, 'Assault', 'Dallas', 2019, 630);", "output": "SELECT year, (count - LAG(count, 1) OVER (ORDER BY year)) as trend FROM crime_trend WHERE city = 'Dallas';"}
{"input": " \ud68c\uc0ac\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ub124\ud2b8\uc6cc\ud06c \uae30\uc220\uc5d0 \ud22c\uc790\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE tech_investments (id INT, network_tech VARCHAR(30)); INSERT INTO tech_investments (id, network_tech) VALUES (1, '5G');", "output": "SELECT COUNT(*) FROM tech_investments;"}
{"input": " 2022\ub144 8\uc6d4 NY \uc9c4\ub8cc\uc18c\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \ud310\ub9e4 \uae30\ub85d\uc744 10\uc5d0\uc11c 50 \uc0ac\uc774\uc758 \ubb34\uc791\uc704 \uc218\ub7c9\uc73c\ub85c \uc0bd\uc785\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, dispensary_id INT, quantity INT, month TEXT, year INT); INSERT INTO sales (id, dispensary_id, quantity, month, year) VALUES (1, 1, 25, 'August', 2022), (2, 2, 30, 'August', 2022); CREATE TABLE dispensaries (id INT, name TEXT, state TEXT); INSERT INTO dispensaries (id, name, state) VALUES (1, 'Dispensary A', 'New York'), (2, 'Dispensary B', 'New York');", "output": "INSERT INTO sales (dispensary_id, quantity, month, year) SELECT d.id, FLOOR(RAND() * 41 + 10), 'August', 2022 FROM dispensaries d WHERE d.state = 'New York' AND NOT EXISTS (SELECT 1 FROM sales s WHERE s.dispensary_id = d.id AND s.month = 'August' AND s.year = 2022);"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc131\ubcc4\ubcc4 \uae30\ubd80\uae08 \ucd1d\uc561\uc740 \uba87 \ud37c\uc13c\ud2b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(255), country VARCHAR(255), gender VARCHAR(10));CREATE TABLE donations (id INT, donor_id INT, cause_id INT, amount DECIMAL(10, 2), donation_date DATE);", "output": "SELECT dn.gender, (SUM(d.amount) / (SELECT SUM(amount) FROM donations d INNER JOIN donors dn ON d.donor_id = dn.id WHERE d.donation_date >= DATE_SUB(NOW(), INTERVAL 3 YEAR)) * 100) AS percentage FROM donations d INNER JOIN donors dn ON d.donor_id = dn.id WHERE d.donation_date >= DATE_SUB(NOW(), INTERVAL 3 YEAR) GROUP BY dn.gender;"}
{"input": " \ub9e4\ub144 \ucd1d \uba87 \uac1c\uc758 \uc704\uc131\uc774 \ubc1c\uc0ac\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE satellite_launches (year INT, satellite_name VARCHAR(50), country VARCHAR(50)); INSERT INTO satellite_launches (year, satellite_name, country) VALUES (2015, 'Kalamsat', 'India'), (2017, 'PSLV-C37', 'India'), (2018, 'PSLV-C42', 'India'), (2018, 'PSLV-C43', 'India'), (2019, 'PSLV-C45', 'India'), (2020, 'PSLV-C46', 'India'), (2021, 'PSLV-C51', 'India');", "output": "SELECT year, COUNT(satellite_name) OVER (PARTITION BY year ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS running_total FROM satellite_launches;"}
{"input": " \uc21c\ud658 \uacbd\uc81c\uc5d0\uc11c \uc778\ub825 \uac1c\ubc1c \uad50\uc721\uc744 \uc774\uc218\ud55c \uac01 \uad6d\uac00\uc758 \uadfc\ub85c\uc790 \uc218\ub97c \ud574\ub2f9 \uad6d\uac00\uc758 \uc774\ub984\uacfc \ud568\uaed8 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE countries (id INT, country VARCHAR(50)); CREATE TABLE workers (id INT, name VARCHAR(50), country VARCHAR(50), training VARCHAR(50)); INSERT INTO countries (id, country) VALUES (1, 'USA'), (2, 'China'), (3, 'Germany'), (4, 'Mexico'); INSERT INTO workers (id, name, country, training) VALUES (1, 'Tom', 'USA', 'Composting'), (2, 'Jin', 'China', 'Recycling'), (3, 'Heidi', 'Germany', 'Upcycling'), (4, 'Pedro', 'Mexico', 'Waste Reduction'), (5, 'Anna', 'USA', 'Recycling'), (6, 'Li', 'China', 'Composting'), (7, 'Karl', 'Germany', 'Waste Reduction'), (8, 'Carlos', 'Mexico', 'Upcycling');", "output": "SELECT w.country, COUNT(*) as count FROM workers w INNER JOIN countries c ON w.country = c.country INNER JOIN circular_economy ce ON w.training = ce.training GROUP BY w.country;"}
{"input": " \uc18c\ub9e4 \ubd80\ubb38\uc5d0\uc11c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc720\ud615\uc758 \uc0ac\uc774\ubc84 \uacf5\uaca9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attacks (attack_id INT, attack_type VARCHAR(255), attack_sector VARCHAR(255)); CREATE VIEW retail_sector_attacks AS SELECT * FROM attacks WHERE attack_sector = 'Retail';", "output": "SELECT attack_type, COUNT(*) as count FROM retail_sector_attacks GROUP BY attack_type ORDER BY count DESC;"}
{"input": " \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \uc9c0\uc5ed \uc870\uc9c1\uc774 \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud55c \uae30\uc220\uc5d0 \uc804\ub150\ud558\ub294 \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Organizations (id INT, name TEXT, region TEXT, budget_social_good FLOAT); INSERT INTO Organizations (id, name, region, budget_social_good) VALUES (1, 'Tech4Good', 'Latin America', 700000), (2, 'SocialImpactLab', 'Latin America', 500000), (3, 'GreenInnovations', 'North America', 900000), (4, 'CommunityTech', 'Europe', 800000), (5, 'TechForAll', 'Latin America', 600000);", "output": "SELECT MIN(budget_social_good) FROM Organizations WHERE region = 'Latin America';"}
{"input": " 'H'\ub85c \uc2dc\uc791\ud558\ub294 \uc7a5\ube44 \uc720\ud615\uc5d0 \ub300\ud574 \uc6b0\uc120\uc21c\uc704\ubcc4\ub85c \ubd84\ub958\ub41c \uad70\uc7a5\ube44 \uc720\uc9c0\ubcf4\uc218 \uc694\uccad\uc758 \ucd1d \uac1c\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE equipment_maintenance (request_id INT, priority INT, equipment_type VARCHAR(50)); INSERT INTO equipment_maintenance (request_id, priority, equipment_type) VALUES (1, 4, 'M1 Abrams'), (2, 5, 'HMMWV'), (3, 3, 'CH-47 Chinook');", "output": "SELECT priority, COUNT(*) as num_requests FROM equipment_maintenance WHERE equipment_type LIKE 'H%' GROUP BY priority;"}
{"input": " \ud654\uc131\uc5d0 \ub2e4\ub140\uc628 \ubaa8\ub4e0 \uc6b0\uc8fc\uc120\uc758 \uace0\uc720\ud55c \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE spacecrafts (spacecraft_id INT, name VARCHAR(100), destination VARCHAR(50)); INSERT INTO spacecrafts (spacecraft_id, name, destination) VALUES (1, 'Mariner 4', 'Mars'), (2, 'Viking 1', 'Mars'), (3, 'Mars Pathfinder', 'Mars'), (4, 'Mars Global Surveyor', 'Mars'), (5, 'Mars Reconnaissance Orbiter', 'Mars'), (6, 'Phoenix', 'Mars');", "output": "SELECT DISTINCT name FROM spacecrafts WHERE destination = 'Mars';"}
{"input": " Jane Smith \ubcc0\ud638\uc0ac\uc758 \uc2b9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50)); INSERT INTO attorneys (attorney_id, name) VALUES (1, 'Jane Smith'); CREATE TABLE cases (case_id INT, attorney_id INT, outcome VARCHAR(10)); INSERT INTO cases (case_id, attorney_id, outcome) VALUES (1, 1, 'Win'), (2, 1, 'Loss');", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cases WHERE attorney_id = 1) AS win_rate FROM cases WHERE attorney_id = 1 AND outcome = 'Win';"}
{"input": " 2022\ub144 6\uc6d4\uc744 \uae30\uc900\uc73c\ub85c \uba55\uc2dc\ucf54\uc2dc\ud2f0\uc758 \uba55\uc2dc\ucf54 \uc694\ub9ac \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uc12c\uc720\uc9c8 \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac00\uc9c0 \uc694\ub9ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE dishes (restaurant_name TEXT, cuisine TEXT, dish TEXT, fiber INTEGER, dish_date DATE); INSERT INTO dishes (restaurant_name, cuisine, dish, fiber, dish_date) VALUES ('Mexico City Tacos', 'Mexican', 'Chicken Fajita Tacos', 8, '2022-06-01');", "output": "SELECT dish, fiber FROM (SELECT dish, fiber, ROW_NUMBER() OVER (PARTITION BY dish_date ORDER BY fiber DESC) as rn FROM dishes WHERE restaurant_name LIKE 'Mexico City%' AND cuisine = 'Mexican' AND dish_date >= '2022-06-01' AND dish_date < '2022-07-01') t WHERE rn <= 2;"}
{"input": " 2021\ub144 3\uc6d4 \uccab\uc9f8 \uc8fc\uc5d0 \ubc84\uc2a4 \ubc88\ud638\ubcc4 \ucd5c\ub300 \uc77c\uc77c \uc694\uae08 \uc9d5\uc218\uc561\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE SCHEMA trans schemas.trans; CREATE TABLE max_daily_bus_fares (bus_number INT, fare FLOAT, fare_date DATE); INSERT INTO max_daily_bus_fares (bus_number, fare, fare_date) VALUES (2101, 15.50, '2021-03-01'), (2101, 16.25, '2021-03-02'), (2101, 14.75, '2021-03-03'), (2101, 17.00, '2021-03-04'), (2101, 18.50, '2021-03-05'), (2102, 19.25, '2021-03-01'), (2102, 20.00, '2021-03-02'), (2102, 22.00, '2021-03-03'), (2102, 21.50, '2021-03-04'), (2102, 23.00, '2021-03-05');", "output": "SELECT bus_number, MAX(fare) OVER (PARTITION BY bus_number) FROM max_daily_bus_fares WHERE fare_date BETWEEN '2021-03-01' AND '2021-03-05';"}
{"input": " \ubd80\uc11c\ubcc4 \uc774\uc9c1\ub960\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE terminations (id INT, employee_id INT, department_id INT, termination_date DATE); INSERT INTO terminations (id, employee_id, department_id, termination_date) VALUES (1, 1, 1, '2022-03-15'), (2, 2, 1, '2022-04-20'), (3, 3, 2, '2023-01-01');", "output": "SELECT department_id, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM (SELECT employee_id FROM employment_history UNION SELECT employee_id FROM terminations) AS combined_employees) as turnover_rate FROM terminations GROUP BY department_id;"}
{"input": " \uc131\uc7a5 \ub2e8\uacc4\uac00 '\uc218\ud655'\uc778 \uc791\ubb3c\uc744 \uc7ac\ubc30\ud558\uc9c0\ub9cc \uc810\uc801\uad00\uac1c\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \ub18d\ubbfc\uc758 \uc774\ub984\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Farmers (id INT, name VARCHAR(50), age INT, country VARCHAR(50)); INSERT INTO Farmers (id, name, age, country) VALUES (1, 'Alexei Ivanov', 60, 'Russia'); CREATE TABLE Crops (id INT, name VARCHAR(50), growth_stage VARCHAR(50), Farm_id INT); INSERT INTO Crops (id, name, growth_stage, Farm_id) VALUES (1, 'Wheat', 'Harvest', 1); CREATE TABLE Irrigation (id INT, Farm_id INT, irrigation_type VARCHAR(50), duration INT); INSERT INTO Irrigation (id, Farm_id, irrigation_type, duration) VALUES (1, 1, 'Sprinkler', 30);", "output": "SELECT f.name FROM Farmers f JOIN Crops c ON f.id = c.Farm_id LEFT JOIN Irrigation i ON f.id = i.Farm_id WHERE c.growth_stage = 'Harvest' AND i.irrigation_type IS NULL;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uace0\uac1d\ubcc4 \uac70\ub798\uae08\uc561\uc758 \uc774\ub3d9\ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (transaction_date DATE, customer_id INT, amount DECIMAL(10,2)); INSERT INTO transactions (transaction_date, customer_id, amount) VALUES ('2022-01-01', 1, 100), ('2022-01-05', 1, 200), ('2022-01-02', 2, 150), ('2022-01-03', 2, 50), ('2021-01-04', 3, 300), ('2021-01-05', 3, 250), ('2021-01-10', 1, 50), ('2021-01-15', 2, 350), ('2021-01-20', 3, 400);", "output": "SELECT customer_id, AVG(amount) OVER (PARTITION BY customer_id ORDER BY transaction_date ROWS BETWEEN 364 PRECEDING AND CURRENT ROW) AS moving_avg FROM transactions;"}
{"input": " \ubb34\uc791\uc704 \uc784\uc0c1\uc2dc\ud5d8 ID\ub85c \uc0c8\ub85c\uc6b4 \uc784\uc0c1\uc2dc\ud5d8 \ucd94\uac00", "context": "CREATE TABLE clinical_trials (trial_id INT, drug_id INT, trial_name VARCHAR(50)); INSERT INTO clinical_trials (trial_id, drug_id, trial_name) VALUES (1, 1, 'TrialA'), (2, 3, 'TrialB')", "output": "INSERT INTO clinical_trials (trial_id, drug_id, trial_name) VALUES ((SELECT MAX(trial_id) + 1 FROM clinical_trials), 2, 'TrialC')"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ubaa8\ub4e0 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dc\uc791 \ubc0f \uc885\ub8cc \ub0a0\uc9dc, \uc218\ud61c\uc790 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE SCHEMA if not exists rural_dev; use rural_dev; CREATE TABLE if not exists rural_infrastructure_projects (id INT, project_name VARCHAR(255), country VARCHAR(255), start_date DATE, end_date DATE, num_beneficiaries INT, PRIMARY KEY (id));", "output": "SELECT project_name, start_date, end_date, num_beneficiaries FROM rural_dev.rural_infrastructure_projects WHERE country LIKE 'Africa%' OR country LIKE 'Algeria' OR country LIKE 'Egypt';"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74\uc758 \uc720\uc801\uc9c0 \ubcf4\uc874\uc5d0 \ub300\ud55c \ucd5c\uace0\uc758 \uac1c\uc778 \uae30\ubd80\uc790\uc640 \uadf8\ub4e4\uc758 \ucd1d \uae30\ubd80\uae08\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SouthAmericaDonations (id INT, donor VARCHAR(50), project VARCHAR(50), continent VARCHAR(50), amount FLOAT); INSERT INTO SouthAmericaDonations (id, donor, project, continent, amount) VALUES (1, 'Ana Maria Silva', 'Machu Picchu Restoration', 'South America', 25000), (2, 'Carlos Eduardo Lopez', 'Galapagos Islands Preservation', 'South America', 30000), (3, 'Josefa Rodriguez', 'Iguazu Falls Conservation', 'South America', 20000);", "output": "SELECT donor, SUM(amount) AS total_contributions FROM SouthAmericaDonations WHERE continent = 'South America' AND donor LIKE 'Individual%' GROUP BY donor ORDER BY total_contributions DESC LIMIT 1;"}
{"input": " \ucf04\ud130\ud0a4 \uc2dc\uace8 \uc9c0\uc5ed\uc5d0\uc11c \uc218\uc6a9 \ub2a5\ub825\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc9c4\ub8cc\uc18c\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE clinics (id INT, name VARCHAR(50), type VARCHAR(50), capacity INT, region VARCHAR(50)); INSERT INTO clinics (id, name, type, capacity, region) VALUES (1, 'Clinic A', 'Primary Care', 40, 'Rural Kentucky'); INSERT INTO clinics (id, name, type, capacity, region) VALUES (2, 'Clinic B', 'General Care', 45, 'Rural Kentucky');", "output": "SELECT clinics.name FROM clinics WHERE clinics.region = 'Rural Kentucky' AND clinics.capacity = (SELECT MIN(clinics.capacity) FROM clinics WHERE clinics.region = 'Rural Kentucky');"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uc640 \uae30\ubd80\uc790 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name TEXT, country TEXT); INSERT INTO volunteers (id, name, country) VALUES (1, 'John Doe', 'USA'), (2, 'Jane Smith', 'Canada'); CREATE TABLE donors (id INT, name TEXT, country TEXT); INSERT INTO donors (id, name, country) VALUES (3, 'Mike Johnson', 'USA'), (4, 'Sara Lee', 'Canada');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM volunteers WHERE country IN ('USA', 'Canada')) UNION (SELECT * FROM donors WHERE country IN ('USA', 'Canada')) ) AS combined_data;"}
{"input": " '\uc11c\ube44\uc2a4' \uc0b0\uc5c5 \uadfc\ub85c\uc790\uc758 \ud3c9\uade0 \uae09\uc5ec\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE service_workers (id INT, name VARCHAR(255), state VARCHAR(255), industry VARCHAR(255), salary DECIMAL(10,2)); INSERT INTO service_workers (id, name, state, industry, salary) VALUES (1, 'James White', 'Texas', 'service', 30000.00), (2, 'Emily Green', 'Florida', 'service', 32000.00);", "output": "SELECT state, AVG(salary) FROM service_workers WHERE industry = 'service' GROUP BY state ORDER BY AVG(salary) ASC LIMIT 1;"}
{"input": " A\uad6d\uc5d0 \uc704\uce58\ud55c \uc591\uc2dd\uc7a5\uc758 \ucd1d \uc5b4\ub958 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farm (FarmID int, FarmName varchar(50), Location varchar(50)); INSERT INTO Farm (FarmID, FarmName, Location) VALUES (1, 'Farm A', 'Country A'); INSERT INTO Farm (FarmID, FarmName, Location) VALUES (2, 'Farm B', 'Country B'); CREATE TABLE FishStock (FishStockID int, FishSpecies varchar(50), FarmID int, Biomass numeric); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, Biomass) VALUES (1, 'Tilapia', 1, 500); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, Biomass) VALUES (2, 'Salmon', 2, 700); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, Biomass) VALUES (3, 'Tilapia', 1, 600);", "output": "SELECT SUM(Biomass) FROM FishStock WHERE FarmID IN (SELECT FarmID FROM Farm WHERE Location = 'Country A');"}
{"input": " \uce90\ub098\ub2e4 \uc704\uc131\uc758 \ucd5c\uc18c \uace0\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (satellite_id INT, name VARCHAR(255), country VARCHAR(255), altitude FLOAT, constellation VARCHAR(255)); INSERT INTO Satellites (satellite_id, name, country, altitude, constellation) VALUES (1, 'Radarsat-1', 'Canada', 798, 'Earth Observation'), (2, 'Radarsat-2', 'Canada', 798, 'Earth Observation'), (3, 'Nimiq-6', 'Canada', 35786, 'Communications');", "output": "SELECT MIN(altitude) FROM Satellites WHERE country = 'Canada';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc788\ub294 LEED \uc778\uc99d \uac74\ubb3c\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE buildings (id INT, name TEXT, state TEXT, leed_certification TEXT); INSERT INTO buildings (id, name, state, leed_certification) VALUES (1, 'Building A', 'Texas', 'Platinum'), (2, 'Building B', 'California', 'Gold'), (3, 'Building C', 'California', 'Platinum'), (4, 'Building D', 'Texas', 'Gold'), (5, 'Building E', 'New York', 'Platinum'), (6, 'Building F', 'California', 'Silver');", "output": "SELECT COUNT(*) FROM buildings WHERE leed_certification IS NOT NULL AND state = 'California';"}
{"input": " \ubbf8\uad6d\uc5d0 \uac70\uc8fc\ud558\ub294 \uace0\uac1d\uc758 \ud3c9\uade0 \uc18c\ub4dd\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name VARCHAR(100), age INT, country VARCHAR(50));   INSERT INTO clients (client_id, name, age, country) VALUES (1, 'John Doe', 35, 'USA');", "output": "SELECT AVG(income) FROM clients WHERE country = 'USA';"}
{"input": "\ub274\uc695\uacfc \ud39c\uc2e4\ubca0\ub2c8\uc544 \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \uacf5\uc5f0 \uc608\uc220 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud55c \uad00\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (id INT, state VARCHAR(2), city VARCHAR(20), category VARCHAR(20), attendees INT, event_date DATE); INSERT INTO Events (id, state, city, category, attendees, event_date) VALUES (1, 'NY', 'New York', 'Theater', 500, '2022-01-01'), (2, 'PA', 'Philadelphia', 'Dance', 300, '2022-02-01'), (3, 'NY', 'Albany', 'Music', 400, '2022-03-01'); CREATE TABLE Audience (id INT, state VARCHAR(2), zip INT, age INT); INSERT INTO Audience (id, state, zip, age) VALUES (1, 'NY', 10000, 30), (2, 'PA', 19000, 40), (3, 'NY', 12000, 35); CREATE TABLE Zipcodes (zip INT, city VARCHAR(20), urban VARCHAR(5)); INSERT INTO Zipcodes (zip, city, urban) VALUES (10000, 'New York', 'yes'), (19000, 'Philadelphia', 'yes'), (12000, 'Albany', 'yes');", "output": "SELECT AVG(Audience.age) FROM Events INNER JOIN Audience ON Events.state = Audience.state INNER JOIN Zipcodes ON Audience.zip = Zipcodes.zip WHERE urban = 'yes' AND Events.category IN ('Theater', 'Dance') AND Events.state IN ('NY', 'PA');"}
{"input": " \ud1a0\ub108\uba3c\ud2b8\uc5d0\uc11c \ud55c \ud300\uc774 \ub4dd\uc810\ud55c \ud3c9\uade0 \uace8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Team (TeamID int, TeamName varchar(50), TournamentID int); CREATE TABLE Goals (GoalID int, TeamID int, Goals int, Half int, MatchDate date);  INSERT INTO Team (TeamID, TeamName, TournamentID) VALUES (1, 'Barcelona', 1), (2, 'Real Madrid', 1), (3, 'Liverpool', 2), (4, 'Manchester United', 2); INSERT INTO Goals (GoalID, TeamID, Goals, Half, MatchDate) VALUES (1, 1, 1, 1, '2022-06-01'), (2, 1, 2, 2, '2022-06-01'), (3, 2, 1, 1, '2022-06-01'), (4, 2, 2, 2, '2022-06-01'), (5, 3, 1, 1, '2022-06-01'), (6, 3, 2, 2, '2022-06-01'), (7, 4, 1, 1, '2022-06-01'), (8, 4, 3, 2, '2022-06-01');", "output": "SELECT TeamID, AVG(Goals) OVER (PARTITION BY TeamID, Half) AS Avg_Goals_Per_Team_Half FROM Goals g JOIN Team t ON g.TeamID = t.TeamID WHERE t.TournamentID = 1 ORDER BY TeamID, Half;"}
{"input": "\uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uc6b4\ub3d9\uc744 \uae30\ub85d\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc774\uba70, \uc774\ub7ec\ud55c \ube44\ud65c\uc131 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uacfc \uc548\uc815\uc2dc \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Users (ID INT PRIMARY KEY, Age INT, RestingHeartRate INT, LastLogin DATE);   CREATE TABLE Workouts (UserID INT, Date DATE);", "output": "SELECT AVG(Users.Age) AS AvgAge, AVG(Users.RestingHeartRate) AS AvgRestingHeartRate FROM Users JOIN (SELECT UserID FROM Workouts WHERE Date >= DATEADD(day, -30, GETDATE()) GROUP BY UserID) AS RecentWorkouts ON Users.ID = RecentWorkouts.UserID WHERE Users.LastLogin IS NOT NULL AND Users.ID NOT IN (SELECT UserID FROM RecentWorkouts);"}
{"input": " \uc724\ub9ac\uc801\uc778 \uacf5\uae09\uc5c5\uccb4\uc640 \ube44\uc724\ub9ac\uc801\uc778 \uacf5\uae09\uc5c5\uccb4 \ubaa8\ub450\ub85c\ubd80\ud130 \uc81c\ud488\uc744 \uad6c\ub9e4\ud55c \uace0\uc720 \uace0\uac1d \uc218\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), ethical_supplier BOOLEAN); INSERT INTO customers (customer_id, customer_name, ethical_supplier) VALUES (1, 'Customer A', TRUE), (2, 'Customer B', FALSE), (3, 'Customer C', TRUE), (4, 'Customer D', FALSE); CREATE TABLE purchases (purchase_id INT, customer_id INT, supplier_id INT); INSERT INTO purchases (purchase_id, customer_id, supplier_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 1, 2);", "output": "SELECT COUNT(DISTINCT customer_id) FROM (SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.ethical_supplier = TRUE INTERSECT SELECT customer_id FROM purchases p JOIN customers c ON p.customer_id = c.customer_id WHERE c.ethical_supplier = FALSE);"}
{"input": " 'Mateo Davis'\uac00 \uc218\ud589\ud55c \ubaa8\ub4e0 \uac70\ub798\uc640 \ud574\ub2f9 \uc138\ubd80\uc815\ubcf4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE transactions (id INT PRIMARY KEY, account_id INT, type VARCHAR(255), amount DECIMAL(10,2), date DATE, client_id INT); INSERT INTO transactions (id, account_id, type, amount, date, client_id) VALUES (1, 1, 'Deposit', 2000.00, '2021-01-01', 1001), (2, 2, 'Withdrawal', 1500.00, '2021-02-10', 1002), (3, 3, 'Transfer', 500.00, '2021-03-20', 1003), (4, 1003, 'Withdrawal', 1000.00, '2021-04-01', 1005), (5, 1002, 'Withdrawal', 500.00, '2021-05-15', 1006), (6, 5, 'Deposit', 1000.00, '2021-06-01', 1004), (7, 4, 'Payment', 500.00, '2021-06-15', 1004);", "output": "SELECT * FROM transactions WHERE client_id = (SELECT id FROM clients WHERE name = 'Mateo Davis');"}
{"input": " \ubcf4\uc789\uc774 \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \ub3d9\uc2dc\uc5d0 \ucc38\uc5ec\ud558\ub294 \ucd5c\ub300 \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE defense_projects (contractor VARCHAR(255), project VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO defense_projects (contractor, project, start_date, end_date) VALUES ('Boeing', 'Project A', '2015-01-01', '2017-12-31'), ('Boeing', 'Project B', '2016-07-01', '2018-06-30'), ('Boeing', 'Project C', '2017-03-01', '2019-02-28'), ('Boeing', 'Project D', '2018-09-01', '2020-08-31'), ('Boeing', 'Project E', '2019-11-01', '2021-10-31');", "output": "SELECT COUNT(project) FROM defense_projects dp1 WHERE YEAR(dp1.start_date) <= YEAR(dp1.end_date) AND NOT EXISTS (SELECT 1 FROM defense_projects dp2 WHERE dp2.contractor = dp1.contractor AND dp2.project != dp1.project AND YEAR(dp2.start_date) < YEAR(dp1.end_date) AND YEAR(dp2.end_date) > YEAR(dp1.start_date));"}
{"input": " \ub7f0\ub358 \uc0ac\ubc95 \uc81c\ub3c4\uc5d0\uc11c \uc0ac\uac74\ub2f9 \ud3c9\uade0 \ubc95\uc6d0 \ucd9c\ub450 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE court_appearances (appearance_id INT, case_id INT); INSERT INTO court_appearances (appearance_id, case_id) VALUES (1, 1); INSERT INTO court_appearances (appearance_id, case_id) VALUES (2, 1); INSERT INTO court_appearances (appearance_id, case_id) VALUES (3, 2);", "output": "SELECT AVG(COUNT(*)) FROM court_appearances GROUP BY case_id;"}
{"input": "\uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uac01 \ubd80\uc11c\uc5d0\uc11c \ubcf4\uace0\ub41c \ubcf4\uc548 \uc0ac\uace0\ub294 \uba87 \uac74\uc774\uba70, \uac01 \ubd80\uc11c\ubcc4\ub85c \uae30\ub85d\ub41c \ucd5c\uace0 \uc2ec\uac01\ub3c4 \uc218\uc900\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE incidents (incident_id INT, incident_date DATE, severity INT, department VARCHAR(50));", "output": "SELECT department, COUNT(*) as incident_count, MAX(severity) as max_severity FROM incidents WHERE incident_date >= NOW() - INTERVAL 60 DAY GROUP BY department;"}
{"input": " 'community_development' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ub0a8\uc131 \ubc0f \uc5ec\uc131 \uc218\uc2e0\uc790\uc758 \ucd1d \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE community_development.recipients (recipient_id INT, recipient_gender VARCHAR(10)); INSERT INTO community_development.recipients (recipient_id, recipient_gender) VALUES (1, 'Male'), (2, 'Female'), (3, 'Female'), (4, 'Non-binary');", "output": "SELECT recipient_gender, COUNT(*) FROM community_development.recipients GROUP BY recipient_gender;"}
{"input": " \ubc94\uc8c4 \uc720\ud615\ubcc4\ub85c \ud68c\ubcf5\uc801 \uc0ac\ubc95\uc744 \ud1b5\ud574 \ud574\uacb0\ub41c \uc0ac\uac74\uc758 \uc218\uc640 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE cases_by_crime (id INT, crime_type VARCHAR(50), restorative_justice BOOLEAN, case_closed_date DATE);", "output": "SELECT crime_type, COUNT(*) number_of_cases, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY NULL) AS percentage_restorative_justice FROM cases_by_crime WHERE restorative_justice = TRUE GROUP BY crime_type;"}
{"input": " \uac01 \uc8fc\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ub18d\ucd0c \uc758\ub8cc \uc2dc\uc124\uc758 \ucd1d \uc218\uc6a9 \ub2a5\ub825\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE facilities (id INT, name TEXT, location TEXT, capacity INT); INSERT INTO facilities (id, name, location, capacity) VALUES (1, 'Rural Upstate Health Center', 'New York', 40), (2, 'Rural Finger Lakes Clinic', 'New York', 25), (3, 'Rural Desert Health Center', 'Arizona', 35), (4, 'Rural Gulf Coast Clinic', 'Florida', 20);", "output": "SELECT location, SUM(capacity) FROM facilities GROUP BY location;"}
{"input": " \uac01 \uc120\ubc15\uc758 \uc77c\uc77c \ud3c9\uade0 \uc5f0\ub8cc \uc18c\ube44\uc728\uc744 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessel (VesselID INT, VesselName VARCHAR(100), FuelType VARCHAR(100), FuelConsumption DECIMAL(5,2), OperationalDays INT); INSERT INTO Vessel (VesselID, VesselName, FuelType, FuelConsumption, OperationalDays) VALUES (1, 'Sealand Express', 'Diesel', 120.50, 25); INSERT INTO Vessel (VesselID, VesselName, FuelType, FuelConsumption, OperationalDays) VALUES (2, 'Cosco Hope', 'Fuel Oil', 150.25, 30);", "output": "SELECT VesselName, AVG(FuelConsumption/OperationalDays) OVER(PARTITION BY VesselName ORDER BY VesselName) AS AvgDailyFuelConsumption, ROW_NUMBER() OVER(ORDER BY AvgDailyFuelConsumption DESC) as Rank FROM Vessel"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc \uc5f0\ub3c4\uc5d0 \ub300\ud574 \uac01 \ub3c4\uc2dc\uc758 \uacf5\uacf5 \uc548\uc804 \ubd80\uc11c\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CityBudget (CityName VARCHAR(50), Department VARCHAR(50), Budget INT, Year INT); INSERT INTO CityBudget (CityName, Department, Budget, Year) VALUES ('Chicago', 'Police', 15000000, 2020), ('Chicago', 'Fire', 8000000, 2020), ('Houston', 'Police', 12000000, 2020), ('Houston', 'Fire', 7000000, 2020);", "output": "SELECT CityName, SUM(Budget) AS TotalPublicSafetyBudget, ROW_NUMBER() OVER(PARTITION BY CityName ORDER BY Year DESC) AS Rank FROM CityBudget WHERE Department IN ('Police', 'Fire') GROUP BY CityName HAVING Rank = 1"}
{"input": " 2022\ub144 1\uc6d4 '\uc544\uce68\uc2dd\uc0ac' \uce74\ud14c\uace0\ub9ac \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE sales_revenue (item_name TEXT, category TEXT, sale_price DECIMAL(5,2), sale_date DATE); INSERT INTO sales_revenue (item_name, category, sale_price, sale_date) VALUES ('Scrambled Eggs', 'Breakfast', 4.50, '2022-01-01'); INSERT INTO sales_revenue (item_name, category, sale_price, sale_date) VALUES ('Pancakes', 'Breakfast', 6.00, '2022-01-02');", "output": "SELECT SUM(sale_price) FROM sales_revenue WHERE category = 'Breakfast' AND sale_date BETWEEN '2022-01-01' AND '2022-01-31';"}
{"input": " \ubaa8\ub4e0 \uc9c0\uc5ed\uc5d0\uc11c \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc0c1\uc704 3\uac1c \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Projects (region VARCHAR(20), project_name VARCHAR(50), project_cost INT); INSERT INTO Projects (region, project_name, project_cost) VALUES ('Northeast', 'Bridge Reconstruction', 5000000), ('Southeast', 'Road Expansion', 3000000), ('Midwest', 'Water Treatment Plant Upgrade', 6500000), ('Southwest', 'Dams Safety Improvement', 7500000), ('West', 'Transit System Modernization', 9000000);", "output": "SELECT project_name, project_cost FROM (SELECT project_name, project_cost, ROW_NUMBER() OVER (ORDER BY project_cost DESC) as rank FROM Projects) as ranked_projects WHERE rank <= 3;"}
{"input": " 'Aaliyah Brown' \uc2b9\uac1d\uc758 \uc694\uae08 \uc815\ubcf4 \uc0ad\uc81c", "context": "CREATE TABLE riders (rider_id INT, name VARCHAR(255)); INSERT INTO riders (rider_id, name) VALUES (1, 'John Smith'), (2, 'Jane Doe'), (3, 'Aaliyah Brown'); CREATE TABLE fares (fare_id INT, rider_id INT, fare_amount DECIMAL(5,2));", "output": "DELETE FROM fares WHERE rider_id = (SELECT rider_id FROM riders WHERE name = 'Aaliyah Brown');"}
{"input": " '\uc74c\uc545' \uce74\ud14c\uace0\ub9ac\uc758 \uc774\ubca4\ud2b8\uc5d0\uc11c '\uc5ec\uc131'\uc73c\ub85c \uc2dd\ubcc4\ub41c \ubc29\ubb38\uc790\uc758 \ucd1d \uc9c0\ucd9c \uae08\uc561\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774\ub4e4\uc774 \ucc38\uc11d\ud55c \uace0\uc720 \uc774\ubca4\ud2b8\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(20));CREATE TABLE Events (EventID INT, EventName VARCHAR(20), EventCategory VARCHAR(20));CREATE TABLE VisitorSpending (VisitorID INT, EventID INT, Spending INT);", "output": "SELECT SUM(VS.Spending) AS Total_Spending, COUNT(DISTINCT E.EventID) AS Num_Unique_Events FROM Visitors V INNER JOIN VisitorSpending VS ON V.VisitorID = VS.VisitorID INNER JOIN Events E ON VS.EventID = E.EventID WHERE V.Gender = 'Female' AND E.EventCategory = 'Music';"}
{"input": " \ub3c4\uc785\ub960\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \uae30\uc220 \ub3c4\uc785\uc0ac\uc5c5 \ubc1c\uad74", "context": "CREATE TABLE smart_city_projects (id INT, name VARCHAR(50), location VARCHAR(50), adoption_rate FLOAT);", "output": "SELECT * FROM smart_city_projects WHERE adoption_rate = (SELECT MIN(adoption_rate) FROM smart_city_projects);"}
{"input": " 2018\ub144 \uc774\uc804\uc5d0 \uc2dc\uc791\ub41c \ub0a8\ubbf8 \uae30\ud6c4 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_mitigation (id INT, project_name TEXT, budget INT, start_year INT, location TEXT); INSERT INTO climate_mitigation (id, project_name, budget, start_year, location) VALUES (1, 'Tree Planting', 50000, 2016, 'South America'); INSERT INTO climate_mitigation (id, project_name, budget, start_year, location) VALUES (2, 'Energy Efficiency', 100000, 2017, 'Asia');", "output": "SELECT AVG(budget) FROM climate_mitigation WHERE location = 'South America' AND start_year < 2018;"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed\uc758 \uad11\ub300\uc5ed \uac00\uc785\uc790\uc758 \ucd5c\uc18c \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_subscribers (subscriber_id INT, region VARCHAR(50), data_usage INT);", "output": "SELECT region, MIN(data_usage) FROM broadband_subscribers GROUP BY region;"}
{"input": " \uc0dd\uc0b0\uc728\uc774 \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \uc6b0\ubb3c\uc758 \uc0dd\uc0b0\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_type VARCHAR(10), location VARCHAR(20), production_rate FLOAT); INSERT INTO wells (well_id, well_type, location, production_rate) VALUES (1, 'offshore', 'Gulf of Mexico', 1000), (2, 'onshore', 'Texas', 800), (3, 'offshore', 'North Sea', 1200), (4, 'onshore', 'Alberta', 900);", "output": "SELECT production_rate FROM (SELECT well_id, well_type, location, production_rate, ROW_NUMBER() OVER (ORDER BY production_rate DESC) rn FROM wells) t WHERE rn = 2;"}
{"input": " 2016\ub144 \uc774\ud6c4 \ud638\uc8fc\uc5d0\uc11c\ub294 \uba87 \uc720\ub85c\ud4e8\uc6c0 \ub2e8\uc704\uac00 \ucd94\ucd9c\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE australia_europium (id INT, year INT, units INT); INSERT INTO australia_europium (id, year, units) VALUES (1, 2014, 350), (2, 2015, 400), (3, 2016, 450), (4, 2017, 500), (5, 2018, 550);", "output": "SELECT COUNT(*) FROM australia_europium WHERE year > 2016;"}
{"input": " \uc5ec\uc131 \ub514\uc790\uc774\ub108\uac00 \ub514\uc790\uc778\ud55c \uac8c\uc784\uc758 \ucd1d \uc218\uc640 \uc774\ub7ec\ud55c \uac8c\uc784 \uc911 \ud558\ub098 \uc774\uc0c1\uc774 \ud50c\ub808\uc774\ub41c e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20)); CREATE TABLE GameDesigners (DesignerID INT, DesignerName VARCHAR(50), Gender VARCHAR(10)); CREATE TABLE GameDesign (GameID INT, DesignerID INT); CREATE TABLE EsportsEvents (EventID INT, GameID INT, EventName VARCHAR(50));", "output": "SELECT COUNT(DISTINCT Games.GameID), COUNT(DISTINCT EsportsEvents.EventID) FROM Games INNER JOIN GameDesign ON Games.GameID = GameDesign.GameID INNER JOIN GameDesigners ON GameDesign.DesignerID = GameDesigners.DesignerID LEFT JOIN EsportsEvents ON Games.GameID = EsportsEvents.GameID WHERE GameDesigners.Gender = 'Female';"}
{"input": " \uac01 \uc0c9\uc0c1\ubcc4\ub85c \uba87 \ubc8c\uc758 \uc758\ub958\uac00 \ud310\ub9e4\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE sales (id INT, garment_type VARCHAR(20), color VARCHAR(20), price DECIMAL(10, 2), quantity INT);", "output": "SELECT color, SUM(quantity) AS total_sold FROM sales GROUP BY color;"}
{"input": " \ubb38\ud654\uc801 \uc5ed\ub7c9 \uc810\uc218 \uc0ac\ubd84\uc704\uc218\ub97c \uae30\uc900\uc73c\ub85c \uc6d0\uc8fc\ubbfc\uc73c\ub85c \ud655\uc778\ub41c \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CommunityHealthWorkers (WorkerID INT, Indigenous VARCHAR(5), CulturalCompetencyScore INT); INSERT INTO CommunityHealthWorkers (WorkerID, Indigenous, CulturalCompetencyScore) VALUES (1, 'Yes', 80), (2, 'No', 85), (3, 'Yes', 70), (4, 'No', 90);", "output": "SELECT CulturalCompetencyScoreQuartile, COUNT(*) as Count FROM (SELECT CulturalCompetencyScore, NTILE(4) OVER (ORDER BY CulturalCompetencyScore) as CulturalCompetencyScoreQuartile, Indigenous FROM CommunityHealthWorkers) as Data WHERE Indigenous = 'Yes' GROUP BY CulturalCompetencyScoreQuartile;"}
{"input": " \ubcf4\ud5d8 ID\uac00 5\ubcf4\ub2e4 \ud070 '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policies (policy_id INT, policyholder_name VARCHAR(50), policyholder_state VARCHAR(20)); INSERT INTO policies (policy_id, policyholder_name, policyholder_state) VALUES (1, 'Alice', 'California'), (6, 'Bob', 'California'), (7, 'Charlie', 'California');", "output": "SELECT policyholder_name FROM policies WHERE policyholder_state = 'California' AND policy_id > 5;"}
{"input": " \ube44\uac74 \uba54\ub274\uc758 \uc694\ub9ac \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Menus (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO Menus (id, name, type) VALUES (1, 'Entree', 'Vegan'), (2, 'Dessert', 'Vegan'); CREATE TABLE Dishes (id INT, name VARCHAR(255), menu_id INT, rating DECIMAL(3,2)); INSERT INTO Dishes (id, name, menu_id, rating) VALUES (1, 'Tofu Stir Fry', 1, 4.30), (2, 'Vegan Cheesecake', 2, 3.80);", "output": "SELECT AVG(rating) FROM Dishes WHERE menu_id IN (SELECT id FROM Menus WHERE type = 'Vegan');"}
{"input": " \uc815\ubd80 \ubd80\ubb38\uc5d0 \ub300\ud55c \ub450 \ubc88\uc758 \uc5f0\uc18d \ubcf4\uc548 \uc0ac\uace0 \uc0ac\uc774\uc758 \ucd5c\ub300 \uc77c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "create table incidents (id int, date date, sector varchar(255)); insert into incidents values (1, '2021-01-01', 'government'); insert into incidents values (2, '2021-01-05', 'government'); insert into incidents values (3, '2021-01-10', 'government'); insert into incidents values (4, '2021-01-20', 'healthcare');", "output": "SELECT DATEDIFF(date, LAG(date) OVER (PARTITION BY sector ORDER BY date)) FROM incidents WHERE sector = 'government' ORDER BY date DESC LIMIT 1;"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \uac01 \uae30\uad00\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organization (id INT, name VARCHAR(255)); CREATE TABLE volunteer (id INT, name VARCHAR(255), organization_id INT, volunteer_date DATE); CREATE TABLE donation (id INT, donor_id INT, organization_id INT, amount DECIMAL(10,2), donation_date DATE);", "output": "SELECT o.name, COUNT(v.id) as total_volunteers, SUM(d.amount) as total_donations FROM volunteer v JOIN organization o ON v.organization_id = o.id JOIN donation d ON o.id = d.organization_id WHERE YEAR(v.volunteer_date) = 2022 AND YEAR(d.donation_date) = 2022 GROUP BY o.id;"}
{"input": " \uc911\ub3d9\uc9c0\uc5ed F-15 \uc7a5\ube44\ud615 \ud310\ub9e4\uae08\uc561\uacfc \ub0a9\uae30\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE EquipmentDeliveries (id INT PRIMARY KEY, equipment VARCHAR(50), contractor VARCHAR(50), delivery_date DATE, sale_id INT, FOREIGN KEY (sale_id) REFERENCES EquipmentSales(id)); CREATE TABLE Countries (id INT PRIMARY KEY, region VARCHAR(50), country VARCHAR(50)); INSERT INTO Countries (id, region, country) VALUES (3, 'Middle East', 'Saudi Arabia'); INSERT INTO EquipmentDeliveries (id, equipment, contractor, delivery_date, sale_id) VALUES (3, 'F-15', 'Boeing', '2021-01-01', 3);", "output": "SELECT EquipmentSales.equipment, EquipmentSales.sale_amount, EquipmentDeliveries.delivery_date FROM EquipmentSales INNER JOIN EquipmentDeliveries ON EquipmentSales.id = EquipmentDeliveries.sale_id INNER JOIN Countries ON EquipmentDeliveries.contractor = Countries.country WHERE EquipmentSales.equipment = 'F-15' AND Countries.region = 'Middle East';"}
{"input": " \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uad70\uc0ac\uae30\uc9c0 \uc774\ub984\uacfc \uc885\ub958\ub294 \ubb34\uc5c7\uc778\uac00?", "context": "CREATE TABLE MilitaryBases (id INT, name VARCHAR(255), country VARCHAR(255), type VARCHAR(255)); INSERT INTO MilitaryBases (id, name, country, type) VALUES (1, 'Camp Humphreys', 'South Korea', 'Army Base'); INSERT INTO MilitaryBases (id, name, country, type) VALUES (2, 'RAAF Base Amberley', 'Australia', 'Air Force Base');", "output": "SELECT name, type FROM MilitaryBases WHERE country IN (SELECT * FROM (SELECT 'South Korea' AS country UNION ALL SELECT 'Japan' UNION ALL SELECT 'Australia' UNION ALL SELECT 'Singapore') AS regions);"}
{"input": " 2018\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \uc218\uc885\ubcc4 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc774\uba70, \uac00\uc7a5 \ud06c\uac8c \uc99d\uac00\ud55c \uc21c\uc11c\ub300\ub85c \uc21c\uc704\ub97c \ub9e4\uae30\ub098\uc694?", "context": "CREATE TABLE species_timber (species_id INT, species_name VARCHAR(50), year INT, volume INT); INSERT INTO species_timber (species_id, species_name, year, volume) VALUES (1, 'Oak', 2018, 1000), (2, 'Pine', 2018, 2000), (3, 'Maple', 2018, 3000), (4, 'Birch', 2018, 4000), (1, 'Oak', 2019, 1500), (2, 'Pine', 2019, 2500), (3, 'Maple', 2019, 3500), (4, 'Birch', 2019, 4500);", "output": "SELECT species_id, species_name, (volume - LAG(volume, 1) OVER (PARTITION BY species_name ORDER BY year)) AS volume_change, RANK() OVER (ORDER BY volume_change DESC) AS volume_rank FROM species_timber WHERE year IN (2018, 2019) GROUP BY species_id, species_name, volume, year ORDER BY year, volume_rank ASC;"}
{"input": " 1\ubd84\uae30\uc640 4\ubd84\uae30\uc5d0 \ubaa8\ub450 \uc0ac\ub840\uac00 \ubc1c\uc0dd\ud55c \uace0\uac1d\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Clients (ClientID INT, Name TEXT); INSERT INTO Clients VALUES (1, 'Thomas'), (2, 'Ramirez'), (3, 'Gonzalez'), (4, 'Clark'); CREATE TABLE Cases (CaseID INT, ClientID INT, Quarter TEXT); INSERT INTO Cases VALUES (1, 1, 'Q1'), (2, 2, 'Q2'), (3, 3, 'Q3'), (4, 1, 'Q4'), (5, 4, 'Q4');", "output": "SELECT c.Name FROM Clients c INNER JOIN Cases n ON c.ClientID = n.ClientID WHERE n.Quarter = 'Q1' INTERSECT SELECT c.Name FROM Clients c INNER JOIN Cases t ON c.ClientID = t.ClientID WHERE t.Quarter = 'Q4';"}
{"input": " \uc791\ub144\uc5d0 \uc2dd\ud488 \uc548\uc804\uc744 \uc704\ubc18\ud55c \uacf5\uae09\uc5c5\uccb4\ub97c \uc81c\uc678\ud558\uace0 \ud2b9\uc815 \ub808\uc2a4\ud1a0\ub791\uc5d0 \uc81c\ud488\uc744 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE suppliers (id INT, name TEXT, restaurant TEXT, violation_date DATE);", "output": "SELECT name FROM suppliers WHERE restaurant = 'Restaurant A' AND id NOT IN (SELECT supplier_id FROM violations WHERE violation_date >= DATEADD(year, -1, GETDATE()));"}
{"input": " \uacfc\ud14c\ub9d0\ub77c\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uacc4\ud68d\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \uae30\ubd80\ud55c 5\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors(id INT, name TEXT, country TEXT, donation INT); INSERT INTO donors(id, name, country, donation) VALUES (1, 'USAID', 'USA', 50000), (2, 'European Union', 'Belgium', 40000); CREATE TABLE donations(id INT, donor_id INT, initiative_id INT, amount INT); INSERT INTO donations(id, donor_id, initiative_id, amount) VALUES (1, 1, 1, 10000), (2, 2, 2, 15000);", "output": "SELECT d.name FROM donors d JOIN (SELECT donor_id, SUM(amount) as total_donation FROM donations GROUP BY donor_id ORDER BY total_donation DESC LIMIT 5) dd ON d.id = dd.donor_id;"}
{"input": " \uac8c\ub188 \ub370\uc774\ud130 \ubd84\uc11d \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE genomic_data (id INT, project TEXT, funding FLOAT); INSERT INTO genomic_data (id, project, funding) VALUES (1, 'Whole Genome Sequencing', 9000000.0); INSERT INTO genomic_data (id, project, funding) VALUES (2, 'Genomic Data Analysis', 11000000.0);", "output": "SELECT SUM(funding) FROM genomic_data WHERE project = 'Genomic Data Analysis';"}
{"input": " 2021\ub144 6\uc6d4 \ud55c \ub2ec \ub3d9\uc548 3\uac74 \uc774\uc0c1\uc758 \uac70\ub798\uac00 \ubc1c\uc0dd\ud55c \ub18d\ucd0c \uc9c0\uc5ed\uc758 \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud558\uace0 \uac70\ub798 \uac00\uce58\ub97c \uae30\uc900\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, user_location VARCHAR(30)); CREATE TABLE transactions (transaction_id INT, user_id INT, transaction_value FLOAT, transaction_date DATE); INSERT INTO users (user_id, user_location) VALUES (1, 'Rural'); INSERT INTO transactions (transaction_id, user_id, transaction_value, transaction_date) VALUES (1, 1, 100.00, '2021-06-01');", "output": "SELECT user_id, RANK() OVER (ORDER BY SUM(transaction_value) DESC) as rank FROM transactions INNER JOIN users ON transactions.user_id = users.user_id WHERE EXTRACT(MONTH FROM transaction_date) = 6 AND user_location = 'Rural' GROUP BY user_id HAVING COUNT(*) > 3;"}
{"input": " \uc804\uc2dc\ud68c\ubcc4 \uc21c \ubc29\ubb38\uc790 \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Exhibitions (id INT, city VARCHAR(20), visitors INT); CREATE TABLE VisitorExhibitions (visitor_id INT, exhibition_id INT); INSERT INTO Exhibitions (id, city, visitors) VALUES (1, 'Paris', 3000), (2, 'London', 4000), (3, 'New York', 5000); INSERT INTO VisitorExhibitions (visitor_id, exhibition_id) VALUES (1, 1), (1, 2), (2, 1), (3, 3);", "output": "SELECT e.city, COUNT(DISTINCT v.id) AS unique_visitors FROM Exhibitions e JOIN VisitorExhibitions ve ON e.id = ve.exhibition_id JOIN Visitors v ON ve.visitor_id = v.id GROUP BY e.id ORDER BY unique_visitors DESC"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \ud50c\ub85c\ub9ac\ub2e4\uc5d0\uc11c \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \ud1b5\ud574 \ud559\uc2b5 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT PRIMARY KEY, disability VARCHAR(255), served_by_support_program BOOLEAN); CREATE TABLE support_programs_students (student_id INT, program_id INT); CREATE TABLE support_programs (id INT PRIMARY KEY, state VARCHAR(255));", "output": "SELECT COUNT(*) FROM students JOIN support_programs_students ON students.id = support_programs_students.student_id JOIN support_programs ON support_programs_students.program_id = support_programs.id WHERE students.disability = 'learning disabilities' AND support_programs.state = 'Florida' AND students.served_by_support_program = TRUE AND date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"}
{"input": "\uc74c\uc2dd', '\uc74c\uc2dd\uc810' \uad00\ub828 \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc744 \uc88b\uc544\uc694\uac00 10\uac1c \ubbf8\ub9cc\uc778 \uac8c\uc2dc\ubb3c\uc744 \uc81c\uc678\ud558\uace0 \uc88b\uc544\uc694 \uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), page_name VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, page_name VARCHAR(255), content TEXT); CREATE TABLE likes (id INT, user_id INT, post_id INT); CREATE TABLE hashtags (id INT, post_id INT, tag VARCHAR(255));", "output": "SELECT DISTINCT posts.id, posts.content FROM posts JOIN hashtags ON posts.id = hashtags.post_id JOIN likes ON posts.id = likes.post_id WHERE hashtags.tag IN ('food', 'restaurants') GROUP BY posts.id HAVING COUNT(*) > 10 ORDER BY COUNT(*) DESC;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \ud558\ub8e8\uc5d0 \ubc1b\ub294 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uba54\uc2dc\uc9c0\uc758 \ud3c9\uade0 \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_feedback (feedback_id INT, city_name VARCHAR(50), feedback_date DATE); INSERT INTO city_feedback VALUES (1, 'CityD', '2021-05-01'), (2, 'CityE', '2021-05-02'), (3, 'CityD', '2021-05-03'), (4, 'CityF', '2021-05-04'), (5, 'CityE', '2021-05-05');", "output": "SELECT city_name, AVG(ROW_NUMBER() OVER (PARTITION BY city_name ORDER BY feedback_date)) as avg_feedback_per_day FROM city_feedback GROUP BY city_name;"}
{"input": " \uc8fc\ub9d0 \uc2dc\ub4dc\ub2c8 \ub300\uc911\uad50\ud1b5\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sydney_bus (ride_id INT, fare DECIMAL(5,2), ride_date DATE); CREATE TABLE sydney_train (ride_id INT, fare DECIMAL(5,2), ride_date DATE); CREATE TABLE sydney_ferry (ride_id INT, fare DECIMAL(5,2), ride_date DATE);", "output": "SELECT SUM(fare) FROM (SELECT fare FROM sydney_bus WHERE DAYOFWEEK(ride_date) IN (1,7) UNION ALL SELECT fare FROM sydney_train WHERE DAYOFWEEK(ride_date) IN (1,7) UNION ALL SELECT fare FROM sydney_ferry WHERE DAYOFWEEK(ride_date) IN (1,7)) AS weekend_fares;"}
{"input": " 2019\ub144 \ub9ac\uc6b0\ub370\uc790\ub124\uc774\ub8e8\uc5d0\uc11c \uc6d4\uac04 \uc815\uc2e0 \uac74\uac15 \ucea0\ud398\uc778 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE campaigns (campaign_id INT, campaign_name TEXT, city TEXT, start_date DATE, end_date DATE); INSERT INTO campaigns (campaign_id, campaign_name, city, start_date, end_date) VALUES (1, 'Healthy Minds', 'Rio de Janeiro', '2019-05-01', '2020-04-30');", "output": "SELECT EXTRACT(MONTH FROM start_date) as month, COUNT(*) as num_campaigns FROM campaigns WHERE city = 'Rio de Janeiro' AND EXTRACT(YEAR FROM start_date) = 2019 GROUP BY month ORDER BY month;"}
{"input": " \uac01 \uc9c1\uc6d0\uc758 \ucd5c\ub300 \uc548\uc804 \uc704\ubc18 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE safety_violations (employee_id INT, department VARCHAR(255), violation_count INT); INSERT INTO safety_violations (employee_id, department, violation_count) VALUES (1, 'Production', 2), (2, 'Production', 0), (3, 'Engineering', 1), (4, 'Engineering', 3);", "output": "SELECT employee_id, department, MAX(violation_count) OVER (PARTITION BY employee_id) AS max_violations_per_employee FROM safety_violations;"}
{"input": " \ubbf8\uc8fc \uc9c0\uc5ed\uacfc \uadf8 \uc720\ud615\uc5d0\ub294 \uc5b4\ub5a4 \uc9c0\uc5ed \uc0ac\ud68c \ucc38\uc5ec \ud504\ub85c\uadf8\ub7a8\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE COMMUNITY_ENGAGEMENT (id INT PRIMARY KEY, name VARCHAR(255), region VARCHAR(255), type VARCHAR(255)); INSERT INTO COMMUNITY_ENGAGEMENT (id, name, region, type) VALUES (1, 'Mayan Cultural Festival', 'Americas', 'Cultural');", "output": "SELECT name, type FROM COMMUNITY_ENGAGEMENT WHERE region = 'Americas';"}
{"input": "\uc791\ub144\uc5d0 LGBTQ+ \uad8c\ub9ac\uc640 \uad00\ub828\ub41c \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, joined_date DATE); INSERT INTO users (id, joined_date) VALUES (1, '2021-01-01'), (2, '2020-05-12'), (3, '2019-10-05'), (4, '2021-07-14'); CREATE TABLE posts (id INT, user_id INT, posted_date DATE); INSERT INTO posts (id, user_id, posted_date) VALUES (1, 1, '2022-06-12'), (2, 1, '2022-05-25'), (3, 2, '2022-03-18'), (4, 3, '2021-11-15'), (5, 4, '2022-06-08'); CREATE TABLE post_tags (post_id INT, tag VARCHAR(255)); INSERT INTO post_tags (post_id, tag) VALUES (1, 'LGBTQ+ rights'), (2, 'LGBTQ+ rights'), (3, 'politics'), (4, 'sports'), (5, 'LGBTQ+ rights');", "output": "SELECT COUNT(DISTINCT users.id) FROM users INNER JOIN posts ON users.id = posts.user_id INNER JOIN post_tags ON posts.id = post_tags.post_id WHERE post_tags.tag = 'LGBTQ+ rights' AND users.joined_date <= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 'UrbanGreen' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ucd1d \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE UrbanGreen.CityEnergy (city VARCHAR(50), energy_consumption FLOAT); INSERT INTO UrbanGreen.CityEnergy (city, energy_consumption) VALUES ('NYC', 123456.7), ('LA', 150000.2), ('SF', 105000.1), ('Chicago', 140000.5), ('Houston', 180000.9);", "output": "SELECT city, SUM(energy_consumption) AS total_energy FROM UrbanGreen.CityEnergy GROUP BY city ORDER BY total_energy DESC LIMIT 3;"}
{"input": " \uac01 \uc0dd\uc0b0 \ud604\uc7a5\uc758 \ucd1d \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uacfc \ud604\uc7a5\ubcc4 \ud654\ud559\ubb3c\uc9c8\ub2f9 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Production_Sites (site_id INT, site_name VARCHAR(50), energy_consumption INT); CREATE TABLE Production_Chemicals (site_id INT, chemical_id INT, energy_consumption INT);", "output": "SELECT ps.site_name, SUM(ps.energy_consumption) as total_energy, AVG(pc.energy_consumption/cnt.chemical_count) as avg_energy_per_chemical FROM Production_Sites ps JOIN Production_Chemicals pc ON ps.site_id = pc.site_id JOIN (SELECT site_id, COUNT(DISTINCT chemical_id) as chemical_count FROM Production_Chemicals GROUP BY site_id) cnt ON ps.site_id = cnt.site_id GROUP BY ps.site_name;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \ucd1d \uc218\uc775\uc744 \ucc3e\uc544 \uc218\uc775\uc774 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (RestaurantID int, Name varchar(50)); INSERT INTO Restaurants (RestaurantID, Name) VALUES (1, 'Paleteria Y Neveria'), (2, 'Thai Spice'), (3, 'Bombay Kitchen'), (4, 'Sushi Bar'); CREATE TABLE MenuItems (MenuItemID int, RestaurantID int, Name varchar(50), Revenue decimal(5,2)); INSERT INTO MenuItems (MenuItemID, RestaurantID, Name, Revenue) VALUES (1, 1, 'Mango Paleta', 3.00), (2, 1, 'Pineapple Paleta', 3.00), (3, 2, 'Pad Thai', 12.00), (4, 2, 'Tom Yum Soup', 6.00), (5, 3, 'Chicken Tikka Masala', 15.00), (6, 3, 'Naan Bread', 3.00), (7, 4, 'Spicy Tuna Roll', 8.00), (8, 4, 'Philadelphia Roll', 7.00);", "output": "SELECT R.Name, SUM(MI.Revenue) AS TotalRevenue, ROW_NUMBER() OVER (ORDER BY SUM(MI.Revenue) DESC) AS Rank FROM Restaurants R JOIN MenuItems MI ON R.RestaurantID = MI.RestaurantID GROUP BY R.Name ORDER BY Rank;"}
{"input": " '\uc610\ub85c\uc6b0 \ub77c\uc778' \uc9c0\ud558\ucca0 \ucc28\ub7c9\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ucc28\ub7c9 \uc720\uc9c0 \uad00\ub9ac \uae30\ub85d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE subway_maintenance (vehicle_type VARCHAR(50), last_maintenance DATE); INSERT INTO subway_maintenance (vehicle_type, last_maintenance) VALUES ('Yellow Line', '2021-07-01'), ('Yellow Line', '2021-09-15'), ('Green Line', '2021-08-20');", "output": "SELECT * FROM subway_maintenance WHERE vehicle_type = 'Yellow Line';"}
{"input": " \uace0\uac1d \ud3c9\uc810\uc774 4\uc810 \uc774\uc0c1\uc778 \ubaa8\ub4e0 \uc800\ucd95 \uacc4\uc88c\uc758 \uc6d4 \ud3c9\uade0 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE savings (account_number INT, customer_rating INT, balance DECIMAL(10, 2)); INSERT INTO savings (account_number, customer_rating, balance) VALUES (1, 5, 1500.00), (2, 3, 800.00), (3, 4, 1200.00), (4, 5, 2000.00);", "output": "SELECT AVG(balance) FROM (SELECT account_number, customer_rating, balance, ROW_NUMBER() OVER (PARTITION BY customer_rating ORDER BY balance DESC) AS rn FROM savings) tmp WHERE rn = 1 AND customer_rating > 4;"}
{"input": " 8\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \ub274\uc695\uc2dc\uc5d0\uc11c \ubc1b\uc740 \uae34\uae09 \uc804\ud654\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EmergencyCalls (id INT, city VARCHAR(20), month INT, call_count INT);", "output": "SELECT SUM(call_count) FROM EmergencyCalls WHERE city = 'New York' AND month = 8;"}
{"input": " \uc720\ub7fd \uc804\uae30\ucc28 \uc2dc\uc7a5\uc810\uc720\uc728\uc740?", "context": "CREATE TABLE VehicleSales (id INT, region VARCHAR(50), vehicle_type VARCHAR(50), market_share DECIMAL(5, 2)); INSERT INTO VehicleSales (id, region, vehicle_type, market_share) VALUES (1, 'Europe', 'Electric', 0.23); INSERT INTO VehicleSales (id, region, vehicle_type, market_share) VALUES (2, 'Europe', 'Gasoline', 0.62);", "output": "SELECT region, vehicle_type, market_share FROM VehicleSales WHERE region = 'Europe' AND vehicle_type = 'Electric';"}
{"input": " \uc774\ubc88 \uc2dc\uc98c \ucd1d \ub4dd\uc810\uc774 \uac00\uc7a5 \ub192\uc740 \ud300\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Suns'), (2, 'Clippers'); CREATE TABLE players (player_id INT, player_name VARCHAR(255), team_id INT); INSERT INTO players (player_id, player_name, team_id) VALUES (1, 'Devin Booker', 1), (2, 'Kawhi Leonard', 2); CREATE TABLE games (game_id INT, team_id INT, player_id INT, points INT); INSERT INTO games (game_id, team_id, player_id, points) VALUES (1, 1, 1, 30), (2, 2, 2, 40);", "output": "SELECT teams.team_name, SUM(games.points) FROM teams INNER JOIN players ON teams.team_id = players.team_id INNER JOIN games ON players.player_id = games.player_id GROUP BY teams.team_name ORDER BY SUM(games.points) DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c\uc8fc\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc9c0 \uc54a\uc740 \uc13c\uc11c\uc758 \uc218\uc640 \uc9c0\ub09c\uc8fc\uc5d0 \ub370\uc774\ud130\ub97c \ubcf4\ub0b8 \uc13c\uc11c\uc758 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Sensors (SensorID varchar(5), SensorName varchar(10), LastDataSent timestamp); INSERT INTO Sensors (SensorID, SensorName, LastDataSent) VALUES ('1', 'Sensor 1', '2022-06-22 12:30:00'), ('2', 'Sensor 2', '2022-06-25 16:45:00'), ('3', 'Sensor 3', '2022-06-28 09:10:00');", "output": "SELECT COUNT(*) FROM (SELECT SensorName FROM Sensors WHERE LastDataSent < NOW() - INTERVAL '7 days' UNION SELECT SensorName FROM Sensors WHERE LastDataSent > NOW() - INTERVAL '7 days') AS Subquery;"}
{"input": " '\uc544\uc2dc\uc544'\uc5d0\ub294 \uad70\uc0ac\uae30\uc9c0\uac00 \uba87 \uac1c\ub098 \uc704\uce58\ud574 \uc788\ub098\uc694?", "context": "CREATE TABLE MilitaryBases (id INT, name VARCHAR(100), location VARCHAR(100)); INSERT INTO MilitaryBases (id, name, location) VALUES (1, 'Base1', 'North America'); INSERT INTO MilitaryBases (id, name, location) VALUES (2, 'Base2', 'Asia');", "output": "SELECT COUNT(*) FROM MilitaryBases WHERE location = 'Asia';"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \uc758\ud55c \ud3c9\uade0 \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_offset (id INT, initiative_name VARCHAR(50), region VARCHAR(50), offset_amount INT); INSERT INTO carbon_offset (id, initiative_name, region, offset_amount) VALUES (1, 'GreenCities EU', 'Europe', 25000), (2, 'CleanAir NA', 'North America', 18000), (3, 'SmartGrid AP', 'Asia Pacific', 22000), (4, 'EcoRail EU', 'Europe', 30000), (5, 'SolarCity AP', 'Asia Pacific', 20000), (6, 'WindCities NA', 'North America', 28000);", "output": "SELECT region, AVG(offset_amount) FROM carbon_offset GROUP BY region;"}
{"input": " \ubc1c\uad74\ud604\uc7a5\ubcc4\ub85c \uae08, \uc740\uc73c\ub85c \ub9cc\ub4e0 \uc720\ubb3c\uc740 \uba87 \uac1c\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE ArtifactMaterials (MaterialID INT, ArtifactID INT, Material TEXT); INSERT INTO ArtifactMaterials (MaterialID, ArtifactID, Material) VALUES (1, 1, 'Gold'); INSERT INTO ArtifactMaterials (MaterialID, ArtifactID, Material) VALUES (2, 2, 'Silver'); INSERT INTO ArtifactMaterials (MaterialID, ArtifactID, Material) VALUES (3, 3, 'Bronze'); INSERT INTO ArtifactMaterials (MaterialID, ArtifactID, Material) VALUES (4, 4, 'Iron');", "output": "SELECT e.SiteName, COUNT(*) AS Count FROM ExcavationSites e JOIN ArtifactAnalysis a ON e.SiteID = a.SiteID JOIN ArtifactMaterials m ON a.ArtifactID = m.ArtifactID WHERE m.Material IN ('Gold', 'Silver') GROUP BY e.SiteName;"}
{"input": " 2019\ub144 \ucee4\ubba4\ub2c8\ud2f0 \ucc38\uc5ec \uc9c0\ud45c\uac00 \uac00\uc7a5 \ub192\uc740 \uacfc\uc18c\ub300\ud45c\ub41c \ucee4\ubba4\ub2c8\ud2f0\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Community_Engagement (id INT, community_name VARCHAR(100), year INT, engagement_score INT);", "output": "SELECT community_name FROM Community_Engagement WHERE year = 2019 AND engagement_score IN (SELECT MAX(engagement_score) FROM Community_Engagement WHERE year = 2019) AND community_name IN ('African American', 'Hispanic', 'Indigenous', 'Asian', 'LGBTQ+');"}
{"input": " \ucd1d \uc219\ubc15 \uc2dc\uc124 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uac01 \ub300\ub959\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc219\ubc15 \uc2dc\uc124 \uc218 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SustainableAccommodations (country VARCHAR(20), continent VARCHAR(20), num_sustainable INT, num_total INT); INSERT INTO SustainableAccommodations (country, continent, num_sustainable, num_total) VALUES ('France', 'Europe', 1500, 2000), ('Italy', 'Europe', 1200, 1800), ('Spain', 'Europe', 1000, 1500), ('Brazil', 'South America', 500, 700);", "output": "SELECT country, continent, ROW_NUMBER() OVER (ORDER BY num_total DESC) AS rank FROM SustainableAccommodations;"}
{"input": " 'BTS'\uc640 'Blackpink' \ubc34\ub4dc\uc758 \ub178\ub798\uac00 \ubaa8\ub450 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uc7ac\uc0dd \ubaa9\ub85d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE playlists (playlist_id INT, playlist VARCHAR(50)); CREATE TABLE playlist_songs (playlist_id INT, song_id INT); CREATE TABLE songs (song_id INT, song VARCHAR(50), band VARCHAR(50)); INSERT INTO playlists VALUES (1, 'K-Pop Favorites'), (2, 'Asian Stars'), (3, 'Music Legends'); INSERT INTO playlist_songs VALUES (1, 1), (1, 2), (2, 2), (3, 3); INSERT INTO songs VALUES (1, 'Dynamite', 'BTS'), (2, 'How You Like That', 'Blackpink'), (3, 'Bohemian Rhapsody', 'Queen');", "output": "SELECT p.playlist FROM playlists p JOIN playlist_songs ps1 ON p.playlist_id = ps1.playlist_id JOIN playlist_songs ps2 ON p.playlist_id = ps2.playlist_id JOIN songs s1 ON ps1.song_id = s1.song_id JOIN songs s2 ON ps2.song_id = s2.song_id WHERE s1.band = 'BTS' AND s2.band = 'Blackpink';"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uc77c\ud3c9\uade0 \ub124\ud2b8\uc6cc\ud06c \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE network_investments (investment_id INT, investment_amount DECIMAL(10,2), investment_date DATE); INSERT INTO network_investments (investment_id, investment_amount, investment_date) VALUES (1, 25000.00, '2021-12-25'), (2, 30000.00, '2022-01-07'), (3, 15000.00, '2022-02-01');", "output": "SELECT AVG(investment_amount) FROM network_investments WHERE investment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 2022\ub144 1\uc6d4 \uac01 \ub808\uc2a4\ud1a0\ub791 \uc704\uce58\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE restaurant_revenue(location VARCHAR(255), revenue DECIMAL(10,2), date DATE); INSERT INTO restaurant_revenue VALUES ('Location A', 5000, '2022-01-01'); INSERT INTO restaurant_revenue VALUES ('Location B', 7000, '2022-01-01');", "output": "SELECT location, SUM(revenue) FROM restaurant_revenue WHERE date >= '2022-01-01' AND date < '2022-02-01' GROUP BY location;"}
{"input": "\"VirtualBattle\" \uac8c\uc784\uc744 \ucd1d 500\ud68c \ubbf8\ub9cc \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, PlayerName TEXT, TotalGames INT); INSERT INTO Players (PlayerID, PlayerName, TotalGames) VALUES (1, 'John Doe', 800), (2, 'Jane Smith', 400), (3, 'Bob Johnson', 600); CREATE TABLE PlayerGames (PlayerID INT, GameID TEXT, Playtime INT); INSERT INTO PlayerGames (PlayerID, GameID, Playtime) VALUES (1, 'VirtualBattle', 300), (1, 'VirtualBattle', 500), (2, 'VirtualBattle', 400);", "output": "DELETE FROM Players WHERE PlayerID NOT IN (SELECT PlayerID FROM PlayerGames WHERE GameID = 'VirtualBattle' GROUP BY PlayerID HAVING SUM(Playtime) >= 500);"}
{"input": " \uac01 \uc6b4\uc1a1 \uc218\ub2e8\ubcc4\ub85c \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uacbd\ub85c\uc640 \uac00\uc7a5 \ub0ae\uc740 \uacbd\ub85c\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE RouteRevenue (RouteID int, RouteName varchar(50), TransportMode varchar(50), Revenue int); INSERT INTO RouteRevenue VALUES (1, 'Route 1', 'Bus', 2000); INSERT INTO RouteRevenue VALUES (2, 'Route 2', 'Bus', 5000); INSERT INTO RouteRevenue VALUES (3, 'Route 3', 'Bus', 7000); INSERT INTO RouteRevenue VALUES (4, 'Route 4', 'Subway', 3000); INSERT INTO RouteRevenue VALUES (5, 'Route 5', 'Subway', 4000); INSERT INTO RouteRevenue VALUES (6, 'Route 6', 'Tram', 5500);", "output": "SELECT RouteID, RouteName, TransportMode, Revenue FROM (SELECT RouteID, RouteName, TransportMode, Revenue, ROW_NUMBER() OVER (PARTITION BY TransportMode ORDER BY Revenue DESC, RouteID) rn1, ROW_NUMBER() OVER (PARTITION BY TransportMode ORDER BY Revenue ASC, RouteID) rn2 FROM RouteRevenue) t WHERE rn1 = 1 OR rn2 = 1;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ud310\ub9e4\ub41c \uc81c\ud488\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE product_categories (id INT, product_id INT, category VARCHAR(255)); INSERT INTO product_categories (id, product_id, category) VALUES (1, 1, 'Electronics'), (2, 2, 'Clothing'), (3, 3, 'Home Appliances'); CREATE TABLE sales (id INT, product_id INT, sale_date DATE, quantity_sold INT); INSERT INTO sales (id, product_id, sale_date, quantity_sold) VALUES (1, 1, '2022-03-01', 50), (2, 2, '2022-03-02', 75), (3, 3, '2022-03-03', 100); CREATE TABLE products (id INT, name VARCHAR(255), category VARCHAR(255)); INSERT INTO products (id, name, category) VALUES (1, 'Product X', 'Electronics'), (2, 'Product Y', 'Clothing'), (3, 'Product Z', 'Home Appliances');", "output": "SELECT p.name, p.category, MAX(s.quantity_sold) as max_quantity_sold FROM products p JOIN product_categories pc ON p.id = pc.product_id JOIN sales s ON pc.product_id = s.product_id GROUP BY p.name, p.category;"}
{"input": " 2021\ub144 '\ub098\uc77c\uac15 \uc0bc\uac01\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c '\ubcf4\uc874\ub18d\uc5c5' \uad50\uc721\uc744 \ubc1b\uc740 \ub18d\ubbfc\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE farmers (id INT, name VARCHAR(255), region VARCHAR(255), training_year INT, training_topic VARCHAR(255)); INSERT INTO farmers (id, name, region, training_year, training_topic) VALUES (1, 'Ahmed Hassan', 'Nile Delta', 2021, 'Conservation Agriculture'), (2, 'Fatima Ali', 'Nile Delta', 2020, 'Precision Agriculture');", "output": "SELECT name FROM farmers WHERE region = 'Nile Delta' AND training_topic = 'Conservation Agriculture' AND training_year = 2021;"}
{"input": " \uac74\uac15 \ud615\ud3c9\uc131 \ucc99\ub3c4 \uc810\uc218 \uc0ac\ubd84\uc704\uc218 \uae30\uc900\uc73c\ub85c \ud658\uc790\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, mental_health_parity_score INT, health_equity_metric_score INT); INSERT INTO patients (patient_id, mental_health_parity_score, health_equity_metric_score) VALUES (1, 75, 70), (2, 80, 80), (3, 60, 90), (4, 90, 60), (5, 70, 75);", "output": "SELECT AVG(mental_health_parity_score), NTILE(4) OVER (ORDER BY health_equity_metric_score) AS quartile FROM patients GROUP BY quartile;"}
{"input": " \ucc44\uc2dd\uc8fc\uc758\uc790 \ubc0f \ube44\ucc44\uc2dd\uc8fc\uc758\uc790 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uc7a5 \uc798 \ud314\ub9ac\ub294 3\uac00\uc9c0 \uc694\ub9ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE menu (dish_id INT, dish_name VARCHAR(255), dish_type VARCHAR(255), sales INT); INSERT INTO menu (dish_id, dish_name, dish_type, sales) VALUES (1, 'Quinoa Salad', 'Vegetarian', 350), (2, 'Chicken Sandwich', 'Non-Vegetarian', 500), (3, 'Pumpkin Soup', 'Vegetarian', 200), (4, 'Fish Tacos', 'Non-Vegetarian', 400);", "output": "SELECT dish_type, dish_name, SUM(sales) AS total_sales FROM menu m1 WHERE sales >= (SELECT AVG(sales) FROM menu m2 WHERE m1.dish_type = m2.dish_type AND m2.sales IS NOT NULL) GROUP BY dish_type;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0 \uc788\ub294 \uad50\ub7c9 \uc218 \ucc3e\uae30", "context": "CREATE TABLE Infrastructure (id INT, name VARCHAR(100), type VARCHAR(50), location VARCHAR(100), state VARCHAR(50)); INSERT INTO Infrastructure (id, name, type, location, state) VALUES (1, 'Golden Gate Bridge', 'Bridge', 'San Francisco', 'California');", "output": "SELECT COUNT(*) FROM Infrastructure WHERE state = 'California' AND type = 'Bridge';"}
{"input": " \uad50\uc721\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc870\uc9c1\uc5d0 \uae30\ubd80\ud55c \uace0\uc720\ud55c \uae30\ubd80\uc790\uac00 \uad6d\uac00\ubcc4\ub85c \uba87 \uba85\uc774\ub098 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, country TEXT); CREATE TABLE donations (id INT, donor_id INT, organization_id INT); CREATE TABLE organizations (id INT, name TEXT, cause_area TEXT, country TEXT);", "output": "SELECT f.country, COUNT(DISTINCT d.id) as num_unique_donors FROM donors d INNER JOIN donations ON d.id = donations.donor_id INNER JOIN organizations o ON donations.organization_id = o.id WHERE o.cause_area = 'education' GROUP BY f.country;"}
{"input": " \ubcf4\ud5d8\uc885\ub958\ubcc4 \uccad\uad6c\uae08\uc561 \ubc30\ubd84\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Claims (PolicyID int, ClaimAmount int, PolicyType varchar(20)); INSERT INTO Claims (PolicyID, ClaimAmount, PolicyType) VALUES (1, 500, 'Auto'), (2, 2000, 'Home'), (3, 800, 'Auto');", "output": "SELECT PolicyType, AVG(ClaimAmount) OVER (PARTITION BY PolicyType) as AvgClaimAmount FROM Claims;"}
{"input": "\uc720\ub7fd \uc9c0\uc5ed\uc758 \uad6d\uac00\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT PRIMARY KEY, product_id INT, quantity INT, sale_price DECIMAL(5,2), order_date DATE, country VARCHAR(255), region VARCHAR(255)); INSERT INTO sales (id, product_id, quantity, sale_price, order_date, country, region) VALUES (1, 1, 2, 59.99, '2021-12-01', 'Germany', 'Europe'); INSERT INTO sales (id, product_id, quantity, sale_price, order_date, country, region) VALUES (2, 2, 1, 39.99, '2021-12-03', 'France', 'Europe');", "output": "SELECT region, SUM(quantity * sale_price) as total_revenue FROM sales WHERE region = 'Europe' GROUP BY region;"}
{"input": " \uc720\ub7fd\uc758 \uc74c\uc545 \ucd95\uc81c\uc5d0\uc11c \uc5b4\ub5a4 \uc7ac\uc988 \uc544\ud2f0\uc2a4\ud2b8\uac00 \uacf5\uc5f0\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, ArtistName VARCHAR(100), Genre VARCHAR(50)); CREATE TABLE Festivals (FestivalID INT PRIMARY KEY, FestivalName VARCHAR(100), Location VARCHAR(100)); CREATE TABLE Performances (PerformanceID INT PRIMARY KEY, ArtistID INT, FestivalID INT); INSERT INTO Artists (ArtistID, ArtistName, Genre) VALUES (1, 'Artist A', 'Rock'), (2, 'Artist B', 'Jazz'), (3, 'Artist C', 'Jazz'); INSERT INTO Festivals (FestivalID, FestivalName, Location) VALUES (1, 'Festival 1', 'Europe'), (2, 'Festival 2', 'USA'), (3, 'Festival 3', 'Europe'); INSERT INTO Performances (PerformanceID, ArtistID, FestivalID) VALUES (1, 2, 1), (2, 3, 1), (3, 1, 2);", "output": "SELECT Artists.ArtistName FROM Artists INNER JOIN Performances ON Artists.ArtistID = Performances.ArtistID INNER JOIN Festivals ON Performances.FestivalID = Festivals.FestivalID WHERE Artists.Genre = 'Jazz' AND Festivals.Location = 'Europe';"}
{"input": " \ud2b9\uc815 \uc778\uc885/\ubbfc\uc871\uc73c\ub85c \uad6c\uc131\ub41c \uac01 \ub3c4\uc2dc\uc758 \uc778\uad6c \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE population (city VARCHAR(255), race_ethnicity VARCHAR(255), population INT); INSERT INTO population (city, race_ethnicity, population) VALUES ('City A', 'White', 500000), ('City A', 'Black', 300000), ('City A', 'Hispanic', 200000), ('City B', 'White', 400000), ('City B', 'Black', 100000), ('City B', 'Hispanic', 300000);", "output": "SELECT s1.city, (s1.population * 100.0 / (SELECT SUM(population) FROM population s2 WHERE s2.city = s1.city)) as pct_race_ethnicity FROM population s1;"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed \ubcd1\uc6d0, \uc9c4\ub8cc\uc18c\uc758 \ucd5c\uc18c \ubcd1\uc0c1 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hospitals (name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), num_beds INT); INSERT INTO Hospitals (name, location, type, num_beds) VALUES ('Rural General Hospital', 'Springfield', 'Hospital', 50), ('Rural Critical Access Hospital', 'Maplewood', 'Hospital', 10); CREATE TABLE Clinics (name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), num_beds INT); INSERT INTO Clinics (name, location, type, num_beds) VALUES ('Rural Community Health Center', 'Oakwood', 'Clinic', 0);", "output": "SELECT MIN(num_beds) FROM Hospitals WHERE location LIKE '%rural%' UNION ALL SELECT MIN(num_beds) FROM Clinics WHERE location LIKE '%rural%';"}
{"input": " 123\ubc88 \ub3c4\ub85c\ub97c \uc8fc\ud589\ud55c \ubaa8\ub4e0 \uc6b4\uc804\uc790\uc758 \uc774\ub984\uacfc \ucd9c\uc2e0\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drivers (driver_id INT, name TEXT, origin TEXT);CREATE TABLE route_drivers (driver_id INT, route_id INT);CREATE TABLE routes (route_id INT, route_name TEXT); INSERT INTO drivers VALUES (1, 'John Doe', 'New York'); INSERT INTO drivers VALUES (2, 'Jane Smith', 'Los Angeles'); INSERT INTO route_drivers VALUES (1, 123); INSERT INTO route_drivers VALUES (2, 123); INSERT INTO routes VALUES (123, 'Route 123');", "output": "SELECT drivers.name, drivers.origin FROM drivers INNER JOIN route_drivers ON drivers.driver_id = route_drivers.driver_id INNER JOIN routes ON route_drivers.route_id = routes.route_id WHERE routes.route_name = 'Route 123';"}
{"input": " \uc790\uc2e0\uc758 \ub178\ub798 \uc2a4\ud2b8\ub9bc\uc774 100\ub9cc \uac1c \uc774\uc0c1\uc778 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Concerts (id INT, artist VARCHAR(100), city VARCHAR(100), revenue DECIMAL(10,2)); CREATE TABLE Songs (id INT, title VARCHAR(100), artist VARCHAR(100), streams INT);", "output": "SELECT SUM(revenue) FROM Concerts c JOIN (SELECT artist FROM Songs WHERE streams > 1000000) s ON c.artist = s.artist;"}
{"input": " \uc694\uac00\ub3c4 \ud558\uc9c0\ub9cc \uc0ac\uc774\ud074\ub9c1 \uc911\uc5d0 \uc2ec\ubc15\uc218\uac00 \ub354 \ub192\uc740 \ud68c\uc6d0\uc758 \ud3c9\uade0 \ub2ec\ub9ac\uae30 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Members (ID INT); CREATE TABLE Runs (MemberID INT, Distance FLOAT); CREATE TABLE Yoga (MemberID INT); CREATE TABLE CyclingHeartRate (MemberID INT, CyclingHeartRate INT); INSERT INTO Members (ID) VALUES (1), (2); INSERT INTO Runs (MemberID, Distance) VALUES (1, 5.6), (1, 7.8), (2, 6.4); INSERT INTO Yoga (MemberID) VALUES (1), (2); INSERT INTO CyclingHeartRate (MemberID, CyclingHeartRate) VALUES (1, 60), (2, 55);", "output": "SELECT AVG(Distance) FROM Runs WHERE MemberID IN (SELECT MemberID FROM Members JOIN Yoga ON Members.ID = Yoga.MemberID) AND MemberID IN (SELECT MemberID FROM CyclingHeartRate WHERE CyclingHeartRate > (SELECT AVG(CyclingHeartRate) FROM CyclingHeartRate));"}
{"input": " '\uc300'\uc774\ub098 '\ud638\ubc00'\uc744 \uc7ac\ubc30\ud558\ub294 \ubaa8\ub4e0 \ub18d\ubbfc\uc758 \uc704\uce58\uc640 \uc791\ubb3c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), crop VARCHAR(50)); INSERT INTO farmers (id, name, location, crop) VALUES (1, 'Jane Smith', 'Summerfield', 'Rice'), (2, 'Janet Jones', 'Summerfield', 'Rye');", "output": "SELECT farmers.location, farmers.crop FROM farmers WHERE farmers.crop = 'Rice' OR farmers.crop = 'Rye';"}
{"input": "\ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc5d0\uc11c \uc5f4\ub9b0 '\ubb38\ud654 \ub2e4\uc591\uc131 \ud398\uc2a4\ud2f0\ubc8c'\uc5d0 \ud788\uc2a4\ud328\ub2c9 \ub610\ub294 \ub77c\ud2f4\uacc4\ub85c \ud655\uc778\ub41c \ucc38\uc11d\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE demographics (event_name VARCHAR(50), city VARCHAR(50), ethnicity VARCHAR(20), attendees INT); INSERT INTO demographics (event_name, city, ethnicity, attendees) VALUES ('Cultural Diversity Festival', 'Los Angeles', 'Hispanic or Latino', 300);", "output": "SELECT SUM(attendees) FROM demographics WHERE event_name = 'Cultural Diversity Festival' AND city = 'Los Angeles' AND ethnicity = 'Hispanic or Latino';"}
{"input": " '2022\ub144 1\ubd84\uae30'\uc758 \ucd1d \uac70\ub798 \uc218\uc640 \uac01 \ud0c8\uc911\uc559\ud654 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3c9\uade0 \uac70\ub798 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE decentralized_apps (id INT, name TEXT, transactions INT, transaction_value INT, deployment_date DATE); INSERT INTO decentralized_apps (id, name, transactions, transaction_value, deployment_date) VALUES (1, 'App1', 10, 50, '2022-01-01'), (2, 'App2', 20, 25, '2021-12-01');", "output": "SELECT decentralized_apps.name, SUM(decentralized_apps.transactions) AS total_transactions, AVG(decentralized_apps.transaction_value) AS avg_transaction_value FROM decentralized_apps INNER JOIN (SELECT * FROM dates WHERE quarter = 'Q1' AND year = 2022) AS dates ON decentralized_apps.deployment_date = dates.date GROUP BY decentralized_apps.name"}
{"input": " 2019\ub144 \uc138\ub968\uc758 \ucd5c\uc18c \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE production (year INT, element VARCHAR(10), quantity INT); INSERT INTO production (year, element, quantity) VALUES (2015, 'Cerium', 1200), (2016, 'Cerium', 1400), (2017, 'Cerium', 1500), (2018, 'Cerium', 1700), (2019, 'Cerium', 1300), (2020, 'Cerium', 1400), (2021, 'Cerium', 1500);", "output": "SELECT MIN(quantity) FROM production WHERE element = 'Cerium' AND year = 2019;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ubaa8\ub4e0 \uce5c\ud658\uacbd \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc808\uac10 \ud6a8\uacfc\ub294 \uc5bc\ub9c8\uc774\uba70, \uac01 \uc720\ud615\ubcc4\ub85c \uba87 \uac1c\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, country VARCHAR(2), building_type VARCHAR(20), energy_savings FLOAT); INSERT INTO green_buildings (id, country, building_type, energy_savings) VALUES (1, 'US', 'Residential', 30.5), (2, 'US', 'Commercial', 45.3), (3, 'CA', 'Residential', 28.2), (4, 'CA', 'Commercial', 42.1);", "output": "SELECT 'US' AS country, AVG(energy_savings) AS avg_energy_savings, COUNT(*) FILTER (WHERE building_type = 'Residential') AS res_count, COUNT(*) FILTER (WHERE building_type = 'Commercial') AS comm_count FROM green_buildings WHERE country = 'US' UNION ALL SELECT 'CA' AS country, AVG(energy_savings) AS avg_energy_savings, COUNT(*) FILTER (WHERE building_type = 'Residential') AS res_count, COUNT(*) FILTER (WHERE building_type = 'Commercial') AS comm_count FROM green_buildings WHERE country = 'CA';"}
{"input": " \uc720\ub7fd\uc758 \ucd1d \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4\ub7c9\uc744 \ucc3e\uc544 \uc544\ud504\ub9ac\uce74\uc758 \ucd1d \ud310\ub9e4\ub7c9\uacfc \ube44\uad50\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE MilitaryEquipmentSales (equipment_id INT, region VARCHAR(50), sale_price DECIMAL(10,2)); INSERT INTO MilitaryEquipmentSales (equipment_id, region, sale_price) VALUES (1, 'Europe', 500000.00), (2, 'Africa', 350000.00);", "output": "SELECT SUM(sale_price) FROM MilitaryEquipmentSales WHERE region = 'Europe' UNION SELECT SUM(sale_price) FROM MilitaryEquipmentSales WHERE region = 'Africa'"}
{"input": " \ud558\ub098 \uc774\uc0c1\uc758 \ud574\uc591 \ubd84\uc9c0\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ubaa8\ub4e0 \ud574\uc591 \uc0dd\ubb3c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE species (id INT, name VARCHAR(255), habitat VARCHAR(255)); CREATE TABLE ocean_basin (id INT, name VARCHAR(255)); CREATE TABLE species_ocean_basin (species_id INT, ocean_basin_id INT);", "output": "SELECT species.name FROM species JOIN species_ocean_basin ON species.id = species_ocean_basin.species_id JOIN ocean_basin ON species_ocean_basin.ocean_basin_id = ocean_basin.id GROUP BY species.name HAVING COUNT(DISTINCT ocean_basin.name) > 1;"}
{"input": " 2021\ub144 \ub9d0 \uae30\uc900 'PrecisionFarm' \ud31c\uc758 \uac01 \ubd84\uc57c\uc5d0 \ubc30\uce58\ub41c IoT \uc7a5\uce58\uc758 \ucd1d \uc218\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE IoTData (id INT, field VARCHAR(255), device_type VARCHAR(255), deployment_date DATE);", "output": "SELECT field, COUNT(DISTINCT device_type) FROM IoTData WHERE field IN ('PrecisionFarm1', 'PrecisionFarm2', 'PrecisionFarm3') AND YEAR(deployment_date) = 2021 AND MONTH(deployment_date) = 12 GROUP BY field;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ube44\uac74 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc5d0 \uc9c0\ucd9c\ud558\ub294 \uc0c1\uc704 3\uba85\uc758 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, customer_name TEXT, country TEXT); INSERT INTO customers (customer_id, customer_name, country) VALUES (1, 'Jessica Smith', 'US'), (2, 'David Johnson', 'CA'), (3, 'Sarah Thompson', 'US'), (4, 'Michael Brown', 'UK'), (5, 'Emily Davis', 'US'); CREATE TABLE sales (sale_id INT, customer_id INT, product_id INT, sale_quantity INT, is_vegan BOOLEAN); INSERT INTO sales (sale_id, customer_id, product_id, sale_quantity, is_vegan) VALUES (1, 1, 1, 50, true), (2, 2, 2, 75, false), (3, 3, 3, 60, true), (4, 4, 4, 80, false), (5, 5, 5, 90, true); CREATE TABLE products (product_id INT, product_name TEXT, brand_id INT, is_vegan BOOLEAN); INSERT INTO products (product_id, product_name, brand_id, is_vegan) VALUES (1, 'Facial Cleanser', 1, true), (2, 'Moisturizing Lotion', 2, false), (3, 'Vegan Serum', 3, true), (4, 'Shea Butter Cream', 4, false), (5, 'Jojoba Oil', 5, true);", "output": "SELECT c.customer_name, SUM(s.sale_quantity * p.is_vegan) as total_spent_on_vegan_products FROM sales s JOIN customers c ON s.customer_id = c.customer_id JOIN products p ON s.product_id = p.product_id WHERE c.country = 'US' GROUP BY c.customer_name ORDER BY total_spent_on_vegan_products DESC LIMIT 3;"}
{"input": " \uc6cc\uc2f1\ud134 DC\uc5d0\uc11c\ub294 \ud55c \ub2ec\uc5d0 \uba87 \uac74\uc758 FOIA \uc694\uccad\uc774 \uc81c\ucd9c\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE FoiaRequests ( RequestId INT, RequestDate DATE, RequestCity VARCHAR(255) ); INSERT INTO FoiaRequests (RequestId, RequestDate, RequestCity) VALUES (1, '2021-01-01', 'Washington DC'), (2, '2021-02-01', 'Washington DC'), (3, '2021-03-01', 'Washington DC');", "output": "SELECT ROW_NUMBER() OVER (ORDER BY EXTRACT(MONTH FROM RequestDate)) as Month, COUNT(*) as NumRequests FROM FoiaRequests WHERE RequestCity = 'Washington DC' GROUP BY EXTRACT(MONTH FROM RequestDate);"}
{"input": " \ucd1d \ubcf4\uc870\uae08 \uc9c0\uae09\uc561\uc744 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uac1c \ubd80\ubb38\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Grants (GrantID INT, Sector TEXT, Amount DECIMAL);", "output": "SELECT Sector, SUM(Amount) OVER (PARTITION BY Sector ORDER BY SUM(Amount) DESC) AS TotalAmount, RANK() OVER (ORDER BY SUM(Amount) DESC) AS Rank FROM Grants GROUP BY Sector ORDER BY Rank;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ucd9c\ud310\ub41c \uae30\uc0ac\uc758 \uac01 \uc800\uc790\ubcc4 \ucd1d \uacf5\uc720 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArticleShares (ShareID INT, ArticleID INT, Shares INT);   CREATE TABLE Articles (ArticleID INT, Title VARCHAR(100), AuthorID INT, Category VARCHAR(50), WordCount INT, PublishedDate DATE);   CREATE TABLE Authors (AuthorID INT, Name VARCHAR(50), Age INT, Gender VARCHAR(10), LastBookPublished DATE);", "output": "SELECT AuthorID, SUM(Shares) FROM ArticleShares INNER JOIN Articles ON ArticleShares.ArticleID = Articles.ArticleID INNER JOIN Authors ON Articles.AuthorID = Authors.AuthorID WHERE PublishedDate >= DATEADD(month, -1, GETDATE()) GROUP BY AuthorID;"}
{"input": " '\uc544\uc2dc\uc544' \uc9c0\uc5ed \uad6d\uac00\uc5d0\uc11c '\ud654\ubb3c' \uc720\ud615 \uc120\ubc15\uc774 \uc6b4\uc1a1\ud55c \ucd1d \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name VARCHAR(20), region VARCHAR(20)); CREATE TABLE vessels (id INT, name VARCHAR(20), type VARCHAR(20), country_id INT); CREATE TABLE cargoes (id INT, vessel_id INT, weight INT); INSERT INTO countries (id, name, region) VALUES (1, 'China', 'Asia'), (2, 'Canada', 'North America'), (3, 'Brazil', 'South America'); INSERT INTO vessels (id, name, type, country_id) VALUES (1, 'VesselA', 'Cargo', 1), (2, 'VesselB', 'Tanker', 1), (3, 'VesselC', 'Cargo', 2), (4, 'VesselD', 'Passenger', 3); INSERT INTO cargoes (id, vessel_id, weight) VALUES (1, 1, 50000), (2, 1, 75000), (3, 2, 100000), (4, 3, 60000), (5, 3, 65000);", "output": "SELECT SUM(weight) FROM cargoes JOIN vessels ON cargoes.vessel_id = vessels.id JOIN countries ON vessels.country_id = countries.id WHERE countries.region = 'Asia' AND type = 'Cargo';"}
{"input": " \uac70\ub798 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud574\ub2f9 \uc0b0\uc5c5 \ubc94\uc8fc \ubc0f \ub4f1\ub85d\ub41c \uad6d\uac00 \uc774\ub984\uacfc \ud568\uaed8 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE dapps (dapp_id INT, dapp_name VARCHAR(255), total_transactions INT, industry_category VARCHAR(255), country_name VARCHAR(255));", "output": "SELECT dapp_name, total_transactions, industry_category, country_name FROM (SELECT dapp_name, total_transactions, industry_category, country_name, ROW_NUMBER() OVER (ORDER BY total_transactions DESC) as rank FROM dapps) d WHERE rank <= 3;"}
{"input": " \uad00\uad11 \ubd80\ubb38\uc5d0\uc11c CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourism_emissions (id INT, country VARCHAR(255), co2_emissions INT, visit_date DATE); INSERT INTO tourism_emissions (id, country, co2_emissions, visit_date) VALUES (1, 'United States', 5000, '2022-01-01'), (2, 'China', 4000, '2022-03-15'), (3, 'India', 3000, '2022-06-01'), (4, 'Russia', 2500, '2022-04-01'), (5, 'Germany', 2000, '2022-02-01');", "output": "SELECT country, SUM(co2_emissions) FROM tourism_emissions WHERE visit_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY country ORDER BY SUM(co2_emissions) DESC LIMIT 5;"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uc131\ubd84\uacfc \ud574\ub2f9 \uc778\uc99d\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE ingredients (id INT PRIMARY KEY, name VARCHAR(255), origin VARCHAR(255)); CREATE TABLE sustainability (id INT PRIMARY KEY, ingredient_id INT, certification VARCHAR(255));", "output": "SELECT ingredients.name, sustainability.certification FROM ingredients INNER JOIN sustainability ON ingredients.id = sustainability.ingredient_id INNER JOIN regions ON ingredients.origin = regions.name WHERE regions.name = 'Africa';"}
{"input": " \uc11c\uc2dd\uc9c0\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ubaa8\ub4e0 \uc885\uacfc \ud3c9\uade0 \uccb4\uc911\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE species (id INT, name VARCHAR(255), weight INT);CREATE TABLE animals (id INT, species_id INT, habitat_id INT);CREATE TABLE habitats (id INT, name VARCHAR(255)); INSERT INTO species (id, name, weight) VALUES (1, 'Tiger', 150), (2, 'Elephant', 6000), (3, 'Giraffe', 1200), (4, 'Zebra', 350), (5, 'Lion', 200); INSERT INTO animals (id, species_id, habitat_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 1), (4, 4, 3), (5, 5, 2); INSERT INTO habitats (id, name) VALUES (1, 'Savannah'), (2, 'Jungle'), (3, 'Mountains');", "output": "SELECT h.name AS habitat_name, AVG(s.weight) AS avg_weight FROM species s INNER JOIN animals a ON s.id = a.species_id INNER JOIN habitats h ON a.habitat_id = h.id GROUP BY h.name;"}
{"input": "200\uac1c \uc774\uc0c1 \ud310\ub9e4\ub41c \uc774\uc0c1\uce58\ub97c \uc81c\uc678\ud558\uace0 \uc720\uae30\ub18d \uba74\uc73c\ub85c \ub9cc\ub4e0 \uc758\ub958\uc758 \ud3c9\uade0 \ud310\ub9e4 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE materials (id INT PRIMARY KEY, type VARCHAR(255), organic BOOLEAN); CREATE TABLE garments (id INT PRIMARY KEY, material_id INT, FOREIGN KEY (material_id) REFERENCES materials(id)); CREATE TABLE sales (id INT PRIMARY KEY, garment_id INT, date DATE, quantity INT, price DECIMAL(5,2));", "output": "SELECT AVG(sales.quantity) as avg_quantity_sold FROM sales INNER JOIN garments ON sales.garment_id = garments.id INNER JOIN materials ON garments.material_id = materials.id WHERE materials.organic = TRUE HAVING COUNT(DISTINCT sales.id) > 50 AND sales.quantity < 200;"}
{"input": " \uc77c\ubcf8 \uc5ec\ud589 \uc8fc\uc758\ubcf4 \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE travel_advisories (id INT PRIMARY KEY, country VARCHAR(50), advisory TEXT);", "output": "WITH cte AS (UPDATE travel_advisories SET advisory = 'New advisory for Japan' WHERE country = 'Japan' RETURNING *) SELECT * FROM cte;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uc5b4\ub5a4 \ud654\ubb3c\uc120\uc774 \ub274\uc695\ud56d\uc744 \ubc29\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE port_visits (id INT, ship_id INT, port_id INT, visit_date DATE); INSERT INTO port_visits (id, ship_id, port_id, visit_date) VALUES (1, 1, 1, '2022-01-01'), (2, 2, 2, '2022-01-15'), (3, 3, 1, '2022-02-05'); CREATE TABLE ports (id INT, name VARCHAR(50)); INSERT INTO ports (id, name) VALUES (1, 'Port of New York'), (2, 'Port of Los Angeles'), (3, 'Port of Miami');", "output": "SELECT port_visits.ship_id, cargo_ships.name, port_visits.visit_date FROM port_visits JOIN ports ON port_visits.port_id = ports.id JOIN cargo_ships ON port_visits.ship_id = cargo_ships.id WHERE ports.name = 'Port of New York' AND port_visits.visit_date >= DATEADD(day, -30, GETDATE());"}
{"input": " \uac01 \uc8fc\uc758 \uc2dc\uace8 \ubcd1\uc6d0\uc5d0\uc11c \uac00\uc7a5 \uac00\uae4c\uc6b4 \uc9c4\ub8cc\uc18c\uae4c\uc9c0\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, state TEXT); INSERT INTO hospitals (id, name, location, state) VALUES (1, 'Hospital A', 'Rural Texas', 'Texas'), (2, 'Hospital B', 'Rural California', 'California'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, state TEXT); INSERT INTO clinics (id, name, location, state) VALUES (1, 'Clinic A', 'Rural Texas', 'Texas'), (2, 'Clinic B', 'Rural California', 'California'); CREATE TABLE distance (hospital_id INT, clinic_id INT, distance FLOAT); INSERT INTO distance (hospital_id, clinic_id, distance) VALUES (1, 1, 15.0), (1, 2, 20.0), (2, 1, 25.0), (2, 2, 30.0);", "output": "SELECT h.state, AVG(d.distance) AS avg_distance FROM hospitals h INNER JOIN distance d ON h.id = d.hospital_id INNER JOIN (SELECT hospital_id, MIN(distance) AS min_distance FROM distance GROUP BY hospital_id) m ON d.hospital_id = m.hospital_id AND d.distance = m.min_distance GROUP BY h.state;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed\uc758 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uacfc \ud574\uc591 \uc0dd\ubb3c \uc5f0\uad6c \uae30\uc9c0\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pollution_control_initiatives (id INT, name VARCHAR(255), region VARCHAR(255)); CREATE TABLE marine_life_research_stations (id INT, name VARCHAR(255), region VARCHAR(255));", "output": "SELECT SUM(cnt) FROM (SELECT COUNT(*) cnt FROM pollution_control_initiatives WHERE region = 'Arctic' UNION ALL SELECT COUNT(*) FROM marine_life_research_stations WHERE region = 'Arctic') x;"}
{"input": " \ubbf8\uad6d\uc758 \uc804\uae30 \uc790\ub3d9\ucc28 \ucc44\ud0dd\ub960\uc740 \uc5f0\ub3c4\ubcc4 \uc5b4\ub290 \uc815\ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE electric_vehicle_stats (country VARCHAR(50), adoption_rate DECIMAL(3,1), year INT);", "output": "SELECT year, AVG(adoption_rate) FROM electric_vehicle_stats WHERE country = 'United States' GROUP BY year;"}
{"input": " '\ub3c5\uc77c'\uc758 \uc21c\ud658\uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c \ud30c\uc545", "context": "CREATE TABLE circular_economy (id INT, initiative VARCHAR(50), country VARCHAR(20)); INSERT INTO circular_economy (id, initiative, country) VALUES (1, 'Recycling Program', 'Germany'), (2, 'Waste Reduction Campaign', 'Germany');", "output": "SELECT initiative FROM circular_economy WHERE country = 'Germany';"}
{"input": " \uac01 \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 '\uc720\uae30\ub18d \uc0ac\uacfc'\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Stores (store_id INT, store_name VARCHAR(255)); INSERT INTO Stores (store_id, store_name) VALUES (1, 'Store A'), (2, 'Store B'), (3, 'Store C'); CREATE TABLE Products (product_id INT, product_name VARCHAR(255), is_organic BOOLEAN); INSERT INTO Products (product_id, product_name, is_organic) VALUES (1, 'Apples', FALSE), (2, 'Organic Apples', TRUE); CREATE TABLE Sales (sale_id INT, store_id INT, product_id INT, quantity INT); INSERT INTO Sales (sale_id, store_id, product_id, quantity) VALUES (1, 1, 2, 50), (2, 2, 2, 75), (3, 3, 2, 100);", "output": "SELECT s.store_name, p.product_name, SUM(s.quantity) as total_quantity FROM Sales s JOIN Stores st ON s.store_id = st.store_id JOIN Products p ON s.product_id = p.product_id WHERE p.is_organic = TRUE AND p.product_name = 'Organic Apples' GROUP BY s.store_id;"}
{"input": " \uc11d\ud0c4 \ucc44\uad74 \uc0b0\uc5c5 \uc885\uc0ac\uc790\uc758 \uc9c0\uc5ed\ubcc4, \uc131\ubcc4\ub85c \ubd84\ub958\ud55c \ud3c9\uade0 \uc0dd\uc0b0\uc131\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE coal_miners (id INT, region VARCHAR(255), gender VARCHAR(255), productivity FLOAT);", "output": "SELECT region, gender, AVG(productivity) FROM coal_miners GROUP BY region, gender;"}
{"input": " \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc5d0 \ub530\ub77c \uc9c0\uc5ed\ubcc4 \uc5f0\uc18d \uace0\uac1d \uac04 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer_usage (region VARCHAR(50), customer_id INT, data_usage_gb FLOAT); INSERT INTO customer_usage (region, customer_id, data_usage_gb) VALUES ('Chicago', 1, 25.6), ('Chicago', 2, 30.9), ('New York', 3, 45.2), ('New York', 4, 52.1), ('Los Angeles', 5, 15.6), ('Los Angeles', 6, 18.9);", "output": "SELECT region, customer_id, data_usage_gb, LEAD(data_usage_gb) OVER (PARTITION BY region ORDER BY data_usage_gb) - data_usage_gb as data_usage_diff FROM customer_usage;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0\uc11c \ub0a8\uc131\uc73c\ub85c \ud655\uc778\ub418\uc5b4 \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (patient_id INT, age INT, gender TEXT, treatment TEXT, state TEXT); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (1, 30, 'Female', 'CBT', 'Texas'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (2, 45, 'Male', 'DBT', 'California'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (3, 25, 'Non-binary', 'Therapy', 'Washington'); INSERT INTO patients (patient_id, age, gender, treatment, state) VALUES (4, 55, 'Male', 'Therapy', 'Texas');", "output": "SELECT COUNT(*) FROM patients WHERE gender = 'Male' AND treatment = 'Therapy' AND state = 'Texas';"}
{"input": " 2020\ub144 \uc2b9\uc778\ub41c \uc758\uc57d\ud488\uc758 \ucd1d R&D \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rd_expenses (drug_name VARCHAR(255), expenses INT); INSERT INTO rd_expenses (drug_name, expenses) VALUES ('DrugA', 2000000), ('DrugB', 3000000), ('DrugC', 4000000); CREATE TABLE drug_approval (drug_name VARCHAR(255), approval_year INT); INSERT INTO drug_approval (drug_name, approval_year) VALUES ('DrugA', 2019), ('DrugB', 2020), ('DrugC', 2018);", "output": "SELECT SUM(expenses) FROM rd_expenses WHERE drug_name IN (SELECT drug_name FROM drug_approval WHERE approval_year = 2020);"}
{"input": " \uad11\uc5c5\ubd80 \uc815\uaddc\uc9c1 \uadfc\ub85c\uc790\uc758 \uc131\ubcc4 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Employees(id INT, name VARCHAR(50), department VARCHAR(50), position VARCHAR(50), salary FLOAT, full_time BOOLEAN);", "output": "SELECT CASE WHEN gender = 'Male' THEN 'Males' ELSE 'Females' END AS Gender, AVG(salary) as Avg_Salary FROM (SELECT id, name, department, position, salary, full_time, SUBSTRING(name, 1, 1) AS gender FROM Employees WHERE department = 'Mining' AND full_time = TRUE) AS subquery GROUP BY gender;"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE weather (country VARCHAR(20), year INT, temperature DECIMAL(5,2)); INSERT INTO weather VALUES ('US', 2010, 10.5), ('US', 2011, 11.2), ('US', 2012, 12.1), ('CA', 2010, 8.7), ('CA', 2011, 8.9), ('CA', 2012, 9.3);", "output": "SELECT AVG(temperature) as avg_temp_change, country FROM (SELECT ROW_NUMBER() OVER (PARTITION BY country ORDER BY year DESC) rn, country, temperature FROM weather WHERE year >= 2010) t WHERE rn <= 10 GROUP BY country;"}
{"input": " \uacf5\uc815\ubb34\uc5ed \uc778\uc99d \uc758\ub958\uc758 \ucd1d \uc0dd\uc0b0\ube44\uc6a9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE certifications (certification_id INT, certification_name TEXT); INSERT INTO certifications (certification_id, certification_name) VALUES (1, 'Fair Trade'), (2, 'GOTS Organic'), (3, 'B Corp'); CREATE TABLE garments (garment_id INT, garment_name TEXT, production_cost FLOAT, certification_id INT); INSERT INTO garments (garment_id, garment_name, production_cost, certification_id) VALUES (1, 'Organic Cotton Tee', 15.50, 1), (2, 'Cotton Tote Bag', 8.25, NULL), (3, 'Recycled Polyester Hoodie', 28.99, NULL), (4, 'Organic Cotton Dress', 22.00, 1), (5, 'Hemp Trousers', 35.00, NULL), (6, 'Bamboo Shirt', 27.50, NULL), (7, 'Fair Trade Top', 18.00, 1);", "output": "SELECT SUM(g.production_cost) FROM garments g WHERE g.certification_id = 1;"}
{"input": " 2021\ub144 1\ubd84\uae30 \uc911\ub3d9\uc5d0 \ub300\ud55c \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_equipment_sales (sale_id INT, vendor VARCHAR(255), equipment_type VARCHAR(255), quantity INT, country VARCHAR(255), sale_date DATE); INSERT INTO military_equipment_sales (sale_id, vendor, equipment_type, quantity, country, sale_date) VALUES (1, 'Acme Corp', 'tanks', 50, 'Country A', '2021-01-01'); INSERT INTO military_equipment_sales (sale_id, vendor, equipment_type, quantity, country, sale_date) VALUES (2, 'Global Defence Corp', 'artillery', 20, 'Country B', '2021-01-15');", "output": "SELECT SUM(quantity * (SELECT price FROM military_equipment_prices WHERE equipment_type = military_equipment_sales.equipment_type)) FROM military_equipment_sales JOIN countries ON military_equipment_sales.country = countries.country_code WHERE countries.region = 'Middle East' AND military_equipment_sales.sale_date >= '2021-01-01' AND military_equipment_sales.sale_date <= '2021-03-31';"}
{"input": " \uc778\uad6c\uac00 500,000\uba85\uc774 \ub118\ub294 \ub3c4\uc2dc \uc911 \uc5ec\uc131\uc758 \ube44\uc728\uc774 \uc804\uad6d \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \ubaa8\ub4e0 \ub3c4\uc2dc\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE cities (name VARCHAR(50), population INT, women_workforce_percentage DECIMAL(5,2)); INSERT INTO cities (name, population, women_workforce_percentage) VALUES ('New York', 8500000, 48.5), ('Los Angeles', 4000000, 47.3), ('Chicago', 2700000, 48.4), ('Houston', 2300000, 46.2), ('Phoenix', 1700000, 45.8);", "output": "SELECT name FROM cities WHERE population > 500000 AND women_workforce_percentage > (SELECT AVG(women_workforce_percentage) FROM cities);"}
{"input": " 2020\ub144 1\uc6d4 1\uc77c \uc774\ud6c4\uc5d0 \uc124\uce58\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\ud589\uc744 \uac16\ucd98 \ud5c8\uac00\uc5d0 \ub300\ud55c \uac74\uc124 \uc774\ubca4\ud2b8 \uc720\ud615\uacfc \uc2dc\uc791 \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project_timeline (event_id INT, permit_id INT, event_type TEXT, start_date DATE, end_date DATE); INSERT INTO project_timeline (event_id, permit_id, event_type, start_date, end_date) VALUES (7, 7, 'Foundation', '2021-01-01', '2021-03-05');", "output": "SELECT event_type, start_date FROM project_timeline pt JOIN building_permits bp ON pt.permit_id = bp.permit_id JOIN sustainable_practices sp ON bp.permit_id = sp.permit_id WHERE sp.installation_date > '2020-01-01';"}
{"input": "\uac01 ISP\uc758 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\ub85c\ubd80\ud130 \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc774\uba70, \uc804\uccb4 \uc218\uc775\uc5d0\uc11c \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uc218\uc775\uc774 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE isps (id INT, name VARCHAR(255));CREATE TABLE mobile_subscribers (id INT, isp_id INT, monthly_revenue DECIMAL(10,2));CREATE TABLE broadband_subscribers (id INT, isp_id INT, monthly_revenue DECIMAL(10,2));", "output": "SELECT isp.name, SUM(mobile_subscribers.monthly_revenue) as mobile_revenue, SUM(broadband_subscribers.monthly_revenue) as broadband_revenue, (SUM(mobile_subscribers.monthly_revenue) + SUM(broadband_subscribers.monthly_revenue)) as total_revenue, (SUM(mobile_subscribers.monthly_revenue) / (SUM(mobile_subscribers.monthly_revenue) + SUM(broadband_subscribers.monthly_revenue))) as mobile_contribution, (SUM(broadband_subscribers.monthly_revenue) / (SUM(mobile_subscribers.monthly_revenue) + SUM(broadband_subscribers.monthly_revenue))) as broadband_contribution FROM isps isp INNER JOIN mobile_subscribers ON isp.id = mobile_subscribers.isp_id INNER JOIN broadband_subscribers ON isp.id = broadband_subscribers.isp_id GROUP BY isp.name;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \uc2e4\uc2dc\ub41c '\uc5b8\uc5b4 \uc811\uadfc' \uad50\uc721\uc740 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(50), ethnicity VARCHAR(50), certification BOOLEAN); INSERT INTO community_health_workers (id, name, ethnicity, certification) VALUES (1, 'Charlene', 'Hispanic', true), (2, 'Derek', 'Asian', false); CREATE TABLE cultural_competency_trainings (id INT, worker_id INT, type VARCHAR(50), date DATE); INSERT INTO cultural_competency_trainings (id, worker_id, type, date) VALUES (1, 1, 'Cultural Sensitivity', '2022-01-01'), (2, 3, 'Language Access', '2022-02-15');", "output": "SELECT COUNT(*) FROM cultural_competency_trainings WHERE type = 'Language Access' AND worker_id IN (SELECT id FROM community_health_workers);"}
{"input": " \ube48\uace4\uc728\uc774 \ub192\uc740 \uc9c0\uc5ed\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uae34\uae09 \uc804\ud654 \ubc0f \ubc94\uc8c4 \uac74\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE areas (area_id INT, area_name VARCHAR(255), poverty_level DECIMAL(5,2));CREATE TABLE emergency_calls (id INT, area_id INT, call_type VARCHAR(255), call_date DATE);CREATE TABLE crimes (id INT, area_id INT, crime_type VARCHAR(255), crime_date DATE);", "output": "SELECT 'Total emergency calls' AS metric, COUNT(ec.id) AS count FROM emergency_calls ec JOIN areas a ON ec.area_id = a.area_id WHERE a.poverty_level >= 0.2 UNION ALL SELECT 'Total crimes' AS metric, COUNT(c.id) AS count FROM crimes c JOIN areas a ON c.area_id = a.area_id WHERE a.poverty_level >= 0.2;"}
{"input": " \ucda9\uc804\uc18c\ub2f9 \ud3c9\uade0 \ucda9\uc804\uc18c \uc218 \uad6c\ud558\uae30", "context": "CREATE TABLE charging_stations_extended (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), num_charging_points INT, num_stations INT);", "output": "CREATE VIEW charging_stations_averages AS SELECT name, AVG(num_charging_points / num_stations) as avg_charging_points_per_station FROM charging_stations_extended GROUP BY name;"}
{"input": " 2022\ub144\uc5d0 \ucd1d \uacf5\uae09\ud488 \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Research'); INSERT INTO Programs (ProgramID, ProgramName) VALUES (2, 'Outreach'); CREATE TABLE Supplies (SupplyID INT, SupplyName TEXT, SupplyCost DECIMAL, PurchaseDate DATE); INSERT INTO Supplies (SupplyID, SupplyName, SupplyCost, PurchaseDate) VALUES (1, 'Microscope', 1500.00, '2022-02-15'); INSERT INTO Supplies (SupplyID, SupplyName, SupplyCost, PurchaseDate) VALUES (2, 'Flyers', 200.00, '2022-03-30'); CREATE TABLE ProgramSupplies (ProgramID INT, SupplyID INT); INSERT INTO ProgramSupplies (ProgramID, SupplyID) VALUES (1, 1); INSERT INTO ProgramSupplies (ProgramID, SupplyID) VALUES (1, 2); INSERT INTO ProgramSupplies (ProgramID, SupplyID) VALUES (2, 1);", "output": "SELECT Programs.ProgramName, SUM(Supplies.SupplyCost) AS TotalSupplyCost FROM Programs INNER JOIN ProgramSupplies ON Programs.ProgramID = ProgramSupplies.ProgramID INNER JOIN Supplies ON ProgramSupplies.SupplyID = Supplies.SupplyID GROUP BY Programs.ProgramName ORDER BY TotalSupplyCost DESC LIMIT 1;"}
{"input": " \uc11c\uc6b8\uc2dc\ub0b4 \ub300\uc911\uad50\ud1b5\uc744 \uc774\uc6a9\ud558\ub294 \uc77c\uc77c \ucd1d \uc2b9\uac1d \uc218", "context": "CREATE TABLE seoul_public_transport (transport_id INT, transport_type STRING, passenger_count INT, ride_date DATE);", "output": "SELECT ride_date, SUM(passenger_count) AS total_passengers FROM seoul_public_transport GROUP BY ride_date;"}
{"input": "2022\ub144 1\ubd84\uae30 \ucc28\ub7c9 \uc720\ud615\ubcc4 \uc6b4\ud589\ub2f9 \ud3c9\uade0 \uc694\uae08\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE trip (trip_id INT, vehicle_id INT, route_id INT, fare FLOAT); INSERT INTO trip (trip_id, vehicle_id, route_id, fare) VALUES (1, 1, 1, 3.5), (2, 1, 2, 4.0), (3, 2, 1, 3.5), (4, 2, 2, 4.0), (5, 3, 1, 2.5), (6, 3, 2, 3.0); CREATE TABLE vehicle (vehicle_id INT, type TEXT); INSERT INTO vehicle (vehicle_id, type) VALUES (1, 'Bus'), (2, 'Tram'), (3, 'Trolleybus');", "output": "SELECT vehicle.type, AVG(trip.fare) as avg_fare FROM trip JOIN vehicle ON trip.vehicle_id = vehicle.vehicle_id WHERE trip.trip_id BETWEEN 1 AND (SELECT MAX(trip_id) FROM trip WHERE trip.trip_date < '2022-04-01' AND EXTRACT(MONTH FROM trip.trip_date) < 4) GROUP BY vehicle.type;"}
{"input": " 2023\ub144 1\uc6d4 1\uc77c \ud604\uc7ac \uc6cc\uc2f1\ud134 \uc8fc \ub0b4 \ucd1d \uc9c4\ub8cc\uc18c \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE if not exists dispensaries(id INT, state VARCHAR(50), open_date DATE);INSERT INTO dispensaries(id, state, open_date) VALUES (1, 'Washington', '2020-01-01'), (2, 'Washington', '2021-01-01'), (3, 'Washington', '2022-01-01');", "output": "SELECT COUNT(*) FROM dispensaries WHERE state = 'Washington' AND open_date <= '2023-01-01';"}
{"input": " 10\ub144 \uc774\uc0c1\uc758 \uacbd\ub825\uc744 \uac00\uc9c4 \uc5b8\ub860\uc778\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE journalists_extended (name VARCHAR(50), gender VARCHAR(10), years_experience INT, salary DECIMAL(10,2)); INSERT INTO journalists_extended (name, gender, years_experience, salary) VALUES ('Alice Johnson', 'Female', 12, 55000.00), ('Bob Smith', 'Male', 8, 45000.00), ('Charlie Brown', 'Male', 15, 65000.00), ('Dana Rogers', 'Female', 20, 75000.00), ('Evan Green', 'Male', 7, 35000.00);", "output": "SELECT name, years_experience FROM journalists_extended WHERE years_experience > 10;"}
{"input": " NVD \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uae30\uc900\uc73c\ub85c \ubcfc \ub54c \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc2dc\uc2a4\ud15c\uc5d0 \uac00\uc7a5 \uc2ec\uac01\ud55c \ucde8\uc57d\uc810\uc774 \uc788\ub294 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nvd_vulnerabilities (id INT, cve_id VARCHAR(255), severity VARCHAR(255), publish_date DATE, description TEXT, software_vendor VARCHAR(255), software_product VARCHAR(255), country VARCHAR(255)); INSERT INTO nvd_vulnerabilities (id, cve_id, severity, publish_date, description, software_vendor, software_product, country) VALUES (1, 'CVE-2021-1234', 'CRITICAL', '2021-01-01', 'Description of CVE-2021-1234', 'Vendor1', 'Product1', 'USA');", "output": "SELECT country, COUNT(*) as critical_vulnerabilities_count FROM nvd_vulnerabilities WHERE severity = 'CRITICAL' GROUP BY country ORDER BY critical_vulnerabilities_count DESC;"}
{"input": " \uc11c\uc2dd\uc9c0 \ubcf4\uc874 \ub178\ub825\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80\ub97c \ud55c \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE donors (donor_name VARCHAR(50), donation_amount DECIMAL(10,2));", "output": "SELECT donor_name FROM (SELECT donor_name, RANK() OVER (ORDER BY donation_amount DESC) as rank FROM donors) WHERE rank <= 5;"}
{"input": " \uad11\uc0b0 \ud604\uc7a5 \ubc0f \uc790\uc6d0 \uc720\ud615\ubcc4\ub85c \ucd94\ucd9c\ub41c \uc790\uc6d0\uc758 \ucd1d\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mining_site (id INT, name VARCHAR(255), resource VARCHAR(255), amount INT); INSERT INTO mining_site (id, name, resource, amount) VALUES (1, 'Site A', 'Gold', 100), (2, 'Site B', 'Silver', 150), (3, 'Site A', 'Coal', 200), (4, 'Site C', 'Gold', 120), (5, 'Site C', 'Silver', 180), (6, 'Site D', 'Coal', 220);", "output": "SELECT ms.name as site, ms.resource as resource, SUM(ms.amount) as total_resources_extracted FROM mining_site ms GROUP BY ms.name, ms.resource;"}
{"input": " \ub18d\ucd0c \ubcd1\uc6d0\uacfc \ub18d\ucd0c \uc9c4\ub8cc\uc18c\ub97c \ud569\uce58\uba74 \ub0a8\uc131 \ud658\uc790\uac00 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_clinics (patient_id INT, age INT, gender VARCHAR(10), country VARCHAR(20)); CREATE TABLE rural_hospitals (patient_id INT, age INT, gender VARCHAR(10), admission_date DATE);", "output": "SELECT COUNT(*) FROM (SELECT patient_id FROM rural_clinics WHERE gender = 'Male' UNION ALL SELECT patient_id FROM rural_hospitals WHERE gender = 'Male') AS combined_male_patients;"}
{"input": "\ud658\uacbd\uc601\ud5a5\ud3c9\uac00\ub97c \uc2e4\uc2dc\ud558\uc9c0 \uc54a\uc740 \uacf5\uc7a5\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE factories (id INT, name TEXT); INSERT INTO factories (id, name) VALUES (1, 'Factory A'), (2, 'Factory B'), (3, 'Factory C'); CREATE TABLE assessments (factory_id INT, assessment_number INT); INSERT INTO assessments (factory_id, assessment_number) VALUES (1, 1), (1, 2), (2, 1);", "output": "SELECT id, name FROM factories WHERE id NOT IN (SELECT factory_id FROM assessments);"}
{"input": " \ub3c4\uc2dc\uc758 \ucd1d \uc608\uc0b0\uacfc \ud568\uaed8 \uac01 \ub3c4\uc2dc\uc758 \ud559\uad50 \ubc0f \ubcd1\uc6d0 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cities (city_id INT, city_name VARCHAR(255), total_budget INT); CREATE TABLE schools (school_id INT, school_name VARCHAR(255), city_id INT); CREATE TABLE hospitals (hospital_id INT, hospital_name VARCHAR(255), city_id INT);", "output": "SELECT c.city_name, COUNT(s.school_id) as num_schools, COUNT(h.hospital_id) as num_hospitals, c.total_budget FROM cities c LEFT JOIN schools s ON c.city_id = s.city_id LEFT JOIN hospitals h ON c.city_id = h.city_id GROUP BY c.city_name;"}
{"input": " \uc9c0\ub09c \ub2ec \uc544\uc2dc\uc544\uc640 \uc544\ud504\ub9ac\uce74 \uc791\uac00\ub4e4\uc774 \uc791\uc131\ud55c \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc758 \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE blog_posts (id INT, title VARCHAR(50), word_count INT, author_name VARCHAR(50), author_region VARCHAR(50)); INSERT INTO blog_posts (id, title, word_count, author_name, author_region) VALUES (1, 'Post1', 500, 'John Doe', 'Asia'), (2, 'Post2', 700, 'Jane Smith', 'Africa'), (3, 'Post3', 600, 'Bob Johnson', 'Asia'), (4, 'Post4', 800, 'Alice Williams', 'Africa');", "output": "SELECT author_region, AVG(word_count) as avg_word_count FROM blog_posts WHERE author_region IN ('Asia', 'Africa') AND post_date >= NOW() - INTERVAL 30 DAY GROUP BY author_region;"}
{"input": " \ubd81\ud574\uc758 \uc0dd\uc0b0 \uc720\uc815 \uc0c1\uc704 3\uac1c\ub97c \uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE well_production (well_name VARCHAR(20), production_qty FLOAT, production_date DATE); INSERT INTO well_production (well_name, production_qty, production_date) VALUES ('Well A', 1000, '2020-01-01'); INSERT INTO well_production (well_name, production_qty, production_date) VALUES ('Well B', 1500, '2020-01-01'); INSERT INTO well_production (well_name, production_qty, production_date) VALUES ('Well C', 1200, '2020-01-01');", "output": "SELECT well_name, production_qty, production_date, RANK() OVER (PARTITION BY EXTRACT(YEAR FROM production_date) ORDER BY production_qty DESC) as rank FROM well_production WHERE well_name LIKE 'Well%' AND production_date BETWEEN '2020-01-01' AND '2021-12-31' AND location = 'North Sea' ORDER BY production_date, rank;"}
{"input": " \uac01 \uce58\ub8cc \uc720\ud615\uc758 \ucd1d \uc138\uc158 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sessions (session_id INT, type VARCHAR(20), therapist_id INT, patient_id INT, sessions INT); INSERT INTO sessions (session_id, type, therapist_id, patient_id, sessions) VALUES (1, 'CBT', 1, 1, 5); INSERT INTO sessions (session_id, type, therapist_id, patient_id, sessions) VALUES (2, 'CBT', 1, 2, 4); INSERT INTO sessions (session_id, type, therapist_id, patient_id, sessions) VALUES (3, 'DBT', 2, 3, 6);", "output": "SELECT type, SUM(sessions) FROM sessions GROUP BY type;"}
{"input": " \uc9c0\ub09c 7\uc77c \ub3d9\uc548 \ube14\ub85d \ubcf4\uc0c1 \uce21\uba74\uc5d0\uc11c \ucd5c\uace0\uc758 \ucc44\uad74\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE block_rewards (reward_id INT, timestamp TIMESTAMP, miner_address VARCHAR(50), block_height INT, reward_amount DECIMAL(18,8)); INSERT INTO block_rewards VALUES (2, '2022-02-02 12:00:00', 'miner3', 400, 15);", "output": "SELECT miner_address, SUM(reward_amount) OVER (PARTITION BY miner_address ORDER BY timestamp ROWS BETWEEN 7 PRECEDING AND CURRENT ROW) as total_reward_7d, RANK() OVER (ORDER BY total_reward_7d DESC) as miner_rank FROM block_rewards WHERE timestamp BETWEEN (CURRENT_TIMESTAMP - INTERVAL '7 days') AND CURRENT_TIMESTAMP ORDER BY total_reward_7d DESC"}
{"input": " \ubbf8\uad6d \uae30\ubc18 \uc870\uc9c1\uc758 \ud3c9\uade0 \uc9c0\ucd9c\ubcf4\ub2e4 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub354 \ub9ce\uc740 \ube44\uc6a9\uc744 \uc9c0\ucd9c\ud55c \ubaa8\ub4e0 \uc870\uc9c1\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Organizations (OrgID INT, OrgName TEXT, Country TEXT, Spending FLOAT); INSERT INTO Organizations (OrgID, OrgName, Country, Spending) VALUES (1, 'Microsoft', 'USA', 7000000); INSERT INTO Organizations (OrgID, OrgName, Country, Spending) VALUES (2, 'Google', 'USA', 8000000); INSERT INTO Organizations (OrgID, OrgName, Country, Spending) VALUES (3, 'IBM', 'USA', 6000000); INSERT INTO Organizations (OrgID, OrgName, Country, Spending) VALUES (4, 'TCS', 'India', 3500000);", "output": "SELECT * FROM Organizations WHERE Spending > (SELECT AVG(Spending) FROM Organizations WHERE Country = 'USA') AND Country = 'USA';"}
{"input": " \uc9c0\ub09c \ub2ec \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (id INT, volunteer_name TEXT, hours_served DECIMAL, volunteer_date DATE); INSERT INTO volunteer_hours (id, volunteer_name, hours_served, volunteer_date) VALUES (1, 'Alice Johnson', 5.00, '2022-02-01'), (2, 'Bob Brown', 10.00, '2022-02-05');", "output": "SELECT AVG(hours_served) as avg_hours_per_volunteer FROM (SELECT volunteer_name, AVG(hours_served) as hours_served FROM volunteer_hours WHERE volunteer_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY volunteer_name) AS avg_hours_by_volunteer;"}
{"input": " '\ub514\uc9c0\ud138 \uc544\ud2b8' \uc804\uc2dc\uc758 \uad00\ub78c\uac1d 1\uc778\ub2f9 \ud3c9\uade0 \uad00\ub78c\uac1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (visitor_id INT, name VARCHAR(100), exhibition_id INT, visit_count INT); INSERT INTO Visitors (visitor_id, name, exhibition_id, visit_count) VALUES (1, 'Alex', 3, 2), (2, 'Bella', 3, 1), (3, 'Chris', 3, 3);", "output": "SELECT AVG(visit_count) FROM Visitors WHERE exhibition_id = (SELECT exhibition_id FROM Exhibitions WHERE name = 'Digital Art');"}
{"input": " 2015\ub144 \uc774\ud6c4 \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud55c \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \uad70\uc778\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_personnel (personnel_id INT, country VARCHAR(255), role VARCHAR(255), start_date DATE); INSERT INTO military_personnel (personnel_id, country, role, start_date) VALUES (1, 'Country A', 'Peacekeeper', '2015-01-01'), (2, 'Country B', 'Peacekeeper', '2016-01-01'), (3, 'Country C', 'Commander', '2017-01-01'); CREATE TABLE countries (country VARCHAR(255)); CREATE TABLE roles (role VARCHAR(255));", "output": "SELECT COUNT(*) FROM military_personnel INNER JOIN countries ON military_personnel.country = countries.country INNER JOIN roles ON military_personnel.role = roles.role WHERE countries.country LIKE '%Latin America%' AND role = 'Peacekeeper' AND start_date >= '2015-01-01';"}
{"input": " \uc5b4\ub5a4 \uc784\ubb34\uc5d0\ub3c4 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc740 \uc77c\ubcf8 \uc6b0\uc8fc\ube44\ud589\uc0ac\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Astronauts (AstronautID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Nationality VARCHAR(50), Missions INT); INSERT INTO Astronauts (AstronautID, FirstName, LastName, Nationality, Missions) VALUES (3, 'Naoko', 'Yamazaki', 'Japan', 3);", "output": "SELECT AstronautID, FirstName, LastName FROM Astronauts WHERE Nationality = 'Japan' AND Missions = 0;"}
{"input": "\uba40\ud2f0\ud50c\ub808\uc774\uc5b4 \uacbd\uae30\uc5d0\uc11c \uac01 \ud50c\ub808\uc774\uc5b4\uc758 \uc2b9\ub960\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Matches (MatchID int, PlayerID int, Game varchar(255), MatchResult varchar(255)); INSERT INTO Matches VALUES (1, 1, 'CS:GO', 'Win'), (2, 2, 'CS:GO', 'Loss'), (3, 1, 'Dota 2', 'Win'), (4, 3, 'Dota 2', 'Win');", "output": "SELECT PlayerID, COUNT(*) * 100.0 / SUM(CASE WHEN MatchResult = 'Win' THEN 1 ELSE 0 END) OVER (PARTITION BY PlayerID) as WinRate FROM Matches GROUP BY PlayerID;"}
{"input": "\ub85d' \uc7a5\ub974\ub9cc \uace0\ub824\ud588\uc744 \ub54c '\ud50c\ub7ab\ud3fcG' \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc2a4\ud2b8\ub9ac\ubc0d\uc744 \uae30\ub85d\ud55c \uc0c1\uc704 2\uba85\uc758 \uc544\ud2f0\uc2a4\ud2b8 \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE platformG (artist_name TEXT, genre TEXT, streams BIGINT);", "output": "SELECT artist_name FROM platformG WHERE genre = 'rock' GROUP BY artist_name ORDER BY SUM(streams) DESC LIMIT 2;"}
{"input": " \uc800\uc218\uc9c0\uc758 \uc0dd\uc0b0 \ub370\uc774\ud130 \uc694\uc57d", "context": "CREATE TABLE production_data (reservoir_id INT, year INT, production FLOAT); INSERT INTO production_data (reservoir_id, year, production) VALUES (1, 2015, 50), (1, 2016, 55), (2, 2015, 100), (2, 2016, 120);", "output": "SELECT reservoir_id, SUM(production) FROM production_data GROUP BY reservoir_id HAVING reservoir_id = 1;"}
{"input": " \uc9c0\ub09c \ud68c\uacc4\uc5f0\ub3c4 \ub3d9\uc548 \ud2f0\ucf13 \ud310\ub9e4 \ubc0f \uc0c1\ud488\uc73c\ub85c \ubc1c\uc0dd\ud55c \uac01 \uc2a4\ud3ec\uce20\uc758 \ucd1d \uc218\uc775\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE TicketSales (TicketID INT, EventType VARCHAR(10), Revenue DECIMAL(10,2)); CREATE TABLE MerchandiseSales (MerchandiseID INT, ProductType VARCHAR(10), Revenue DECIMAL(10,2));", "output": "SELECT EventType, SUM(Revenue) FROM TicketSales WHERE EventDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY EventType UNION ALL SELECT ProductType, SUM(Revenue) FROM MerchandiseSales WHERE SaleDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY ProductType;"}
{"input": " '\ud328\uc2a4\ud2b8\ud478\ub4dc' \uce74\ud14c\uace0\ub9ac\uc758 \ub808\uc2a4\ud1a0\ub791 \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc774\uba70, \uc774\ub4e4\uc774 \uacf5\uae09\ud558\ub294 \uc2dd\ud488\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurants (id INT, name VARCHAR(50), category VARCHAR(50)); INSERT INTO restaurants (id, name, category) VALUES (1, 'Restaurant G', 'Fast Food'); INSERT INTO restaurants (id, name, category) VALUES (2, 'Restaurant H', 'Casual Dining');CREATE TABLE orders (id INT, restaurant_id INT, supplier_id INT, quantity INT); INSERT INTO orders (id, restaurant_id, supplier_id, quantity) VALUES (1, 1, 1, 100); INSERT INTO orders (id, restaurant_id, supplier_id, quantity) VALUES (2, 2, 2, 200);CREATE TABLE suppliers (id INT, name VARCHAR(50)); INSERT INTO suppliers (id, name) VALUES (1, 'Supplier I'); INSERT INTO suppliers (id, name) VALUES (2, 'Supplier J');", "output": "SELECT s.name AS supplier_name, SUM(o.quantity) AS total_quantity FROM suppliers s INNER JOIN orders o ON s.id = o.supplier_id INNER JOIN restaurants r ON o.restaurant_id = r.id WHERE r.category = 'Fast Food' GROUP BY s.name;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc218\uc758 VR \uac8c\uc784\uc744 \ub9cc\ub4e0 \uc0c1\uc704 3\uba85\uc758 \ub514\uc790\uc774\ub108\uc758 \ub514\uc790\uc778 \uacbd\ud5d8\uacfc \uc774\ub7ec\ud55c VR \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uace0\uc720 \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Designers (DesignerID INT, DesignerName VARCHAR(50), YearsOfExperience INT); CREATE TABLE Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20), DesignerID INT, IsVR INT); CREATE TABLE GamePlayer (PlayerID INT, GameID INT); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10));", "output": "SELECT Designers.DesignerName, Designers.YearsOfExperience, COUNT(DISTINCT GamePlayer.PlayerID) AS NumPlayers FROM Designers INNER JOIN Games ON Designers.DesignerID = Games.DesignerID INNER JOIN GamePlayer ON Games.GameID = GamePlayer.GameID WHERE Games.IsVR = 1 GROUP BY Designers.DesignerID ORDER BY NumPlayers DESC, Designers.YearsOfExperience DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ub2ec '\ub808\ub4dc\ub514\ud39c\uc2a4'\uac00 \ucc3d\ucd9c\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales(id INT, seller VARCHAR(255), buyer VARCHAR(255), equipment VARCHAR(255), quantity INT, sale_price DECIMAL(10,2), sale_date DATE);", "output": "SELECT SUM(quantity * sale_price) FROM Sales WHERE seller = 'Red Defense' AND sale_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"input": " \ucd5c\uc18c 50%\uc758 \uc7ac\ub8cc\ub97c \ud604\uc9c0\uc5d0\uc11c \uc870\ub2ec\ud558\ub294 \ub808\uc2a4\ud1a0\ub791\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurant_revenue(restaurant_id INT, cuisine_type TEXT, revenue FLOAT), local_sourcing(restaurant_id INT, local_source BOOLEAN); INSERT INTO restaurant_revenue(restaurant_id, cuisine_type, revenue) VALUES (1, 'Italian', 5000.00), (2, 'Mexican', 6000.00), (3, 'Italian', 4000.00); INSERT INTO local_sourcing(restaurant_id, local_source) VALUES (1, TRUE), (2, FALSE), (3, TRUE);", "output": "SELECT SUM(revenue) FROM restaurant_revenue WHERE restaurant_id IN (SELECT restaurant_id FROM local_sourcing WHERE local_source = TRUE) AND cuisine_type IN (SELECT cuisine_type FROM local_sourcing WHERE local_source = TRUE) GROUP BY cuisine_type;"}
{"input": " \uc9c0\ub09c \ub2ec \uc2dc\ubbfc \ucc38\uc5ec\uc728\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE citizen_participation (participation_date DATE, participation_value INT);", "output": "SELECT (SUM(CASE WHEN participation_date >= DATEADD(month, -1, GETDATE()) THEN participation_value ELSE 0 END) - SUM(CASE WHEN participation_date < DATEADD(month, -1, GETDATE()) THEN participation_value ELSE 0 END)) * 100.0 / SUM(participation_value) OVER () as participation_percentage_change FROM citizen_participation WHERE participation_date < GETDATE();"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc9c0\uc5ed\ubcc4 \uc778\ub3c4\uc8fc\uc758\uc801 \uc120\uad50\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_missions (mission_id INT, mission_name VARCHAR(255), region VARCHAR(255), year INT, budget INT); INSERT INTO humanitarian_missions (mission_id, mission_name, region, year, budget) VALUES (1, 'Disaster Relief', 'Asia', 2019, 5000000), (2, 'Flood Relief', 'Africa', 2020, 10000000), (3, 'Earthquake Relief', 'Americas', 2021, 7500000), (4, 'Hurricane Relief', 'Europe', 2018, 6000000), (5, 'Volcano Relief', 'Asia', 2019, 8000000), (6, 'Tsunami Relief', 'Australia', 2020, 9000000), (7, 'Drought Relief', 'Africa', 2021, 4000000), (8, 'Refugee Assistance', 'Middle East', 2018, 3000000);", "output": "SELECT region, AVG(budget) as avg_budget FROM humanitarian_missions WHERE year BETWEEN (SELECT YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY region;"}
{"input": " 2021\ub144 \ubbf8\uc220 \uc6cc\ud06c\uc20d \uc5f0\ub839\ubcc4 \ucc38\uc11d\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE art_workshops (id INT, attendee_age INT, visit_year INT);INSERT INTO art_workshops (id, attendee_age, visit_year) VALUES (1, 23, 2021), (2, 31, 2021), (3, 19, 2021);", "output": "SELECT attendee_age, COUNT(*) OVER (PARTITION BY attendee_age) AS attendees_by_age  FROM art_workshops WHERE visit_year = 2021 ORDER BY attendee_age;"}
{"input": " AI \uc548\uc804 \ub370\uc774\ud130 \uc138\ud2b8\uc758 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uac10\uc815 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_safety (id INT, country VARCHAR, sentiment FLOAT);", "output": "SELECT country, AVG(sentiment) OVER (PARTITION BY country) FROM ai_safety;"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30 '\ube0c\ub77c\uc9c8' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, program_name TEXT, volunteer_start_date DATE); INSERT INTO volunteers (volunteer_id, volunteer_name, program_name, volunteer_start_date) VALUES (1, 'Maria Silva', 'Feed the Poor', '2022-01-05');", "output": "SELECT COUNT(*) FROM volunteers WHERE program_name IN (SELECT program_name FROM programs WHERE country = 'Brazil') AND volunteer_start_date BETWEEN '2022-01-01' AND '2022-06-30';"}
{"input": " \ub3c5\uc77c\uc758 \ucd1d \ud0dc\uc591\uad11 \ubc1c\uc804 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE energy_capacity (country VARCHAR(255), source_type VARCHAR(255), capacity INT); INSERT INTO energy_capacity (country, source_type, capacity) VALUES ('Germany', 'Solar', 50000), ('Germany', 'Wind', 60000), ('Germany', 'Hydro', 30000);", "output": "SELECT SUM(capacity) FROM energy_capacity WHERE country = 'Germany' AND source_type = 'Solar';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uad6d\uac00\ubcc4\ub85c \ub4dc\ub860 \uc624\uc791\ub3d9\uc774 \ubc1c\uc0dd\ud55c \ud69f\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE DroneFlight (date DATE, country VARCHAR(20), malfunction BOOLEAN);", "output": "SELECT country, COUNT(*) FROM DroneFlight WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND malfunction = TRUE GROUP BY country;"}
{"input": " \ucd5c\uc18c 3\uac1c \uc774\uc0c1\uc758 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc5d0 \ucc38\uc5ec\ud55c \uac01 \ud559\uad70 \ud559\uc0dd\ub4e4\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health (student_id INT, district_id INT, mental_health_score INT, date DATE); CREATE TABLE professional_development_courses (course_id INT, student_id INT, course_name VARCHAR(100), date DATE); CREATE TABLE districts (district_id INT, district_name VARCHAR(100));", "output": "SELECT d.district_name, AVG(smh.mental_health_score) as avg_mental_health_score FROM student_mental_health smh JOIN districts d ON smh.district_id = d.district_id JOIN (SELECT student_id, COUNT(*) as num_courses FROM professional_development_courses GROUP BY student_id HAVING num_courses >= 3) pdc ON smh.student_id = pdc.student_id GROUP BY d.district_name;"}
{"input": " \ubbf8\uc8fc \uc9c0\uc5ed\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud22c\uc790 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_investments (id INT, region VARCHAR(255), sustainable BOOLEAN); INSERT INTO sustainable_investments (id, region, sustainable) VALUES (1, 'Americas', TRUE), (2, 'Europe', FALSE), (3, 'Americas', TRUE);", "output": "SELECT region, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () FROM sustainable_investments WHERE region = 'Americas' GROUP BY region;"}
{"input": " \ub18d\ucd0c \uc758\ub8cc \uc2dc\uc124\uc5d0\uc11c \uce58\ub8cc\ubc1b\uc740 \ud638\ud761\uae30 \uc9c8\ud658 \ud658\uc790\ub294 \uc131\ubcc4\uacfc \uc5f0\ub839\ubcc4\ub85c \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE treatments (treatment_id INT, patient_id INT, healthcare_id INT, date DATE); CREATE TABLE patients (patient_id INT, disease TEXT, age INT, gender TEXT); CREATE TABLE healthcare_facilities (healthcare_id INT, name TEXT, type TEXT, rural BOOLEAN); INSERT INTO treatments (treatment_id, patient_id, healthcare_id, date) VALUES (1, 1, 1, '2021-01-01'), (2, 2, 2, '2021-01-02'); INSERT INTO patients (patient_id, disease, age, gender) VALUES (1, 'Respiratory Disease', 50, 'Female'), (2, 'Respiratory Disease', 60, 'Male'); INSERT INTO healthcare_facilities (healthcare_id, name, type, rural) VALUES (1, 'Rural General Hospital', 'Hospital', TRUE), (2, 'Rural Clinic', 'Clinic', TRUE);", "output": "SELECT CASE WHEN patients.age < 60 THEN 'Under 60' ELSE '60 and Over' END as age_group, patients.gender, COUNT(treatments.treatment_id) as count FROM treatments INNER JOIN patients ON treatments.patient_id = patients.patient_id INNER JOIN healthcare_facilities ON treatments.healthcare_id = healthcare_facilities.healthcare_id WHERE patients.disease = 'Respiratory Disease' AND healthcare_facilities.rural = TRUE GROUP BY patients.gender, age_group;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uad00\ud589\uc774 \uad6c\ud604\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_practices (practice_id INT, building_id INT, city VARCHAR(20)); INSERT INTO sustainable_practices (practice_id, building_id, city) VALUES (1, 101, 'New York'), (2, 101, 'New York'), (3, 102, 'Los Angeles');", "output": "SELECT DISTINCT city, building_type FROM sustainable_practices SP JOIN (SELECT building_id, 'Solar Panels' as building_type FROM sustainable_practices WHERE practice_id = 1 UNION ALL SELECT building_id, 'Green Roofs' as building_type FROM sustainable_practices WHERE practice_id = 2) AS subquery ON SP.building_id = subquery.building_id WHERE city = 'Los Angeles';"}
{"input": "\ub274\uc695\uc5d0\uc11c \uacf5\ub3d9 \uc18c\uc720\ud55c \ubd80\ub3d9\uc0b0\uc758 \ucd5c\uc18c \ub9ac\uc2a4\ud305 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE properties (id INT, city VARCHAR(50), listing_price DECIMAL(10, 2), co_owned BOOLEAN); INSERT INTO properties (id, city, listing_price, co_owned) VALUES (1, 'New York', 400000.00, TRUE), (2, 'New York', 500000.00, FALSE), (3, 'New York', 350000.00, TRUE);", "output": "SELECT MIN(listing_price) FROM properties WHERE city = 'New York' AND co_owned = TRUE;"}
{"input": " '\uc804\uc790' \ubd80\uc11c\uc5d0\uc11c \ud3c9\uade0 \uae09\uc5ec\ubcf4\ub2e4 \uc801\uc740 \uae09\uc5ec\ub97c \ubc1b\ub294 \uc9c1\uc6d0\uc758 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE departments (id INT, name TEXT, manager TEXT); INSERT INTO departments (id, name, manager) VALUES (1, 'electronics', 'Jane'), (2, 'textiles', 'Bob'), (3, 'metals', 'John'), (4, 'chemicals', 'Alice'); CREATE TABLE workers (id INT, department_id INT, salary FLOAT); INSERT INTO workers (id, department_id, salary) VALUES (1, 1, 60000), (2, 1, 65000), (3, 2, 55000), (4, 2, 50000), (5, 1, 70000);", "output": "SELECT COUNT(*) FROM workers INNER JOIN departments ON workers.department_id = departments.id WHERE departments.name = 'electronics' AND salary < (SELECT AVG(salary) FROM workers INNER JOIN departments ON workers.department_id = departments.id WHERE departments.name = 'electronics');"}
{"input": " ID\uac00 3\uc778 \ucee4\ubba4\ub2c8\ud2f0 \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ad\uc81c\ud558\uace0 \ub098\uba38\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 ID\uac00 \uc5f0\uc18d\ub418\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE community_development_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), sector VARCHAR(255), cost FLOAT); INSERT INTO community_development_projects (id, project_name, location, sector, cost) VALUES (1, 'Community Center', 'Village A', 'Community', 18000.00), (2, 'Community Health Center', 'Village B', 'Community', 35000.00), (3, 'Sports Facility', 'Village C', 'Community', 12000.00), (4, 'Public Library', 'Village D', 'Community', 24000.00);", "output": "WITH cte AS (DELETE FROM community_development_projects WHERE id = 3) SELECT ROW_NUMBER() OVER (ORDER BY id) AS new_id, project_name, location, sector, cost FROM community_development_projects;"}
{"input": " \uc9c0\ub09c \ub2ec \uc624\uc138\uc544\ub2c8\uc544 \uc0ac\uc6a9\uc790\uc758 \uacbd\uc6b0 \uac70\ub9ac\uac00 10\ub9c8\uc77c \uc774\uc0c1\uc778 \uc6b4\ub3d9 \uc138\uc158\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workout_sessions (session_id INT, user_id INT, distance DECIMAL(10,2), session_date DATE); INSERT INTO workout_sessions (session_id, user_id, distance, session_date) VALUES (1, 1, 5.5, '2022-08-01'), (2, 2, 7.3, '2022-08-02'), (3, 3, 4.2, '2022-08-03'), (4, 4, 12.0, '2022-08-04');", "output": "DELETE FROM workout_sessions WHERE distance > 10 AND user_id IN (SELECT user_id FROM users WHERE region = 'Oceania') AND session_date >= DATEADD(month, -1, CURRENT_DATE);"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uce5c\ud658\uacbd \uccad\ubc14\uc9c0\ub97c \uad6c\ub9e4\ud55c \uace0\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO customers (customer_id, name, country) VALUES (1, 'John Doe', 'Canada'); CREATE TABLE products (product_id INT, name VARCHAR(50), eco_friendly BOOLEAN); INSERT INTO products (product_id, name, eco_friendly) VALUES (1, 'Eco-Friendly Jeans', TRUE); CREATE TABLE sales (sale_id INT, customer_id INT, product_id INT); INSERT INTO sales (sale_id, customer_id, product_id) VALUES (1, 1, 1);", "output": "SELECT COUNT(*) FROM sales s INNER JOIN customers c ON s.customer_id = c.customer_id INNER JOIN products p ON s.product_id = p.product_id WHERE c.country = 'Canada' AND p.name = 'Eco-Friendly Jeans' AND p.eco_friendly = TRUE;"}
{"input": " VR \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\uace0 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PlayerVRData (PlayerID INT, VRGame VARCHAR(20), Playtime INT); INSERT INTO PlayerVRData (PlayerID, VRGame, Playtime) VALUES (1, 'VR', 50), (2, 'VR', 30), (3, 'Racing', 70);", "output": "SELECT COUNT(DISTINCT PlayerID) FROM Players WHERE Game = 'VR' INTERSECT SELECT DISTINCT PlayerID FROM EsportsEvents;"}
{"input": " \ub300\ud55c\ubbfc\uad6d\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ud601\uc2e0 \uc810\uc218\ub97c \ubc1b\uc740 \ud654\ud559\ubb3c\uc9c8 \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE chemical_compounds (compound_id INT, compound_name VARCHAR(50), country VARCHAR(50), innovation_score DECIMAL(5,2)); INSERT INTO chemical_compounds (compound_id, compound_name, country, innovation_score) VALUES (1, 'Compound A', 'South Korea', 92.3), (2, 'Compound B', 'South Korea', 87.6), (3, 'Compound C', 'USA', 78.9);", "output": "SELECT * FROM (SELECT compound_id, compound_name, innovation_score, ROW_NUMBER() OVER (ORDER BY innovation_score DESC) as rn FROM chemical_compounds WHERE country = 'South Korea') tmp WHERE rn <= 3;"}
{"input": "\ud558\ub8e8 \ud3c9\uade0 \uac00\uc0c1 \ud22c\uc5b4 \uc608\uc57d\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE virtual_tours (tour_id INT, booking_date DATE); INSERT INTO virtual_tours (tour_id, booking_date) VALUES (1, '2022-01-01'), (2, '2022-01-02'), (3, '2022-01-03'), (4, '2022-01-04'), (5, '2022-01-05'), (6, '2022-01-06'), (7, '2022-01-07'), (8, '2022-01-08'), (9, '2022-01-09'), (10, '2022-01-10');", "output": "SELECT AVG(total_days) FROM (SELECT COUNT(DISTINCT booking_date) AS total_days FROM virtual_tours);"}
{"input": " '\uc77c\ub9ac\ub178\uc774' \uc778\uad6c \uc911 \uc2e4\uc5c5\uc790\uac00 \uc788\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE employment_data (state VARCHAR(255), employed INT, unemployed INT, total_population INT); INSERT INTO employment_data (state, employed, unemployed, total_population) VALUES ('Illinois', 5900000, 600000, 12900000);", "output": "SELECT (unemployed * 100.0 / total_population) AS percentage FROM employment_data WHERE state = 'Illinois';"}
{"input": " \uba78\uc885\uc704\uae30\uc885\uc744 \uc81c\uc678\ud55c \uac01 \ubcf4\ud638\uad6c\uc5ed\uc758 \ub3d9\ubb3c\uc740 \ucd1d \uba87 \ub9c8\ub9ac\uc778\uac00\uc694?", "context": "CREATE TABLE animal_data (sanctuary_id INT, animal_type VARCHAR(255), animal_count INT, endangered BOOLEAN); INSERT INTO animal_data (sanctuary_id, animal_type, animal_count, endangered) VALUES (1, 'Tiger', 25, TRUE), (1, 'Elephant', 30, FALSE), (2, 'Tiger', 35, FALSE), (2, 'Elephant', 20, TRUE), (3, 'Tiger', 15, TRUE), (3, 'Elephant', 40, FALSE);", "output": "SELECT sanctuary_id, SUM(animal_count) AS total_animals FROM animal_data WHERE NOT endangered GROUP BY sanctuary_id;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ubb3c\uc744 \ub9ce\uc774 \uc18c\ube44\ud558\ub294 \uc0c1\uc704 5\uac1c \uc0b0\uc5c5\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE industry_consumption (industry_name VARCHAR(30), state VARCHAR(20), water_consumption FLOAT);", "output": "SELECT industry_name, water_consumption FROM (SELECT industry_name, state, water_consumption, ROW_NUMBER() OVER (ORDER BY water_consumption DESC) as rank FROM industry_consumption WHERE state = 'California') tmp WHERE rank <= 5;"}
{"input": " \ud0c4\uc18c \uaca9\ub9ac\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE countries (id INT, name VARCHAR(255), carbon_sequestration INT); INSERT INTO countries (id, name, carbon_sequestration) VALUES (1, 'Canada', 600), (2, 'USA', 500), (3, 'Brazil', 400);", "output": "SELECT name, carbon_sequestration FROM (SELECT name, carbon_sequestration, RANK() OVER (ORDER BY carbon_sequestration DESC) rnk FROM countries) t WHERE rnk <= 3;"}
{"input": " 2021\ub144 5\uc6d4 \ub3d9\uc548 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ubc30\ud130\ub9ac\uc5d0 \uc800\uc7a5\ub41c \ucd1d \uc5d0\ub108\uc9c0\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE energy_storage (id INT PRIMARY KEY, name VARCHAR(50), state_id INT, FOREIGN KEY (state_id) REFERENCES state(id));CREATE TABLE battery_storage (id INT PRIMARY KEY, date DATE, energy_stored DECIMAL(10,2));", "output": "SELECT s.name AS state_name, es.name AS energy_storage_name, SUM(bs.energy_stored) AS total_energy_stored  FROM battery_storage bs  JOIN energy_storage es ON bs.energy_storage_id = es.id  JOIN state s ON es.state_id = s.id WHERE s.name = 'California' AND bs.date BETWEEN '2021-05-01' AND '2021-05-31' GROUP BY s.name, es.name;"}
{"input": " \ub274\uc695 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uad00\ud589\uc774 \uad6c\ud604\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_practices (project_id INT, practice VARCHAR(50)); INSERT INTO sustainable_practices VALUES (1001, 'Solar panels'), (1001, 'Green roof'), (1002, 'Rainwater harvesting'), (1003, 'Insulation');", "output": "SELECT practice FROM sustainable_practices WHERE project_id IN (SELECT project_id FROM building_projects WHERE state = 'New York');"}
{"input": " '\ud544\ub77c\ud14c\uc2a4' \uc218\uc5c5\uc744 \uac00\uc7a5 \ub9ce\uc774 \uc218\uac15\ud55c \uc0ac\ub78c\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Attendance (AttendanceID INT, MemberID INT, ClassID INT); INSERT INTO Attendance (AttendanceID, MemberID, ClassID) VALUES (1, 1, 2), (2, 2, 2), (3, 3, 3); CREATE TABLE Members (MemberID INT, Name VARCHAR(20)); INSERT INTO Members (MemberID, Name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Carol');", "output": "SELECT Name, COUNT(*) FROM Attendance JOIN Members ON Attendance.MemberID = Members.MemberID JOIN Classes ON Attendance.ClassID = Classes.ClassID WHERE Classes.ClassType = 'Pilates' GROUP BY Name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " \ub0a8\ubbf8 \uad6d\uac00\ubcc4 \ud3c9\uade0 \ub514\uc9c0\ud138 \uaca9\ucc28 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_divide_sa (country VARCHAR(255), div_percentage FLOAT); INSERT INTO digital_divide_sa (country, div_percentage) VALUES ('Country A', 23.1), ('Country B', 19.5), ('Country C', 27.8);", "output": "SELECT country, AVG(div_percentage) OVER (PARTITION BY country) AS avg_div_percentage FROM digital_divide_sa;"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \uc0b0\ub9bc\uc5d0 \ub300\ud574 \ucd1d \uc218\uc885 \uc218\uc640 \ud574\ub2f9 \uc232\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uc0b0\ub9bc \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ud3c9\uade0 \uc5f0\ub839\uc744 \uae30\uc900\uc73c\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE forest_type (forest_type_id INT, forest_type_name TEXT, region_id INT, PRIMARY KEY (forest_type_id)); CREATE TABLE forest (forest_id INT, forest_type_id INT, tree_species_count INT, age INT, PRIMARY KEY (forest_id), FOREIGN KEY (forest_type_id) REFERENCES forest_type(forest_type_id)); CREATE TABLE region (region_id INT, region_name TEXT, PRIMARY KEY (region_id));", "output": "SELECT ft.forest_type_name, AVG(f.age) AS avg_age, COUNT(f.tree_species_count) AS tree_species_count FROM forest_type ft INNER JOIN forest f ON ft.forest_type_id = f.forest_type_id INNER JOIN region r ON ft.region_id = r.region_id WHERE r.region_name = 'North America' GROUP BY ft.forest_type_name ORDER BY avg_age ASC;"}
{"input": " \uac01 \uc8fc\uc758 \ubaa8\ub4e0 \uc2dc\uc124\uc5d0\uc11c \uce58\ub8cc\ub41c \ub3c5\ud2b9\ud55c \uc815\uc2e0 \uac74\uac15 \uc9c8\ud658\uc758 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE facilities (facility_id INT, state CHAR(2), condition VARCHAR(50)); INSERT INTO facilities VALUES (1, 'NY', 'Depression'), (2, 'NY', 'Anxiety'), (3, 'FL', 'ADHD');", "output": "SELECT state, COUNT(DISTINCT condition) as num_conditions FROM facilities GROUP BY state;"}
{"input": " \uccab \ubc88\uc9f8 \uad00\ucc30\ubd80\ud130 \ub9c8\uc9c0\ub9c9 \uad00\ucc30\uae4c\uc9c0 \uac01 \ubaa8\ub378\uc758 \uacf5\uc815\uc131 \uc810\uc218 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ModelFairness (model_name TEXT, fairness_score FLOAT, observation_date DATE); INSERT INTO ModelFairness (model_name, fairness_score, observation_date) VALUES ('ModelA', 0.85, '2021-01-01'), ('ModelA', 0.86, '2021-02-01'), ('ModelB', 0.90, '2021-01-01'), ('ModelB', 0.91, '2021-02-01');", "output": "SELECT model_name, LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) lag_score, fairness_score, fairness_score - LAG(fairness_score) OVER (PARTITION BY model_name ORDER BY observation_date) change FROM ModelFairness;"}
{"input": " \ucd1d \ucf58\uc11c\ud2b8 \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uba85\uc758 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Concerts (ConcertID INT, Artist VARCHAR(50), City VARCHAR(50), Revenue DECIMAL(10,2)); INSERT INTO Concerts (ConcertID, Artist, City, Revenue) VALUES (1, 'Taylor Swift', 'Los Angeles', 500000.00), (2, 'BTS', 'New York', 750000.00), (3, 'Adele', 'London', 600000.00), (4, 'Taylor Swift', 'Paris', 400000.00), (5, 'BTS', 'Tokyo', 900000.00);", "output": "SELECT Artist, SUM(Revenue) as TotalRevenue FROM Concerts GROUP BY Artist ORDER BY TotalRevenue DESC; SELECT * FROM (SELECT Artist, SUM(Revenue) as TotalRevenue, ROW_NUMBER() OVER (ORDER BY SUM(Revenue) DESC) as Rank FROM Concerts GROUP BY Artist) WHERE Rank <= 3;"}
{"input": " \uc6b0\ub9ac \uacf5\uae09\uc5c5\uccb4\uac00 '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c \uacf5\uae09\ud558\ub294 '\uc720\uae30\ub18d \uba74'\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vendors (VendorID int, VendorName varchar(50), Country varchar(50)); INSERT INTO Vendors (VendorID, VendorName, Country) VALUES (1, 'VendorA', 'Asia'), (2, 'VendorB', 'Africa'), (3, 'VendorC', 'Europe'); CREATE TABLE Materials (MaterialID int, MaterialName varchar(50), Sustainable bit); INSERT INTO Materials (MaterialID, MaterialName, Sustainable) VALUES (1, 'Organic Cotton', 1), (2, 'Polyester', 0); CREATE TABLE Source (SourceID int, VendorID int, MaterialID int, Quantity int); INSERT INTO Source (SourceID, VendorID, MaterialID, Quantity) VALUES (1, 1, 1, 500), (2, 1, 2, 300), (3, 2, 1, 800), (4, 3, 2, 700);", "output": "SELECT SUM(Quantity) FROM Source JOIN Materials ON Source.MaterialID = Materials.MaterialID JOIN Vendors ON Source.VendorID = Vendors.VendorID WHERE Vendors.Country = 'Africa' AND Materials.MaterialName = 'Organic Cotton';"}
{"input": " '\uc544\uc2dc\uc544'\uc5d0 \uc704\uce58\ud55c \uad11\uc0b0 \uc791\uc5c5\uc5d0 \uc885\uc0ac\ud558\ub294 \ucd1d \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (id INT PRIMARY KEY, operation_name VARCHAR(50), location VARCHAR(50), num_employees INT);", "output": "SELECT SUM(num_employees) FROM mining_operations WHERE location = 'Asia';"}
{"input": " \uc5f0\ub839\ubcc4 \ubb34\ubcf4\ud5d8\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE health_insurance (age_group VARCHAR(10), uninsured INT); INSERT INTO health_insurance (age_group, uninsured) VALUES ('0-18', 50), ('19-34', 200), ('35-49', 150), ('50-64', 100);", "output": "SELECT age_group, uninsured, ROUND(100.0 * uninsured / SUM(uninsured) OVER (), 2) AS pct_uninsured FROM health_insurance;"}
{"input": " \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ub3c4\uad6c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tool (category VARCHAR(20), tool VARCHAR(20), score INT); INSERT INTO tool (category, tool, score) VALUES ('AI', 'Chatbot', 85), ('AI', 'Image Recognition', 90), ('Data', 'Data Visualization', 80);", "output": "SELECT tool, score FROM tool WHERE score = (SELECT MIN(score) FROM tool);"}
{"input": " '2\uc6d4' \ud55c \ub2ec \ub3d9\uc548 'B\ub808\uc2a4\ud1a0\ub791'\uc758 \uc77c\ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RestaurantRevenue (restaurant VARCHAR(20), date DATE, revenue FLOAT); INSERT INTO RestaurantRevenue (restaurant, date, revenue) VALUES ('Restaurant B', '2022-02-01', 4000.00),('Restaurant B', '2022-02-02', 5000.00),('Restaurant B', '2022-02-03', 6000.00);", "output": "SELECT AVG(revenue) FROM RestaurantRevenue WHERE restaurant = 'Restaurant B' AND date BETWEEN '2022-02-01' AND '2022-02-28';"}
{"input": " \uc9c0\ub09c\ud574 \uac01 \uc791\ubb3c \uc720\ud615\uc758 \ucd1d \uc720\uae30\ubb3c\uc744 \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicMatter (date DATE, organic_matter INT, crop_type VARCHAR(20));", "output": "SELECT crop_type, EXTRACT(MONTH FROM date) as month, SUM(organic_matter) OVER(PARTITION BY crop_type, EXTRACT(MONTH FROM date) ORDER BY crop_type, EXTRACT(MONTH FROM date)) as total_organic_matter FROM OrganicMatter WHERE date >= DATEADD(year, -1, CURRENT_DATE);"}
{"input": "\uc9c0\ub09c \ub2ec '\uc800\ub141'\uacfc '\uac04\uc2dd' \uba54\ub274 \uce74\ud14c\uace0\ub9ac\uc758 \uc77c \ud3c9\uade0 \uc218\uc775\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE daily_revenue(menu_category VARCHAR(20), revenue DECIMAL(10, 2), order_date DATE); INSERT INTO daily_revenue(menu_category, revenue, order_date) VALUES ('Dinner', 7000, '2021-04-01'), ('Snacks', 3000, '2021-04-01'), ('Dinner', 6000, '2021-04-02'), ('Snacks', 3500, '2021-04-02');", "output": "SELECT menu_category, AVG(revenue) AS avg_daily_revenue FROM daily_revenue WHERE order_date >= (SELECT DATE(CURRENT_DATE - INTERVAL 30 DAY)) AND menu_category IN ('Dinner', 'Snacks') GROUP BY menu_category;"}
{"input": " \uc0c8\ub85c\uc6b4 \uc0ac\uc6a9\uc790\uc640 \uac8c\uc2dc\ubb3c\uc744 \uc0bd\uc785\ud558\uc138\uc694.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, content TEXT, created_at TIMESTAMP); CREATE VIEW latest_post AS SELECT posts.user_id, MAX(posts.created_at) AS latest_post FROM posts GROUP BY posts.user_id;", "output": "INSERT INTO users (id, name, country) VALUES (1, 'Alice', 'Australia'), (2, 'Bob', 'Canada'); INSERT INTO posts (id, user_id, content, created_at) SELECT NULL, users.id, 'Hello World!', NOW() FROM users WHERE users.id NOT IN (SELECT latest_post.user_id FROM latest_post);"}
{"input": " 'HospitalityDB'\uc5d0 \uc788\ub294 \ud638\ud154\uacfc \uac00\uc0c1 \ud22c\uc5b4\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE Hotels (hotel_id INT, hotel_name VARCHAR(50)); INSERT INTO Hotels (hotel_id, hotel_name) VALUES (1, 'Hotel1'), (2, 'Hotel2'); CREATE TABLE VirtualTours (tour_id INT, hotel_id INT, tour_name VARCHAR(50)); INSERT INTO VirtualTours (tour_id, hotel_id) VALUES (1, 1), (2, 1), (3, 2);", "output": "SELECT COUNT(*) FROM Hotels UNION SELECT COUNT(*) FROM VirtualTours;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uac74\uc124\ub41c \ub179\uc0c9 \uac74\ubb3c\uc758 \ud3c9\uade0 \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \ub3c4\uc2dc\ubcc4\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, city VARCHAR(255), construction_date DATE, carbon_offset INT);", "output": "SELECT city, AVG(carbon_offset) FROM green_buildings WHERE construction_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY city;"}
{"input": " \uadfc\ub85c\uc790 \uc218 50\uba85 \uc774\uc0c1\uc778 \ud638\uc8fc \uac01 \ud0c4\uad11\uc758 \uadfc\ub85c\uc790 \uc218\ub97c \uadfc\ub85c\uc790 \uc218 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\uae4c?", "context": "CREATE TABLE mines (id INT, country VARCHAR(255), name VARCHAR(255), num_workers INT, mineral VARCHAR(255)); INSERT INTO mines (id, country, name, num_workers, mineral) VALUES (1, 'Australia', 'Mine A', 75, 'Coal'), (2, 'Australia', 'Mine B', 42, 'Coal'), (3, 'Australia', 'Mine C', 60, 'Coal'), (4, 'Australia', 'Mine D', 80, 'Coal');", "output": "SELECT name, num_workers FROM mines WHERE country = 'Australia' AND mineral = 'Coal' AND num_workers > 50 ORDER BY num_workers DESC;"}
{"input": " \uba74\uacfc \ub300\ub9c8\uc5d0 \ub300\ud55c \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc9c1\ubb3c \uc18c\uc2f1 \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE fabric_sourcing (id INT PRIMARY KEY, fabric_type VARCHAR(255), country VARCHAR(255), sustainability_score FLOAT); INSERT INTO fabric_sourcing (id, fabric_type, country, sustainability_score) VALUES (1, 'Cotton', 'India', 0.75), (2, 'Polyester', 'China', 0.5), (3, 'Hemp', 'France', 0.9), (4, 'Rayon', 'Indonesia', 0.6), (5, 'Cotton', 'Brazil', 0.8), (6, 'Hemp', 'Italy', 0.85);", "output": "SELECT fabric_type, country, sustainability_score, ROW_NUMBER() OVER (PARTITION BY fabric_type ORDER BY sustainability_score DESC) AS rank FROM fabric_sourcing WHERE fabric_type IN ('Cotton', 'Hemp') AND sustainability_score = (SELECT MAX(sustainability_score) FROM fabric_sourcing WHERE fabric_type = f.fabric_type);"}
{"input": " \uac00\uc7a5 \uae34 \uc804\uc2dc\ud68c \uc911 \uc0c1\uc704 20%\uc5d0 \uc804\uc2dc\ub41c \uc791\ud488\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE AllGalleries (gallery_name VARCHAR(20), artwork_ID INT, exhibition_duration INT); INSERT INTO AllGalleries (gallery_name, artwork_ID, exhibition_duration) VALUES ('GalleryA', 1, 45), ('GalleryA', 2, 60), ('GalleryA', 3, 30), ('GalleryB', 4, 70), ('GalleryB', 5, 50);", "output": "SELECT artwork_ID, exhibition_duration FROM (SELECT artwork_ID, exhibition_duration, NTILE(4) OVER (ORDER BY exhibition_duration) as tile_num FROM AllGalleries) tmp WHERE tile_num <= 2;"}
{"input": " MI\uc758 \uc5b4\ub290 \uc9c4\ub8cc\uc18c\uc5d0\uc11c \ub77c\uc774\uc13c\uc2a4\uc640 \ud2b9\uc815 \ud488\uc885\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT, equitable BOOLEAN); INSERT INTO dispensaries (id, name, state, equitable) VALUES (1, 'Dispensary X', 'Michigan', true), (2, 'Dispensaries Y', 'Michigan', false); CREATE TABLE licenses (id INT, dispensary_id INT, status TEXT); INSERT INTO licenses (id, dispensary_id, status) VALUES (1, 1, 'active'), (2, 2, 'active'); CREATE TABLE strains (id INT, name TEXT, dispensary_id INT); INSERT INTO strains (id, name, dispensary_id) VALUES (1, 'Strain A', 1), (2, 'Strain B', 2), (3, 'Strain C', 1);", "output": "SELECT d.name  FROM dispensaries d  JOIN licenses l ON d.id = l.dispensary_id  JOIN strains s ON d.id = s.dispensary_id  WHERE d.state = 'Michigan' AND l.status = 'active' AND s.name = 'Strain A';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uace0\uac1d \ubd80\ubb38\uc5d0 \ud310\ub9e4\ub41c \ub2e4\uc591\ud55c \uc0ac\uc774\uc988\uc758 \uc758\ub958 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID INT, CustomerSegment TEXT); CREATE TABLE GarmentSales (SaleID INT, CustomerID INT, GarmentID INT, PurchaseDate DATE); CREATE TABLE Garments (GarmentID INT, GarmentName TEXT, SizeDiverse BOOLEAN); INSERT INTO Customers VALUES (1, 'Plus Size'), (2, 'Petite'), (3, 'Standard'); INSERT INTO GarmentSales VALUES (1, 1, 1, '2022-01-01'), (2, 2, 2, '2022-02-01'), (3, 3, 3, '2022-03-01'); INSERT INTO Garments VALUES (1, 'Garment1', TRUE), (2, 'Garment2', FALSE), (3, 'Garment3', TRUE);", "output": "SELECT c.CustomerSegment, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Customers) AS Percentage FROM Customers c JOIN GarmentSales s ON c.CustomerID = s.CustomerID JOIN Garments g ON s.GarmentID = g.GarmentID WHERE g.SizeDiverse = TRUE AND PurchaseDate >= DATEADD(MONTH, -6, CURRENT_DATE) GROUP BY c.CustomerSegment;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc218\ud655\ub7c9\uc774 \uac00\uc7a5 \uc801\uc740 \uc791\ubb3c\uc758 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uacfc \ud1a0\uc591 \uc218\ubd84 \uc218\uc900\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE crop (id INT, name VARCHAR(255), yield INT); CREATE TABLE irrigation (id INT, crop_id INT, water_consumption INT, timestamp TIMESTAMP); CREATE TABLE soil_sensor (id INT, crop_id INT, moisture INT, timestamp TIMESTAMP); INSERT INTO crop VALUES (1, 'Corn', 80), (2, 'Soybean', 70), (3, 'Wheat', 90); INSERT INTO irrigation VALUES (1, 1, 1000, '2022-04-01 10:00:00'), (2, 2, 800, '2022-04-01 10:00:00'); INSERT INTO soil_sensor VALUES (1, 1, 60, '2022-04-01 10:00:00'), (2, 2, 70, '2022-04-01 10:00:00');", "output": "SELECT c.name, AVG(i.water_consumption) as avg_water_consumption, AVG(s.moisture) as avg_moisture FROM crop c INNER JOIN irrigation i ON c.id = i.crop_id INNER JOIN soil_sensor s ON c.id = s.crop_id WHERE c.yield = (SELECT MIN(yield) FROM crop WHERE timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW()) AND i.timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() AND s.timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() GROUP BY c.name;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uac00\uc7a5 \ub192\uc740 \ub9e4\ucd9c\uc744 \uc62c\ub9b0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, product_id INT, material VARCHAR(50), sale_date DATE, quantity INT);", "output": "SELECT material, SUM(quantity) AS total_sales FROM sales WHERE material IN ('organic_cotton', 'recycled_polyester', 'tencel') AND sale_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY material ORDER BY total_sales DESC LIMIT 1;"}
{"input": " \ub3d9\ubd80 \uc9c0\uc5ed\uc758 \ud0f1\ud06c \ucd5c\ub300 \uc0dd\uc0b0 \ub2a5\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Production (tank VARCHAR(20), capacity INT, location VARCHAR(20)); INSERT INTO Production (tank, capacity, location) VALUES ('Tank3', 100000, 'Eastern'), ('Tank4', 150000, 'Western');", "output": "SELECT MAX(capacity) FROM Production WHERE location = 'Eastern';"}
{"input": "\uc218\ub144\uac04\uc758 \uacbd\ud5d8\uc744 \ubc14\ud0d5\uc73c\ub85c \uc804\ubb38\uc131 \uac1c\ubc1c\uc774 \ud544\uc694\ud55c \uad50\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, teacher_name VARCHAR(50), school_id INT, years_of_experience INT); INSERT INTO teachers (teacher_id, teacher_name, school_id, years_of_experience) VALUES (1, 'Alice Brown', 1001, 12), (2, 'David Lee', 1001, 2), (3, 'Emily White', 1002, 8);", "output": "SELECT teacher_id, teacher_name, years_of_experience, NTILE(3) OVER (ORDER BY years_of_experience) as experience_group FROM teachers;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uac01 \ub3c4\uc2dc\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (id INT, name VARCHAR(100), city VARCHAR(100), signup_date DATE); INSERT INTO Volunteers (id, name, city, signup_date) VALUES (1, 'John Doe', 'New York', '2020-06-01'); INSERT INTO Volunteers (id, name, city, signup_date) VALUES (2, 'Jane Smith', 'Toronto', '2021-03-15');", "output": "SELECT city, COUNT(*) as total_volunteers FROM Volunteers WHERE signup_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) GROUP BY city;"}
{"input": " 2021\ub144 'Climate Catalyst'\uac00 \uc2e4\uc2dc\ud55c ESG \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ud22c\uc790\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE investments (id INT, investor VARCHAR(255), amount FLOAT, date DATE, esg_score FLOAT); INSERT INTO investments (id, investor, amount, date, esg_score) VALUES (21, 'Climate Catalyst', 200000, '2021-03-15', 70); INSERT INTO investments (id, investor, amount, date, esg_score) VALUES (22, 'Climate Catalyst', 220000, '2021-07-30', 75);", "output": "SELECT * FROM investments WHERE investor = 'Climate Catalyst' AND esg_score = (SELECT MIN(esg_score) FROM investments WHERE investor = 'Climate Catalyst' AND year(date) = 2021);"}
{"input": " '2020\ub144'\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ub3c4\ub85c \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE if not exists road_projects (id INT, name VARCHAR(100), year INT, completed BOOLEAN); INSERT INTO road_projects (id, name, year, completed) VALUES (1, 'Road Expansion', 2020, TRUE);", "output": "SELECT COUNT(*) FROM road_projects WHERE year = 2020 AND completed = TRUE;"}
{"input": " \ub3c5\uc77c\uc5d0\uc11c \ud314\ub85c\uc5b4\uac00 1000\uba85 \uc774\uc0c1\uc778 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uad11\uace0 \ub178\ucd9c\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE users (id INT, follower_count INT, country VARCHAR(255)); INSERT INTO users (id, follower_count, country) VALUES (1, 1500, 'Germany'), (2, 500, 'USA'), (3, 2000, 'Germany'), (4, 1200, 'France'), (5, 800, 'Germany'); CREATE TABLE ad_impressions (id INT, user_id INT, impression_date DATE); INSERT INTO ad_impressions (id, user_id, impression_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-01-02'), (3, 2, '2022-01-01'), (4, 3, '2022-01-01'), (5, 3, '2022-01-02'), (6, 3, '2022-01-03');", "output": "SELECT SUM(impression_count) FROM (SELECT COUNT(impression_date) AS impression_count FROM ad_impressions JOIN users ON ad_impressions.user_id = users.id WHERE users.country = 'Germany' GROUP BY users.id HAVING follower_count > 1000) subquery;"}
{"input": "0~500, 500~1000, >1000\uc758 \uac00\uaca9\ub300\uc640 \ud574\ub2f9 \uac1c\uc218\ub97c \uac1c\uc218\ubcc4\ub85c \uc21c\uc704\ub97c \ub9e4\uae34 \uacbd\uc6b0 VR \ud558\ub4dc\uc6e8\uc5b4 \uc81c\ud488\uc758 \uac00\uaca9\ub300\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE VRHardware (HardwareID INT, HardwareName VARCHAR(50), Manufacturer VARCHAR(20), ReleaseDate DATE, Price NUMERIC(10,2)); INSERT INTO VRHardware (HardwareID, HardwareName, Manufacturer, ReleaseDate, Price) VALUES (1, 'Oculus Rift', 'Oculus', '2016-03-28', 599); INSERT INTO VRHardware (HardwareID, HardwareName, Manufacturer, ReleaseDate, Price) VALUES (2, 'HTC Vive', 'HTC', '2016-04-05', 799); INSERT INTO VRHardware (HardwareID, HardwareName, Manufacturer, ReleaseDate, Price) VALUES (3, 'Valve Index', 'Valve', '2019-06-28', 999); INSERT INTO VRHardware (HardwareID, HardwareName, Manufacturer, ReleaseDate, Price) VALUES (4, 'Pico Neo 2', 'Pico', '2019-04-15', 699);", "output": "SELECT CASE WHEN Price <= 500 THEN '0-500' WHEN Price <= 1000 THEN '500-1000' ELSE '>1000' END as PriceRange, COUNT(*) as ProductsInRange, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as Rank FROM VRHardware GROUP BY PriceRange;"}
{"input": " \ubcf4\uc7a5 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ubcf4\ud5d8\uc758 \ubcf4\ud5d8 \ubc88\ud638, \ubcf4\ud5d8 \uc720\ud615, \ubcf4\uc7a5 \uae08\uc561\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policies (policy_number INT, policy_type VARCHAR(50), coverage_amount INT, policy_start_date DATE); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date) VALUES (12345, 'Auto', 50000, '2022-01-01'); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date) VALUES (67890, 'Home', 300000, '2022-02-15'); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date) VALUES (111213, 'Umbrella', 1000000, '2022-03-01');", "output": "SELECT policy_number, policy_type, coverage_amount FROM policies WHERE coverage_amount = (SELECT MAX(coverage_amount) FROM policies);"}
{"input": " \ubd81\uadf9\ub300\ud559\uad50 \uc5f0\uad6c\uc9c4\uc758 \ucd1d \ucd9c\ud310\ubb3c \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Researchers ( id INT, name VARCHAR(50), organization VARCHAR(50), publications INT, last_activity DATETIME ); INSERT INTO Researchers (id, name, organization, publications, last_activity) VALUES (5, 'Eve', 'University of the Arctic', 7, '2021-06-12'), (6, 'Frank', 'Alaska Wildlife Institute', 10, '2021-04-03');", "output": "SELECT organization, SUM(publications) as total_publications FROM Researchers WHERE organization = 'University of the Arctic' GROUP BY organization;"}
{"input": " \ubbfc\uac04 \uc790\uae08\uc744 \ubc1b\uc9c0 \ubabb\ud55c \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud558\uace0 \uac01 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc790\uae08 \ucd9c\ucc98\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE genetic_research (project_id INT, project_name VARCHAR(100), partner VARCHAR(50)); INSERT INTO genetic_research VALUES (1, 'Genome Mapping', 'Public'); INSERT INTO genetic_research VALUES (2, 'DNA Sequencing', 'Private'); INSERT INTO genetic_research VALUES (3, 'Gene Therapy', 'Public-Private');", "output": "SELECT project_name, partner AS funding_source FROM genetic_research WHERE partner <> 'Private' UNION SELECT project_name, 'No Private Funding' FROM genetic_research WHERE partner = 'Private';"}
{"input": " 'Dubai'\uc5d0 AI \ucee8\uc2dc\uc5b4\uc9c0\uac00 \uc788\ub294 \ud638\ud154\uc740 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE hotels (hotel_id INT, name TEXT, city TEXT, ai_concierge BOOLEAN);", "output": "SELECT city, COUNT(*) as num_hotels FROM hotels WHERE city = 'Dubai' AND ai_concierge = TRUE GROUP BY city;"}
{"input": " 2020\ub144 \uce90\ub098\ub2e4\uc5d0\uc11c \ud310\ub9e4\ub41c \uc804\uae30 \uc790\ub3d9\ucc28\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ElectricVehicles (vehicle_id INT, model VARCHAR(100), co2_emissions DECIMAL(5,2), country VARCHAR(50), year INT); INSERT INTO ElectricVehicles (vehicle_id, model, co2_emissions, country, year) VALUES (1, 'Model S', 0.0, 'Canada', 2020), (2, 'Leaf', 0.0, 'Canada', 2020);", "output": "SELECT AVG(co2_emissions) FROM ElectricVehicles WHERE country = 'Canada' AND year = 2020;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc601\uc591 \uc815\ubcf4 \ub77c\ubca8\uc774 \uc788\ub294 \uc694\ub9ac\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dishes (id INT, name VARCHAR(255), has_nutrition_label BOOLEAN); INSERT INTO dishes (id, name, has_nutrition_label) VALUES (1, 'Pad Thai', true), (2, 'Fried Rice', false), (3, 'Pizza', true), (4, 'Tacos', false), (5, 'Curry', true), (6, 'Coq au Vin', false);", "output": "SELECT COUNT(*) FROM dishes WHERE has_nutrition_label = true;"}
{"input": " '\uc5ed\uc0ac' \uce74\ud14c\uace0\ub9ac\uc758 \uc804\uc2dc\ud68c\ub97c \uad00\ub78c\ud55c \ucd1d \uad00\ub78c\uac1d \uc218\uc640 \ud574\ub2f9 \uce74\ud14c\uace0\ub9ac\uc758 \uac01 \uc804\uc2dc\ud68c\ub97c \uad00\ub78c\ud55c \uad00\ub78c\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Exhibitions (id INT, name VARCHAR(20), category VARCHAR(20), visitors INT); INSERT INTO Exhibitions VALUES (1, 'Exhibition A', 'Art', 3000), (2, 'Exhibition B', 'Science', 2000), (3, 'Exhibition C', 'Art', 4000), (4, 'Exhibition D', 'History', 5000); CREATE TABLE Visitors (id INT, exhibition_id INT, age INT, country VARCHAR(20)); INSERT INTO Visitors VALUES (1, 1, 35, 'USA'), (2, 1, 45, 'Canada'), (3, 2, 25, 'Mexico'), (4, 3, 50, 'Brazil'), (5, 3, 30, 'USA');", "output": "SELECT E.category, E.name, SUM(E.visitors) AS total_visitors, (SUM(E.visitors) * 100.0 / (SELECT SUM(visitors) FROM Exhibitions WHERE category = 'History')) AS percentage FROM Exhibitions E INNER JOIN Visitors V ON E.id = V.exhibition_id WHERE E.category = 'History' GROUP BY E.category, E.name;"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \ub85c\uc158\uc5d0 \ud568\uc720\ub41c \uc720\uae30\ub18d \uc131\ubd84\uc758 \ud3c9\uade0 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organic_ingredients(product_name TEXT, organic_weight DECIMAL(5,2), ingredient TEXT, country TEXT); INSERT INTO organic_ingredients VALUES ('Lotion', 1.0, 'Organic Aloe Vera', 'France'); INSERT INTO organic_ingredients VALUES ('Lotion', 0.5, 'Organic Coconut Oil', 'France'); INSERT INTO organic_ingredients VALUES ('Lotion', 0.5, 'Organic Shea Butter', 'France');", "output": "SELECT AVG(organic_weight) FROM (SELECT organic_weight FROM organic_ingredients WHERE country = 'France' AND ingredient LIKE 'Organic%' GROUP BY organic_weight) AS subquery;"}
{"input": " \ube0c\ub79c\ub4dc\ubcc4 \uc81c\ud488\ud3c9\uc810\uc758 3\uac1c\uc6d4 \uc774\ub3d9\ud3c9\uade0\uc744 \ub0a0\uc9dc\uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE brands (brand_id INT, brand_name VARCHAR(50)); CREATE TABLE ratings (rating_id INT, brand_id INT, product_rating DECIMAL(3,2), rating_date DATE);", "output": "SELECT r.brand_id, r.rating_date, AVG(r.product_rating) OVER (PARTITION BY r.brand_id ORDER BY r.rating_date ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as moving_avg FROM ratings r;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uad50\uc218 1\uc778\ub2f9 \ud3c9\uade0 \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO faculty (id, name, department) VALUES (1, 'Alice', 'Computer Science'); INSERT INTO faculty (id, name, department) VALUES (2, 'Bob', 'Mathematics'); CREATE TABLE authorships (id INT, faculty_id INT, publication_id INT); INSERT INTO authorships (id, faculty_id, publication_id) VALUES (1, 1, 1); INSERT INTO authorships (id, faculty_id, publication_id) VALUES (2, 1, 2); CREATE TABLE publications (id INT, year INT, title VARCHAR(50)); INSERT INTO publications (id, year, title) VALUES (1, 2021, 'Artificial Intelligence'); INSERT INTO publications (id, year, title) VALUES (2, 2020, 'Machine Learning');", "output": "SELECT AVG(p.count) FROM (SELECT f.id, COUNT(a.id) AS count FROM authorships a JOIN faculty f ON a.faculty_id = f.id JOIN publications p ON a.publication_id = p.id WHERE p.year = 2021 GROUP BY f.id) p;"}
{"input": " \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uac01 \uc8fc\uc758 \uc815\uc2e0 \uac74\uac15 \ub3d9\ub4f1 \ubcf4\uc7a5 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParity (State VARCHAR(20), Coverage DECIMAL(5,2)); INSERT INTO MentalHealthParity (State, Coverage) VALUES ('California', 0.75), ('Texas', 0.82), ('New York', 0.91), ('Florida', 0.68), ('Illinois', 0.77);", "output": "SELECT State, 100.0 * Coverage as Percentage FROM MentalHealthParity GROUP BY State ORDER BY Percentage DESC;"}
{"input": " \uac01 \uace0\uac1d\uc774 \ub2e8\uc77c \uc8fc\ubb38\uc73c\ub85c \uad6c\ub9e4\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud488\ubaa9 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders(customer_id INT, items INT); INSERT INTO orders(customer_id, items) VALUES(1, 3), (2, 1), (3, 5), (4, 2);", "output": "SELECT customer_id, MAX(items) FROM orders GROUP BY customer_id;"}
{"input": " 2021\ub144\ubd80\ud130 2022\ub144\uae4c\uc9c0 \uac01 \uc81c\ud488\uc758 \ub9e4\ucd9c \ubcc0\ud654\uc728\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales_history (id INT, product VARCHAR(100), year INT, sales INT);", "output": "SELECT product, ((sales_2022 - sales_2021) / sales_2021::FLOAT) * 100 as sales_change FROM (SELECT product, SUM(CASE WHEN year = 2022 THEN sales ELSE 0 END) as sales_2022, SUM(CASE WHEN year = 2021 THEN sales ELSE 0 END) as sales_2021 FROM sales_history GROUP BY product) as subquery;"}
{"input": " \uc791\ub144\uc5d0 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud55c \uad50\uc0ac\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, last_pd_course_date DATE); INSERT INTO teachers (teacher_id, last_pd_course_date) VALUES (1, '2022-01-01'), (2, '2021-12-15'), (3, NULL);", "output": "SELECT COUNT(teacher_id) FROM teachers WHERE last_pd_course_date >= DATEADD(year, -1, GETDATE());"}
{"input": " 2022\ub144 2\ubd84\uae30 \uc5ec\uc131 \ud22c\uc790\uc790\uc758 \uc784\ud329\ud2b8 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \ud22c\uc790 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE impact_categories (category_id INT, category_name TEXT); CREATE TABLE investors (investor_id INT, investor_name TEXT, gender TEXT); CREATE TABLE investments (investment_id INT, category_id INT, investor_id INT, invested_amount INT, invested_date DATE);", "output": "SELECT i.category_name, SUM(invested_amount) AS total_investment FROM investments j JOIN impact_categories i ON j.category_id = i.category_id JOIN investors k ON j.investor_id = k.investor_id WHERE j.invested_date BETWEEN '2022-04-01' AND '2022-06-30' AND k.gender = 'female' GROUP BY i.category_name;"}
{"input": " 2019\ub144\uc5d0\ub294 \uba87 \uac1c\uc758 \uc77c\ub809\ud2b8\ub85c\ub2c9 \uace1\uc774 \ucd9c\uc2dc\ub410\ub098\uc694?", "context": "CREATE TABLE songs (id INT, title TEXT, length FLOAT, genre TEXT, release_year INT); INSERT INTO songs (id, title, length, genre, release_year) VALUES (1, 'Song1', 245.6, 'Pop', 2019), (2, 'Song2', 189.3, 'Rock', 2020), (3, 'Song3', 215.9, 'Pop', 2018), (4, 'Song4', 150.2, 'Hip Hop', 2020), (5, 'Song5', 120.0, 'Hip Hop', 2019), (6, 'Song6', 360.0, 'Jazz', 2018), (7, 'Song7', 200.0, 'Country', 2020), (8, 'Song8', 220.0, 'Country', 2021), (9, 'Song9', 400.0, 'Classical', 2020), (10, 'Song10', 300.0, 'Classical', 2020), (11, 'Song11', 250.0, 'Electronic', 2019), (12, 'Song12', 280.0, 'Electronic', 2018);", "output": "SELECT COUNT(*) FROM songs WHERE genre = 'Electronic' AND release_year = 2019;"}
{"input": "\uc77c\ubcf8 \uc7ac\ud574\uad6c\ud638\ub2e8\uccb4\uc5d0 \uae30\ubd80\ud55c \uae08\uc561\uc758 \ud569\uacc4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organization (org_id INT PRIMARY KEY, name VARCHAR(255), industry VARCHAR(255), country VARCHAR(255)); INSERT INTO organization (org_id, name, industry, country) VALUES (4, 'Japan Disaster Relief', 'Nonprofit', 'Japan');", "output": "SELECT SUM(donation_amount) FROM (SELECT donation.amount AS donation_amount FROM donation JOIN organization ON donation.org_id = organization.org_id WHERE organization.country = 'Japan' AND organization.industry = 'Nonprofit' AND organization.name = 'Japan Disaster Relief') AS donation_subquery;"}
{"input": " '\uc694\uac00' \uc778\uae30\uc810\uc218\ub97c 90\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE wellness_trend (trend_name VARCHAR(50), popularity_score INT); INSERT INTO wellness_trend (trend_name, popularity_score) VALUES ('Yoga', 80);", "output": "WITH updated_trend AS (UPDATE wellness_trend SET popularity_score = 90 WHERE trend_name = 'Yoga' RETURNING *) SELECT * FROM updated_trend;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \uc8fc\ub2f9 \ucd5c\uc18c \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (id INT, name VARCHAR(255)); INSERT INTO programs (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE volunteer_hours (id INT, program_id INT, volunteer_date DATE, hours INT); INSERT INTO volunteer_hours (id, program_id, volunteer_date, hours) VALUES (1, 1, '2022-01-01', 5), (2, 1, '2022-01-02', 3), (3, 2, '2022-01-03', 6), (4, 3, '2022-01-04', 4), (5, 1, '2022-01-05', 7), (6, 2, '2022-01-06', 8), (7, 3, '2022-01-07', 9), (8, 1, '2022-01-08', 10), (9, 2, '2022-01-09', 11), (10, 3, '2022-01-10', 12);", "output": "SELECT program_id, DATE_TRUNC('week', volunteer_date) AS week, MIN(hours) OVER (PARTITION BY program_id, week) AS min_volunteer_hours FROM volunteer_hours;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc601\uad6d\uc5d0\uc11c \uc0ac\uc6a9\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Materials(id INT, material_name VARCHAR(50), quantity INT, usage_date DATE, is_sustainable BOOLEAN); INSERT INTO Materials(id, material_name, quantity, usage_date, is_sustainable) VALUES (1, 'Organic Cotton', 500, '2022-01-01', true); INSERT INTO Materials(id, material_name, quantity, usage_date, is_sustainable) VALUES (2, 'Recycled Polyester', 300, '2022-01-15', true);", "output": "SELECT SUM(quantity) FROM Materials WHERE is_sustainable = true AND usage_date >= DATEADD(month, -6, GETDATE()) AND usage_country = 'UK';"}
{"input": " \ub300\ub959\ubcc4 \ud56d\uacf5\uae30 \uc81c\uc791\uc2dc\uc124 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE manufacturing_facilities (id INT, country VARCHAR(255), continent VARCHAR(255), facility_type VARCHAR(255), capacity INT);", "output": "SELECT continent, COUNT(*) as num_facilities FROM manufacturing_facilities GROUP BY continent;"}
{"input": " \uc6cc\uc2f1\ud134\uacfc \uc624\ub808\uace4\uc758 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \ucc98\ub9ac\ud55c \uc0ac\uac74\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE restorative_justice_wa (case_id INT, state VARCHAR(20)); INSERT INTO restorative_justice_wa VALUES (1, 'Washington'), (2, 'Washington'), (3, 'Washington'); CREATE TABLE restorative_justice_or (case_id INT, state VARCHAR(20)); INSERT INTO restorative_justice_or VALUES (4, 'Oregon'), (5, 'Oregon');", "output": "SELECT COUNT(*) FROM restorative_justice_wa UNION ALL SELECT COUNT(*) FROM restorative_justice_or;"}
{"input": " \ud504\ub791\uc2a4 \uc608\uc220\ud488\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artworks (artwork_id INT, title VARCHAR(50), year INT, artist_id INT, value INT, country VARCHAR(50)); INSERT INTO artworks (artwork_id, title, year, artist_id, value, country) VALUES (1, 'Guernica', 1937, 1, 20000000, 'Spain'); INSERT INTO artworks (artwork_id, title, year, artist_id, value, country) VALUES (2, 'Study for Portrait of Lucian Freud', 1969, 2, 15000000, 'UK');", "output": "SELECT SUM(value) FROM artworks WHERE country = 'France';"}
{"input": " \ucc44\uad74 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uad6d\uac00\ubcc4 \ucd1d \ucc44\uad74\ub41c \uc790\uc6d0\ub7c9\uacfc \uc6b4\uc601 \uc911\uc778 \uad11\uc0b0 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Country (CountryID int, CountryName varchar(50)); CREATE TABLE MiningType (MiningTypeID int, MiningType varchar(50)); CREATE TABLE Mine (MineID int, MineName varchar(50), CountryID int, MiningTypeID int, CoalQuantity int, IronQuantity int, GoldQuantity int); INSERT INTO Country VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'); INSERT INTO MiningType VALUES (1, 'Surface'), (2, 'Underground'); INSERT INTO Mine VALUES (1, 'ABC Mine', 1, 1, 500, 800, 1200), (2, 'DEF Mine', 2, 2, 700, 900, 1500), (3, 'GHI Mine', 3, 1, 600, 1000, 1800);", "output": "SELECT c.CountryName, m.MiningType, COUNT(m.MineID) as MineCount, SUM(m.CoalQuantity + m.IronQuantity + m.GoldQuantity) as TotalResources FROM Mine m JOIN Country c ON m.CountryID = c.CountryID JOIN MiningType mt ON m.MiningTypeID = mt.MiningTypeID GROUP BY c.CountryName, m.MiningType;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc640 \uc624\uc138\uc544\ub2c8\uc544\uc5d0\uc11c \ud654\ubb3c\uc744 \uc120\uc801\ud55c \uc120\ubc15\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (VesselID INT, VesselName VARCHAR(50));CREATE TABLE CargoLoads (LoadID INT, VesselID INT, LoadLocation VARCHAR(50), LoadDate DATE); INSERT INTO Vessels (VesselID, VesselName) VALUES (1, 'VesselA'), (2, 'VesselB'), (3, 'VesselC'), (4, 'VesselD'); INSERT INTO CargoLoads (LoadID, VesselID, LoadLocation, LoadDate) VALUES (1, 1, 'South Africa', '2021-01-01'), (2, 1, 'Australia', '2021-02-01'), (3, 2, 'New Zealand', '2021-03-01'), (4, 3, 'Madagascar', '2021-04-01'), (5, 4, 'Papua New Guinea', '2021-05-01');", "output": "SELECT VesselName FROM Vessels WHERE VesselID IN (SELECT VesselID FROM CargoLoads WHERE LoadLocation LIKE 'Africa%') INTERSECT SELECT VesselName FROM Vessels WHERE VesselID IN (SELECT VesselID FROM CargoLoads WHERE LoadLocation LIKE 'Oceania%');"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc2dc\uc5d0\uc11c\ub294 \uba87 \uac74\uc758 \uac74\ucd95 \ud5c8\uac00\uac00 \ubc1c\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE building_permits (id INT, city VARCHAR(255), issue_date DATE);", "output": "SELECT COUNT(*) FROM building_permits WHERE city = 'Los Angeles' AND issue_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": " 2020\ub144 \ucd5c\uace0 \uc0dd\uc0b0\uc790\uc640 \ucd5c\uc800 \uc0dd\uc0b0\uc790\uc758 \ud14c\ub974\ube00 \uc0dd\uc0b0\ub7c9 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE terbium_production (id INT, year INT, producer VARCHAR(255), terbium_prod FLOAT); INSERT INTO terbium_production (id, year, producer, terbium_prod) VALUES (1, 2020, 'China', 543.2), (2, 2020, 'USA', 231.5), (3, 2020, 'Australia', 789.9), (4, 2020, 'Brazil', 345.6), (5, 2020, 'India', 120.4);", "output": "SELECT MAX(terbium_prod) - MIN(terbium_prod) FROM terbium_production WHERE year = 2020;"}
{"input": "\uc548\uc804\uac80\uc0ac\ub97c \ud1b5\uacfc\ud55c \ucd1d \uc120\ubc15 \uc218\uc640 \uc5d4\uc9c4 \uc6a9\ub7c9\uc774 2000 \ubbf8\ub9cc\uc778 \uc120\ubc15 \uc218\ub97c \ub2e8\uc77c \uacb0\uacfc \uc138\ud2b8\ub85c \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (ID INT, Name VARCHAR(50), Type VARCHAR(50), Safety_Inspected INT, Engine_Capacity INT); INSERT INTO Vessels (ID, Name, Type, Safety_Inspected, Engine_Capacity) VALUES (1, 'MV Endeavour', 'Cargo Ship', 1, 3000), (2, 'MV Nautilus', 'Cargo Ship', 0, 1500);", "output": "SELECT COUNT(*) FROM Vessels WHERE Safety_Inspected = 1 UNION ALL SELECT COUNT(*) FROM Vessels WHERE Engine_Capacity < 2000;"}
{"input": " \uc18c\uc218 \uc18c\uc720\uc8fc\uac00 \uc788\ub294 \ucf5c\ub85c\ub77c\ub3c4\uc5d0 \uc704\uce58\ud55c \uc57d\uad6d\uc758 \uacbd\uc6b0 \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc774\uba70, \uac01 \uc57d\uad6d\uc5d0\uc11c \uad6c\ub9e4\ud55c \uc18c\ube44\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dispensaries (id INT PRIMARY KEY, location TEXT, minority_owner BOOLEAN); INSERT INTO dispensaries (id, location, minority_owner) VALUES (1, 'Colorado', TRUE); INSERT INTO dispensaries (id, location, minority_owner) VALUES (2, 'Colorado', FALSE); CREATE TABLE inventory (id INT PRIMARY KEY, dispensary_id INT, product_id INT, quantity INT, price DECIMAL); INSERT INTO inventory (id, dispensary_id, product_id, quantity, price) VALUES (1, 1, 1, 100, 12.50); INSERT INTO inventory (id, dispensary_id, product_id, quantity, price) VALUES (2, 2, 2, 150, 15.00); CREATE TABLE transactions (id INT PRIMARY KEY, sale_id INT, consumer_id INT); INSERT INTO transactions (id, sale_id, consumer_id) VALUES (1, 1, 1); INSERT INTO transactions (id, sale_id, consumer_id) VALUES (2, 1, 2);", "output": "SELECT d.location, AVG(i.price) as avg_price, COUNT(t.sale_id) as num_consumers FROM dispensaries d INNER JOIN inventory i ON d.id = i.dispensary_id INNER JOIN transactions t ON i.id = t.sale_id WHERE d.location = 'Colorado' AND d.minority_owner = TRUE GROUP BY d.location;"}
{"input": " \uad6d\uc81c\uae30\uad6c\uac00 \uc790\uae08\uc744 \uc9c0\uc6d0\ud558\ub294 \uc544\ud504\ub9ac\uce74\uc758 \uae30\ud6c4\ubcc0\ud654 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AdaptationProjects (Id INT, Name VARCHAR(50), Funded BOOLEAN, FundingOrganization VARCHAR(50), FundingDate DATE, Location VARCHAR(20));", "output": "SELECT COUNT(*) FROM AdaptationProjects WHERE Funded = TRUE AND FundingOrganization NOT LIKE 'Africa%' AND Location = 'Africa';"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uc644\uc804 \ucc44\uc2dd\uc8fc\uc758\uc790 \uace0\uac1d\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Customers (CustomerID INT, Name TEXT, City TEXT, IsVegan BOOLEAN);", "output": "SELECT City, IsVegan, COUNT(IsVegan) * 100.0 / (SELECT COUNT(*) FROM Customers) AS Percentage FROM Customers WHERE IsVegan = TRUE GROUP BY City;"}
{"input": " '\uc778\uc0c1\ud30c \ubbf8\uc220' \uc804\uc2dc\ud68c\ub97c \uad00\ub78c\ud588\uc9c0\ub9cc \uae30\ubd80\ud558\uc9c0 \uc54a\uc740 \ubc29\ubb38\uac1d \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE DonationEvents (DonationEventID INT, DonationID INT, ArtworkID INT, VisitorID INT);", "output": "SELECT COUNT(DISTINCT v.VisitorID) FROM Visitors v LEFT JOIN DonationEvents de ON v.VisitorID = de.VisitorID JOIN Artworks a ON v.VisitorID = a.VisitorID JOIN Exhibitions e ON a.ExhibitionID = e.ExhibitionID WHERE e.ExhibitionName = 'Impressionist Art' AND de.DonationEventID IS NULL;"}
{"input": " \uc81c\uc870\uc5c5\uccb4\uc758 \ud3c9\uade0 \uc9c0\uc18d\uac00\ub2a5\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc640 \ucd1d \uc81c\uc870\uc5c5\uccb4 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE manufacturers (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), sustainability_score INT);", "output": "SELECT m.country, AVG(m.sustainability_score) as avg_score, COUNT(*) as total_manufacturers, RANK() OVER (ORDER BY avg_score DESC) as rank FROM manufacturers m GROUP BY m.country HAVING rank <= 5;"}
{"input": " 'creative_ai' \ub370\uc774\ud130\uc138\ud2b8\uc5d0\uc11c \ud6c8\ub828\ub41c \ubaa8\ub378\uc758 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub41c \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE creative_ai (model_id INT, model_name VARCHAR(50), model_type VARCHAR(20), dataset_name VARCHAR(50)); INSERT INTO creative_ai (model_id, model_name, model_type, dataset_name) VALUES (1, 'GAN', 'generative', 'creative_ai'), (2, 'VAE', 'generative', 'creative_ai'), (3, 'CNN', 'discriminative', 'creative_ai');", "output": "SELECT model_type, COUNT(*) as total FROM creative_ai WHERE dataset_name = 'creative_ai' GROUP BY model_type;"}
{"input": "\uad6d\uac00\ubcc4 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE projects (project_id INT, name TEXT, country TEXT, capacity INT); INSERT INTO projects (project_id, name, country, capacity) VALUES (1, 'Solar Farm', 'Germany', 5000), (2, 'Wind Turbine', 'France', 3000), (3, 'Geothermal Plant', 'Germany', 4000);", "output": "SELECT country, SUM(capacity) OVER (PARTITION BY country) FROM projects;"}
{"input": " \ud2b9\uc815 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc73c\uba70 \ud3b8\uc758 \uc2dc\uc124\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \ud559\uc0dd\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Student_Program_Mapping (student_id INT, program_id INT);", "output": "SELECT s.name as student_name FROM Students s LEFT JOIN Student_Program_Mapping spm ON s.id = spm.student_id LEFT JOIN Support_Programs sp ON spm.program_id = sp.id WHERE sp.name = 'Special Ed' AND sp.id IS NULL;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2fc \uad50\ub7c9 \uc0c1\uc704 3\uac1c\uc640 \uac74\uc124 \ub0a0\uc9dc\ub97c \ube44\uc6a9\uc21c\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE bridges (bridge_id INT, bridge_name VARCHAR(255), state VARCHAR(255), construction_date DATE, cost FLOAT); INSERT INTO bridges (bridge_id, bridge_name, state, construction_date, cost) VALUES (1, 'Bridge A', 'Texas', '2000-01-01', 10000000), (2, 'Bridge B', 'Texas', '2005-01-01', 8000000), (3, 'Bridge C', 'Texas', '2010-01-01', 12000000);", "output": "SELECT * FROM (SELECT bridge_name, construction_date, cost, ROW_NUMBER() OVER (ORDER BY cost DESC) as rank FROM bridges WHERE state = 'Texas' AND project_type = 'Bridge') sub WHERE rank <= 3;"}
{"input": " 2018\ub144\uc5d0 \ud3c9\uade0 \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\ubcf4\ub2e4 \ub0ae\uc740 \uacf5\uc720\ub9bc\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE public_forests (id INT, name VARCHAR(255), year INT, production FLOAT); INSERT INTO public_forests (id, name, year, production) VALUES (1, 'Forest A', 2018, 1200.0), (2, 'Forest B', 2018, 800.0), (3, 'Forest C', 2018, 900.0);", "output": "SELECT name FROM public_forests WHERE production < (SELECT AVG(production) FROM public_forests WHERE year = 2018 AND type = 'public') AND year = 2018;"}
{"input": " \ucd5c\uadfc 3\uc77c\uac04 \uac70\ub798\uae08\uc561\uc758 \uc774\ub3d9\ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Transactions (TransactionID INT, TransactionDate DATE, Amount DECIMAL(10,2)); INSERT INTO Transactions (TransactionID, TransactionDate, Amount) VALUES (1, '2022-01-01', 500.00), (2, '2022-01-02', 250.00), (3, '2022-01-03', 750.00), (4, '2022-01-04', 1500.00), (5, '2022-01-05', 200.00), (6, '2022-01-06', 300.00);", "output": "SELECT TransactionDate, AVG(Amount) OVER (ORDER BY TransactionDate ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as MovingAverage FROM Transactions;"}
{"input": " \uc2dd\ud488 \uc548\uc804 \uac80\uc0ac \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 10\uac1c \ub808\uc2a4\ud1a0\ub791\uc744 \ud3c9\uade0 \uc810\uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE inspections (inspection_id INT, restaurant_id INT, inspection_date DATE, score INT); INSERT INTO inspections (inspection_id, restaurant_id, inspection_date, score) VALUES (1, 1, '2022-01-01', 95);", "output": "SELECT restaurant_id, AVG(score) as avg_score FROM inspections GROUP BY restaurant_id ORDER BY avg_score DESC FETCH FIRST 10 ROWS ONLY;"}
{"input": " ID\uac00 \uac00\uc7a5 \ub192\uc740 \ud130\ube48\uc758 \ud48d\uc18d\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_speed (id INT, turbine_id INT, wind_speed FLOAT);", "output": "SELECT MAX(wind_speed) AS max_wind_speed FROM wind_speed WHERE id = (SELECT MAX(id) FROM wind_speed);"}
{"input": " \uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc758 \uc815\ubcf4 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE intelligence_budgets (country VARCHAR(50), year INT, budget INT);", "output": "SELECT country, SUM(budget) as total_budget FROM intelligence_budgets WHERE (country, budget) IN (SELECT country, DENSE_RANK() OVER (ORDER BY budget DESC) as rank FROM intelligence_budgets GROUP BY country) AND rank <= 5 GROUP BY country;"}
{"input": " \uad6d\uac00\ubcc4 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uac8c\uc784 \ud69f\uc218\ub97c \uc21c\uc704\uc640 \ud568\uaed8 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE EventDates (EventID INT, EventDate DATE); INSERT INTO EventDates (EventID, EventDate) VALUES (1, '2022-01-01'), (2, '2022-02-01'), (3, '2022-01-15');", "output": "SELECT E.EventCountry, AVG(TotalGames) AS AvgGamesPlayed, RANK() OVER (ORDER BY AVG(TotalGames) DESC) AS Rank FROM Players P JOIN EventParticipation EP ON P.PlayerID = EP.PlayerID GROUP BY E.EventCountry"}
{"input": " 2022\ub144 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE climate_communication_funding(project_id INT, year INT, amount FLOAT); INSERT INTO climate_communication_funding (project_id, year, amount) VALUES (27, 2022, 85000.0), (28, 2021, 80000.0), (29, 2020, 70000.0);", "output": "SELECT AVG(amount) FROM climate_communication_funding WHERE year = 2022;"}
{"input": "\uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\uac00 \uad6c\ud604\ub41c \ud6c4 \uc0dd\uc131\ub41c 'cardano' \ub124\ud2b8\uc6cc\ud06c\uc758 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regulatory_frameworks (framework_id INT, network VARCHAR(255), implementation_date DATE); INSERT INTO regulatory_frameworks (framework_id, network, implementation_date) VALUES (1, 'cardano', '2022-03-01'), (2, 'polkadot', '2022-02-01'); CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(255), network VARCHAR(255), creation_date DATE); INSERT INTO smart_contracts (contract_id, name, network, creation_date) VALUES (1, 'Contract1', 'cardano', '2022-03-15'), (2, 'Contract2', 'polkadot', '2022-02-15');", "output": "SELECT name FROM smart_contracts WHERE network = 'cardano' AND creation_date > (SELECT implementation_date FROM regulatory_frameworks WHERE network = 'cardano');"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74 \uc54c\uace0\ub9ac\uc998\uc758 \ud3c9\uade0 \uacf5\uc815\uc131 \uc810\uc218 \uacb0\uc815", "context": "CREATE TABLE Algorithms (AlgorithmId INT, Name TEXT, FairnessScore FLOAT, Country TEXT); INSERT INTO Algorithms (AlgorithmId, Name, FairnessScore, Country) VALUES (1, 'AlgorithmA', 0.8, 'Brazil'), (2, 'AlgorithmB', 0.9, 'Argentina'), (3, 'AlgorithmC', 0.7, 'Colombia');", "output": "SELECT AVG(FairnessScore) FROM Algorithms WHERE Country = 'South America';"}
{"input": "\"\uc2a4\ud0c0\uc27d \ucee4\ub9e8\ub4dc\"\uc640 \"\uc740\ud558\uc815\ubcf5\"\uc744 \ud50c\ub808\uc774\ud55c \uc0ac\uc6a9\uc790 \uc218\uc640 \uac01 \uac8c\uc784\uc758 \uc5f0\ub839\ubcc4 \uc21c\uc704\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Players (PlayerID INT, PlayerAge INT, GameName VARCHAR(20)); INSERT INTO Players (PlayerID, PlayerAge, GameName) VALUES (1, 25, 'Galactic Conquest'), (2, 30, 'Galactic Conquest'), (3, 22, 'Starship Command'), (4, 35, 'Starship Command'), (5, 28, 'Galactic Conquest'), (6, 33, 'Starship Command');", "output": "SELECT GameName, PlayerAge, ROW_NUMBER() OVER (PARTITION BY GameName ORDER BY PlayerAge DESC) AS AgeRank FROM Players WHERE GameName IN ('Starship Command', 'Galactic Conquest');"}
{"input": " \uac01 \uc544\ud2f0\uc2a4\ud2b8\ub294 \ud3c9\uade0 \uba87 \uac1c\uc758 \uc2a4\ud2b8\ub9bc\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE Artists (ArtistID int, ArtistName varchar(255)); INSERT INTO Artists (ArtistID, ArtistName) VALUES (1, 'Taylor Swift'), (2, 'The Beatles'), (3, 'Miles Davis'); CREATE TABLE Streams (StreamID int, SongID int, ArtistID int, StreamCount int); INSERT INTO Streams (StreamID, SongID, ArtistID, StreamCount) VALUES (1, 1, 1, 1000), (2, 2, 2, 2000), (3, 3, 3, 1500); CREATE TABLE Songs (SongID int, SongName varchar(255)); INSERT INTO Songs (SongID, SongName) VALUES (1, 'Shake It Off'), (2, 'Hey Jude'), (3, 'So What');", "output": "SELECT Artists.ArtistName, AVG(Streams.StreamCount) as AverageStreams FROM Artists INNER JOIN Songs ON Artists.ArtistID = Songs.ArtistID INNER JOIN Streams ON Songs.SongID = Streams.SongID GROUP BY Artists.ArtistName;"}
{"input": " 2022\ub144 UEFA \ucc54\ud53c\uc5b8\uc2a4\ub9ac\uadf8 \uc870\ubcc4 \uc608\uc120\uc5d0\uc11c \ud300 \uc774\ub984\uc744 \ud3ec\ud568\ud558\uc5ec \ub4dd\uc810 \uc0c1\uc704 5\uba85\uc758 \uc120\uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ucl_players (player_id INT, player_name VARCHAR(255), team_id INT); INSERT INTO ucl_players VALUES (1, 'PlayerA', 1), (2, 'PlayerB', 1), (3, 'PlayerC', 2), (4, 'PlayerD', 2), (5, 'PlayerE', 3); CREATE TABLE ucl_matches (match_id INT, home_team_id INT, away_team_id INT, goals_home INT, goals_away INT); INSERT INTO ucl_matches VALUES (1, 1, 2, 2, 1), (2, 1, 3, 1, 2), (3, 2, 4, 3, 1);", "output": "SELECT p.player_name, t.team_name, SUM(m.goals_home + m.goals_away) AS total_goals FROM ucl_players p JOIN (SELECT home_team_id AS team_id, SUM(goals_home) AS goals FROM ucl_matches GROUP BY home_team_id UNION ALL SELECT away_team_id, SUM(goals_away) FROM ucl_matches GROUP BY away_team_id) t ON p.team_id = t.team_id JOIN ucl_matches m ON p.team_id IN (m.home_team_id, m.away_team_id) WHERE m.match_id IN (SELECT match_id FROM ucl_matches WHERE (home_team_id = p.team_id OR away_team_id = p.team_id) AND match_id <= 6) GROUP BY p.player_id, t.team_name ORDER BY total_goals DESC LIMIT 5;"}
{"input": " 2021\ub144 \uae30\ubd80\uc790\ubcc4 \uae30\ubd80 \ucd1d\uc561\uacfc \uadf8 \ud574 \uae30\ubd80 \ucd1d\uc561\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Donors (DonorID INT, Name TEXT, TotalDonation DECIMAL(10,2), DonationDate DATE); INSERT INTO Donors VALUES (1, 'Josephine Garcia', 5000.00, '2021-01-01'), (2, 'Ahmed Khan', 3000.00, '2021-06-01'), (3, 'Maria Rodriguez', 1500.00, '2021-12-31');", "output": "SELECT Name, SUM(TotalDonation) as TotalDonated, COUNT(*) as NumDonations FROM Donors WHERE YEAR(DonationDate) = 2021 GROUP BY Name ORDER BY TotalDonated DESC;"}
{"input": "\uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c '\ube44\uac74 \uac00\uc8fd' \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers(supplier_id INT, supplier_name TEXT); INSERT INTO suppliers(supplier_id, supplier_name) VALUES (1, 'Plant-Based Leather Inc'), (2, 'Eco-Friendly Leathers Ltd'); CREATE TABLE products(product_id INT, product_name TEXT, supplier_id INT, price DECIMAL, quantity INT); INSERT INTO products(product_id, product_name, supplier_id, price, quantity) VALUES (1, 'Vegan Leather Jacket', 1, 129.99, 25), (2, 'Vegan Leather Bag', 1, 69.99, 75), (3, 'Eco-Leather Jacket', 2, 119.99, 30); CREATE TABLE sales(sale_id INT, product_id INT); INSERT INTO sales(sale_id, product_id) VALUES (1, 1), (2, 2), (3, 3);", "output": "SELECT suppliers.supplier_name, SUM(products.quantity) FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN sales ON products.product_id = sales.product_id WHERE products.product_name LIKE '%vegan leather%' GROUP BY suppliers.supplier_name;"}
{"input": " 2022\ub144 \uc6d4\uac04 \uc77c\uc77c \uac70\ub798\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc8fc\uc2dd\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE daily_volume (stock_symbol VARCHAR(10), trading_date DATE, volume INT); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('AAPL', '2022-01-01', 1000000); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('AAPL', '2022-01-02', 1200000); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('GOOG', '2022-01-01', 800000); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('GOOG', '2022-01-02', 750000); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('AAPL', '2022-02-01', 1100000); INSERT INTO daily_volume (stock_symbol, trading_date, volume) VALUES ('AAPL', '2022-02-02', 1300000);", "output": "SELECT stock_symbol, MAX(volume) over (partition by EXTRACT(MONTH FROM trading_date)) as max_volume FROM daily_volume WHERE trading_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY stock_symbol, EXTRACT(MONTH FROM trading_date);"}
{"input": " \uc9c0\ub09c \uc8fc \ubd81\ubbf8\uc5d0\uc11c #food \uad00\ub828 \uac8c\uc2dc\ubb3c\uc5d0 \ub300\ud55c \ucd1d \uc88b\uc544\uc694 \uc218 \uc0c1\uc704 2\uba85\uc758 \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_posts(username VARCHAR(30), region VARCHAR(20), post_date DATE, likes INT, hashtags VARCHAR(50)); INSERT INTO user_posts(username, region, post_date, likes, hashtags) VALUES('James', 'North America', '2021-08-01', 50, '#food'), ('Karen', 'North America', '2021-08-02', 75, '#foodie'), ('Lucas', 'North America', '2021-08-03', 100, '#food'), ('Mia', 'North America', '2021-08-04', 125, '#food'), ('Nina', 'North America', '2021-08-05', 150, '#food');", "output": "SELECT username, SUM(likes) as total_likes FROM (SELECT username, likes, ROW_NUMBER() OVER (PARTITION BY username ORDER BY post_date DESC) as rn FROM user_posts WHERE region = 'North America' AND post_date >= DATEADD(week, -1, CURRENT_DATE) AND hashtags LIKE '%food%') t WHERE rn <= 2 GROUP BY username"}
{"input": " \ucf00\ub0d0\uc758 \ub18d\uc5c5 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE weather (id INT, location VARCHAR(50), temperature INT, year INT, country VARCHAR(50)); INSERT INTO weather (id, location, temperature, year, country) VALUES (1, 'Nakuru', 25, 2020, 'Kenya');", "output": "SELECT AVG(temperature) - (SELECT AVG(temperature) FROM weather WHERE location = weather.location AND year = weather.year - 1) FROM weather WHERE location IN ('Nakuru', 'Kitale', 'Eldoret') AND country = 'Kenya' AND year > 2019 GROUP BY year ORDER BY year ASC;"}
{"input": " \ud504\ub791\uc2a4\uc758 \uce5c\ud658\uacbd \ud638\ud154\uacfc \ubc15\ubb3c\uad00 \ubc29\ubb38\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eco_hotels (hotel_id INT, country VARCHAR(20), revenue FLOAT); INSERT INTO eco_hotels (hotel_id, country, revenue) VALUES (1, 'France', 5000.5), (2, 'France', 6000.3), (3, 'Italy', 4000.2); CREATE TABLE museum_visits (visit_id INT, country VARCHAR(20), amount FLOAT); INSERT INTO museum_visits (visit_id, country, amount) VALUES (1, 'France', 2000), (2, 'France', 3000), (3, 'Germany', 1000);", "output": "SELECT SUM(revenue) FROM eco_hotels WHERE country = 'France' UNION ALL SELECT SUM(amount) FROM museum_visits WHERE country = 'France';"}
{"input": " \uae30\ubd80\uac00 3\uac74 \ubbf8\ub9cc\uc778 \uce74\ud14c\uace0\ub9ac\ub97c \uc81c\uc678\ud558\uace0 \uac01 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud574 \uc0c1\uc704 3\uac1c\uc758 \uae30\ubd80 \uae08\uc561\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE program_donations (program_category VARCHAR(20), donation_amount INT);INSERT INTO program_donations VALUES ('Arts', 5000), ('Education', 10000), ('Health', 15000), ('Arts', 6000), ('Education', 7000), ('Health', 8000);CREATE TABLE program_category_count (program_category VARCHAR(20), donation_count INT);INSERT INTO program_category_count VALUES ('Arts', 2), ('Education', 2), ('Health', 2);", "output": "SELECT program_category, donation_amount FROM (SELECT program_category, donation_amount, DENSE_RANK() OVER (PARTITION BY program_category ORDER BY donation_amount DESC) AS donation_rank FROM program_donations) AS donation_ranks WHERE donation_ranks.donation_rank <= 3 AND program_category IN (SELECT program_category FROM program_category_count WHERE donation_count >= 3);"}
{"input": "\ubbf8\ub514\uc5b4 \ub9ac\ud130\ub7ec\uc2dc\uc640 \uad00\ub828\ub41c \uc8fc\uc81c\uc5d0 \ub300\ud574 \ucd9c\ud310\ub41c \ucd1d \uae30\uc0ac \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (title VARCHAR(255), topic VARCHAR(255));", "output": "SELECT COUNT(*) FROM articles WHERE topic LIKE '%media literacy%';"}
{"input": " Q1\uc5d0 \ucc38\uc5ec\ud558\uace0 LGBTQ+ \ucee4\ubba4\ub2c8\ud2f0\uc758 \uad6c\uc131\uc6d0\uc73c\ub85c \ud655\uc778\ub41c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (join_date DATE, community_affiliation VARCHAR(255)); INSERT INTO volunteers (join_date, community_affiliation) VALUES ('2021-01-01', 'LGBTQ+'), ('2021-01-05', 'none'), ('2021-02-01', 'LGBTQ+'), ('2021-02-10', 'woman'), ('2021-03-01', 'LGBTQ+');", "output": "SELECT COUNT(*) FROM volunteers WHERE community_affiliation = 'LGBTQ+' AND MONTH(join_date) BETWEEN 1 AND 3;"}
{"input": " \ud68c\uc0ac\ubcc4, \uc5f0\ub3c4\ubcc4 \ud56d\uacf5\uae30 \uc81c\uc791 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE AircraftManufacturing (id INT, company VARCHAR(50), manufacture_year INT, quantity INT); INSERT INTO AircraftManufacturing (id, company, manufacture_year, quantity) VALUES (1, 'Boeing', 2010, 200), (2, 'Boeing', 2015, 250), (3, 'Airbus', 2017, 300), (4, 'Airbus', 2018, 350), (5, 'Embraer', 2020, 200);", "output": "SELECT company, manufacture_year, SUM(quantity) as total_aircrafts FROM AircraftManufacturing GROUP BY company, manufacture_year;"}
{"input": " 2021\ub144 'CityB'\uc640 'CityC'\uc5d0\uc11c \uc2dc\ubbfc\ub4e4\uc774 \uc2e0\uace0\ud55c \uace0\uc720\ud55c \uc815\ucc45 \uc774\uc288 \uc218\ub97c \uc911\ubcf5\uc744 \uc81c\uc678\ud558\uace0 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CityB_Issues (ID INT, Year INT, Issue VARCHAR(50)); INSERT INTO CityB_Issues (ID, Year, Issue) VALUES (1, 2021, 'Potholes'), (2, 2021, 'Street Lighting'); CREATE TABLE CityC_Issues (ID INT, Year INT, Issue VARCHAR(50)); INSERT INTO CityC_Issues (ID, Year, Issue) VALUES (3, 2021, 'Potholes'), (4, 2021, 'Garbage Collection');", "output": "SELECT COUNT(DISTINCT Issue) FROM (SELECT Issue FROM CityB_Issues WHERE Year = 2021 UNION SELECT Issue FROM CityC_Issues WHERE Year = 2021) AS CombinedIssues;"}
{"input": " \uc9c0\ub09c \ub2ec\uc758 \ub9e4\ucd9c\ub9cc\uc744 \uace0\ub824\ud558\uc5ec \uac00\uaca9\ub300\uac00 $50 \uc774\uc0c1\uc778 \uc81c\ud488\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ud310\ub9e4 \uc218\uc775\uc758 \ube44\uc728\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SalesData (sale_id INT, product_id INT, sale_date DATE, sale_revenue FLOAT); INSERT INTO SalesData (sale_id, product_id, sale_date, sale_revenue) VALUES (1, 1, '2022-01-02', 75), (2, 2, '2022-01-15', 30), (3, 3, '2022-01-28', 60), (4, 4, '2022-01-10', 120), (5, 5, '2022-01-22', 45);", "output": "SELECT (SUM(sale_revenue) / (SELECT SUM(sale_revenue) FROM SalesData WHERE sale_date >= DATEADD(month, -1, GETDATE()))) * 100 as revenue_percentage FROM SalesData WHERE product_id IN (SELECT product_id FROM Products WHERE price > 50) AND sale_date >= DATEADD(month, -1, GETDATE());"}
{"input": " \ucd5c\uc2e0 \uc5c5\ub370\uc774\ud2b8\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc774\ud6c4\uc5d0 \uc0dd\uc131\ub41c 'solana' \ub124\ud2b8\uc6cc\ud06c\uc758 \ub514\uc9c0\ud138 \uc790\uc0b0 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_assets (asset_id INT, name VARCHAR(255), network VARCHAR(255), creation_date DATE); INSERT INTO digital_assets (asset_id, name, network, creation_date) VALUES (1, 'Asset1', 'solana', '2022-02-01'), (2, 'Asset2', 'ethereum', '2022-01-01'); CREATE TABLE smart_contracts (contract_id INT, network VARCHAR(255), last_updated DATE); INSERT INTO smart_contracts (contract_id, network, last_updated) VALUES (1, 'solana', '2022-01-01'), (2, 'ethereum', '2022-01-02');", "output": "SELECT name FROM digital_assets WHERE network = 'solana' AND creation_date > (SELECT MAX(last_updated) FROM smart_contracts WHERE network = 'solana');"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uad70\uc0ac\ube44 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 10\uac1c \uad6d\uac00\uc758 \ud3c9\uade0 \uad6d\ubc29\ube44 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DefenseSpending (CountryName VARCHAR(50), Year INT, Spending DECIMAL(18,2)); INSERT INTO DefenseSpending (CountryName, Year, Spending) VALUES ('USA', 2017, 610000000000), ('China', 2017, 228000000000), ('Russia', 2017, 66000000000), ('Saudi Arabia', 2017, 64000000000), ('India', 2017, 53000000000), ('France', 2017, 50000000000), ('Germany', 2017, 45000000000), ('UK', 2017, 45000000000), ('Japan', 2017, 45000000000), ('Brazil', 2017, 27000000000);", "output": "SELECT AVG(Spending) FROM (SELECT CountryName, Spending FROM DefenseSpending WHERE Year BETWEEN 2017 AND 2021 QUALIFY ROW_NUMBER() OVER (PARTITION BY CountryName ORDER BY Spending DESC) <= 10) AS Top10Countries;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ubbf8\uad6d\uc758 \ucd1d \uc720\uae30\ub18d \uc778\uc99d \uc591\uc2dd \uc0dd\uc120 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Production(id INT, country VARCHAR(50), year INT, certified BOOLEAN, quantity INT); INSERT INTO Production(id, country, year, certified, quantity) VALUES (1, 'US', 2019, TRUE, 30000), (2, 'US', 2020, TRUE, 35000), (3, 'US', 2021, TRUE, 40000), (4, 'US', 2019, FALSE, 25000), (5, 'US', 2020, FALSE, 28000), (6, 'US', 2021, FALSE, 32000);", "output": "SELECT SUM(quantity) FROM Production WHERE country = 'US' AND certified = TRUE AND year BETWEEN 2019 AND 2021;"}
{"input": " \uc5f0\uc18d \uba87 \ub144 \ub3d9\uc548 \ubbf8\uad6d \uad11\uc0b0\ub2f9 \uad6c\ub9ac \uc0dd\uc0b0\ub7c9\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mines (id INT, country VARCHAR(255), name VARCHAR(255), year INT, copper_production INT); INSERT INTO mines (id, country, name, year, copper_production) VALUES (1, 'United States', 'Mine E', 2000, 1000), (2, 'United States', 'Mine E', 2001, 1200), (3, 'United States', 'Mine E', 2002, 1400), (4, 'United States', 'Mine F', 2000, 1500), (5, 'United States', 'Mine F', 2001, 1600), (6, 'United States', 'Mine F', 2002, 1700);", "output": "SELECT name, (LAG(copper_production) OVER (PARTITION BY name ORDER BY year)) - copper_production AS change_in_production FROM mines WHERE country = 'United States' AND mineral = 'Copper';"}
{"input": " \uc9c0\ub09c \ud574 \uc804\uad6d\uc758 \uac01 \uc8fc\ubcc4 \uc18c\ubc29\uc11c \uc218\uc640 \ud654\uc7ac \uc0ac\uac74 \uac74\uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE States (StateID INT, State VARCHAR(255)); CREATE TABLE FireStations (StationID INT, StationName VARCHAR(255), StateID INT, StationAddress VARCHAR(255)); CREATE TABLE FireIncidents (IncidentID INT, IncidentType VARCHAR(255), StationID INT, IncidentDate DATE);", "output": "SELECT s.State, COUNT(DISTINCT f.StationID) as StationCount, COUNT(DISTINCT fi.IncidentID) as IncidentCount FROM States s JOIN FireStations f ON s.StateID = f.StateID LEFT JOIN FireIncidents fi ON f.StationID = fi.StationID WHERE fi.IncidentDate >= DATEADD(year, -1, GETDATE()) GROUP BY s.State;"}
{"input": "\ubc1c\uad74\ud604\uc7a5\ubcc4\ub85c \ubd84\ub958\ud55c \ub3c4\uc790\uae30 \uc720\ubb3c\uc758 \ud3c9\uade0 \uc5f0\ub300\ub294 \uba87 \ub144\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ancient_artifacts (id INT, artifact_name VARCHAR(50), age INT, type VARCHAR(50), excavation_site VARCHAR(50));", "output": "SELECT excavation_site, AVG(age) OVER (PARTITION BY excavation_site) as avg_pottery_age FROM ancient_artifacts WHERE type = 'pottery';"}
{"input": " \ubc18\ubcf5 \uac1c\uc778\uc744 \uc81c\uc678\ud558\uace0 \ub304\uc2a4 \ubc0f \uc74c\uc545 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud558\ub294 \ucd1d \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE events (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO events (id, name, type) VALUES (1, 'Dance Showcase', 'dance'), (2, 'Music Festival', 'music');", "output": "SELECT SUM(attendance) FROM (SELECT COUNT(DISTINCT e.id) AS attendance FROM events e WHERE e.type IN ('dance', 'music') GROUP BY e.name) t"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uad6d\uac00\ubcc4\ub85c \uba87 \uac1c\uc758 \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE military_innovation (innovation_id INT, innovation_name TEXT, innovation_description TEXT, country TEXT, start_date DATE, end_date DATE); INSERT INTO military_innovation (innovation_id, innovation_name, innovation_description, country, start_date, end_date) VALUES (1, 'Stealth Technology', 'Invisible aircraft technology', 'USA', '2010-01-01', '2015-12-31'), (2, 'Artificial Intelligence', 'AI-driven drones', 'China', '2016-01-01', '2021-12-31');", "output": "SELECT military_innovation.country, COUNT(military_innovation.innovation_id) FROM military_innovation WHERE military_innovation.start_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) GROUP BY military_innovation.country;"}
{"input": "2020\ub144 \ubb3c \ubcf4\uc874 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \uc9c0\uc18d \uac00\ub2a5\ud55c \ud22c\uc790\ub294 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_water_projects (id INT, investment_date DATE, project_type VARCHAR(255), investment_amount FLOAT);", "output": "SELECT SUM(investment_amount) FROM sustainable_water_projects WHERE project_type = 'water conservation' AND investment_date BETWEEN '2020-01-01' AND '2020-12-31';"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \ud558\ub8e8 \ub3d9\uc548 \ubcf4\uace0\ub41c \ubcf4\uc548 \uc0ac\uace0\uc758 \ucd5c\ub300 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, sector VARCHAR(255), date DATE);", "output": "SELECT MAX(number_of_incidents_per_day) FROM (SELECT DATE(date) as date, COUNT(*) as number_of_incidents_per_day FROM security_incidents WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY date) as subquery;"}
{"input": " \uae30\ubd80\uc790 \uc720\ud615\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_type TEXT, donation_amount DECIMAL(10,2)); INSERT INTO donors VALUES (1, 'Individual', 50.00); INSERT INTO donors VALUES (2, 'Corporation', 5000.00);", "output": "SELECT donor_type, AVG(donation_amount) as avg_donation FROM donors GROUP BY donor_type;"}
{"input": " \uc9c0\uc911\ud574\uc5d0\uc11c \uc120\ubc15\uc774 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (VesselID INT, VesselName TEXT); CREATE TABLE Ports (PortID INT, PortName TEXT, Country TEXT, Region TEXT); CREATE TABLE Cargo (VesselID INT, PortID INT, CargoWeight INT); INSERT INTO Ports (PortID, PortName, Country, Region) VALUES (1, 'Barcelona', 'Spain', 'Mediterranean Sea'), (2, 'Marseille', 'France', 'Mediterranean Sea'), (3, 'Genoa', 'Italy', 'Mediterranean Sea'); INSERT INTO Vessels (VesselID, VesselName) VALUES (1, 'Sea Tiger'), (2, 'Ocean Wave'), (3, 'River Queen'); INSERT INTO Cargo (VesselID, PortID, CargoWeight) VALUES (1, 1, 5000), (1, 2, 7000), (2, 1, 6000), (3, 3, 8000);", "output": "SELECT MAX(CargoWeight) FROM Cargo INNER JOIN Vessels ON Cargo.VesselID = Vessels.VesselID INNER JOIN Ports ON Cargo.PortID = Ports.PortID WHERE Region = 'Mediterranean Sea';"}
{"input": " \uc774\uc775\ub960\uc774 50%\ub97c \ub118\ub294 \ubaa8\ub4e0 \ub514\uc800\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu_items(item_id INT, name TEXT, type TEXT, price DECIMAL, cost_price DECIMAL);", "output": "SELECT name FROM menu_items WHERE (price - cost_price) / price > 0.5 AND type = 'Dessert';"}
{"input": " \uac01 \ube0c\ub79c\ub4dc\uac00 \uc0dd\uc0b0\ud558\ub294 \uc9c0\uc18d\uac00\ub2a5\ud55c \ud328\uc158 \uc544\uc774\ud15c\uc758 \uc218\ub97c \uc138\uc5b4\ubcf4\uace0, 500\uac1c \uc774\uc0c1\uc758 \uc9c0\uc18d\uac00\ub2a5\ud55c \uc544\uc774\ud15c\uc744 \uc0dd\uc0b0\ud55c \ube0c\ub79c\ub4dc\ub9cc \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE SustainableFashion (brand TEXT, item_id INTEGER, is_sustainable BOOLEAN); INSERT INTO SustainableFashion (brand, item_id, is_sustainable) VALUES ('BrandA', 123, true), ('BrandB', 456, false), ('BrandC', 789, true), ('BrandA', 234, true), ('BrandD', 567, true);", "output": "SELECT brand, COUNT(*) as sustainable_items FROM SustainableFashion WHERE is_sustainable = true GROUP BY brand HAVING COUNT(*) > 500;"}
{"input": " \uae30\ud6c4\ubcc0\ud654 \uad00\ub828 \ucf58\ud150\uce20\uc758 \uc2dc\uccad\uc2dc\uac04 \ubd84\ud3ec\ub97c \uc5f0\ub839\ub300\ubcc4\ub85c \uc5b4\ub5bb\uac8c \uad6c\ubd84\ud558\ub098\uc694?", "context": "CREATE TABLE user_age_groups (user_id INT, user_age_group VARCHAR(20)); CREATE TABLE content_topics (content_id INT, content_topic VARCHAR(50), content_length INT); CREATE TABLE user_content_views (view_id INT, user_id INT, content_id INT, view_date DATE);", "output": "SELECT user_age_group, AVG(content_length / 60) as avg_view_time FROM user_content_views JOIN user_age_groups ON user_content_views.user_id = user_age_groups.user_id JOIN content_topics ON user_content_views.content_id = content_topics.content_id WHERE content_topics.content_topic = 'climate change' GROUP BY user_age_group;"}
{"input": " \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\uc758 \uae30\ubd80\uae08 \ucd1d\uc561\uc744 \uc6d0\uc778 \ubd84\uc57c\ubcc4\ub85c \ub098\ub208 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, total_donated_amount FLOAT); CREATE TABLE donations (id INT, donor_id INT, organization_id INT, donation_amount FLOAT); CREATE TABLE organizations (id INT, name TEXT, cause_area TEXT);", "output": "SELECT o.cause_area, SUM(donations.donation_amount) as total_donations, (SUM(donations.donation_amount) / (SELECT SUM(donations.donation_amount) FROM donations)) * 100 as percentage_of_total_donations FROM donations INNER JOIN organizations o ON donations.organization_id = o.id INNER JOIN (SELECT id, total_donated_amount FROM donors ORDER BY total_donated_amount DESC LIMIT 5) d ON donations.donor_id = d.id GROUP BY o.cause_area;"}
{"input": " \ud2b9\uc815 \uc8fc\uc81c\uc5d0 \uad00\ud55c \uae30\uc0ac\ub97c \uac8c\uc7ac\ud55c \ubaa8\ub4e0 \uc5b8\ub860\uc778 \ubaa9\ub85d", "context": "CREATE TABLE journalists (id INT PRIMARY KEY, name TEXT NOT NULL); CREATE TABLE articles (id INT PRIMARY KEY, title TEXT NOT NULL, author_id INT, published_at DATE); CREATE TABLE articles_topics (article_id INT, topic_id INT); CREATE TABLE topics (id INT PRIMARY KEY, name TEXT NOT NULL);", "output": "SELECT journalists.name FROM journalists INNER JOIN articles ON journalists.id = articles.author_id INNER JOIN articles_topics ON articles.id = articles_topics.article_id INNER JOIN topics ON articles_topics.topic_id = topics.id WHERE topics.name = 'specific_topic';"}
{"input": " \uac01 \ub300\ub959\uc758 \ud574\uc591 \uc0dd\ubb3c\uc885 \uc218\ub97c \uad6c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE marine_species (name VARCHAR(255), continent VARCHAR(255), species_count INT); INSERT INTO marine_species (name, continent, species_count) VALUES ('Coral Reefs', 'Asia', 600), ('Kelp Forests', 'North America', 400), ('Seagrass Meadows', 'Africa', 500);", "output": "SELECT continent, species_count, COUNT(*) OVER (PARTITION BY continent) as total_species_count FROM marine_species;"}
{"input": " \ud30c\ub9ac \uc804\uc2dc\ud68c\uc5d0 \ucc38\uc11d\ud558\ub294 \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10), City VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (1, 25, 'Male', 'Paris'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (2, 32, 'Female', 'Paris'); CREATE TABLE Exhibitions (ExhibitionID INT, Title VARCHAR(50), City VARCHAR(50)); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (1, 'Art of the 20th Century', 'Paris'); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (2, 'Impressionist Masters', 'Paris'); CREATE TABLE Attendance (VisitorID INT, ExhibitionID INT); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (1, 1); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (2, 1); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (1, 2);", "output": "SELECT AVG(Visitors.Age) FROM Visitors INNER JOIN Attendance ON Visitors.VisitorID = Attendance.VisitorID INNER JOIN Exhibitions ON Attendance.ExhibitionID = Exhibitions.ExhibitionID WHERE Visitors.City = 'Paris';"}
{"input": "\uc9c0\ub09c 3\ub144\uac04 \uac01 \uad6d\uac00\uc758 1\uc778\ub2f9 \ud3c9\uade0 \uad70\ube44 \uc9c0\ucd9c\uc744 \ub192\uc740 \uac83\ubd80\ud130 \uc21c\uc11c\ub300\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitaryExpenditure (Country VARCHAR(50), Year INT, Expenditure DECIMAL(10,2), Population INT); INSERT INTO MilitaryExpenditure (Country, Year, Expenditure, Population) VALUES ('USA', 2019, 700, 330000000), ('China', 2019, 600, 1400000000), ('Russia', 2019, 500, 145000000), ('USA', 2020, 750, 331000000), ('China', 2020, 650, 1430000000), ('Russia', 2020, 550, 146000000), ('USA', 2021, 800, 332000000), ('China', 2021, 700, 1460000000), ('Russia', 2021, 600, 147000000);", "output": "SELECT Country, AVG(Expenditure/Population) OVER (PARTITION BY Country ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS AvgMilitaryExpenditurePerCapita, RANK() OVER (ORDER BY AVG(Expenditure/Population) DESC) AS Rank FROM MilitaryExpenditure GROUP BY Country ORDER BY Rank;"}
{"input": " \uc2e0\uc6a9\uce74\ub4dc\ub85c \uc774\ub8e8\uc5b4\uc9c0\ub294 \uac70\ub798\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (id INT, transaction_number VARCHAR(20), account_number VARCHAR(20), transaction_type VARCHAR(20), transaction_date DATE, amount DECIMAL(10,2)); CREATE TABLE accounts (id INT, account_number VARCHAR(20), customer_id INT, account_type VARCHAR(20), balance DECIMAL(10,2)); INSERT INTO transactions (id, transaction_number, account_number, transaction_type, transaction_date, amount) VALUES (1, 'ABC123', '1234567890', 'Deposit', '2022-01-01', 2000.00); INSERT INTO transactions (id, transaction_number, account_number, transaction_type, transaction_date, amount) VALUES (2, 'DEF456', '0987654321', 'Withdrawal', '2022-01-02', 500.00); INSERT INTO accounts (id, account_number, customer_id, account_type, balance) VALUES (1, '1234567890', 1, 'Checking', 5000.00); INSERT INTO accounts (id, account_number, customer_id, account_type, balance) VALUES (2, '0987654321', 2, 'Credit Card', 10000.00);", "output": "SELECT * FROM transactions WHERE account_number IN (SELECT account_number FROM accounts WHERE account_type = 'Credit Card');"}
{"input": " '\ud31d'\uacfc '\ub85d' \uc7a5\ub974 \ubaa8\ub450\uc5d0\uc11c \ub178\ub798\ub97c \ubc1c\ud45c\ud55c \ubaa8\ub4e0 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE artists (artist_id INT, artist VARCHAR(50)); INSERT INTO artists VALUES (1, 'Britney Spears'), (2, 'Nirvana'), (3, 'Miles Davis'); CREATE TABLE artist_genres (artist_id INT, genre_id INT); INSERT INTO artist_genres VALUES (1, 1), (2, 2), (3, 3), (1, 2);", "output": "SELECT a.artist FROM artists a JOIN artist_genres ag1 ON a.artist_id = ag1.artist_id JOIN artist_genres ag2 ON a.artist_id = ag2.artist_id WHERE ag1.genre_id = 1 AND ag2.genre_id = 2;"}
{"input": " \uad6d\uac00\ubcc4 \ucd95\uad6c \ub4dd\uc810\uc655 TOP 5\ub294 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE soccer_players (id INT, name VARCHAR(50), country VARCHAR(50), goals INT); INSERT INTO soccer_players (id, name, country, goals) VALUES (1, 'Cristiano Ronaldo', 'Portugal', 80), (2, 'Lionel Messi', 'Argentina', 75), (3, 'Neymar', 'Brazil', 60); CREATE TABLE teams (id INT, team_name VARCHAR(50), players_id INT); INSERT INTO teams (id, team_name, players_id) VALUES (1, 'Manchester United', 1), (2, 'PSG', 2), (3, 'Barcelona', 3);", "output": "SELECT country, name, goals FROM (SELECT country, name, goals, ROW_NUMBER() OVER (PARTITION BY country ORDER BY goals DESC) AS rn FROM soccer_players JOIN teams ON soccer_players.id = teams.players_id) t WHERE rn <= 5;"}
{"input": " \ub9e4\ub144 \ucd9c\uc2dc\ub418\ub294 \uc804\uae30 \uc790\ub3d9\ucc28 \ubaa8\ub378\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE vehicles (vehicle_id INT, model VARCHAR(20), manufacture VARCHAR(20), year_introduced INT, vehicle_type VARCHAR(20));", "output": "SELECT year_introduced, COUNT(DISTINCT model) FROM vehicles WHERE vehicle_type = 'electric' GROUP BY year_introduced;"}
{"input": " \ubb44\ubc14\uc774\uc758 \uc0b0\uc5c5 \ubd80\ubb38\uacfc \uc8fc\uac70 \ubd80\ubb38 \uac04\uc758 \uc6d4\ubcc4 \ubb3c \uc18c\ube44\ub7c9\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sector_water_consumption (id INT, city VARCHAR(50), sector VARCHAR(50), monthly_consumption FLOAT); INSERT INTO sector_water_consumption (id, city, sector, monthly_consumption) VALUES (1, 'Mumbai', 'Industrial', 15000000), (2, 'Mumbai', 'Residential', 12000000);", "output": "SELECT sector, monthly_consumption FROM sector_water_consumption WHERE city = 'Mumbai' AND sector IN ('Industrial', 'Residential');"}
{"input": " \uacf5\uc81c\uc561\uc774 $500 \ubbf8\ub9cc\uc778 \ubcf4\ud5d8\uc5d0 \ub300\ud55c \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (PolicyID int, ClaimAmount int, Deductible int); INSERT INTO Claims (PolicyID, ClaimAmount, Deductible) VALUES (1, 500, 400), (2, 2000, 1000), (3, 800, 300);", "output": "SELECT SUM(ClaimAmount) OVER (PARTITION BY CASE WHEN Deductible < 500 THEN 1 ELSE 0 END) as TotalClaimAmount FROM Claims;"}
{"input": " \ud734\uc2a4\ud134 \uc2dc \uacf5\ub9bd\ud559\uad50\uc758 \ud3c9\uade0 \uc608\uc0b0\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc608\uc0b0\uc744 \uac16\uace0 \uc788\ub294 \ud734\uc2a4\ud134 \uc2dc\uc758 \ubaa8\ub4e0 \uacf5\ub9bd\ud559\uad50\uc758 \uc774\ub984\uacfc \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public_schools (name VARCHAR(255), city VARCHAR(255), state VARCHAR(255), type VARCHAR(255), budget FLOAT); INSERT INTO public_schools (name, city, state, type, budget) VALUES ('John Adams Middle School', 'Houston', 'TX', 'Public', 123456.78); INSERT INTO public_schools (name, city, state, type, budget) VALUES ('George Washington Middle School', 'Houston', 'TX', 'Public', 987654.32);", "output": "SELECT name, type FROM public_schools WHERE city = 'Houston' AND budget > (SELECT AVG(budget) FROM public_schools WHERE city = 'Houston');"}
{"input": " \uce7c\ub85c\ub9ac \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac00\uc9c0 \uc694\ub9ac \uc720\ud615\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE cuisine (id INT, type VARCHAR(50), calories INT); INSERT INTO cuisine (id, type, calories) VALUES (1, 'Italian', 500), (2, 'Mexican', 600), (3, 'Japanese', 400);", "output": "SELECT type, calories, ROW_NUMBER() OVER (ORDER BY calories DESC) as rank FROM cuisine WHERE rank <= 2;"}
{"input": " 2019\ub144 \ub2e8\uc77c \ub3c4\uc2dc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uac10\uc5fc\ubcd1 \uc0ac\ub840\uac00 \ubcf4\uace0\ub41c \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE YearlyCases (Year INT, City VARCHAR(20), Disease VARCHAR(20), NumberOfCases INT); INSERT INTO YearlyCases (Year, City, Disease, NumberOfCases) VALUES (2019, 'Los Angeles', 'Influenza', 500);", "output": "SELECT City, MAX(NumberOfCases) FROM YearlyCases WHERE Year = 2019 GROUP BY City;"}
{"input": " \ud2b9\uc815 \uc81c\uc870\uc5c5\uccb4\uc758 \ub450 \uae30\uac04 \uc0ac\uc774\uc758 \ucd1d \ud310\ub9e4\ub7c9 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE SalesData (SaleID INT, ManufacturerID INT, SaleDate DATE, SalesQuantity INT);", "output": "SELECT M.ManufacturerName, SUM(SalesQuantity) - (SELECT SUM(SalesQuantity) FROM SalesData SD2 WHERE SD2.ManufacturerID = M.ManufacturerID AND SD2.SaleDate BETWEEN '2021-01-01' AND '2021-06-30') AS Difference FROM SalesData SD1 JOIN Manufacturers M ON SD1.ManufacturerID = M.ManufacturerID WHERE SD1.SaleDate BETWEEN '2021-07-01' AND '2021-12-31' AND M.ManufacturerID = 1;"}
{"input": " 2021\ub144 'CountryX' \uc784\uc0c1\uc2dc\ud5d8\uc5d0 \ub300\ud55c \ud3c9\uade0 R&D \uc9c0\ucd9c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE rd_expenditure(trial_id TEXT, country TEXT, year INT, amount FLOAT); INSERT INTO rd_expenditure (trial_id, country, year, amount) VALUES ('Trial1', 'CountryX', 2021, 2500000), ('Trial2', 'CountryY', 2020, 3000000);", "output": "SELECT AVG(amount) FROM rd_expenditure WHERE country = 'CountryX' AND year = 2021;"}
{"input": " 'MXC' \ucc3d\uace0\uc5d0 \uc788\ub294 'C01' \ud488\ubaa9\uc758 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inventory (item_code varchar(5), warehouse_id varchar(5), quantity int); INSERT INTO inventory (item_code, warehouse_id, quantity) VALUES ('C01', 'MXC', 700);", "output": "SELECT quantity FROM inventory WHERE item_code = 'C01' AND warehouse_id = 'MXC';"}
{"input": " IT \ubd80\uc11c\uc758 \ucd5c\uc800 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT, name VARCHAR(50), department VARCHAR(50), salary FLOAT); INSERT INTO employees (id, name, department, salary) VALUES (1, 'John Doe', 'IT', 85000.00), (2, 'Jane Smith', 'IT', 88000.00);", "output": "SELECT MIN(salary) FROM employees WHERE department = 'IT';"}
{"input": " \ube44\uac74 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE products(product_id INT, is_vegan BOOLEAN);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM products)) as percentage FROM products WHERE is_vegan = TRUE;"}
{"input": " \ud0c4\uc18c \ud3ec\uc9d1 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c \uac10\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emissions (project_id INT, co2_reduction INT); INSERT INTO co2_emissions (project_id, co2_reduction) VALUES (1, 5000), (2, 6000), (3, 7000), (4, 4000), (5, 8000);", "output": "SELECT AVG(co2_reduction) FROM co2_emissions WHERE project_id IN (SELECT project_id FROM carbon_capture);"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uce5c\ud658\uacbd \uac74\ucd95 \uc778\uc99d\uc744 \ubc1b\uc740 \uc0c1\uc704 2\uac1c \uc8fc\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE state_certifications (state VARCHAR(20), certifications INT); INSERT INTO state_certifications (state, certifications) VALUES ('California', 500), ('Texas', 300), ('Florida', 400);", "output": "SELECT state, certifications FROM (SELECT state, certifications, RANK() OVER (ORDER BY certifications DESC) as rank FROM state_certifications) AS subquery WHERE rank <= 2;"}
{"input": " \uc694\ub9ac \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uce7c\ub85c\ub9ac\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc694\ub9ac\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cuisine (cuisine_id INT PRIMARY KEY, cuisine_name VARCHAR(255));CREATE TABLE dishes (dish_id INT PRIMARY KEY, dish_name VARCHAR(255), cuisine_id INT, calories INT, FOREIGN KEY (cuisine_id) REFERENCES cuisine(cuisine_id));", "output": "SELECT c.cuisine_name, d.dish_name, d.calories FROM dishes d JOIN cuisine c ON d.cuisine_id = c.cuisine_id WHERE (c.cuisine_id, d.calories) IN (SELECT cuisine_id, MAX(calories) FROM dishes GROUP BY cuisine_id) GROUP BY c.cuisine_id, d.dish_name, d.calories LIMIT 3;"}
{"input": " 1990\ub144 \uc774\ud6c4 \ubd81\uadf9\uc758 \uc5f0\uac04 \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weather_data (year INT, location VARCHAR(50), temperature FLOAT);", "output": "SELECT AVG(temperature_change) FROM (SELECT (temperature - LAG(temperature) OVER (ORDER BY year)) AS temperature_change FROM weather_data WHERE year >= 1990) AS subquery;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, DonationAmount DECIMAL(10,2)); INSERT INTO Programs (ProgramID, ProgramName, DonationAmount) VALUES (1, 'Education', 200.00), (2, 'Healthcare', 400.00);", "output": "SELECT ProgramName, AVG(DonationAmount) as AvgDonation FROM Programs WHERE DonationDate BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY ProgramName;"}
{"input": " \ubcf4\uace0\ub41c \ucd5c\ucd08 \uc5f0\ub3c4\ubd80\ud130 \uc2dc\uc791\ud558\uc5ec \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ud070 \uc544\uc2dc\uc544 \uc0c1\uc704 2\uac1c \uad6d\uac00\uc758 \ub9e4\ub9bd \uc6a9\ub7c9\uc758 \uc5f0\uac04 \ubcc0\ud654\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE LandfillData (Country VARCHAR(50), Continent VARCHAR(50), LandfillCapacity INT, Year INT); INSERT INTO LandfillData (Country, Continent, LandfillCapacity, Year) VALUES ('China', 'Asia', 12345, 2015), ('China', 'Asia', 12500, 2016), ('India', 'Asia', 6789, 2015), ('India', 'Asia', 6850, 2016);", "output": "SELECT LandfillData1.Country, LandfillData1.Year, LandfillData1.LandfillCapacity - LandfillData2.LandfillCapacity AS CapacityDifference FROM LandfillData LandfillData1 JOIN LandfillData LandfillData2 ON LandfillData1.Country = LandfillData2.Country AND LandfillData1.Year = LandfillData2.Year + 1 WHERE (SELECT COUNT(*) FROM LandfillData LandfillData2 WHERE LandfillData1.Country = LandfillData2.Country AND LandfillData1.LandfillCapacity < LandfillData2.LandfillCapacity) = 0 AND ROW_NUMBER() OVER (PARTITION BY LandfillData1.Country ORDER BY LandfillData1.Year) <= 2;"}
{"input": " \ud604\uc9c0 \uacf5\uae09\uc5c5\uccb4\ub97c \uc774\uc6a9\ud558\uace0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\ud589\uc744 \uc2e4\ucc9c\ud558\ub294 \ub808\uc2a4\ud1a0\ub791\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Local_Suppliers (Supplier_ID INT, Restaurant_ID INT, Local BOOLEAN); INSERT INTO Local_Suppliers (Supplier_ID, Restaurant_ID, Local) VALUES (1, 1001, TRUE), (2, 1002, FALSE), (3, 1003, TRUE);", "output": "SELECT Restaurants.Restaurant_Name, Restaurants.Location FROM Restaurants JOIN Local_Suppliers ON Restaurants.Restaurant_ID = Local_Suppliers.Restaurant_ID JOIN Sustainable_Practices ON Restaurants.Restaurant_ID = Sustainable_Practices.Restaurant_ID WHERE Local_Suppliers.Local = TRUE AND Sustainable_Practices.Implemented_Date < '2022-05-01';"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc544\uc2dc\uc544\uc5d0\uc11c \ubd88\ubc95 \ucc44\uad74 \uc0ac\uac74\uc774 \uba87 \uac74\uc774\ub098 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE incidents (id INT, location TEXT, date DATE, type TEXT); INSERT INTO incidents (id, location, date, type) VALUES (1, 'Asia', '2020-01-01', 'illegal mining'), (2, 'Africa', '2019-01-01', 'other');", "output": "SELECT COUNT(*) FROM incidents WHERE extract(year from date) >= 2019 AND location = 'Asia' AND type = 'illegal mining';"}
{"input": " \ub9c8\ub9ac\uc544\ub098 \ud574\uad6c\uc5d0\uc11c \ubc1c\uacac\ub41c \ud574\uc591 \uc0dd\ubb3c\uc885\uacfc \ucd5c\ub300 \uc218\uc2ec\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE oceans (ocean_id INT, name VARCHAR(50)); CREATE TABLE species (species_id INT, name VARCHAR(50), ocean_id INT, max_depth DECIMAL(5,2)); INSERT INTO oceans VALUES (1, 'Atlantic'), (2, 'Pacific'), (3, 'Indian'); INSERT INTO species VALUES (1, 'Clownfish', 2, 10), (2, 'Salmon', 1, 100), (3, 'Clownfish', 3, 15), (4, 'Dolphin', 1, 200), (5, 'Turtle', 3, 30), (6, 'Shark', 2, 250), (7, 'Shark', 1, 300), (8, 'Squid', 3, 40), (9, 'Giant Squid', 2, 1000), (10, 'Anglerfish', 2, 1500), (11, 'Mariana Snailfish', 2, 8178);", "output": "SELECT s.name, s.max_depth FROM species s WHERE s.name = 'Mariana Snailfish';"}
{"input": " \ub0a8\ubbf8 \uae30\ud6c4\uae08\uc735 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\uc18c \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance (id INT, project_name TEXT, budget INT, location TEXT); INSERT INTO climate_finance (id, project_name, budget, location) VALUES (1, 'Coral Reef Restoration', 25000, 'South America'); INSERT INTO climate_finance (id, project_name, budget, location) VALUES (2, 'Mangrove Planting', 30000, 'Asia');", "output": "SELECT MIN(budget) FROM climate_finance WHERE location = 'South America';"}
{"input": " \uc544\uc2dc\uc544\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists funding; USE funding; CREATE TABLE if not exists startup_funding (id INT, name VARCHAR(255), region VARCHAR(255), funding DECIMAL(10, 2)); INSERT INTO startup_funding (id, name, region, funding) VALUES (1, 'Startup A', 'Asia', 18000000.00), (2, 'Startup B', 'USA', 25000000.00), (3, 'Startup C', 'Europe', 10000000.00);", "output": "SELECT SUM(funding) FROM funding.startup_funding WHERE region = 'Asia';"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc601\ud654\ub97c \ucc0d\uc740 \ubc30\uc6b0 TOP 5\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE actors (id INT, name VARCHAR(255), movies INT); INSERT INTO actors (id, name, movies) VALUES (1, 'Actor1', 10), (2, 'Actor2', 7), (3, 'Actor3', 15), (4, 'Actor4', 5), (5, 'Actor5', 12);", "output": "SELECT name, movies, ROW_NUMBER() OVER (ORDER BY movies DESC) as rank FROM actors WHERE rank <= 5;"}
{"input": " \ub3c4\ucc29 \ud69f\uc218\uc640 \ub3c4\ucc29 \ud69f\uc218\ub97c \uae30\uc900\uc73c\ub85c \ubcfc \ub54c \ub300\ub959\ubcc4\ub85c \uac00\uc7a5 \uc801\uac8c \ubc29\ubb38\ud55c \uad6d\uc81c \ubaa9\uc801\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE international_visitor_stats (destination VARCHAR(255), continent VARCHAR(255), arrivals INT); INSERT INTO international_visitor_stats (destination, continent, arrivals) VALUES ('Bali', 'Asia', 1000000); INSERT INTO international_visitor_stats (destination, continent, arrivals) VALUES ('Sydney', 'Australia', 5000000);", "output": "SELECT destination, continent, arrivals, RANK() OVER (PARTITION BY continent ORDER BY arrivals ASC) as least_visited_rank FROM international_visitor_stats;"}
{"input": " \ucd5c\uadfc 5\ub144\uac04 \uac01 \ud559\uacfc\uc5d0 \ub0a8, \uc5ec \ub300\ud559\uc6d0\uc0dd\uc774 \uba87 \uba85\uc529 \uc785\ud559\ud558\uc600\ub294\uac00? \ucd1d \ubaa8\uc9d1\uc778\uc6d0\uc744 \uae30\uc900\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae34\ub2e4.", "context": "CREATE TABLE Departments (DepartmentID int, DepartmentName varchar(255)); CREATE TABLE GraduateStudents (StudentID int, StudentName varchar(255), DepartmentID int, Gender varchar(10), AdmissionDate date);", "output": "SELECT DepartmentName, Gender, COUNT(*) as NumAdmissions, RANK() OVER (PARTITION BY DepartmentName ORDER BY COUNT(*) DESC) as AdmissionRank FROM GraduateStudents WHERE AdmissionDate >= DATEADD(year, -5, GETDATE()) GROUP BY DepartmentName, Gender;"}
{"input": " \uc131\ubcc4\uc5d0 \ub530\ub978 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID int, DonorName varchar(50), DonationAmount decimal(10,2), CauseID int, Gender varchar(10)); INSERT INTO Donors (DonorID, DonorName, DonationAmount, CauseID, Gender) VALUES (1, 'John Doe', 1000, 1, 'Male'), (2, 'Jane Smith', 2000, 2, 'Female'), (3, 'Mike Johnson', 3000, 3, 'Male'), (4, 'Sara Connor', 500, 1, 'Female'), (5, 'David Lee', 1500, 2, 'Male'), (6, 'Alice Davis', 4000, 1, 'Female'), (7, 'Bob Brown', 2500, 2, 'Male');", "output": "SELECT Gender, SUM(DonationAmount) as TotalDonationAmount FROM Donors GROUP BY Gender;"}
{"input": " \uac00\ub2a5\ud55c \uacbd\uc6b0 '\ubbf8\uc8fc'\uc5d0\uc11c \uac00\uc7a5 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc0c1\uc704 2\uac1c \ud504\ub85c\uc81d\ud2b8\uc640 \ud574\ub2f9 \uac74\uc124 \ub0a0\uc9dc\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Projects (id INT, country VARCHAR(20), continent VARCHAR(20), year INT, cost FLOAT); INSERT INTO Projects (id, country, continent, year, cost) VALUES (1, 'USA', 'Americas', 2008, 8000); INSERT INTO Projects (id, country, continent, year, cost) VALUES (2, 'Canada', 'Americas', 2012, 7000); INSERT INTO Projects (id, country, continent, year, cost) VALUES (3, 'Mexico', 'Americas', 2015, 9000);", "output": "SELECT country, year, cost FROM (SELECT country, year, cost, RANK() OVER (PARTITION BY continent ORDER BY cost DESC) as project_rank FROM Projects WHERE continent = 'Americas') tmp WHERE project_rank <= 2;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ud559\uad50\uc640 \ubcd1\uc6d0\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ub192\uc740 \uc21c\uc704\uc5d0\uc11c \ub0ae\uc740 \uc21c\uc704\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cities (city_id INT, city_name VARCHAR(255)); CREATE TABLE schools (school_id INT, school_name VARCHAR(255), city_id INT, budget INT); CREATE TABLE hospitals (hospital_id INT, hospital_name VARCHAR(255), city_id INT, budget INT);", "output": "SELECT c.city_name, SUM(s.budget) as total_school_budget, SUM(h.budget) as total_hospital_budget FROM cities c LEFT JOIN schools s ON c.city_id = s.city_id LEFT JOIN hospitals h ON c.city_id = h.city_id GROUP BY c.city_name ORDER BY total_school_budget + total_hospital_budget DESC;"}
{"input": " 2022\ub144 1\ubd84\uae30 \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (product_id INT, product_category TEXT, sale_date DATE, revenue DECIMAL(10,2)); INSERT INTO sales (product_id, product_category, sale_date, revenue) VALUES (1, 'Electronics', '2022-01-01', 500.00), (2, 'Fashion', '2022-01-03', 300.00), (3, 'Furniture', '2022-02-14', 800.00);", "output": "SELECT product_category, SUM(revenue) FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY product_category;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ucd5c\uc18c \ubcf4\uc804\uc608\uc0b0\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE conservation (conservation_id INT, region TEXT, budget FLOAT); INSERT INTO conservation (conservation_id, region, budget) VALUES (1, 'Caribbean', 1200000), (2, 'Mediterranean', 1500000);", "output": "SELECT region, MIN(budget) FROM conservation GROUP BY region"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ub3d9\ub0a8\uc544\uc2dc\uc544 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE city_emissions (city VARCHAR(50), year INT, co2_emissions INT); INSERT INTO city_emissions (city, year, co2_emissions) VALUES ('Bangkok', 2010, 25000), ('Bangkok', 2011, 26000), ('Jakarta', 2010, 30000), ('Jakarta', 2011, 31000), ('Ho_Chi_Minh', 2010, 18000), ('Ho_Chi_Minh', 2011, 19000);", "output": "SELECT city, SUM(co2_emissions) as total_emissions, RANK() OVER (ORDER BY SUM(co2_emissions) DESC) as rank FROM city_emissions WHERE city IN ('Bangkok', 'Jakarta', 'Ho_Chi_Minh') AND year BETWEEN 2010 AND 2020 GROUP BY city;"}
{"input": " \uac01 \uac8c\uc784 \uc7a5\ub974\uc5d0\ub294 \uba87 \uba85\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \uc788\uc73c\uba70, \uac01 \uc7a5\ub974\uc758 \ucd1d \uac8c\uc784 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Genres (GenreID INT, Genre VARCHAR(20)); INSERT INTO Genres (GenreID, Genre) VALUES (1, 'Shooter'); INSERT INTO Genres (GenreID, Genre) VALUES (2, 'Strategy'); CREATE TABLE Games (GameID INT, GameName VARCHAR(50), GenreID INT); INSERT INTO Games (GameID, GameName, GenreID) VALUES (1, 'Game 1', 1); INSERT INTO Games (GameID, GameName, GenreID) VALUES (2, 'Game 2', 2); CREATE TABLE Players (PlayerID INT, GameID INT); INSERT INTO Players (PlayerID, GameID) VALUES (1, 1); INSERT INTO Players (PlayerID, GameID) VALUES (2, 2);", "output": "SELECT Genres.Genre, COUNT(Players.PlayerID) AS NumPlayers, COUNT(Games.GameID) AS NumGames FROM Genres INNER JOIN Games ON Genres.GenreID = Games.GenreID INNER JOIN Players ON Games.GameID = Players.GameID GROUP BY Genres.Genre;"}
{"input": " '\uc77c\uae09 \ube44\ubc00' \ub610\ub294 '\uae30\ubc00' \ubcf4\uc548 \ud5c8\uac00 \uc218\uc900\uc744 \uac00\uc9c4 \uad70\uc778\uc758 \uc774\ub984, \uc9c1\uae09 \ubc0f \ubd80\uc11c\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Personnel (id INT, name VARCHAR(50), rank VARCHAR(20), department VARCHAR(20)); CREATE TABLE ClearanceLevels (id INT, level VARCHAR(20)); CREATE TABLE PersonnelClearances (personnel_id INT, clearance_id INT); INSERT INTO Personnel (id, name, rank, department) VALUES (1, 'John Doe', 'Captain', 'Intelligence'), (2, 'Jane Smith', 'Lieutenant', 'Intelligence'), (3, 'Alice Johnson', 'Colonel', 'Military'), (4, 'Bob Brown', 'Petty Officer', 'Navy'); INSERT INTO ClearanceLevels (id, level) VALUES (1, 'Secret'), (2, 'Top Secret'), (3, 'Confidential'), (4, 'Top Secret Plus'); INSERT INTO PersonnelClearances (personnel_id, clearance_id) VALUES (1, 2), (2, 3), (3, 1), (4, 1);", "output": "SELECT p.name, p.rank, p.department FROM Personnel p INNER JOIN PersonnelClearances pc ON p.id = pc.personnel_id INNER JOIN ClearanceLevels cl ON pc.clearance_id = cl.id WHERE cl.level IN ('Top Secret', 'Confidential');"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30\uc5d0 \uad50\uc0ac\uac00 \ucc38\uc5ec\ud55c \uc804\ubb38\uc131 \uac1c\ubc1c \uc6cc\ud06c\uc20d\uc740 \uba87 \ubc88\uc774\ub098 \uacfc\ubaa9\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\ub098\uc694?", "context": "CREATE TABLE pd_workshops (teacher_id INT, workshop_date DATE, subject_area VARCHAR(255)); INSERT INTO pd_workshops (teacher_id, workshop_date, subject_area) VALUES (1, '2022-01-01', 'Math'), (1, '2022-02-01', 'Science'), (2, '2022-01-01', 'English'), (3, '2022-03-01', 'Math'), (3, '2022-04-01', 'History'), (4, '2022-05-01', 'Science');", "output": "SELECT teacher_id, subject_area, COUNT(*) OVER (PARTITION BY teacher_id, subject_area) AS workshops_attended FROM pd_workshops WHERE workshop_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY teacher_id, subject_area;"}
{"input": " EcoFriendlyMeals\uac00 2022-06-01\uc5d0 \uc2dc\uc560\ud2c0 \uc2dc\uc758 \uace0\uac1d\uc5d0\uac8c $15.99\uc758 \ube44\uc6a9\uacfc \uc2dd\uc0ac ID 123456789\ub85c \uc81c\uacf5\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc2dd\uc0ac\uc758 \uc0c8\ub85c\uc6b4 \uae30\ub85d\uc744 \uc0bd\uc785\ud558\uc138\uc694.", "context": "CREATE TABLE Customers (customer_id INT, name VARCHAR(255), location VARCHAR(255));CREATE TABLE Meals (meal_id INT, name VARCHAR(255), sustainable BOOLEAN, cost DECIMAL(5,2));CREATE TABLE Deliveries (delivery_id INT, customer_id INT, meal_id INT, date DATE, cost DECIMAL(5,2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id), FOREIGN KEY (meal_id) REFERENCES Meals(meal_id));", "output": "INSERT INTO Deliveries (delivery_id, customer_id, meal_id, date, cost) VALUES (NULL, (SELECT customer_id FROM Customers WHERE location = 'Seattle'), 123456789, '2022-06-01', 15.99);"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uc5ec\uc131\uc5d0\uac8c \ubd80\uc5ec\ub41c \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE loans (id INT, region VARCHAR(20), gender VARCHAR(10), amount DECIMAL(10, 2)); INSERT INTO loans (id, region, gender, amount) VALUES (1, 'Middle East', 'Male', 500.00), (2, 'Africa', 'Female', 750.00), (3, 'Asia', 'Female', 300.00);", "output": "SELECT region, gender, amount, COUNT(*) OVER (PARTITION BY region) as total_loans, COUNT(*) FILTER (WHERE gender = 'Female') OVER (PARTITION BY region) as female_loans, 100.0 * COUNT(*) FILTER (WHERE gender = 'Female') OVER (PARTITION BY region) / COUNT(*) OVER (PARTITION BY region) as percentage FROM loans;"}
{"input": " \uac01 \uc81c\uc870 \ud604\uc7a5\uc5d0\uc11c \uc0ac\uc6a9\ub41c \uc790\uc7ac\uc758 \ucd1d\ub7c9\uc744 \uc6d4\ubcc4\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE materials (material_id INT, site_id INT, quantity INT, material_date DATE);", "output": "SELECT site_id, material_date, SUM(quantity) OVER (PARTITION BY site_id ORDER BY material_date) as total_quantity FROM materials;"}
{"input": " \ub300\uc11c\uc591\uc5d0 \uc788\ub294 \uc5b4\uc885 B\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE species (species_id INT, species_name TEXT); INSERT INTO species (species_id, species_name) VALUES (1, 'Fish species A'), (2, 'Fish species B'); CREATE TABLE biomass (biomass_id INT, species_id INT, region_id INT, biomass FLOAT); INSERT INTO biomass (biomass_id, species_id, region_id, biomass) VALUES (1, 1, 1, 150.3), (2, 1, 2, 160.5), (3, 2, 1, 140.2), (4, 2, 2, 130.1), (5, 2, 3, 120.9); CREATE TABLE region (region_id INT, region_name TEXT); INSERT INTO region (region_id, region_name) VALUES (1, 'North Atlantic'), (2, 'South Atlantic'), (3, 'Indian Ocean');", "output": "SELECT SUM(biomass) FROM biomass WHERE species_id = (SELECT species_id FROM species WHERE species_name = 'Fish species B') AND region_id IN (SELECT region_id FROM region WHERE region_name LIKE '%Atlantic%');"}
{"input": " \uacfc\ubaa9\ubcc4\ub85c \ud559\uc0dd\ubcc4 \ucd5c\uc18c \ud3c9\uc0dd\ud559\uc2b5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_lifelong_learning (student_id INT, subject VARCHAR(255), lifelong_learning_score INT);", "output": "SELECT s.student_id, s.subject, MIN(s.lifelong_learning_score) as min_score FROM student_lifelong_learning s GROUP BY s.student_id, s.subject;"}
{"input": " 2020\ub144 \uc804 \uc138\uacc4 \ub300\ub959\ubcc4 \uc628\uc2e4\uac00\uc2a4 \ubc30\ucd9c\ub7c9 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ghg_emissions (continent VARCHAR(255), year INT, total_emissions INT); INSERT INTO ghg_emissions (continent, year, total_emissions) VALUES ('Africa', 2020, 1500), ('Asia', 2020, 20000), ('Europe', 2020, 8000), ('North America', 2020, 14000), ('South America', 2020, 3000), ('Oceania', 2020, 1500);", "output": "SELECT continent, (total_emissions::DECIMAL(10,2)/SUM(total_emissions) OVER ())*100 AS emission_percentage FROM ghg_emissions WHERE year = 2020;"}
{"input": " \ub3d9\ubd81\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc758 \ud3c9\uade0 \uacc4\uc88c \uc794\uc561\uacfc \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer_data (id INT, customer_id INT, account_balance DECIMAL(10, 2), transaction_volume INT, region VARCHAR(255)); INSERT INTO customer_data (id, customer_id, account_balance, transaction_volume, region) VALUES (1, 1, 10000, 50, 'Northeast'), (2, 2, 15000, 100, 'Southeast'), (3, 3, 8000, 75, 'Northeast'), (4, 4, 12000, 25, 'Midwest'), (5, 5, 9000, 100, 'Northeast');", "output": "SELECT AVG(cd.account_balance) AS avg_account_balance, AVG(cd.transaction_volume) AS avg_transaction_volume FROM customer_data cd WHERE cd.region = 'Northeast';"}
{"input": " 2018\ub144\uacfc 2019\ub144\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud0d0\uc0ac \ubc0f \ud3c9\uac00 \uc720\uc815\uc744 \uc2dc\ucd94\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE wells (id INT, year INT, well_type VARCHAR(255), status VARCHAR(255)); INSERT INTO wells (id, year, well_type, status) VALUES (1, 2018, 'Exploration', 'Drilled'), (2, 2018, 'Appraisal', 'Drilled'), (3, 2019, 'Exploration', 'Drilled'), (4, 2019, 'Appraisal', 'Drilled'), (5, 2017, 'Production', 'Drilled');", "output": "SELECT SUM(CASE WHEN year IN (2018, 2019) AND status = 'Drilled' AND (well_type = 'Exploration' OR well_type = 'Appraisal') THEN 1 ELSE 0 END) as e_and_a_wells FROM wells;"}
{"input": "\ucd5c\uc2e0 \ud328\uce58 \uc774\ud6c4 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uba87 \uba85\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \uac8c\uc784\uc5d0 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE Patches (id INT, game_id INT, release_date DATE); INSERT INTO Patches (id, game_id, release_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-02-15'), (3, 1, '2022-04-01'); CREATE TABLE Regions (id INT, name VARCHAR(50)); INSERT INTO Regions (id, name) VALUES (1, 'North America'), (2, 'Europe'), (3, 'Asia'), (4, 'South America'); CREATE TABLE Players (id INT, game_id INT, region_id INT, join_date DATE); INSERT INTO Players (id, game_id, region_id, join_date) VALUES (1, 1, 1, '2022-01-05'), (2, 1, 2, '2022-02-18'), (3, 1, 3, '2022-03-20'), (4, 1, 4, '2022-04-10'), (5, 1, 1, '2022-04-15');", "output": "SELECT R.name AS region, COUNT(P.id) AS new_players FROM Players P JOIN Regions R ON P.region_id = R.id JOIN Patches Q ON P.game_id = Q.game_id WHERE P.join_date >= Q.release_date AND Q.id = (SELECT MAX(id) FROM Patches WHERE game_id = P.game_id) GROUP BY R.name;"}
{"input": " '\ubbf8\uad6d'\uacfc '\uc138\uacc4' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c 'Associated Press'\uc640 'Reuters'\uac00 \ubc1c\ud589\ud55c \ucd1d \uae30\uc0ac \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE associated_press (article_id INT, title TEXT, category TEXT, publisher TEXT); INSERT INTO associated_press (article_id, title, category, publisher) VALUES (1, 'Article 1', 'US', 'Associated Press'), (2, 'Article 2', 'World', 'Associated Press'); CREATE TABLE reuters (article_id INT, title TEXT, category TEXT, publisher TEXT); INSERT INTO reuters (article_id, title, category, publisher) VALUES (3, 'Article 3', 'Business', 'Reuters'), (4, 'Article 4', 'World', 'Reuters');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM associated_press WHERE category IN ('US', 'World')) UNION (SELECT * FROM reuters WHERE category IN ('World')) );"}
{"input": " '\uc639\ud638' \uc2a4\ud0a4\ub9c8\uc758 \ubd80\ubb38\ubcc4 \ucea0\ud398\uc778 \uc218\uc640 \ud574\ub2f9 \uc0c1\ud0dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE campaigns (campaign_id INT, campaign_name VARCHAR(255), status VARCHAR(255), sector VARCHAR(255)); INSERT INTO campaigns (campaign_id, campaign_name, status, sector) VALUES (1, 'Campaign A', 'Active', 'Education');", "output": "SELECT sector, status, COUNT(campaign_id) as total_campaigns FROM campaigns GROUP BY sector, status;"}
{"input": " \uc77c\ub9ac\ub178\uc774 \uc8fc\uc5d0\uc11c \uacf5\uac1c\ub41c \uc2dc\ubbfc \uae30\uc220 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE city (id INT PRIMARY KEY, name TEXT, state TEXT); CREATE TABLE project (id INT PRIMARY KEY, name TEXT, status TEXT, city_id INT, FOREIGN KEY (city_id) REFERENCES city(id));", "output": "SELECT COUNT(*) FROM project WHERE city_id IN (SELECT id FROM city WHERE state = 'IL') AND status = 'Open';"}
{"input": " \ud604\uc7ac \uc2dc\uc98c\uc5d0 \ucd95\uad6c\ud300\uc758 \ucd1d \uc5b4\uc2dc\uc2a4\ud2b8\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE assists (team VARCHAR(50), season INT, assists INT); INSERT INTO assists (team, season, assists) VALUES ('Barcelona', 2021, 50), ('Barcelona', 2022, 60), ('Real Madrid', 2021, 45), ('Real Madrid', 2022, 55);", "output": "SELECT team, SUM(assists) AS total_assists  FROM assists  WHERE season = YEAR(GETDATE())  GROUP BY team"}
{"input": " '2021'\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc5ed\uc0ac\ud68c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc774 \uc9c4\ud589\ub410\ub098\uc694?", "context": "CREATE TABLE education_programs (program_id INT, program_name VARCHAR(50), program_year INT); INSERT INTO education_programs (program_id, program_name, program_year) VALUES (1, 'Program A', 2021), (2, 'Program B', 2022);", "output": "SELECT COUNT(*) FROM education_programs WHERE program_year = 2021;"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74 \uad11\uc0b0 \ud604\uc7a5\uc758 \uc6d4\ubcc4, \uc5f0\uac04 \ucd94\ucd9c\ub41c \uc790\uc6d0\uc758 \ucd1d\ub7c9\uacfc \uc790\uc6d0 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Resources (ResourceID INT, ResourceType VARCHAR(10), ExtractionDate DATE, Quantity INT, SiteID INT, Country VARCHAR(20));", "output": "SELECT EXTRACT(MONTH FROM ExtractionDate) AS Month, EXTRACT(YEAR FROM ExtractionDate) AS Year, ResourceType, SUM(Quantity) FROM Resources WHERE Country = 'South Africa' GROUP BY EXTRACT(MONTH FROM ExtractionDate), EXTRACT(YEAR FROM ExtractionDate), ResourceType;"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \uc9c4\ud589\ub41c \uae30\ud6c4\ubcc0\ud654 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \ucea0\ud398\uc778\uc758 \uc218\ub97c \uc5f0\ub3c4\ubcc4\ub85c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE climate_change_communication (country VARCHAR(50), year INT, campaigns INT); INSERT INTO climate_change_communication (country, year, campaigns) VALUES ('Brazil', 2016, 50), ('Brazil', 2017, 60), ('Brazil', 2018, 70), ('Brazil', 2019, 80), ('Brazil', 2020, 90), ('Argentina', 2016, 40), ('Argentina', 2017, 45), ('Argentina', 2018, 50), ('Argentina', 2019, 55), ('Argentina', 2020, 60);", "output": "SELECT year, SUM(campaigns) FROM climate_change_communication WHERE country IN ('Brazil', 'Argentina') GROUP BY year;"}
{"input": " 2021\ub144\uc5d0 \ubbf8\uad6d \uc774\uc678\uc758 \uc9c0\uc5ed\uc5d0\uc11c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (volunteer_id INT, volunteer_name VARCHAR(50), program_id INT, volunteer_hours INT, volunteer_date DATE, volunteer_country VARCHAR(50)); INSERT INTO Volunteers (volunteer_id, volunteer_name, program_id, volunteer_hours, volunteer_date, volunteer_country) VALUES (1, 'Sophia', 1, 5, '2021-06-05', 'Mexico'), (2, 'James', 2, 8, '2021-04-12', 'US'), (3, 'Leila', 1, 3, '2021-06-05', 'Brazil'), (4, 'Alex', 3, 6, '2021-12-25', 'Canada');", "output": "SELECT program_id, SUM(volunteer_hours) as total_2021_volunteer_hours FROM Volunteers WHERE volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' AND volunteer_country != 'US' GROUP BY program_id ORDER BY total_2021_volunteer_hours DESC LIMIT 1;"}
{"input": " \ub808\ud06c\ub9ac\uc5d0\uc774\uc158 \uc13c\ud130\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Feedback (Service VARCHAR(25), Score INT); INSERT INTO Feedback (Service, Score) VALUES ('Library', 8), ('Park', 7), ('Recreation Center', 9);", "output": "SELECT MAX(Score) FROM Feedback WHERE Service = 'Recreation Center';"}
{"input": " \ubc29\uae00\ub77c\ub370\uc2dc\uc758 \uc720\uae30\ub18d \ubaa9\ud654 \uc7ac\ubc30 \ub2f9 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE organic_cotton_farming (id INT, water_usage DECIMAL, country VARCHAR(20)); INSERT INTO organic_cotton_farming (id, water_usage, country) VALUES (1, 1500.00, 'India'), (2, 1750.00, 'Bangladesh'), (3, 1800.00, 'India');", "output": "SELECT AVG(water_usage) FROM organic_cotton_farming WHERE country = 'Bangladesh';"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \ub3c4\uc2dc\uc758 \ubb3c \uc218\uc694\uc640 \uac00\uaca9\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists water_demand (id INT PRIMARY KEY, city VARCHAR(50), water_demand FLOAT, usage_date DATE); CREATE TABLE if not exists water_price (id INT PRIMARY KEY, city VARCHAR(50), price FLOAT, usage_date DATE); CREATE VIEW if not exists water_demand_price AS SELECT wd.city, wd.water_demand, wp.price FROM water_demand wd JOIN water_price wp ON wd.city = wp.city AND wd.usage_date = wp.usage_date;", "output": "SELECT city, usage_date, LAG(water_demand) OVER (PARTITION BY city ORDER BY usage_date) as prev_water_demand, water_demand, LAG(price) OVER (PARTITION BY city ORDER BY usage_date) as prev_price, price FROM water_demand_price ORDER BY city, usage_date;"}
{"input": " \uc628\ud0c0\ub9ac\uc624 \uc8fc\uc5d0\uc11c \uc0b0\uc5c5\uc801\uc73c\ub85c \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ubb3c\uc5d0 \ub300\ud55c \uc138 \ubc88\uc9f8\ub85c \ub192\uc740 \ud5c8\uac00 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE permit_costs (cost_id INT, province VARCHAR(50), building_type VARCHAR(50), permit_cost FLOAT, material_type VARCHAR(50)); INSERT INTO permit_costs (cost_id, province, building_type, permit_cost, material_type) VALUES (5, 'Ontario', 'Industrial', 500000.00, 'Sustainable'); INSERT INTO permit_costs (cost_id, province, building_type, permit_cost, material_type) VALUES (6, 'Ontario', 'Industrial', 600000.00, 'Sustainable');", "output": "SELECT permit_cost FROM (SELECT permit_cost, ROW_NUMBER() OVER (ORDER BY permit_cost DESC) rn FROM permit_costs WHERE province = 'Ontario' AND building_type = 'Industrial' AND material_type = 'Sustainable') t WHERE rn = 3;"}
{"input": " \uc704\uce58\ubcc4 \ub18d\ubbfc \uc218", "context": "CREATE TABLE farmers (id INT PRIMARY KEY, name VARCHAR(100), age INT, gender VARCHAR(10), location VARCHAR(50)); INSERT INTO farmers (id, name, age, gender, location) VALUES (1, 'Jane Doe', 35, 'Female', 'Rural Texas'), (2, 'Pedro Alvarez', 42, 'Male', 'Rural Mexico'), (3, 'Ali Omar', 30, 'Male', 'Rural Egypt');", "output": "SELECT location, COUNT(*) FROM farmers GROUP BY location;"}
{"input": " \ubcf4\uc7a5\uae08\uc561\uc774 60000 \ubbf8\ub9cc\uc778 \uacbd\uc6b0 \ucd5c\uc800 \ubcf4\ud5d8\ub8cc\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policy_info (policy_id INT, premium FLOAT, sum_insured INT); INSERT INTO policy_info (policy_id, premium, sum_insured) VALUES (1, 1200.50, 60000), (2, 2500.00, 70000), (3, 1800.00, 90000);", "output": "SELECT MIN(premium) FROM policy_info WHERE sum_insured < 60000;"}
{"input": " \uc704\uce58 \ubc0f \uc5f0\ub3c4\ubcc4 \ud574\uc591 \uac74\uac15 \uc9c0\ud45c\ub97c \ud45c\uc2dc\ud558\ub294 \ubdf0 \ub9cc\ub4e4\uae30", "context": "CREATE TABLE ocean_health_indicators (indicator_id INT PRIMARY KEY, indicator_name VARCHAR(255)); CREATE TABLE farm_locations (location_id INT PRIMARY KEY, location_name VARCHAR(255), country VARCHAR(255), ocean VARCHAR(255)); CREATE TABLE ocean_health_metrics (metric_id INT PRIMARY KEY, location_id INT, indicator_id INT, year INT, value FLOAT, FOREIGN KEY (location_id) REFERENCES farm_locations(location_id), FOREIGN KEY (indicator_id) REFERENCES ocean_health_indicators(indicator_id));", "output": "CREATE VIEW ocean_health_metrics_by_location_year AS SELECT ohm.location_id, ohm.year, ohi.indicator_name, ohm.value FROM ocean_health_metrics ohm JOIN ocean_health_indicators ohi ON ohm.indicator_id = ohi.indicator_id JOIN farm_locations fl ON ohm.location_id = fl.location_id;"}
{"input": " \ube0c\ub77c\uc9c8\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \uac00\uc7a5 \ube44\uc2fc \uc7ac\ub8cc \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE ingredients (ingredient_id INT, ingredient_name TEXT, sourcing_country TEXT, cost DECIMAL(5,2)); INSERT INTO ingredients (ingredient_id, ingredient_name, sourcing_country, cost) VALUES (1, 'Mica', 'Brazil', 56.78), (2, 'Jojoba Oil', 'Argentina', 23.99), (3, 'Rosehip Oil', 'Chile', 34.56);", "output": "SELECT * FROM (SELECT ingredient_name, cost, ROW_NUMBER() OVER (ORDER BY cost DESC) AS rn FROM ingredients WHERE sourcing_country = 'Brazil') sub WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uac01 \ud559\uacfc\ubcc4\ub85c \uc5f0\uad6c\ube44\ub97c \uc9c0\uae09\ud55c \ud69f\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc9c0\uae09\ub41c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE research_grants (id INT, department TEXT, amount INT, year INT); INSERT INTO research_grants (id, department, amount, year) VALUES (8, 'Computer Science', 6000, 2021); INSERT INTO research_grants (id, department, amount, year) VALUES (9, 'Mathematics', 4000, 2020);", "output": "SELECT department, COUNT(*) as num_grants, SUM(amount) as total_amount FROM research_grants WHERE year BETWEEN 2020 AND 2021 GROUP BY department;"}
{"input": " \uac01 \ud56d\uad6c\ubcc4 \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port_vessels (id INT, port VARCHAR(50), vessel_id INT, name VARCHAR(50), speed DECIMAL(5,2)); INSERT INTO port_vessels VALUES (1, 'PortA', 1, 'Vessel1', 25.6), (2, 'PortA', 2, 'Vessel2', 27.3), (3, 'PortB', 3, 'Vessel3', 24.5);", "output": "SELECT port, AVG(speed) FROM port_vessels GROUP BY port;"}
{"input": " \uba55\uc2dc\ucf54\uc5d0\uc11c \uc0dd\uc0b0\ub41c \ud654\uc7a5\ud488 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc720\uae30\ub18d \uc778\uc99d\uc744 \ubc1b\uc558\ub098\uc694?", "context": "CREATE TABLE ingredients (product_id INT, ingredient TEXT); INSERT INTO ingredients (product_id, ingredient) VALUES (1, 'paraben'), (2, 'alcohol'), (3, 'water'), (4, 'paraben'), (5, 'lavender'), (6, 'paraben'), (7, 'jojoba'), (8, 'chamomile'), (9, 'beeswax'), (10, 'carmine'), (11, 'coconut'), (12, 'shea butter'); CREATE TABLE products (product_id INT, product_name TEXT, country TEXT, certified TEXT); INSERT INTO products (product_id, product_name, country, certified) VALUES (1, 'Lipstick A', 'USA', 'organic'), (2, 'Eye Shadow B', 'Canada', 'vegan'), (3, 'Mascara C', 'France', 'organic'), (4, 'Foundation D', 'USA', 'cruelty-free'), (5, 'Blush E', 'Mexico', 'organic'), (6, 'Moisturizer F', 'France', 'paraben-free'), (7, 'Cleanser G', 'Mexico', 'organic'), (8, 'Toner H', 'Japan', 'paraben-free'), (9, 'Lip Balm I', 'USA', 'cruelty-free'), (10, 'Nail Polish J', 'Italy', 'paraben-free'), (11, 'Lotion K', 'Mexico', 'organic'), (12, 'Serum L', 'Germany', 'cruelty-free');", "output": "SELECT 100.0 * COUNT(p.product_id) / (SELECT COUNT(*) FROM products WHERE country = 'Mexico') AS organic_percentage FROM products p WHERE p.certified = 'organic' AND p.country = 'Mexico';"}
{"input": "\uc11c\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \ud3c9\uade0 \ud328\ud0a4\uc9c0 \uc911\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ucc3d\uace0\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE warehouses (id INT, name TEXT, region TEXT); INSERT INTO warehouses (id, name, region) VALUES (1, 'Seattle Warehouse', 'west'), (2, 'Los Angeles Warehouse', 'west'); CREATE TABLE packages (id INT, warehouse_id INT, weight FLOAT, state TEXT); INSERT INTO packages (id, warehouse_id, weight, state) VALUES (1, 1, 35.5, 'Washington'), (2, 1, 40.3, 'Oregon'), (3, 2, 32.8, 'California');", "output": "SELECT w.name FROM warehouses w JOIN (SELECT warehouse_id, AVG(weight) as avg_weight FROM packages GROUP BY warehouse_id) p ON w.id = p.warehouse_id WHERE w.region = 'west' AND p.avg_weight = (SELECT MAX(avg_weight) FROM (SELECT warehouse_id, AVG(weight) as avg_weight FROM packages GROUP BY warehouse_id) sub);"}
{"input": "3\ub144 \uc5f0\uc18d\uc73c\ub85c \uc790\uc6d0 \uaddc\ubaa8\uac00 \uac10\uc18c\ud558\ub294 \uc5b4\uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_stock (year INT, species VARCHAR(255), stock_size INT); INSERT INTO fish_stock (year, species, stock_size) VALUES (2019, 'Salmon', 6000), (2020, 'Salmon', 5500), (2021, 'Salmon', 5000), (2019, 'Tuna', 4000), (2020, 'Tuna', 4000), (2021, 'Tuna', 4000);", "output": "SELECT species FROM (SELECT species, stock_size, LAG(stock_size, 2) OVER (PARTITION BY species ORDER BY year) AS lag_2, LAG(stock_size, 1) OVER (PARTITION BY species ORDER BY year) AS lag_1 FROM fish_stock) AS subquery WHERE subquery.stock_size < subquery.lag_1 AND subquery.lag_1 < subquery.lag_2;"}
{"input": " \"\ub808\uc774\uc2f1\" \uce74\ud14c\uace0\ub9ac\uc5d0 \uc788\ub294 \uac01 \uac8c\uc784\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameRevenue (GameID int, GameName varchar(50), Category varchar(50), Revenue decimal(10,2));", "output": "SELECT Category, SUM(Revenue) OVER(PARTITION BY Category) as TotalRevenue FROM GameRevenue;"}
{"input": " \ubcd1\uc6d0\uc758 \ud3c9\uade0 \ubcd1\uc0c1 \uc218\uc640 \uc8fc\ubcc4 \ucd1d \ubcd1\uc0c1 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, city TEXT, state TEXT, beds INT); INSERT INTO hospitals (id, name, city, state, beds) VALUES (1, 'General Hospital', 'Miami', 'Florida', 500); INSERT INTO hospitals (id, name, city, state, beds) VALUES (2, 'Memorial Hospital', 'Boston', 'Massachusetts', 600);", "output": "SELECT state, AVG(beds) as avg_beds, SUM(beds) as total_beds FROM hospitals GROUP BY state;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ub274\uc695\uc758 \uad11\uc5c5\uc5d0 \uc885\uc0ac\ud558\ub294 \uc720\uc0c9\uc778\uc885 \uc9c1\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MiningEmployees (State VARCHAR(50), EmployeeRace VARCHAR(50), EmployeeCount INT); INSERT INTO MiningEmployees(State, EmployeeRace, EmployeeCount) VALUES ('California', 'Hispanic', 500), ('California', 'Black', 300), ('California', 'Asian', 700), ('New York', 'Hispanic', 350), ('New York', 'Black', 400), ('New York', 'Asian', 600);", "output": "SELECT State, SUM(EmployeeCount) FROM MiningEmployees WHERE EmployeeRace IN ('Hispanic', 'Black', 'Asian') AND State IN ('California', 'New York') GROUP BY State;"}
{"input": " \uacf5\uc815 \ubb34\uc5ed \ucd08\ucf5c\ub9bf \ub18d\uc7a5\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE chocolate_farms (id INT, farm_name TEXT, country TEXT, fair_trade BOOLEAN); INSERT INTO chocolate_farms (id, farm_name, country, fair_trade) VALUES (1, 'Cocoa Paradise', 'Ecuador', true), (2, 'Choco Haven', 'Ghana', true), (3, 'Sweet Earth', 'Peru', false);", "output": "SELECT country, COUNT(*) FROM chocolate_farms WHERE fair_trade = true GROUP BY country ORDER BY COUNT(*) DESC LIMIT 3;"}
{"input": " \uce90\ub098\ub2e4 \ub300\ud559\uc758 \uc7a5\uc560 \ud559\uc0dd \uc218\uac00 20% \uc774\uc0c1\uc778 \ud559\uacfc\uc758 \uc7a5\uc560 \ud3b8\uc758 \uc2dc\uc124\uc744 \uc704\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Departments (DepartmentID INT PRIMARY KEY, DepartmentName VARCHAR(50), BudgetForDisabilityAccommodations DECIMAL(10,2), NumberOfStudentsWithDisabilities INT); CREATE TABLE Universities (UniversityID INT PRIMARY KEY, UniversityName VARCHAR(50), UniversityLocation VARCHAR(50)); CREATE TABLE UniversityDepartments (UniversityDepartmentID INT PRIMARY KEY, UniversityID INT, DepartmentID INT, FOREIGN KEY (UniversityID) REFERENCES Universities(UniversityID), FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID));", "output": "SELECT SUM(BudgetForDisabilityAccommodations) as TotalBudget FROM UniversityDepartments ud JOIN Departments d ON ud.DepartmentID = d.DepartmentID JOIN Universities u ON ud.UniversityID = u.UniversityID WHERE u.UniversityLocation LIKE '%Canada%' GROUP BY ud.UniversityID HAVING AVG(d.NumberOfStudentsWithDisabilities) > 0.2*AVG(d.TotalStudents);"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uc774\ub984 \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE programs (program_id INT PRIMARY KEY, program_name TEXT); INSERT INTO programs (program_id, program_name) VALUES (1, 'Feeding the Hungry'), (2, 'Tutoring Kids');", "output": "WITH new_name AS (UPDATE programs SET program_name = 'Tutoring for Success' WHERE program_name = 'Tutoring Kids' RETURNING program_id) SELECT * FROM new_name;"}
{"input": " \uc9c0\ub09c \ub2ec \ubc29\ubb38\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \ub3c4\uc11c\uad00\uacfc \uac00\uc7a5 \uc801\uc740 \ub3c4\uc11c\uad00\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (Library text, Visitors int, VisitDate date); INSERT INTO Visitors (Library, Visitors, VisitDate) VALUES ('LibraryA', 100, '2022-04-01'), ('LibraryB', 150, '2022-04-02');", "output": "SELECT Library, Visitors FROM (SELECT Library, Visitors, ROW_NUMBER() OVER (ORDER BY Visitors) as Rank FROM Visitors WHERE VisitDate >= DATEADD(month, -1, CURRENT_DATE)) as Subquery WHERE Rank IN (1, (SELECT COUNT(*) FROM Visitors WHERE VisitDate >= DATEADD(month, -1, CURRENT_DATE)) * 0.01);"}
{"input": " \ud48d\ub825 \ubc0f \uc218\ub825 \ubc1c\uc804 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\uc640 \ud3c9\uade0 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE projects (id INT, name VARCHAR(255), type VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO projects (id, name, type, start_date, end_date) VALUES (1, 'Wind Farm', 'Renewable Energy', '2019-01-01', '2020-12-31'), (2, 'Hydro Plant', 'Renewable Energy', '2020-01-01', '2021-12-31');", "output": "SELECT type, COUNT(*) as total, AVG(DATEDIFF(end_date, start_date)) as avg_duration FROM projects WHERE type IN ('Wind Farm', 'Hydro Plant') GROUP BY type;"}
{"input": "\uc0ac\uc6a9\uc790 \ud3c9\uac00\uac00 4\uc810 \uc774\uc0c1\uc778 \uac8c\uc784\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameRatings (RatingID INT, GameID INT, UserRating INT); INSERT INTO GameRatings (RatingID, GameID, UserRating) VALUES (1, 1, 5); INSERT INTO GameRatings (RatingID, GameID, UserRating) VALUES (2, 2, 4);", "output": "SELECT SUM(gs.Revenue) FROM GameSales gs JOIN Games g ON gs.GameID = g.GameID JOIN GameRatings gr ON g.GameID = gr.GameID WHERE gr.UserRating >= 4;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\ub97c \uc81c\uc678\ud558\uace0 \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc8fc\uc5d0\uc11c \uace0\uc6a9\ub41c \uc7ac\ud5a5\uad70\uc778\uc758 \uc218\ub97c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE veteran_employment (employment_id INT, veteran_state VARCHAR(2), hire_date DATE); INSERT INTO veteran_employment (employment_id, veteran_state, hire_date) VALUES (1, 'CA', '2021-02-15'), (2, 'TX', '2021-08-24'), (3, 'NY', '2021-07-02'), (4, 'CA', '2021-11-10'), (5, 'NJ', '2021-05-15');", "output": "SELECT veteran_state, COUNT(*) AS hires FROM veteran_employment WHERE hire_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND veteran_state != 'CA' GROUP BY veteran_state;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc704\uc131 \ubc30\uce58\uc758 \ud3c9\uade0 \ubc1c\uc0ac \uc9c0\uc5f0\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE satellite_deployments (satellite_name VARCHAR(255), launch_date DATE, launch_time TIME, launch_delay INT); INSERT INTO satellite_deployments (satellite_name, launch_date, launch_time, launch_delay) VALUES ('Sat1', '2020-01-01', '10:00:00', 5), ('Sat2', '2019-06-15', '15:30:00', 10), ('Sat3', '2021-08-27', '09:45:00', 3), ('Sat4', '2018-03-04', '13:15:00', 7), ('Sat5', '2021-02-12', '11:00:00', 8);", "output": "SELECT AVG(launch_delay) FROM satellite_deployments WHERE launch_date >= DATEADD(year, -3, CURRENT_DATE);"}
{"input": " '\uc232 C'\uc5d0 \ube44\ud574 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\uc728\uc774 \ub354 \ub192\uc740 \uc232\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ForestCarbonSeq(forest_name TEXT, seq_rate REAL); INSERT INTO ForestCarbonSeq (forest_name, seq_rate) VALUES ('Forest A', 5.6), ('Forest B', 6.3), ('Forest C', 4.8), ('Forest D', 5.2);", "output": "SELECT forest_name FROM ForestCarbonSeq WHERE seq_rate > (SELECT seq_rate FROM ForestCarbonSeq WHERE forest_name = 'Forest C') ORDER BY seq_rate DESC;"}
{"input": " \uc758\ub8cc \uc2dc\uc2a4\ud15c\uc5d0 \ud3ec\ud568\ub41c \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT); INSERT INTO hospitals (id, name, location, num_beds) VALUES (1, 'General Hospital', 'City A', 500), (2, 'Community Clinic', 'City B', 50); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_doctors INT); INSERT INTO clinics (id, name, location, num_doctors) VALUES (1, 'Downtown Clinic', 'City A', 10), (2, 'Rural Clinic', 'City C', 8);", "output": "SELECT COUNT(*) FROM hospitals UNION SELECT COUNT(*) FROM clinics;"}
{"input": "\uc5f0\ub3c4\ubcc4 \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_assistance (id INT PRIMARY KEY, amount FLOAT, year INT, country VARCHAR(255));", "output": "SELECT year, SUM(amount) as total_assistance FROM humanitarian_assistance GROUP BY year;"}
{"input": " \uce90\ub098\ub2e4 \uc18c\uc7ac \uae30\uc5c5\uc774 \ubc1c\ud589\ud55c \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \ucd1d \uc218\ub7c9\uc744 \ubc1c\ud589\uc77c \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_assets (id INT, name VARCHAR(100), issuer_country VARCHAR(50), issue_date DATE); INSERT INTO digital_assets (id, name, issuer_country, issue_date) VALUES (1, 'CryptoCoin', 'Canada', '2018-01-01'); INSERT INTO digital_assets (id, name, issuer_country, issue_date) VALUES (2, 'BitAsset', 'USA', '2019-03-15');", "output": "SELECT SUM(id) OVER (ORDER BY issue_date) as total_assets_issued, name, issuer_country, issue_date FROM digital_assets WHERE issuer_country = 'Canada' ORDER BY issue_date;"}
{"input": " \uc720\ub7fd \uc5f0\ud569 \uad6d\uac00\uc758 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc9c0\uc218 \uac12 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE digital_divide (id INT, country VARCHAR, region VARCHAR, index_value DECIMAL);", "output": "SELECT region, MIN(index_value) as min_index, MAX(index_value) as max_index, AVG(index_value) as avg_index FROM digital_divide WHERE region = 'European Union' GROUP BY region;"}
{"input": " \uc774\ub984\uc5d0 'Kush'\uac00 \ud3ec\ud568\ub41c \uacc4\ud1b5\uc744 \ud310\ub9e4\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uc57d\uad6d\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE dispensaries (id INT, name TEXT, state TEXT); CREATE TABLE strains (id INT, name TEXT, dispensary_id INT); INSERT INTO dispensaries (id, name, state) VALUES (1, 'The Healing Center', 'Massachusetts'), (2, 'Remedy', 'Texas'); INSERT INTO strains (id, name, dispensary_id) VALUES (1, 'Jack Herer', 1), (2, 'Purple Kush', 1), (3, 'Green Crack', 2);", "output": "SELECT d.name FROM dispensaries d WHERE d.id NOT IN (SELECT s.dispensary_id FROM strains s WHERE s.name LIKE '%Kush%');"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \ud574\uc678 \uad00\uad11\uac1d\uc774 \uc99d\uac00\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visitor_stats (country VARCHAR(50), visitors INT, year INT); INSERT INTO visitor_stats (country, visitors, year) VALUES ('Japan', 50, 2019), ('France', 55, 2019), ('Japan', 53, 2020), ('France', 57, 2020);", "output": "SELECT year, country, SUM(visitors) - LAG(SUM(visitors)) OVER (PARTITION BY country ORDER BY year) as visitors_diff FROM visitor_stats GROUP BY year, country HAVING visitors_diff > 0;"}
{"input": " \uc2dc\ub4dc\ub2c8\uc640 \uba5c\ubc84\ub978\uc758 \uc804\uc2dc\ud68c\uc5d0 \ucc38\uc11d\ud55c \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10), City VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (1, 30, 'Male', 'Sydney'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (2, 35, 'Female', 'Melbourne'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (3, 40, 'Male', 'Melbourne'); CREATE TABLE Exhibitions (ExhibitionID INT, Title VARCHAR(50), City VARCHAR(50)); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (1, 'Art of the 21st Century', 'Sydney'); INSERT INTO Exhibitions (ExhibitionID, Title, City) VALUES (2, 'Digital Art Experience', 'Melbourne'); CREATE TABLE Attendance (VisitorID INT, ExhibitionID INT); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (1, 1); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (2, 2); INSERT INTO Attendance (VisitorID, ExhibitionID) VALUES (3, 2);", "output": "SELECT AVG(Visitors.Age) FROM Visitors INNER JOIN Attendance ON Visitors.VisitorID = Attendance.VisitorID INNER JOIN Exhibitions ON Attendance.ExhibitionID = Exhibitions.ExhibitionID WHERE Visitors.City IN ('Sydney', 'Melbourne');"}
{"input": "\uba55\uc2dc\ucf54 \ub9cc\uc758 \uc6b0\ubb3c \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(50), location VARCHAR(50), production FLOAT); INSERT INTO wells (well_id, well_name, location, production) VALUES (9, 'Well I', 'Gulf of Mexico', 450.6), (10, 'Well J', 'Sahara', 501.7), (11, 'Well K', 'North Sea', 420.4);", "output": "SELECT location, production FROM wells WHERE location = 'Gulf of Mexico';"}
{"input": "\uac01 \ubd80\uc11c\uc5d0\uc11c LGBTQ+\ub85c \ud655\uc778\ub418\ub294 \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeDemographics (EmployeeID INT, Department VARCHAR(20), GenderIdentity VARCHAR(50)); INSERT INTO EmployeeDemographics (EmployeeID, Department, GenderIdentity) VALUES (1, 'IT', 'Cisgender Male'), (2, 'IT', 'Transgender Female'), (3, 'HR', 'Non-binary'), (4, 'HR', 'Cisgender Female');", "output": "SELECT Department, PERCENT_RANK() OVER (ORDER BY COUNT(*) FILTER (WHERE GenderIdentity LIKE '%Transgender%' OR GenderIdentity LIKE '%Non-binary%')) AS Percent_LGBTQ FROM EmployeeDemographics GROUP BY Department;"}
{"input": " \ub85d\uacfc \ud31d \uc7a5\ub974 \ubaa8\ub450\uc5d0\uc11c \ub178\ub798\ub97c \ubc1c\ud45c\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE song_releases (song_id INT, artist_name VARCHAR(50), genre VARCHAR(20));", "output": "SELECT artist_name FROM song_releases WHERE genre IN ('rock', 'pop') GROUP BY artist_name HAVING COUNT(DISTINCT genre) = 2;"}
{"input": " \uac01 \uc885\uc871\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \uacf5\uaca9 \uc720\ud615\uc740 \ubb34\uc5c7\uc774\uba70, \uba87 \ubc88\uc774\ub098 \ubc1c\uc0dd\ud588\ub098\uc694?", "context": "CREATE TABLE offenses (offender_id INT, offense_type VARCHAR(20), offender_race VARCHAR(20)); INSERT INTO offenses (offender_id, offense_type, offender_race) VALUES (1, 'Murder', 'Black'), (1, 'Robbery', 'Black'), (2, 'Assault', 'Hispanic');", "output": "SELECT offender_race, offense_type, COUNT(*) AS num_occurrences FROM (SELECT offender_race, offense_type, ROW_NUMBER() OVER (PARTITION BY offender_race ORDER BY COUNT(*) DESC) rn FROM offenses GROUP BY offender_race, offense_type) t WHERE rn = 1 GROUP BY offender_race, offense_type;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc \ubcf4\uace0\ub41c \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc774 \uc5c6\ub294 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); CREATE TABLE Donations (DonationID INT, DonorID INT, ProgramID INT, DonationDate DATE); CREATE TABLE VolunteerHours (ProgramID INT, VolunteerHours INT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Food Security'), (2, 'Climate Change'); INSERT INTO Donations (DonationID, DonorID, ProgramID, DonationDate) VALUES (1, 1, 1, '2023-01-15'); INSERT INTO VolunteerHours (ProgramID, VolunteerHours) VALUES (2, 50);", "output": "SELECT p.ProgramName FROM Programs p LEFT JOIN Donations d ON p.ProgramID = d.ProgramID LEFT JOIN VolunteerHours v ON p.ProgramID = v.ProgramID WHERE d.DonationDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND v.ProgramID IS NULL;"}
{"input": " \uac01 \ud50c\ub808\uc774\uc5b4\uc758 \ucd5c\ub300 \uc5f0\uc18d \uc2b9\ub9ac \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (id INT, player_id INT, won BOOLEAN);", "output": "SELECT player_id, MAX(consecutive_wins) FROM (SELECT player_id, won, SUM(won) OVER (PARTITION BY player_id ORDER BY id ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) AS consecutive_wins FROM games) AS consecutive_wins_by_player GROUP BY player_id;"}
{"input": "2019\ub144 \ubc30\ub85c\uc6b0 \ucc9c\ubb38\ub300 \ub300\uae30 \uc911 \ud3c9\uade0 CO2 \ub18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_concentrations (location TEXT, date DATE, concentration REAL); INSERT INTO co2_concentrations (location, date, concentration) VALUES ('Barrow Observatory', '2019-01-01', 410.0), ('Barrow Observatory', '2019-01-02', 412.0);", "output": "SELECT AVG(concentration) FROM co2_concentrations WHERE location = 'Barrow Observatory' AND date BETWEEN '2019-01-01' AND '2019-12-31';"}
{"input": " \uc720\ud615\ubcc4\ub85c RenewableEnergy \uc2a4\ud0a4\ub9c8\uc5d0 \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8 \ud45c\uc2dc", "context": "CREATE SCHEMA RenewableEnergy; USE RenewableEnergy; CREATE TABLE RenewableEnergyProjects (id INT, project_name VARCHAR(100), type VARCHAR(50)); INSERT INTO RenewableEnergyProjects (id, project_name, type) VALUES (1, 'Solar Power Plant', 'Solar'), (2, 'Wind Turbine Park', 'Wind'), (3, 'Geothermal Power Station', 'Geothermal');", "output": "SELECT project_name, type FROM RenewableEnergy.RenewableEnergyProjects;"}
{"input": " 2020\ub144\uc5d0 \ub7ec\uc2dc\uc544 \uc815\ubd80\uc5d0\uc11c \uacf5\uac1c \ud68c\uc758 \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \ubd80\uc11c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RussianMeetings (Department VARCHAR(50), MeetingDate DATE); INSERT INTO RussianMeetings (Department, MeetingDate) VALUES ('Defense', '2020-01-01'), ('Defense', '2020-02-03'), ('Interior', '2020-01-15');", "output": "SELECT Department, MIN(COUNT(*)) OVER (PARTITION BY Department) FROM RussianMeetings WHERE MeetingDate >= '2020-01-01' AND MeetingDate < '2021-01-01' GROUP BY Department;"}
{"input": " \uac01 \ube0c\ub79c\ub4dc\uc758 \uc81c\ud488\ub2f9 \uc9c0\uc18d\uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ud3c9\uade0 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE brands (brand_id INT, brand_name VARCHAR(255)); INSERT INTO brands VALUES (1, 'BrandA'), (2, 'BrandB'); CREATE TABLE products (product_id INT, brand_id INT, sustainable_material_qty INT);", "output": "SELECT brand_id, AVG(sustainable_material_qty) as avg_qty FROM products GROUP BY brand_id;"}
{"input": " '\uc778\uc0c1\ud30c' \uc804\uc2dc\ud68c\uc758 \uad00\ub78c\uac1d \uc218\ub97c \uad6c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Exhibitions (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO Exhibitions (id, name, type) VALUES (1, 'Impressionist', 'Art'), (2, 'Dinosaur', 'Science');", "output": "SELECT COUNT(*) FROM Visitors JOIN Tickets ON Visitors.id = Tickets.visitor_id JOIN Exhibitions ON Tickets.exhibition_id = Exhibitions.id WHERE Exhibitions.name = 'Impressionist';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc608\uc220\uac00 1\uc778\ub2f9 \ud3c9\uade0 \uc608\uc220 \uc791\ud488 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE SCHEMA art; CREATE TABLE art_pieces (artist_id INT, artist_name VARCHAR(255), country VARCHAR(50), art_count INT); INSERT INTO art.art_pieces (artist_id, artist_name, country, art_count) VALUES (1, 'Nana Asante', 'Ghana', 15), (2, 'Aisha Dia', 'Senegal', 20), (3, 'Kwame Opoku', 'Nigeria', 12);", "output": "SELECT AVG(art_count) FROM art.art_pieces WHERE country = 'Africa';"}
{"input": " \uc911\ub0a8\ubbf8 \ud638\ud154 AI \ucc57\ubd07 \uc2dc\uc7a5\uc810\uc720\uc728\uc740?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT); INSERT INTO hotels (hotel_id, hotel_name, country) VALUES (1, 'Hotel A', 'Brazil'), (2, 'Hotel B', 'Argentina'), (3, 'Hotel C', 'Mexico'), (4, 'Hotel D', 'Colombia'); CREATE TABLE ai_chatbots (hotel_id INT, chatbot_name TEXT); INSERT INTO ai_chatbots (hotel_id, chatbot_name) VALUES (1, 'Chatbot A'), (2, 'Chatbot B'), (3, 'Chatbot C'), (4, 'Chatbot D'), (5, 'Chatbot E');", "output": "SELECT country, (COUNT(DISTINCT hotels.hotel_id) / (SELECT COUNT(DISTINCT hotel_id) FROM hotels WHERE country = hotels.country) * 100) as market_share FROM hotels INNER JOIN ai_chatbots ON hotels.hotel_id = ai_chatbots.hotel_id GROUP BY country;"}
{"input": " \uc804\uad6d \ud3c9\uade0\uacfc \ube44\uad50\ud558\uc5ec 2020\ub144 \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \uc7ac\ud65c\uc6a9\ub41c \ud3d0\uae30\ubb3c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE waste_generation (state VARCHAR(20), year INT, quantity INT); CREATE TABLE recycling_rates (state VARCHAR(20), year INT, recycling_rate DECIMAL(5,2)); INSERT INTO waste_generation VALUES ('Texas', 2020, 10000000); INSERT INTO recycling_rates VALUES ('Texas', 2020, 0.35);", "output": "SELECT (recycling_rate / (SELECT AVG(recycling_rate) FROM recycling_rates WHERE year = 2020) * 100) AS recycling_percentage FROM recycling_rates WHERE state = 'Texas' AND year = 2020;"}
{"input": " \uc720\ud615\ubcc4\ub85c \uc218\uc5ec\ub41c \ucd1d \ubcf4\uc870\uae08 \ud45c\uc2dc", "context": "CREATE TABLE grants (id INT PRIMARY KEY, type VARCHAR(255), amount DECIMAL(10,2));", "output": "SELECT type, SUM(amount) FROM grants GROUP BY type;"}
{"input": " \uc810\uc218\uac00 80\uc810 \ubbf8\ub9cc\uc778 \uc7ac\ub8cc\uc758 \uacbd\uc6b0 \ud22c\uba85\ub3c4 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \uc7ac\ub8cc\uc758 \uc21c\uc704\ub97c \ub9e4\uae30\uace0 \ud22c\uba85\ub3c4 \uc810\uc218\ub85c \uad6c\ubd84\ud558\uace0 \ud22c\uba85\ub3c4 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE IngredientTransparency (ProductID INT, Ingredient VARCHAR(100), TransparencyScore INT); INSERT INTO IngredientTransparency (ProductID, Ingredient, TransparencyScore) VALUES (1, 'Water', 100); INSERT INTO IngredientTransparency (ProductID, Ingredient, TransparencyScore) VALUES (2, 'Glycerin', 80);", "output": "SELECT ProductID, Ingredient, TransparencyScore, RANK() OVER (PARTITION BY TransparencyScore ORDER BY TransparencyScore DESC) as 'Rank' FROM IngredientTransparency WHERE TransparencyScore < 80;"}
{"input": " \uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 \uc788\ub294 \uc758\ub8cc \uc5c5\uacc4\uc5d0\uc11c \ud1f4\ucd9c\ub41c \uae30\uc5c5\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE exit (id INT, company_id INT, type TEXT, value FLOAT); INSERT INTO exit (id, company_id, type, value) VALUES (1, 1, 'Acquisition', 200000000.0); CREATE TABLE company (id INT, name TEXT, industry TEXT, founder TEXT, PRIMARY KEY (id)); INSERT INTO company (id, name, industry, founder) VALUES (1, 'HeartCo', 'Healthcare', 'Female'); CREATE TABLE investment (id INT, company_id INT, investor TEXT, year INT, amount FLOAT); INSERT INTO investment (id, company_id, investor, year, amount) VALUES (1, 1, 'Kleiner Perkins', 2017, 30000000.0);", "output": "SELECT SUM(i.amount) FROM investment i JOIN company c ON i.company_id = c.id JOIN exit e ON c.id = e.company_id WHERE c.founder = 'Female' AND c.industry = 'Healthcare';"}
{"input": "\uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc724\ub9ac\uc81c\ud488\uc758 \ud310\ub9e4 \ucd94\uc774\ub97c \uc6d4\ubcc4\ub85c \ub098\ub204\uc5b4 \ubcf4\uba74 \uc5b4\ub5a4\uac00\uc694?", "context": "CREATE TABLE ethical_sales (sale_id int, sale_date date, product_id int, revenue decimal, is_ethical boolean);", "output": "SELECT DATEPART(YEAR, sale_date) AS year, DATEPART(MONTH, sale_date) AS month, SUM(revenue) AS total_revenue FROM ethical_sales WHERE is_ethical = true GROUP BY DATEPART(YEAR, sale_date), DATEPART(MONTH, sale_date);"}
{"input": " \uc120\uc218 \uc0dd\ud65c \ub3d9\uc548 \uc57c\uad6c\uc640 \ucd95\uad6c\uc5d0 \ubaa8\ub450 \ucc38\uac00\ud55c \uc6b4\ub3d9\uc120\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE athletes (athlete_id INT, athlete_name VARCHAR(50), sport VARCHAR(10));INSERT INTO athletes (athlete_id, athlete_name, sport) VALUES (1, 'John Doe', 'Baseball'), (2, 'Jane Doe', 'Football'), (3, 'Janet Doe', 'Baseball'), (4, 'Jack Doe', 'Football');", "output": "SELECT a.athlete_name FROM athletes a WHERE a.sport = 'Baseball' INTERSECT SELECT a.athlete_name FROM athletes a WHERE a.sport = 'Football';"}
{"input": " \uc2a4\ud398\uc778\uc758 \uc5ec\uc131 \uc608\uc220\uac00\ub4e4\uc740 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc791\ud488\uc744 \ucc3d\uc791\ud588\ub098\uc694?", "context": "CREATE TABLE Artists (id INT, name VARCHAR(50), gender VARCHAR(6)); INSERT INTO Artists (id, name, gender) VALUES (1, 'Picasso', 'male'), (2, 'Dali', 'male'), (3, 'Mir\u00f3', 'male'), (4, 'Gaud\u00ed', 'male'), (5, 'Majano', 'female'); CREATE TABLE Artworks (id INT, artist_id INT, title VARCHAR(50)); INSERT INTO Artworks (id, artist_id, title) VALUES (1, 1, 'Guernica'), (2, 3, 'The Farm'), (3, 5, 'The Garden'); CREATE TABLE Countries (id INT, name VARCHAR(20)); INSERT INTO Countries (id, name) VALUES (1, 'Spain');", "output": "SELECT COUNT(*) FROM Artworks JOIN Artists ON Artworks.artist_id = Artists.id JOIN Countries ON Artists.country = Countries.name WHERE Artists.gender = 'female' AND Countries.name = 'Spain';"}
{"input": " \uc0ac\ud68c\uc801 \ucc45\uc784\ub300\ucd9c\uc744 \ubcf4\uc720\ud558\uace0 \uc788\uc73c\uba70, \uc7ac\ubb34\ub2a5\ub825 \uc810\uc218\uac00 \ub192\uc740 \uace0\uac1d \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, financial_capability_score INT, has_socially_responsible_loan BOOLEAN);", "output": "SELECT COUNT(*) FROM customers WHERE financial_capability_score > 7 AND has_socially_responsible_loan = TRUE;"}
{"input": " \ub18d\ucd0c \uc758\ub8cc \uc2dc\uc2a4\ud15c\uc5d0 \ud3ec\ud568\ub41c \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hospitals (ID INT, Name TEXT, Location TEXT, Type TEXT); INSERT INTO Hospitals VALUES (1, 'Rural General Hospital', 'Smalltown', 'Hospital'); INSERT INTO Hospitals VALUES (2, 'Rural Health Clinic', 'Village', 'Clinic');", "output": "SELECT COUNT(*) FROM Hospitals WHERE Type IN ('Hospital', 'Clinic');"}
{"input": " TV \ud504\ub85c\uadf8\ub7a8 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uc131\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE TVShows (id INT, title VARCHAR(255), gender VARCHAR(255));", "output": "SELECT gender, COUNT(*) AS count FROM TVShows GROUP BY gender;"}
{"input": " \ud2b9\uc815 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc758 \uc0dd\uc0b0\uc5d0 \uc5b4\ub5a4 \ud654\ud569\ubb3c\uc774 \uc0ac\uc6a9\ub418\uc5c8\uc73c\uba70, \uadf8 \uc591\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Product(Id INT, Category VARCHAR(50)); CREATE TABLE ChemicalUsage(Id INT, ProductId INT, ChemicalId INT, QuantityUsed INT); CREATE TABLE Chemical(Id INT, Name VARCHAR(50));", "output": "SELECT p.Category, c.Name AS ChemicalName, SUM(cu.QuantityUsed) AS TotalQuantityUsed FROM ChemicalUsage cu JOIN Product p ON cu.ProductId = p.Id JOIN Chemical c ON cu.ChemicalId = c.Id WHERE p.Category = 'ExampleCategory' GROUP BY c.Name;"}
{"input": " \uc9c0\ub09c 10\ub144\uac04 \uac1c\ubc1c\ub41c \uad70\uc0ac\uae30\uc220\uacfc \uac1c\ubc1c\uc790 \ud30c\uc545", "context": "CREATE TABLE MilitaryTech (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, year_developed INT, developer_country VARCHAR(255)); INSERT INTO MilitaryTech (id, name, description, year_developed, developer_country) VALUES (1, 'F-35', '...', 2005, 'USA'), (2, 'Type 45', '...', 2006, 'UK');", "output": "SELECT m.name, m.year_developed, m.developer_country, c.country_name FROM MilitaryTech m INNER JOIN Country c ON m.developer_country = c.country_code WHERE m.year_developed >= (SELECT YEAR(CURRENT_DATE) - 10);"}
{"input": " \ubc1c\ud30c\ub77c\uc774\uc18c \ud56d\uc5d0\uc11c \uc120\ubc15\ub2f9 \ucc98\ub9ac\ub418\ub294 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), status VARCHAR(50)); CREATE TABLE cargo (cargo_id INT, port_id INT, vessel_id INT, weight INT);", "output": "SELECT V.vessel_name, AVG(weight) AS avg_weight FROM cargo C JOIN vessels V ON C.vessel_id = V.vessel_id JOIN ports P ON C.port_id = P.port_id WHERE P.port_name = 'Port of Valpara\u00edso' GROUP BY V.vessel_id;"}
{"input": " \uc2f1\uac00\ud3ec\ub974\ud56d\uc758 \uac01 \uc120\ubc15\uc774 \ucc98\ub9ac\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name TEXT); INSERT INTO ports (id, name) VALUES (1, 'Port of Singapore'); CREATE TABLE vessel_arrivals (id INT, port_id INT, vessel_id INT, arrival_date DATE); INSERT INTO vessel_arrivals (id, port_id, vessel_id, arrival_date) VALUES (1, 1, 1, '2022-01-01'), (2, 1, 2, '2022-01-05'), (3, 1, 1, '2022-01-15'); CREATE TABLE vessels (id INT, name TEXT); INSERT INTO vessels (id, name) VALUES (1, 'Vessel X'), (2, 'Vessel Y'); CREATE TABLE container_events (id INT, port_id INT, vessel_id INT, event_date DATE, event_type TEXT, quantity INT); INSERT INTO container_events (id, port_id, vessel_id, event_date, event_type, quantity) VALUES (1, 1, 1, '2022-01-01', 'load', 500), (2, 1, 1, '2022-01-03', 'unload', 300), (3, 1, 2, '2022-01-02', 'load', 700), (4, 1, 2, '2022-01-04', 'unload', 400);", "output": "SELECT v.name, SUM(ce.quantity) FROM vessels v JOIN vessel_arrivals va ON v.id = va.vessel_id JOIN container_events ce ON v.id = ce.vessel_id WHERE va.port_id = (SELECT id FROM ports WHERE name = 'Port of Singapore') GROUP BY v.name;"}
{"input": " \ub3c4\uad6c \uc720\ubb3c\uc774 3\uac1c \uc774\uc0c1 \uc788\ub294 \ubc1c\uad74 \ud604\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site_a (artifact_id INT, artifact_type VARCHAR(255)); INSERT INTO site_a (artifact_id, artifact_type) VALUES (1, 'Pottery'), (2, 'Tools'), (3, 'Tools'), (4, 'Tools'); CREATE TABLE site_b (artifact_id INT, artifact_type VARCHAR(255)); INSERT INTO site_b (artifact_id, artifact_type) VALUES (5, 'Pottery'), (6, 'Tools'), (7, 'Tools');", "output": "SELECT context FROM (SELECT 'site_a' AS context, COUNT(*) as count FROM site_a WHERE artifact_type = 'Tools' UNION ALL SELECT 'site_b' AS context, COUNT(*) as count FROM site_b WHERE artifact_type = 'Tools') AS subquery WHERE count > 3;"}
{"input": " \uc8fc\ub2f9 \ud3c9\uade0 \ud3ec\uc6a9\uc801 \uc8fc\ud0dd \uc815\ucc45 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inclusive_housing (id INT, state VARCHAR, policy_count INT); INSERT INTO inclusive_housing (id, state, policy_count) VALUES (1, 'NY', 10), (2, 'CA', 8), (3, 'TX', 6), (4, 'FL', 5);", "output": "SELECT AVG(policy_count) FROM (SELECT policy_count, state FROM inclusive_housing GROUP BY state) as state_policies;"}
{"input": " \ubcf4\uac74\ubd80\uc5d0\uc11c \uc11c\ube44\uc2a4 \ubc94\uc8fc\ubcc4\ub85c \ud560\ub2f9\ub41c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Health_Dept (ID INT, Service VARCHAR(255), Budget FLOAT); INSERT INTO Health_Dept (ID, Service, Budget) VALUES (1, 'Primary Care', 500000), (2, 'Mental Health', 700000), (3, 'Public Health', 800000);", "output": "SELECT AVG(Budget) FROM Health_Dept GROUP BY Service;"}
{"input": " \uc790\uc728\uc8fc\ud589 \ub2a5\ub825\uc73c\ub85c \uad6c\ubd84\ud55c \uc804\uae30\uc790\ub3d9\ucc28\uc758 \uc6d4\uac04 \uc2dc\uc7a5\uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE AutonomousElectricVehicleSales (id INT, sale_date DATE, make VARCHAR(20), model VARCHAR(20), is_electric BOOLEAN, autonomy_level INT); INSERT INTO AutonomousElectricVehicleSales (id, sale_date, make, model, is_electric, autonomy_level) VALUES (1, '2022-01-01', 'Tesla', 'Model S', true, 4), (2, '2022-01-01', 'Tesla', 'Model 3', true, 3), (3, '2022-02-01', 'Tesla', 'Model S', true, 4), (4, '2022-02-01', 'Tesla', 'Model 3', true, 3), (5, '2022-03-01', 'Tesla', 'Model S', true, 4), (6, '2022-03-01', 'Tesla', 'Model 3', true, 3), (7, '2022-01-01', 'Volvo', 'XC60', false, 0), (8, '2022-02-01', 'Volvo', 'XC60', false, 0), (9, '2022-03-01', 'Volvo', 'XC60', false, 0);", "output": "SELECT EXTRACT(MONTH FROM sale_date) AS month, autonomy_level, make, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY EXTRACT(MONTH FROM sale_date)) AS pct_market_share  FROM AutonomousElectricVehicleSales WHERE is_electric = true GROUP BY month, autonomy_level, make;"}
{"input": "\ud504\ub791\uc2a4'\uc758 \uc21c\ud658\uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c \ud30c\uc545", "context": "CREATE TABLE circular_economy (id INT, initiative VARCHAR(50), country VARCHAR(20)); INSERT INTO circular_economy (id, initiative, country) VALUES (1, 'Composting Program', 'France'), (2, 'Waste Prevention Campaign', 'France');", "output": "SELECT initiative FROM circular_economy WHERE country = 'France';"}
{"input": " AI \uae30\uc220\uc744 \ucc44\ud0dd\ud55c \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \ud638\ud154\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, ai_adoption INT); INSERT INTO hotels (hotel_id, hotel_name, city, ai_adoption) VALUES (1, 'The Beverly Hills Hotel', 'Los Angeles', 1), (2, 'The Four Seasons Hotel', 'Los Angeles', 1), (3, 'The W Hotel', 'Los Angeles', 0), (4, 'The InterContinental Hotel', 'Los Angeles', 1), (5, 'The Millennium Biltmore Hotel', 'Los Angeles', 0);", "output": "SELECT city, 100.0 * SUM(ai_adoption) / COUNT(*) as adoption_percentage FROM hotels WHERE city = 'Los Angeles' GROUP BY city;"}
{"input": " 2020\ub144\uc5d0 \uc11d\uc720 \ud68c\uc0ac\uac00 \ubd81\ud574\uc5d0 \uc2dc\ucd94\ud55c \ucd1d \uc720\uc815 \uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE wells (id INT, well_name VARCHAR(50), location VARCHAR(50), company VARCHAR(50), num_drills INT, drill_date DATE); INSERT INTO wells VALUES (1, 'Well A', 'North Sea', 'ABC Oil', 3, '2020-01-02'); INSERT INTO wells VALUES (2, 'Well B', 'North Sea', 'XYZ Oil', 5, '2020-03-15'); INSERT INTO wells VALUES (3, 'Well C', 'Gulf of Mexico', 'ABC Oil', 2, '2019-12-27');", "output": "SELECT SUM(num_drills) FROM wells WHERE location = 'North Sea' AND company LIKE '%Oil%' AND drill_date BETWEEN '2020-01-01' AND '2020-12-31';"}
{"input": "\uac00\uc0c1 \ud22c\uc5b4\uc640 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uc778\uc99d\uc744 \uac16\ucd98 \uc774\ud0c8\ub9ac\uc544\uc758 \ubaa8\ub4e0 \ubc15\ubb3c\uad00\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Museums (museum_id INT, museum_name VARCHAR(50), country VARCHAR(50), has_virtual_tour BOOLEAN, is_sustainable_tourism_certified BOOLEAN); INSERT INTO Museums (museum_id, museum_name, country, has_virtual_tour, is_sustainable_tourism_certified) VALUES (1, 'VirtualUffizi Florence', 'Italy', true, true), (2, 'LeonardoDaVinci Museum Milan', 'Italy', false, true), (3, 'Colosseum Rome', 'Italy', false, false);", "output": "SELECT museum_name FROM Museums WHERE country = 'Italy' AND has_virtual_tour = true AND is_sustainable_tourism_certified = true;"}
{"input": " \uc9c0\ub09c \uc8fc 'admin' \uacc4\uc815\uc5d0 \ub300\ud574 \ud558\ub8e8 \ucd5c\ub300 \ub85c\uadf8\uc778 \uc2dc\ub3c4 \uc2e4\ud328 \ud69f\uc218\ub294 \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE LoginAttempts (id INT, username VARCHAR(255), date DATE, success BOOLEAN); INSERT INTO LoginAttempts (id, username, date, success) VALUES (1, 'admin', '2022-02-01', FALSE);", "output": "SELECT MAX(failed_attempts) FROM (SELECT COUNT(*) AS failed_attempts FROM LoginAttempts WHERE username = 'admin' AND success = FALSE AND date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY date) AS subquery;"}
{"input": " \ub2e8\uc77c \ucffc\ub9ac\ub85c \ub18d\ucd0c \uc9c4\ub8cc\uc18c \ubc0f \ubcd1\uc6d0\uc758 \ucd1d \uc218\uc640 \ub3c4\uc2dc \uc9c4\ub8cc\uc18c \ubc0f \ubcd1\uc6d0\uc758 \ucd1d \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE rural_clinics (clinic_id INT); INSERT INTO rural_clinics (clinic_id) VALUES (1), (2); CREATE TABLE urban_clinics (clinic_id INT); INSERT INTO urban_clinics (clinic_id) VALUES (1), (2); CREATE TABLE rural_hospitals (hospital_id INT); INSERT INTO rural_hospitals (hospital_id) VALUES (1), (2); CREATE TABLE urban_hospitals (hospital_id INT); INSERT INTO urban_hospitals (hospital_id) VALUES (1), (2);", "output": "SELECT 'Rural Clinics' AS location, COUNT(*) AS total_facilities FROM rural_clinics UNION SELECT 'Urban Clinics', COUNT(*) FROM urban_clinics UNION SELECT 'Rural Hospitals', COUNT(*) FROM rural_hospitals UNION SELECT 'Urban Hospitals', COUNT(*) FROM urban_hospitals;"}
{"input": " \ucc44\uc2dd \ub610\ub294 \uae00\ub8e8\ud150 \ud504\ub9ac \uba54\ub274 \ud56d\ubaa9\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Menu (menu_id INT, name VARCHAR(255), description TEXT, vegetarian BOOLEAN, gluten_free BOOLEAN); INSERT INTO Menu (menu_id, name, description, vegetarian, gluten_free) VALUES (1, 'Caesar Salad', 'Romaine lettuce, croutons, parmesan cheese', TRUE, FALSE), (2, 'Spaghetti Aglio e Olio', 'Spaghetti with garlic and oil', TRUE, TRUE), (3, 'Chicken Parmesan', 'Breaded chicken with marinara sauce and mozzarella cheese', FALSE, FALSE);", "output": "SELECT name FROM Menu WHERE vegetarian = TRUE UNION SELECT name FROM Menu WHERE gluten_free = TRUE;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uc790\uc6d0\ubd09\uc0ac\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, ProgramID INT, VolunteerDate DATE); INSERT INTO Volunteers (VolunteerID, VolunteerName, ProgramID, VolunteerDate) VALUES (20, 'Amy Wong', 1, '2022-06-01'), (21, 'Brian Lee', 2, '2022-06-15'), (22, 'Catherine Choi', 3, '2022-07-01'), (23, 'Daniel Kim', 4, '2022-07-15'), (24, 'Emily Chen', 1, '2022-07-01');", "output": "SELECT ProgramID, COUNT(DISTINCT VolunteerID) OVER (PARTITION BY ProgramID ORDER BY VolunteerDate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) AS VolunteerCountInLast3Months FROM Volunteers;"}
{"input": " 2021\ub144 \uac01 \uad6d\uac00\uc758 \ucd1d \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HealthEquityMetrics (MetricID INT, Country VARCHAR(255), MetricValue INT, ReportDate DATE); INSERT INTO HealthEquityMetrics (MetricID, Country, MetricValue, ReportDate) VALUES (1, 'United States', 85, '2021-01-01'); INSERT INTO HealthEquityMetrics (MetricID, Country, MetricValue, ReportDate) VALUES (2, 'Brazil', 78, '2021-02-15'); INSERT INTO HealthEquityMetrics (MetricID, Country, MetricValue, ReportDate) VALUES (3, 'Germany', 92, '2021-03-05'); INSERT INTO HealthEquityMetrics (MetricID, Country, MetricValue, ReportDate) VALUES (4, 'China', 64, '2021-04-10');", "output": "SELECT Country, SUM(MetricValue) FROM HealthEquityMetrics WHERE YEAR(ReportDate) = 2021 GROUP BY Country;"}
{"input": " 2021\ub144 8\uc6d4\uc5d0 VesselD\uac00 \uc774\ub3d9\ud55c \ucd1d \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessel_positions (id INT, vessel_id INT, longitude FLOAT, latitude FLOAT, timestamp TIMESTAMP); INSERT INTO vessel_positions (id, vessel_id, longitude, latitude, timestamp) VALUES (1, 4, 138.6917, 35.6895, '2021-08-01 00:00:00'), (2, 4, 138.6917, 35.6895, '2021-08-02 00:00:00'), (3, 4, 139.6917, 35.6895, '2021-08-03 00:00:00');", "output": "SELECT SUM(haversine(latitude, longitude, LATITUDE, LONGITUDE)) FROM vessel_positions WHERE vessel_id = 4 AND timestamp BETWEEN '2021-08-01 00:00:00' AND '2021-08-31 23:59:59';"}
{"input": " \ucf00\ub0d0\uc5d0\uc11c 800\uce7c\ub85c\ub9ac \ubbf8\ub9cc\uc758 \uc2dd\uc0ac \ube44\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE meals (user_id INT, meal_date DATE, calories INT); INSERT INTO meals (user_id, meal_date, calories) VALUES (1, '2022-01-01', 750), (1, '2022-01-02', 900), (2, '2022-01-01', 600); CREATE TABLE users (user_id INT, country VARCHAR(255)); INSERT INTO users (user_id, country) VALUES (1, 'Kenya'), (2, 'USA'), (3, 'Kenya');", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM meals JOIN users ON meals.user_id = users.user_id WHERE users.country = 'Kenya') as pct_meals FROM meals JOIN users ON meals.user_id = users.user_id WHERE users.country = 'Kenya' AND calories < 800;"}
{"input": " \uad6d\uac00\ubcc4 \ubd81\uadf9 \ube59\ud558\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE glaciers (id INT, glacier_name VARCHAR, country VARCHAR); INSERT INTO glaciers VALUES (1, 'Glacier A', 'Norway');", "output": "SELECT country, COUNT(*) FROM glaciers GROUP BY country;"}
{"input": " \uc0ac\uace0\uac00 \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud558\ub294 \ud56d\uacf5\uae30 \ubaa8\ub378\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE flight_safety (id INT, aircraft_model VARCHAR(50), accident_year INT); INSERT INTO flight_safety (id, aircraft_model, accident_year) VALUES (1, 'B747', 2000), (2, 'A320', 2005), (3, 'B747', 2010), (4, 'A320', 2015), (5, 'B737', 2010);", "output": "SELECT aircraft_model, COUNT(*) FROM flight_safety GROUP BY aircraft_model ORDER BY COUNT(*) DESC;"}
{"input": " \uc791\ub144\uc5d0 \ubcf4\uc548 \uc0ac\uace0\uac00 \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE security_incidents (country VARCHAR(50), incident_count INT, incident_date DATE); INSERT INTO security_incidents (country, incident_count, incident_date) VALUES ('Country A', 120, '2022-01-01'), ('Country B', 140, '2022-01-02'), ('Country C', 160, '2022-01-03'), ('Country D', 130, '2022-01-04'), ('Country E', 110, '2022-01-05');", "output": "SELECT country, SUM(incident_count) as total_incidents FROM security_incidents WHERE incident_date >= DATEADD(year, -1, GETDATE()) GROUP BY country ORDER BY total_incidents DESC LIMIT 3;"}
{"input": " \uc778\ub3c4\uc758 \uc2dc\uace8 \uc9c4\ub8cc\uc18c \ub2f9 \ud3c9\uade0 \ubcd1\uc0c1 \uc218\ub294 \uc8fc\ubcc4\ub85c \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_clinics (clinic_id INT, state VARCHAR(50), no_of_beds INT); INSERT INTO rural_clinics VALUES (1, 'Assam', 20), (2, 'Assam', 15), (3, 'Bihar', 10), (4, 'Bihar', 12); CREATE TABLE rural_hospitals (hospital_id INT, state VARCHAR(50), no_of_beds INT); INSERT INTO rural_hospitals VALUES (1, 'Assam', 500), (2, 'Assam', 600), (3, 'Bihar', 400), (4, 'Bihar', 450);", "output": "SELECT AVG(r.no_of_beds) as avg_beds FROM (SELECT state, no_of_beds, ROW_NUMBER() OVER (PARTITION BY state ORDER BY no_of_beds DESC) as clinic_rank FROM rural_clinics) r WHERE r.clinic_rank = 1;"}
{"input": " 'RegionD'\uc758 \ubb3c\uc9c8 \uc720\ud615\ubcc4 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Material (mat_id INT, material_type VARCHAR(255)); INSERT INTO Material (mat_id, material_type) VALUES (1, 'Plastic'), (2, 'Glass'), (3, 'Paper'); CREATE TABLE RecyclingData (rec_id INT, mat_id INT, region_id INT, recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingData (rec_id, mat_id, region_id, recycling_rate) VALUES (1, 1, 4, 0.35), (2, 1, 5, 0.40), (3, 2, 4, 0.25), (4, 2, 5, 0.30), (5, 3, 4, 0.50), (6, 3, 5, 0.55); CREATE TABLE Region (region_id INT, region_name VARCHAR(255)); INSERT INTO Region (region_id, region_name) VALUES (4, 'RegionD'), (5, 'RegionE');", "output": "SELECT Material.material_type, AVG(RecyclingData.recycling_rate) as avg_rate FROM Material INNER JOIN RecyclingData ON Material.mat_id = RecyclingData.mat_id INNER JOIN Region ON RecyclingData.region_id = Region.region_id WHERE Region.region_name = 'RegionD' GROUP BY Material.material_type;"}
{"input": " \uce74\ub9ac\ube0c\ud574\uc5d0\uc11c \uc0b0\ud638\ucd08\uac00 \ubc1c\uacac\ub418\ub294 \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE coral_reefs (id INT, name VARCHAR(255), avg_depth FLOAT, region VARCHAR(255)); INSERT INTO coral_reefs (id, name, avg_depth, region) VALUES (1, 'Elkhorn Reef', 15, 'Caribbean');", "output": "SELECT MIN(avg_depth) FROM coral_reefs WHERE region = 'Caribbean';"}
{"input": " 'C\uc2dc'\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uacf5\uacf5\uc0ac\uc5c5\uc774 \uc644\ub8cc\ub410\ub098\uc694?", "context": "CREATE TABLE Public_Works (id INT, project_name VARCHAR(50), location VARCHAR(50), completion_date DATE); INSERT INTO Public_Works (id, project_name, location, completion_date) VALUES (1, 'Road Construction', 'City C', '2021-06-30'); INSERT INTO Public_Works (id, project_name, location, completion_date) VALUES (2, 'Bridge Replacement', 'City D', '2022-04-15');", "output": "SELECT project_name FROM Public_Works WHERE location = 'City C';"}
{"input": " \ud574\uc591 \uc628\ub09c\ud654\ub85c \uc778\ud574 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591 \uc0dd\ubb3c\uc885\uc774 \uc601\ud5a5\uc744 \ubc1b\uc558\uc73c\uba70, \uadf8 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_warming_impact (species_name TEXT, impact_level INTEGER);", "output": "SELECT COUNT(species_name), species_name FROM ocean_warming_impact GROUP BY species_name;"}
{"input": " \ubbf8\uc220\uc804\uc2dc\ud68c, \uc74c\uc545\ud68c \uad00\ub78c\uac1d \uc218\ub97c \uc5f0\ub839\ub300\ubcc4\ub85c \ubcf4\uba74 \ucd1d \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE art_exhibitions (id INT, visitor_age INT, visit_date DATE); CREATE TABLE music_concerts (id INT, visitor_age INT, visit_date DATE);", "output": "SELECT 'Art Exhibitions' AS event, visitor_age, COUNT(*) AS total FROM art_exhibitions GROUP BY visitor_age UNION ALL SELECT 'Music Concerts' AS event, visitor_age, COUNT(*) AS total FROM music_concerts GROUP BY visitor_age;"}
{"input": " 2018\ub144 \ud504\ub77c\uc138\uc624\ub514\ubbb4\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc0dd\uc0b0\ub7c9\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Praseodymium_Production (Year INT, Quarter INT, Quantity INT); INSERT INTO Praseodymium_Production (Year, Quarter, Quantity) VALUES (2018, 1, 250), (2018, 2, 275), (2018, 3, 300), (2018, 4, 325);", "output": "SELECT MIN(Quantity), MAX(Quantity) FROM Praseodymium_Production WHERE Year = 2018;"}
{"input": " \uce90\ub098\ub2e4\uc758 \ucd5c\uadfc \uc678\uad50 \ud589\uc0ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists diplomacy (id INT, event_name VARCHAR(100), country VARCHAR(50), partner_country VARCHAR(50), date DATE); INSERT INTO diplomacy (id, event_name, country, partner_country, date) VALUES (1, 'Military Aid', 'USA', 'Afghanistan', '2001-09-11'); INSERT INTO diplomacy (id, event_name, country, partner_country, date) VALUES (2, 'Defense Agreement', 'France', 'Germany', '2014-07-01');", "output": "SELECT event_name, country, partner_country, date, RANK() OVER(PARTITION BY country ORDER BY date DESC) as recent_rank FROM diplomacy WHERE country = 'Canada' ORDER BY date DESC FETCH FIRST 1 ROW ONLY;"}
{"input": " 2022\ub144 \uce90\ub098\ub2e4\uc5d0\uc11c \ub9e4\ub9bd \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \uc6a9\ub7c9\uacfc \ud568\uaed8 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE landfill (id INT, city VARCHAR(50), country VARCHAR(50), capacity INT, year INT); INSERT INTO landfill (id, city, country, capacity, year) VALUES (1, 'Toronto', 'Canada', 1200000, 2022), (2, 'Vancouver', 'Canada', 800000, 2022), (3, 'Montreal', 'Canada', 700000, 2022);", "output": "SELECT city, capacity FROM (SELECT city, capacity, ROW_NUMBER() OVER (PARTITION BY country ORDER BY capacity DESC) as rank FROM landfill WHERE country = 'Canada' AND year = 2022) AS subquery WHERE rank <= 2;"}
{"input": " 2022\ub144 \uc544\uc2dc\uc544\uc5d0\uc11c \uc5f4\ub9ac\ub294 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694.", "context": "CREATE TABLE EsportsEvents (EventID INT, EventName VARCHAR(50), Location VARCHAR(50), Year INT); INSERT INTO EsportsEvents (EventID, EventName, Location, Year) VALUES (1, 'Event1', 'USA', 2022); INSERT INTO EsportsEvents (EventID, EventName, Location, Year) VALUES (2, 'Event2', 'Canada', 2021); INSERT INTO EsportsEvents (EventID, EventName, Location, Year) VALUES (3, 'Event3', 'China', 2022);", "output": "SELECT COUNT(*) FROM EsportsEvents WHERE Location = 'China' AND Year = 2022;"}
{"input": " \ub0a8\uadf9 \uc9c0\uc5ed\uc758 \ud574\uc591 \ud3ec\uc720\ub958 \uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_mammals (name VARCHAR(255), region VARCHAR(255)); INSERT INTO marine_mammals (name, region) VALUES ('Species 1', 'Arctic'); INSERT INTO marine_mammals (name, region) VALUES ('Species 2', 'Antarctic');", "output": "SELECT COUNT(*) FROM marine_mammals WHERE region = 'Antarctic';"}
{"input": " \ud300\ub2f9 \ucd1d \uacbd\uae30 \uc218\ub97c \uacb0\uc815\ud558\uace0 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Teams (TeamID INT, TeamName VARCHAR(255));CREATE TABLE Games (GameID INT, HomeTeam VARCHAR(255), AwayTeam VARCHAR(255), GameDate DATE);", "output": "SELECT HomeTeam AS TeamName, COUNT(*) AS TotalGames, ROW_NUMBER() OVER (PARTITION BY HomeTeam ORDER BY COUNT(*) DESC) AS Rank FROM Games GROUP BY HomeTeam UNION ALL SELECT AwayTeam, COUNT(*), ROW_NUMBER() OVER (PARTITION BY AwayTeam ORDER BY COUNT(*) DESC) FROM Games GROUP BY AwayTeam;"}
{"input": " \uc6d0\uc8fc\ubbfc \uc608\uc220\uac00\ub4e4\uc758 \uc5f0\uac04 \ud3c9\uade0 \uc791\ud488 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (id INT, artist VARCHAR(20), title VARCHAR(50), year INT, type VARCHAR(20)); INSERT INTO Artworks (id, artist, title, year, type) VALUES (1, 'Indigenous Artist 1', 'Artwork 1', 2000, 'Painting'); INSERT INTO Artworks (id, artist, title, year, type) VALUES (2, 'Indigenous Artist 2', 'Artwork 2', 2005, 'Sculpture');", "output": "SELECT AVG(artworks_per_year) FROM (SELECT COUNT(*) AS artworks_per_year FROM Artworks WHERE artist LIKE 'Indigenous Artist%' GROUP BY year) AS subquery;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4 \ub18d\uc5c5 \uc0ac\uc6a9\uc790\uc758 \uc5f0\uac04 \ubb3c \uc0ac\uc6a9\ub7c9 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE annual_water_usage (year INT, user_type VARCHAR(10), water_usage INT);", "output": "SELECT EXTRACT(YEAR FROM date_trunc('year', date)) as year, AVG(water_usage) - LAG(AVG(water_usage)) OVER (ORDER BY year) as annual_change FROM annual_water_usage JOIN (SELECT date_trunc('year', date) as date, user_type FROM water_consumption_by_day) tmp ON annual_water_usage.year = EXTRACT(YEAR FROM tmp.date) WHERE user_type = 'agricultural' AND state = 'Colorado' GROUP BY year;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uc9c1\uc6d0 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(20), LastName VARCHAR(20), Position VARCHAR(20), Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Position, Department) VALUES (1, 'John', 'Doe', 'Engineer', 'Manufacturing'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Position, Department) VALUES (2, 'Jane', 'Doe', 'Manager', 'Satellite Deployment');", "output": "SELECT Department, COUNT(*) FROM Employees GROUP BY Department"}
{"input": " \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uade0 \uae09\uc5ec\ubcf4\ub2e4 \ub192\uc740 \uae09\uc5ec\ub97c \ubc1b\ub294 \uc9c1\uc6d0\uc758 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department, Salary) VALUES (1, 'John', 'Doe', 'Engineering', 75000.00), (2, 'Jane', 'Doe', 'Engineering', 80000.00), (3, 'Mike', 'Smith', 'Marketing', 60000.00), (4, 'Samantha', 'Johnson', 'Engineering', 85000.00), (5, 'David', 'Brown', 'Marketing', 65000.00);", "output": "SELECT AVG(Salary) OVER (PARTITION BY Department) AS Avg_Salary, COUNT(CASE WHEN Salary > AVG(Salary) OVER (PARTITION BY Department) THEN 1 END) OVER (PARTITION BY Department) AS High_Salary_Count FROM Employees WHERE Department = 'Engineering';"}
{"input": " 2020\ub144\uc5d0 \ubc1c\ub9e4\ub41c \ub178\ub798\uc758 \uc0ac\uc6a9\uc790\ub2f9 \ud3c9\uade0 \uc2a4\ud2b8\ub9ac\ubc0d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_streams (user_id INT, song_id INT, date DATE, streams INT); INSERT INTO user_streams (user_id, song_id, date, streams) VALUES (1, 1, '2020-01-01', 10), (1, 2, '2020-01-02', 15), (2, 1, '2020-01-01', 20), (3, 3, '2020-01-03', 5), (3, 1, '2020-01-04', 7);", "output": "SELECT AVG(streams) FROM user_streams JOIN (SELECT song_id, release_year FROM songs WHERE release_year = 2020) AS subquery ON user_streams.song_id = subquery.song_id;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc18c\ub9e4\uc5c5\uccb4\uc758 \ub204\uc801 \ud310\ub9e4\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (id INT PRIMARY KEY, retailer_id INT, sale_date DATE, sale_amount DECIMAL(10,2)); INSERT INTO sales (id, retailer_id, sale_date, sale_amount) VALUES (1, 1, '2022-01-01', 5000.00); INSERT INTO sales (id, retailer_id, sale_date, sale_amount) VALUES (2, 1, '2022-01-05', 6000.00); INSERT INTO sales (id, retailer_id, sale_date, sale_amount) VALUES (3, 2, '2022-02-01', 7000.00); INSERT INTO sales (id, retailer_id, sale_date, sale_amount) VALUES (4, 2, '2022-02-15', 8000.00); INSERT INTO sales (id, retailer_id, sale_date, sale_amount) VALUES (5, 3, '2022-03-01', 9000.00);", "output": "SELECT s.retailer_id, s.sale_date, s.sale_amount, SUM(s.sale_amount) OVER (PARTITION BY s.retailer_id ORDER BY s.sale_date ROWS BETWEEN 179 preceding AND CURRENT ROW) as running_total FROM sales s WHERE s.sale_date >= (CURRENT_DATE - INTERVAL '6 months');"}
{"input": " \uac70\ub798 \uac74\uc218 \uae30\uc900\uc73c\ub85c \uc911\ub3d9\uc5d0\uc11c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \uae30\uad00 \uc0c1\uc704 3\uac1c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE banks (id INT PRIMARY KEY, bank_name VARCHAR(255), region_id INT, is_shariah_compliant BOOLEAN); CREATE TABLE transactions (id INT PRIMARY KEY, bank_id INT, transaction_date DATE, amount DECIMAL(10,2)); CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255)); CREATE VIEW bank_transaction_views AS SELECT banks.id, banks.bank_name, transactions.id AS transaction_id, transactions.amount, transactions.transaction_date, regions.country FROM banks INNER JOIN transactions ON banks.id = transactions.bank_id INNER JOIN regions ON TRUE; CREATE VIEW active_banks AS SELECT bank_transaction_views.bank_name, COUNT(bank_transaction_views.transaction_id) AS transaction_count FROM bank_transaction_views WHERE bank_transaction_views.is_shariah_compliant = TRUE GROUP BY bank_transaction_views.bank_name;", "output": "SELECT active_banks.bank_name, active_banks.transaction_count FROM active_banks WHERE active_banks.transaction_count IN (SELECT transaction_count FROM (SELECT active_banks.transaction_count FROM active_banks WHERE active_banks.country = 'Middle East' AND active_banks.is_shariah_compliant = TRUE ORDER BY transaction_count DESC LIMIT 3) AS subquery);"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc \ub2ec\uc758 \uac01 \uc9c0\uc5ed \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, region_id INT, join_date DATE); INSERT INTO mobile_subscribers (subscriber_id, region_id, join_date) VALUES (1, 1, '2021-01-01'), (2, 2, '2021-03-01'), (3, 3, '2021-02-01'), (4, 4, '2021-04-01'); CREATE TABLE broadband_subscribers (subscriber_id INT, region_id INT, join_date DATE); INSERT INTO broadband_subscribers (subscriber_id, region_id, join_date) VALUES (5, 1, '2021-01-15'), (6, 2, '2021-03-15'), (7, 3, '2021-02-15'), (8, 4, '2021-04-15');", "output": "SELECT r.region_name, COUNT(m.subscriber_id) AS mobile_count, COUNT(b.subscriber_id) AS broadband_count FROM regions r LEFT JOIN mobile_subscribers m ON r.region_id = m.region_id LEFT JOIN broadband_subscribers b ON r.region_id = b.region_id WHERE MONTH(m.join_date) = MONTH(CURRENT_DATE()) AND YEAR(m.join_date) = YEAR(CURRENT_DATE()) GROUP BY r.region_id;"}
{"input": " \uc9c0\uc5ed\ubcc4 AI \uc54c\uace0\ub9ac\uc998\uc758 \uacf5\uc815\uc131 \uc810\uc218 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE algorithmic_fairness (id INT, region VARCHAR, algorithm VARCHAR, fairness FLOAT);", "output": "SELECT region, algorithm, PERCENT_RANK() OVER (PARTITION BY region ORDER BY fairness) FROM algorithmic_fairness;"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc\uc5d0\uc11c \uc9c0\ub09c 3\ub144 \ub3d9\uc548 \ub2e4\ubb38\ud654 \uad50\uc721\uc744 \uc774\uc218\ud55c \uad50\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE states (state_name VARCHAR(255), state_id INT); INSERT INTO states (state_name, state_id) VALUES ('Texas', 4); CREATE TABLE schools (school_name VARCHAR(255), state_id INT, PRIMARY KEY (school_name, state_id)); CREATE TABLE teachers (teacher_id INT, teacher_age INT, school_name VARCHAR(255), state_id INT, PRIMARY KEY (teacher_id), FOREIGN KEY (school_name, state_id) REFERENCES schools(school_name, state_id)); CREATE TABLE professional_development (pd_id INT, teacher_id INT, pd_date DATE, pd_type VARCHAR(255), PRIMARY KEY (pd_id), FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id));", "output": "SELECT AVG(teachers.teacher_age) FROM teachers INNER JOIN professional_development ON teachers.teacher_id = professional_development.teacher_id INNER JOIN schools ON teachers.school_name = schools.school_name WHERE schools.state_id = 4 AND professional_development.pd_type = 'cross-cultural training' AND professional_development.pd_date >= DATEADD(year, -3, GETDATE());"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uace0\uac1d\uc758 \ucd5c\uc18c \uacc4\uc88c \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE account (account_id INT, customer_id INT, state VARCHAR(255), account_balance DECIMAL(10,2)); INSERT INTO account (account_id, customer_id, state, account_balance) VALUES (1, 1, 'California', 1500.00), (2, 2, 'California', 2500.00);", "output": "SELECT MIN(account_balance) FROM account WHERE state = 'California';"}
{"input": " \uc0dd\uc0b0 \ub370\uc774\ud130 \ubd84\uc11d\uc744 \uc704\ud55c \uc2a4\ud0c0 \uc2a4\ud0a4\ub9c8 \uc124\uacc4", "context": "CREATE TABLE if not exists fact_production (production_id INT PRIMARY KEY, well_id INT, date DATE, oil_volume DECIMAL(10,2), gas_volume DECIMAL(10,2)); CREATE TABLE if not exists dim_well (well_id INT PRIMARY KEY, well_name VARCHAR(255), location VARCHAR(255)); CREATE TABLE if not exists dim_date (date DATE PRIMARY KEY, year INT, month INT, day INT);", "output": "CREATE TABLE star_schema_production AS SELECT fact_production.production_id, fact_production.well_id, dim_well.well_name, dim_date.date, fact_production.oil_volume, fact_production.gas_volume FROM fact_production INNER JOIN dim_well ON fact_production.well_id = dim_well.well_id INNER JOIN dim_date ON fact_production.date = dim_date.date;"}
{"input": " \ub300\ub959\ubcc4 \ucd1d \ub514\uc9c0\ud138 \uaca9\ucc28 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE global_digital_divide (continent VARCHAR(255), score NUMERIC(10,2)); INSERT INTO global_digital_divide (continent, score) VALUES ('Africa', 65.5), ('Americas', 78.2), ('Asia', 72.1);", "output": "SELECT continent, SUM(score) OVER (PARTITION BY 1) as total_score FROM global_digital_divide;"}
{"input": " \uae30\uc220 \ubd84\uc57c\uc5d0\uc11c 'CNN'\uacfc '\ud3ed\uc2a4\ub274\uc2a4'\uac00 \uac8c\uc7ac\ud55c \uae30\uc0ac\ub294 \ucd1d \uba87 \ud3b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cnn (article_id INT, title TEXT, category TEXT, publisher TEXT); INSERT INTO cnn (article_id, title, category, publisher) VALUES (1, 'Article 1', 'Technology', 'CNN'), (2, 'Article 2', 'Politics', 'CNN'); CREATE TABLE fox_news (article_id INT, title TEXT, category TEXT, publisher TEXT); INSERT INTO fox_news (article_id, title, category, publisher) VALUES (3, 'Article 3', 'Business', 'Fox News'), (4, 'Article 4', 'Technology', 'Fox News');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM cnn WHERE category = 'Technology') UNION (SELECT * FROM fox_news WHERE category = 'Technology') );"}
{"input": " \ubbf8\uc8fc \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE creative_ai (model TEXT, application TEXT, country TEXT); CREATE TABLE american_countries (country TEXT); INSERT INTO american_countries VALUES ('United States'), ('Canada'), ('Brazil'), ('Mexico'), ('Argentina');", "output": "SELECT DISTINCT application FROM creative_ai WHERE country IN (SELECT * FROM american_countries);"}
{"input": " 'indie_platform'\uacfc 'mainstream_platform' \ud50c\ub7ab\ud3fc \ubaa8\ub450\uc5d0\uc11c \uace1\uc744 \ubc1c\ud45c\ud55c \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucd5c\ucd08 \uace1 \ubc1c\ub9e4\uc77c\uc740 \uc5b8\uc81c\uc778\uac00\uc694?", "context": "CREATE TABLE artist (artist_id INT, artist_name VARCHAR(50)); INSERT INTO artist (artist_id, artist_name) VALUES (1, 'Artist A'), (2, 'Artist B'); CREATE TABLE song (song_id INT, song_name VARCHAR(50), artist_id INT, platform VARCHAR(20), release_date DATE); INSERT INTO song (song_id, song_name, artist_id, platform, release_date) VALUES (1, 'Song 1', 1, 'indie_platform', '2020-01-01'), (2, 'Song 2', 2, 'mainstream_platform', '2019-01-01'), (3, 'Song 3', 1, 'mainstream_platform', '2021-01-01');", "output": "SELECT MIN(s.release_date) FROM song s JOIN (SELECT artist_id FROM song WHERE platform = 'indie_platform' INTERSECT SELECT artist_id FROM song WHERE platform = 'mainstream_platform') sub ON s.artist_id = sub.artist_id;"}
{"input": "\ubcf4\uc7a5 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \ud14d\uc0ac\uc2a4\uc758 \ucd1d \ubcf4\ud5d8 \uc218\uc640 \ubcf4\ud5d8\uc5d0 \ub300\ud55c \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policy (policy_id INT, coverage_type VARCHAR(20), issue_date DATE, zip_code INT, risk_score INT); CREATE TABLE claim (claim_id INT, policy_id INT, claim_amount INT);", "output": "SELECT coverage_type, COUNT(policy_id) as policy_count, SUM(claim_amount) as total_claim_amount FROM claim JOIN policy ON claim.policy_id = policy.policy_id WHERE zip_code = (SELECT zip_code FROM zip_codes WHERE state = 'TX' AND city = 'Dallas') GROUP BY coverage_type;"}
{"input": " 2015\ub144 \uc774\ud6c4 \uac1c\ubd09\ub41c \ubc1c\ub9ac\uc6b0\ub4dc \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (movie_id INT, title VARCHAR(100), release_year INT, production_budget INT, production_company VARCHAR(50)); INSERT INTO movies (movie_id, title, release_year, production_budget, production_company) VALUES (1, 'Bahubali 2', 2017, 250000000, 'Arka Media Works'), (2, 'Dangal', 2016, 100000000, 'Walt Disney Pictures');", "output": "SELECT production_company, AVG(production_budget) as avg_budget FROM movies WHERE production_company LIKE '%Bollywood%' AND release_year > 2015 GROUP BY production_company;"}
{"input": " \uc810\uc2ec \uba54\ub274\uc640 \uc800\ub141 \uba54\ub274\uc758 \ucc44\uc2dd \uc694\ub9ac\uc758 \ucc28\uc774\uc810\uc744 \ucc3e\uc73c\uc2dc\ub098\uc694?", "context": "CREATE TABLE dishes (id INT, name VARCHAR(255), type VARCHAR(255), menu_id INT); INSERT INTO dishes (id, name, type, menu_id) VALUES (1, 'Burger', 'Non-vegetarian', 2), (2, 'Sandwich', 'Non-vegetarian', 2), (3, 'Pasta', 'Vegetarian', 2), (4, 'Steak', 'Non-vegetarian', 2), (5, 'Salad', 'Vegetarian', 3), (6, 'Pizza', 'Non-vegetarian', 3), (7, 'Tofu Stir Fry', 'Vegetarian', 3), (8, 'Grilled Chicken', 'Non-vegetarian', 3); CREATE TABLE menus (id INT, name VARCHAR(255)); INSERT INTO menus (id, name) VALUES (1, 'Breakfast'), (2, 'Lunch'), (3, 'Dinner');", "output": "SELECT d.name FROM dishes d JOIN menus m ON d.menu_id = m.id WHERE d.type = 'Vegetarian' AND m.name = 'Lunch' INTERSECT SELECT d.name FROM dishes d JOIN menus m ON d.menu_id = m.id WHERE d.type = 'Vegetarian' AND m.name = 'Dinner' EXCEPT SELECT d.name FROM dishes d JOIN menus m ON d.menu_id = m.id WHERE d.type = 'Vegetarian' AND m.name = 'Breakfast';"}
{"input": " \ucd5c\uc2e0 \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc774\ud6c4\uc5d0 \uac00\uc785\ud55c \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE subscribers(id INT, technology VARCHAR(20), type VARCHAR(10), joined DATE); INSERT INTO subscribers(id, technology, type, joined) VALUES (1, '4G', 'mobile', '2021-01-01'), (2, '5G', 'mobile', '2022-01-01'), (3, 'ADSL', 'broadband', '2022-02-01'), (4, 'FTTH', 'broadband', '2022-03-01');", "output": "SELECT * FROM subscribers WHERE technology = 'mobile' AND joined > (SELECT MAX(joined) FROM subscribers WHERE type = 'broadband');"}
{"input": " 'VesselA'\uac00 \uc6b4\uc1a1\ud55c \ucd1d \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessels (id VARCHAR(20), name VARCHAR(20), type VARCHAR(20)); INSERT INTO vessels (id, name, type) VALUES ('1', 'VesselA', 'Cargo'); CREATE TABLE cargoes (id INT, vessel_id VARCHAR(20), weight INT); INSERT INTO cargoes (id, vessel_id, weight) VALUES (1, '1', 50000), (2, '1', 75000);", "output": "SELECT SUM(weight) FROM cargoes WHERE vessel_id = (SELECT id FROM vessels WHERE name = 'VesselA');"}
{"input": " \uce7c\ub85c\ub9ac\uac00 \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \uc81c\ud488 \ud45c\uc2dc", "context": "CREATE TABLE menu_items (item_id INT, item_name VARCHAR(50), calorie_count INT);", "output": "SELECT item_id, item_name FROM menu_items WHERE calorie_count > (SELECT AVG(calorie_count) FROM menu_items);"}
{"input": " '\uc720\ub7fd' \ub610\ub294 '\ubd81\ubbf8' \uc9c0\uc5ed\uc5d0\uc11c \ud6c8\ub828\ub41c \ubaa8\ub378\uc5d0 \ub300\ud574 \uacf5\uc815\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ubaa8\ub378\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE model_details (model_id INT, fairness_score FLOAT, region_id INT);", "output": "SELECT model_id, fairness_score FROM (SELECT model_id, fairness_score, region_id, ROW_NUMBER() OVER (PARTITION BY region_id ORDER BY fairness_score DESC) rn FROM model_details WHERE region_id IN (2, 1)) md WHERE rn <= 5;"}
{"input": " \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub7c9 \uae30\uc900\uc73c\ub85c \uce90\ub098\ub2e4\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE concerts (id INT, artist VARCHAR(50), city VARCHAR(50), revenue FLOAT); INSERT INTO concerts (id, artist, city, revenue) VALUES (1, 'The Beatles', 'Vancouver', 10000.0), (2, 'Queen', 'Toronto', 15000.0);", "output": "SELECT artist, MAX(revenue) FROM concerts WHERE city = 'Canada';"}
{"input": " \"HabitatPreservation\" \ubcf4\uae30\uc5d0\uc11c \ub3d9\uc77c\ud55c \uc11c\uc2dd\uc9c0\ub97c \uacf5\uc720\ud558\ub294 \ub3d9\ubb3c\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE VIEW HabitatPreservation AS SELECT habitat_id, animal_id FROM AnimalHabitats; INSERT INTO AnimalHabitats (habitat_id, animal_id) VALUES (1, 1), (1, 2), (2, 3), (3, 4), (3, 5), (4, 6);", "output": "SELECT MAX(habitat_count) FROM (SELECT habitat_id, COUNT(DISTINCT animal_id) AS habitat_count FROM HabitatPreservation GROUP BY habitat_id) AS subquery;"}
{"input": " \ub374\ubc84 \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc758 \ucd5c\uc18c \ub9ac\uc2a4\ud305 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE properties (id INT, city VARCHAR(20), listing_price INT, co_owned BOOLEAN); INSERT INTO properties (id, city, listing_price, co_owned) VALUES (1, 'Denver', 550000, true); INSERT INTO properties (id, city, listing_price, co_owned) VALUES (2, 'Denver', 450000, false);", "output": "SELECT MIN(listing_price) FROM properties WHERE city = 'Denver' AND co_owned = true;"}
{"input": " 'Avalanche' \ub124\ud2b8\uc6cc\ud06c\uc758 \uc0c1\uc704 2\uac1c dapp\uc774 \ubc30\ud3ec\ud55c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE avalanche_dapps (dapp_name VARCHAR(20), network VARCHAR(20), smart_contracts INT); INSERT INTO avalanche_dapps (dapp_name, network, smart_contracts) VALUES ('TraderJoe', 'Avalanche', 100), ('Aave', 'Avalanche', 120), ('Curve', 'Avalanche', 130);", "output": "SELECT dapp_name, network, smart_contracts, SUM(smart_contracts) OVER (PARTITION BY dapp_name ORDER BY smart_contracts DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as total_smart_contracts FROM avalanche_dapps WHERE network = 'Avalanche' AND dapp_name IN ('TraderJoe', 'Aave') GROUP BY dapp_name, network, smart_contracts;"}
{"input": " 100m \ub2ec\ub9ac\uae30 \uc885\ubaa9\uc5d0\uc11c \uac00\uc7a5 \ube60\ub978 \ub2e8\uac70\ub9ac \uc120\uc218 \uc0c1\uc704 10\uba85\uc758 \ud3c9\uade0 \ub2ec\ub9ac\uae30 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE athletes (id INT, name VARCHAR(50), sport VARCHAR(50), event VARCHAR(50), personal_best FLOAT); INSERT INTO athletes (id, name, sport, event, personal_best) VALUES (1, 'John Doe', 'Athletics', '100m', 9.87), (2, 'Jane Smith', 'Athletics', '100m', 10.12);", "output": "SELECT AVG(personal_best)  FROM (SELECT personal_best FROM athletes WHERE sport = 'Athletics' AND event = '100m' ORDER BY personal_best DESC FETCH NEXT 10 ROWS ONLY) AS subquery;"}
{"input": " \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc758 \uacbd\ucc30 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sf_police_officers (id INT, officer_name VARCHAR(20), station VARCHAR(20)); INSERT INTO sf_police_officers (id, officer_name, station) VALUES (1, 'Officer Smith', 'Precinct 1'), (2, 'Officer Johnson', 'Precinct 1');", "output": "SELECT COUNT(*) FROM sf_police_officers;"}
{"input": " \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc5d0 \ub300\ud574 \uace0\uac1d\ub2f9 \uc9c0\uae09\ub41c \ucd1d \ub300\ucd9c \uae08\uc561\uc744 \ubd84\uae30\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE socially_responsible_loans (customer_id INT, loan_amount DECIMAL(10, 2), disbursement_date DATE); INSERT INTO socially_responsible_loans VALUES (1, 5000, '2021-01-15'), (2, 7000, '2021-03-20'), (1, 3000, '2021-06-05'), (3, 8000, '2021-09-10');", "output": "SELECT customer_id, SUM(loan_amount) OVER (PARTITION BY customer_id, DATE_TRUNC('quarter', disbursement_date)) as total_loan_amount, disbursement_date FROM socially_responsible_loans;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uac00\uc7a5 \uae34 \ub2e4\ub9ac\uc758 \uc774\ub984\uacfc \uae38\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE infrastructure.bridges (bridge_id INT, name VARCHAR(255), length FLOAT, state VARCHAR(2)); INSERT INTO infrastructure.bridges (bridge_id, name, length, state) VALUES (1, 'Golden Gate', 2737.4, 'CA'), (2, 'Verrazano-Narrows', 4868.6, 'NY');", "output": "SELECT name, length FROM infrastructure.bridges WHERE state = 'CA' AND length = (SELECT MAX(length) FROM infrastructure.bridges WHERE state = 'CA');"}
{"input": "\uc870\uc0ac\ub97c \uc218\ud589\ud55c \uc9c0\uc9c8\ud559\uc790\ub4e4\uc774 \uadf8\ub8f9\ud654\ud55c, \uad6c\ub9ac \ucd94\ucd9c\uacfc \uad00\ub828\ub41c \uac01 \uad11\uc0b0\uc758 \ud3c9\uade0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production_statistics (id INT, mine_id INT, year INT, total_production INT, waste_generation INT); INSERT INTO production_statistics (id, mine_id, year, total_production, waste_generation) VALUES (1, 1, 2019, 12500, 2500); INSERT INTO production_statistics (id, mine_id, year, total_production, waste_generation) VALUES (2, 2, 2019, 16000, 3000); INSERT INTO production_statistics (id, mine_id, year, total_production, waste_generation) VALUES (3, 3, 2019, 9000, 1500); CREATE TABLE mines (id INT, name VARCHAR(255), mineral VARCHAR(255)); INSERT INTO mines (id, name, mineral) VALUES (1, 'Mine A', 'Copper'); INSERT INTO mines (id, name, mineral) VALUES (2, 'Mine B', 'Copper'); INSERT INTO mines (id, name, mineral) VALUES (3, 'Mine C', 'Silver'); CREATE TABLE geological_survey (id INT, mine_id INT, geologist VARCHAR(255), survey_date DATE); INSERT INTO geological_survey (id, mine_id, geologist, survey_date) VALUES (1, 1, 'Amy Nguyen', '2020-11-15'); INSERT INTO geological_survey (id, mine_id, geologist, survey_date) VALUES (2, 2, 'Carlos Alvarez', '2020-12-05'); INSERT INTO geological_survey (id, mine_id, geologist, survey_date) VALUES (3, 3, 'Maria Garcia', '2021-01-10');", "output": "SELECT g.geologist, AVG(ps.waste_generation) as avg_waste_generation FROM geological_survey g JOIN mines m ON m.id = g.mine_id JOIN production_statistics ps ON m.id = ps.mine_id WHERE m.mineral = 'Copper' GROUP BY g.geologist;"}
{"input": " \uad6d\uac00\ubcc4 \uace0\uac1d\uc758 \ud3c9\uade0 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(255), country VARCHAR(255), balance DECIMAL(10, 2)); INSERT INTO customers (id, name, country, balance) VALUES (1, 'John Doe', 'USA', 5000.00), (2, 'Jane Smith', 'Canada', 7000.00), (3, 'Alice Johnson', 'UK', 8000.00);", "output": "SELECT country, AVG(balance) OVER (PARTITION BY country) FROM customers;"}
{"input": " \ubd81\uadf9\uc5d0\uc11c \uac00\uc7a5 \ud754\ud55c \ud574\uc591 \uc624\uc5fc \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArcticPollution (ID INT, Pollutant VARCHAR(50), Level INT, TimeStamp DATETIME); INSERT INTO ArcticPollution (ID, Pollutant, Level, TimeStamp) VALUES (1, 'NitrogenOxides', 5, '2022-01-01 10:00:00'), (2, 'Phosphates', 10, '2022-01-02 10:00:00'), (3, 'Microplastics', 15, '2022-01-03 10:00:00');", "output": "SELECT Pollutant, Level, RANK() OVER (PARTITION BY Pollutant ORDER BY Level DESC) as Rank FROM ArcticPollution WHERE TimeStamp BETWEEN '2022-01-01 10:00:00' AND '2022-01-04 10:00:00';"}
{"input": " 2020\ub144 \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ub300\ub450\uc640 \uc625\uc218\uc218 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_crops (name VARCHAR(255), year INT, production INT); INSERT INTO us_crops (name, year, production) VALUES ('soybean', 2020, 11297460), ('corn', 2020, 360749400); CREATE TABLE ca_crops (name VARCHAR(255), year INT, production INT); INSERT INTO ca_crops (name, year, production) VALUES ('soybean', 2020, 123000), ('corn', 2020, 14200000);", "output": "SELECT 'United States' AS country, SUM(production) AS soybean_production FROM us_crops WHERE name = 'soybean' AND year = 2020 UNION ALL SELECT 'United States' AS country, SUM(production) AS corn_production FROM us_crops WHERE name = 'corn' AND year = 2020 UNION ALL SELECT 'Canada' AS country, SUM(production) AS soybean_production FROM ca_crops WHERE name = 'soybean' AND year = 2020 UNION ALL SELECT 'Canada' AS country, SUM(production) AS corn_production FROM ca_crops WHERE name = 'corn' AND year = 2020;"}
{"input": " \uac01 \ub178\uc120\uc758 \ubc84\uc2a4 \uccad\uc18c \uac04\uaca9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE buses (id INT, route_id INT, clean_date DATE); INSERT INTO buses (id, route_id, clean_date) VALUES (1, 101, '2022-01-01'), (2, 102, '2022-01-02'), (3, 103, '2022-01-03');", "output": "SELECT route_id, MIN(DATEDIFF('day', LAG(clean_date) OVER (PARTITION BY route_id ORDER BY clean_date), clean_date)) FROM buses GROUP BY route_id;"}
{"input": " '\uc2dc\ubbac\ub808\uc774\uc158'\uc5d0 \uc911\uc810\uc744 \ub454 \uae30\uad00\uc744 \uc81c\uc678\ud55c \ubbf8\uad6d, \ub3c5\uc77c\uc758 \ubaa8\ub4e0 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \uae30\uad00\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE AutonomousResearch (Id INT, Organization VARCHAR(255), Focus VARCHAR(255), Country VARCHAR(255)); INSERT INTO AutonomousResearch (Id, Organization, Focus, Country) VALUES (4, 'Volvo Autonomous', 'Autonomous Driving', 'USA');", "output": "SELECT Organization, Country FROM AutonomousResearch WHERE Country IN ('USA', 'Germany') AND Focus NOT IN ('Simulation');"}
{"input": " 2012\ub144\uc5d0 \uc785\uc0ac\ud55c '\uc2dc\uce74\uace0' \uc0ac\ubb34\uc18c \uc18c\uc18d \ubcc0\ud638\uc0ac\ub4e4\uc774 \ub2f4\ub2f9\ud55c \uc0ac\uac74\uc758 \ud3c9\uade0 \uccad\uad6c\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE offices (office_id INT, city TEXT); CREATE TABLE attorneys (attorney_id INT, office_id INT, join_year INT); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount INT);", "output": "SELECT AVG(cases.billing_amount) FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id INNER JOIN offices ON attorneys.office_id = offices.office_id WHERE offices.city = 'Chicago' AND attorneys.join_year = 2012;"}
{"input": " \ubaa8\ubc14\uc77c \uac00\uc785\ub9cc \ud55c '\uad50\uc678' \uc9c0\uc5ed \uace0\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, region VARCHAR(10), mobile_subscription VARCHAR(10), broadband_subscription VARCHAR(10)); INSERT INTO customers (id, region, mobile_subscription, broadband_subscription) VALUES (1, 'suburban', 'yes', 'no'), (2, 'urban', 'yes', 'yes'), (3, 'rural', 'no', 'yes'), (4, 'suburban', 'no', 'no'), (5, 'urban', 'yes', 'no');", "output": "SELECT (COUNT(*) FILTER (WHERE region = 'suburban' AND mobile_subscription = 'yes' AND broadband_subscription = 'no')) * 100.0 / (SELECT COUNT(*) FROM customers WHERE region = 'suburban') FROM customers;"}
{"input": " \uacf5\ub3d9 \uc18c\uc720 \ubc00\ub3c4\uac00 0.5 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc758 \ubd80\ub3d9\uc0b0 \ud3c9\uade0 \uac00\uaca9\uc740 \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc758 \uc804\uccb4 \ud3c9\uade0 \uac00\uaca9\ubcf4\ub2e4 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Neighborhood (id INT, name VARCHAR(255), city VARCHAR(255), country VARCHAR(255), co_ownership_density FLOAT); CREATE TABLE Property (id INT, neighborhood VARCHAR(255), price FLOAT, co_ownership BOOLEAN);", "output": "SELECT Neighborhood.name, AVG(Property.price) as avg_price FROM Neighborhood INNER JOIN Property ON Neighborhood.name = Property.neighborhood WHERE Neighborhood.co_ownership_density > 0.5 GROUP BY Neighborhood.name HAVING AVG(Property.price) > (SELECT AVG(Property.price) FROM Property WHERE Property.co_ownership = TRUE)"}
{"input": " \uc124\uba85 \uac00\ub2a5\ud55c AI \ubd84\uc57c\uc758 \uc0c1\uc704 3\uba85\uc758 \uae30\uc5ec \uc800\uc790\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE author (author_id INT, author_name VARCHAR(255)); INSERT INTO author VALUES (1, 'Alice Johnson'), (2, 'Bob Smith'), (3, 'Carol Brown');CREATE TABLE paper_author (paper_id INT, author_id INT); INSERT INTO paper_author VALUES (1, 1), (1, 2), (2, 3);CREATE TABLE paper (paper_id INT, topic VARCHAR(255)); INSERT INTO paper VALUES (1, 'Explainable AI'), (2, 'Explainable AI'), (3, 'AI Fairness');", "output": "SELECT a.author_name, COUNT(pa.author_id) as num_papers FROM author a INNER JOIN paper_author pa ON a.author_id = pa.author_id INNER JOIN paper p ON pa.paper_id = p.paper_id WHERE p.topic = 'Explainable AI' GROUP BY a.author_name ORDER BY num_papers DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc2e0\uaddc \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\uac00 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (id INT, name VARCHAR(255), timestamp DATETIME); CREATE TABLE broadband_subscribers (id INT, name VARCHAR(255), timestamp DATETIME);", "output": "SELECT 'Mobile' as subscription_type, COUNT(*) as num_subscribers FROM mobile_subscribers WHERE timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) UNION ALL SELECT 'Broadband', COUNT(*) FROM broadband_subscribers WHERE timestamp >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);"}
{"input": " \uc77c\ubcf8\uacfc \uc911\uad6d \ucc3d\uace0\uc5d0 \uc788\ub294 \ubb3c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, country VARCHAR(255), items_quantity INT); INSERT INTO Warehouse (id, country, items_quantity) VALUES (1, 'Japan', 300), (2, 'China', 400), (3, 'USA', 500);", "output": "SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'Japan' UNION SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'China';"}
{"input": "\uc544\ud504\ub9ac\uce74\uc758 \uc5b4\ub5a4 \uc18c\ub9e4\uc5c5\uccb4\uac00 \uacf5\uc815 \ubb34\uc5ed \uc81c\ud488\uc744 \ucde8\uae09\ud558\uc9c0 \uc54a\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE retailers (id INT, name TEXT, country TEXT); INSERT INTO retailers (id, name, country) VALUES (1, 'Retailer A', 'South Africa'), (2, 'Retailer B', 'Egypt'), (3, 'Retailer C', 'Nigeria'); CREATE TABLE products (id INT, name TEXT, is_fair_trade BOOLEAN); INSERT INTO products (id, name, is_fair_trade) VALUES (1, 'Product X', true), (2, 'Product Y', false), (3, 'Product Z', true), (4, 'Product W', false); CREATE TABLE retailer_products (retailer_id INT, product TEXT, quantity INT); INSERT INTO retailer_products (retailer_id, product, quantity) VALUES (1, 'Product X', 100), (1, 'Product Z', 50), (2, 'Product Y', 150), (3, 'Product W', 80);", "output": "SELECT retailers.name FROM retailers LEFT JOIN retailer_products ON retailers.id = retailer_products.retailer_id LEFT JOIN products ON retailer_products.product = products.name WHERE products.is_fair_trade IS NULL AND retailers.country = 'Africa';"}
{"input": "A\uc2dc\uc5d0\ub294 \ucd1d \uba87 \uac1c\uc758 \uc2dc\uc124\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO hospitals (id, name, location, type) VALUES (1, 'Hospital A', 'City A', 'General'); INSERT INTO hospitals (id, name, location, type) VALUES (2, 'Hospital B', 'City B', 'Pediatric'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO clinics (id, name, location, type) VALUES (1, 'Clinic C', 'City C', 'Dental'); INSERT INTO clinics (id, name, location, type) VALUES (2, 'Clinic D', 'City A', 'General'); CREATE TABLE long_term_care (id INT, name TEXT, location TEXT, type TEXT); INSERT INTO long_term_care (id, name, location, type) VALUES (1, 'LT Care A', 'City A', 'Nursing'); INSERT INTO long_term_care (id, name, location, type) VALUES (2, 'LT Care B', 'City B', 'Assisted Living');", "output": "SELECT type FROM hospitals WHERE location = 'City A' UNION SELECT type FROM clinics WHERE location = 'City A' UNION SELECT type FROM long_term_care WHERE location = 'City A';"}
{"input": " \ub3c4\uc2dc\ubcc4 \uc804\uae30\ucc28 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE city_vehicles (vehicle_id INT, city VARCHAR(50), is_ev BOOLEAN);", "output": "SELECT city, AVG(is_ev) as avg_is_ev FROM city_vehicles GROUP BY city;"}
{"input": " \uc778\ub3c4 '\uccb8\ub098\uc774'\ud56d\uc744 \ud55c \ubc88 \uc774\uc0c1 \ubc29\ubb38\ud55c \uc120\ubc15\uc744 \uc5f0\ub3c4\ubcc4, \uc6d4\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), type VARCHAR(50)); CREATE TABLE cargo (cargo_id INT, vessel_id INT, port_id INT, weight FLOAT, handling_date DATE); CREATE TABLE ports (port_id INT, port_name VARCHAR(50), city VARCHAR(50), country VARCHAR(50));", "output": "SELECT DISTINCT v.vessel_name, YEAR(c.handling_date) AS handling_year, MONTH(c.handling_date) AS handling_month FROM cargo c JOIN vessels v ON c.vessel_id = v.vessel_id JOIN ports p ON c.port_id = p.port_id WHERE p.port_name = 'Chennai' AND p.country = 'India' GROUP BY v.vessel_name, YEAR(c.handling_date), MONTH(c.handling_date);"}
{"input": " 2019\ub144 \uae30\uad00\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (org_name TEXT, donation_amount INTEGER, donation_date DATE); INSERT INTO Donations (org_name, donation_amount, donation_date) VALUES ('Organization A', 4000, '2019-01-01'); INSERT INTO Donations (org_name, donation_amount, donation_date) VALUES ('Organization B', 6000, '2019-02-15');", "output": "SELECT org_name, AVG(donation_amount) FROM Donations WHERE donation_date BETWEEN '2019-01-01' AND '2019-12-31' GROUP BY org_name;"}
{"input": " \uc0c1\uc704 3\uac1c \uc7ac\ud65c\uc6a9\ub960 \ubc94\uc8fc\uc5d0 \uc18d\ud558\ub294 \uad6d\uac00\uc758 \ud3d0\uae30\ubb3c \ubc1c\uc0dd \uc9c0\ud45c\ub97c \uc2dd\ubcc4\ud558\uace0 \ubc1c\uc0dd\ub41c \ucd1d \ud3d0\uae30\ubb3c\uc744 \uae30\uc900\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE CountryWasteMetrics (Country TEXT, TotalWasteGenerated FLOAT, RecyclingRate FLOAT); INSERT INTO CountryWasteMetrics (CountryName, TotalWasteGenerated, RecyclingRate) VALUES ('USA', 250, 0.35), ('China', 300, 0.2), ('Germany', 100, 0.65), ('Canada', 120, 0.45), ('India', 180, 0.15), ('Brazil', 150, 0.55), ('SouthAfrica', 80, 0.6), ('Indonesia', 200, 0.1), ('Japan', 70, 0.7), ('Mexico', 130, 0.3);", "output": "SELECT Country, TotalWasteGenerated, RecyclingRate FROM (SELECT Country, TotalWasteGenerated, RecyclingRate, NTILE(3) OVER (ORDER BY RecyclingRate DESC) as tier FROM CountryWasteMetrics) t WHERE tier <= 3 ORDER BY TotalWasteGenerated DESC;"}
{"input": "\uc774\ubbfc' \uce74\ud14c\uace0\ub9ac\uc758 \uc0ac\uac74\uc5d0 \ub300\ud574 \uac00\uc7a5 \uc801\uc740 \ube44\uc6a9\uc744 \uccad\uad6c\ud55c \ubcc0\ud638\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID int, Name varchar(50), Specialty varchar(50)); INSERT INTO Attorneys (AttorneyID, Name, Specialty) VALUES (4, 'Sophia Lee', 'Immigration'); CREATE TABLE Billing (CaseID int, AttorneyID int, HoursFraction decimal(3,2)); INSERT INTO Billing (CaseID, AttorneyID, HoursFraction) VALUES (601, 4, 1.5); CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50), AttorneyID int); INSERT INTO Cases (CaseID, ClientID, Category, AttorneyID) VALUES (601, 6, 'Immigration', 4);", "output": "SELECT A.Name, MIN(B.HoursFraction) as LeastHoursBilled FROM Attorneys A INNER JOIN Billing B ON A.AttorneyID = B.AttorneyID INNER JOIN Cases CA ON B.CaseID = CA.CaseID WHERE A.Specialty = 'Immigration' GROUP BY A.Name;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ud558\ub8e8\uc5d0 \uc0dd\uc131\ub41c \uc0c8\ub85c\uc6b4 \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \ubcf4\uace0\uc11c \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE threat_intelligence (report_id INT, creation_date DATE); INSERT INTO threat_intelligence VALUES (1, '2021-07-01'), (2, '2021-07-02'), (3, '2021-07-02');", "output": "SELECT creation_date, COUNT(*) OVER (PARTITION BY creation_date) FROM threat_intelligence WHERE creation_date >= CURRENT_DATE - INTERVAL '7 days';"}
{"input": " \uc790\uc6d0\ubd09\uc0ac \ub370\uc774\ud130\uac00 \uc788\ub294 \ub3c4\uc2dc\ub294 \ucd1d \uba87 \uad70\ub370\uc778\uac00\uc694?", "context": "CREATE TABLE CityVolunteers (city TEXT, hours FLOAT); INSERT INTO CityVolunteers (city, hours) VALUES ('NYC', 150.0), ('LA', 100.5), ('Chicago', 200.1), ('Houston', 180.2);", "output": "SELECT COUNT(DISTINCT city) FROM CityVolunteers;"}
{"input": "\ubd80\uc0c1 \uac74\uc218\uac00 \ud3c9\uade0\ubcf4\ub2e4 \ub9ce\uc740 \uc0ac\uace0\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Accidents (AccidentID INT, Date DATE, Location VARCHAR(50), Type VARCHAR(50), Injuries INT, Fatalities INT); INSERT INTO Accidents (AccidentID, Date, Location, Type, Injuries, Fatalities) VALUES (1, '2018-03-12', 'Texas', 'SpaceX', 3, 0), (2, '2019-04-20', 'California', 'Blue Origin', 0, 1), (3, '2020-05-29', 'Florida', 'SpaceX', 5, 0);", "output": "SELECT AccidentID, Date, Location, Type, Injuries, Fatalities, CASE WHEN Injuries > (SELECT AVG(Injuries) FROM Accidents) THEN 'Above Average' ELSE 'Below Average' END AS Category FROM Accidents;"}
{"input": " '2022\ub144 1\ubd84\uae30' '\ucc3d\uace0K'\uac00 \ud558\ub8e8 \ud3c9\uade0 \ucc98\ub9ac\ud55c \ud314\ub808\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (name varchar(20), pallets_handled int, handling_date date); INSERT INTO Warehouse (name, pallets_handled, handling_date) VALUES ('Warehouse K', 50, '2022-01-01'), ('Warehouse K', 60, '2022-01-02');", "output": "SELECT AVG(pallets_handled / (EXTRACT(DAY FROM handling_date) - EXTRACT(DAY FROM LAG(handling_date) OVER (PARTITION BY name ORDER BY handling_date)))) FROM Warehouse WHERE name = 'Warehouse K' AND quarter = 1 AND year = 2022;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uc6f0'\uc6f0Y'\uc758 \uc0dd\uc0b0\uc728 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(255), well_type VARCHAR(255), location VARCHAR(255)); INSERT INTO wells VALUES (1, 'Well Y', 'Offshore', 'North Sea');", "output": "SELECT production_rate, date FROM (SELECT production_rate, date, row_number() OVER (ORDER BY date DESC) as rn FROM well_production WHERE well_name = 'Well Y' AND date >= CURRENT_DATE - INTERVAL '60 days' ORDER BY date DESC) WHERE rn <= 60;"}
{"input": " \uc77c\ubcf8\uc758 \uc5b4\ub5a4 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc601\uad6d\uc758 \uc5b4\ub5a4 \ud504\ub85c\uc81d\ud2b8\ubcf4\ub2e4 \uc608\uc0b0\uc774 \ub354 \ub192\uc2b5\ub2c8\uae4c?", "context": "USE biotech; CREATE TABLE if not exists projects (id INT, name VARCHAR(255), country VARCHAR(255), budget DECIMAL(10,2)); INSERT INTO projects (id, name, country, budget) VALUES (1, 'Project1', 'Japan', 3000000.00), (2, 'Project2', 'UK', 1500000.00), (3, 'Project3', 'Japan', 2500000.00), (4, 'Project4', 'UK', 2000000.00);", "output": "SELECT * FROM projects WHERE country = 'Japan' AND budget > (SELECT MAX(budget) FROM projects WHERE country = 'UK');"}
{"input": " \uac01 \ub9e4\uc7a5\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc218\uc0b0\ubb3c\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Stores (store_id INT, store_name VARCHAR(255)); CREATE TABLE Products (product_id INT, product_name VARCHAR(255), is_sustainable BOOLEAN, cost INT); CREATE TABLE Inventory (store_id INT, product_id INT, quantity INT);", "output": "SELECT s.store_name, p.product_name, SUM(i.quantity * p.cost) as total_cost FROM Inventory i JOIN Stores s ON i.store_id = s.store_id JOIN Products p ON i.product_id = p.product_id WHERE p.is_sustainable = TRUE GROUP BY s.store_name, p.product_name;"}
{"input": " \ubd81\uadf9\ud574\uc5d0 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc774 \uc788\ub294 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name TEXT, area FLOAT, country TEXT, ocean TEXT); INSERT INTO marine_protected_areas (name, area, country, ocean) VALUES ('Nordvest-Spitsbergen', 13245.0, 'Norway', 'Arctic Ocean'), ('Gulf of Bothnia', 120000.0, 'Finland', 'Atlantic Ocean'), ('Northwest Passage', 10000.0, 'Canada', 'Arctic Ocean');", "output": "SELECT DISTINCT country FROM marine_protected_areas WHERE ocean = 'Arctic Ocean';"}
{"input": "\uac01 \uc9c1\uc704\uc5d0 \ub300\ud574 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \uc9d1\ub2e8\uc5d0 \uc18d\ud558\ub294 \uc0c1\uc704 2\uba85\uc758 \ud6c4\ubcf4\uc790\ub97c \uc9c0\uc6d0 \ub0a0\uc9dc \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Applications (ApplicationID INT, CandidateName VARCHAR(50), RaceEthnicity VARCHAR(30), JobTitle VARCHAR(30), ApplicationDate DATE); INSERT INTO Applications (ApplicationID, CandidateName, RaceEthnicity, JobTitle, ApplicationDate) VALUES (1, 'Jamal Johnson', 'African American', 'Manager', '2022-01-01'), (2, 'Sophia Rodriguez', 'Hispanic', 'Manager', '2022-01-02'), (3, 'Taro Nakamura', 'Asian', 'Developer', '2022-01-03'), (4, 'Aisha Williams', 'African American', 'Developer', '2022-01-04');", "output": "SELECT JobTitle, CandidateName, ApplicationDate, ROW_NUMBER() OVER (PARTITION BY JobTitle ORDER BY CASE WHEN RaceEthnicity IN ('African American', 'Hispanic', 'Asian', 'Native American', 'Pacific Islander') THEN 1 ELSE 2 END, ApplicationDate DESC) AS Rank FROM Applications WHERE Rank <= 2;"}
{"input": " \uad6d\uc120 \ubcc0\ud638\uc778\uc774 1\ub144 \ub3d9\uc548 \uadfc\ubb34\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public_defenders (defender_id INT, hours_worked INT, year INT);", "output": "SELECT SUM(hours_worked) FROM public_defenders WHERE year = (SELECT MAX(year) FROM public_defenders);"}
{"input": " \uc0ac\uc774\uc988\uac00 \uac00\uc7a5 \ub9ce\uc774 \ud3ec\ud568\ub41c \ud488\ubaa9\uc774 \ud3ec\ud568\ub41c \uc0c1\uc704 3\uac1c \uc758\ub958 \uce74\ud14c\uace0\ub9ac\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Clothing_Categories (category_id INT, category_name TEXT); CREATE TABLE Items (item_id INT, category_id INT, size_id INT, is_size_inclusive BOOLEAN); CREATE TABLE Sizes (size_id INT, size_name TEXT);", "output": "SELECT c.category_name, COUNT(i.item_id) as size_inclusive_item_count FROM Clothing_Categories c JOIN Items i ON c.category_id = i.category_id JOIN Sizes s ON i.size_id = s.size_id WHERE i.is_size_inclusive = TRUE GROUP BY c.category_name ORDER BY size_inclusive_item_count DESC LIMIT 3;"}
{"input": " 2017\ub144 \uc774\ud6c4 '\ub0a8\ubbf8'\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd9c\uc2dc\ub410\ub098\uc694?", "context": "CREATE TABLE educational_programs (id INT, program_id INT, location VARCHAR(255), launch_date DATE); INSERT INTO educational_programs (id, program_id, location, launch_date) VALUES (1, 7001, 'Colombia', '2019-05-01'); INSERT INTO educational_programs (id, program_id, location, launch_date) VALUES (2, 7002, 'Brazil', '2017-02-01');", "output": "SELECT COUNT(*) FROM educational_programs WHERE location = 'South America' AND YEAR(launch_date) >= 2017;"}
{"input": " \uc9c0\ub09c\ud574 \uad6d\uac00 \uc548\ubcf4 \uce68\ud574 \uac74\uc218\uc640 \uad6d\uac00\ubcc4 \uce68\ud574 \uac74\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE national_security_breaches (id INT, country TEXT, breach_date DATE); INSERT INTO national_security_breaches (id, country, breach_date) VALUES (1, 'USA', '2021-01-01'), (2, 'UK', '2021-02-15'), (3, 'USA', '2021-03-01'), (4, 'Canada', '2021-04-15');", "output": "SELECT n.country, COUNT(n.id) as total_breaches FROM national_security_breaches n WHERE n.breach_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY n.country;"}
{"input": " \uc815\uc2e0\uac74\uac15 \uc810\uc218\uac00 10\uc810 \uc774\uc0c1 \ud5a5\uc0c1\ub41c \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health_scores (student_id INT, mental_health_score INT, date DATE); INSERT INTO student_mental_health_scores (student_id, mental_health_score, date) VALUES (1, 75, '2022-01-01'), (1, 85, '2022-02-01'), (2, 88, '2022-01-01'), (2, 90, '2022-02-01'), (3, 68, '2022-01-01'), (3, 73, '2022-02-01'), (4, 70, '2022-01-01'), (4, 75, '2022-02-01'), (5, 72, '2022-01-01'), (5, 82, '2022-02-01');", "output": "SELECT COUNT(DISTINCT student_id) as num_students_improved FROM (SELECT student_id, mental_health_score, LAG(mental_health_score) OVER (PARTITION BY student_id ORDER BY date) as previous_mental_health_score FROM student_mental_health_scores) subquery WHERE mental_health_score > previous_mental_health_score + 10;"}
{"input": " \ucd5c\uadfc '\uc610\ub85c\ub77c\uc778' \uc694\uae08 \uc778\uc0c1\ud3ed\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE routes (id INT, name VARCHAR(50), start_stop_id INT, end_stop_id INT); INSERT INTO routes (id, name, start_stop_id, end_stop_id) VALUES (5, 'Yellow Line', 90, 105); CREATE TABLE fares (id INT, route_id INT, start_date DATE, end_date DATE, price DECIMAL(5,2)); INSERT INTO fares (id, route_id, start_date, end_date, price) VALUES (5, 5, '2022-01-01', '2022-06-30', 2.00), (6, 5, '2022-07-01', '2023-01-01', 2.25);", "output": "SELECT MAX(f.end_date) FROM fares f WHERE f.route_id IN (SELECT id FROM routes WHERE name = 'Yellow Line');"}
{"input": " \uacbd\uae30\uc7a5 \uc774\ub984, \uac8c\uc784 \uc774\ub984, \ud2f0\ucf13 \uac00\uaca9\ub9cc \ud45c\uc2dc\ud558\uc5ec \uacbd\uae30\uc7a5\ubcc4\ub85c \uac00\uc7a5 \ube44\uc2fc \uc0c1\uc704 3\uac1c \uac8c\uc784\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Stadiums (StadiumID INT, StadiumName VARCHAR(255));CREATE TABLE Games (GameID INT, StadiumID INT, GameName VARCHAR(255), TicketPrice DECIMAL(5,2));", "output": "SELECT StadiumName, GameName, TicketPrice FROM (SELECT StadiumName, GameName, TicketPrice, ROW_NUMBER() OVER (PARTITION BY StadiumName ORDER BY TicketPrice DESC) AS Rank FROM Stadiums JOIN Games ON Stadiums.StadiumID = Games.StadiumID) AS Subquery WHERE Subquery.Rank <= 3;"}
{"input": " \ud53c\ub4dc\ubc31\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc740 \ud611\uc758\ud68c \ud68c\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City_Council (Council_ID INT PRIMARY KEY, Council_Member VARCHAR(50), District_Number INT); CREATE TABLE Policy_Feedback (Feedback_ID INT PRIMARY KEY, Council_ID INT, Policy_Area VARCHAR(30), Feedback VARCHAR(100)); INSERT INTO City_Council (Council_ID, Council_Member, District_Number) VALUES (1, 'Leila Alvarez', 1), (2, 'James Chen', 2), (3, 'Maria Lee', 3), (4, 'Alex Brown', 4); INSERT INTO Policy_Feedback (Feedback_ID, Council_ID, Policy_Area, Feedback) VALUES (1, 1, 'Housing', 'More affordable housing needed'), (2, 2, 'Transportation', 'Improve public transportation'), (3, 3, 'Education', 'Increase funding for schools');", "output": "SELECT Council_Member FROM City_Council WHERE Council_ID NOT IN (SELECT Council_ID FROM Policy_Feedback);"}
{"input": "Organic_bistro \ub808\uc2a4\ud1a0\ub791\uc758 \ubaa8\ub4e0 \uc2dd\ubb3c\uc131 \uc694\ub9ac\uc758 \ucd1d \uce7c\ub85c\ub9ac \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organic_bistro (dish_name TEXT, dish_type TEXT, calories INTEGER); INSERT INTO organic_bistro (dish_name, dish_type, calories) VALUES ('Lentil Soup', 'plant_based', 200), ('Black Bean Burger', 'plant_based', 500), ('Garden Salad', 'plant_based', 150);", "output": "SELECT SUM(calories) FROM organic_bistro WHERE dish_type = 'plant_based';"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc544\uc2dc\uc544\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ub300\uc911 \uc778\uc2dd \ucea0\ud398\uc778\uc774 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE campaigns (campaign_id INT, campaign_name TEXT, launch_date DATE, region TEXT); INSERT INTO campaigns (campaign_id, campaign_name, launch_date, region) VALUES (1, 'Mental Health Awareness', '2018-01-01', 'Asia'); INSERT INTO campaigns (campaign_id, campaign_name, launch_date, region) VALUES (2, 'End Stigma', '2019-05-15', 'Europe');", "output": "SELECT COUNT(*) FROM campaigns WHERE region = 'Asia' AND launch_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);"}
{"input": " \uc2a4\ud3ec\uce20\ubcc4\ub85c \ub098\ub208 \uac01 \ud300\uc758 \ud3c9\uade0 \ud2f0\ucf13 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ticket_prices (ticket_id INT, team_id INT, sport_id INT, avg_ticket_price DECIMAL(10,2)); CREATE TABLE teams (team_id INT, team_name VARCHAR(255), sport_id INT); CREATE TABLE sports (sport_id INT, sport_name VARCHAR(255)); INSERT INTO ticket_prices VALUES (1, 101, 1, 75.00), (2, 102, 2, 100.00), (3, 101, 1, 85.00), (4, 103, 3, 60.00); INSERT INTO teams VALUES (101, 'TeamA', 1), (102, 'TeamB', 2), (103, 'TeamC', 3); INSERT INTO sports VALUES (1, 'Basketball'), (2, 'Football'), (3, 'Soccer');", "output": "SELECT sp.sport_name, t.team_name, tp.avg_ticket_price FROM ticket_prices tp JOIN teams t ON tp.team_id = t.team_id JOIN sports sp ON t.sport_id = sp.sport_id;"}
{"input": " \uc9c0\ub3c4 \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ub418\uace0 \ud2b9\ud788 \uc778\ub3c4\uc591\uc5d0 \ub300\ud574 \ud574\uc591 \uc601\uc5ed\ubcc4\ub85c \uad6c\ubd84\ub41c \uac01 \ud574\uc591 \uc601\uc5ed\uc5d0 \ub300\ud55c \uae4a\uc774 \uce21\uc815\uac12\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE OceanFloorMapping ( Location NVARCHAR(50), MapDate DATETIME, Depth FLOAT, Area NVARCHAR(50)); INSERT INTO OceanFloorMapping (Location, MapDate, Depth, Area) VALUES ('Mariana Trench', '2021-07-15 12:30:00', 10994, 'Pacific Ocean'); INSERT INTO OceanFloorMapping (Location, MapDate, Depth, Area) VALUES ('Sohm Abyssal Plain', '2021-09-20 09:00:00', 8047, 'Indian Ocean');", "output": "SELECT Area, MapDate, Depth, ROW_NUMBER() OVER (PARTITION BY Area ORDER BY MapDate) as DepthRank FROM OceanFloorMapping WHERE Area = 'Indian Ocean'"}
{"input": " 'The Guardian'\uacfc 'New York Times'\uc5d0 \uac8c\uc7ac\ub41c \ucd1d \uae30\uc0ac \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE the_guardian (article_id INT, title VARCHAR(255), publish_date DATE, author VARCHAR(255)); INSERT INTO the_guardian (article_id, title, publish_date, author) VALUES (1, 'Article 1', '2022-01-01', 'Author 1'); CREATE TABLE new_york_times (article_id INT, title VARCHAR(255), publish_date DATE, author VARCHAR(255)); INSERT INTO new_york_times (article_id, title, publish_date, author) VALUES (1, 'Article 2', '2022-01-02', 'Author 2');", "output": "SELECT COUNT(*) FROM the_guardian UNION ALL SELECT COUNT(*) FROM new_york_times;"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c '\uc74c\uc545'\uacfc '\uc601\ud654' \ucf58\ud150\uce20 \ubaa8\ub450\uc5d0 \ucc38\uc5ec\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_interactions (user_id INT, content_type VARCHAR(255), country VARCHAR(255));", "output": "SELECT COUNT(DISTINCT user_id) FROM (SELECT user_id FROM user_interactions WHERE content_type = 'music' AND country = 'France' INTERSECT SELECT user_id FROM user_interactions WHERE content_type = 'movies' AND country = 'France');"}
{"input": " \ud3c9\uade0 \uc9c0\uc18d\uac00\ub2a5\uc131 \ub4f1\uae09\uc774 \uac00\uc7a5 \ub192\uc740 \ub3c4\uc2dc\ub97c \uc2dd\ubcc4\ud558\uc138\uc694", "context": "CREATE TABLE city_sustainability (city VARCHAR(50), avg_rating FLOAT);", "output": "SELECT city FROM city_sustainability WHERE avg_rating = (SELECT MAX(avg_rating) FROM city_sustainability);"}
{"input": " 2022\ub144 2\ubd84\uae30 \uc6d0\uc778\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donations (DonationID INT, DonationDate DATE, CauseCategory VARCHAR(50), DonationAmount NUMERIC(15,2));", "output": "SELECT CauseCategory, SUM(DonationAmount) as TotalDonations FROM Donations WHERE DonationDate >= '2022-04-01' AND DonationDate < '2022-07-01' GROUP BY CauseCategory;"}
{"input": " 2021\ub144 4\uc6d4 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uc8fc\uc758 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc744 \ub9ac\ud130 \ub2e8\uc704\ub85c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE water_usage (id INT, state VARCHAR(50), consumption FLOAT, date DATE); INSERT INTO water_usage (id, state, consumption, date) VALUES (1, 'California', 15000, '2021-04-01'); INSERT INTO water_usage (id, state, consumption, date) VALUES (2, 'Texas', 12000, '2021-04-02');", "output": "SELECT AVG(consumption) FROM (SELECT state, SUM(consumption) AS consumption FROM water_usage WHERE date >= '2021-04-01' AND date <= '2021-04-30' GROUP BY state ORDER BY consumption DESC LIMIT 2) AS top_states;"}
{"input": " \uac01 \uc8fc\uc758 \ud559\uc0dd\ub4e4\uc774 \uc811\uadfc\ud558\ub294 \uacf5\uac1c \uad50\uc721\ud559 \uc790\uc6d0\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, state TEXT);CREATE TABLE open_pedagogy_resources (id INT, access_date DATE);CREATE TABLE resource_access (student_id INT, resource_id INT);", "output": "SELECT students.state, COUNT(DISTINCT open_pedagogy_resources.id) as resources_accessed FROM students INNER JOIN resource_access ON students.id = resource_access.student_id INNER JOIN open_pedagogy_resources ON resource_access.resource_id = open_pedagogy_resources.id GROUP BY students.state;"}
{"input": " \uc778\uc0c1\uc8fc\uc758 \ubbf8\uc220 \uc791\ud488\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (id INT, title TEXT, creation_date DATE, artist_id INT, movement TEXT, value INT); INSERT INTO Artworks VALUES (1, 'Mona Lisa', '1503-08-15', 1, 'Renaissance', 1000000); INSERT INTO Artworks VALUES (2, 'The Starry Night', '1889-06-15', 10, 'Post-Impressionism', 500000); INSERT INTO Artworks VALUES (3, 'Guernica', '1937-04-26', 15, 'Cubism', 750000); INSERT INTO Artworks VALUES (4, 'The Water Lilies', '1897-05-15', 20, 'Impressionism', 300000);", "output": "SELECT SUM(value) as total_value FROM Artworks WHERE movement = 'Impressionism';"}
{"input": " 2\ub144 \uc774\uc0c1 \ud3d0\uc1c4\ub41c \ud56d\uacf5\uae30 \uc81c\uc870 \uacf5\uc7a5\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE plant_status (plant_id INT, status_date DATE); INSERT INTO plant_status (plant_id, status_date) VALUES (1, '2020-01-01'), (2, '2021-01-01'), (3, '2019-01-01'), (4, '2020-05-01'), (5, '2018-01-01');", "output": "DELETE FROM aircraft_plants WHERE plant_id IN (SELECT plant_id FROM plant_status WHERE status_date <= DATEADD(year, -2, GETDATE()));"}
{"input": " \ucc38\uc11d\uc790\uac00 50\uba85 \uc774\uc0c1\uc778 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EducationPrograms (id INT, animal VARCHAR(255), date DATE, attendees INT);", "output": "SELECT * FROM EducationPrograms WHERE attendees > 50;"}
{"input": " \uc18c\uc678\ub41c \ucee4\ubba4\ub2c8\ud2f0\uc758 \uc0ac\ub78c\ub4e4\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc5d0 \ub300\ud55c \ucd1d \uc790\uae08\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE diversity (company_name VARCHAR(50), underrepresented_community BOOLEAN); INSERT INTO diversity (company_name, underrepresented_community) VALUES ('Acme Inc', TRUE), ('Beta Corp', FALSE), ('Echo Startups', TRUE);", "output": "SELECT SUM(funding_amount) FROM funding INNER JOIN company_founding ON funding.company_name = company_founding.company_name INNER JOIN diversity ON funding.company_name = diversity.company_name WHERE diversity.underrepresented_community = TRUE;"}
{"input": " \uc778\ub514\uce74\uc640 \uc0ac\ud2f0\ubc14 \uade0\uc8fc\ub97c \ubaa8\ub450 \ud310\ub9e4\ud558\ub294 \uc624\ub808\uace4\uc758 \ubaa8\ub4e0 \uc57d\uad6d\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE DispensarySales (dispensary_id INT, strain VARCHAR(20), quantity INT); INSERT INTO DispensarySales (dispensary_id, strain, quantity) VALUES (1, 'Sour Diesel', 50), (1, 'Blue Dream', 75), (2, 'Green Crack', 60), (2, 'Jack Herer', 80); CREATE TABLE OregonDispensaries (dispensary_id INT, location VARCHAR(20)); INSERT INTO OregonDispensaries (dispensary_id, location) VALUES (1, 'Oregon'), (2, 'Oregon');", "output": "SELECT ds.dispensary_id FROM DispensarySales ds JOIN OregonDispensaries od ON ds.dispensary_id = od.dispensary_id WHERE strain LIKE '%Indica%' INTERSECT SELECT ds.dispensary_id FROM DispensarySales ds JOIN OregonDispensaries od ON ds.dispensary_id = od.dispensary_id WHERE strain LIKE '%Sativa%';"}
{"input": " \uac01 \uac8c\uc784 \uc7a5\ub974\uc5d0\uc11c \ub192\uc740 \uc810\uc218\ub97c \ub2ec\uc131\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PlayerScores (PlayerID INT, GameID INT, HighScore INT); INSERT INTO PlayerScores (PlayerID, GameID, HighScore) VALUES (1, 1, 1000), (2, 2, 2000), (3, 1, 1500), (4, 3, 2500), (5, 2, 2200), (6, 1, 3000), (7, 4, 3500), (8, 3, 3000), (9, 2, 3300), (10, 5, 4000);   CREATE TABLE GameGenres (GameID INT, Genre VARCHAR(50)); INSERT INTO GameGenres (GameID, Genre) VALUES (1, 'Action'), (2, 'Strategy'), (3, 'RPG'), (4, 'Simulation'), (5, 'Puzzle');", "output": "SELECT Genre, COUNT(*) as PlayerCount FROM PlayerScores INNER JOIN GameGenres ON PlayerScores.GameID = GameGenres.GameID WHERE HighScore >= (SELECT AVG(HighScore) FROM PlayerScores) GROUP BY Genre;"}
{"input": " \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \ud3c9\uade0 \uc911\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ud654\ud559\ubb3c\uc9c8 \uc720\ud615\uacfc \ud574\ub2f9 \uc81c\uc870\uc5c5\uccb4 \uc774\ub984\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE manufacturer_chemicals_avg (manufacturer_id INT, manufacturer_name VARCHAR(50), chemical_type VARCHAR(50), weight FLOAT); INSERT INTO manufacturer_chemicals_avg (manufacturer_id, manufacturer_name, chemical_type, weight) VALUES (1, 'AusChem', 'Acid', 150.5), (1, 'AusChem', 'Alkali', 120.6), (1, 'AusChem', 'Solvent', 140.7), (2, 'British Biotech', 'Alkali', 160.8), (2, 'British Biotech', 'Solvent', 180.9), (2, 'British Biotech', 'Solute', 170.5), (3, 'ChemCorp', 'Acid', 130.2), (3, 'ChemCorp', 'Alkali', 190.3), (3, 'ChemCorp', 'Solvent', 160.1);", "output": "SELECT manufacturer_id, manufacturer_name, chemical_type, AVG(weight) OVER (PARTITION BY manufacturer_id, chemical_type) as avg_weight, RANK() OVER (PARTITION BY manufacturer_id ORDER BY avg_weight DESC) as manufacturer_chemical_rank FROM manufacturer_chemicals_avg WHERE manufacturer_chemical_rank <= 2;"}
{"input": " \ud398\ub8e8\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc720\ubb3c\uc774 \uae08\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc84c\ub098\uc694?", "context": "CREATE TABLE Site (SiteID INT PRIMARY KEY, SiteName VARCHAR(50), Country VARCHAR(50), City VARCHAR(50)); INSERT INTO Site (SiteID, SiteName, Country, City) VALUES (7, 'Machu Picchu', 'Peru', 'Cuzco'); CREATE TABLE Artifact (ArtifactID INT PRIMARY KEY, SiteID INT, ArtifactName VARCHAR(50), Material VARCHAR(50), Era VARCHAR(50)); INSERT INTO Artifact (ArtifactID, SiteID, ArtifactName, Material, Era) VALUES (6, 2, 'Golden Mask', 'Gold', 'Inca'), (7, 7, 'Golden Idol', 'Gold', 'Inca');", "output": "SELECT COUNT(*) FROM Artifact WHERE Material = 'Gold' AND SiteID = (SELECT SiteID FROM Site WHERE SiteName = 'Machu Picchu');"}
{"input": " \uce5c\ud658\uacbd \ud5c8\uac00\ub97c \uc704\ud55c \ud504\ub85c\uc81d\ud2b8 \ubc0f \uc791\uc5c5\uc790 \uc218 \uacc4\uc0b0", "context": "CREATE TABLE labor_statistics (id INT PRIMARY KEY, project_id INT, workers_count INT, FOREIGN KEY (project_id) REFERENCES project(id)); INSERT INTO labor_statistics (id, project_id, workers_count) VALUES (1, 1, 50);", "output": "SELECT COUNT(DISTINCT p.id) AS projects_count, SUM(l.workers_count) AS total_workers_count FROM project p INNER JOIN labor_statistics l ON p.id = l.project_id INNER JOIN building_permit bp ON p.id = bp.project_id WHERE bp.permit_type = 'Green' GROUP BY bp.permit_type;"}
{"input": " '\uc778\ub514\uc5b8 \uc2a4\ud30c\uc774\uc2a4'\uc758 '\uce58\ud0a8 \ube44\ub9ac\uc57c\ub2c8' \ub9e4\ucd9c \ube44\uc911\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(255)); INSERT INTO restaurants (restaurant_id, name) VALUES (24, 'Indian Spices'); CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), price DECIMAL(5,2)); INSERT INTO menu_items (menu_item_id, name, price) VALUES (25, 'Chicken Biryani', 13.99); CREATE TABLE orders (order_id INT, menu_item_id INT, quantity INT, order_date DATE, restaurant_id INT); INSERT INTO orders (order_id, menu_item_id, quantity, order_date, restaurant_id) VALUES (26, 25, 1, '2022-01-03', 24), (27, 25, 2, '2022-01-04', 24), (28, 25, 1, '2022-01-05', 24);", "output": "SELECT 100.0 * SUM(price * quantity) / (SELECT SUM(price * quantity) FROM orders o JOIN menu_items mi ON o.menu_item_id = mi.menu_item_id WHERE mi.restaurant_id = 24) AS revenue_percentage FROM orders o JOIN menu_items mi ON o.menu_item_id = mi.menu_item_id WHERE mi.name = 'Chicken Biryani' AND mi.restaurant_id = 24;"}
{"input": " \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uac01 \uc885\ubcc4 \uc5b4\ub958\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Stock ( StockID INT, FarmID INT, FishSpecies VARCHAR(255), Weight DECIMAL(10,2), StockDate DATE ); INSERT INTO Stock (StockID, FarmID, FishSpecies, Weight, StockDate) VALUES (1, 1, 'Tilapia', 5.5, '2022-01-01'), (2, 1, 'Salmon', 12.3, '2022-01-02'), (3, 1, 'Tilapia', 6.0, '2022-01-03'), (4, 1, 'Catfish', 8.2, '2022-01-04'), (5, 2, 'Tilapia', 9.0, '2022-01-05'), (6, 2, 'Salmon', 11.0, '2022-01-06'), (7, 3, 'Tilapia', 10.0, '2022-01-07'), (8, 3, 'Salmon', 12.0, '2022-01-08');", "output": "SELECT FishSpecies, SUM(Weight) OVER (PARTITION BY FishSpecies) as TotalBiomass FROM Stock ORDER BY TotalBiomass DESC;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc720\ud574 \uc81c\ud488 \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub41c \ubaa8\ub4e0 \ud654\ud569\ubb3c\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemical_compounds (compound_id INT, name TEXT); CREATE TABLE product_compounds (compound_id INT, product_id INT); CREATE TABLE products (product_id INT, hazardous_flag BOOLEAN, production_date DATE);", "output": "SELECT chemical_compounds.name FROM chemical_compounds INNER JOIN product_compounds ON chemical_compounds.compound_id = product_compounds.compound_id INNER JOIN products ON product_compounds.product_id = products.product_id WHERE products.hazardous_flag = TRUE AND products.production_date > DATEADD(month, -6, GETDATE());"}
{"input": "\uac01 \ub3c4\uc2dc\uc758 \uc8fc\ud0dd \uad6c\uc785 \ub2a5\ub825 \uc911\uc559\uac12\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE housing_affordability (id INT, city VARCHAR(20), score FLOAT); INSERT INTO housing_affordability (id, city, score) VALUES (1, 'SF', 45.2), (2, 'NYC', 38.6), (3, 'LA', 51.1), (4, 'SF', 47.9), (5, 'NYC', 39.8);", "output": "SELECT city, AVG(score) as median_score FROM (SELECT city, score, ROW_NUMBER() OVER (PARTITION BY city ORDER BY score) as rn, COUNT(*) OVER (PARTITION BY city) as cnt FROM housing_affordability) t WHERE rn IN (floor((cnt+1)/2), floor((cnt+2)/2)) GROUP BY city;"}
{"input": " \ub2f9\ud574\uc5f0\ub3c4 \uc720\ud615\ubcc4 \ubcf4\uc548\uc0ac\uace0 \ucd1d \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, incident_type VARCHAR(50), incident_count INT, incident_date DATE); INSERT INTO security_incidents (id, incident_type, incident_count, incident_date) VALUES (1, 'Malware', 150, '2022-01-01'), (2, 'Phishing', 80, '2022-01-02'), (3, 'SQL Injection', 120, '2022-01-03'); CREATE VIEW incident_count_by_type AS SELECT incident_type, SUM(incident_count) as total_incidents FROM security_incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY incident_type;", "output": "SELECT total_incidents FROM incident_count_by_type;"}
{"input": " VC\uc640 \uc5d4\uc824 \ud22c\uc790\uc790 \ubaa8\ub450\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc778\ub3c4\uc5d0\uc11c \uc124\ub9bd\ub41c \ud68c\uc0ac\ub97c \uc2dd\ubcc4\ud558\ub418, \ud06c\ub77c\uc6b0\ub4dc \ud380\ub529 \ud50c\ub7ab\ud3fc\uc5d0\uc11c\ub3c4 \uc790\uae08\uc744 \ubc1b\uc740 \ud68c\uc0ac\ub294 \uc81c\uc678\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Companies (id INT, name TEXT, country TEXT); INSERT INTO Companies (id, name, country) VALUES (1, 'India Co', 'India'); INSERT INTO Companies (id, name, country) VALUES (2, 'Incredible India', 'India'); CREATE TABLE Funding (id INT, company_id INT, investor_type TEXT, amount INT); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (1, 1, 'VC', 8000000); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (2, 1, 'Angel', 3000000); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (3, 2, 'VC', 10000000); INSERT INTO Funding (id, company_id, investor_type, amount) VALUES (4, 2, 'Crowdfunding', 1500000);", "output": "SELECT Companies.name FROM Companies INNER JOIN Funding funding_vc ON Companies.id = funding_vc.company_id INNER JOIN Funding funding_angel ON Companies.id = funding_angel.company_id WHERE Companies.country = 'India' AND funding_vc.investor_type = 'VC' AND funding_angel.investor_type = 'Angel' AND NOT EXISTS (SELECT 1 FROM Funding funding_crowdfunding WHERE Companies.id = funding_crowdfunding.company_id AND funding_crowdfunding.investor_type = 'Crowdfunding')"}
{"input": " 'health_statistics' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ubcd1\uc6d0\uc758 \ucd5c\ub300 \uc218\uc6a9 \uc778\uc6d0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA health_statistics; CREATE TABLE hospitals (id INT, name TEXT, location TEXT, capacity INT); INSERT INTO health_statistics.hospitals (id, name, location, capacity) VALUES (1, 'Hospital A', 'City A', 200), (2, 'Hospital B', 'City B', 250), (3, 'Hospital C', 'City C', 300), (4, 'Hospital D', 'City D', 400), (5, 'Hospital E', 'City E', 450);", "output": "SELECT MAX(capacity) FROM health_statistics.hospitals;"}
{"input": " \uc778\ub3c4\ub124\uc2dc\uc544\uc5d0\uc11c \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc774\uc2ac\ub78c \ud540\ud14c\ud06c \ud68c\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE islamic_fintech (id INT, company_name VARCHAR(50), country VARCHAR(50), num_active_users INT); INSERT INTO islamic_fintech (id, company_name, country, num_active_users) VALUES (1, 'Alami', 'Indonesia', 10000), (2, 'Ayoconnect', 'Indonesia', 12000);", "output": "SELECT country, company_name, num_active_users, RANK() OVER (ORDER BY num_active_users DESC) as rank FROM islamic_fintech WHERE country = 'Indonesia';"}
{"input": " \uce90\ub098\ub2e4\uc640 \uba55\uc2dc\ucf54\uc758 \ucd1d \ud48d\ub825 \uc5d0\ub108\uc9c0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_energy (country VARCHAR(20), production FLOAT); INSERT INTO wind_energy (country, production) VALUES ('Canada', 15.2), ('Canada', 15.5), ('Mexico', 12.6), ('Mexico', 12.9);", "output": "SELECT SUM(production) as total_production, country FROM wind_energy GROUP BY country;"}
{"input": " '\uacf5\ub3d9\uccb4_\uad50\uc721' \ubcf4\uae30\uc5d0\uc11c \uc624\uc138\uc544\ub2c8\uc544 \ub610\ub294 \uc720\ub7fd\uc774 \uc6d0\uc0b0\uc9c0\uc778 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE animal_population (animal VARCHAR(50), continent VARCHAR(50), population INT); INSERT INTO animal_population (animal, continent, population) VALUES ('Kakapo', 'Oceania', 200), ('Quokka', 'Oceania', 10000), ('Iberian Lynx', 'Europe', 400); CREATE VIEW community_education AS SELECT animal, CONCAT('South ', continent) AS continent FROM animal_population WHERE continent IN ('Africa', 'Asia', 'South America');", "output": "SELECT animal FROM community_education WHERE continent = 'South Oceania' UNION ALL SELECT animal FROM community_education WHERE continent = 'South Europe';"}
{"input": " \uc911\uc11c\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uacfc\uc77c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (SupplierID INT, SupplierName VARCHAR(50), Location VARCHAR(50)); INSERT INTO Suppliers (SupplierID, SupplierName, Location) VALUES (1, 'Supplier A', 'Northeast'), (2, 'Supplier B', 'Midwest'), (3, 'Supplier C', 'Southwest'); CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), SupplierID INT, Category VARCHAR(50)); INSERT INTO Products (ProductID, ProductName, SupplierID, Category) VALUES (1, 'Beef', 1, 'Meat'), (2, 'Chicken', 1, 'Meat'), (3, 'Apples', 2, 'Fruits'), (4, 'Oranges', 2, 'Fruits'), (5, 'Tofu', 3, 'Vegetables'), (6, 'Carrots', 3, 'Vegetables'); CREATE TABLE Sales (SaleID INT, ProductID INT, Quantity INT); INSERT INTO Sales (SaleID, ProductID, Quantity) VALUES (1, 1, 10), (2, 2, 15), (3, 3, 20), (4, 4, 25), (5, 5, 30), (6, 6, 35);", "output": "SELECT SUM(Quantity) FROM Sales JOIN Products ON Sales.ProductID = Products.ProductID JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID WHERE Category = 'Fruits' AND Suppliers.Location = 'Midwest';"}
{"input": " \uce90\ub098\ub2e4 \uc2dc\uc7a5\uc5d0\uc11c '\uc7a5\ubbf8' \uc131\ubd84\uc744 \ud568\uc720\ud55c \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \ud654\uc7a5\ud488 \uc0c1\uc704 3\uac1c\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ingredients (ingredient_id INT, product_id INT, ingredient_name VARCHAR(50)); INSERT INTO ingredients (ingredient_id, product_id, ingredient_name) VALUES (1, 1, 'aloe vera'), (2, 2, 'lavender'), (3, 4, 'rose'), (4, 5, 'rose'); CREATE TABLE products (product_id INT, product_name VARCHAR(100), sales INT, certification VARCHAR(20)); INSERT INTO products (product_id, product_name, sales, certification) VALUES (1, 'Lipstick A', 6000, 'cruelty-free'), (2, 'Mascara B', 7000, 'not_certified'), (4, 'Lotion D', 9000, 'cruelty-free'), (5, 'Serum E', 10000, 'cruelty-free'); CREATE TABLE countries (country_code CHAR(2), country_name VARCHAR(50)); INSERT INTO countries (country_code, country_name) VALUES ('CA', 'Canada');", "output": "SELECT products.product_name, products.sales FROM ingredients JOIN products ON ingredients.product_id = products.product_id JOIN countries ON products.country_code = countries.country_code WHERE ingredients.ingredient_name = 'rose' AND products.certification = 'cruelty-free' AND countries.country_name = 'Canada' ORDER BY products.sales DESC LIMIT 3;"}
{"input": " '\uad50\uc721' \uce74\ud14c\uace0\ub9ac\uc758 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE category (cat_id INT, name VARCHAR(255)); INSERT INTO category (cat_id, name) VALUES (1, 'Arts & Culture'), (2, 'Environment'), (3, 'Health'), (4, 'Education'); CREATE TABLE donation (don_id INT, donor_id INT, cat_id INT, amount DECIMAL(10,2)); INSERT INTO donation (don_id, donor_id, cat_id, amount) VALUES (1, 101, 1, 500.00), (2, 102, 1, 250.00), (3, 103, 2, 750.00), (4, 101, 3, 1000.00), (5, 104, 4, 1500.00);", "output": "SELECT AVG(amount) FROM donation WHERE cat_id = (SELECT cat_id FROM category WHERE name = 'Education');"}
{"input": " \uac01 \uacf5\uae09\uc5c5\uccb4\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ucd1d \ud3d0\uae30\ubb3c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c? \uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ubc1c\uc0dd\ub41c \ucd1d \ud3d0\uae30\ubb3c \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\uae4c?", "context": "CREATE TABLE waste (waste_id INT, supplier_id INT, waste_generated INT, waste_generation_date DATE); INSERT INTO waste (waste_id, supplier_id, waste_generated, waste_generation_date) VALUES (1, 1, 1000, '2022-01-01'), (2, 1, 2000, '2022-02-01');", "output": "SELECT supplier_id, DATE_TRUNC('year', waste_generation_date) AS year, SUM(waste_generated) AS total_waste_generated, RANK() OVER (ORDER BY SUM(waste_generated) DESC) AS ranking FROM waste GROUP BY supplier_id, year ORDER BY total_waste_generated DESC;"}
{"input": " \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uacfc\uc18c\ub300\ud45c\ub418\ub294 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Creative_AI (application_name TEXT, region TEXT); INSERT INTO Creative_AI VALUES ('AI Painter', 'Europe'), ('AI Musician', 'North America'), ('AI Writer', 'Asia');", "output": "SELECT region FROM Creative_AI WHERE application_name NOT IN ('AI Painter', 'AI Musician');"}
{"input": " \ud504\ub791\uc2a4 \ud638\ud154\uc744 \uc704\ud55c \uac01 \uac00\uc0c1 \ud22c\uc5b4 \ud50c\ub7ab\ud3fc\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE virtual_tours (tour_id INT, tour_name TEXT, country TEXT, hotel_count INT); INSERT INTO virtual_tours (tour_id, tour_name, country, hotel_count) VALUES (1, 'Tour 1', 'France', 150), (2, 'Tour 2', 'Spain', 200), (3, 'Tour 3', 'France', 250);", "output": "SELECT tour_name, (hotel_count / (SELECT SUM(hotel_count) FROM virtual_tours WHERE country = 'France')) as market_share FROM virtual_tours WHERE country = 'France';"}
{"input": " '\uc6b4\uc601' \ubd80\uc11c\uc5d0 \ube44\ud574 '\uc5f0\uad6c' \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE salaries (id INT, worker_id INT, department VARCHAR(50), salary DECIMAL(10,2)); INSERT INTO salaries (id, worker_id, department, salary) VALUES (1, 1, 'Research', 85000.00), (2, 2, 'Operations', 75000.00), (3, 3, 'Research', 88000.00);", "output": "SELECT department, AVG(salary) as avg_salary FROM salaries GROUP BY department;"}
{"input": " 2021\ub144 \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54 \uc2dc\uc758 \uc6d4\ubcc4 \ubb3c \uc18c\ube44\ub7c9 \ubcc0\ud654\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE water_consumption (city VARCHAR(50), consumption FLOAT, month INT, year INT); INSERT INTO water_consumption (city, consumption, month, year) VALUES ('San-Francisco', 200.2, 1, 2021), ('San-Francisco', 210.5, 2, 2021), ('San-Francisco', 230.8, 3, 2021);", "output": "SELECT month, consumption, consumption - LAG(consumption) OVER (PARTITION BY city ORDER BY year, month) AS month_change FROM water_consumption WHERE city = 'San-Francisco' AND year = 2021;"}
{"input": " 2021\ub144 \uc804\uccb4 \ub3d9\uc548 345\ubc88 \uc120\ubc15\uc73c\ub85c \uc6b4\uc1a1\ub41c \uac00\uc7a5 \ubb34\uac70\uc6b4 \ud654\ubb3c \uc0c1\uc704 5\uac1c\uc758 \ud3c9\uade0 \uc911\ub7c9\uc744 \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE CargoWeights (id INT, vessel_id INT, cargo_weight INT, transaction_time TIMESTAMP); INSERT INTO CargoWeights (id, vessel_id, cargo_weight, transaction_time) VALUES (1, 345, 12000, '2021-05-08 16:30:00');", "output": "SELECT AVG(cargo_weight) as avg_weight FROM CargoWeights WHERE vessel_id = 345 AND transaction_time > '2021-01-01 00:00:00' AND transaction_time < '2022-01-01 00:00:00' AND cargo_weight IN (SELECT cargo_weight FROM (SELECT cargo_weight FROM CargoWeights WHERE vessel_id = 345 GROUP BY cargo_weight ORDER BY SUM(cargo_weight) DESC LIMIT 5) as subquery);"}
{"input": " \uc5b4\ub5a4 \uc704\uc131 \ubc1c\uc0ac\uac00 \uc9c0\uc5f0\ub410\ub098\uc694?", "context": "CREATE TABLE SatelliteLaunches (id INT, launch_date DATE, launch_status VARCHAR(50));", "output": "SELECT id, launch_date, launch_status  FROM SatelliteLaunches  WHERE launch_status = 'delayed';"}
{"input": " 2021\ub144 \ubd81\uadf9\ud574\uc758 \ucd5c\ub300 \ud574\uc218\uba74 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ocean_temperatures (year INT, region VARCHAR(20), temperature DECIMAL(5,2)); INSERT INTO ocean_temperatures (year, region, temperature) VALUES (2021, 'Arctic Ocean', 4.5); INSERT INTO ocean_temperatures (year, region, temperature) VALUES (2021, 'Arctic Ocean', 5.1); INSERT INTO ocean_temperatures (year, region, temperature) VALUES (2021, 'Arctic Ocean', 4.9);", "output": "SELECT MAX(temperature) FROM ocean_temperatures WHERE year = 2021 AND region = 'Arctic Ocean';"}
{"input": " 50\uac1c \uc774\uc0c1\uc758 \ub274\uc2a4 \uae30\uc0ac\ub97c \uac8c\uc7ac\ud55c \ubaa8\ub4e0 \ub274\uc2a4 \uae30\uc790\uc758 \uc774\ub984, \uc131\ubcc4, \ub098\uc774\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE reporters (id INT, name VARCHAR(50), gender VARCHAR(10), age INT, country VARCHAR(50)); CREATE TABLE published_stories (reporter_id INT, news_id INT); CREATE TABLE news (id INT, title VARCHAR(100), views INT, date DATE);", "output": "SELECT r.name, r.gender, r.age FROM reporters r INNER JOIN published_stories ps ON r.id = ps.reporter_id INNER JOIN news n ON ps.news_id = n.id GROUP BY r.name, r.gender, r.age HAVING COUNT(*) > 50;"}
{"input": "\uc911\uc11c\ubd80 \uc9c0\uc5ed\uc758 \ud504\ub85c\uc81d\ud2b8\ub2f9 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uc790\uc7ac\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uac00\uc7a5 \ub192\uc740 \ud3c9\uade0 \ube44\uc6a9\uc73c\ub85c \uc815\ub82c\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Projects (ProjectID int, Region varchar(20), Cost decimal(10,2)); INSERT INTO Projects (ProjectID, Region, Cost) VALUES (1, 'Midwest', 50000.00), (2, 'Northeast', 75000.00), (3, 'Midwest', 60000.00);", "output": "SELECT AVG(Cost) as Avg_Cost, Region FROM Projects WHERE Region = 'Midwest' GROUP BY Region ORDER BY Avg_Cost DESC;"}
{"input": " \uc790\ub3d9\ucc28 \ubcf4\ud5d8\uacfc \uc8fc\ud0dd \ubcf4\ud5d8\uc744 \ubaa8\ub450 \uac16\uace0 \uc788\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Policyholder (ID INT, Name VARCHAR(50), Insurance_Type VARCHAR(20)); INSERT INTO Policyholder (ID, Name, Insurance_Type) VALUES (1, 'John Doe', 'Auto'), (2, 'Jane Smith', 'Home'), (3, 'Mike Johnson', 'Auto'), (4, 'Sara Williams', 'Home'), (5, 'David Brown', 'Auto'), (6, 'Michelle Garcia', 'Auto, Home');", "output": "SELECT DISTINCT Name FROM Policyholder WHERE Insurance_Type = 'Auto' INTERSECT SELECT DISTINCT Name FROM Policyholder WHERE Insurance_Type = 'Home';"}
{"input": " 2018\ub144 \uc9c0\uc5ed\ubcc4 \uc5d0\uc774\ucee4\ub2f9 \ud3c9\uade0 \uc11c\uc2dd\uc9c0 \ubcf4\uc874 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE HabitatPreservation (year INT, region VARCHAR(20), acres INT, cost INT); INSERT INTO HabitatPreservation (year, region, acres, cost) VALUES (2018, 'North', 500, 15000), (2018, 'South', 700, 21000), (2018, 'East', 600, 18000), (2018, 'West', 800, 24000), (2019, 'North', 550, 15500), (2019, 'South', 750, 22000), (2019, 'East', 650, 18500), (2019, 'West', 850, 25000);", "output": "SELECT region, AVG(cost / acres) FROM HabitatPreservation WHERE year = 2018 GROUP BY region;"}
{"input": "\uacf5\uacf5\ubcc0\ud638' \ubd80\uc11c\uc758 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc758 \uc218\ub97c \ubcc0\ud638\uc0ac\uc758 \uc131\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), department VARCHAR(50), gender VARCHAR(10)); INSERT INTO attorneys (attorney_id, name, department, gender) VALUES (1, 'John Doe', 'public_defense', 'male'); INSERT INTO attorneys (attorney_id, name, department, gender) VALUES (2, 'Jane Smith', 'public_defense', 'female'); CREATE TABLE cases (case_id INT, attorney_id INT); INSERT INTO cases (case_id, attorney_id) VALUES (1, 1); INSERT INTO cases (case_id, attorney_id) VALUES (2, 1); INSERT INTO cases (case_id, attorney_id) VALUES (3, 2);", "output": "SELECT department, gender, COUNT(*) OVER (PARTITION BY department, gender) as total_cases FROM attorneys INNER JOIN cases ON attorneys.attorney_id = cases.attorney_id WHERE department = 'public_defense';"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc5d0\uc11c \uc7ac\uc815 \ub2a5\ub825 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE financial_capability (id INT, country VARCHAR(255), score INT);", "output": "SELECT country, score FROM (SELECT country, score, ROW_NUMBER() OVER (ORDER BY score DESC) rn FROM financial_capability WHERE region = 'Oceania') t WHERE rn <= 2;"}
{"input": " ID\uac00 3\uc778 \ud56d\uad6c\uc5d0\uc11c \ucd9c\ubc1c\ud558\uc5ec 7\uc77c \uc774\uc0c1 \uc9c0\uc18d\ub41c \ud3c9\uade0 \ud56d\ud574 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Route (Id INT, Vessel_Id INT, Start_Port_Id INT, End_Port_Id INT, Distance INT); INSERT INTO Route (Id, Vessel_Id, Start_Port_Id, End_Port_Id, Distance) VALUES (1, 1, 3, 4, 1500), (2, 2, 3, 5, 2000);", "output": "SELECT AVG(Distance) FROM Route R WHERE R.Start_Port_Id = 3 AND DATEDIFF(day, (SELECT Start_Date FROM Voyage WHERE Id = R.Id), (SELECT End_Date FROM Voyage WHERE Id = R.Id)) > 7;"}
{"input": " \ucd9c\uc11d\ub960 \uce21\uba74\uc5d0\uc11c \uac00\uc7a5 \uc131\uacf5\uc801\uc778 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE education_programs (id INT, name VARCHAR(50), attendance INT); CREATE VIEW program_attendance AS SELECT name, MAX(attendance) FROM education_programs GROUP BY name;", "output": "SELECT name FROM education_programs WHERE attendance = (SELECT MAX(attendance) FROM education_programs);"}
{"input": " \ucd5c\uc18c \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ud22c\uc790\uc5d0 \ud22c\uc790\ud55c \uace0\uac1d\uc758 \ucd1d \uc790\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, name TEXT, age INT, gender TEXT, total_assets DECIMAL(10,2)); INSERT INTO clients VALUES (1, 'John Doe', 35, 'Male', 250000.00), (2, 'Jane Smith', 45, 'Female', 500000.00), (3, 'Bob Johnson', 50, 'Male', 800000.00); CREATE TABLE investments (client_id INT, investment_type TEXT); INSERT INTO investments VALUES (1, 'Stocks'), (1, 'Bonds'), (2, 'Stocks'), (2, 'Mutual Funds'), (3, 'Mutual Funds'), (3, 'Real Estate');", "output": "SELECT c.total_assets FROM clients c INNER JOIN investments i1 ON c.client_id = i1.client_id INNER JOIN investments i2 ON c.client_id = i2.client_id AND i1.investment_type <> i2.investment_type GROUP BY c.client_id;"}
{"input": " \uc6b0\uc8fc \uc655\ubcf5\uc120\uacfc \uc18c\uc720\uc988 \uc6b0\uc8fc\uc120\uc744 \ubaa8\ub450 \ud0d4\ub358 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceShuttleAstronauts (AstronautName TEXT, Missions INTEGER);CREATE TABLE SoyuzAstronauts (AstronautName TEXT, Missions INTEGER);", "output": "SELECT AstronautName FROM SpaceShuttleAstronauts WHERE Missions > 1 INTERSECT SELECT AstronautName FROM SoyuzAstronauts WHERE Missions > 1;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \ubc1c\uad74 \ud604\uc7a5 2\uacf3\uc5d0\uc11c \uc5b4\ub5a4 \uc720\ubb3c\uc774 \ubc1c\uacac\ub410\ub098\uc694?", "context": "CREATE TABLE artifacts (site_id INT, artifact_name VARCHAR(255)); INSERT INTO artifacts (site_id, artifact_name) VALUES (1, 'Pottery'), (1, 'Bronze Sword'), (2, 'Clay Figurine'), (3, 'Copper Pendant');", "output": "SELECT a.artifact_name FROM artifacts a JOIN (SELECT site_id FROM excavation_sites WHERE ROW_NUMBER() OVER (ORDER BY depth DESC) <= 2) b ON a.site_id = b.site_id;"}
{"input": " \ud53c\ud06c \uc2dc\uac04\uc774 \uc544\ub2d0 \ub54c '\ub808\ub4dc \ub77c\uc778' \ub178\uc120\uc758 \ud3b8\ub3c4\ub2f9 \ud3c9\uade0 \uc2b9\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Routes (RouteID int, RouteName varchar(255), Region varchar(255)); INSERT INTO Routes (RouteID, RouteName, Region) VALUES (1, 'North', 'East'), (2, 'South', 'Central'), (3, 'West', 'West'), (4, 'Red Line', 'East'); CREATE TABLE Trips (TripID int, RouteID int, Passengers int, TripDateTime datetime); CREATE TABLE PeakHours (PeakHourID int, StartTime time, EndTime time); INSERT INTO PeakHours (PeakHourID, StartTime, EndTime) VALUES (1, '06:00', '09:00'), (2, '16:00', '19:00');", "output": "SELECT AVG(Passengers) FROM Routes JOIN Trips ON Routes.RouteID = Trips.RouteID JOIN PeakHours ON Trips.TripDateTime BETWEEN PeakHours.StartTime AND PeakHours.EndTime WHERE Routes.RouteName = 'Red Line' AND NOT (PeakHours.StartTime BETWEEN '06:00' AND '09:00' OR PeakHours.StartTime BETWEEN '16:00' AND '19:00');"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac00\uc7a5 \uc790\uc8fc \ud45c\uc801\uc774 \ub41c \uc2dc\uc2a4\ud15c \uc0c1\uc704 5\uac1c\ub97c \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218 \uae30\uc900\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE security_incidents (id INT, system VARCHAR(255), incident_date DATE); INSERT INTO security_incidents (id, system, incident_date) VALUES (1, 'System X', '2021-08-30'), (2, 'System Y', '2021-08-30'), (3, 'System Z', '2021-08-31'), (4, 'System X', '2021-08-31'), (5, 'System W', '2021-08-31'), (6, 'System X', '2021-09-01');", "output": "SELECT system, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank FROM security_incidents WHERE incident_date >= DATEADD(week, -1, GETDATE()) GROUP BY system;"}
{"input": " \uc0c1\uc704 10\uac1c \uae30\ubd80\uc790\ub97c \uc81c\uc678\ud55c \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uae30\ubd80\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, Region TEXT, DonationAmount DECIMAL(10,2)); INSERT INTO Donors VALUES (1, 'John Smith', 'Asia-Pacific', 500.00), (2, 'Jane Doe', 'Americas', 300.00), (3, 'Mary Major', 'Asia-Pacific', 750.00);", "output": "SELECT AVG(DonationAmount) FROM (SELECT DonationAmount, ROW_NUMBER() OVER (PARTITION BY Region ORDER BY DonationAmount DESC) as rn FROM Donors WHERE Region = 'Asia-Pacific') tmp WHERE rn > 10;"}
{"input": " \uc9c0\ub09c\ud574 \uc0c1\uc704 3\uac1c \uace0\uac1d\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c \uc8fc\ubb38 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE orders (order_id INT, customer_id INT, sustainable BOOLEAN);CREATE TABLE customers (customer_id INT, name VARCHAR(50));", "output": "SELECT name, PERCENTAGE(COUNT(*) FILTER (WHERE sustainable)) OVER (PARTITION BY name) FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id WHERE order_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uc774\ud0c8\ub9ac\uc544\ub97c \ubc29\ubb38\ud55c \ud574\uc678 \uad00\uad11\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourists (tourist_id INT, visited_date DATE, country TEXT); INSERT INTO tourists (tourist_id, visited_date, country) VALUES (1, '2020-01-01', 'Italy'), (2, '2019-05-05', 'USA'), (3, '2018-12-31', 'Italy');", "output": "SELECT COUNT(*) FROM tourists WHERE country = 'Italy' AND visited_date >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR);"}
{"input": " \uac01 \ub098\ub77c \ub18d\ubbfc\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farmer (farmer_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), location VARCHAR(50)); CREATE TABLE country (country_id INT, name VARCHAR(50), description TEXT); CREATE TABLE location (location_id INT, name VARCHAR(50), country_id INT);", "output": "SELECT l.name, AVG(f.age) FROM farmer f JOIN location l ON f.location = l.name JOIN country c ON l.country_id = c.country_id GROUP BY l.name;"}
{"input": " \ubca0\ub97c\ub9b0\uc5d0\uc11c \uc790\uc728\ud0dd\uc2dc \uc6b4\ud589\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE taxi_rides (id INT, distance FLOAT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO taxi_rides (id, distance, type, city) VALUES (1, 5.3, 'Autonomous', 'Berlin');", "output": "SELECT AVG(distance) FROM taxi_rides WHERE type = 'Autonomous' AND city = 'Berlin';"}
{"input": " \ud574\uc591 \ud574\uad6c\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_trenches (trench_name TEXT, location TEXT, avg_depth FLOAT); INSERT INTO ocean_trenches VALUES ('Mariana Trench', 'Pacific Ocean', 8178), ('Tonga Trench', 'South Pacific Ocean', 10820), ('Kuril-Kamchatka Trench', 'Pacific Ocean', 8340);", "output": "SELECT AVG(avg_depth) FROM ocean_trenches;"}
{"input": " \uc791\ub144\uc5d0 '\uc911\uc559' \uc9c0\uc5ed\uc5d0\uc11c \uc2dc\ud589\ub41c \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE district (did INT, district_name VARCHAR(255)); INSERT INTO district (did, district_name) VALUES (1, 'Central'), (2, 'North'), (3, 'South'); CREATE TABLE community_policing (program_id INT, did INT, program_name VARCHAR(255), program_start_date DATE);", "output": "SELECT program_name FROM community_policing WHERE did = 1 AND program_start_date >= DATEADD(year, -1, GETDATE());"}
{"input": " \ub85c\ud14c\ub974\ub2f4 \ud56d\uc5d0\uc11c \uc6b4\ud56d\ub418\ub294 \uc120\ubc15\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uaddc\uc815\uc744 \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Regulation (id INT PRIMARY KEY, name VARCHAR(50), description VARCHAR(50)); CREATE TABLE Vessel_Regulation (vessel_id INT, regulation_id INT, PRIMARY KEY (vessel_id, regulation_id), FOREIGN KEY (vessel_id) REFERENCES Vessel(id), FOREIGN KEY (regulation_id) REFERENCES Regulation(id)); CREATE TABLE Port (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50)); CREATE TABLE Vessel (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50), port_id INT, FOREIGN KEY (port_id) REFERENCES Port(id));", "output": "SELECT R.name FROM Regulation R JOIN Vessel_Regulation VR ON R.id = VR.regulation_id JOIN Vessel V ON VR.vessel_id = V.id JOIN Port P ON V.port_id = P.id WHERE P.name = 'Rotterdam';"}
{"input": " \ucc3d\uace0 K\uc640 \ucc3d\uace0 L\uc5d0 \uc788\ub294 'C' \uc720\ud615 \ud488\ubaa9\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_k(item_id INT, item_type VARCHAR(10), quantity INT);CREATE TABLE warehouse_l(item_id INT, item_type VARCHAR(10), quantity INT);INSERT INTO warehouse_k(item_id, item_type, quantity) VALUES (1, 'C', 200), (2, 'C', 300), (3, 'C', 50);INSERT INTO warehouse_l(item_id, item_type, quantity) VALUES (1, 'C', 150), (2, 'C', 250), (3, 'C', 40);", "output": "SELECT quantity FROM warehouse_k WHERE item_type = 'C' UNION ALL SELECT quantity FROM warehouse_l WHERE item_type = 'C';"}
{"input": "\uac01 \ud68c\uc0ac\uac00 \ubc1c\uc0ac\ud55c \uc704\uc131\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT PRIMARY KEY, company VARCHAR(50), launch_year INT); INSERT INTO satellites (id, company, launch_year) VALUES (1, 'SpaceX', 2018), (2, 'Rocket Lab', 2019), (3, 'SpaceX', 2020), (4, 'Rocket Lab', 2021);", "output": "SELECT company, COUNT(*) FROM satellites GROUP BY company;"}
{"input": " \ub300\uc11c\uc591\uacfc \ud0dc\ud3c9\uc591\uc5d0 \ubaa8\ub450 \uc11c\uc2dd\ud558\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species_ocean (species_name VARCHAR(50), ocean_name VARCHAR(50)); INSERT INTO marine_species_ocean (species_name, ocean_name) VALUES ('Salmon', 'Pacific'), ('Sea Otter', 'Pacific'), ('Bluefin Tuna', 'Atlantic');", "output": "SELECT species_name FROM marine_species_ocean WHERE ocean_name IN ('Atlantic', 'Pacific') GROUP BY species_name HAVING COUNT(DISTINCT ocean_name) = 2;"}
{"input": " '\ubc30\ud3ec' \ub2e8\uacc4\uc5d0\uc11c \ud558\ub098 \uc774\uc0c1\uc758 \ud2b8\ub79c\uc7ad\uc158\uc774 \uc788\ub294 \ubaa8\ub378\uc758 \ucd1d \ud2b8\ub79c\uc7ad\uc158 \uc218\uc640 \uc131\uacf5\ud55c \ud2b8\ub79c\uc7ad\uc158 \uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (id INT, model_id INT, phase VARCHAR(50), status VARCHAR(50), created_at DATETIME); INSERT INTO transactions (id, model_id, phase, status, created_at) VALUES (1, 1, 'Training', 'Success', '2021-01-01 10:00:00'); INSERT INTO transactions (id, model_id, phase, status, created_at) VALUES (2, 2, 'Validation', 'Failure', '2021-01-02 11:00:00'); INSERT INTO transactions (id, model_id, phase, status, created_at) VALUES (3, 2, 'Deployment', 'Success', '2021-01-03 12:00:00'); INSERT INTO transactions (id, model_id, phase, status, created_at) VALUES (4, 3, 'Deployment', 'Failure', '2021-01-04 13:00:00'); INSERT INTO transactions (id, model_id, phase, status, created_at) VALUES (5, 3, 'Deployment', 'Success', '2021-01-05 14:00:00');", "output": "SELECT model_id, COUNT(*) as total_transactions, SUM(CASE WHEN status = 'Success' THEN 1 ELSE 0 END) as successful_transactions FROM transactions WHERE model_id IN (SELECT model_id FROM transactions WHERE phase = 'Deployment' GROUP BY model_id HAVING COUNT(*) > 0) GROUP BY model_id;"}
{"input": " \uac01 \uc8fc\uc758 \ub9e4\uc7a5 \uc218 \uacb0\uc815", "context": "CREATE TABLE stores (store_id INT, city VARCHAR(255), state VARCHAR(255)); INSERT INTO stores (store_id, city, state) VALUES (1, 'Seattle', 'WA'), (2, 'New York', 'NY'), (3, 'Los Angeles', 'CA');", "output": "SELECT state, COUNT(DISTINCT store_id) FROM stores GROUP BY state;"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uac00 \uac1c\ucd5c\ub418\uc5c8\uc73c\uba70, \ud55c \uad6d\uac00\uc5d0\uc11c \uac1c\ucd5c\ub418\ub294 \ucd5c\ub300 \uc774\ubca4\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EsportsEvents (id INT, name VARCHAR(50), country VARCHAR(50), num_events INT); INSERT INTO EsportsEvents (id, name, country, num_events) VALUES (1, 'Event1', 'USA', 2), (2, 'Event2', 'Canada', 3), (3, 'Event3', 'USA', 5);", "output": "SELECT country, COUNT(*) AS num_events, MAX(num_events) AS max_events_per_country FROM EsportsEvents GROUP BY country;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uac70\ub798 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE transactions (user_id INT, transaction_amount DECIMAL(10, 2), transaction_date DATE, country VARCHAR(255)); INSERT INTO transactions (user_id, transaction_amount, transaction_date, country) VALUES (1, 50.00, '2022-01-01', 'Canada'), (2, 100.50, '2022-01-02', 'Canada'), (3, 200.00, '2022-01-03', 'Canada'), (4, 150.00, '2022-01-04', 'Canada');", "output": "SELECT user_id, transaction_amount FROM (SELECT user_id, transaction_amount, ROW_NUMBER() OVER (ORDER BY transaction_amount DESC) as rank FROM transactions WHERE country = 'Canada') as ranked_transactions WHERE rank <= 3;"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \uc9d1\ub2e8\uc774 \uc124\ub9bd\ud55c \uc131\uacf5\uc801\uc778 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE SuccessfulStartups(id INT, name TEXT, country TEXT, racial_ethnicity TEXT, success BOOLEAN, founding_year INT);   INSERT INTO SuccessfulStartups VALUES (1, 'FemTech', 'USA', 'African American', true, 2015), (2, 'GreenCity', 'Canada', 'Caucasian', false, 2018), (3, 'AI-Health', 'UK', 'Asian', true, 2017), (4, 'SolarEnergy', 'Australia', 'Indigenous', false, 2019), (5, 'DataAnalytics', 'Germany', 'Middle Eastern', true, 2016), (6, 'SmartGrid', 'USA', 'Latinx', true, 2020), (7, 'CloudServices', 'India', 'South Asian', false, 2018), (8, 'RenewableEnergy', 'Brazil', 'African', true, 2019), (9, 'WasteManagement', 'SouthAfrica', 'Coloured', false, 2017);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM SuccessfulStartups WHERE racial_ethnicity NOT IN ('Caucasian', 'Asian')) AS percentage FROM SuccessfulStartups WHERE success = true AND founding_year >= YEAR(CURRENT_DATE) - 10 AND racial_ethnicity NOT IN ('Caucasian', 'Asian');"}
{"input": " \uc120\ubc15 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uc120\ubc15\uc774 \ubc29\ubb38\ud55c \uace0\uc720 \ud56d\uad6c \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VESSEL_TYPES (ID INT, NAME VARCHAR(50)); INSERT INTO VESSEL_TYPES VALUES (1, 'Container Ship'); INSERT INTO VESSEL_TYPES VALUES (2, 'Bulk Carrier');", "output": "SELECT VT.NAME AS VESSEL_TYPE, COUNT(DISTINCT P.PORT) AS PORT_COUNT, RANK() OVER(ORDER BY COUNT(DISTINCT P.PORT) DESC) AS RANK FROM PORT_CALLS PC JOIN VESSELS V ON PC.VESSEL_ID = V.ID JOIN VESSEL_TYPES VT ON V.VESSEL_TYPE = VT.ID GROUP BY VT.ID, VT.NAME"}
{"input": " \uac01 \ub9e4\uc7a5\uc5d0 \uc788\ub294 non-GMO \uacfc\uc77c\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Stores (store_id INT, store_name VARCHAR(255)); CREATE TABLE Products (product_id INT, product_name VARCHAR(255), is_non_gmo BOOLEAN, weight INT, product_category VARCHAR(255)); CREATE TABLE Inventory (store_id INT, product_id INT, quantity INT);", "output": "SELECT s.store_name, p.product_category, SUM(i.quantity * p.weight) as total_weight FROM Inventory i JOIN Stores s ON i.store_id = s.store_id JOIN Products p ON i.product_id = p.product_id WHERE p.is_non_gmo = TRUE AND p.product_category = 'fruit' GROUP BY s.store_name, p.product_category;"}
{"input": " \uc0c1\uc704 5\uac1c \uc8fc\uc758 \uc6a9\ub7c9\ubcc4\ub85c \uc21c\uc704\ub97c \ub9e4\uae34 \uba55\uc2dc\ucf54\uc758 \ucd1d \ud48d\ub825 \uc5d0\ub108\uc9c0 \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_energy_capacity_mx (state VARCHAR(50), capacity INT); INSERT INTO wind_energy_capacity_mx (state, capacity) VALUES ('Oaxaca', 2000), ('Tamaulipas', 1500), ('Jalisco', 1200), ('Veracruz', 1000), ('Yucatan', 800);", "output": "SELECT state, capacity, RANK() OVER (ORDER BY capacity DESC) as capacity_rank FROM wind_energy_capacity_mx WHERE state IN ('Oaxaca', 'Tamaulipas', 'Jalisco', 'Veracruz', 'Yucatan') ORDER BY capacity_rank;"}
{"input": " \uc5ec\uc131 \ud32c \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \ud300\uacfc \uac00\uc7a5 \ub0ae\uc740 \ud300\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Teams (TeamID INT, TeamName VARCHAR(50), FemaleFanPercentage DECIMAL(5,2));", "output": "SELECT TeamName FROM Teams WHERE FemaleFanPercentage = (SELECT MAX(FemaleFanPercentage) FROM Teams) OR FemaleFanPercentage = (SELECT MIN(FemaleFanPercentage) FROM Teams);"}
{"input": " \ub18d\uad6c \uacbd\uae30 VIP \ubc0f \uc2dc\uc98c\uad8c\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE basketball_sales(id INT, tickets_type VARCHAR(10), tickets INT); INSERT INTO basketball_sales(id, tickets_type, tickets) VALUES (1, 'VIP', 300), (2, 'Season', 2000), (3, 'VIP', 400), (4, 'Season', 2500);", "output": "SELECT SUM(tickets) FROM basketball_sales WHERE tickets_type = 'VIP' UNION ALL SELECT SUM(tickets) FROM basketball_sales WHERE tickets_type = 'Season';"}
{"input": " '\ud799\ud569' \uc7a5\ub974 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ub178\ub798\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud588\uc9c0\ub9cc '\ud31d' \uc7a5\ub974 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ub178\ub798\ub294 \uc2a4\ud2b8\ub9ac\ubc0d\ud558\uc9c0 \uc54a\uc740 \uc21c \uc0ac\uc6a9\uc790 \uc218\ub97c \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE Streams (StreamID INT, UserID INT, ArtistID INT, Genre VARCHAR(10)); INSERT INTO Streams (StreamID, UserID, ArtistID, Genre) VALUES (1, 101, 1, 'Hip Hop'), (2, 101, 2, 'Hip Hop'), (3, 102, 3, 'Jazz'), (4, 102, 4, 'Pop'), (5, 103, 1, 'Hip Hop'), (6, 103, 3, 'Jazz');", "output": "SELECT COUNT(DISTINCT UserID) AS UniqueUsers FROM (SELECT UserID FROM Streams JOIN Genres ON Streams.Genre = Genres.Genre WHERE Genre = 'Hip Hop' EXCEPT SELECT UserID FROM Streams JOIN Genres ON Streams.Genre = Genres.Genre WHERE Genre = 'Pop');"}
{"input": "2021 \uac00\uc744'\uacfc '2021 \uaca8\uc6b8' \uceec\ub809\uc158\uc744 \uc704\ud574 \uba87 \uac1c\uc758 \uc758\ub958\uac00 \uc81c\uc791\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE garment_manufacturing (collection VARCHAR(20), quantity INT); INSERT INTO garment_manufacturing (collection, quantity) VALUES ('Fall 2021', 4000), ('Winter 2021', 5000);", "output": "SELECT collection, SUM(quantity) FROM garment_manufacturing WHERE collection IN ('Fall 2021', 'Winter 2021') GROUP BY collection;"}
{"input": " EMEA\uc5d0\uc11c \ub9e4\ub144 \ucd9c\ud310\ub418\ub294 \uc724\ub9ac\uc801 AI \uc5f0\uad6c \ub17c\ubb38\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai_research (publication_year INT, num_papers INT, region VARCHAR(255)); INSERT INTO ethical_ai_research (publication_year, num_papers, region) VALUES (2018, 250, 'EMEA'), (2019, 300, 'EMEA'), (2020, 350, 'EMEA'), (2021, 400, 'EMEA');", "output": "SELECT publication_year, num_papers, (num_papers / SUM(num_papers) OVER (PARTITION BY region)) * 100.0 AS pct_per_year FROM ethical_ai_research WHERE region = 'EMEA';"}
{"input": " \ub3c4\uc2dc\uc640 \ub18d\ucd0c \uc9c0\uc5ed\uc758 \ud3c9\uade0 \ubd80\ub3d9\uc0b0 \uac00\uaca9 \ucc28\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE property_location ( id INT PRIMARY KEY, price FLOAT, location VARCHAR(255) ); INSERT INTO property_location (id, price, location) VALUES (1, 500000, 'urban'), (2, 300000, 'rural'), (3, 400000, 'urban');", "output": "SELECT AVG(price_urban) - AVG(price_rural) FROM (SELECT price FROM property_location WHERE location = 'urban') AS price_urban JOIN (SELECT price FROM property_location WHERE location = 'rural') AS price_rural ON 1=1;"}
{"input": " \uc138\uacc4 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ud574\uc0c1\uc548\uc804\uc0ac\uace0\ub294 \uc5bc\ub9c8\ub098 \ubc1c\uc0dd\ud588\ub098\uc694?", "context": "CREATE TABLE maritime_safety_incidents (region TEXT, year INT, incidents INT); INSERT INTO maritime_safety_incidents (region, year, incidents) VALUES ('North America', 2010, 30), ('South America', 2010, 20), ('Europe', 2010, 40), ('Africa', 2010, 50), ('Asia', 2010, 60), ('Australia', 2010, 70), ('North America', 2011, 35), ('South America', 2011, 25), ('Europe', 2011, 45), ('Africa', 2011, 55), ('Asia', 2011, 65), ('Australia', 2011, 75);", "output": "SELECT region, COUNT(*) FROM maritime_safety_incidents GROUP BY region;"}
{"input": " \ucde8\uc18c\ub41c \uac70\ub798\ub97c \uc81c\uc678\ud55c \uc9c0\ub09c \ubd84\uae30 \uac8c\uc784 \uc7a5\ub974\ubcc4 \ucd1d \uc218\uc775\uc744 \uc7a5\ub974\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE games(id INT, name VARCHAR(50), genre VARCHAR(50), revenue FLOAT); CREATE TABLE transactions(id INT, game_id INT, transaction_date DATE, amount FLOAT, status VARCHAR(50));", "output": "SELECT genres.genre, SUM(transactions.amount) as total_revenue FROM games JOIN transactions ON games.name = transactions.game_id JOIN (SELECT DISTINCT game_name, genre FROM games) genres ON games.genre = genres.genre WHERE transactions.transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND transactions.status = 'completed' GROUP BY genres.genre;"}
{"input": " \uc778\uad6c\uac00 500,000\uba85\uc774 \ub118\ub294 \ub3c4\uc2dc\uc5d0\uc11c \uac01 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CityBudget (CityName VARCHAR(50), Service VARCHAR(50), Budget INT, Population INT); INSERT INTO CityBudget (CityName, Service, Budget, Population) VALUES ('CityA', 'Waste Collection', 5000000, 600000), ('CityA', 'Street Lighting', 7000000, 600000), ('CityB', 'Water Supply', 8000000, 800000), ('CityB', 'Road Maintenance', 9000000, 800000);", "output": "SELECT Service, SUM(Budget) OVER(PARTITION BY Service) as TotalBudget FROM CityBudget WHERE Population > 500000;"}
{"input": " \ub3c5\uc77c \ub0b4 \ud68c\uc0ac \uc704\uce58\uc758 \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company_locations (location_id INT, location_name VARCHAR(255), country VARCHAR(255)); INSERT INTO company_locations (location_id, location_name, country) VALUES (1, 'Munich Headquarters', 'Germany'), (2, 'Berlin Office', 'Germany'); CREATE TABLE departments (department_id INT, department_name VARCHAR(255)); INSERT INTO departments (department_id, department_name) VALUES (1, 'Engineering'), (2, 'Marketing'), (3, 'Human Resources'); CREATE TABLE employees (employee_id INT, employee_name VARCHAR(255), department_id INT, location_id INT, salary DECIMAL(10, 2));", "output": "SELECT d.department_name, AVG(e.salary) as avg_salary FROM employees e JOIN departments d ON e.department_id = d.department_id JOIN company_locations cl ON e.location_id = cl.location_id WHERE cl.country = 'Germany' GROUP BY d.department_name;"}
{"input": "\ub2ec\ub77c\uc2a4 \ucc3d\uace0\uc5d0\uc11c \uc911\ub3d9\uae4c\uc9c0 \ud558\ub8e8\uc5d0 \ubc30\uc1a1\ub418\ub294 \ucd5c\ub300 \ud328\ud0a4\uc9c0 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO Warehouse (id, name, location) VALUES (1, 'Dallas', 'USA'); CREATE TABLE Shipment (id INT, warehouse_id INT, region VARCHAR(50), shipment_date DATE, volume INT); INSERT INTO Shipment (id, warehouse_id, region, shipment_date, volume) VALUES (1, 1, 'Middle East', '2022-01-01', 100), (2, 1, 'Middle East', '2022-01-02', 150), (3, 1, 'Europe', '2022-01-03', 120);", "output": "SELECT MAX(volume) FROM Shipment WHERE warehouse_id = (SELECT id FROM Warehouse WHERE location = 'Dallas') AND region = 'Middle East' GROUP BY shipment_date;"}
{"input": " \uc804\ub0a0\uc5d0 \ube44\ud574 \ubb3c \uc18c\ube44\ub7c9\uc774 \uc99d\uac00\ud55c \uad11\uc0b0\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE daily_mine_water_consumption (mine_id INT, consumption_date DATE, total_water_consumption FLOAT); INSERT INTO daily_mine_water_consumption (mine_id, consumption_date, total_water_consumption) VALUES (1, '2021-01-01', 30000), (1, '2021-01-02', 31000), (1, '2021-01-03', 32000), (1, '2021-01-04', 33000), (2, '2021-01-01', 40000), (2, '2021-01-02', 41000), (2, '2021-01-03', 42000), (2, '2021-01-04', 41000);", "output": "SELECT mine_id, consumption_date, total_water_consumption, LAG(total_water_consumption) OVER (PARTITION BY mine_id ORDER BY consumption_date) as prev_day_consumption, total_water_consumption - LAG(total_water_consumption) OVER (PARTITION BY mine_id ORDER BY consumption_date) as consumption_change FROM daily_mine_water_consumption WHERE total_water_consumption > LAG(total_water_consumption) OVER (PARTITION BY mine_id ORDER BY consumption_date);"}
{"input": " 'Shell'\uc774 \ubc1c\uacac\ud55c \ud544\ub4dc \uc218 \ud45c\uc2dc", "context": "CREATE TABLE fields (field_id INT, field_name VARCHAR(255), operator VARCHAR(255), discovery_date DATE);", "output": "SELECT COUNT(*) FROM fields WHERE operator = 'Shell';"}
{"input": " 2021\ub144 \uc544\uc2dc\uc544 \uc544\ud2f0\uc2a4\ud2b8 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE tickets (ticket_id INT, concert_id INT, ticket_price DECIMAL(10, 2)); CREATE TABLE concert_revenue (concert_id INT, total_revenue DECIMAL(10, 2)); INSERT INTO tickets (ticket_id, concert_id, ticket_price) VALUES (1, 1, 100.00), (2, 1, 200.00), (3, 2, 50.00), (4, 3, 75.00); INSERT INTO concert_revenue (concert_id, total_revenue) VALUES (1, NULL), (2, NULL), (3, NULL);", "output": "UPDATE concert_revenue SET total_revenue = (SELECT SUM(ticket_price) FROM tickets JOIN concerts ON tickets.concert_id = concerts.concert_id WHERE concerts.artist_id IN (SELECT artist_id FROM artists WHERE artist_country = 'Asia') AND YEAR(concerts.concert_date) = 2021) WHERE concert_id IN (1, 2, 3); SELECT SUM(total_revenue) FROM concert_revenue;"}
{"input": " 2020\ub144 \ud638\uc8fc \uc8fc\ubcc4 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE australia_water_consumption (id INT, state VARCHAR(50), water_consumption FLOAT, year INT); INSERT INTO australia_water_consumption (id, state, water_consumption, year) VALUES (1, 'New South Wales', 12000000, 2020); INSERT INTO australia_water_consumption (id, state, water_consumption, year) VALUES (2, 'Victoria', 10000000, 2020); INSERT INTO australia_water_consumption (id, state, water_consumption, year) VALUES (3, 'Queensland', 8000000, 2020); INSERT INTO australia_water_consumption (id, state, water_consumption, year) VALUES (4, 'Western Australia', 6000000, 2020);", "output": "SELECT MAX(water_consumption) AS max_water_consumption, MIN(water_consumption) AS min_water_consumption FROM australia_water_consumption WHERE year = 2020;"}
{"input": " 1850\ub144\uc5d0\uc11c 1900\ub144 \uc0ac\uc774\uc5d0 \uc2a4\ud398\uc778\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc608\uc220\ud488\uc774 \uc804\uc2dc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, title VARCHAR(50), year_made INT, artist_id INT, price FLOAT); INSERT INTO Artworks (artwork_id, title, year_made, artist_id, price) VALUES (1, 'The Card Players', 1892, 1, 3000.0); CREATE TABLE Exhibitions (exhibition_id INT, exhibition_name VARCHAR(50), start_date DATE, end_date DATE, artwork_id INT); INSERT INTO Exhibitions (exhibition_id, exhibition_name, start_date, end_date, artwork_id) VALUES (1, 'Art Exhibition', '1900-01-01', '1900-12-31', 1);", "output": "SELECT COUNT(*) FROM Exhibitions WHERE Exhibitions.start_date BETWEEN '1850-01-01' AND '1900-12-31' AND Exhibitions.country = 'Spain';"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \uac74\uc870\ub41c \uc120\ubc15\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE vessels (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50), length FLOAT, year_built INT);", "output": "SELECT name, year_built FROM vessels WHERE year_built = (SELECT MAX(year_built) FROM vessels);"}
{"input": " \ubb3c\ub9ac\ud559\uacfc \ub300\ud559\uc6d0\uc0dd 1\uc778\ub2f9 \ucd1d \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE graduate_students (id INT, name VARCHAR(50), department VARCHAR(50), enrollment_date DATE); CREATE TABLE publications (id INT, student_id INT, title VARCHAR(100), publication_date DATE);", "output": "SELECT student_id, COUNT(*) FROM publications WHERE student_id IN (SELECT id FROM graduate_students WHERE department = 'Physics') GROUP BY student_id;"}
{"input": " 'ClinicalTrial789'\uc5d0\ub294 \uc5b4\ub290 \uad6d\uac00\uac00 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE clinical_trials (trial_id TEXT, country TEXT); INSERT INTO clinical_trials (trial_id, country) VALUES ('ClinicalTrial123', 'USA'), ('ClinicalTrial123', 'Canada'), ('ClinicalTrial456', 'Mexico'), ('ClinicalTrial789', 'India'), ('ClinicalTrial789', 'Nepal');", "output": "SELECT DISTINCT country FROM clinical_trials WHERE trial_id = 'ClinicalTrial789';"}
{"input": " \uce90\ub098\ub2e4 \ud658\uacbd \ubd80\ubb38\uc758 \ube44\uc601\ub9ac \ub2e8\uccb4\uac00 \uc8fc\ucd5c\ud558\ub294 \ud589\uc0ac\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, city TEXT); CREATE TABLE events (event_id INT, event_name TEXT, city TEXT); CREATE TABLE nonprofit_events (nonprofit_id INT, event_id INT); CREATE TABLE nonprofits (nonprofit_id INT, nonprofit_name TEXT, sector TEXT); INSERT INTO volunteers VALUES (1, 'Jane Smith', 'Toronto'); INSERT INTO events VALUES (1, 'Tree Planting Festival', 'Toronto'); INSERT INTO nonprofit_events VALUES (1, 1); INSERT INTO nonprofits VALUES (1, 'Green Toronto', 'environment');", "output": "SELECT COUNT(DISTINCT v.volunteer_id) as total_volunteers FROM volunteers v JOIN nonprofit_events ne ON v.city = ne.city JOIN events e ON ne.event_id = e.event_id JOIN nonprofits n ON ne.nonprofit_id = n.nonprofit_id WHERE n.sector = 'environment';"}
{"input": " \uac00\uaca9\uc744 \uae30\uc900\uc73c\ub85c VR \ud50c\ub7ab\ud3fc\uc758 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c? \uac00\uc7a5 \uc800\ub834\ud55c \uac83\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc21c\uc704\uc774\uace0, \uac00\uc7a5 \ube44\uc2fc \uac83\uc774 \uac00\uc7a5 \ub192\uc740 \uc21c\uc704\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE VRPlatforms (PlatformID INT, PlatformName VARCHAR(50), ReleaseDate DATE, Price DECIMAL(5,2)); INSERT INTO VRPlatforms (PlatformID, PlatformName, ReleaseDate, Price) VALUES (1, 'Oculus Rift', '2016-03-28', 599.00); INSERT INTO VRPlatforms (PlatformID, PlatformName, ReleaseDate, Price) VALUES (2, 'HTC Vive', '2016-04-05', 799.00); INSERT INTO VRPlatforms (PlatformID, PlatformName, ReleaseDate, Price) VALUES (3, 'PlayStation VR', '2016-10-13', 399.00); INSERT INTO VRPlatforms (PlatformID, PlatformName, ReleaseDate, Price) VALUES (4, 'Valve Index', '2019-06-28', 999.00);", "output": "SELECT PlatformName, ROW_NUMBER() OVER (ORDER BY Price DESC) AS Rank FROM VRPlatforms;"}
{"input": " \uac01 \ubd80\uc11c\uc5d0\uc11c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uba87 \ubc88\uc758 \uad50\uc721\uc774 \uc2e4\uc2dc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, FirstName varchar(50), LastName varchar(50), Department varchar(50)); CREATE TABLE Trainings (TrainingID int, EmployeeID int, TrainingTitle varchar(100), TrainingDate date, Department varchar(50)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (1, 'John', 'Doe', 'IT'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (2, 'Jane', 'Smith', 'HR'); INSERT INTO Trainings (TrainingID, EmployeeID, TrainingTitle, TrainingDate, Department) VALUES (1, 1, 'SQL Fundamentals', '2020-01-01', 'IT'); INSERT INTO Trainings (TrainingID, EmployeeID, TrainingTitle, TrainingDate, Department) VALUES (2, 1, 'Intermediate SQL', '2020-02-01', 'IT'); INSERT INTO Trainings (TrainingID, EmployeeID, TrainingTitle, TrainingDate, Department) VALUES (3, 2, 'Diversity and Inclusion', '2020-01-01', 'HR');", "output": "SELECT Department, COUNT(*) as TrainingCount FROM Trainings GROUP BY Department ORDER BY TrainingCount DESC;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud558\uace0 \uc724\ub9ac\uc801\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ubaa8\ub4e0 \ud488\ubaa9\uc758 \ucd1d \uac00\uaca9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE standards (id INT, item_id INT, standard VARCHAR(255)); INSERT INTO standards (id, item_id, standard) VALUES (1, 1, 'sustainable'), (2, 1, 'ethical'), (3, 2, 'sustainable'), (4, 3, 'ethical');", "output": "SELECT SUM(price) FROM sales s JOIN methods m ON s.item_id = m.item_id JOIN standards st ON s.item_id = st.item_id WHERE m.method = 'circular' AND st.standard IN ('sustainable', 'ethical');"}
{"input": " \ud0c4\uc18c \uaca9\ub9ac\uc728\uc774 \ub192\uc740 \uc218\ud655\uc744 \uc704\ud55c \uc232, \uc218\ud655 \ub0a0\uc9dc, \uc218\ud655\ub7c9\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Forests ( ForestID INT PRIMARY KEY, Name VARCHAR(50), Country VARCHAR(50), Hectares FLOAT ); CREATE TABLE Harvest ( HarvestID INT PRIMARY KEY, Volume FLOAT, ForestID INT, HarvestDate DATE, FOREIGN KEY (ForestID) REFERENCES Forests(ForestID)); CREATE TABLE Carbon ( CarbonID INT PRIMARY KEY, Sequestration FLOAT, HarvestID INT, FOREIGN KEY (HarvestID) REFERENCES Harvest(HarvestID)); CREATE VIEW HighCarbon AS SELECT HarvestID, Sequestration FROM Carbon WHERE Sequestration > 100;", "output": "SELECT Forests.Name, Harvest.HarvestDate, Harvest.Volume FROM Forests INNER JOIN Harvest ON Forests.ForestID = Harvest.ForestID INNER JOIN HighCarbon ON Harvest.HarvestID = HighCarbon.HarvestID;"}
{"input": " \ucf58\ud150\uce20 \uc81c\uc791 \ubc0f \ucc38\uc5ec \uce21\uba74\uc5d0\uc11c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc0c1\uc704 5\uba85\uc758 \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc774\uba70, \uc774\ub4e4\uc758 \ucd1d \uc0c1\ud638 \uc791\uc6a9 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, username VARCHAR(50)); CREATE TABLE content (id INT, user_id INT, content_time TIMESTAMP); CREATE TABLE likes (content_id INT, user_id INT, like_time TIMESTAMP); CREATE TABLE comments (content_id INT, user_id INT, comment_time TIMESTAMP); CREATE TABLE shares (content_id INT, user_id INT, share_time TIMESTAMP);", "output": "SELECT users.username, COUNT(content.id) + COUNT(likes.content_id) + COUNT(comments.content_id) + COUNT(shares.content_id) as total_interactions FROM users LEFT JOIN content ON users.id = content.user_id LEFT JOIN likes ON users.id = likes.user_id LEFT JOIN comments ON users.id = comments.user_id LEFT JOIN shares ON users.id = shares.user_id GROUP BY users.username ORDER BY total_interactions DESC LIMIT 5;"}
{"input": " \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Meals (MealID INT, MealName VARCHAR(50), Vendor VARCHAR(50), Calories INT); INSERT INTO Meals (MealID, MealName, Vendor, Calories) VALUES (1, 'Spaghetti Bolognese', 'Pasta Palace', 650), (2, 'Chicken Tikka Masala', 'Curry House', 850);", "output": "SELECT Vendor, AVG(Calories) as AvgCalories FROM Meals GROUP BY Vendor ORDER BY AvgCalories DESC LIMIT 1;"}
{"input": " \uac01 \uc720\ud615\uc758 \ud574\uad70 \uc7a5\ube44\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc720\uc9c0 \uad00\ub9ac \uac04\uaca9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Equipment_Maintenance (Equipment_Type VARCHAR(255), Maintenance_Date DATE); INSERT INTO Equipment_Maintenance (Equipment_Type, Maintenance_Date) VALUES ('Aircraft', '2020-01-01'), ('Vehicles', '2020-02-15'), ('Naval', '2020-03-01'), ('Naval', '2020-03-05'), ('Naval', '2020-03-10');", "output": "SELECT Equipment_Type, AVG(DATEDIFF(day, LAG(Maintenance_Date) OVER (PARTITION BY Equipment_Type ORDER BY Maintenance_Date), Maintenance_Date)) as Avg_Maintenance_Interval FROM Equipment_Maintenance WHERE Equipment_Type = 'Naval' GROUP BY Equipment_Type;"}
{"input": " '\uc804\ub7b5' \uce74\ud14c\uace0\ub9ac\uc758 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Country) VALUES (1, 22, 'Brazil'), (2, 30, 'Canada'), (3, 25, 'China'), (4, 19, 'India'); CREATE TABLE GameLibrary (GameID INT, GameName VARCHAR(50), GameType VARCHAR(50), Category VARCHAR(50)); INSERT INTO GameLibrary (GameID, GameName, GameType, Category) VALUES (1, 'GameA', 'Non-VR', 'Strategy'), (2, 'GameB', 'Non-VR', 'Adventure'), (3, 'GameC', 'VR', 'Action'), (4, 'GameD', 'Non-VR', 'Strategy'); CREATE TABLE PlayerGameLibrary (PlayerID INT, GameID INT); INSERT INTO PlayerGameLibrary (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 1), (4, 3), (4, 4);", "output": "SELECT MIN(Players.Age) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE GameLibrary.Category = 'Strategy';"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc720\ub7fd \uc9c0\uc5ed \uac01 \uad6d\uac00\uc5d0 \ud56d\uacf5 \ud654\ubb3c\uc744 \ud1b5\ud574 \ubc1c\uc1a1\ub41c \ud654\ubb3c\uc758 \ucd1d \uc911\ub7c9\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Shipments (ShipmentID int, CarrierID int, ShippedWeight int, ShippedDate datetime, ShippingMethod varchar(255));CREATE TABLE Carriers (CarrierID int, CarrierName varchar(255), Region varchar(255)); INSERT INTO Carriers (CarrierID, CarrierName, Region) VALUES (1, 'Carrier A', 'Europe'); INSERT INTO Shipments (ShipmentID, CarrierID, ShippedWeight, ShippedDate, ShippingMethod) VALUES (1, 1, 100, '2022-01-01', 'Air Freight');", "output": "SELECT s.ShippingMethod, w.Country, SUM(s.ShippedWeight) as TotalWeight FROM Shipments s INNER JOIN Carriers c ON s.CarrierID = c.CarrierID INNER JOIN Warehouses w ON s.WarehouseID = w.WarehouseID WHERE s.ShippingMethod = 'Air Freight' AND c.Region = 'Europe' AND s.ShippedDate >= DATEADD(quarter, -1, GETDATE()) GROUP BY s.ShippingMethod, w.Country;"}
{"input": " \uae30\uc0ac \uc8fc\uc81c\uc758 \uc5b8\uc5b4\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT PRIMARY KEY, title TEXT, topic VARCHAR(255), language VARCHAR(50), agency_id INT, FOREIGN KEY (agency_id) REFERENCES news_agency(id));", "output": "SELECT language, topic, COUNT(*) as total FROM articles GROUP BY language, topic;"}
{"input": " 2010\ub144 \uc774\ud6c4 \ucc98\uc74c\uc73c\ub85c \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country_satellites (country VARCHAR(50), satellite_name VARCHAR(100), launched_date DATE); INSERT INTO country_satellites (country, satellite_name, launched_date) VALUES ('USA', 'USA-234', '2010-04-01'), ('Brazil', 'BRASILSAT B4', '2017-08-04');", "output": "SELECT country FROM country_satellites WHERE launched_date >= '2010-01-01' AND country NOT IN (SELECT country FROM country_satellites WHERE launched_date < '2010-01-01' GROUP BY country);"}
{"input": " \uac01 \ubd81\uadf9 \uc9c0\uc5ed\uc758 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ArcticIndigenousCommunities(region VARCHAR(50), community VARCHAR(50));INSERT INTO ArcticIndigenousCommunities(region, community) VALUES('Arctic Ocean', 'Inuit'), ('Arctic Tundra', 'Saami'), ('Arctic Ocean', 'Chukchi'), ('Arctic Tundra', 'Nenets'), ('Arctic Ocean', 'Yupik');", "output": "SELECT region, COUNT(DISTINCT community) FROM ArcticIndigenousCommunities GROUP BY region;"}
{"input": " \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc758 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c \uc218\ub97c \ud30c\uc545\ud558\uace0 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE areas (name text, type text, community text); INSERT INTO areas VALUES ('Urban', 'CityA', ''), ('Suburban', 'CityB', ''), ('Rural', 'CityC', 'Indigenous'), ('Rural', 'CityD', 'Indigenous'); CREATE TABLE hospitals (name text, area_type text); INSERT INTO hospitals VALUES ('Hospital1', 'Urban'), ('Hospital2', 'Rural'), ('Hospital3', 'Suburban'); CREATE TABLE clinics (name text, area_type text); INSERT INTO clinics VALUES ('Clinic1', 'Urban'), ('Clinic2', 'Rural'), ('Clinic3', 'Suburban');", "output": "SELECT (SELECT COUNT(*) FROM hospitals WHERE area_type = 'Rural' AND communities = 'Indigenous') / COUNT(DISTINCT areas.type) AS indigenous_hospital_ratio, (SELECT COUNT(*) FROM clinics WHERE area_type = 'Rural' AND communities = 'Indigenous') / COUNT(DISTINCT areas.type) AS indigenous_clinic_ratio"}
{"input": " '\uc9c0\uc18d\uac00\ub2a5\uc131'\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE interactions (user_id INT, post_id INT); CREATE TABLE posts (id INT, content TEXT);", "output": "SELECT DISTINCT u.username FROM users u LEFT JOIN interactions i ON u.id = i.user_id LEFT JOIN posts p ON i.post_id = p.id WHERE p.content NOT LIKE '%sustainability%';"}
{"input": " \uad6d\uac00\ubcc4 \ud3c9\uade0 \ud638\ud154 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT, rating FLOAT); INSERT INTO hotels (hotel_id, hotel_name, country, rating) VALUES (1, 'Hotel X', 'USA', 4.5), (2, 'Hotel Y', 'Canada', 4.2), (3, 'Hotel Z', 'Mexico', 4.7);", "output": "SELECT country, AVG(rating) as avg_rating FROM hotels GROUP BY country;"}
{"input": " \uc778\uae30 \uc21c\uc704\uac00 \uac00\uc7a5 \ub192\uc740 \ud328\uc158 \ud2b8\ub80c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fashion_trends (trend_id INT, trend_name VARCHAR(20), popularity INT, start_date DATE, end_date DATE); INSERT INTO fashion_trends (trend_id, trend_name, popularity, start_date, end_date) VALUES (2, 'Eco-friendly', 90, '2022-06-01', '2022-12-31'), (3, 'Streetwear', 80, '2022-01-01', '2022-12-31');", "output": "SELECT trend_id, trend_name, popularity, RANK() OVER (ORDER BY popularity DESC) as popularity_rank FROM fashion_trends;"}
{"input": " \uc720\ub7fd\uc758 \uc7a5\ub974\ubcc4 \uc791\ud488 \ucd9c\ud488 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Artwork (ArtworkID INT, Genre TEXT); INSERT INTO Artwork (ArtworkID, Genre) VALUES (1, 'Impressionism'), (2, 'Surrealism');", "output": "SELECT Genre, COUNT(*) as ArtworkCount FROM Artwork WHERE Continent = 'Europe' GROUP BY Genre;"}
{"input": " \ubd81\ubbf8\uc5d0\uc11c \uc740 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uad11\ubd80\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine_productivity (miner_name VARCHAR(50), country VARCHAR(50), production_tonnes INT, PRIMARY KEY (miner_name));INSERT INTO mine_productivity (miner_name, country, production_tonnes) VALUES ('Daniel Red', 'Canada', 1500), ('Stephanie Blue', 'USA', 2000), ('Jacob Orange', 'Mexico', 1200);", "output": "SELECT sql.miner_name FROM mine_productivity sql WHERE sql.mineral = 'Silver' AND sql.country = 'North America' AND sql.production_tonnes = (SELECT MAX(production_tonnes) FROM mine_productivity WHERE mineral = 'Silver')"}
{"input": " \ubc1c\uba85\uc790 \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \uc758\ub8cc \ud2b9\ud5c8 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE patents (id INT, inventor VARCHAR, year INT, patent VARCHAR);", "output": "SELECT p.inventor, p.year, COUNT(p.id) AS num_patents FROM patents p GROUP BY p.inventor, p.year;"}
{"input": " \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uac01 \uc5b8\uc5b4\ubcc4 \uc0ac\uc6a9\uc790 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE languages (id INT, name VARCHAR(50), location VARCHAR(50), speakers INT, status VARCHAR(50), PRIMARY KEY(id)); INSERT INTO languages (id, name, location, speakers, status) VALUES (1, 'Samoan', 'Samoa', 500000, 'Interested'), (2, 'Tongan', 'Tonga', 200000, 'Vigorous'), (3, 'Hawaiian', 'Hawaii, USA', 1000, 'Critically Endangered');", "output": "SELECT l.name, l.location, SUM(l.speakers) AS total_speakers FROM languages l WHERE l.location LIKE '%Pacific%' GROUP BY l.name, l.location;"}
{"input": " \uc13c\ud130 ID\uc21c\uc73c\ub85c \uc815\ub82c\ub41c \uc774\ub77c\ud06c \ucd5c\ucd08\uc758 \ucee4\ubba4\ub2c8\ud2f0 \uc13c\ud130\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Iraq (id INT, name TEXT, type TEXT, location TEXT); INSERT INTO Iraq (id, name, type, location) VALUES (1, 'Center A', 'Community', 'Baghdad'); INSERT INTO Iraq (id, name, type, location) VALUES (2, 'Center B', 'Health', 'Mosul');", "output": "SELECT name, location FROM (SELECT name, location, ROW_NUMBER() OVER (ORDER BY id) AS row_num FROM Iraq WHERE type = 'Community') AS community_centers WHERE row_num = 1;"}
{"input": " \uac01 \uacfc\ubaa9\uc5d0\uc11c \ub2a5\uc219\ub3c4\ub97c \ub2ec\uc131\ud55c \ud559\uc0dd\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE student_proficiency (student_id INT, subject VARCHAR(255), proficiency INT); INSERT INTO student_proficiency (student_id, subject, proficiency) VALUES (1, 'Math', 1), (2, 'Science', 1), (3, 'English', 0), (4, 'Math', 1), (5, 'Science', 0), (6, 'English', 1);", "output": "SELECT subject, AVG(proficiency) * 100 AS percentage_proficient FROM student_proficiency GROUP BY subject;"}
{"input": " SpaceX Starship\uc774 \ud0dc\uc6b8 \uc218 \uc788\ub294 \ucd5c\ub300 \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft_Capacities (Spacecraft_ID INT, Spacecraft_Name VARCHAR(100), Max_Capacity INT); INSERT INTO Spacecraft_Capacities (Spacecraft_ID, Spacecraft_Name, Max_Capacity) VALUES (1, 'SpaceX Starship', 100);", "output": "SELECT Max_Capacity FROM Spacecraft_Capacities WHERE Spacecraft_Name = 'SpaceX Starship';"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uc791\ud488\uc744 \ud310\ub9e4\ud558\uc9c0 \uc54a\uc740 \uc544\ud2f0\uc2a4\ud2b8 \uc0ad\uc81c", "context": "CREATE TABLE art_sales (id INT, artist_id INT, sale_date DATE); INSERT INTO art_sales (id, artist_id, sale_date) VALUES (1, 1, '2020-01-01'), (2, 2, '2021-05-15'), (3, 3, NULL); CREATE TABLE artists (id INT, name VARCHAR(255)); INSERT INTO artists (id, name) VALUES (1, 'Pablo Picasso'), (2, 'Claude Monet'), (3, 'Francis Bacon');", "output": "WITH inactive_artists AS (DELETE FROM artists WHERE id NOT IN (SELECT artist_id FROM art_sales WHERE sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR))) SELECT * FROM artists;"}
{"input": " \ud558\ud0a4\ud300\uc758 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uba85\uc758 \ud32c \uc778\uad6c\ud1b5\uacc4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE fan_demographics (id INT, city VARCHAR(50), age INT, gender VARCHAR(10), sport VARCHAR(50), sales INT); INSERT INTO fan_demographics (id, city, age, gender, sport, sales) VALUES (1, 'New York', 25, 'Male', 'Hockey', 300); INSERT INTO fan_demographics (id, city, age, gender, sport, sales) VALUES (2, 'Chicago', 30, 'Female', 'Hockey', 400);", "output": "SELECT city, gender, SUM(sales) AS total_sales FROM fan_demographics WHERE sport = 'Hockey' GROUP BY city, gender ORDER BY total_sales DESC LIMIT 5;"}
{"input": " 1980\ub144\ubd80\ud130 2009\ub144\uae4c\uc9c0 \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74\uc5d0\uc11c \uc5ec\uc131\uc774 \uac10\ub3c5\ud55c \ubaa8\ub4e0 \uc601\ud654\uc758 \ucd1d \uc81c\uc791 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Films (id INT, name TEXT, year INT, director TEXT, duration FLOAT, location TEXT); INSERT INTO Films (id, name, year, director, duration, location) VALUES (1, 'Film1', 1990, 'FemaleDirector1', 120.00, 'Mexico'), (2, 'Film2', 2005, 'MaleDirector1', 90.00, 'USA'), (3, 'Film3', 2010, 'FemaleDirector2', 105.00, 'Brazil');", "output": "SELECT SUM(duration) FROM Films WHERE location IN ('LatinAmerica') AND year BETWEEN 1980 AND 2009 AND director IN (SELECT DISTINCT director FROM Films WHERE gender = 'female');"}
{"input": " \ubd81\uadf9\ud574 \ud0d0\ud5d8\uc774 \ub3c4\ub2ec\ud55c \ucd5c\uc18c \uc218\uc2ec\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Expeditions(ExpeditionID INT, Location VARCHAR(20), MinDepth INT); INSERT INTO Expeditions(ExpeditionID, Location, MinDepth) VALUES (1, 'Pacific', 3500), (2, 'Atlantic', 4200), (3, 'Indian', 2100), (4, 'Arctic', 1500), (5, 'Arctic', 1200);", "output": "SELECT MIN(MinDepth) FROM Expeditions WHERE Location = 'Arctic';"}
{"input": " 2021\ub144\uc5d0\uc11c 2022\ub144 \uc0ac\uc774\uc758 \ub18d\uc5c5 \ud601\uc2e0 \uce21\uc815\ud56d\ubaa9\uc758 \ubcc0\ud654\uc728\uc744 \uce21\uc815\ud56d\ubaa9 \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uacc4\uc0b0\ud558\uace0 \uac00\uc7a5 \ub192\uc740 \uc99d\uac00\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE agricultural_metrics (id INT, year INT, metric_type TEXT, value INT, PRIMARY KEY (id)); INSERT INTO agricultural_metrics (id, year, metric_type, value) VALUES (1, 2021, 'Metric A', 200), (2, 2021, 'Metric B', 300), (3, 2022, 'Metric A', 250), (4, 2022, 'Metric B', 320);", "output": "SELECT metric_type, ((value - LAG(value, 1) OVER (PARTITION BY metric_type ORDER BY year)) * 100.0 / LAG(value, 1) OVER (PARTITION BY metric_type ORDER BY year)) as pct_change FROM agricultural_metrics WHERE year IN (2021, 2022) GROUP BY metric_type ORDER BY pct_change DESC;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ud50c\ub808\uc774\uc5b4\uc758 \ucd5c\ub300 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE player_playtime (player_id INT, region VARCHAR(255), playtime FLOAT); INSERT INTO player_playtime (player_id, region, playtime) VALUES (1, 'North America', 50), (2, 'Europe', 40), (3, 'Asia', 60), (4, 'South America', 70);", "output": "SELECT region, MAX(playtime) as max_playtime FROM player_playtime GROUP BY region;"}
{"input": " \ub3c4\uc2dc\ubcc4 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (city_id INT, city VARCHAR(50));CREATE TABLE teams (team_id INT, team_name VARCHAR(50), city VARCHAR(50));CREATE TABLE tickets (ticket_id INT, team_id INT, price DECIMAL(5,2)); INSERT INTO cities (city_id, city) VALUES (1, 'Atlanta'), (2, 'Boston'); INSERT INTO teams (team_id, team_name, city) VALUES (1, 'Atlanta Hawks', 'Atlanta'), (2, 'Boston Celtics', 'Boston'); INSERT INTO tickets (ticket_id, team_id, price) VALUES (1, 1, 70.50), (2, 1, 80.00), (3, 2, 100.00);", "output": "SELECT c.city, SUM(t.price) FROM cities c JOIN teams t ON c.city = t.city JOIN tickets ti ON t.team_id = ti.team_id GROUP BY c.city;"}
{"input": " 2020\ub144 \uac01 \uad6d\uac00\uc758 \ud5e5\ud0c0\ub974\ub2f9 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_sequestration (id INT, country VARCHAR(255), year INT, sequestration FLOAT, hectares FLOAT); INSERT INTO carbon_sequestration (id, country, year, sequestration, hectares) VALUES (1, 'Canada', 2018, 1000.2, 12000000.5), (2, 'Australia', 2019, 1100.1, 15000000.3), (3, 'Brazil', 2018, 1300.0, 20000000.7), (4, 'Indonesia', 2019, 1500.0, 17500000.6), (5, 'USA', 2020, 1200.8, 13000000.8), (6, 'Canada', 2020, 1150.9, 14000000.9), (7, 'Australia', 2020, 1400.0, 15000000.0);", "output": "SELECT country, AVG(sequestration/hectares) as avg_sequestration FROM carbon_sequestration WHERE year = 2020 GROUP BY country;"}
{"input": " \uc778\uc0c1\ud30c \uc791\ud488\uacfc \ucd94\uc0c1 \uc791\ud488\uc758 \ud3c9\uade0 \ud310\ub9e4 \uac00\uaca9\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtworksType (ArtworkID INT, Name VARCHAR(100), Artist VARCHAR(100), YearCreated INT, TotalSales DECIMAL(10,2), ArtType VARCHAR(20));", "output": "SELECT AVG(CASE WHEN ArtType = 'impressionist' THEN TotalSales ELSE NULL END) as AvgImpressionist, AVG(CASE WHEN ArtType = 'abstract' THEN TotalSales ELSE NULL END) as AvgAbstract FROM ArtworksType;"}
{"input": " \uac01 \uc8fc\ub9c8\ub2e4 \uc2dc\uace8 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uac01 \ubcd1\uc6d0\uc5d0\uc11c \ubc18\uacbd 20\ub9c8\uc77c \uc774\ub0b4\uc5d0 \uc788\ub294 \uc9c4\ub8cc\uc18c\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT, state TEXT); INSERT INTO hospitals (id, name, location, num_beds, state) VALUES (1, 'Hospital A', 'Rural Texas', 200, 'Texas'), (2, 'Hospital B', 'Rural California', 250, 'California'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_beds INT, state TEXT); INSERT INTO clinics (id, name, location, num_beds, state) VALUES (1, 'Clinic A', 'Rural Texas', 50, 'Texas'), (2, 'Clinic B', 'Rural California', 75, 'California'); CREATE TABLE distance (hospital_id INT, clinic_id INT, distance FLOAT); INSERT INTO distance (hospital_id, clinic_id, distance) VALUES (1, 1, 15.0), (1, 2, 20.0), (2, 1, 25.0), (2, 2, 30.0);", "output": "SELECT h.state, COUNT(h.id) AS num_hospitals, COUNT(c.id) AS num_clinics_within_20_miles FROM hospitals h INNER JOIN distance d ON h.id = d.hospital_id INNER JOIN clinics c ON d.clinic_id = c.id WHERE d.distance <= 20 GROUP BY h.state;"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c VR \uac8c\uc784\uc744 \uc990\uae30\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'France'), (2, 30, 'Female', 'Germany'), (3, 22, 'Male', 'France'); CREATE TABLE GameTypes (GameID INT, GameName VARCHAR(20), Type VARCHAR(20)); INSERT INTO GameTypes (GameID, GameName, Type) VALUES (1, 'GameA', 'VR'), (2, 'GameB', 'Non-VR'), (3, 'GameC', 'VR'); CREATE TABLE PlayerGames (PlayerID INT, GameID INT); INSERT INTO PlayerGames (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 1);", "output": "SELECT AVG(Players.Age) FROM Players JOIN PlayerGames ON Players.PlayerID = PlayerGames.PlayerID JOIN GameTypes ON PlayerGames.GameID = GameTypes.GameID WHERE Players.Country = 'France' AND GameTypes.Type = 'VR';"}
{"input": " 2021\ub144 \ubc14\ub974\uc140\ub85c\ub098\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourism_revenue (year INT, city TEXT, revenue FLOAT); INSERT INTO tourism_revenue (year, city, revenue) VALUES (2021, 'Barcelona', 200000), (2022, 'Barcelona', 250000);", "output": "SELECT SUM(revenue) FROM tourism_revenue WHERE city = 'Barcelona' AND year = 2021;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uad6d\ubc29\uc678\uad50 \ud65c\ub3d9\uc740 \uc5b4\ub5a4 \uac83\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE diplomacy_activities (activity_id INT, activity_name VARCHAR(255), year INT); INSERT INTO diplomacy_activities (activity_id, activity_name, year) VALUES (1, 'Military Exercise in Japan', 2019), (2, 'Diplomatic Visit to India', 2018), (3, 'Cybersecurity Conference in Germany', 2020), (4, 'Peacekeeping Training in France', 2021), (5, 'Military Attach\u00e9 in Canada', 2018);", "output": "SELECT activity_name FROM diplomacy_activities WHERE year BETWEEN (SELECT YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE);"}
{"input": " \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc120\ud638\ub3c4 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Consumer_Preferences (id INT, consumer_id INT, product_id INT, preference_score INT); CREATE TABLE Consumers (id INT, name VARCHAR(255), age INT, location VARCHAR(255), cruelty_free BOOLEAN); CREATE TABLE Products (id INT, name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2)); CREATE TABLE Brands (id INT, name VARCHAR(255), hq_location VARCHAR(255), cruelty_free BOOLEAN);", "output": "SELECT b.name, AVG(cp.preference_score) as average_score FROM Consumer_Preferences cp JOIN Consumers c ON cp.consumer_id = c.id JOIN Products p ON cp.product_id = p.id JOIN Brands b ON p.id = b.id WHERE c.cruelty_free = true AND p.category = 'Skincare' GROUP BY b.name ORDER BY average_score ASC LIMIT 1;"}
{"input": " \ubc1c\uc0ac \ub0a0\uc9dc\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uc6b0\uc8fc\uc120\uc744 \ub098\uc5f4\ud558\ub294 \ubdf0\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecrafts (SpacecraftID int, Name varchar(50), LaunchDate date); INSERT INTO Spacecrafts VALUES (1, 'Hermes', '2035-06-01'); INSERT INTO Spacecrafts VALUES (2, 'Ares 3', '2025-11-11');", "output": "CREATE VIEW SpacecraftLaunchDates AS SELECT SpacecraftID, Name, LaunchDate FROM Spacecrafts;"}
{"input": " \uac01 \uc8fc\uc758 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uc11c\ube44\uc2a4\uc5d0\uc11c \ubc1c\uc0dd\ud55c \uc6d4 \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE states (state_id INT, state_name VARCHAR(20)); INSERT INTO states (state_id, state_name) VALUES (1, 'New York'), (2, 'California'), (3, 'Texas'); CREATE TABLE mobile_revenue (state_id INT, monthly_revenue DECIMAL(10,2)); INSERT INTO mobile_revenue (state_id, monthly_revenue) VALUES (1, 50000.00), (2, 75000.00), (3, 60000.00); CREATE TABLE broadband_revenue (state_id INT, monthly_revenue DECIMAL(10,2)); INSERT INTO broadband_revenue (state_id, monthly_revenue) VALUES (1, 65000.00), (2, 80000.00), (3, 70000.00);", "output": "SELECT s.state_name, AVG(m.monthly_revenue + b.monthly_revenue) as avg_monthly_revenue FROM states s JOIN mobile_revenue m ON s.state_id = m.state_id JOIN broadband_revenue b ON s.state_id = b.state_id GROUP BY s.state_name;"}
{"input": " 2021\ub144\uc5d0 \uc2e0\uace0\ub41c \ubc94\uc8c4 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE crimes (id INT, report_date DATE, crime_type VARCHAR(20)); INSERT INTO crimes (id, report_date, crime_type) VALUES (1, '2021-01-01', 'Murder'), (2, '2021-01-02', 'Theft'), (3, '2021-01-03', 'Assault');", "output": "SELECT COUNT(*) FROM crimes WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"input": " \ub0a8\uc544\uba54\ub9ac\uce74\uc758 \uc5f0\uac04 \uac15\uc218\ub7c9\uc758 5\ub144 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE precipitation (country VARCHAR(20), year INT, precipitation DECIMAL(5,2)); INSERT INTO precipitation VALUES ('SA', 2010, 50.1), ('SA', 2011, 52.3), ('SA', 2012, 54.5), ('SA', 2013, 56.7), ('SA', 2014, 58.9), ('SA', 2015, 61.1), ('SA', 2016, 63.3), ('SA', 2017, 65.5), ('SA', 2018, 67.7), ('SA', 2019, 70.0);", "output": "SELECT year, AVG(precipitation) OVER (ORDER BY year ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) AS moving_avg FROM precipitation WHERE country = 'SA';"}
{"input": " \ub300\uc11c\uc591\uc5d0\uc11c \ubaa8\ub4e0 \uc7a0\uc218 \ub2e4\uc774\ube59\uc758 \ud3c9\uade0 \ucd5c\ub300 \uc218\uc2ec\uc744 \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE submersible_dives (id INT, submersible_name VARCHAR(50), region VARCHAR(20), dive_date DATE, max_depth INT);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth) VALUES (1, 'Trieste', 'Atlantic', '1960-01-23', 10972);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth) VALUES (2, 'Mir', 'Atlantic', '2000-08-23', 6170);INSERT INTO submersible_dives (id, submersible_name, region, dive_date, max_depth) VALUES (3, 'Atlantic_Explorer', 'Atlantic', '2010-01-01', 7500);", "output": "SELECT AVG(max_depth) FROM submersible_dives WHERE region = 'Atlantic';"}
{"input": "\ud638\uc8fc\uc5d0\uc11c \uc804\uae30\uacbd\ub828 \uce58\ub8cc\ub97c \ubc1b\uc740 \uc591\uadf9\uc131 \uc7a5\uc560 \ud658\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, condition VARCHAR(50), country VARCHAR(50)); INSERT INTO patients (id, condition, country) VALUES (1, 'Anxiety', 'Australia'), (2, 'Bipolar Disorder', 'Australia'), (3, 'Depression', 'Australia'), (4, 'Anxiety', 'USA'); CREATE TABLE treatments (id INT, patient_id INT, treatment VARCHAR(50)); INSERT INTO treatments (id, patient_id, treatment) VALUES (1, 1, 'Medication'), (2, 2, 'Electroconvulsive Therapy'), (3, 3, 'Talk Therapy'), (4, 4, 'Medication');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patients WHERE country = 'Australia' AND condition = 'Bipolar Disorder')) AS percentage FROM treatments INNER JOIN patients ON treatments.patient_id = patients.id WHERE patients.country = 'Australia' AND patients.condition = 'Bipolar Disorder' AND treatments.treatment = 'Electroconvulsive Therapy';"}
{"input": " \uac01 \ud68c\uc0ac\uac00 \ucc44\uad74\ud558\ub294 \uad6c\ub9ac\uc640 \uc544\uc5f0\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE copper_mine (company_id INT, quantity_mined INT);CREATE TABLE zinc_mine (company_id INT, quantity_mined INT);", "output": "SELECT m.company_name, SUM(cm.quantity_mined) AS total_copper_mined, SUM(zm.quantity_mined) AS total_zinc_mined FROM mining_companies m JOIN copper_mine cm ON m.company_id = cm.company_id JOIN zinc_mine zm ON m.company_id = zm.company_id GROUP BY m.company_name;"}
{"input": " 2021\ub144 '\uc0dd\uc0b0' \uc9c0\uc5ed\uc758 \uc6d4 \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sensor_data (timestamp TIMESTAMP, location VARCHAR(20), temperature FLOAT); INSERT INTO sensor_data (timestamp, location, temperature) VALUES ('2021-01-01 00:00:00', 'production', 22.3); INSERT INTO sensor_data (timestamp, location, temperature) VALUES ('2021-01-01 01:00:00', 'production', 22.5);", "output": "SELECT AVG(temperature) as avg_temperature, EXTRACT(MONTH FROM timestamp) as month FROM sensor_data WHERE EXTRACT(YEAR FROM timestamp) = 2021 AND location = 'production' GROUP BY month;"}
{"input": " \uc724\ub9ac\uc801 \ub178\ub3d9 \uc704\ubc18\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \uacf5\uae09\uc5c5\uccb4\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(255), num_violations INT);", "output": "SELECT supplier_name, num_violations FROM suppliers ORDER BY num_violations DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 \uba55\uc2dc\ucf54\ub9cc\uc758 \ucd1d \uc5b4\uc885 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fish_biomass (id INT, species TEXT, location TEXT, year INT, biomass INT); INSERT INTO fish_biomass (id, species, location, year, biomass) VALUES (1, 'Tuna', 'Gulf of Mexico', 2012, 25000), (2, 'Mackerel', 'Gulf of Mexico', 2012, 18000), (3, 'Tuna', 'Gulf of Mexico', 2013, 27000), (4, 'Mackerel', 'Gulf of Mexico', 2013, 19000);", "output": "SELECT location, species, SUM(biomass) biomass FROM fish_biomass WHERE year BETWEEN 2011 AND 2021 GROUP BY location, species;"}
{"input": " \uc774\uc9d1\ud2b8\uc5d0\uc11c \uc218\uc785\ub418\ub294 \uc720\uae30\ub18d \uacfc\uc77c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE imports (id INT, product TEXT, is_organic BOOLEAN, country TEXT); INSERT INTO imports (id, product, is_organic, country) VALUES (1, 'Apples', true, 'Egypt'); INSERT INTO imports (id, product, is_organic, country) VALUES (2, 'Oranges', false, 'Egypt'); INSERT INTO imports (id, product, is_organic, country) VALUES (3, 'Bananas', true, 'Egypt');", "output": "SELECT (COUNT(*) FILTER (WHERE is_organic = true) * 100.0 / (SELECT COUNT(*) FROM imports WHERE country = 'Egypt')) FROM imports WHERE product = 'Apples' OR product = 'Bananas' AND country = 'Egypt';"}
{"input": " 'explainable_ai' \ub370\uc774\ud130\uc138\ud2b8\ub85c \ud6c8\ub828\ub41c \ubaa8\ub378\uc758 \ucd5c\uc18c \uacf5\uc815\uc131 \uc810\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE explainable_ai (model_name TEXT, dataset TEXT, fairness_score INTEGER); INSERT INTO explainable_ai (model_name, dataset, fairness_score) VALUES ('model1', 'explainable_ai', 85), ('model2', 'explainable_ai', 92), ('model3', 'explainable_ai', 88);", "output": "SELECT MIN(fairness_score) FROM explainable_ai WHERE dataset = 'explainable_ai';"}
{"input": " \ubaa8\ub4e0 \uc720\ud615\uc758 \uae08\uc18d\uc744 \ucc44\uad74\ud55c \uad11\uc0b0\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE mine (id INT, name VARCHAR(50), location VARCHAR(50));CREATE TABLE coal_mine (mine_id INT, amount INT);CREATE TABLE iron_mine (mine_id INT, amount INT);CREATE TABLE gold_mine (mine_id INT, amount INT);CREATE TABLE silver_mine (mine_id INT, amount INT);", "output": "SELECT m.name, m.location FROM mine m LEFT JOIN coal_mine c ON m.id = c.mine_id LEFT JOIN iron_mine i ON m.id = i.mine_id LEFT JOIN gold_mine g ON m.id = g.mine_id LEFT JOIN silver_mine s ON m.id = s.mine_id WHERE c.mine_id IS NOT NULL OR i.mine_id IS NOT NULL OR g.mine_id IS NOT NULL OR s.mine_id IS NOT NULL;"}
{"input": " \ube0c\ub77c\uc9c8\uc758 \ucf54\ub85c\ub09819\ub85c \uc778\ud55c \uc0ac\ub9dd\ub960\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (id, name, continent) VALUES (1, 'Afghanistan', 'Asia'); CREATE TABLE covid_data (id INT PRIMARY KEY, country_id INT, date DATE, mortality_rate DECIMAL(3,2)); INSERT INTO covid_data (id, country_id, date, mortality_rate) VALUES (1, 1, '2020-03-01', 0.5), (2, 1, '2020-03-02', 0.6);", "output": "SELECT mortality_rate FROM covid_data WHERE country_id = (SELECT id FROM countries WHERE name = 'Brazil') ORDER BY date DESC LIMIT 1;"}
{"input": " \uace0\uac1d\uc758 \uccab \ubc88\uc9f8 \uac70\ub798 \uc774\ud6c4 \ubc1c\uc0dd\ud55c \ubaa8\ub4e0 \uac70\ub798\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID int, Name varchar(50), Age int); INSERT INTO Customers (CustomerID, Name, Age) VALUES (1, 'John Smith', 35), (2, 'Jane Doe', 42); CREATE TABLE Transactions (TransactionID int, CustomerID int, Amount decimal(10,2), TransactionDate date); INSERT INTO Transactions (TransactionID, CustomerID, Amount, TransactionDate) VALUES (1, 1, 500.00, '2022-01-01'), (2, 1, 750.00, '2022-01-02'), (3, 2, 250.00, '2022-01-03'), (4, 2, 1000.00, '2022-01-04');", "output": "SELECT Transactions.TransactionID, Transactions.CustomerID, Transactions.Amount, Transactions.TransactionDate FROM (SELECT TransactionID, CustomerID, ROW_NUMBER() OVER (PARTITION BY CustomerID ORDER BY TransactionDate) as RowNum FROM Transactions) as TransactionsRanked JOIN Transactions ON TransactionsRanked.TransactionID = Transactions.TransactionID AND TransactionsRanked.RowNum > 1 ORDER BY Transactions.CustomerID, Transactions.TransactionDate;"}
{"input": " 2018\ub144 \uce90\ub098\ub2e4\uc5d0\uc11c \uc99d\uac70 \uae30\ubc18 \uc815\ucc45 \uc218\ub9bd\uc5d0 \uae30\uc5ec\ud55c \uc0c1\uc704 3\uc778\uc740 \ub204\uad6c\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ContributorsToPolicy (id INT, contributor_name VARCHAR(50), country VARCHAR(50), contributions INT, year INT);", "output": "SELECT contributor_name, ROW_NUMBER() OVER (ORDER BY contributions DESC) AS rank FROM ContributorsToPolicy WHERE country = 'Canada' AND year = 2018 AND rank <= 3;"}
{"input": " \ud638\uc8fc\uc758 \uac01 \uc694\ub9ac \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, dish_id INT, date DATE, quantity INT, price DECIMAL(5,2));CREATE VIEW dishes_view AS SELECT d.id, d.name, c.category FROM dishes d JOIN categories c ON d.category_id = c.id;", "output": "SELECT c.category, SUM(s.quantity * s.price) AS total_revenue FROM sales s JOIN dishes_view d ON s.dish_id = d.id JOIN categories c ON d.category = c.id WHERE c.country = 'Australia' GROUP BY c.category;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uc218\uc775\uc774 \ub9c8\uc774\ub108\uc2a4 \ucd94\uc138\ub97c \ubcf4\uc778 \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE restaurant_revenue (menu_category VARCHAR(50), transaction_date DATE, revenue NUMERIC(10,2)); INSERT INTO restaurant_revenue (menu_category, transaction_date, revenue) VALUES ('Appetizers', '2023-01-01', 500.00), ('Appetizers', '2023-01-02', 450.00), ('Entrees', '2023-01-03', 800.00);", "output": "SELECT menu_category, SUM(revenue) OVER (PARTITION BY menu_category ORDER BY transaction_date ROWS BETWEEN 59 PRECEDING AND CURRENT ROW) - SUM(revenue) OVER (PARTITION BY menu_category ORDER BY transaction_date ROWS BETWEEN 29 PRECEDING AND 1 PRECEDING) AS revenue_change FROM restaurant_revenue WHERE transaction_date >= CURRENT_DATE - INTERVAL '60 days';"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec\uac04 \ub18d\uac00 \uc804\uccb4 \ub18d\uacbd\uc9c0 \uba74\uc801\uacfc \ub18d\uac00\ubcc4 \uc218\ud655\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farmer (id INTEGER, name TEXT);CREATE TABLE farmland (id INTEGER, farmer_id INTEGER, type TEXT, area FLOAT, start_date DATE, end_date DATE);CREATE TABLE crop (id INTEGER, farmland_id INTEGER, type TEXT, planted_date DATE);", "output": "SELECT f.name, SUM(fl.area) as total_area, COUNT(c.id) as num_crops FROM farmer f INNER JOIN farmland fl ON f.id = fl.farmer_id INNER JOIN crop c ON fl.id = c.farmland_id WHERE c.planted_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY f.name;"}
{"input": " \ud654\ubb3c \ucde8\uae09 \uce21\uba74\uc5d0\uc11c \ucd5c\uace0\uc758 \uc131\uacfc\ub97c \uac70\ub450\uace0 \uc788\ub294 \ud56d\uad6c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50), total_cargo INT); INSERT INTO ports VALUES (1, 'Port of Shanghai', 43032442); INSERT INTO ports VALUES (2, 'Port of Singapore', 37439402); INSERT INTO ports VALUES (3, 'Port of Shenzhen', 27162000);", "output": "SELECT port_name, ROW_NUMBER() OVER (ORDER BY total_cargo DESC) as rank FROM ports WHERE row_number() = 1;"}
{"input": " \uc911\uad6d \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \uc704\ud55c \uc6b0\uc8fc \uc784\ubb34\ub294 \uba87 \ubc88\uc774\ub098 \uae30\ub85d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SpaceMissions (astronaut_name VARCHAR(255), astronaut_country VARCHAR(255), mission_name VARCHAR(255)); INSERT INTO SpaceMissions (astronaut_name, astronaut_country, mission_name) VALUES ('Tayang Yuan', 'China', 'Shenzhou 10'), ('Fei Junlong', 'China', 'Shenzhou 6'), ('Nie Haisheng', 'China', 'Shenzhou 12');", "output": "SELECT COUNT(*) FROM SpaceMissions WHERE astronaut_country = 'China';"}
{"input": " \uac01 \uc7a5\ub974\ubcc4\ub85c \uba87 \ud3b8\uc758 \ub178\ub798\uc640 \uc601\ud654\uac00 \uc788\uc73c\uba70, \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MediaContent (MediaId INT, MediaType VARCHAR(50), Title VARCHAR(50), Genre VARCHAR(50), Rating DECIMAL(5,2)); INSERT INTO MediaContent (MediaId, MediaType, Title, Genre, Rating) VALUES (1, 'Movie', 'MovieA', 'Action', 8.5), (2, 'Music', 'SongA', 'Pop', 7.8), (3, 'Movie', 'MovieB', 'Comedy', 9.2);", "output": "SELECT MediaType, Genre, COUNT(*) AS ContentCount, AVG(Rating) AS Avg_Rating FROM MediaContent GROUP BY MediaType, Genre;"}
{"input": " \uc720\ub7fd\uc758 \ub18d\ucd0c \ubcf4\uac74 \uc13c\ud130\ub2f9 \uc11c\ube44\uc2a4\ub97c \ubc1b\ub294 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ud658\uc790 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc774\ub4e4 \uc13c\ud130 \uc911 30,000\uba85 \uc774\uc0c1\uc758 \ud658\uc790\ub97c \uc11c\ube44\uc2a4\ud558\ub294 \uc13c\ud130\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_health_centers (center_id INT, center_name VARCHAR(100), country VARCHAR(50), num_patients INT); INSERT INTO rural_health_centers (center_id, center_name, country, num_patients) VALUES (1, 'Center A', 'France', 35000), (2, 'Center B', 'France', 28000), (3, 'Center C', 'Germany', 42000), (4, 'Center D', 'Germany', 48000);", "output": "SELECT MIN(num_patients) AS min_patients_per_center, MAX(num_patients) AS max_patients_per_center, COUNT(*) FILTER (WHERE num_patients > 30000) AS centers_with_more_than_30000_patients FROM rural_health_centers WHERE country IN (SELECT name FROM countries WHERE continent = 'Europe');"}
{"input": " \ud640\ubbb4\uacfc \ud234\ub968\uc758 \uc2dc\uc7a5 \ub3d9\ud5a5 \ube44\uad50", "context": "CREATE TABLE market_trends (year INT, element VARCHAR(10), price FLOAT); INSERT INTO market_trends VALUES (2015, 'Holmium', 100), (2016, 'Holmium', 110), (2015, 'Thulium', 200), (2016, 'Thulium', 220);", "output": "SELECT element, price FROM market_trends WHERE year = 2015 UNION SELECT element, price FROM market_trends WHERE year = 2016 ORDER BY element, price;"}
{"input": " \ub450 \ubc88\uc9f8\ub85c \ub2a6\uc740 \uc0dd\uc131 \ub0a0\uc9dc\ub97c \ud3ec\ud568\ud558\ub294 \uc544\ud2f0\ud329\ud2b8\uc758 \uc774\ub984\uacfc \uc0dd\uc131 \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artifacts (ArtifactID INT, Name VARCHAR(100), CreationDate DATETIME); INSERT INTO Artifacts (ArtifactID, Name, CreationDate) VALUES (1, 'Ancient Dagger', '1500-01-01'), (2, 'Modern Artifact', '2020-01-01');", "output": "SELECT Name, CreationDate FROM (SELECT Name, CreationDate, ROW_NUMBER() OVER (ORDER BY CreationDate DESC) as RowNum FROM Artifacts) as ArtifactRank WHERE RowNum = 2;"}
{"input": " \ubd81\ud574\uc758 \ubaa8\ub4e0 \ud574\uc591 \ud50c\ub7ab\ud3fc\uacfc \uc2dc\ucd94 \ud604\ud669\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE platforms (platform_id INT, location VARCHAR(255), status VARCHAR(255));", "output": "SELECT platform_id, location, status FROM platforms WHERE location = 'North Sea' AND platform_id IN (SELECT platform_id FROM wells);"}
{"input": " \uac01 \uc870\ud569 \uc9c0\ubd80\ubcc4\ub85c 5\ub144 \uc774\uc0c1 \ud65c\ub3d9\ud55c \ud68c\uc6d0 \uc218\ub97c \uc7a5\uae30 \ud68c\uc6d0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc21c\uc73c\ub85c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE union_members (id INT, chapter VARCHAR(255), years_active INT); INSERT INTO union_members (id, chapter, years_active) VALUES (1, 'NYC', 7), (2, 'LA', 3), (3, 'NYC', 6), (4, 'LA', 8), (5, 'NYC', 10), (6, 'LA', 2);", "output": "SELECT chapter, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as rank, COUNT(*) as long_term_members FROM union_members WHERE years_active > 5 GROUP BY chapter ORDER BY rank;"}
{"input": " \uc544\uc9c1 \uc2dc\uc791\ub418\uc9c0 \uc54a\uc740 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc5d0 \uad00\ub828\ub41c \uc6b0\uc8fc\uc120\uacfc \ud574\ub2f9 \uc8fc\uc694 \uc870\uc0ac\uc790\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecraft (id INT PRIMARY KEY, name VARCHAR(100), manufacturer VARCHAR(100), launch_date DATE); INSERT INTO Spacecraft (id, name, manufacturer, launch_date) VALUES (6, 'Artemis III', 'NASA', '2024-07-01'); CREATE TABLE Research_Projects (id INT PRIMARY KEY, name VARCHAR(100), field VARCHAR(100), start_date DATE, end_date DATE, principal_investigator_id INT, FOREIGN KEY (principal_investigator_id) REFERENCES Astronauts(id)); INSERT INTO Research_Projects (id, name, field, start_date, end_date, principal_investigator_id) VALUES (6, 'Lunar Colonization', 'Astrophysics', '2025-01-01', '2030-12-31', 6); CREATE TABLE Astronauts (id INT PRIMARY KEY, name VARCHAR(100), age INT, country VARCHAR(100)); INSERT INTO Astronauts (id, name, age, country) VALUES (6, 'Jim Bridenstine', 48, 'USA');", "output": "SELECT s.name AS spacecraft_name, r.name AS research_project, a.name AS principal_investigator FROM Spacecraft s INNER JOIN Research_Projects r ON s.id = r.id INNER JOIN Astronauts a ON r.principal_investigator_id = a.id WHERE r.start_date > CURDATE();"}
{"input": "\uce98\ub9ac\ud3ec\ub2c8\uc544 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uacbd\uc6b0 \ub9cc\ub8cc\ub41c \uc9c0 2\ub144\uc774 \ub118\uc740 \ubcf4\ud5d8\uc744 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE policies (id INT, policyholder_id INT, policy_type TEXT, issue_date DATE, expiry_date DATE); INSERT INTO policies (id, policyholder_id, policy_type, issue_date, expiry_date) VALUES (1, 3, 'Life', '2020-01-01', '2022-01-01'), (2, 4, 'Health', '2021-02-01', '2023-02-01'), (3, 5, 'Auto', '2021-03-01', '2024-03-01'); CREATE TABLE policyholders (id INT, name TEXT, state TEXT); INSERT INTO policyholders (id, name, state) VALUES (3, 'Sophia Garcia', 'California'), (4, 'Daniel Kim', 'Nevada'), (5, 'Claire Williams', 'Texas');", "output": "DELETE FROM policies WHERE policies.id IN (SELECT policies.id FROM policies JOIN policyholders ON policies.policyholder_id = policyholders.id WHERE policyholders.state = 'California' AND policies.expiry_date < DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR));"}
{"input": " \uce90\ub098\ub2e4\uc5d0\ub294 \uc804\uae30\ucc28\uac00 \uba87 \ub300\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE electric_vehicles (vehicle_id INT, vehicle_type VARCHAR(255), city VARCHAR(255), state VARCHAR(255));", "output": "SELECT COUNT(*) FROM electric_vehicles WHERE state = 'Canada';"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uac8c\uc784 \uce74\ud14c\uace0\ub9ac\uc5d0\ub294 \uba87 \uac1c\uc758 \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dapps (id INT, category TEXT, region TEXT); INSERT INTO dapps (id, category, region) VALUES (1, 'Gaming', 'Africa');", "output": "SELECT COUNT(*) FROM dapps WHERE category = 'Gaming' AND region = 'Africa';"}
{"input": " \uc608\uc0b0 \ucd1d\uc561\uacfc \ud568\uaed8 \ubaa8\ub4e0 \ud3ec\ud568 \ub178\ub825\uc744 \ub0a0\uc9dc\ubcc4\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Inclusion (InclusionID INT, InclusionName VARCHAR(50), Budget DECIMAL(10,2), Date DATE); INSERT INTO Inclusion (InclusionID, InclusionName, Budget, Date) VALUES (1, 'Accessible Spaces', 15000, '2018-04-01'), (2, 'Disability Awareness', 12000, '2018-07-15'), (3, 'Universal Design', 18000, '2019-02-20'), (4, 'Disability Rights', 20000, '2020-01-01'), (5, 'Accessible Communication', 25000, '2020-09-15');", "output": "SELECT InclusionName, Budget, SUM(Budget) OVER (ORDER BY Date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as RunningTotal FROM Inclusion;"}
{"input": " \ub3c5\uc77c\uc758 \ubb34\ud5a5 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488 \ube44\uc728\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE product_details(product_id INT, product_type VARCHAR(255), contains_fragrance BOOLEAN); CREATE TABLE cosmetics_sales(product_id INT, country VARCHAR(255), sales_quantity INT, sales_revenue DECIMAL(10,2));", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cosmetics_sales cs WHERE cs.country = 'Germany' AND cs.product_type = 'skincare') AS pct_fragrance_free FROM product_details pd WHERE pd.product_type = 'skincare' AND pd.contains_fragrance = FALSE;"}
{"input": " \ub2e8\uc77c \ubc30\uce58\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uce5c\ud658\uacbd \uc5fc\ub8cc\uc758 \ucd5c\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eco_friendly_dye_usage (id INT, batch_number INT, dye_type VARCHAR(20), quantity INT); INSERT INTO eco_friendly_dye_usage (id, batch_number, dye_type, quantity) VALUES (1, 101, 'eco_friendly', 200); INSERT INTO eco_friendly_dye_usage (id, batch_number, dye_type, quantity) VALUES (2, 102, 'eco_friendly', 300);", "output": "SELECT MIN(quantity) FROM eco_friendly_dye_usage WHERE dye_type = 'eco_friendly';"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uad6d\uac00\uc548\ubcf4\uc608\uc0b0\uacfc \uadf8\uac83\uc774 \ub300\ud45c\ud558\ub294 \uc804\uccb4\uc608\uc0b0\uc758 \ube44\uc728\uc744 \uc694\uc57d\ud558\ub77c.", "context": "CREATE TABLE national_security_budget (department VARCHAR(255), budget INT);", "output": "SELECT department, budget, budget * 100.0 / SUM(budget) OVER () as percentage_of_total FROM national_security_budget;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \ub17c\ubb38\uc744 \ub0b8 \uad50\uc218\ub9cc\ud07c \ub9ce\uc740 \ub17c\ubb38\uc744 \ucd9c\ud310\ud55c \ubaa8\ub4e0 \uad50\uc218\uc758 \uc774\ub984\uacfc \uc5f0\uad6c \uad00\uc2ec\ubd84\uc57c\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE professors (id INT, name VARCHAR(50), department VARCHAR(50), research_interest VARCHAR(50), num_papers INT); INSERT INTO professors (id, name, department, research_interest, num_papers) VALUES (1, 'John Doe', 'Computer Science', 'Machine Learning', 6), (2, 'Jane Smith', 'Computer Science', 'Data Science', 3), (3, 'Alice Johnson', 'Electrical Engineering', 'Power Systems', 4);", "output": "SELECT name, research_interest FROM professors WHERE num_papers >= (SELECT MAX(num_papers) FROM professors);"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uc911\uc11c\ubd80 \uc9c0\uc5ed \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (PolicyID INT, Region VARCHAR(10)); INSERT INTO Policyholders VALUES (1, 'Midwest'); INSERT INTO Policyholders VALUES (2, 'Northeast'); CREATE TABLE Claims (ClaimID INT, PolicyID INT, ClaimAmount DECIMAL(10,2), ClaimDate DATE); INSERT INTO Claims VALUES (1, 1, 500, '2022-01-01'); INSERT INTO Claims VALUES (2, 2, 300, '2022-02-15'); CREATE TABLE Calendar (Date DATE); INSERT INTO Calendar VALUES ('2022-01-01'); INSERT INTO Calendar VALUES ('2022-02-01'); INSERT INTO Calendar VALUES ('2022-03-01'); CREATE TABLE FiscalQuarter (StartDate DATE, EndDate DATE); INSERT INTO FiscalQuarter VALUES ('2022-01-01', '2022-03-31');", "output": "SELECT SUM(c.ClaimAmount) as TotalClaimAmount FROM Claims c INNER JOIN Policyholders p ON c.PolicyID = p.PolicyID INNER JOIN Calendar cal ON c.ClaimDate = cal.Date INNER JOIN FiscalQuarter fq ON cal.Date BETWEEN fq.StartDate AND fq.EndDate WHERE p.Region = 'Midwest';"}
{"input": " \uc7a5\ub974 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), genre VARCHAR(50)); INSERT INTO movies (id, title, genre) VALUES (1, 'Movie18', 'Action'), (2, 'Movie19', 'Comedy'), (3, 'Movie20', 'Drama'), (4, 'Movie21', 'Action'), (5, 'Movie22', 'Comedy');", "output": "SELECT genre, COUNT(*) as genre_count FROM movies GROUP BY genre;"}
{"input": " \uaddc\uc81c\ud604\ud669\ubcc4 \ucd1d\uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE transaction_volume (regulatory_status VARCHAR(255), transaction_volume INT); INSERT INTO transaction_volume (regulatory_status, transaction_volume) VALUES ('Regulated', 15000000), ('Partially Regulated', 10000000), ('Unregulated', 8000000);", "output": "SELECT regulatory_status, SUM(transaction_volume) OVER (PARTITION BY regulatory_status) FROM transaction_volume;"}
{"input": " '\uc774\ub354\ub9ac\uc6c0' \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ubc30\ud3ec\ub41c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc218\ub97c \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uac1c \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE dapps (dapp_name VARCHAR(20), network VARCHAR(20), smart_contracts INT); INSERT INTO dapps (dapp_name, network, smart_contracts) VALUES ('Uniswap', 'Ethereum', 500), ('OpenSea', 'Ethereum', 300), ('Compound', 'Ethereum', 400);", "output": "SELECT dapp_name, network, smart_contracts FROM (SELECT dapp_name, network, smart_contracts, ROW_NUMBER() OVER (PARTITION BY network ORDER BY smart_contracts DESC) as rn FROM dapps) x WHERE rn <= 3 AND network = 'Ethereum';"}
{"input": " 2017\ub144 \ud2b9\uc815 \uc7a5\ub974\uc758 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\uc5d0 \ub300\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Genre_Concerts_3 (year INT, genre VARCHAR(50), revenue FLOAT); INSERT INTO Genre_Concerts_3 (year, genre, revenue) VALUES (2016, 'Pop', 1000000), (2017, 'Rock', 1500000), (2018, 'Hip Hop', 800000), (2019, 'Jazz', 1200000), (2017, 'Rock', 1600000);", "output": "SELECT genre, SUM(revenue) FROM Genre_Concerts_3 WHERE year = 2017 GROUP BY genre;"}
{"input": " 2021\ub144\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \ud310\ub9e4\ub41c \uc0c1\uc704 3\uac00\uc9c0 \uad70\uc0ac \uc7a5\ube44 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitaryEquipmentSales (Id INT, EquipmentType VARCHAR(255), Quantity INT, SaleDate DATE); INSERT INTO MilitaryEquipmentSales (Id, EquipmentType, Quantity, SaleDate) VALUES (3, 'Warships', 30, '2021-01-01'); INSERT INTO MilitaryEquipmentSales (Id, EquipmentType, Quantity, SaleDate) VALUES (4, 'Armored Vehicles', 40, '2021-02-01');", "output": "SELECT EquipmentType, SUM(Quantity) as TotalSales, ROW_NUMBER() OVER (ORDER BY SUM(Quantity) DESC) as Rank FROM MilitaryEquipmentSales WHERE YEAR(SaleDate) = 2021 GROUP BY EquipmentType HAVING SUM(Quantity) >= (SELECT SUM(Quantity) FROM MilitaryEquipmentSales WHERE YEAR(SaleDate) = 2021 GROUP BY EquipmentType ORDER BY SUM(Quantity) DESC LIMIT 1 OFFSET 2) ORDER BY TotalSales DESC;"}
{"input": " 2019\ub144 \ubb38\ud654\uc13c\ud130\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud589\uc0ac\ub97c \uc8fc\ucd5c\ud588\ub098\uc694?", "context": "CREATE TABLE CulturalEvents (id INT, year INT, event_type VARCHAR(20)); INSERT INTO CulturalEvents (id, year, event_type) VALUES (1, 2017, 'Music'), (2, 2018, 'Theater'), (3, 2019, 'Dance'), (4, 2020, 'Exhibition');", "output": "SELECT COUNT(*) FROM CulturalEvents WHERE year = 2019;"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \uc778\ud50c\ub8e8\uc5d4\uc790 \ub610\ub294 \ud3d0\ub834\uc73c\ub85c \uc9c4\ub2e8\ub41c \ud658\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Patients (ID INT, Disease VARCHAR(20), State VARCHAR(20)); INSERT INTO Patients (ID, Disease, State) VALUES (1, 'Influenza', 'California'), (2, 'Pneumonia', 'California');", "output": "SELECT Disease, State, COUNT(*) AS Total FROM Patients WHERE Disease IN ('Influenza', 'Pneumonia') GROUP BY Disease, State;"}
{"input": " \uac01 \ud50c\ub7ab\ud3fc\uc5d0 \uba87 \uba85\uc758 \uc544\ud2f0\uc2a4\ud2b8\uac00 \uc5f0\uad00\ub418\uc5b4 \uc788\ub098\uc694?", "context": "CREATE TABLE Artists (artist_id INT, artist_name VARCHAR(255)); INSERT INTO Artists (artist_id, artist_name) VALUES (1, 'Spotify'), (2, 'Apple Music'), (3, 'Tidal'); CREATE TABLE ArtistPlatforms (artist_id INT, platform_id INT); INSERT INTO ArtistPlatforms (artist_id, platform_id) VALUES (1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (3, 3); CREATE TABLE Platforms (platform_id INT, platform_name VARCHAR(255)); INSERT INTO Platforms (platform_id, platform_name) VALUES (1, 'Streaming'), (2, 'Downloads'), (3, 'Vinyl');", "output": "SELECT p.platform_name, COUNT(DISTINCT a.artist_id) AS artist_count FROM ArtistPlatforms ap JOIN Artists a ON ap.artist_id = a.artist_id JOIN Platforms p ON ap.platform_id = p.platform_id GROUP BY p.platform_name;"}
{"input": " \ub300\ud559 \ud559\uc704\uac00 \ud544\uc694\ud55c \uc9c1\uc704\uc758 \uacf5\uc11d\uc744 \ucda9\uc6d0\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \ubd80\uc11c\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE JobVacancies (VacancyID INT, Department VARCHAR(50), DegreeRequired VARCHAR(10), TimeToFill INT);", "output": "SELECT Department, AVG(TimeToFill) as Avg_TimeToFill FROM JobVacancies WHERE DegreeRequired = 'Yes' GROUP BY Department;"}
{"input": " \uc131\ubcc4\ubcc4 \ucd1d \uae30\uc0ac \uc218\uc640 \uc88b\uc544\uc694\ub97c \ub204\ub978 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE users (user_id INT, age INT, gender VARCHAR(10)); INSERT INTO users (user_id, age, gender) VALUES (1, 25, 'Female'), (2, 35, 'Male'); CREATE TABLE articles (article_id INT, title VARCHAR(50), category VARCHAR(20)); INSERT INTO articles (article_id, title, category) VALUES (1, 'Climate Crisis 101', 'climate_change'), (2, 'Economy in 2022', 'economy'); CREATE TABLE likes (user_id INT, article_id INT); INSERT INTO likes (user_id, article_id) VALUES (1, 1), (2, 1);", "output": "SELECT gender, COUNT(*) as article_count, AVG(age) as avg_age FROM users JOIN likes ON users.user_id = likes.user_id JOIN articles ON likes.article_id = articles.article_id GROUP BY gender;"}
{"input": " \uba54\ub274\ubcc4 \uc77c\uc77c \ud3c9\uade0 \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE daily_sales (menu_item VARCHAR(255), sales DECIMAL(10,2), date DATE); INSERT INTO daily_sales (menu_item, sales, date) VALUES ('Bruschetta', 200.00, '2022-01-01'), ('Spaghetti Bolognese', 350.00, '2022-01-01'), ('Cheesecake', 150.00, '2022-01-01');", "output": "SELECT menu_item, AVG(sales) FROM daily_sales GROUP BY menu_item;"}
{"input": " \ud2b9\uc815 \uad6d\uac00\uc758 \ubc29\ubb38\uc790\uac00 \ubcf4\ub0b8 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visitors_country (visitor_id INT, country VARCHAR(10), time_minutes INT); INSERT INTO visitors_country (visitor_id, country, time_minutes) VALUES (1, 'CountryA', 60), (2, 'CountryB', 90);", "output": "SELECT country, AVG(time_minutes) AS avg_time_minutes FROM visitors_country GROUP BY country;"}
{"input": "\uc9c0\uc815\ud559\uc801 \uc704\ud5d8 \ud3c9\uac00\ub97c \uc704\ud5d8 \uc218\uc900\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae30\uace0 \ud3c9\uac00 \uc774\ub984, \uc704\ud5d8 \uc218\uc900 \ubc0f \uc21c\uc704\ub97c \ud45c\uc2dc\ud569\ub2c8\uae4c?", "context": "CREATE TABLE RiskAssessments (AssessmentID INT, AssessmentName VARCHAR(50), RiskLevel INT); INSERT INTO RiskAssessments (AssessmentID, AssessmentName, RiskLevel) VALUES (1, 'Assessment A', 5), (2, 'Assessment B', 3), (3, 'Assessment C', 4), (4, 'Assessment D', 2);", "output": "SELECT AssessmentName, RiskLevel, ROW_NUMBER() OVER (ORDER BY RiskLevel DESC) AS Rank FROM RiskAssessments;"}
{"input": " 2020\ub144 \uac01 \uc7ac\ud65c\uc6a9 \uc5c5\uccb4\uac00 \uc7ac\ud65c\uc6a9\ud55c \uac01 \ud76c\ud1a0\ub958 \uc6d0\uc18c\uc758 \ucd1d\ub7c9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE recyclers (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255));CREATE TABLE recycling_stats (recycler_id INT, year INT, element VARCHAR(255), quantity INT, PRIMARY KEY (recycler_id, year, element), FOREIGN KEY (recycler_id) REFERENCES recyclers(id));INSERT INTO recycling_stats (recycler_id, year, element, quantity) VALUES (1, 2019, 'Neodymium', 500), (1, 2019, 'Praseodymium', 700), (2, 2019, 'Neodymium', 800), (2, 2019, 'Praseodymium', 1000), (1, 2020, 'Neodymium', 550), (1, 2020, 'Praseodymium', 750), (2, 2020, 'Neodymium', 850), (2, 2020, 'Praseodymium', 1100), (1, 2020, 'Holmium', 100), (1, 2020, 'Erbium', 150), (2, 2020, 'Holmium', 120), (2, 2020, 'Erbium', 180);", "output": "SELECT recycler_id, element, SUM(quantity) AS Total_Recycled FROM recycling_stats WHERE year = 2020 GROUP BY recycler_id, element;"}
{"input": " \ub274\uc695 \uc8fc\uc5d0 \ub3c4\uc11c\uad00\uc774 \ucd1d \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE states (id INT PRIMARY KEY, name TEXT); INSERT INTO states (id, name) VALUES (1, 'New York'); CREATE TABLE libraries (id INT PRIMARY KEY, state_id INT, name TEXT); INSERT INTO libraries (id, state_id, name) VALUES (1, 1, 'New York Public Library'); INSERT INTO libraries (id, state_id, name) VALUES (2, 1, 'Brooklyn Public Library');", "output": "SELECT COUNT(*) FROM libraries WHERE state_id = (SELECT id FROM states WHERE name = 'New York');"}
{"input": " \ud574\uc591 \uac74\uac15 \uc9c0\ud45c \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE countries (id INT, name TEXT, ocean_health_score FLOAT); INSERT INTO countries (id, name, ocean_health_score) VALUES (1, 'Country A', 78.2), (2, 'Country B', 82.6), (3, 'Country C', 71.5), (4, 'Country D', 80.9), (5, 'Country E', 79.4);", "output": "SELECT name, ocean_health_score FROM (SELECT name, ocean_health_score, ROW_NUMBER() OVER (ORDER BY ocean_health_score DESC) as rank FROM countries) subquery WHERE rank <= 3;"}
{"input": " \ud3ec\uc6a9\uc801 \uc8fc\ud0dd \uc815\ucc45\uc744 \uc801\uc6a9\ud558\ub294 \ubcf4\uc2a4\ud134 \uc2dc\uc758 \ucd1d \ubd80\ub3d9\uc0b0 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Properties (PropertyID INT, Price DECIMAL(10,2), City VARCHAR(255), InclusiveHousing BOOLEAN); INSERT INTO Properties (PropertyID, Price, City, InclusiveHousing) VALUES (1, 400000, 'Boston', true), (2, 500000, 'Boston', false), (3, 600000, 'Portland', true);", "output": "SELECT COUNT(*) FROM Properties WHERE City = 'Boston' AND InclusiveHousing = true;"}
{"input": " \ubc1c\uad74\ud604\uc7a5\ubcc4 \uc720\ubb3c\uc758 \ucd1d \uac1c\uc218\uc640 \ud3c9\uade0 \ubb34\uac8c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSites (SiteID INT, SiteName TEXT, Country TEXT); INSERT INTO ExcavationSites (SiteID, SiteName, Country) VALUES (1, 'Pompeii', 'Italy'); INSERT INTO ExcavationSites (SiteID, SiteName, Country) VALUES (2, 'Giza', 'Egypt'); CREATE TABLE ArtifactWeights (WeightID INT, ArtifactID INT, Weight DECIMAL(5,2)); INSERT INTO ArtifactWeights (WeightID, ArtifactID, Weight) VALUES (1, 1, 2.3); INSERT INTO ArtifactWeights (WeightID, ArtifactID, Weight) VALUES (2, 2, 3.4); INSERT INTO ArtifactWeights (WeightID, ArtifactID, Weight) VALUES (3, 3, 1.9); INSERT INTO ArtifactWeights (WeightID, ArtifactID, Weight) VALUES (4, 4, 2.7);", "output": "SELECT e.SiteName, COUNT(a.ArtifactID) AS TotalArtifacts, AVG(w.Weight) AS AvgWeight FROM ExcavationSites e JOIN ArtifactAnalysis a ON e.SiteID = a.SiteID JOIN ArtifactWeights w ON a.ArtifactID = w.ArtifactID GROUP BY e.SiteName;"}
{"input": " \uac01 \ud300\uc758 \ucd5c\uace0 \ub4dd\uc810\uc790 3\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Player (PlayerID int, PlayerName varchar(50), TeamID int); CREATE TABLE Goal (GoalID int, PlayerID int, Goals int, MatchDate date);  INSERT INTO Player (PlayerID, PlayerName, TeamID) VALUES (1, 'Messi', 1), (2, 'Neymar', 1), (3, 'Mbappe', 1), (4, 'Ronaldo', 2); INSERT INTO Goal (GoalID, PlayerID, Goals, MatchDate) VALUES (1, 1, 5, '2022-04-01'), (2, 1, 3, '2022-04-05'), (3, 2, 2, '2022-04-01'), (4, 3, 4, '2022-04-05'), (5, 4, 6, '2022-04-01');", "output": "SELECT p.TeamID, p.PlayerName, SUM(g.Goals) AS TotalGoals, ROW_NUMBER() OVER (PARTITION BY p.TeamID ORDER BY SUM(g.Goals) DESC) AS Ranking FROM Player p JOIN Goal g ON p.PlayerID = g.PlayerID GROUP BY p.TeamID, p.PlayerName HAVING Ranking <= 3;"}
{"input": "\uc778\uad6c 250,000~500,000\uba85 \uc0ac\uc774\uc758 \ub3c4\uc2dc \uc9c0\uc5ed \uacbd\ucc30\uc11c\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE police_departments (id INT, department_name VARCHAR(50), location VARCHAR(50), population INT, average_response_time FLOAT);", "output": "SELECT department_name, MAX(average_response_time) FROM police_departments WHERE population BETWEEN 250000 AND 500000 AND location = 'urban' GROUP BY department_name UNION ALL SELECT department_name, MIN(average_response_time) FROM police_departments WHERE population BETWEEN 250000 AND 500000 AND location = 'urban' GROUP BY department_name;"}
{"input": " \uae30\uc218 \ub18d\uc7a5\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc885\uc758 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE brackish_farms (farm_id INT, species VARCHAR(20), biomass FLOAT); INSERT INTO brackish_farms (farm_id, species, biomass) VALUES (1, 'Tilapia', 1200.5), (2, 'Barramundi', 800.3), (3, 'Catfish', 1500.2);", "output": "SELECT species, SUM(biomass) total_biomass, ROW_NUMBER() OVER (ORDER BY SUM(biomass) DESC) rank FROM brackish_farms GROUP BY species;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\ubd80\ud55c \ud504\ub85c\uadf8\ub7a8\uacfc \uace0\uc720 \uae30\ubd80\uc790 \uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Programs (ProgramID int, Name varchar(50), Budget money); CREATE TABLE Donors (DonorID int, Name varchar(50), Age int, ProgramID int); CREATE TABLE Donations (DonationID int, DonorID int, Amount money, DonationDate date); INSERT INTO Programs (ProgramID, Name, Budget) VALUES (1, 'Education', 10000), (2, 'Healthcare', 15000), (3, 'Arts & Culture', 9000); INSERT INTO Donors (DonorID, Name, Age, ProgramID) VALUES (1, 'Alice', 25, 1), (2, 'Bob', 22, 1), (3, 'Charlie', 30, 2), (4, 'David', 28, 2), (5, 'Eva', 35, 3); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (1, 1, 500, '2022-01-01'), (2, 1, 2000, '2022-06-15'), (3, 2, 6000, '2022-03-25'), (4, 3, 1000, '2022-04-15'), (5, 5, 5000, '2022-01-05'), (6, 5, 1000, '2022-01-15');", "output": "SELECT P.Name, COUNT(DISTINCT D.DonorID) as UniqueDonors FROM Programs P JOIN Donors D ON P.ProgramID = D.ProgramID JOIN Donations DT ON D.DonorID = DT.DonorID WHERE MONTH(DT.DonationDate) BETWEEN 1 AND 3 GROUP BY P.Name;"}
{"input": " \ube0c\ub79c\ub4dc\ubcc4 \uc81c\ud488\ud3c9\uc810\uc758 6\uac1c\uc6d4 \uc774\ub3d9\ud3c9\uade0\uc744 \ub0a0\uc9dc\uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE brands (brand_id INT, brand_name VARCHAR(50)); CREATE TABLE ratings (rating_id INT, brand_id INT, product_rating DECIMAL(3,2), rating_date DATE);", "output": "SELECT r.brand_id, r.rating_date, AVG(r.product_rating) OVER (PARTITION BY r.brand_id ORDER BY r.rating_date ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as moving_avg FROM ratings r;"}
{"input": " \ubc14\uc774\ub0b8\uc2a4 \uc2a4\ub9c8\ud2b8 \uccb4\uc778 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub514\uc9c0\ud138 \uc790\uc0b0\uc5d0 \ub300\ud55c \ud3c9\uade0 \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists binance_assets (asset_id INT, asset_name VARCHAR(255), total_txn_volume DECIMAL(18,2)); INSERT INTO binance_assets (asset_id, asset_name, total_txn_volume) VALUES (1, 'BNB', 150000000), (2, 'BUSD', 120000000), (3, 'CAKE', 90000000), (4, 'ADA', 80000000), (5, 'XRP', 70000000), (6, 'DOT', 60000000), (7, 'MATIC', 50000000), (8, 'LTC', 40000000), (9, 'LINK', 30000000), (10, 'BCH', 20000000);", "output": "SELECT asset_name, AVG(total_txn_volume) as avg_volume FROM binance_assets GROUP BY asset_name;"}
{"input": "\ubaa8\ub4e0 \uba54\ub274\uc758 \ub9e4\ucd9c\uacfc \ucd94\uac00 \ube44\uc6a9\uc744 \ud569\uc0b0\ud558\uba74 \uc694\ub9ac \uc885\ub958\ubcc4 \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255), Cuisine varchar(255)); CREATE TABLE MenuItems (MenuID int, MenuName varchar(255), RestaurantID int, Sales int); CREATE TABLE AdditionalCharges (ChargeID int, ChargeName varchar(255), RestaurantID int, ChargeAmt int);", "output": "SELECT R.Cuisine, SUM(M.Sales + AC.ChargeAmt) as TotalRevenue FROM Restaurants R INNER JOIN MenuItems M ON R.RestaurantID = M.RestaurantID INNER JOIN AdditionalCharges AC ON R.RestaurantID = AC.RestaurantID GROUP BY R.Cuisine;"}
{"input": " \ubd81\ubbf8 \ub514\uc9c0\ud138 \uc804\uc2dc\uad00\uc758 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DigitalExhibits (ExhibitID INT, Title VARCHAR(50), Curator VARCHAR(50), City VARCHAR(50)); INSERT INTO DigitalExhibits (ExhibitID, Title, Curator, City) VALUES (1, 'Digital Art Museum', 'Alice Johnson', 'New York'); INSERT INTO DigitalExhibits (ExhibitID, Title, Curator, City) VALUES (2, 'Virtual Reality Experience', 'Bob Smith', 'Los Angeles'); CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(10), City VARCHAR(50)); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (1, 25, 'Male', 'New York'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (2, 32, 'Female', 'Los Angeles'); INSERT INTO Visitors (VisitorID, Age, Gender, City) VALUES (3, 45, 'Male', 'Los Angeles'); CREATE TABLE Attendance (VisitorID INT, ExhibitID INT); INSERT INTO Attendance (VisitorID, ExhibitID) VALUES (1, 1); INSERT INTO Attendance (VisitorID, ExhibitID) VALUES (2, 2); INSERT INTO Attendance (VisitorID, ExhibitID) VALUES (3, 2);", "output": "SELECT SUM(Attendance.VisitorID) FROM Attendance INNER JOIN Visitors ON Attendance.VisitorID = Visitors.VisitorID INNER JOIN DigitalExhibits ON Attendance.ExhibitID = DigitalExhibits.ExhibitID WHERE Visitors.City = 'North America';"}
{"input": " \ucd1d \uacf5\uaca9 \uc218\uc5d0 \ub530\ub77c \ubd84\ub958\ub418\uace0 \uac00\uc7a5 \ucd5c\uadfc \uacf5\uaca9 \ub0a0\uc9dc\uc5d0 \ub530\ub77c \uc815\ub82c\ub41c \uc0c1\uc704 3\uac1c \uc704\ud611 \uadf8\ub8f9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_actors (id INT, group_name VARCHAR(50), attack_date DATE, attacks INT); INSERT INTO threat_actors (id, group_name, attack_date, attacks) VALUES (1, 'Group A', '2021-01-01', 10); INSERT INTO threat_actors (id, group_name, attack_date, attacks) VALUES (2, 'Group B', '2021-02-01', 5); INSERT INTO threat_actors (id, group_name, attack_date, attacks) VALUES (3, 'Group C', '2021-03-01', 15);", "output": "SELECT group_name, attacks, ROW_NUMBER() OVER (PARTITION BY attacks ORDER BY attack_date DESC) as group_rank FROM threat_actors;"}
{"input": "\uc77c\ubcf8\uc774\ub098 \uc911\uad6d\uc5d0 \ubcf8\uc0ac\ub97c \ub454 \ud68c\uc0ac\uac00 \uc81c\uc870\ud55c \ud56d\uacf5\uae30\uc758 \ud3c9\uade0 \uc81c\uc870\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ManufacturerCountry (ManufacturerID INT PRIMARY KEY, ManufacturerName VARCHAR(50), Country VARCHAR(50)); INSERT INTO ManufacturerCountry (ManufacturerID, ManufacturerName, Country) VALUES (1, 'Mitsubishi Heavy Industries', 'Japan'); INSERT INTO ManufacturerCountry (ManufacturerID, ManufacturerName, Country) VALUES (2, 'Comac', 'China');", "output": "SELECT AVG(A.ManufacturingDate) FROM Aircraft A INNER JOIN Manufacturer M ON A.Manufacturer = M.ManufacturerName INNER JOIN ManufacturerCountry MC ON M.ManufacturerID = MC.ManufacturerID WHERE MC.Country IN ('Japan', 'China');"}
{"input": " 2023\ub144\uc5d0 \uc0ac\uc6a9\uc790 \ud3c9\uac00\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c\uc758 \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE creative_ai_apps (app_name VARCHAR(255), user_rating INT, year INT); INSERT INTO creative_ai_apps (app_name, user_rating, year) VALUES ('App1', 85, 2023), ('App2', 92, 2023), ('App3', 78, 2023), ('App4', 90, 2023), ('App5', 88, 2023), ('App6', 75, 2023);", "output": "SELECT app_name, user_rating FROM (SELECT app_name, user_rating, ROW_NUMBER() OVER (ORDER BY user_rating DESC) as rank FROM creative_ai_apps WHERE year = 2023) tmp WHERE rank <= 2;"}
{"input": " '\uc288\ud130' \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\uace0 e\uc2a4\ud3ec\uce20 \uacbd\uae30\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE PlayerEsportsData (PlayerID INT, Age INT, Game VARCHAR(20), EventID INT); INSERT INTO PlayerEsportsData (PlayerID, Age, Game, EventID) VALUES (1, 22, 'Shooter', 1), (2, 25, 'Shooter', 2), (3, 28, 'Racing', 3);", "output": "SELECT AVG(Age) FROM PlayerEsportsData WHERE Game = 'Shooter' AND PlayerID IN (SELECT PlayerID FROM EsportsEvents);"}
{"input": " \ud55c \ub2ec\uc5d0 \ub3c4\uc2dc\uc758 \ucd1d \uc804\uae30 \uc790\ub3d9\ucc28 \ub300\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_electric_vehicles (city VARCHAR(50), electric_vehicle INT, date DATE);", "output": "SELECT city, SUM(electric_vehicle) as total_evs FROM city_electric_vehicles GROUP BY city, DATE_TRUNC('month', date);"}
{"input": " \uc791\ub144 SpaceAirlines\uc758 \ud3c9\uade0 \ube44\ud589 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE flights (flight_id INT, airline VARCHAR(255), flight_date DATE, flight_time INT); INSERT INTO flights (flight_id, airline, flight_date, flight_time) VALUES (1, 'SpaceAirlines', '2022-02-03', 240), (2, 'SpaceAirlines', '2022-06-15', 210), (3, 'SpaceAirlines', '2021-11-18', 270), (4, 'SpaceAirlines', '2022-03-25', 220), (5, 'SpaceAirlines', '2021-09-01', 250);", "output": "SELECT AVG(flight_time) FROM flights WHERE airline = 'SpaceAirlines' AND flight_date >= DATEADD(year, -1, CURRENT_DATE);"}
{"input": " \uad6d\uc81c\uc6b0\uc8fc\uc815\uac70\uc7a5\uc5d0 \ub2e4\ub140\uc628 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE astronaut_missions(astronaut_id INT, mission_id INT, mission_start DATE, mission_end DATE); CREATE TABLE astronauts(id INT, name VARCHAR(255), birth_date DATE, gender VARCHAR(10)); INSERT INTO astronauts(id, name, birth_date, gender) VALUES (1, 'Jane Doe', '1985-02-15', 'Female'); INSERT INTO astronaut_missions(astronaut_id, mission_id, mission_start, mission_end) VALUES (1, 1, '2010-01-01', '2010-03-31');", "output": "SELECT AVG(YEAR(astronauts.birth_date) - YEAR(astronaut_missions.mission_start)) AS avg_age FROM astronauts INNER JOIN astronaut_missions ON astronauts.id = astronaut_missions.astronaut_id WHERE astronaut_missions.mission_id IN (SELECT id FROM missions WHERE name = 'ISS');"}
{"input": " \ubaa9\uc7ac \uc218\ud655\uc744 \ud1b5\ud574 \uc544\ud55c\ub300\ub9bc\uc758 \uc57c\uc0dd\ub3d9\ubb3c \uc11c\uc2dd\uc9c0 \uc218\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE wildlife_habitats (id INT, name VARCHAR(50), forest_id INT); INSERT INTO wildlife_habitats (id, name, forest_id) VALUES (1, 'Wetlands', 1), (2, 'Grasslands', 3), (3, 'Forest', 2), (4, 'Scrublands', 2);", "output": "SELECT COUNT(*) FROM wildlife_habitats wh JOIN forests f ON wh.forest_id = f.id WHERE f.type = 'boreal' AND EXISTS (SELECT 1 FROM harvests h WHERE h.forest_id = f.id);"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac8c\uc2dc\ubb3c ID 1001\uc744 \uc2eb\uc5b4\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE post_likes (user_id INT, post_id INT, like_date DATE); INSERT INTO post_likes (user_id, post_id, like_date) VALUES (1, 1001, '2022-01-01'), (2, 1001, '2022-01-02'), (3, 1001, '2022-01-03'), (1, 1001, '2022-01-04');", "output": "SELECT COUNT(*) FROM post_likes WHERE post_id = 1001 AND like_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND user_id NOT IN (SELECT user_id FROM post_likes WHERE post_id = 1001 AND like_date < DATE_SUB(CURDATE(), INTERVAL 1 WEEK));"}
{"input": " 2019\ub144\uc5d0 \uc0b0\ub9bc \uad00\ub9ac\uc778\ub2f9 \uba87 \uac1c\uc758 \ubaa9\uc7ac \uc218\ud655 \ud5c8\uac00\uac00 \ubc1c\uae09\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE harvest_permits (id INT, ranger VARCHAR(255), issued_date DATE);", "output": "SELECT ranger, COUNT(*) as num_permits FROM harvest_permits WHERE EXTRACT(YEAR FROM issued_date) = 2019 GROUP BY ranger;"}
{"input": " \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubd81\uadf9\ud574\uc758 \uc120\ubc15 \uc218\ub97c \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE arctic_vessels (vessel_id INT, vessel_name VARCHAR(255), category VARCHAR(255), longitude DECIMAL(9,6), latitude DECIMAL(9,6)); CREATE VIEW arctic_vessels_arctic AS SELECT * FROM arctic_vessels WHERE longitude BETWEEN -180 AND -60 AND latitude BETWEEN 60 AND 90;", "output": "SELECT category, COUNT(*) FROM arctic_vessels_arctic GROUP BY category;"}
{"input": " \uc6b0\ub9ac \uc7ac\uace0\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE inventory (id INT, fabric VARCHAR(50), sustainable BOOLEAN); INSERT INTO inventory (id, fabric, sustainable) VALUES (1, 'organic cotton', true), (2, 'nylon', false);", "output": "SELECT ROUND(COUNT(sustainable) * 100.0 / (SELECT COUNT(*) FROM inventory), 2) FROM inventory WHERE sustainable = true;"}
{"input": " \uc6e8\uc5b4\ub7ec\ube14 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \ud68c\uc6d0\uc758 \ud3c9\uade0 \uba85\uc0c1 \uc138\uc158 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Members (ID INT, UsesWearableTech BOOLEAN); CREATE TABLE Meditation (MemberID INT, Duration INT); INSERT INTO Members (ID, UsesWearableTech) VALUES (1, true), (2, false); INSERT INTO Meditation (MemberID, Duration) VALUES (1, 30), (1, 45), (2, 60);", "output": "SELECT AVG(Duration) FROM Meditation WHERE MemberID IN (SELECT MemberID FROM Members WHERE UsesWearableTech = true);"}
{"input": " 2020\ub144\uc5d0 \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uac00 \ubaa8\ub4e0 \uad6d\uac00\uc5d0 \ub300\ud574 \ubc1c\ud589\ud55c \uc5ec\ud589 \uc8fc\uc758\ubcf4\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE travel_advisories (country VARCHAR(50), year INT, advisories INT);CREATE TABLE canada_travel_advisories (country VARCHAR(50), year INT, advisory_level INT);", "output": "SELECT SUM(advisories) FROM (SELECT country, SUM(advisories) AS advisories FROM travel_advisories WHERE year = 2020 GROUP BY country UNION ALL SELECT country, SUM(advisory_level) AS advisories FROM canada_travel_advisories WHERE year = 2020 GROUP BY country) AS total;"}
{"input": " UNION\uc744 \uc0ac\uc6a9\ud558\uc5ec \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc608\uc220 \ud589\uc0ac\ub97c \uad00\ub78c\ud55c \uc21c \ubc29\ubb38\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EventVisitors (visitor_id INT, event_id INT, visitor_location VARCHAR(20)); INSERT INTO EventVisitors (visitor_id, event_id, visitor_location) VALUES (1, 1, 'California'), (2, 2, 'New York'), (3, 1, 'Texas'), (4, 3, 'California'), (5, 3, 'New York');", "output": "SELECT visitor_location FROM EventVisitors WHERE visitor_location = 'California' UNION SELECT visitor_location FROM Events WHERE event_location = 'California';"}
{"input": " '\uc720\ub7fd' \uc9c0\uc5ed\uc758 \ubc29\ubb38\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uad00\ub78c \uc791\ud488 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (ArtworkID INT, ExhibitionID INT, VisitorID INT);", "output": "SELECT AVG(a.ArtworksViewed) FROM (SELECT v.VisitorID, COUNT(a.ArtworkID) ArtworksViewed FROM Artworks a JOIN Exhibitions e ON a.ExhibitionID = e.ExhibitionID JOIN Visitors v ON a.VisitorID = v.VisitorID JOIN Regions r ON v.Country = r.CountryName WHERE r.Region = 'Europe' GROUP BY v.VisitorID) a;"}
{"input": " \uac74\ubb3c \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud55c \uac01 \ub3d9\ub124\uc758 \ud3c9\uade0 \uc784\ub300\ub8cc\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Neighborhoods (neighborhood_id INT, name VARCHAR(50));CREATE TABLE Units (unit_id INT, neighborhood_id INT, building_type VARCHAR(50), rent INT);", "output": "SELECT n.name, b.building_type, AVG(u.rent) as avg_rent FROM Units u JOIN Neighborhoods n ON u.neighborhood_id = n.neighborhood_id JOIN Buildings b ON u.building_id = b.building_id GROUP BY n.name, b.building_type;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uad70\uc0ac \uae30\uc220 \uc218\uc640 \ud574\ub2f9 \uae30\uc220\uc758 \ud3c9\uade0 \ucd9c\uc2dc \uc5f0\ub3c4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE MilitaryTech (TechID INT, TechName VARCHAR(255), TechCategory VARCHAR(255), ReleaseYear INT);CREATE TABLE CountryTech (CountryID INT, TechID INT, ReleaseYear INT);CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(255));", "output": "SELECT CountryName, COUNT(DISTINCT TechID) as TechCount, AVG(ReleaseYear) as AvgReleaseYear FROM MilitaryTech MT INNER JOIN CountryTech CT ON MT.TechID = CT.TechID INNER JOIN Countries C ON CT.CountryID = C.CountryID GROUP BY CountryName;"}
{"input": " 'site_p' \ubc0f 'site_q'\uc5d0 \uace0\uc720\ud55c \uc720\ubb3c \uc720\ud615\uc774 1\uac1c \uc774\uc0c1 \uc788\ub294 \ubc1c\uad74 \ud604\uc7a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site_p (site_id INT, artifact_type VARCHAR(255)); INSERT INTO site_p (site_id, artifact_type) VALUES (1, 'Pottery'), (2, 'Tools'), (3, 'Pottery'), (4, 'Beads'); CREATE TABLE site_q (site_id INT, artifact_type VARCHAR(255)); INSERT INTO site_q (site_id, artifact_type) VALUES (5, 'Jewelry'), (6, 'Tools'), (7, 'Jewelry'), (8, 'Beads');", "output": "SELECT site_id FROM (SELECT site_id, COUNT(DISTINCT artifact_type) as count FROM site_p GROUP BY site_id HAVING count > 0 INTERSECT SELECT site_id, COUNT(DISTINCT artifact_type) as count FROM site_q GROUP BY site_id HAVING count > 0) AS subquery;"}
{"input": " \ubaa8\ub4e0 \ube44\ucc44\uc2dd \uc694\ub9ac\ub97c \uc7ac\ub8cc\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE ingredients (id INT, name VARCHAR(255), is_vegetarian BOOLEAN); INSERT INTO ingredients (id, name, is_vegetarian) VALUES (1, 'Chicken', false), (2, 'Tofu', true), (3, 'Beef', false), (4, 'Garlic', true), (5, 'Onions', true); CREATE TABLE dishes (id INT, name VARCHAR(255), is_vegetarian BOOLEAN); INSERT INTO dishes (id, name, is_vegetarian) VALUES (1, 'Chicken Curry', false), (2, 'Vegan Tacos', true), (3, 'Beef Stew', false), (4, 'Garlic Bread', true); CREATE TABLE dish_ingredients (dish_id INT, ingredient_id INT); INSERT INTO dish_ingredients (dish_id, ingredient_id) VALUES (1, 1), (1, 4), (1, 5), (2, 2), (2, 4), (2, 5), (3, 1), (3, 3), (3, 4), (4, 4), (4, 5);", "output": "SELECT dishes.name, ingredients.name FROM dishes INNER JOIN dish_ingredients ON dishes.id = dish_ingredients.dish_id INNER JOIN ingredients ON dish_ingredients.ingredient_id = ingredients.id WHERE dishes.is_vegetarian = false;"}
{"input": " \ube0c\ub77c\uc9c8 \ud50c\ub808\uc774\uc5b4\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uac8c\uc784 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(20), Genre VARCHAR(20)); INSERT INTO Games (GameID, GameName, Genre) VALUES (1, 'Fortnite', 'Battle Royale'), (2, 'Minecraft', 'Sandbox'), (3, 'Grand Theft Auto V', 'Action-Adventure'), (4, 'League of Legends', 'MOBA'); CREATE TABLE Players_Games (PlayerID INT, GameID INT); INSERT INTO Players_Games (PlayerID, GameID) VALUES (1, 1), (2, 2), (3, 3), (4, 3), (5, 4), (6, 4), (7, 4); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'Brazil'), (2, 30, 'Female', 'Brazil'), (3, 15, 'Male', 'Brazil'), (4, 35, 'Female', 'Mexico'), (5, 50, 'Male', 'Brazil'), (6, 22, 'Male', 'Brazil'), (7, 28, 'Male', 'Brazil');", "output": "SELECT Genre, COUNT(*) AS Popularity FROM Players INNER JOIN Players_Games ON Players.PlayerID = Players_Games.PlayerID INNER JOIN Games ON Players_Games.GameID = Games.GameID WHERE Players.Country = 'Brazil' GROUP BY Genre ORDER BY Popularity DESC LIMIT 1;"}
{"input": " \uac00\uc7a5 \uc800\ub834\ud55c \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc5d0 \uc788\ub294 \uacf5\ub3d9 \uc18c\uc720\uc790\uc758 \uc774\ub984\uacfc \uc9c0\uc18d \uac00\ub2a5\ud55c \uae30\ub2a5\uc744 \uac16\ucd98 \ubd80\ub3d9\uc0b0\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE co_owners (owner_id INT, name VARCHAR(255), property_id INT); CREATE TABLE properties (property_id INT, sustainable BOOLEAN, address VARCHAR(255), neighborhood VARCHAR(255)); CREATE TABLE neighborhoods (neighborhood VARCHAR(255), housing_affordability_index FLOAT);", "output": "SELECT co_owners.name, properties.address FROM co_owners INNER JOIN properties ON co_owners.property_id = properties.property_id INNER JOIN neighborhoods ON properties.neighborhood = neighborhoods.neighborhood WHERE properties.sustainable = TRUE ORDER BY neighborhoods.housing_affordability_index ASC LIMIT 3;"}
{"input": " \uc2dc\uce74\uace0 \uc2dc\uc5d0\ub294 \uacbd\ucc30\uc11c\uac00 \ucd1d \uba87 \uac1c \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE PoliceStations (PoliceStationID int, PoliceStationName varchar(255), City varchar(255)); INSERT INTO PoliceStations (PoliceStationID, PoliceStationName, City) VALUES (1, 'Chicago Police Station 1', 'Chicago'), (2, 'Chicago Police Station 2', 'Chicago');", "output": "SELECT COUNT(*) FROM PoliceStations WHERE City = 'Chicago';"}
{"input": " \uc720\ub7fd\uc5f0\ud569\uc758 \uc0ac\uc774\ubc84 \ubcf4\uc548\uc744 \uc704\ud55c \ucd1d \uc608\uc0b0\uacfc \uac01 \ud68c\uc6d0\uad6d\uc758 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cyber_budget (id INT, state TEXT, budget INT, region TEXT); INSERT INTO cyber_budget (id, state, budget, region) VALUES (1, 'France', 5000000, 'European Union'), (2, 'Germany', 6000000, 'European Union');", "output": "SELECT cb.region, cb.state, AVG(cb.budget) as avg_budget FROM cyber_budget cb GROUP BY cb.region, cb.state;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uac1c\ubd09\ub41c \uacf5\ud3ec\uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Genres (id INT, genre VARCHAR(50)); CREATE TABLE Movies (id INT, title VARCHAR(100), genre_id INT, budget INT, release_year INT); INSERT INTO Genres (id, genre) VALUES (1, 'Horror'), (2, 'Comedy'); INSERT INTO Movies (id, title, genre_id, budget, release_year) VALUES (1, 'Movie1', 1, 5000000, 2016), (2, 'Movie2', 1, 7000000, 2017), (3, 'Movie3', 2, 8000000, 2018);", "output": "SELECT AVG(budget) FROM Movies WHERE genre_id = (SELECT id FROM Genres WHERE genre = 'Horror') AND release_year BETWEEN 2015 AND 2020;"}
{"input": " \uc2dc\ub4dc\ub2c8 \uac01 \uc9c0\uc5ed\uc758 \uc5f0\uc18d \uc8fc \ub3d9\uc548 \ubb3c \uc18c\ube44\ub7c9\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sydney_water_consumption (id INT, date DATE, district VARCHAR(20), water_consumption FLOAT); INSERT INTO sydney_water_consumption (id, date, district, water_consumption) VALUES (1, '2023-01-01', 'Central Business District', 12000.0), (2, '2023-01-02', 'Eastern Suburbs', 15000.0);", "output": "SELECT district, LAG(water_consumption) OVER (PARTITION BY district ORDER BY date) - water_consumption FROM sydney_water_consumption;"}
{"input": " \uc724\ub9ac\uc801 \ub178\ub3d9 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uacf5\uae09\uc5c5\uccb4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE supplier (supplier_id INT, name VARCHAR(255), ethical_score INT); INSERT INTO supplier (supplier_id, name, ethical_score) VALUES (1, 'Green Supplies', 90), (2, 'Eco Distributors', 85), (3, 'Fair Trade Corp', 95);", "output": "SELECT supplier_id, name, ethical_score FROM (SELECT supplier_id, name, ethical_score, RANK() OVER (ORDER BY ethical_score DESC) as rank FROM supplier) AS supplier_ranks WHERE rank <= 3;"}
{"input": " \uac01 \ud56d\uad6c\ub85c \ub4e4\uc5b4\uc624\uace0 \ub098\uac00\ub294 \ud654\ubb3c\uc758 \ucd1d \uc911\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cargo_weights (id INT, visit_id INT, weight INT); INSERT INTO cargo_weights (id, visit_id, weight) VALUES (1, 1, 500), (2, 1, 800), (3, 2, 1200), (4, 3, 1000), (5, 4, 1500);", "output": "SELECT ports.name, SUM(cargo_weights.weight) FROM ports INNER JOIN visits ON ports.id = visits.port_id INNER JOIN cargo_weights ON visits.id = cargo_weights.visit_id GROUP BY ports.name;"}
{"input": " \uad50\uc721 \ubd80\ubb38\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uae08\uc561\uc758 \ud380\ub529 \ub77c\uc6b4\ub4dc\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_year INT, founder_gender TEXT); CREATE TABLE funding_rounds (id INT, company_id INT, round_type TEXT, amount INT); INSERT INTO companies (id, name, industry, founding_year, founder_gender) VALUES (1, 'Healthera', 'Healthcare', 2015, 'Female'); INSERT INTO companies (id, name, industry, founding_year, founder_gender) VALUES (2, 'Vira Health', 'Healthcare', 2018, 'Female'); INSERT INTO companies (id, name, industry, founding_year, founder_gender) VALUES (3, 'Edvance', 'Education', 2017, 'Male'); INSERT INTO funding_rounds (id, company_id, round_type, amount) VALUES (1, 1, 'Seed', 1000000); INSERT INTO funding_rounds (id, company_id, round_type, amount) VALUES (2, 2, 'Series A', 5000000); INSERT INTO funding_rounds (id, company_id, round_type, amount) VALUES (3, 3, 'Seed', 2000000);", "output": "DELETE FROM funding_rounds WHERE id = (SELECT funding_rounds.id FROM funding_rounds JOIN companies ON funding_rounds.company_id = companies.id WHERE companies.industry = 'Education' ORDER BY funding_rounds.amount DESC LIMIT 1);"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 10\ud68c \uc774\uc0c1\uc758 \uc6b4\ub3d9\uc744 \uc644\ub8cc\ud55c \ub0a8\ubd80 \uc9c0\uc5ed \ud68c\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE memberships (id INT, member_type VARCHAR(50), region VARCHAR(50)); CREATE TABLE workout_data (member_id INT, workout_type VARCHAR(50), duration INT, heart_rate_avg INT, calories_burned INT, workout_date DATE);", "output": "SELECT 100.0 * COUNT(DISTINCT m.id) / (SELECT COUNT(DISTINCT m.id) FROM memberships m WHERE m.region = 'South') as percentage FROM workout_data w JOIN memberships m ON w.member_id = m.id WHERE w.workout_date >= CURRENT_DATE - INTERVAL '30' DAY GROUP BY m.region HAVING COUNT(w.id) > 10;"}
{"input": " \uc9c0\ub09c \ub2ec \ud574\uc2dc\ud0dc\uadf8 \"#art\"\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc5d0 \ub300\ud55c \uc88b\uc544\uc694 \uc218\ub97c \uc694\uc77c\ubcc4, \uc2dc\uac04\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, user VARCHAR(255), content TEXT, likes INT, timestamp TIMESTAMP);", "output": "SELECT DATE(timestamp) AS day, HOUR(timestamp) AS hour, SUM(likes) FROM posts WHERE hashtags LIKE '%#art%' AND timestamp BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() GROUP BY day, hour;"}
{"input": " '\uc5d0\ucf54\ud31c'\uacfc '\uadf8\ub9b0\ud544\uc988'\uc758 '\uce58\ud0a8' \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE EcoFarm (product_id INT, product_name VARCHAR(50), price FLOAT); CREATE TABLE GreenFields (product_id INT, product_name VARCHAR(50), price FLOAT); INSERT INTO EcoFarm (product_id, product_name, price) VALUES (1, 'Eggs', 4.0), (2, 'Milk', 3.5), (3, 'Chicken', 6.5), (4, 'Beef', 8.0); INSERT INTO GreenFields (product_id, product_name, price) VALUES (1, 'Eggs', 4.5), (2, 'Milk', 4.0), (3, 'Chicken', 7.0), (4, 'Beef', 8.5);", "output": "SELECT AVG(price) FROM (SELECT price FROM EcoFarm WHERE product_name = 'Chicken' UNION ALL SELECT price FROM GreenFields WHERE product_name = 'Chicken') AS subquery;"}
{"input": " 'pathway1'\uc5d0\ub294 \uc5b4\ub5a4 \uc720\uc804\uc790\uac00 \uad00\uc5ec\ud558\ub098\uc694?", "context": "CREATE TABLE GenePathways (gene_id INT, gene_name TEXT, pathway TEXT); INSERT INTO GenePathways (gene_id, gene_name, pathway) VALUES (1, 'GeneA', 'pathway1'), (2, 'GeneB', 'pathway2'), (3, 'GeneC', 'pathway1');", "output": "SELECT gene_name FROM GenePathways WHERE pathway = 'pathway1';"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc5d0\ub294 \uba87 \uac1c\uc758 \ubb38\ud654\uc720\uc0b0\uc774 \uc788\uc73c\uba70 \uc791\ub144\uc5d0 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Sites (id INT, site VARCHAR(50), continent VARCHAR(50), last_update DATE); INSERT INTO Sites (id, site, continent, last_update) VALUES (1, 'Sydney Opera House', 'Oceania', '2022-01-01'), (2, 'Uluru', 'Oceania', '2021-08-15'), (3, 'Great Barrier Reef', 'Oceania', '2022-03-27');", "output": "SELECT COUNT(*) FROM Sites WHERE continent = 'Oceania' AND last_update >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": "2022\ub144 \uc0c1\ubc18\uae30\uc5d0 \uad50\uc0ac\ub4e4\uc740 \uc804\ubb38\uc131 \uac1c\ubc1c \uc6cc\ud06c\uc20d\uc5d0 \uba87 \ubc88\uc774\ub098 \ucc38\uc11d\ud588\ub098\uc694?", "context": "CREATE TABLE pd_workshops (teacher_id INT, workshop_date DATE); INSERT INTO pd_workshops (teacher_id, workshop_date) VALUES (1, '2022-01-01'), (1, '2022-02-01'), (2, '2022-01-01'), (3, '2022-03-01'), (3, '2022-04-01'), (4, '2022-05-01');", "output": "SELECT teacher_id, COUNT(*) OVER (PARTITION BY teacher_id) AS workshops_attended FROM pd_workshops WHERE workshop_date BETWEEN '2022-01-01' AND '2022-06-30';"}
{"input": " \ub098\ub77c\ubcc4 \uc804\ud1b5\uc608\uc220 \ud589\uc0ac\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE TraditionalArtEvents (ID INT, Country VARCHAR(50), EventName VARCHAR(100), Date DATE); INSERT INTO TraditionalArtEvents (ID, Country, EventName, Date) VALUES (1, 'Japan', 'Kabuki Performance', '2022-01-01'); INSERT INTO TraditionalArtEvents (ID, Country, EventName, Date) VALUES (2, 'Mexico', 'Dia de los Muertos', '2022-11-01');", "output": "SELECT Country, COUNT(*) OVER (PARTITION BY Country) AS TotalEvents FROM TraditionalArtEvents;"}
{"input": " 'community_education' \ubcf4\uae30\uc5d0\uc11c \uc778\uad6c\uac00 100\uba85\uc774 \ub118\ub294 \uace0\uc720\ud55c \ub3d9\ubb3c\uc758 \uc218\ub294 \ub300\ub959\ubcc4\ub85c \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE animal_population (animal VARCHAR(50), continent VARCHAR(50), population INT); INSERT INTO animal_population (animal, continent, population) VALUES ('Tiger', 'Asia', 500), ('Elephant', 'Africa', 300), ('Giraffe', 'Africa', 200), ('Penguin', 'Antarctica', 100); CREATE VIEW community_education AS SELECT animal, CONCAT('South ', continent) AS continent FROM animal_population WHERE continent IN ('America', 'Asia');", "output": "SELECT continent, COUNT(DISTINCT animal) FROM community_education WHERE population > 100 GROUP BY continent;"}
{"input": " 'social_media' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uac8c\uc2dc\ubb3c\uc744 \ubcf4\uc720\ud55c \uc0c1\uc704 5\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), created_at TIMESTAMP); INSERT INTO user (id, name, age, gender, created_at) VALUES (1, 'John Doe', 25, 'Male', '2021-01-01 10:00:00'); CREATE TABLE post (id INT, user_id INT, content TEXT, posted_at TIMESTAMP); INSERT INTO post (id, user_id, content, posted_at) VALUES (1, 1, 'Hello World!', '2021-01-01 10:10:00');", "output": "SELECT user_id, COUNT(*) as count FROM post GROUP BY user_id ORDER BY count DESC LIMIT 5;"}
{"input": " \uc815\ucc45 \ud14d\uc2a4\ud2b8\uc5d0 '\uc800\ub834\ud55c \uac00\uaca9'\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \ud3ec\uad04\uc801 \uc8fc\ud0dd \uc815\ucc45\uc774 \ud3ec\ud568\ub41c \ubd80\ub3d9\uc0b0\uc5d0 \ub300\ud55c \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE UrbanPolicies (id INT, policy_id INT, city VARCHAR(50), state VARCHAR(2), policy_text TEXT); CREATE VIEW InclusivePolicies AS SELECT policy_id, city, state FROM UrbanPolicies WHERE policy_text LIKE '%inclusive%' AND policy_text LIKE '%affordable%';", "output": "DELETE FROM InclusivePolicies WHERE policy_id NOT IN (SELECT policy_id FROM UrbanPolicies WHERE policy_text LIKE '%affordable%');"}
{"input": "DrugX\uc758 \ucd1d \ub9e4\ucd9c\uc5d0\uc11c \uc804\ub144 \ub300\ube44 \ubc31\ubd84\uc728 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drug_sales (drug_name TEXT, year INT, sales FLOAT); INSERT INTO drug_sales (drug_name, year, sales) VALUES ('DrugX', 2019, 500000), ('DrugX', 2020, 550000), ('DrugX', 2021, 600000);", "output": "SELECT year, (sales - LAG(sales) OVER (PARTITION BY drug_name ORDER BY year))/LAG(sales) OVER (PARTITION BY drug_name ORDER BY year) as sales_change FROM drug_sales WHERE drug_name = 'DrugX';"}
{"input": " \uce74\ud14c\uace0\ub9ac\ubcc4 \uc2dd\ud488 \uc548\uc804 \uc704\ubc18 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Menu_Categories (Category_ID INT, Category_Name TEXT); INSERT INTO Menu_Categories (Category_ID, Category_Name) VALUES (1, 'Main Dishes'), (2, 'Sides'); CREATE TABLE Menu_Items (Item_ID INT, Item_Name TEXT, Category_ID INT); INSERT INTO Menu_Items (Item_ID, Item_Name, Category_ID) VALUES (1, 'Burger', 1), (2, 'Pizza', 1), (3, 'Fries', 2), (4, 'Salad', 2); CREATE TABLE Inspections (Inspection_ID INT, Item_ID INT, Violation_Count INT); INSERT INTO Inspections (Inspection_ID, Item_ID, Violation_Count) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1), (4, 2, 0), (5, 3, 1), (6, 4, 0);", "output": "SELECT MC.Category_Name, SUM(I.Violation_Count) as Total_Violations FROM Inspections I JOIN Menu_Items MI ON I.Item_ID = MI.Item_ID JOIN Menu_Categories MC ON MI.Category_ID = MC.Category_ID GROUP BY MC.Category_Name;"}
{"input": " \ud314\ub85c\uc5b4\uac00 10,000\uba85\uc774 \ub118\ub294 \ubbf8\uad6d \uc0ac\uc6a9\uc790\uc758 \uc77c\uc77c \ud3c9\uade0 \uac8c\uc2dc\ubb3c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, country VARCHAR(50), followers INT); CREATE TABLE posts (id INT, user_id INT, post_date DATE);", "output": "SELECT AVG(post_cnt) FROM (SELECT COUNT(p.id) post_cnt FROM posts p JOIN users u ON p.user_id = u.id WHERE u.country = 'United States' GROUP BY p.user_id HAVING SUM(u.followers) > 10000) t;"}
{"input": " 30\uc138 \uc774\uc0c1 \ud68c\uc6d0\uc758 \uacbd\uc6b0 8\uc6d4\uc758 \ubaa8\ub4e0 \uc6b4\ub3d9 \uae30\uac04\uc744 15% \ub298\ub9bd\ub2c8\ub2e4.", "context": "CREATE TABLE Members (Id INT, Age INT, Gender VARCHAR(10)); CREATE TABLE Workouts (Id INT, MemberId INT, Duration INT, Date DATE); INSERT INTO Members (Id, Age, Gender) VALUES (1, 25, 'Female'), (2, 32, 'Male'), (3, 45, 'Female'), (4, 28, 'Non-binary'); INSERT INTO Workouts (Id, MemberId, Duration, Date) VALUES (1, 1, 60, '2022-08-01'), (2, 1, 45, '2022-08-02'), (3, 2, 90, '2022-08-01'), (4, 2, 75, '2022-08-03'), (5, 3, 120, '2022-08-01');", "output": "UPDATE Workouts SET Duration = Duration * 1.15 WHERE DATE_FORMAT(Date, '%Y-%m') = '2022-08' AND MemberId IN (SELECT Id FROM Members WHERE Age >= 30);"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \ub3c5\uc77c \ub18d\ucd0c \uc9c0\uc5ed\uc5d0\uc11c \uc9c4\ub8cc\ub97c \ubc1b\uc740 \ucd1d \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Appointments (AppointmentID int, Date date, Location varchar(50), Type varchar(50)); INSERT INTO Appointments (AppointmentID, Date, Location, Type) VALUES (1, '2021-01-01', 'Rural Germany', 'Checkup');", "output": "SELECT SUM(COUNT(*)) FROM Appointments WHERE Location LIKE '%Rural Germany%' AND Date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY EXTRACT(YEAR FROM Date);"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uc18c\uc678\ub41c \uc9c0\uc5ed \uc0ac\ud68c\ub97c \uc704\ud55c \uc811\uadfc \uac00\ub2a5\ud55c \uae30\uc220 \uc7a5\ud559\uae08\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tech_scholarships (scholarship_location VARCHAR(255), is_accessible BOOLEAN, community VARCHAR(255)); INSERT INTO tech_scholarships (scholarship_location, is_accessible, community) VALUES ('Germany', true, 'Minority Women'), ('France', false, 'Persons with Disabilities'), ('UK', true, 'Refugees');", "output": "SELECT scholarship_location, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () as percentage_accessible FROM tech_scholarships WHERE scholarship_location LIKE 'Europe%' AND is_accessible = true AND community IN ('Minority Women', 'Persons with Disabilities', 'Refugees') GROUP BY scholarship_location;"}
{"input": " '700'\ub2ec\ub7ec\ubcf4\ub2e4 \uc800\ub834\ud55c \uc81c\ud488\uba85\uacfc \uce74\ud14c\uace0\ub9ac\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(5,2), category VARCHAR(50), subcategory VARCHAR(50)); INSERT INTO products (id, name, price, category, subcategory) VALUES (1, 'Laptop', 999.99, 'Electronics', 'Computers'); INSERT INTO products (id, name, price, category, subcategory) VALUES (2, 'Phone', 599.99, 'Electronics', 'Mobile Phones'); INSERT INTO products (id, name, price, category, subcategory) VALUES (3, 'Tablet', 499.99, 'Electronics', 'Tablets');", "output": "SELECT name, category FROM products WHERE price < 700;"}
{"input": " \uac01 \ud559\uacfc\uc5d0\uc11c \uc18c\uc218 \uc778\uc885 \ubc0f \ubbfc\uc871 \ubc30\uacbd\uc744 \uac00\uc9c4 \ub300\ud559\uc6d0\uc0dd\uc5d0\uac8c \uc218\uc5ec\ub41c \uc5f0\uad6c \ubcf4\uc870\uae08\uc758 \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc791\ub144\uc5d0 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \ubc30\uacbd\uc744 \uac00\uc9c4 \ub2e8\uc77c \ud559\uc0dd\uc5d0\uac8c \uc218\uc5ec\ub41c \ucd5c\ub300 \uc5f0\uad6c \ubcf4\uc870\uae08 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE graduate_students (student_id INT, dept_name VARCHAR(50), race VARCHAR(50)); CREATE TABLE research_grants (grant_id INT, student_id INT, grant_date DATE);", "output": "SELECT g.dept_name, AVG(rg.cnt) as avg_grants, MAX(rg.cnt) as max_grants FROM graduate_students g LEFT JOIN (SELECT student_id, COUNT(*) as cnt FROM research_grants WHERE grant_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) AND student_id IN (SELECT student_id FROM graduate_students WHERE race IN ('African American', 'Hispanic', 'Native American')) GROUP BY student_id) rg ON g.student_id = rg.student_id GROUP BY g.dept_name;"}
{"input": " 'Austin'\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud504\ub85c\uc81d\ud2b8\ub2f9 \ud3c9\uade0 \uc791\uc5c5\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, name VARCHAR(50), location VARCHAR(50), start_date DATE); INSERT INTO project (id, name, location, start_date) VALUES (1, 'Green Build', 'NYC', '2020-01-01'), (2, 'Solar Tower', 'LA', '2019-12-15'), (3, 'Eco House', 'Austin', '2020-03-01'); CREATE TABLE labor (id INT, project_id INT, worker VARCHAR(50), hours FLOAT); INSERT INTO labor (id, project_id, worker, hours) VALUES (1, 1, 'John', 40), (2, 1, 'Jane', 35), (3, 2, 'Bob', 45), (4, 2, 'Alice', 50), (5, 3, 'Alex', 48), (6, 3, 'Nia', 42), (7, 3, 'Jamal', 55); CREATE TABLE sustainable (project_id INT, solar_panels BOOLEAN, wind_turbines BOOLEAN, green_roof BOOLEAN); INSERT INTO sustainable (project_id, solar_panels, wind_turbines, green_roof) VALUES (1, TRUE, FALSE, TRUE), (2, TRUE, TRUE, FALSE), (3, FALSE, FALSE, TRUE);", "output": "SELECT AVG(l.worker_count) FROM (SELECT COUNT(DISTINCT l.worker) AS worker_count FROM labor l JOIN project p ON l.project_id = p.id JOIN sustainable s ON p.id = s.project_id WHERE p.location = 'Austin' AND s.solar_panels = TRUE GROUP BY l.project_id) l;"}
{"input": " \uc720\ub7fd \uc9c0\uc5ed\uc758 \uc5b4\ub5a4 \ud56d\uad6c\ub3c4 \ubc29\ubb38\ud558\uc9c0 \uc54a\uc740 \uc120\ubc15\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessels_port_visits (vessel_id INT, port_id INT, visit_date DATE); INSERT INTO vessels_port_visits VALUES (1, 1, '2022-01-01'), (1, 2, '2022-01-02'), (2, 3, '2022-01-03'); CREATE TABLE ports_region (port_id INT, region TEXT); INSERT INTO ports_region VALUES (1, 'Asia Pacific'), (2, 'Americas'), (3, 'Europe');", "output": "SELECT vessels.vessel_name FROM vessels WHERE vessels.vessel_id NOT IN (SELECT vessels_port_visits.vessel_id FROM vessels_port_visits INNER JOIN ports_region ON vessels_port_visits.port_id = ports_region.port_id WHERE ports_region.region = 'Europe');"}
{"input": " \ucd5c\uadfc 3\ub144\uac04 \uad6d\uac00\uc548\ubcf4\uc608\uc0b0\uc744 \uc9c0\uc5ed\ubcc4\ub85c \uc608\uc0b0\uc561\uc774 \ub9ce\uc740 \uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae34\ub2e4.", "context": "CREATE TABLE budgets (budget_id INT, year INT, region_id INT, amount INT); INSERT INTO budgets (budget_id, year, region_id, amount) VALUES (1, 2019, 1, 500), (2, 2020, 1, 600), (3, 2021, 1, 700), (4, 2019, 2, 400), (5, 2020, 2, 450), (6, 2021, 2, 500);", "output": "SELECT year, region_id, amount, RANK() OVER (PARTITION BY year, region_id ORDER BY amount DESC) as ranking FROM budgets ORDER BY year, region_id, ranking;"}
{"input": " 2018\ub144 \uc774\ud6c4 \uc911\ub3d9\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc815\ubcf4\uc791\uc804\uc774 \uc774\ub8e8\uc5b4\uc84c\ub098\uc694?", "context": "CREATE TABLE intelligence_operations (id INT, operation_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO intelligence_operations (id, operation_name, location, start_date, end_date) VALUES (1, 'Operation Red Sands', 'Middle East', '2018-01-01', '2018-12-31'), (2, 'Operation Silent Shield', 'Europe', '2019-01-01', '2019-12-31');", "output": "SELECT DISTINCT operation_name, location FROM intelligence_operations WHERE location = 'Middle East' AND (start_date IS NULL OR start_date <= CURDATE()) AND (end_date IS NULL OR end_date >= CURDATE());"}
{"input": "\uc9c0\ub09c \ubd84\uae30\uc5d0 \uc778\ub825\uc744 \uc904\uc778 \uad11\uc0b0\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mine_workforce_history (mine_id INT, change_date DATE, num_employees INT); INSERT INTO mine_workforce_history (mine_id, change_date, num_employees) VALUES (1, '2021-01-01', 500), (1, '2021-04-01', 450), (2, '2021-01-01', 450), (2, '2021-04-01', 450), (3, '2021-01-01', 400), (3, '2021-04-01', 350);", "output": "SELECT mine_id, change_date, num_employees, LAG(num_employees) OVER (PARTITION BY mine_id ORDER BY change_date) as prev_quarter_employees, num_employees - LAG(num_employees) OVER (PARTITION BY mine_id ORDER BY change_date) as employess_change FROM mine_workforce_history WHERE num_employees < LAG(num_employees) OVER (PARTITION BY mine_id ORDER BY change_date);"}
{"input": " \uc5f0\uac04 \uad6d\uac00\ubcc4 \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9 \ud69f\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE peacekeeping_operations (id INT, country VARCHAR(255), year INT);", "output": "SELECT country, year, COUNT(*) as num_ops FROM peacekeeping_operations GROUP BY country, year ORDER BY year;"}
{"input": " \uc778\ub3c4\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub85c \ub9cc\ub4e0 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ProductMaterials (product_id INT, sustainable_materials BOOLEAN);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM ProductMaterials) FROM ProductMaterials WHERE sustainable_materials = TRUE AND country = 'India';"}
{"input": " \uae30\ud6c4 \ubcc0\ud654\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc870\uc9c1\uc5d0 \ucd1d 10,000\ub2ec\ub7ec \uc774\uc0c1\uc744 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(255)); INSERT INTO donors (id, name) VALUES (1, 'Anonymous Donor'); CREATE TABLE donations (id INT, donor_id INT, organization_id INT, amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (id, donor_id, organization_id, amount, donation_date) VALUES (1, 1, 4, 7500, '2021-09-22'); CREATE TABLE organizations (id INT, name VARCHAR(255), focus VARCHAR(255)); INSERT INTO organizations (id, name, focus) VALUES (4, 'Climate Action Network', 'Climate Change');", "output": "SELECT donors.name FROM donors INNER JOIN (SELECT donor_id, SUM(amount) as total_donated FROM donations JOIN organizations ON donations.organization_id = organizations.id WHERE organizations.focus = 'Climate Change' GROUP BY donor_id) subquery ON donors.id = subquery.donor_id WHERE subquery.total_donated > 10000;"}
{"input": " \ud1a0\ub860\ud1a0 \ub7a9\ud130\uc2a4\uac00 \ub18d\uad6c \uacbd\uae30\uc5d0\uc11c \uc2b9\ub9ac\ud55c \ud69f\uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE teams (id INT, name VARCHAR(50), sport VARCHAR(20)); INSERT INTO teams (id, name, sport) VALUES (1, 'Toronto Raptors', 'Basketball'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT);", "output": "SELECT COUNT(*) FROM games WHERE (home_team_id = (SELECT id FROM teams WHERE name = 'Toronto Raptors' AND sport = 'Basketball') AND home_team_score > away_team_score) OR (away_team_id = (SELECT id FROM teams WHERE name = 'Toronto Raptors' AND sport = 'Basketball') AND away_team_score > home_team_score);"}
{"input": " 500\uba85 \uc774\uc0c1\uc758 \uc0ac\uc6a9\uc790\uac00 \uc0ac\uc6a9\ud558\ub294 \uc5b8\uc5b4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE languages (id INT, language VARCHAR(50), speakers INT); INSERT INTO languages (id, language, speakers) VALUES (1, 'English', 379000000), (2, 'Spanish', 460000000), (3, 'French', 76000000);", "output": "SELECT language FROM languages WHERE speakers > 500000;"}
{"input": "\uc9c0\ub09c 1\ub144 \ub3d9\uc548 2\ud68c \uc774\uc0c1\uc758 \uc5f0\uad6c\ube44\ub97c \ubc1b\uc740 \ub300\ud559\uc6d0\uc0dd\uc758 \uc774\ub984\uacfc \ud559\uacfc\ub97c \uae30\uc7ac\ud558\uc138\uc694.", "context": "CREATE TABLE students (student_id INT PRIMARY KEY, name VARCHAR(50), department VARCHAR(50), grant_recipient BOOLEAN, grant_date DATE); INSERT INTO students (student_id, name, department, grant_recipient, grant_date) VALUES (1, 'David', 'Humanities', TRUE, '2022-01-01'), (2, 'Gina', 'Biology', TRUE, '2021-01-01'), (3, 'Harry', 'Chemistry', TRUE, '2021-01-01'); CREATE TABLE grants (grant_id INT PRIMARY KEY, student_id INT, amount FLOAT); INSERT INTO grants (grant_id, student_id) VALUES (1, 1), (2, 1), (3, 2);", "output": "SELECT s.name, s.department FROM students s INNER JOIN grants g ON s.student_id = g.student_id WHERE s.department IN ('Humanities', 'Biology', 'Chemistry') AND s.grant_recipient = TRUE AND g.grant_id IN (SELECT g.grant_id FROM grants g WHERE g.student_id = s.student_id GROUP BY g.student_id HAVING COUNT(*) > 1) AND s.grant_date >= DATEADD(year, -1, GETDATE());"}
{"input": " \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \uae30\uc220 \uc720\ud615\ubcc4 \ucd1d \uc124\uce58\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE projects (project_id INT, name TEXT, technology TEXT, capacity INT); INSERT INTO projects (project_id, name, technology, capacity) VALUES (1, 'Solar Farm', 'Solar', 5000), (2, 'Wind Turbine', 'Wind', 3000), (3, 'Geothermal Plant', 'Geothermal', 4000), (4, 'Hydro Plant', 'Hydro', 6000);", "output": "SELECT technology, SUM(capacity) OVER (PARTITION BY technology) FROM projects;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubaa8\uae08\ud55c \ucd1d \uc790\uae08\uc740 \uc0b0\uc5c5 \ubd80\ubb38 \ubc0f \ucc3d\ub9bd \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE biotech_startups (id INT PRIMARY KEY, name VARCHAR(255), total_funding DECIMAL(10,2), founding_year INT, country VARCHAR(255), industry_sector VARCHAR(255));", "output": "SELECT founding_year, country, industry_sector, SUM(total_funding) FROM biotech_startups WHERE country IN (SELECT country FROM biotech_startups GROUP BY country ORDER BY SUM(total_funding) DESC LIMIT 2) GROUP BY founding_year, country, industry_sector;"}
{"input": " \ud2b9\uc815 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc758 \ud310\ub9e4 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (id INT, product_id INT, category VARCHAR(255), quantity INT);", "output": "SELECT category, (SUM(quantity) * 100.0 / (SELECT SUM(quantity) FROM sales)) as percentage FROM sales WHERE category = 'category' GROUP BY category;"}
{"input": " \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ub300\ub959\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Continents (ContinentID INT PRIMARY KEY, ContinentName TEXT, AverageDonation DECIMAL(10,2)); INSERT INTO Continents (ContinentID, ContinentName, AverageDonation) VALUES (1, 'North America', 1000.00); INSERT INTO Continents (ContinentID, ContinentName, AverageDonation) VALUES (2, 'Europe', 800.00);", "output": "SELECT ContinentName, AVG(AmountDonated) AS AverageDonation FROM Donors INNER JOIN (SELECT DonorID, CountryName, ContinentName FROM Donors_Countries JOIN Continents ON Continents.ContinentName = Countries.Continent) AS DonorContinent ON Donors.DonorID = DonorContinent.DonorID GROUP BY ContinentName ORDER BY AverageDonation DESC LIMIT 1;"}
{"input": " \ubaa8\ub4e0 \uc791\ubb3c\uc5d0 \ub300\ud574 \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ubd81\ub3d9\ubd80 \uc9c0\uc5ed\uc758 5\uac1c \ub18d\uc7a5\uc744 \ucc3e\uc544 \ub18d\uc7a5 \uc774\ub984, \uc791\ubb3c, \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Farm (id INT, name TEXT, crop TEXT, yield_per_acre FLOAT, region TEXT); INSERT INTO Farm (id, name, crop, yield_per_acre, region) VALUES (1, 'Smith Farm', 'Corn', 150, 'Midwest'), (2, 'Jones Farm', 'Soybeans', 80, 'Midwest'), (3, 'Brown Farm', 'Corn', 180, 'Northeast'), (4, 'Green Farm', 'Potatoes', 200, 'Northeast'), (5, 'White Farm', 'Carrots', 170, 'Northeast');", "output": "SELECT name, crop, yield_per_acre FROM (SELECT name, crop, yield_per_acre, ROW_NUMBER() OVER (PARTITION BY region ORDER BY yield_per_acre DESC) as rn FROM Farm WHERE region = 'Northeast') x WHERE rn <= 5;"}
{"input": " \uc9c0\ub09c\ud574 \ubd81\uadf9 \uc9c0\uc5ed \ub3c4\uc2dc\ubcc4 \ucd1d \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CarbonEmission (City VARCHAR(100), Emission FLOAT, Region VARCHAR(100)); INSERT INTO CarbonEmission (City, Emission, Region) VALUES ('Tromso', 6000, 'Arctic'); INSERT INTO CarbonEmission (City, Emission, Region) VALUES ('Murmansk', 8000, 'Arctic');", "output": "SELECT City, SUM(Emission) OVER (PARTITION BY City ORDER BY City DESC) AS TotalEmission FROM CarbonEmission WHERE Region = 'Arctic' AND YEAR(CurrentDate) - YEAR(DateInstalled) BETWEEN 1 AND 12;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \ud654\ud559 \ubb3c\uc9c8\uc774 \uc800\uc7a5\ub41c \uc0c1\uc704 2\uac1c \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE chemical_storage (id INT PRIMARY KEY, chemical_id INT, storage_location VARCHAR(255)); INSERT INTO chemical_storage (id, chemical_id, storage_location) VALUES (1, 1, 'North Lab'), (2, 2, 'North Lab');", "output": "SELECT storage_location, COUNT(DISTINCT chemical_id) AS num_chemicals, RANK() OVER (ORDER BY COUNT(DISTINCT chemical_id) DESC) AS rank FROM chemical_storage GROUP BY storage_location HAVING rank <= 2;"}
{"input": " \ub9e4\uc6d4 1\uc77c\uacfc \ub9d0\uc77c\uc5d0 \uc5b4\ub5a4 \ubaa9\uc801\uc9c0\ub97c \ubc29\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE if not exists destinations (destination_id int, destination_name varchar(50), region_id int); INSERT INTO destinations (destination_id, destination_name, region_id) VALUES (1, 'Seattle', 1), (2, 'Portland', 1), (3, 'London', 2); CREATE TABLE if not exists visitor_stats (visitor_id int, destination_id int, visit_date date); INSERT INTO visitor_stats (visitor_id, destination_id, visit_date) VALUES (1, 1, '2022-06-01'), (2, 1, '2022-06-03'), (3, 2, '2022-06-02'), (4, 3, '2022-06-04'), (5, 3, '2022-06-30');", "output": "SELECT vs.destination_id, d.destination_name, vs.visit_date FROM visitor_stats vs JOIN destinations d ON vs.destination_id = d.destination_id WHERE DATE_TRUNC('month', vs.visit_date) = DATE_TRUNC('month', vs.visit_date) AND (vs.visit_date = (SELECT MIN(visit_date) FROM visitor_stats WHERE DATE_TRUNC('month', visit_date) = DATE_TRUNC('month', vs.visit_date)) OR vs.visit_date = (SELECT MAX(visit_date) FROM visitor_stats WHERE DATE_TRUNC('month', visit_date) = DATE_TRUNC('month', vs.visit_date)));"}
{"input": " \uc5ec\uac1d\uc120\uc758 \ucd5c\uc18c \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (ID VARCHAR(20), Name VARCHAR(20), Type VARCHAR(20), MinSpeed FLOAT); INSERT INTO Vessels VALUES ('V021', 'Vessel U', 'Passenger', 25.0), ('V022', 'Vessel V', 'Passenger', 22.5), ('V023', 'Vessel W', 'Cargo', 15.5);", "output": "SELECT MinSpeed FROM Vessels WHERE ID = (SELECT MIN(ID) FROM Vessels WHERE Type = 'Passenger');"}
{"input": " \uad11\uc0b0\ubd80 \uc5ec\uc131\uc9c1\uc6d0 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), Salary DECIMAL(10,2), Gender VARCHAR(10)); INSERT INTO Employees (EmployeeID, Department, Salary, Gender) VALUES (1, 'Mining', 75000.00, 'Female'); INSERT INTO Employees (EmployeeID, Department, Salary, Gender) VALUES (2, 'Mining', 80000.00, 'Male');", "output": "SELECT AVG(Salary) FROM Employees WHERE Department = 'Mining' AND Gender = 'Female';"}
{"input": " \ud504\ub791\uc2a4\uc5d0\uc11c \uc758\ub958 \uc81c\uc870\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac01 \uc9c1\ubb3c \uc720\ud615\uc758 \ucd1d \uc218\ub7c9\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE fabrics (id INT, name TEXT); INSERT INTO fabrics (id, name) VALUES (1, 'Cotton'), (2, 'Polyester'), (3, 'Wool'); CREATE TABLE garments (id INT, name TEXT, fabric_id INT, quantity INT); INSERT INTO garments (id, name, fabric_id, quantity) VALUES (1, 'Shirt', 1, 50), (2, 'Pants', 2, 75), (3, 'Jacket', 3, 30); CREATE TABLE manufacturers (id INT, name TEXT, country TEXT); INSERT INTO manufacturers (id, name, country) VALUES (1, 'ManufacturerA', 'France'); CREATE TABLE garment_manufacturers (garment_id INT, manufacturer_id INT); INSERT INTO garment_manufacturers (garment_id, manufacturer_id) VALUES (1, 1), (2, 1), (3, 1);", "output": "SELECT f.name, SUM(g.quantity) FROM fabrics f JOIN garments g ON f.id = g.fabric_id JOIN garment_manufacturers gm ON g.id = gm.garment_id JOIN manufacturers m ON gm.manufacturer_id = m.id WHERE m.country = 'France' GROUP BY f.name;"}
{"input": " 2021\ub144 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11\uc744 \uc704\ud55c \uc0c1\uc704 5\uac1c \ubaa9\uc801\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SustainableTourism (Destination VARCHAR(255), Year INT, SustainabilityScore INT);", "output": "SELECT Destination, SustainabilityScore, ROW_NUMBER() OVER (ORDER BY SustainabilityScore DESC) AS Rank FROM SustainableTourism WHERE Year = 2021 AND SustainabilityScore > 0 GROUP BY Destination HAVING Rank <= 5;"}
{"input": " 2017\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc778\ub3c4\uc758 \ucd1d \uc5d0\ub108\uc9c0 \ud6a8\uc728 \uac1c\uc120\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_efficiency (id INT, country TEXT, year INT, improvement FLOAT);", "output": "SELECT SUM(improvement) FROM energy_efficiency WHERE country = 'India' AND year BETWEEN 2017 AND 2020;"}
{"input": " \ubcf4\uc874\uc0ac\uc5c5\ubcc4 \uae30\ubd80\ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE PreservationProjects (id INT, name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE, donation_amount FLOAT);", "output": "SELECT name, SUM(donation_amount) FROM PreservationProjects GROUP BY name;"}
{"input": "clinic_p'\uc640 'clinic_q'\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clinic_p (patient_id INT, cost INT, treatment VARCHAR(10)); INSERT INTO clinic_p (patient_id, cost, treatment) VALUES (31, 100, 'therapy'), (32, 200, 'medication'); CREATE TABLE clinic_q (patient_id INT, cost INT, treatment VARCHAR(10)); INSERT INTO clinic_q (patient_id, cost, treatment) VALUES (33, 300, 'therapy'), (34, 400, 'medication');", "output": "SELECT COUNT(*) FROM (SELECT * FROM clinic_p WHERE treatment = 'therapy' UNION ALL SELECT * FROM clinic_q WHERE treatment = 'therapy') AS combined_therapy_clinics;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc81c\ud488\uc5d0 \ub300\ud55c \ucd1d \uc9c0\ucd9c\uc744 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uac1c \uace0\uac1d\uc758 \uc21c\uc704\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc9c0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (id INT, name VARCHAR(255), city VARCHAR(255), state VARCHAR(255)); INSERT INTO customers (id, name, city, state) VALUES (1, 'John Doe', 'San Francisco', 'CA'), (2, 'Jane Smith', 'Los Angeles', 'CA'), (3, 'Alice Johnson', 'San Jose', 'CA'); CREATE TABLE purchases (id INT, customer_id INT, product_id INT, purchase_date DATE, quantity_sold INT, price DECIMAL(10, 2)); INSERT INTO purchases (id, customer_id, product_id, purchase_date, quantity_sold, price) VALUES (1, 1, 1, '2022-01-01', 50, 100), (2, 2, 2, '2022-01-02', 75, 150), (3, 3, 3, '2022-01-03', 100, 200); CREATE TABLE products (id INT, name VARCHAR(255), is_sustainable BOOLEAN); INSERT INTO products (id, name, is_sustainable) VALUES (1, 'Product X', TRUE), (2, 'Product Y', FALSE), (3, 'Product Z', TRUE);", "output": "SELECT c.name, SUM(p.price * p.quantity_sold) as total_spent FROM purchases p JOIN customers c ON p.customer_id = c.id JOIN products pr ON p.product_id = pr.id WHERE pr.is_sustainable = TRUE GROUP BY c.name ORDER BY total_spent DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c\ub2ec \ubbf8\uad6d \ud56d\uad6c\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15\uc774 \ucc98\ub9ac\ud55c \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Vessels (VesselID INT, VesselName TEXT); CREATE TABLE Ports (PortID INT, PortName TEXT, Country TEXT); CREATE TABLE Cargo (VesselID INT, PortID INT, ArrivalDate DATE, CargoWeight INT); INSERT INTO Ports (PortID, PortName, Country) VALUES (1, 'New York', 'USA'), (2, 'Los Angeles', 'USA'); INSERT INTO Vessels (VesselID, VesselName) VALUES (1, 'Sea Tiger'), (2, 'Ocean Wave'), (3, 'River Queen'); INSERT INTO Cargo (VesselID, PortID, ArrivalDate, CargoWeight) VALUES (1, 1, '2022-06-01', 5000), (1, 2, '2022-06-15', 7000), (2, 1, '2022-06-20', 6000), (3, 2, '2022-06-25', 8000);", "output": "SELECT AVG(CargoWeight) FROM Cargo INNER JOIN Vessels ON Cargo.VesselID = Vessels.VesselID INNER JOIN Ports ON Cargo.PortID = Ports.PortID WHERE ArrivalDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND Country = 'USA';"}
{"input": " 'public_works' \uc2a4\ud0a4\ub9c8\uc5d0\ub294 \ucd1d \uba87 \uac1c\uc758 \uad50\ub7c9, \ub310, \ud130\ub110\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE public_works.bridges (bridge_id INT, name VARCHAR(255)); CREATE TABLE public_works.dams (dam_id INT, name VARCHAR(255)); CREATE TABLE public_works.tunnels (tunnel_id INT, name VARCHAR(255)); INSERT INTO public_works.bridges (bridge_id, name) VALUES (1, 'Golden Gate'), (2, 'Verrazano-Narrows'); INSERT INTO public_works.dams (dam_id, name) VALUES (1, 'Hoover'), (2, 'Grand Coulee'); INSERT INTO public_works.tunnels (tunnel_id, name) VALUES (1, 'Channel Tunnel'), (2, 'Seikan Tunnel'), (3, 'Gotthard Base Tunnel');", "output": "SELECT COUNT(*) FROM (SELECT * FROM public_works.bridges UNION ALL SELECT * FROM public_works.dams UNION ALL SELECT * FROM public_works.tunnels);"}
{"input": " \uc2a4\ubc1c\ubc14\ub974 \uc5b4\ub290 \ub2ec\uc758 \uae30\uc628\uc774 \uac00\uc7a5 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE svalbard_temperature(month INT, year INT, temperature FLOAT); INSERT INTO svalbard_temperature(month, year, temperature) VALUES (1, 2000, 2.5), (2, 2000, 3.2), (1, 2001, 1.8);", "output": "SELECT month, MAX(temperature) max_temp FROM svalbard_temperature GROUP BY month;"}
{"input": " 2019\ub144\uacfc 2020\ub144 \uac01 \uae30\uad00\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AgencyYearBudget (AgencyId INT, Year INT, Budget INT, PRIMARY KEY (AgencyId, Year)); INSERT INTO AgencyYearBudget (AgencyId, Year, Budget) VALUES (1, 2019, 5000000); INSERT INTO AgencyYearBudget (AgencyId, Year, Budget) VALUES (1, 2020, 5600000); INSERT INTO AgencyYearBudget (AgencyId, Year, Budget) VALUES (2, 2019, 4000000); INSERT INTO AgencyYearBudget (AgencyId, Year, Budget) VALUES (2, 2020, 4600000);", "output": "SELECT AgencyId, SUM(Budget) OVER (PARTITION BY AgencyId ORDER BY Year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as TotalBudget FROM AgencyYearBudget WHERE Year IN (2019, 2020);"}
{"input": " \ucd9c\ubc1c \ubc0f \ub3c4\ucc29 \ud56d\uad6c\uc640 \ub3c4\ucc29 \uc0ac\uc774\uc758 \uc2dc\ucc28\uc640 \ud568\uaed8 \ud56d\ud574\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Voyage (VoyageID INT, VesselID INT, StartPortID INT, EndPortID INT, StartDate DATETIME, EndDate DATETIME); INSERT INTO Voyage (VoyageID, VesselID, StartPortID, EndPortID, StartDate, EndDate) VALUES (1, 1, 1, 2, '2022-01-01 08:00:00', '2022-01-02 10:00:00'); INSERT INTO Voyage (VoyageID, VesselID, StartPortID, EndPortID, StartDate, EndDate) VALUES (2, 2, 2, 1, '2022-01-03 12:00:00', '2022-01-04 14:00:00');", "output": "SELECT v1.VesselID, p1.PortName AS StartPort, p2.PortName AS EndPort, DATEDIFF(HOUR, v1.StartDate, v1.EndDate) AS TimeDifference FROM Voyage v1 JOIN Port p1 ON v1.StartPortID = p1.PortID JOIN Port p2 ON v1.EndPortID = p2.PortID;"}
{"input": " 2021\ub144 'CityZ'\uc758 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9 \ubc0f \uc7ac\ud65c\uc6a9 \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE City (cid INT, city_name VARCHAR(255)); INSERT INTO City (cid, city_name) VALUES (1, 'CityX'), (2, 'CityY'), (3, 'CityZ'); CREATE TABLE WasteData (wid INT, cid INT, year INT, waste_amount INT); INSERT INTO WasteData (wid, cid, year, waste_amount) VALUES (1, 3, 2018, 7000), (2, 3, 2019, 7500), (3, 3, 2021, 8000); CREATE TABLE RecyclingData (rec_id INT, cid INT, year INT, recycling_amount INT); INSERT INTO RecyclingData (rec_id, cid, year, recycling_amount) VALUES (1, 3, 2018, 2000), (2, 3, 2019, 2250), (3, 3, 2021, 2500);", "output": "SELECT City.city_name, WasteData.year, WasteData.waste_amount, RecyclingData.recycling_amount FROM City INNER JOIN WasteData ON City.cid = WasteData.cid INNER JOIN RecyclingData ON City.cid = RecyclingData.cid WHERE City.city_name = 'CityZ' AND WasteData.year = 2021;"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4 \ucd5c\uc18c \uc778\uac74\ube44\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE labor_costs (project_type VARCHAR(20), labor_cost DECIMAL(5,2)); INSERT INTO labor_costs (project_type, labor_cost) VALUES ('Residential', 12000), ('Commercial', 25000), ('Public', 18000);", "output": "SELECT project_type, MIN(labor_cost) as min_labor_cost FROM labor_costs GROUP BY project_type;"}
{"input": " \uc791\ub144\uc5d0 \ub192\uc740 \ucde8\uc57d\uc810\uacfc \uc2ec\uac01\ud55c \ucde8\uc57d\uc810\uc744 \uc9c0\ub2cc \uc2dc\uc2a4\ud15c\uc758 \ucd1d \uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VulnerabilityAssessments(id INT, system_id VARCHAR(50), vulnerabilities INT, assessment_date DATE);", "output": "SELECT 'total_high_critical' as type, COUNT(*) as count FROM VulnerabilityAssessments WHERE vulnerabilities >= 7 AND assessment_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) UNION ALL SELECT 'total_critical' as type, COUNT(*) as count FROM VulnerabilityAssessments WHERE vulnerabilities = 10 AND assessment_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR);"}
{"input": "2017\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uc2b9\uc778\ub41c \uc57d\ubb3c\uc758 \uc784\uc0c1\uc2dc\ud5d8 \uc131\uacf5\ub960\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE clinical_trials (drug_name TEXT, approval_year INTEGER, success BOOLEAN); INSERT INTO clinical_trials (drug_name, approval_year, success) VALUES ('DrugP', 2018, true), ('DrugP', 2019, true), ('DrugQ', 2020, false), ('DrugR', 2017, true), ('DrugR', 2018, true), ('DrugS', 2019, false);", "output": "SELECT AVG(success) as avg_success_rate FROM (SELECT approval_year, success, COUNT(*) as trials_count FROM clinical_trials WHERE approval_year BETWEEN 2017 AND 2020 GROUP BY approval_year, success) subquery WHERE trials_count > 1;"}
{"input": " \ubc29\ubb38\uc790 \ud3c9\uc810\uc774 \uac00\uc7a5 \ub192\uc740 \uc544\ud504\ub9ac\uce74\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uacc4\ud68d \uc0c1\uc704 2\uac1c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE initiative_ratings (initiative_id INT, initiative_name TEXT, sustainable BOOLEAN, continent TEXT, year INT, rating DECIMAL(3,2)); INSERT INTO initiative_ratings (initiative_id, initiative_name, sustainable, continent, year, rating) VALUES (1, 'Initiative A', TRUE, 'Africa', 2021, 4.6), (2, 'Initiative B', TRUE, 'Africa', 2021, 4.8), (3, 'Initiative C', FALSE, 'Africa', 2021, 4.5), (4, 'Initiative D', TRUE, 'Africa', 2021, 4.2), (5, 'Initiative E', FALSE, 'Africa', 2021, 4.9);", "output": "SELECT initiative_name, ROW_NUMBER() OVER (PARTITION BY sustainable ORDER BY rating DESC) as ranking FROM initiative_ratings WHERE continent = 'Africa' AND year = 2021 AND sustainable = TRUE;"}
{"input": " \uadf8\ub9b0\ub780\ub4dc\uc758 \uc774\ub204\uc774\ud2b8 \uacf5\ub3d9\uccb4\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4 \uae30\ub85d\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE arctic_communities (community_id INT, community_name VARCHAR(50), region_id INT);", "output": "INSERT INTO arctic_communities (community_id, community_name, region_id) VALUES (1, 'Inuit', (SELECT region_id FROM arctic_regions WHERE region_name = 'Greenland'));"}
{"input": " \uc624\ud074\ub79c\ub4dc \ud56d\uad6c\uc5d0 \uc785\ud56d\ud55c \ubaa8\ub4e0 \uc120\ubc15\uacfc \ud574\ub2f9 \ud654\ubb3c \uc720\ud615\uc744 \ud654\ubb3c \uc720\ud615\ubcc4\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE port (port_id INT, port_name VARCHAR(50)); INSERT INTO port (port_id, port_name) VALUES (1, 'Oakland'), (2, 'Seattle'); CREATE TABLE vessels (vessel_id INT, port_id INT, quantity_containers INT); INSERT INTO vessels (vessel_id, port_id, quantity_containers) VALUES (101, 1, 500), (102, 1, 700), (103, 2, 800); CREATE TABLE cargo (cargo_id INT, cargo_type VARCHAR(50), vessel_id INT); INSERT INTO cargo (cargo_id, cargo_type, vessel_id) VALUES (201, 'Containers', 101), (202, 'Vehicles', 102), (203, 'Bulk', 103);", "output": "SELECT vessels.vessel_id, cargo.cargo_type FROM vessels JOIN port ON vessels.port_id = port.port_id JOIN cargo ON vessels.vessel_id = cargo.vessel_id WHERE port.port_name = 'Oakland' ORDER BY cargo.cargo_type;"}
{"input": " \uac01 \uacc4\uae09\uc758 \ucd1d \uad70\uc778 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_ranks (id INT, name TEXT, rank TEXT, number INT);INSERT INTO military_ranks (id, name, rank, number) VALUES (1, 'John Doe', 'Captain', 10);INSERT INTO military_ranks (id, name, rank, number) VALUES (2, 'Jane Smith', 'Lieutenant', 20);", "output": "SELECT rank, SUM(number) FROM military_ranks GROUP BY rank;"}
{"input": " \ud574\uc591 \uc5f0\uad6c \uae30\uc9c0\uac00 \uac00\uc7a5 \uc801\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_name TEXT, num_research_stations INT); INSERT INTO countries (country_name, num_research_stations) VALUES ('Canada', 7), ('USA', 12), ('Australia', 6), ('Indonesia', 4), ('Japan', 8);", "output": "SELECT country_name FROM countries ORDER BY num_research_stations LIMIT 1;"}
{"input": " \uc870\uc9c0\uc544\uc5d0\uc11c \ub450 \uac1c \uc774\uc0c1\uc758 \uacc4\uc815\uc744 \ubcf4\uc720\ud55c \uace0\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(50), state VARCHAR(20), account_number INT); INSERT INTO customers (customer_id, customer_name, state, account_number) VALUES (1, 'John Doe', 'GA', 12345), (2, 'Jane Smith', 'NY', 67890), (3, 'Jim Brown', 'GA', 11111), (4, 'Jill White', 'GA', 22222);", "output": "SELECT COUNT(*) FROM (SELECT customer_id FROM customers GROUP BY customer_id HAVING COUNT(*) > 1) AS subquery;"}
{"input": " \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \uace0\uc720\ud55c \ud2b8\ub80c\ub4dc \ub098\uc5f4", "context": "CREATE TABLE innovation_trends (id INT PRIMARY KEY, startup_id INT, trend VARCHAR(255), impact DECIMAL(10, 2));", "output": "SELECT DISTINCT trend FROM innovation_trends;"}
{"input": " 2022\ub144 \uae30\uc900, \ub370\uc774\ud130\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c\uad6d\uc758 \uc720\uc804\uc790 \ub3cc\uc5f0\ubcc0\uc774 \uc720\ud615\ubcc4, \uc6d4\ubcc4 \uc720\uc804\uc790 \uc5f0\uad6c \ub370\uc774\ud130 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE genetic_research (id INT PRIMARY KEY, country VARCHAR(255), genetic_mutation VARCHAR(255), data_size INT, research_date DATE);", "output": "SELECT EXTRACT(MONTH FROM research_date) AS month, genetic_mutation, SUM(data_size) FROM genetic_research WHERE country IN (SELECT country FROM genetic_research GROUP BY country ORDER BY SUM(data_size) DESC LIMIT 3) AND research_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY month, genetic_mutation;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 \uc2dc\uac01 \uc7a5\uc560 \ud559\uc0dd\uc744 \uc704\ud55c \ucd1d \uc219\ubc15 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accommodations (id INT, student_id INT, accommodation_type VARCHAR(50), cost FLOAT, accommodation_date DATE); INSERT INTO accommodations (id, student_id, accommodation_type, cost, accommodation_date) VALUES (1, 2, 'Sign Language Interpreter', 50.00, '2021-01-01'), (2, 3, 'Assistive Listening Devices', 300.00, '2021-04-01');", "output": "SELECT SUM(cost) FROM accommodations WHERE accommodation_date BETWEEN '2021-01-01' AND '2021-06-30' AND EXISTS (SELECT * FROM students WHERE students.id = accommodations.student_id AND students.disability_type = 'Visual Impairment');"}
{"input": " 2017\ub144\uacfc 2019\ub144 \uc0ac\uc774\uc5d0 \uad6d\uc81c \uad00\uad11\uac1d \ub3c4\ucc29\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \uc544\uc2dc\uc544 \uc0c1\uc704 3\uac1c \ubaa9\uc801\uc9c0\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Arrivals (Year INT, Country VARCHAR(255), Arrivals INT); INSERT INTO Arrivals (Year, Country, Arrivals) VALUES (2017, 'China', 60000000), (2017, 'Japan', 28000000), (2017, 'India', 8800000), (2018, 'China', 62000000), (2018, 'Japan', 30000000), (2018, 'India', 9600000), (2019, 'China', 64000000), (2019, 'Japan', 32000000), (2019, 'India', 10400000);", "output": "SELECT Country, Arrivals, (Arrivals - LAG(Arrivals, 1) OVER (PARTITION BY Country ORDER BY Year)) AS Increase FROM Arrivals WHERE Country IN ('China', 'Japan', 'India') AND Year BETWEEN 2017 AND 2019 ORDER BY Increase DESC, Arrivals DESC LIMIT 3;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uc6b0\uc8fc\uad6d\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE satellites (satellite_id INT, name VARCHAR(255), launch_country VARCHAR(255), agency VARCHAR(255));", "output": "SELECT agency, COUNT(*) as total_launches FROM satellites GROUP BY agency ORDER BY total_launches DESC LIMIT 1;"}
{"input": " \uc2e0\uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubd84\uc57c \ub09c\ubbfc\uc774 \ucc3d\uc5c5\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucd1d \ud22c\uc790 \ub77c\uc6b4\ub4dc \uc218\uc640 \ucd1d \ud380\ub529 \uae08\uc561\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE investment_rounds(id INT, startup_id INT, round_type TEXT, amount INT);", "output": "SELECT COUNT(*) as total_rounds, SUM(amount) as total_funding FROM investment_rounds JOIN startups ON investment_rounds.startup_id = startups.id JOIN founders ON startups.id = founders.startup_id WHERE industry = 'Renewable Energy' AND founders.founder_identity = 'Refugee';"}
{"input": " '\ub3c4\ucfc4'\uc640 '\ud30c\ub9ac'\uc5d0\uc11c \uacf5\uc5f0\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Venues (VenueID INT, VenueName VARCHAR(100), Location VARCHAR(50)); INSERT INTO Venues (VenueID, VenueName, Location) VALUES (1001, 'VenueA', 'New York'), (1002, 'VenueB', 'Los Angeles'), (1003, 'VenueC', 'Tokyo'), (1004, 'VenueD', 'Paris'), (1005, 'VenueE', 'Sydney'); CREATE TABLE Concerts (ConcertID INT, VenueID INT, ArtistID INT); INSERT INTO Concerts (ConcertID, VenueID, ArtistID) VALUES (1, 1003, 1), (2, 1004, 2), (3, 1005, 3), (4, 1003, 4), (5, 1004, 4), (6, 1003, 5), (7, 1004, 5);", "output": "SELECT ArtistID FROM Concerts C1 JOIN Venues V1 ON C1.VenueID = V1.VenueID WHERE V1.Location = 'Tokyo' INTERSECT SELECT ArtistID FROM Concerts C2 JOIN Venues V2 ON C2.VenueID = V2.VenueID WHERE V2.Location = 'Paris';"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ud574\uc591 \ud3ec\uc720\ub958\uc640 \uc5b4\ub958\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE marine_mammals (id INT, name VARCHAR(255), conservation_status VARCHAR(255)); INSERT INTO marine_mammals (id, name, conservation_status) VALUES (1, 'Bottlenose Dolphin', 'Least Concern'); CREATE TABLE fish_species (id INT, name VARCHAR(255), conservation_status VARCHAR(255)); INSERT INTO fish_species (id, name, conservation_status) VALUES (1, 'Clownfish', 'Least Concern');", "output": "SELECT COUNT(*) FROM marine_mammals UNION ALL SELECT COUNT(*) FROM fish_species;"}
{"input": " \uac01 \uad11\uc0b0\uc5d0\uc11c \ucc44\uad74\ub418\ub294 \uc11d\ud0c4, \ucca0, \uae08\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mine (MineID int, MineName varchar(50), Location varchar(50)); CREATE TABLE Coal (CoalID int, MineID int, CoalQuantity int); CREATE TABLE Iron (IronID int, MineID int, IronQuantity int); CREATE TABLE Gold (GoldID int, MineID int, GoldQuantity int); INSERT INTO Mine VALUES (1, 'ABC Mine', 'Colorado'), (2, 'DEF Mine', 'Wyoming'), (3, 'GHI Mine', 'West Virginia'); INSERT INTO Coal VALUES (1, 1, 5000), (2, 2, 7000), (3, 3, 6000); INSERT INTO Iron VALUES (1, 1, 8000), (2, 2, 9000), (3, 3, 10000); INSERT INTO Gold VALUES (1, 1, 12000), (2, 2, 15000), (3, 3, 18000);", "output": "SELECT MineName, SUM(CoalQuantity) as TotalCoalQuantity, SUM(IronQuantity) as TotalIronQuantity, SUM(GoldQuantity) as TotalGoldQuantity FROM Mine LEFT JOIN Coal ON Mine.MineID = Coal.MineID LEFT JOIN Iron ON Mine.MineID = Iron.MineID LEFT JOIN Gold ON Mine.MineID = Gold.MineID GROUP BY MineName;"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE ProgramCategories (CategoryID INT, Category VARCHAR(20)); INSERT INTO ProgramCategories (CategoryID, Category) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE Programs (ProgramID INT, CategoryID INT, ProgramName VARCHAR(50)); INSERT INTO Programs (ProgramID, CategoryID, ProgramName) VALUES (100, 1, 'Youth Education'), (200, 2, 'Health Awareness'), (300, 3, 'Environmental Cleanup'); CREATE TABLE Donations (DonationID INT, ProgramID INT, DonationAmount DECIMAL(10,2)); INSERT INTO Donations (DonationID, ProgramID, DonationAmount) VALUES (1, 100, 50.00), (2, 100, 100.00), (3, 200, 200.00), (4, 200, 300.00), (5, 300, 400.00), (6, 300, 500.00), (7, 300, 600.00), (8, 300, 700.00);", "output": "SELECT pc.Category, AVG(d.DonationAmount) AS AverageDonationAmount FROM ProgramCategories pc JOIN Programs p ON pc.CategoryID = p.CategoryID JOIN Donations d ON p.ProgramID = d.ProgramID GROUP BY pc.Category;"}
{"input": " '\uc2dc\uc1241'\uc758 '\uc790\uc7ac 1'\uacfc '\uc790\uc7ac 2'\uc758 \ud569\uc0b0 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE facility_recycling (facility VARCHAR(255), material VARCHAR(255), recycling_rate DECIMAL(5,2)); INSERT INTO facility_recycling (facility, material, recycling_rate) VALUES ('Facility 1', 'Material 1', 0.30), ('Facility 1', 'Material 2', 0.40);", "output": "SELECT SUM(recycling_rate) FROM (SELECT recycling_rate FROM facility_recycling WHERE facility = 'Facility 1' AND material = 'Material 1' UNION ALL SELECT recycling_rate FROM facility_recycling WHERE facility = 'Facility 1' AND material = 'Material 2') AS combined_recycling;"}
{"input": " \ud2b9\uc815 \uc7a5\ub974\uc758 \ub178\ub798\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE StreamingData (StreamID INT, UserID INT, SongID INT, StreamDate DATE); INSERT INTO StreamingData VALUES (1, 1, 1001, '2022-01-01'), (2, 2, 1002, '2022-01-02'); CREATE TABLE Songs (SongID INT, SongName VARCHAR(100), Genre VARCHAR(50)); INSERT INTO Songs VALUES (1001, 'Shake It Off', 'Pop'), (1002, 'Dynamite', 'Pop'); CREATE TABLE Users (UserID INT, UserName VARCHAR(50)); INSERT INTO Users VALUES (1, 'Aarav'), (2, 'Bella');", "output": "SELECT COUNT(DISTINCT Users.UserID) FROM StreamingData JOIN Songs ON StreamingData.SongID = Songs.SongID JOIN Users ON StreamingData.UserID = Users.UserID WHERE Songs.Genre = 'Pop';"}
{"input": " 2021\ub144 \ubbf8\uad6d \uac1c\uc778 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (id INT, name TEXT, country TEXT, donation_amount DECIMAL(10, 2), donation_date DATE);", "output": "SELECT SUM(donation_amount) FROM Donors WHERE country = 'United States' AND EXTRACT(YEAR FROM donation_date) = 2021 AND id NOT IN (SELECT DISTINCT donor_id FROM Organization_Donations);"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc2dc\ub0b4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc804\uae30 \uc790\ub3d9\ucc28 \ucda9\uc804\uc18c\uc758 \uc774\ub984\uacfc \ucda9\uc804 \uc9c0\uc810 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ev_charging_stations (id INT, name VARCHAR(255), city VARCHAR(255), num_charging_points INT);", "output": "SELECT name, num_charging_points FROM ev_charging_stations WHERE city = 'Los Angeles';"}
{"input": " \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \ud638\ud154 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c? \uac00\uc7a5 \ub192\uc740 \ub4f1\uae09\uc774 \uba3c\uc800 \uc815\ub82c\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Hotels (HotelID int, HotelName varchar(255), Country varchar(255), Rating float); INSERT INTO Hotels (HotelID, HotelName, Country, Rating) VALUES (1, 'Hotel X', 'France', 4.5), (2, 'Hotel Y', 'Spain', 4.2), (3, 'Hotel Z', 'Italy', 4.7);", "output": "SELECT Country, AVG(Rating) as AvgRating FROM Hotels GROUP BY Country ORDER BY AvgRating DESC;"}
{"input": " \uc0ac\uc774\ubc84 \ubcf4\uc548 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0 \uc218\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uc9c1\uc704\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE EmployeeSkills (EmployeeID INT, Skill VARCHAR(50)); CREATE TABLE JobHistory (EmployeeID INT, JobStartDate DATE); INSERT INTO EmployeeSkills (EmployeeID, Skill) VALUES (1, 'Cybersecurity'), (2, 'Project Management'); INSERT INTO JobHistory (EmployeeID, JobStartDate) VALUES (1, '2020-01-01'), (2, '2019-01-01');", "output": "SELECT JobHistory.JobTitle, COUNT(*) AS NumberOfEmployees FROM (EmployeeSkills INNER JOIN JobHistory ON EmployeeSkills.EmployeeID = JobHistory.EmployeeID) INNER JOIN (SELECT DISTINCT EmployeeID, JobTitle FROM EmployeeDemographics) AS EmployeeDemographics ON JobHistory.EmployeeID = EmployeeDemographics.EmployeeID WHERE Skill = 'Cybersecurity' GROUP BY JobTitle;"}
{"input": " \ub9e4\ub144 \uba87 \uac1c\uc758 \uc57d\ubb3c\uc774 \uc2b9\uc778\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists pharma; CREATE TABLE if not exists pharma.drug_approval (year INT, drug VARCHAR(255)); INSERT INTO pharma.drug_approval (year, drug) VALUES (2018, 'Drug A'), (2019, 'Drug B'), (2020, 'Drug C'), (2020, 'Drug D'), (2021, 'Drug E');", "output": "SELECT year, COUNT(DISTINCT drug) AS drugs_approved FROM pharma.drug_approval GROUP BY year ORDER BY year;"}
{"input": " 2018\ub144\uacfc 2019\ub144\uc5d0 \ud504\ub791\uc2a4\uac00 \uc9c4\ud589\ud55c \uad6d\ubc29 \uc678\uad50 \ud589\uc0ac\ub294 \ucd5c\ub300 \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE defense_diplomacy (country VARCHAR(50), year INT, event_count INT); INSERT INTO defense_diplomacy (country, year, event_count) VALUES ('France', 2018, 5), ('France', 2018, 6), ('France', 2019, 7), ('France', 2019, 8);", "output": "SELECT MAX(event_count) FROM defense_diplomacy WHERE country = 'France' AND year IN (2018, 2019);"}
{"input": " 2022\ub144 1\ubd84\uae30 '\uc624\uc138\uc544\ub2c8\uc544' \uc758\ub958 \uc81c\uc870\uc5d0\uc11c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE oceania_manufacturing(region VARCHAR(20), revenue INT, manufacturing_date DATE); INSERT INTO oceania_manufacturing (region, revenue, manufacturing_date) VALUES ('Oceania', 4000, '2022-01-01'); INSERT INTO oceania_manufacturing (region, revenue, manufacturing_date) VALUES ('Oceania', 5000, '2022-01-02');", "output": "SELECT SUM(revenue) FROM oceania_manufacturing WHERE region = 'Oceania' AND manufacturing_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": " \ub808\uc774\ucee4\uc2a4\uc758 \ud3c9\uade0 \ud648\uacbd\uae30 \uad00\uc911\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Lakers'); CREATE TABLE venues (venue_id INT, venue_name VARCHAR(255)); INSERT INTO venues (venue_id, venue_name) VALUES (1, 'Staples Center'); CREATE TABLE games (game_id INT, team_id INT, venue_id INT, attendance INT); INSERT INTO games (game_id, team_id, venue_id, attendance) VALUES (1, 1, 1, 10000);", "output": "SELECT AVG(games.attendance) FROM games INNER JOIN teams ON games.team_id = teams.team_id INNER JOIN venues ON games.venue_id = venues.venue_id WHERE teams.team_name = 'Lakers' AND venues.venue_name = 'Staples Center';"}
{"input": "\uac01 \uc601\uc5c5\uc0ac\uc6d0\uc774 \ud310\ub9e4\ud55c \uc758\ub958\uc758 \uc6d4\ubcc4 \ucd1d \uc218\ub7c9\uc744 \uc601\uc5c5\uc0ac\uc6d0\ubcc4\ub85c \uc815\ub82c\ud55c \ub2e4\uc74c \uc6d4\ubcc4\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sales_data (salesperson VARCHAR(50), sale_date DATE, quantity INT); INSERT INTO sales_data (salesperson, sale_date, quantity) VALUES ('John', '2021-01-01', 15), ('Jane', '2021-01-05', 20), ('John', '2021-01-07', 10);", "output": "SELECT salesperson, DATE_TRUNC('month', sale_date) AS month, SUM(quantity) AS total_quantity FROM sales_data GROUP BY salesperson, month ORDER BY salesperson, month;"}
{"input": " \uc804\ub144 \ub3d9\uc6d4 \ub300\ube44 \uc9c0\uc5ed\ubcc4 \ud3c9\uade0\uae30\uc628 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE monthly_temp_2 (region VARCHAR(255), temperature INT, month INT, year INT); INSERT INTO monthly_temp_2 (region, temperature, month, year) VALUES ('North', 25, 1, 2021), ('South', 30, 1, 2021), ('East', 28, 1, 2021), ('West', 22, 1, 2021), ('North', 27, 1, 2022), ('South', 29, 1, 2022), ('East', 31, 1, 2022), ('West', 24, 1, 2022);", "output": "SELECT region, ((current_temp - prev_temp) * 100.0 / prev_temp) as pct_change FROM (SELECT region, temperature as current_temp, LAG(temperature) OVER (PARTITION BY region, month ORDER BY year) as prev_temp FROM monthly_temp_2) subquery;"}
{"input": " \uc7ac\ud574 \ud53c\ud574 \uc9c0\uc5ed\uc758 \ud559\uad50\uc640 \ubcd1\uc6d0\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (region_id INT, name VARCHAR(50), disaster_status VARCHAR(10)); INSERT INTO regions (region_id, name, disaster_status) VALUES (1, 'Region A', 'affected'), (2, 'Region B', 'not affected'), (3, 'Region C', 'affected'); CREATE TABLE schools (school_id INT, region_id INT, num_students INT); INSERT INTO schools (school_id, region_id, num_students) VALUES (1, 1, 500), (2, 1, 700), (3, 3, 900); CREATE TABLE hospitals (hospital_id INT, region_id INT, num_beds INT); INSERT INTO hospitals (hospital_id, region_id, num_beds) VALUES (1, 1, 200), (2, 3, 300), (3, 2, 150)", "output": "SELECT SUM(num_schools) + SUM(num_hospitals) FROM (SELECT COUNT(*) AS num_schools, 0 AS num_hospitals FROM schools WHERE region_id IN (SELECT region_id FROM regions WHERE disaster_status = 'affected') UNION ALL SELECT 0, COUNT(*) FROM hospitals WHERE region_id IN (SELECT region_id FROM regions WHERE disaster_status = 'affected')) total"}
{"input": " \ucc3d\uc5c5 \uc5f0\ub3c4\ubcc4, \uc131\ubcc4\ubcc4 \uae30\uc5c5 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Companies (id INT, name VARCHAR(50), industry VARCHAR(50), country VARCHAR(50), founding_year INT, founder_gender VARCHAR(10)); INSERT INTO Companies (id, name, industry, country, founding_year, founder_gender) VALUES (1, 'InnoTech', 'Tech', 'USA', 2015, 'Male'); INSERT INTO Companies (id, name, industry, country, founding_year, founder_gender) VALUES (2, 'Code4All', 'Tech', 'Germany', 2018, 'Female');", "output": "SELECT founding_year, founder_gender, COUNT(*) as company_count FROM Companies GROUP BY founding_year, founder_gender;"}
{"input": " \uc9c0\ub09c \ub2ec \ud2b9\uc815 \ub3c4\uc2dc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uad11\uace0\ub97c \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), city VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, post_type VARCHAR(255), post_date DATETIME); CREATE TABLE ads (id INT, post_id INT);", "output": "SELECT u.name, COUNT(a.id) AS ad_count FROM users u JOIN posts p ON u.id = p.user_id AND p.post_type = 'ad' JOIN ads a ON p.id = a.post_id WHERE u.city = 'New York' AND p.post_date > DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY u.name ORDER BY ad_count DESC LIMIT 1;"}
{"input": " \uac80\uc0ac\ub97c 3\ud68c \uc774\uc0c1 \uc218\ud589\ud55c \ub808\uc2a4\ud1a0\ub791\uc758 \ud3c9\uade0 \uc218\uc775\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE restaurant_data (id INT, restaurant_name VARCHAR(255), revenue INT, number_of_inspections INT); INSERT INTO restaurant_data (id, restaurant_name, revenue, number_of_inspections) VALUES (1, 'Bella Italia', 25000, 4); INSERT INTO restaurant_data (id, restaurant_name, revenue, number_of_inspections) VALUES (2, 'Sushi House', 30000, 2);", "output": "SELECT restaurant_name, AVG(revenue) FROM restaurant_data WHERE number_of_inspections > 3 GROUP BY restaurant_name;"}
{"input": " \ub300\uc11c\uc591\uc758 \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uc9c0\uc5ed\uc5d0 \uc788\ub294 \ud574\uc591 \uc0dd\ubb3c\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (area_name TEXT, location TEXT, biomass FLOAT);", "output": "SELECT SUM(marine_protected_areas.biomass) AS total_biomass FROM marine_protected_areas WHERE marine_protected_areas.location = 'Atlantic Ocean';"}
{"input": " \ubaa8\ub4e0 \uad70\uc0ac \uc7a5\ube44 \uc720\uc9c0 \uad00\ub9ac \uc694\uccad\uc744 \ub098\uc5f4\ud558\uace0 \uac01 \uacc4\uc57d\uc790\uc5d0 \ub300\ud55c \ucc98\ub9ac \uc2dc\uac04\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE contractor_maintenance(contractor_id INT, request_date DATE, request_type VARCHAR(20), processing_time INT); INSERT INTO contractor_maintenance(contractor_id, request_date, request_type, processing_time) VALUES (1, '2021-01-01', 'equipment_inspection', 30), (1, '2021-01-10', 'equipment_repair', 60), (2, '2021-01-05', 'parts_replacement', 45), (2, '2021-01-15', 'equipment_inspection', 50);", "output": "SELECT contractor_id, request_date, request_type, processing_time, AVG(processing_time) OVER (PARTITION BY contractor_id ORDER BY request_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as moving_average FROM contractor_maintenance;"}
{"input": " \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \ub9e4\ucd9c\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE menu_sales(menu_category VARCHAR(255), total_sales DECIMAL(10,2)); INSERT INTO menu_sales(menu_category, total_sales) VALUES('Appetizers', 5000.00), ('Entrees', 12000.00), ('Desserts', 6000.00);", "output": "SELECT menu_category, SUM(total_sales) FROM menu_sales GROUP BY menu_category;"}
{"input": " \uc124\uba85\uacfc \ud568\uaed8 \uc77c\ubcf8 \uc804\ud1b5 \uc608\uc220 \ud615\uc2dd\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtForms (id INT, name VARCHAR(255), origin VARCHAR(255), description TEXT); INSERT INTO ArtForms (id, name, origin, description) VALUES (1, 'Kabuki', 'Japan', 'A classical Japanese dance-drama known for its elaborate make-up and costumes.');", "output": "SELECT name FROM ArtForms WHERE origin = 'Japan' INTERSECT SELECT name FROM ArtForms WHERE description IS NOT NULL;"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74\uacf5\ud654\uad6d \ub18d\ucd0c \uc9c0\uc5ed\uc5d0 \uc788\ub294 \uc758\ub8cc \uc13c\ud130\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE healthcare_centers (id INT, name TEXT, country TEXT, location TEXT);", "output": "SELECT COUNT(*) FROM healthcare_centers WHERE country = 'South Africa' AND location = 'rural';"}
{"input": " \ubaa8\ub4e0 \uc0b0\ub9bc \uc9c0\uc5ed, \ud574\ub2f9 \uc57c\uc0dd \ub3d9\ubb3c \uc885, \uac01 \uc9c0\uc5ed\uc758 \ud0c4\uc18c \uaca9\ub9ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE ForestPlots (PlotID int, PlotName varchar(50)); INSERT INTO ForestPlots VALUES (1, 'Plot1'), (2, 'Plot2'); CREATE TABLE Wildlife (SpeciesID int, SpeciesName varchar(50), PlotID int); INSERT INTO Wildlife VALUES (1, 'Deer', 1), (2, 'Bear', 1), (3, 'Rabbit', 2); CREATE TABLE CarbonSequestration (PlotID int, Sequestration float); INSERT INTO CarbonSequestration VALUES (1, 500), (2, 600);", "output": "SELECT ForestPlots.PlotName, Wildlife.SpeciesName, CarbonSequestration.Sequestration FROM ForestPlots INNER JOIN Wildlife ON ForestPlots.PlotID = Wildlife.PlotID INNER JOIN CarbonSequestration ON ForestPlots.PlotID = CarbonSequestration.PlotID;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc628\ub77c\uc778 \uac15\uc88c\uc5d0 \ub4f1\ub85d\ud55c \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (id INT, name TEXT, gender TEXT, enrollment_date DATE); INSERT INTO students (id, name, gender, enrollment_date) VALUES (1, 'Alice', 'Female', '2021-06-01'); INSERT INTO students (id, name, gender, enrollment_date) VALUES (2, 'Bob', 'Male', '2021-01-15'); INSERT INTO students (id, name, gender, enrollment_date) VALUES (3, 'Charlie', 'Non-binary', '2021-08-05');", "output": "SELECT COUNT(*) FROM students WHERE enrollment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND course_type = 'Online';"}
{"input": " \uac80\uc0ac \ub0a0\uc9dc \ubc0f \uc720\uc9c0 \uad00\ub9ac \uae30\ub85d\uacfc \ud568\uaed8 \ud14d\uc0ac\uc2a4\uc758 \ubaa8\ub4e0 \ub310\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Dams (DamID INT, Name VARCHAR(255), Location VARCHAR(255), ConstructionDate DATE); INSERT INTO Dams VALUES (1, 'Hoover Dam', 'Nevada'); INSERT INTO Dams VALUES (2, 'Ames Dam', 'Iowa'); CREATE TABLE Inspections (InspectionID INT, DamID INT, InspectionDate DATE); INSERT INTO Inspections VALUES (1, 1, '2018-06-15'); INSERT INTO Inspections VALUES (2, 2, '2020-12-28'); CREATE TABLE Maintenance (MaintenanceID INT, DamID INT, MaintenanceDate DATE, MaintenanceType VARCHAR(255)); INSERT INTO Maintenance VALUES (1, 1, '2019-08-12', 'Concrete Repair'); INSERT INTO Maintenance VALUES (2, 2, '2021-04-10', 'Drainage Upgrade');", "output": "SELECT Dams.Name, Inspections.InspectionDate, Maintenance.MaintenanceDate, Maintenance.MaintenanceType FROM Dams LEFT JOIN Inspections ON Dams.DamID = Inspections.DamID FULL OUTER JOIN Maintenance ON Dams.DamID = Maintenance.DamID WHERE Dams.Location = 'Texas';"}
{"input": "\ubb38\ud559 \ud589\uc0ac\uc758 \uc7ac\ucc38\uac00\uc728\uc740 \uc5bc\ub9c8\uc774\uba70, \uccab \ubc88\uc9f8 \ucc38\uc11d\uacfc \ub9c8\uc9c0\ub9c9 \ucc38\uc11d \uc0ac\uc774\uc758 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE LiteraryEvents (EventID INT, EventName VARCHAR(50), Date DATE); CREATE TABLE Attendees (AttendeeID INT, AttendeeName VARCHAR(50), FirstAttendance DATE, LastAttendance DATE); CREATE TABLE EventAttendees (EventID INT, AttendeeID INT, FOREIGN KEY (EventID) REFERENCES LiteraryEvents(EventID), FOREIGN KEY (AttendeeID) REFERENCES Attendees(AttendeeID));", "output": "SELECT AVG(DATEDIFF(Attendees.LastAttendance, Attendees.FirstAttendance))/365, COUNT(DISTINCT EventAttendees.AttendeeID)/COUNT(DISTINCT Attendees.AttendeeID) * 100 FROM EventAttendees INNER JOIN Attendees ON EventAttendees.AttendeeID = Attendees.AttendeeID INNER JOIN LiteraryEvents ON EventAttendees.EventID = LiteraryEvents.EventID WHERE LiteraryEvents.EventName LIKE '%literary%';"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc2f1\uac00\ud3ec\ub974 \uc790\uc728 \ubc84\uc2a4\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE BusSales(id INT, type VARCHAR(20), city VARCHAR(20), year INT, quantity INT);", "output": "SELECT type, city, AVG(quantity*100.0/SUM(quantity)) OVER (PARTITION BY type, city ORDER BY year ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as market_share FROM BusSales WHERE city = 'Singapore' AND type IN ('Autonomous', 'Conventional') GROUP BY type, city, year ORDER BY year;"}
{"input": " \ud30c\ub9ac\uc640 \ubca0\ub97c\ub9b0 \ubc15\ubb3c\uad00\uc5d0 \uc788\ub294 \uadf8\ub9bc\uacfc \uc870\uac01\ud488\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE paris_art(id INT, museum VARCHAR(20), art_type VARCHAR(20), count INT); INSERT INTO paris_art VALUES (1, 'Louvre', 'Painting', 500); INSERT INTO paris_art VALUES (2, 'Louvre', 'Sculpture', 300); CREATE TABLE berlin_art(id INT, museum VARCHAR(20), art_type VARCHAR(20), count INT); INSERT INTO berlin_art VALUES (1, 'Pergamon', 'Painting', 400); INSERT INTO berlin_art VALUES (2, 'Pergamon', 'Sculpture', 600);", "output": "SELECT SUM(count) FROM (SELECT count FROM paris_art WHERE museum = 'Louvre' UNION ALL SELECT count FROM berlin_art WHERE museum = 'Pergamon') AS combined_museums;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \uac01 \uc791\ubb3c \uc720\ud615\uc744 \uc2ec\uc740 \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, name VARCHAR(255)); CREATE TABLE planting_records (record_id INT, user_id INT, crop_type VARCHAR(255), planting_date DATE);", "output": "SELECT s.crop_type, COUNT(DISTINCT u.user_id) as num_unique_users FROM users u INNER JOIN planting_records s ON u.user_id = s.user_id INNER JOIN (SELECT crop_type, MAX(planting_date) as max_planting_date FROM planting_records WHERE planting_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY crop_type) md ON s.crop_type = md.crop_type AND s.planting_date = md.max_planting_date GROUP BY s.crop_type;"}
{"input": " 2022\ub144 10\uc6d4 \uc624\uc804 7~8\uc2dc \uc0ac\uc774\uc5d0 \ud2b8\ub7a8 \uc2dc\uc2a4\ud15c\uc758 \ud0d1\uc2b9 \ud69f\uc218\ub294 \uba87 \ubc88\uc774\ub098 \uc2dc\uc791\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE trips (trip_id INT, trip_start_time DATETIME, trip_end_time DATETIME, system_name VARCHAR(20));", "output": "SELECT system_name, COUNT(*) FROM trips WHERE trip_start_time BETWEEN '2022-10-01 07:00:00' AND '2022-10-31 08:00:00' AND system_name = 'Tram' GROUP BY system_name;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uc9c1\uc6d0 \uc218\uc640 \uc804\uccb4 \uc9c1\uc6d0\uc758 \ube44\uc728\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE departments (id INT, department TEXT, employee_count INT); INSERT INTO departments (id, department, employee_count) VALUES (1, 'mining_operations', 150); INSERT INTO departments (id, department, employee_count) VALUES (2, 'geology', 120);", "output": "SELECT department, employee_count, ROUND(100.0 * employee_count / (SELECT SUM(employee_count) FROM departments), 2) AS percentage FROM departments;"}
{"input": " Suburb I\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ucc38\uc5ec\uc790\uac00 \uc788\ub294 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityPrograms (id INT, program_name VARCHAR(50), location VARCHAR(50), participants INT); INSERT INTO CommunityPrograms (id, program_name, location, participants) VALUES (1, 'Youth Mentoring', 'Suburb I', 150);", "output": "SELECT program_name, MAX(participants) FROM CommunityPrograms WHERE location = 'Suburb I';"}
{"input": " \uad50\uc678 \uc9c0\uc5ed\uc758 \uc815\uc2e0 \uac74\uac15 \uc2dc\uc124\uc5d0 \ub300\ud55c \ud3c9\uade0 \uac74\uac15 \ud615\ud3c9\uc131 \uce21\uc815 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_facilities (facility_id INT, location TEXT, score INT); INSERT INTO mental_health_facilities (facility_id, location, score) VALUES (1, 'Urban', 80), (2, 'Rural', 75), (3, 'Suburban', 85);", "output": "SELECT AVG(score) FROM mental_health_facilities WHERE location = 'Suburban';"}
{"input": " 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \uac01 \uc9c0\uc5ed\uc758 \uacf5\ub9bd\ud559\uad50 \uc218\uc5d0\ub294 \uc5b4\ub5a4 \ubcc0\ud654\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE regions (region_name VARCHAR(50), year INT, num_schools INT); INSERT INTO regions VALUES ('North', 2020, 50); INSERT INTO regions VALUES ('North', 2021, 55); INSERT INTO regions VALUES ('South', 2020, 60); INSERT INTO regions VALUES ('South', 2021, 63);", "output": "SELECT region_name, (LEAD(num_schools) OVER (PARTITION BY region_name ORDER BY year) - num_schools) as change_in_num_schools FROM regions;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uc0c1\ud488 \uad6c\ub9e4\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ub3c8\uc744 \uc4f4 \ud32c \uc0c1\uc704 5\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fans (fan_id INT, fan_name VARCHAR(50));CREATE TABLE merchandise (merchandise_id INT, merchandise_name VARCHAR(50), unit_price DECIMAL(5,2));CREATE TABLE sales (sale_id INT, fan_id INT, merchandise_id INT, sale_date DATE, quantity INT); INSERT INTO fans (fan_id, fan_name) VALUES (1, 'Fan1'), (2, 'Fan2'), (3, 'Fan3'); INSERT INTO merchandise (merchandise_id, merchandise_name, unit_price) VALUES (1, 'T-Shirt', 20.00), (2, 'Hat', 15.00); INSERT INTO sales (sale_id, fan_id, merchandise_id, sale_date, quantity) VALUES (1, 1, 1, '2022-01-01', 5), (2, 2, 2, '2022-01-02', 3);", "output": "SELECT f.fan_name, SUM(m.unit_price * s.quantity) as total_spent FROM fans f JOIN sales s ON f.fan_id = s.fan_id JOIN merchandise m ON s.merchandise_id = m.merchandise_id WHERE s.sale_date >= DATEADD(month, -3, GETDATE()) GROUP BY f.fan_name ORDER BY total_spent DESC LIMIT 5;"}
{"input": " \uac01 \uc6d0\uc778\ubcc4 \ucd1d \uae30\ubd80\uc561\uacfc \ud3c9\uade0 \uae30\ubd80\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Causes (Cause TEXT); CREATE TABLE Donations (DonationID INT, DonationAmount INT, Cause TEXT); INSERT INTO Causes (Cause) VALUES ('Environment'), ('Health'), ('Education'); INSERT INTO Donations (DonationID, DonationAmount, Cause) VALUES (1, 5000, 'Environment'), (2, 7000, 'Health'), (3, 3000, 'Environment'), (4, 8000, 'Education'), (5, 9000, 'Health'), (6, 4000, 'Health'), (7, 6000, 'Education');", "output": "SELECT Cause, SUM(DonationAmount) AS TotalDonationAmount, AVG(DonationAmount) AS AverageDonationAmount FROM Donations GROUP BY Cause;"}
{"input": " \ud638\uc8fc\ub97c \uc81c\uc678\ud55c \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uad6d\uac00\uac00 \ucc38\uc5ec\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ud65c\ub3d9\uc758 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE humanitarian_assistance (country VARCHAR(50));", "output": "SELECT country, COUNT(*) FROM (SELECT country FROM humanitarian_assistance WHERE country NOT IN ('Australia') AND country LIKE 'Asia%') GROUP BY country;"}
{"input": " \uad6d\uac00\ubcc4 \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ud65c\ub3d9 \ud69f\uc218 \ud45c\uc2dc", "context": "CREATE TABLE humanitarian_assistance (id INT PRIMARY KEY, operation VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE);", "output": "SELECT location, COUNT(*) FROM humanitarian_assistance GROUP BY location;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0\ub294 \uc5b4\ub5a4 \uc815\ucc45\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE CybersecurityPolicies (id INT, policy_name VARCHAR(255), last_updated DATE);", "output": "SELECT policy_name FROM CybersecurityPolicies WHERE last_updated >= DATEADD(month, -1, GETDATE());"}
{"input": " \uac01 \ud559\uacfc\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uac15\uc88c\ub97c \uc218\uac15\ud55c \uc801\uc774 \uc788\ub294 \ud559\uc0dd\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE departments (department_id INT, department_name TEXT); CREATE TABLE courses (course_id INT, course_name TEXT, department_id INT); CREATE TABLE enrollments (enrollment_id INT, student_id INT, course_id INT, enrollment_date DATE); INSERT INTO departments VALUES (1, 'Mathematics'), (2, 'Science'), (3, 'English'); INSERT INTO courses VALUES (1, 'Algebra I', 1), (2, 'Geometry', 2), (3, 'Algebra II', 1), (4, 'Biology', 2), (5, 'English Composition', 3); INSERT INTO enrollments VALUES (1, 1, 1, '2021-08-01'), (2, 2, 1, '2021-08-01'), (3, 3, 2, '2021-08-01'), (4, 4, 2, '2021-08-01'), (5, 5, 3, '2021-08-01');", "output": "SELECT d.department_name, COUNT(DISTINCT e.student_id) FROM departments d INNER JOIN courses c ON d.department_id = c.department_id INNER JOIN enrollments e ON c.course_id = e.course_id GROUP BY d.department_id;"}
{"input": " \uc77c\ubcf8 \uc120\uc218\ub4e4\uc758 \uac01 \uc885\ubaa9\ubcc4 \uc5f0\ub839 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Athletes (AthleteID INT, Name VARCHAR(50), Age INT, Sport VARCHAR(20), Country VARCHAR(50)); INSERT INTO Athletes (AthleteID, Name, Age, Sport, Country) VALUES (1, 'Hanae Shibata', 22, 'Swimming', 'Japan'); INSERT INTO Athletes (AthleteID, Name, Age, Sport, Country) VALUES (2, 'Kenji Sato', 30, 'Gymnastics', 'Japan');", "output": "SELECT AthleteID, Name, Age, ROW_NUMBER() OVER (PARTITION BY Sport ORDER BY Age) AS AgeRank FROM Athletes WHERE Country = 'Japan';"}
{"input": " \uac01 \ud56d\uc18c \ubc95\uc6d0\uc5d0\uc11c \ud56d\uc18c\uac00 \ud574\uacb0\ub418\uae30\uae4c\uc9c0 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \uac78\ub9ac\ub098\uc694?", "context": "CREATE TABLE appeals (id INT, appeal_date DATE, resolution_date DATE, appellate_court VARCHAR(50));", "output": "SELECT appellate_court, AVG(DATEDIFF(day, appeal_date, resolution_date)) AS avg_time_taken FROM appeals GROUP BY appellate_court;"}
{"input": " 2020\ub144 \ud638\uc8fc\uc5d0\uc11c \uae68\ub057\ud55c \ubb3c\uc744 \uc774\uc6a9\ud560 \uc218 \uc788\ub294 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc758 \ube44\uc728.", "context": "CREATE TABLE CleanWater (Community VARCHAR(50), Country VARCHAR(50), Year INT, Percentage DECIMAL(4,2)); INSERT INTO CleanWater (Community, Country, Year, Percentage) VALUES ('Aboriginal', 'Australia', 2020, 68.9), ('Torres Strait Islander', 'Australia', 2020, 72.1);", "output": "SELECT (COUNT(CASE WHEN Community = 'Aboriginal' THEN 1 END) * 100.0 / (COUNT(CASE WHEN Community = 'Aboriginal' THEN 1 END) + COUNT(CASE WHEN Community = 'Torres Strait Islander' THEN 1 END))) FROM CleanWater WHERE Country = 'Australia' AND Year = 2020;"}
{"input": " 2020\ub144\uc5d0\ub294 \uad6d\uac00\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uace0\uc720 \uc694\uc18c\uac00 \uc0dd\uc0b0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE production (country VARCHAR(255), year INT, element VARCHAR(10), quantity INT); INSERT INTO production (country, year, element, quantity) VALUES ('China', 2020, 'Nd', 120000), ('Australia', 2020, 'Nd', 8000), ('China', 2020, 'Pr', 130000), ('China', 2020, 'Dy', 140000);", "output": "SELECT country, COUNT(DISTINCT element) FROM production WHERE year = 2020 GROUP BY country;"}
{"input": " \uc804 \uc138\uacc4 \ubc31\ub9cc \uba85\ub2f9 \ud32c \uc218; 100\ub9cc \ubc30\uc728\uc744 \uc0ac\uc6a9\ud558\ub2e4", "context": "INSERT INTO music_genres_ext (id, genre, popularity) VALUES (2, 'Jazz', 1500000);", "output": "SELECT 2 AS id, 'Jazz' AS genre, 1500000 AS popularity, 1500000 / (SELECT SUM(popularity) FROM music_genres_ext) * 1000000 AS fans_per_million;"}
{"input": " '\ub274\uc695'\uc5d0\uc11c \uacf5\uc720 \uc790\uc804\uac70\uc758 \ucd5c\ub300 \uc5ec\ud589 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE if not exists Cities (id int, name text); INSERT INTO Cities (id, name) VALUES (1, 'Los Angeles'), (2, 'New York'); CREATE TABLE if not exists Vehicles (id int, type text, capacity int, city_id int); INSERT INTO Vehicles (id, type, capacity, city_id) VALUES (1, 'Electric Bus', 50, 1), (2, 'Diesel Bus', 60, 1), (3, 'Electric Bus', 40, 2), (4, 'Shared Bicycle', 1, 2); CREATE TABLE if not exists Trips (id int, vehicle_id int, duration int); INSERT INTO Trips (id, vehicle_id, duration) VALUES (1, 1, 120), (2, 1, 180), (3, 2, 210), (4, 3, 150), (5, 4, 100), (6, 4, 130);", "output": "SELECT MAX(duration) FROM Trips JOIN Vehicles ON Trips.vehicle_id = Vehicles.id WHERE Vehicles.type = 'Shared Bicycle' AND Vehicles.city_id = (SELECT id FROM Cities WHERE name = 'New York');"}
{"input": " \uad00\ub78c\uac1d \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \uc804\uc2dc\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE exhibitions (exhibition_id INT PRIMARY KEY, exhibition_name VARCHAR(255), city VARCHAR(255), visitor_count INT);", "output": "DELETE FROM exhibitions WHERE exhibition_id IN (SELECT exhibition_id FROM (SELECT exhibition_id, MIN(visitor_count) as min_visitor_count FROM exhibitions GROUP BY exhibition_id) exhibition_visitor_count WHERE visitor_count = min_visitor_count);"}
{"input": " \uc2dc\uce74\uace0 '\uccad\uc18c\ub144 \uc608\uc220 \uc1fc\ucf00\uc774\uc2a4'\uc5d0 18\uc138 \ubbf8\ub9cc \ucc38\uc11d\uc790 \ube44\uc728\uc740 \uba87 \ud37c\uc13c\ud2b8\uc600\ub098\uc694?", "context": "CREATE TABLE age_distribution (event_name VARCHAR(50), city VARCHAR(50), age_group VARCHAR(10), attendees INT); INSERT INTO age_distribution (event_name, city, age_group, attendees) VALUES ('Youth Arts Showcase', 'Chicago', 'Under 18', 200);", "output": "SELECT (attendees * 100.0 / (SELECT SUM(attendees) FROM age_distribution WHERE event_name = 'Youth Arts Showcase' AND city = 'Chicago')) AS percentage FROM age_distribution WHERE event_name = 'Youth Arts Showcase' AND city = 'Chicago' AND age_group = 'Under 18';"}
{"input": " \uc911\uc559\uc544\uba54\ub9ac\uce74\uc758 \uc5b4\ub5a4 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uac00 \ubaa8\ub4e0 \ud504\ub85c\uc81d\ud2b8\uc758 \uc804\uccb4 \uc644\ub8cc\uc728\ubcf4\ub2e4 \ub192\uc740 \uc644\ub8cc\uc728\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774\ub7ec\ud55c \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc644\ub8cc\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Infrastructure_CA (ProjectID INT, Country VARCHAR(20), Type VARCHAR(20), Completion FLOAT); INSERT INTO Infrastructure_CA (ProjectID, Country, Type, Completion) VALUES (1, 'Guatemala', 'Transportation', 0.8), (2, 'Honduras', 'Energy', 0.7), (3, 'El Salvador', 'Irrigation', 0.6), (4, 'Nicaragua', 'Transportation', 0.9), (5, 'Costa Rica', 'Energy', 0.5), (6, 'Panama', 'Irrigation', 0.7);", "output": "SELECT AVG(Completion) as Avg_Completion_Rate FROM (SELECT Completion FROM Infrastructure_CA WHERE Country IN ('Guatemala', 'Honduras', 'El Salvador', 'Nicaragua', 'Costa Rica', 'Panama') HAVING Completion > (SELECT AVG(Completion) FROM Infrastructure_CA WHERE Country IN ('Guatemala', 'Honduras', 'El Salvador', 'Nicaragua', 'Costa Rica', 'Panama'))) as Subquery;"}
{"input": " \uc62c\ud574 \ud0dc\ud3c9\uc591 \uc81c\ub3c4\uc758 \ubcf4\uc548 \uc0ac\uace0\ub97c \ud574\uacb0\ud558\ub294 \ub370 \ud3c9\uade0 \uba70\uce60\uc774 \uc18c\uc694\ub429\ub2c8\uae4c?", "context": "CREATE TABLE incident_resolution (id INT, resolution_days INT, region VARCHAR(255), resolution_date DATE); INSERT INTO incident_resolution (id, resolution_days, region, resolution_date) VALUES (1, 10, 'Pacific Islands', '2022-02-01'), (2, 12, 'Pacific Islands', '2022-02-02'), (3, 8, 'Pacific Islands', '2022-02-03');", "output": "SELECT AVG(resolution_days) AS avg_resolution_days FROM incident_resolution WHERE region = 'Pacific Islands' AND resolution_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": "\uc74c\ubc18 A'\uc5d0\uc11c\ub294 \uc74c\uc545\uc744 \ubc1c\ub9e4\ud588\uc9c0\ub9cc '\uc74c\ubc18 B'\uc5d0\uc11c\ub294 \ubc1c\ub9e4\ud558\uc9c0 \uc54a\uc740 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Artist (ArtistID INT, ArtistName VARCHAR(255)); CREATE TABLE Label (LabelID INT, LabelName VARCHAR(255)); CREATE TABLE Releases (ReleaseID INT, ArtistID INT, LabelID INT); INSERT INTO Artist VALUES (1, 'Artist A'); INSERT INTO Artist VALUES (2, 'Artist B'); INSERT INTO Label VALUES (1, 'Record Label A'); INSERT INTO Label VALUES (2, 'Record Label B'); INSERT INTO Releases VALUES (1, 1, 1); INSERT INTO Releases VALUES (2, 1, 2); INSERT INTO Releases VALUES (3, 2, 2);", "output": "SELECT ArtistName FROM Artist a JOIN Releases r1 ON a.ArtistID = r1.ArtistID JOIN Label l1 ON r1.LabelID = l1.LabelID LEFT JOIN Releases r2 ON a.ArtistID = r2.ArtistID JOIN Label l2 ON r2.LabelID = l2.LabelID WHERE l1.LabelName = 'Record Label A' AND l2.LabelName IS NULL;"}
{"input": " \ud30c\ub9ac\uc640 \ub7f0\ub358\uc5d0\ub294 \uc790\uc804\uac70 \uacf5\uc720 \uc2a4\ud14c\uc774\uc158\uc774 \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE EuroBikeSharing (id INT, city VARCHAR(20), stations INT);", "output": "SELECT city, SUM(stations) FROM EuroBikeSharing WHERE city IN ('Paris', 'London') GROUP BY city;"}
{"input": " \ud398\ub8e8\uc640 \ud0c4\uc790\ub2c8\uc544\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5b4\ub290 \uae4c\uc694?", "context": "CREATE TABLE weather (country VARCHAR(20), temperature INT); INSERT INTO weather VALUES ('Peru', 20), ('Peru', 21), ('Peru', 19), ('Tanzania', 25), ('Tanzania', 27), ('Tanzania', 23);", "output": "SELECT AVG(temperature) FROM weather WHERE country = 'Peru' UNION SELECT AVG(temperature) FROM weather WHERE country = 'Tanzania'"}
{"input": " \ub192\uc774\ub6f0\uae30\uc5d0\uc11c \uac00\uc7a5 \ub192\uc774 \ub6f0\uc5c8\ub358 \uc120\uc218\uc758 \uc774\ub984\uc744 \ubc18\ud658\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE athletes (athlete_name VARCHAR(255), sport VARCHAR(255)); INSERT INTO athletes (athlete_name, sport) VALUES ('Mutaz Essa Barshim', 'Athletics'); INSERT INTO athletes (athlete_name, sport) VALUES ('Bohdan Bondarenko', 'Athletics'); CREATE TABLE high_jumps (athlete_name VARCHAR(255), height FLOAT); INSERT INTO high_jumps (athlete_name, height) VALUES ('Mutaz Essa Barshim', 2.43); INSERT INTO high_jumps (athlete_name, height) VALUES ('Bohdan Bondarenko', 2.42);", "output": "SELECT athlete_name FROM high_jumps WHERE height = (SELECT MAX(height) FROM high_jumps);"}
{"input": " AI \uc548\uc804 \uc5f0\uad6c \ub17c\ubb38\uc758 \uc5f0\ub3c4\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE AI_Safety_Research (Year INT, Article VARCHAR(100)); INSERT INTO AI_Safety_Research (Year, Article) VALUES (2010, 'Article1'), (2012, 'Article2'), (2014, 'Article3'), (2016, 'Article4'), (2018, 'Article5'), (2020, 'Article6');", "output": "SELECT Year, COUNT(*) OVER (PARTITION BY Year) as ArticlesPerYear FROM AI_Safety_Research ORDER BY Year;"}
{"input": " \uc5b4\ub5a4 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uac00 \ub2e4\ub978 \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\ubcf4\ub2e4 \uc608\uc0b0\uc774 \ub354 \ub192\ub098\uc694?", "context": "CREATE TABLE rural_infrastructure (id INT, name VARCHAR(50), type VARCHAR(50), budget FLOAT); INSERT INTO rural_infrastructure (id, name, type, budget) VALUES (1, 'Solar Irrigation', 'Agricultural Innovation', 150000.00), (2, 'Wind Turbines', 'Rural Infrastructure', 200000.00); CREATE TABLE community_development (id INT, name VARCHAR(50), type VARCHAR(50), budget FLOAT); INSERT INTO community_development (id, name, type, budget) VALUES (1, 'Green Spaces', 'Community Development', 75000.00), (2, 'Smart Street Lighting', 'Community Development', 120000.00), (3, 'Cultural Center', 'Community Development', 100000.00);", "output": "SELECT name, budget FROM rural_infrastructure WHERE budget > (SELECT MAX(budget) FROM community_development);"}
{"input": "\ubcf4\ud5d8 \uc99d\uad8c\uc774 \uc5c6\ub294 \ubcf4\ud5d8\uc5c5\uc790\ub97c \uc81c\uc678\ud558\uace0 \uac01 \ubcf4\ud5d8\uc5c5\uc790\uc758 \ubcf4\ud5d8\uae08\uc5d0 \ub300\ud55c \uccad\uad6c \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE underwriters (id INT, name VARCHAR(100)); CREATE TABLE policies (id INT, underwriter_id INT); CREATE TABLE claims (id INT, policy_id INT); INSERT INTO underwriters (id, name) VALUES (1, 'Gina'), (2, 'Harry'), (3, 'Irene'); INSERT INTO policies (id, underwriter_id) VALUES (1, 1), (2, 1), (3, 2), (4, 3), (5, NULL); INSERT INTO claims (id, policy_id) VALUES (1, 1), (2, 3);", "output": "SELECT underwriters.name, COUNT(claims.id) * 1.0 / COUNT(DISTINCT policies.id) as claims_to_policies_ratio FROM underwriters LEFT JOIN policies ON underwriters.id = policies.underwriter_id LEFT JOIN claims ON policies.id = claims.policy_id GROUP BY underwriters.id HAVING COUNT(DISTINCT policies.id) > 0;"}
{"input": " \uac00\uc871 \uc6cc\ud06c\uc20d\uc5d0 \ucc38\uc11d\ud55c '\uc5b4\ub9b0\uc774' \ubc29\ubb38\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attendees (id INT, event_id INT, age_group VARCHAR(255)); INSERT INTO attendees (id, event_id, age_group) VALUES (1, 101, 'Children'), (2, 101, 'Children'), (3, 101, 'Teenagers'), (4, 102, 'Adults'), (5, 102, 'Adults'), (6, 103, 'Children'); CREATE TABLE events (id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO events (id, name, type) VALUES (101, 'Family Workshop A', 'Workshop'), (102, 'Lecture Series 1', 'Lecture'), (103, 'Family Workshop B', 'Workshop');", "output": "SELECT COUNT(*) FROM attendees WHERE age_group = 'Children' AND event_id IN (SELECT id FROM events WHERE type = 'Workshop');"}
{"input": " \uc9c0\uc18d\uac00\ub2a5\ud55c \uc18c\uc7ac\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \ube0c\ub79c\ub4dc\uc758 \uae30\ub85d\uc740 \ubaa8\ub450 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE brands (brand_id INT, brand_name TEXT, country TEXT); INSERT INTO brands (brand_id, brand_name, country) VALUES (1, 'BrandA', 'USA'), (2, 'BrandB', 'Canada'), (3, 'BrandC', 'USA'); CREATE TABLE material_usage (brand_id INT, material_type TEXT, quantity INT, co2_emissions INT); INSERT INTO material_usage (brand_id, material_type, quantity, co2_emissions) VALUES (1, 'organic_cotton', 1000, 500), (1, 'recycled_polyester', 1500, 2000), (3, 'recycled_polyester', 1800, 2200);", "output": "DELETE FROM brands WHERE brand_id NOT IN (SELECT brand_id FROM material_usage);"}
{"input": " \ub300\ub959\ubcc4 \uac1c\ubc29\ud615 \uad50\uc721\ud559 \ud559\uad50\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE open_pedagogy_schools (id INT, school_name VARCHAR(50), continent VARCHAR(50)); INSERT INTO open_pedagogy_schools (id, school_name, continent) VALUES (1, 'Innovate School', 'North America'), (2, 'Open Learning School', 'Europe');", "output": "SELECT continent, COUNT(*) FROM open_pedagogy_schools GROUP BY continent;"}
{"input": " 2021\ub144 \uc2dc\uce74\uace0\uc5d0\uc11c \uac01 \uad50\ud1b5 \uc704\ubc18 \uc720\ud615\uc5d0 \ub300\ud574 \ubd80\uacfc\ub418\ub294 \ud3c9\uade0 \ubc8c\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE violations_3 (violation_type VARCHAR(255), fine INT); INSERT INTO violations_3 (violation_type, fine) VALUES ('Speeding', 100); INSERT INTO violations_3 (violation_type, fine) VALUES ('Reckless Driving', 200);", "output": "SELECT violation_type, AVG(fine) OVER (PARTITION BY violation_type) as avg_fine FROM violations_3 WHERE YEAR(violation_date) = 2021"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc778\ub3c4\uc640 \uc778\ub3c4\ub124\uc2dc\uc544\uc758 \uac01 \uac00\uc0c1 \ud22c\uc5b4\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE virtual_tours(id INT, name TEXT, country TEXT); CREATE TABLE revenue(virtual_tour_id INT, date DATE, revenue INT); INSERT INTO virtual_tours(id, name, country) VALUES (1, 'Tour A', 'India'), (2, 'Tour B', 'Indonesia'), (3, 'Tour C', 'Malaysia'); INSERT INTO revenue(virtual_tour_id, date, revenue) VALUES (1, '2022-01-01', 1000), (1, '2022-02-01', 1200), (1, '2022-03-01', 1500), (2, '2022-01-01', 800), (2, '2022-02-01', 900), (2, '2022-03-01', 1000), (3, '2022-01-01', 1100), (3, '2022-02-01', 1300), (3, '2022-03-01', 1400);", "output": "SELECT virtual_tour_id, SUM(revenue) OVER (PARTITION BY virtual_tour_id ORDER BY date DESC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) FROM revenue WHERE country IN ('India', 'Indonesia');"}
{"input": " 2021\ub144 9\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc77c\ub9ac\ub178\uc774\uc8fc\uc5d0 \uc704\uce58\ud55c \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \ud310\ub9e4\ub418\uc9c0 \uc54a\uc740 \uba54\ub274 \ud56d\ubaa9\uc744 \uc81c\uc678\ud55c \uac01 \uba54\ub274 \ud56d\ubaa9\uc758 \ucd1d \uc218\uc775\uacfc \ud310\ub9e4 \uc218\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (RestaurantID int, Name varchar(50), Location varchar(50)); CREATE TABLE Menu (MenuID int, ItemName varchar(50), Category varchar(50)); CREATE TABLE MenuSales (MenuID int, RestaurantID int, QuantitySold int, Revenue decimal(5,2), SaleDate date);", "output": "SELECT M.ItemName, SUM(M.Revenue) as Revenue, SUM(M.QuantitySold) as QuantitySold FROM Menu M JOIN MenuSales MS ON M.MenuID = MS.MenuID JOIN Restaurants R ON MS.RestaurantID = R.RestaurantID WHERE R.Location LIKE '%Illinois%' AND MS.SaleDate >= '2021-09-01' AND MS.SaleDate <= '2021-09-30' GROUP BY M.ItemName HAVING SUM(MS.QuantitySold) > 0;"}
{"input": " 2020\ub144\uc5d0\uc11c 2021\ub144 \uc0ac\uc774\uc5d0 \uac01 \ubaa9\uc801\uc9c0\uc758 \ubc29\ubb38\uc790 \uc218 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE visit_summary (destination_code CHAR(5), year INT, visitor_count INT); INSERT INTO visit_summary VALUES ('PARIS', 2020, 600), ('PARIS', 2021, 700), ('LOND', 2020, 550), ('LOND', 2021, 650);", "output": "SELECT destination_code, ((visitor_count_2021 - visitor_count_2020) * 100.0 / NULLIF(visitor_count_2020, 0)) AS percentage_change FROM (SELECT destination_code, SUM(CASE WHEN year = 2021 THEN visitor_count ELSE 0 END) AS visitor_count_2021, SUM(CASE WHEN year = 2020 THEN visitor_count ELSE 0 END) AS visitor_count_2020 FROM visit_summary GROUP BY destination_code);"}
{"input": " \uac01 \uc2dc\uc2a4\ud15c\uc758 \uc2ec\uac01\ub3c4\uac00 \ub192\uc740 \ucde8\uc57d\uc810\uc758 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities(id INT, system VARCHAR(20), severity VARCHAR(10), date DATE); INSERT INTO vulnerabilities VALUES (1, 'web server', 'high', '2021-01-01'); INSERT INTO vulnerabilities VALUES (2, 'database', 'low', '2021-01-02');", "output": "SELECT system, severity, COUNT(*) FROM vulnerabilities WHERE severity = 'high' GROUP BY system;"}
{"input": " 2022\ub144 '1\uc6d4'\uc5d0 'LA' \ucc3d\uace0\uc5d0\uc11c '\uce90\ub098\ub2e4'\ub85c \ubc30\uc1a1\ub41c \ucd1d \ud328\ud0a4\uc9c0 \uc218\ub97c \uc6b4\uc1a1\uc5c5\uccb4 \uc774\ub984\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(50), city VARCHAR(50));CREATE TABLE carrier (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE shipment (id INT PRIMARY KEY, warehouse_id INT, carrier_id INT, package_count INT, shipped_date DATE);", "output": "SELECT carrier.name, SUM(shipment.package_count) FROM shipment JOIN carrier ON shipment.carrier_id = carrier.id JOIN warehouse ON shipment.warehouse_id = warehouse.id WHERE warehouse.city = 'LA' AND shipped_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY carrier.name;"}
{"input": " \ub300\uc11c\uc591 \ud574\uc800\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_floor (ocean TEXT, depth INT); INSERT INTO ocean_floor (ocean, depth) VALUES ('Atlantic', 8000), ('Pacific', 10000);", "output": "SELECT MAX(depth) FROM ocean_floor WHERE ocean = 'Atlantic' UNION SELECT MIN(depth) FROM ocean_floor WHERE ocean = 'Atlantic';"}
{"input": "\ubbf8\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c \uacc4\uc88c \uc794\uace0\uac00 \ub192\uc740 \uace0\uac1d\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE customers (id INT, name VARCHAR(50), region VARCHAR(50), account_balance DECIMAL(10,2)); INSERT INTO customers (id, name, region, account_balance) VALUES (1, 'John Doe', 'New York', 50000.00); INSERT INTO customers (id, name, region, account_balance) VALUES (2, 'Jane Smith', 'California', 60000.00); INSERT INTO customers (id, name, region, account_balance) VALUES (3, 'Bob Johnson', 'APAC', 30000.00); INSERT INTO customers (id, name, region, account_balance) VALUES (4, 'Alice Williams', 'APAC', 40000.00);", "output": "SELECT * FROM customers WHERE region = 'Americas' AND account_balance > 40000.00;"}
{"input": " 2010\ub144\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, country VARCHAR(255), launch_date DATE);", "output": "SELECT country, COUNT(*) AS launched_satellites FROM satellites WHERE EXTRACT(YEAR FROM launch_date) = 2010 GROUP BY country ORDER BY launched_satellites DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c \ub2ec \ud2b9\uc815 \uacc4\ud1b5 '\ube14\ub8e8 \ub4dc\ub9bc'\uc774 100\uac1c \uc774\uc0c1 \ud310\ub9e4\ub41c \uc57d\uad6d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Dispensaries (DispensaryID INT, DispensaryName VARCHAR(50)); CREATE TABLE Strains (StrainID INT, StrainName VARCHAR(50)); CREATE TABLE Sales (SaleID INT, DispensaryID INT, StrainID INT, QuantitySold INT, SaleDate DATE);", "output": "SELECT D.DispensaryID, D.DispensaryName FROM Dispensaries D JOIN Sales S ON D.DispensaryID = S.DispensaryID JOIN Strains ST ON S.StrainID = ST.StrainID WHERE StrainName = 'Blue Dream' AND S.SaleDate >= DATEADD(month, -1, GETDATE()) GROUP BY D.DispensaryID, D.DispensaryName HAVING SUM(QuantitySold) > 100;"}
{"input": " \ud540\ud14c\ud06c \ubd84\uc57c\uc5d0\uc11c \uc7a5\uc560\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5 \uc911 \uc790\uae08 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uc801\uc774 \uc5c6\ub294 \uc2a4\ud0c0\ud2b8\uc5c5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unfunded_startups(id INT, name TEXT, industry TEXT);", "output": "SELECT name FROM unfunded_startups JOIN startups ON unfunded_startups.id = startups.id JOIN founders ON startups.id = founders.startup_id WHERE industry = 'FinTech' AND founders.founder_identity = 'Individual with Disability' AND startups.id NOT IN (SELECT startup_id FROM investment_rounds);"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud55c '\uc720\uae30\ub18d \uba74' \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers(supplier_id INT, supplier_name TEXT, state TEXT); INSERT INTO suppliers(supplier_id, supplier_name, state) VALUES (1, 'Eco-Friendly Fabrics', 'California'); CREATE TABLE products(product_id INT, product_name TEXT, supplier_id INT); INSERT INTO products(product_id, product_name, supplier_id) VALUES (1, 'Organic Cotton T-Shirt', 1); CREATE TABLE sales(sale_id INT, product_id INT, quantity INT); INSERT INTO sales(sale_id, product_id, quantity) VALUES (1, 1, 50);", "output": "SELECT SUM(sales.quantity) FROM sales JOIN products ON sales.product_id = products.product_id JOIN suppliers ON products.supplier_id = suppliers.supplier_id WHERE suppliers.state = 'California' AND products.product_name LIKE '%organic cotton%';"}
{"input": "\uac01 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucc44\uc2dd \uc694\ub9ac\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Orders (OrderID INT, OrderDate DATE, DishID INT, Quantity INT); CREATE TABLE Dishes (DishID INT, DishName VARCHAR(50), Category VARCHAR(50), Price DECIMAL(5,2), IsVegetarian INT); INSERT INTO Dishes (DishID, DishName, Category, Price, IsVegetarian) VALUES (1, 'Veggie Pizza', 'Pizza', 12.99, 1), (2, 'Margherita Pizza', 'Pizza', 10.99, 1), (3, 'Chicken Caesar Salad', 'Salad', 15.49, 0), (4, 'Garden Salad', 'Salad', 11.99, 1); INSERT INTO Orders (OrderID, OrderDate, DishID, Quantity) VALUES (1, '2022-01-01', 1, 2), (2, '2022-01-02', 2, 1), (3, '2022-01-03', 3, 3), (4, '2022-01-04', 1, 1), (5, '2022-02-05', 4, 2);", "output": "SELECT Category, AVG(Price) as AvgPrice FROM Dishes WHERE IsVegetarian = 1 GROUP BY Category;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \ud558\ub098 \uc774\uc0c1 \uc774\uc218\ud55c \uad50\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teachers (teacher_id INT, age INT, num_courses_completed INT); INSERT INTO teachers (teacher_id, age, num_courses_completed) VALUES (1, 35, 2), (2, 45, 0), (3, 30, 1), (4, 50, 3);", "output": "SELECT AVG(age) FROM teachers WHERE num_courses_completed >= (SELECT COUNT(course_id) FROM courses WHERE completion_date > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR));"}
{"input": " \ub9e4\ub9bd \uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc9c0\uc5ed\uc758 \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c\uc640 \uac01\uac01\uc758 \uc6a9\ub7c9\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE LandfillCapacity (Region TEXT, Capacity INTEGER); INSERT INTO LandfillCapacity (Region, Capacity) VALUES ('NorthEast', 5000), ('SouthEast', 7000), ('MidWest', 6000), ('SouthWest', 4000), ('NorthWest', 8000), ('Europe', 9000), ('Asia', 10000); CREATE TABLE CircularEconomyInitiatives (Region TEXT, Initiative TEXT); INSERT INTO CircularEconomyInitiatives (Region, Initiative) VALUES ('NorthEast', 'Composting Program'), ('MidWest', 'Reuse and Recycling Program'), ('Asia', 'Zero Waste Initiative');", "output": "SELECT Region, Initiative, Capacity FROM (SELECT Region, Initiative, Capacity, ROW_NUMBER() OVER (ORDER BY Capacity ASC) as rn FROM CircularEconomyInitiatives ce INNER JOIN LandfillCapacity lc ON ce.Region = lc.Region) t WHERE t.rn <= 3;"}
{"input": " \uc9c1\uc704\ubcc4\ub85c \uc544\uc2dc\uc544\uacc4 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityHealthWorkers (CHW_ID INT, Name VARCHAR(50), Job_Title VARCHAR(50), Ethnicity VARCHAR(50)); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, Job_Title, Ethnicity) VALUES (1, 'Leung', 'Community Health Worker', 'Asian'); INSERT INTO CommunityHealthWorkers (CHW_ID, Name, Job_Title, Ethnicity) VALUES (2, 'Kim', 'Senior Community Health Worker', 'Asian');", "output": "SELECT Job_Title, COUNT(*) FROM CommunityHealthWorkers WHERE Ethnicity = 'Asian' GROUP BY Job_Title;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uac00 10% \uc774\uc0c1 \ud5a5\uc0c1\ub41c \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health_history (student_id INT, score INT, date DATE); INSERT INTO student_mental_health_history VALUES (1, 60, '2022-01-01'), (1, 70, '2022-07-01'), (2, 80, '2022-01-01'), (2, 70, '2022-07-01');", "output": "SELECT COUNT(*) FROM (SELECT student_id, (score - LAG(score) OVER(PARTITION BY student_id ORDER BY date)) / LAG(score) OVER(PARTITION BY student_id ORDER BY date) as improvement_percentage FROM student_mental_health_history WHERE date >= DATEADD(month, -6, GETDATE())) t WHERE improvement_percentage > 0.1;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4\uac04 \uc218\ud589\ub41c \uad70\uc7a5\ube44 \uc720\uc9c0\ubcf4\uc218 \ud65c\ub3d9\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE equipment_maintenance (equipment_id INT, maintenance_date DATE, vendor_name VARCHAR(100), maintenance_type VARCHAR(50)); INSERT INTO equipment_maintenance (equipment_id, maintenance_date, vendor_name, maintenance_type) VALUES (1001, '2019-12-05', 'DEF Contractors', 'Preventive'); INSERT INTO equipment_maintenance (equipment_id, maintenance_date, vendor_name, maintenance_type) VALUES (1002, '2020-03-20', 'GHI Services', 'Corrective');", "output": "SELECT * FROM equipment_maintenance WHERE maintenance_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"input": " \ud558\ub8e8\uc5d0 \ucd2c\uc601\ub418\ub294 \uc704\uc131\uc0ac\uc9c4 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE satellite_images (image_id INT, image_url TEXT, capture_time TIMESTAMP); INSERT INTO satellite_images (image_id, image_url, capture_time) VALUES (1, 'image1.jpg', '2022-01-01 10:00:00'), (2, 'image2.jpg', '2021-05-01 10:00:00');", "output": "SELECT TRUNC(capture_time, 'DD') capture_day, COUNT(*) OVER (PARTITION BY TRUNC(capture_time, 'DD')) FROM satellite_images;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \ucc44\uc2dd \uba54\ub274 \ud56d\ubaa9\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE menu_engineering (menu_item_id INT, vegetarian BOOLEAN, restaurant_id INT);", "output": "SELECT restaurant_id, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM menu_engineering WHERE restaurant_id = restaurants.id) as percentage FROM menu_engineering JOIN restaurants ON menu_engineering.restaurant_id = restaurants.id WHERE vegetarian = TRUE GROUP BY restaurant_id;"}
{"input": " \uc57c\uc0dd\ub3d9\ubb3c \ubcf4\ud638\uad6c\uc5ed\uc774 \uc788\ub294 \uad6d\uac00\uc5d0 \ub300\ud574 \ubaa9\uc7ac \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uacfc \uad6d\uac00\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc57c\uc0dd\ub3d9\ubb3c \uc885\uc758 \uc218\ub97c \ucd1d \uc218\uc775\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE country (country_id INT, country_name TEXT, PRIMARY KEY (country_id)); CREATE TABLE sale (sale_id INT, country_id INT, year INT, revenue INT, PRIMARY KEY (sale_id), FOREIGN KEY (country_id) REFERENCES country(country_id)); CREATE TABLE wildlife (wildlife_id INT, country_id INT, species_count INT, PRIMARY KEY (wildlife_id), FOREIGN KEY (country_id) REFERENCES country(country_id));", "output": "SELECT c.country_name, SUM(s.revenue) AS total_revenue, COUNT(w.species_count) AS total_wildlife_species FROM country c INNER JOIN sale s ON c.country_id = s.country_id INNER JOIN wildlife w ON c.country_id = w.country_id GROUP BY c.country_name HAVING COUNT(w.species_count) > 0 ORDER BY total_revenue DESC;"}
{"input": " \uc6d4\ubcc4\ub85c \ub098\ub204\uc5b4 \uc2f1\uac00\ud3ec\ub974 \ud56d\uad6c\uc5d0 \ub3c4\ucc29\ud558\ub294 \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VesselArrivals (ID INT, VesselName VARCHAR(50), ArrivalPort VARCHAR(50), ArrivalDate DATE, AverageSpeed DECIMAL(5,2)); INSERT INTO VesselArrivals (ID, VesselName, ArrivalPort, ArrivalDate, AverageSpeed) VALUES (1, 'Test Vessel 1', 'Singapore', '2022-01-01', 15.5), (2, 'Test Vessel 2', 'Singapore', '2022-01-02', 20.3), (3, 'Test Vessel 3', 'Singapore', '2022-02-03', 18.5);", "output": "SELECT AVG(AverageSpeed) OVER (PARTITION BY DATEPART(month, ArrivalDate)) FROM VesselArrivals WHERE ArrivalPort = 'Singapore';"}
{"input": " \uc7a5\uc560\uc778\uc73c\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0\uc758 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ubd80\uc11c\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE EmployeeDemographics (EmployeeID INT, Department VARCHAR(20), Disability VARCHAR(50)); INSERT INTO EmployeeDemographics (EmployeeID, Department, Disability) VALUES (1, 'IT', 'Yes'), (2, 'IT', 'No'), (3, 'HR', 'Yes'), (4, 'HR', 'No'), (5, 'Finance', 'Yes');", "output": "SELECT Department, PERCENT_RANK() OVER (ORDER BY COUNT(*) FILTER (WHERE Disability = 'Yes')) AS Percent_Disabled FROM EmployeeDemographics GROUP BY Department ORDER BY Percent_Disabled DESC LIMIT 3;"}
{"input": "Waymo\uc640 Tesla\uac00 \ucd9c\uc6d0\ud55c \uc790\uc728\uc8fc\ud589 \ud2b9\ud5c8\ub294 \ucd1d \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE Patents (Id INT, Company VARCHAR(255), Patent VARCHAR(255), Date DATE); INSERT INTO Patents (Id, Company, Patent, Date) VALUES (1, 'Waymo', 'Autonomous Vehicle Navigation', '2018-01-01'), (2, 'Tesla', 'Self-Driving AI System', '2019-01-01'), (3, 'Waymo', 'Automated Braking System', '2017-01-01'), (4, 'Tesla', 'Smart Summon Technology', '2020-01-01');", "output": "SELECT COUNT(*) FROM Patents WHERE Company IN ('Waymo', 'Tesla') AND Patent LIKE '%Autonomous%'"}
{"input": " \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ube0c\ub79c\ub4dc\uac00 \uc0ac\uc6a9\ud558\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ucd1d\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE brands (brand_id INT, name VARCHAR(255), region VARCHAR(255)); INSERT INTO brands (brand_id, name, region) VALUES (1, 'GreenBrand', 'Asia-Pacific'), (2, 'EcoFashion', 'Europe'); CREATE TABLE materials (material_id INT, name VARCHAR(255), is_sustainable BOOLEAN); INSERT INTO materials (material_id, name, is_sustainable) VALUES (1, 'Organic Silk', TRUE), (2, 'Conventional Cotton', FALSE); CREATE TABLE brand_materials (brand_id INT, material_id INT, quantity INT); INSERT INTO brand_materials (brand_id, material_id, quantity) VALUES (1, 1, 1000), (1, 2, 2000), (2, 1, 1500);", "output": "SELECT SUM(bm.quantity) FROM brand_materials bm JOIN brands b ON bm.brand_id = b.brand_id JOIN materials m ON bm.material_id = m.material_id WHERE b.region = 'Asia-Pacific' AND m.is_sustainable = TRUE;"}
{"input": " \uc544\uc2dc\uc544\uc640 \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0 \ubaa8\ub450 \uc874\uc7ac\ud558\ub294 \ub3d9\ubb3c\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE if NOT EXISTS animal_region (animal_id INT, animal_name VARCHAR(50), region VARCHAR(10)); INSERT INTO animal_region (animal_id, animal_name, region) VALUES (1, 'Tiger', 'Asia'); INSERT INTO animal_region (animal_id, animal_name, region) VALUES (2, 'Lion', 'Africa'); INSERT INTO animal_region (animal_id, animal_name, region) VALUES (3, 'Giraffe', 'Africa'); INSERT INTO animal_region (animal_id, animal_name, region) VALUES (4, 'Elephant', 'Asia'); INSERT INTO animal_region (animal_id, animal_name, region) VALUES (5, 'Elephant', 'Africa');", "output": "SELECT animal_name FROM animal_region WHERE region = 'Asia' INTERSECT SELECT animal_name FROM animal_region WHERE region = 'Africa';"}
{"input": " \uc120\ubc15\ub2f9 \uac80\uc0ac \uac04 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vessels (id INT, name VARCHAR(255), imo INT); CREATE TABLE inspections (id INT, vessel_id INT, inspection_date DATE);", "output": "SELECT v.name, AVG(DATEDIFF(i2.inspection_date, i.inspection_date)) as avg_time_between_inspections FROM inspections i JOIN inspections i2 ON i.vessel_id = i2.vessel_id AND i.id < i2.id JOIN vessels v ON i.vessel_id = v.id GROUP BY v.name;"}
{"input": " \uae30\ud6c4 \ubcc0\ud654 \uc644\ud654\uc5d0 \ub300\ud55c \ubbf8\uad6d \ud22c\uc790\uc790\ub97c \uc704\ud55c \uc0c8\ub85c\uc6b4 \uc784\ud329\ud2b8 \ud22c\uc790\ub97c \uc784\ud329\ud2b8 \uc810\uc218 80\uc810\uc73c\ub85c \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE investor (investor_id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO investor (investor_id, name, country) VALUES (1, 'Acme Corp', 'United States'); CREATE TABLE investment (investment_id INT, investor_id INT, strategy VARCHAR(255), impact_score FLOAT);", "output": "INSERT INTO investment (investment_id, investor_id, strategy, impact_score) VALUES (101, (SELECT investor_id FROM investor WHERE name = 'Acme Corp' AND country = 'United States'), 'Climate Change Mitigation', 80);"}
{"input": " \uad6d\uac00\ubcc4 \uad11\uc0b0\uc5c5\uc5d0 \uc885\uc0ac\ud558\ub294 \uc5ec\uc131 \uadfc\ub85c\uc790\uc758 \ube44\uc728\uc740 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uba87 %\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_workforce (employee_id INT, country TEXT, gender TEXT); INSERT INTO mining_workforce (employee_id, country, gender) VALUES (1, 'Canada', 'Male'), (2, 'Canada', 'Female'), (3, 'Mexico', 'Male'), (4, 'Mexico', 'Male'), (5, 'Brazil', 'Female'), (6, 'Brazil', 'Male'), (7, 'USA', 'Female'), (8, 'USA', 'Male'), (9, 'Peru', 'Male'), (10, 'Peru', 'Female');", "output": "SELECT country, PERCENTAGE_RANK() OVER (ORDER BY COUNT(CASE WHEN gender = 'Female' THEN 1 END) DESC) AS female_percentage_rank FROM mining_workforce GROUP BY country ORDER BY female_percentage_rank DESC;"}
{"input": " 'green_buildings' \uc2a4\ud0a4\ub9c8\uc758 \ub3c4\uc2dc \ubc0f \uac74\ubb3c \uc720\ud615\ubcc4 \ub179\uc0c9 \uac74\ubb3c\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings.buildings (city VARCHAR(255), building_type VARCHAR(255), building_count INT); INSERT INTO green_buildings.buildings (city, building_type, building_count) VALUES ('CityA', 'Residential', 50), ('CityA', 'Commercial', 30), ('CityB', 'Residential', 60), ('CityB', 'Commercial', 40);", "output": "SELECT city, building_type, SUM(building_count) FROM green_buildings.buildings GROUP BY city, building_type;"}
{"input": " 2020\ub144 \uae30\ubd80\uc790 \uc720\ud615\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_type TEXT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donors VALUES (1, 'Individual', 50.00, '2020-01-01'); INSERT INTO donors VALUES (2, 'Corporation', 5000.00, '2020-02-01');", "output": "SELECT donor_type, SUM(donation_amount) as total_donation FROM donors WHERE YEAR(donation_date) = 2020 GROUP BY donor_type;"}
{"input": " \uc8fc\ubcc4 \uba64\ubc84\uc2ed\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE memberships (id INT, state VARCHAR(50), member_type VARCHAR(50), revenue DECIMAL(10,2)); INSERT INTO memberships (id, state, member_type, revenue) VALUES (1, 'California', 'Basic', 500.00), (2, 'Texas', 'Premium', 800.00);", "output": "SELECT state, SUM(revenue) AS total_revenue FROM memberships GROUP BY state;"}
{"input": " \uc774\uc804 \ubd84\uae30\uc5d0 \ube44\ud574 \ub178\ub3d9 \uc2dc\uac04\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE project (project_id INT, quarter VARCHAR(10), region VARCHAR(20), labor_hours INT); INSERT INTO project VALUES (1, 'Q1', 'Northeast', 500); INSERT INTO project VALUES (2, 'Q2', 'Northeast', 800);", "output": "SELECT a.project_id, a.region, a.labor_hours, b.labor_hours as prev_quarter_labor_hours, (a.labor_hours - b.labor_hours) as labor_hours_diff FROM project a JOIN project b ON a.project_id = b.project_id AND b.quarter = LEAD(a.quarter) OVER (PARTITION BY a.project_id ORDER BY a.quarter) WHERE a.region = 'Northeast';"}
{"input": " \uac01 \uad6d\uac00 \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (employee_id INT, name VARCHAR(255), country VARCHAR(255), salary DECIMAL(5,2)); INSERT INTO employees (employee_id, name, country, salary) VALUES (1, 'John Doe', 'USA', 50000.00), (2, 'Jane Smith', 'Canada', 45000.00), (3, 'Maria Garcia', 'Mexico', 20000.00);", "output": "SELECT country, AVG(salary) as avg_salary FROM employees GROUP BY country;"}
{"input": " 2020\ub144 \ub178\ub3d9\uc870\ud569 \uc885\ub958\ubcc4, \uc9c0\uc5ed\ubcc4 \uc804\uccb4 \uadfc\ub85c\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Unions (UnionID INT, UnionName VARCHAR(50), Category VARCHAR(50)); CREATE TABLE Regions (RegionID INT, RegionName VARCHAR(50)); CREATE TABLE WorkersData (WorkerID INT, UnionID INT, RegionID INT, Date DATE);", "output": "SELECT c.Category, r.RegionName, SUM(1) AS Workers FROM WorkersData w JOIN Unions u ON w.UnionID = u.UnionID JOIN Regions r ON w.RegionID = r.RegionID WHERE YEAR(w.Date) = 2020 GROUP BY c.Category, r.RegionName;"}
{"input": " \uae30\ud6c4 \ubcc0\ud654 \uad00\ub828 \ud504\ub85c\uc81d\ud2b8 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name TEXT, region TEXT); INSERT INTO countries (id, name, region) VALUES (1, 'Canada', 'North America'); INSERT INTO countries (id, name, region) VALUES (2, 'Norway', 'Europe'); INSERT INTO countries (id, name, region) VALUES (3, 'Sweden', 'Europe'); CREATE TABLE climate_change_projects (id INT, title TEXT, year INT, country_id INT); INSERT INTO climate_change_projects (id, title, year, country_id) VALUES (1, 'Climate change mitigation strategies', 2015, 1); INSERT INTO climate_change_projects (id, title, year, country_id) VALUES (2, 'Impacts of climate change on Arctic ecosystems', 2017, 2); INSERT INTO climate_change_projects (id, title, year, country_id) VALUES (3, 'Climate change and indigenous knowledge', 2018, 3); INSERT INTO climate_change_projects (id, title, year, country_id) VALUES (4, 'Arctic climate change observatory network', 2019, 1);", "output": "SELECT country_id, name, RANK() OVER (PARTITION BY name ORDER BY COUNT(*) DESC) as rank FROM climate_change_projects GROUP BY country_id, name HAVING rank <= 2;"}
{"input": " \uc9c0\ub09c 60\uc77c \ub3d9\uc548 \ud65c\ub3d9\ud55c \uc704\ud611 \ud589\uc704\uc790\ub97c \ucd5c\uc2e0 \ud65c\ub3d9 \uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ThreatActors (id INT, actor_name VARCHAR(255), last_seen DATE); INSERT INTO ThreatActors (id, actor_name, last_seen) VALUES (1, 'APT29', '2022-03-10'), (2, 'Lazarus Group', '2022-03-05'), (3, 'Cozy Bear', '2022-03-01'), (4, 'Fancy Bear', '2022-02-25'), (5, 'WannaCry', '2022-02-20'), (6, 'Carbanak', '2022-01-10'), (7, 'OceanLotus', '2022-01-05'), (8, 'Gamaredon', '2021-12-28');", "output": "SELECT actor_name, last_seen, ROW_NUMBER() OVER (ORDER BY last_seen DESC) AS rank FROM ThreatActors WHERE last_seen >= DATEADD(day, -60, GETDATE());"}
{"input": " \ub300\uc11c\uc591, \ud0dc\ud3c9\uc591, \uc778\ub3c4\uc591\uc758 \uac00\uc7a5 \uae4a\uc740 \ubd80\ubd84\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE deepest_parts (ocean TEXT, depth FLOAT); INSERT INTO deepest_parts (ocean, depth) VALUES ('Atlantic', 8605.0), ('Pacific', 10924.0), ('Indian', 8648.0), ('Arctic', 5387.0);", "output": "SELECT AVG(depth) FROM deepest_parts WHERE ocean IN ('Atlantic', 'Pacific', 'Indian');"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \ud799\ud569 \ucf58\uc11c\ud2b8\ub85c \uac00\uc7a5 \ub9ce\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Concerts (location VARCHAR(50), concert_genre VARCHAR(20), year INT, revenue FLOAT); INSERT INTO Concerts (location, concert_genre, year, revenue) VALUES ('New York', 'Hip-Hop', 2020, 45000.00), ('Atlanta', 'Hip-Hop', 2020, 55000.00), ('Los Angeles', 'Hip-Hop', 2021, 65000.00);", "output": "SELECT location, MAX(revenue) FROM Concerts WHERE concert_genre = 'Hip-Hop' AND year BETWEEN (SELECT MAX(year) - 2 FROM Concerts) AND MAX(year) GROUP BY location;"}
{"input": " \ub9d0\ub808\uc774\uc2dc\uc544\uc5d0\uc11c \ud3c9\uade0 \ub300\ucd9c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc774\uc2ac\ub78c \uc740\ud589\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE islamic_banks (id INT, bank_name VARCHAR(50), country VARCHAR(50), avg_loan_amount FLOAT); INSERT INTO islamic_banks (id, bank_name, country, avg_loan_amount) VALUES (1, 'Bank Islam Malaysia', 'Malaysia', 25000.00), (2, 'Maybank Islamic', 'Malaysia', 30000.00);", "output": "SELECT country, bank_name, avg_loan_amount, RANK() OVER (ORDER BY avg_loan_amount DESC) as rank FROM islamic_banks WHERE country = 'Malaysia';"}
{"input": " \ud0dc\ud3c9\uc591\uacfc \ub300\uc11c\uc591\uc5d0\uc11c \ubc1c\uacac\ub418\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE pacific_species (id INT, species VARCHAR(255)); INSERT INTO pacific_species VALUES (1, 'Shark'); INSERT INTO pacific_species VALUES (2, 'Dolphin'); CREATE TABLE atlantic_species (id INT, species VARCHAR(255)); INSERT INTO atlantic_species VALUES (1, 'Tuna'); INSERT INTO atlantic_species VALUES (2, 'Whale');", "output": "SELECT COUNT(*) FROM ( (SELECT species FROM pacific_species) UNION (SELECT species FROM atlantic_species) ) AS all_species;"}
{"input": " \uce90\ub098\ub2e4 \uc815\uce58 \ucea0\ud398\uc778\uc5d0 \uae30\ubd80\ud558\ub294 \uc0c1\uc704 5\uc778\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(100), donation INT, campaign VARCHAR(50)); INSERT INTO donors (id, name, donation, campaign) VALUES (1, 'Donor 1', 5000, 'Campaign 1'); INSERT INTO donors (id, name, donation, campaign) VALUES (2, 'Donor 2', 7000, 'Campaign 2'); INSERT INTO donors (id, name, donation, campaign) VALUES (3, 'Donor 3', 3000, 'Campaign 1'); INSERT INTO donors (id, name, donation, campaign) VALUES (4, 'Donor 4', 6000, 'Campaign 3'); INSERT INTO donors (id, name, donation, campaign) VALUES (5, 'Donor 5', 8000, 'Campaign 2');", "output": "SELECT name FROM (SELECT name, ROW_NUMBER() OVER (ORDER BY donation DESC) as row_num FROM donors) donors_ranked WHERE row_num <= 5;"}
{"input": " 2020\ub144 \ud3c9\uade0 \uc2a4\ud2b8\ub9ac\ubc0d \uc218\ubcf4\ub2e4 \ub9ce\uc740 \uc2a4\ud2b8\ub9ac\ubc0d\uc744 \uae30\ub85d\ud55c \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Streams (artist_name VARCHAR(50), year INT, streams INT); INSERT INTO Streams (artist_name, year, streams) VALUES ('Taylor Swift', 2020, 12000000), ('Drake', 2020, 15000000), ('BTS', 2020, 20000000), ('Billie Eilish', 2020, 11000000);", "output": "SELECT artist_name FROM Streams WHERE year = 2020 AND streams > (SELECT AVG(streams) FROM Streams WHERE year = 2020);"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed \uad6d\uac00\ubcc4 \ud3c9\uade0 \uad70\uc0ac\ube44 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_spending (country VARCHAR(50), region VARCHAR(50), spending NUMERIC(10,2)); INSERT INTO military_spending (country, region, spending) VALUES ('USA', 'North America', 7319340000), ('Canada', 'North America', 22597000000), ('Mexico', 'North America', 640000000);", "output": "SELECT AVG(spending) FROM military_spending WHERE region = 'North America';"}
{"input": " 'VirtualRealityGames' \uc7a5\ub974\uc5d0\uc11c \ud50c\ub808\uc774\uc5b4\ub2f9 \ud3c9\uade0 \uac8c\uc784 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(255), Genre VARCHAR(255));CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(255), GameID INT, Spend DECIMAL(10,2));", "output": "SELECT g.Genre, c.Country, AVG(p.Spend) as AvgSpend FROM Games g JOIN Players p ON g.GameID = p.GameID JOIN (SELECT PlayerID, Country FROM PlayerProfile GROUP BY PlayerID) c ON p.PlayerID = c.PlayerID WHERE g.Genre = 'VirtualRealityGames' GROUP BY g.Genre, c.Country ORDER BY AvgSpend DESC LIMIT 3;"}
{"input": " 2020\ub144 3\ubd84\uae30 \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4\uc561 \uce21\uba74\uc5d0\uc11c \ub2e4\ub978 \uad6d\uac00\uc640 \ube44\uad50\ud558\uc5ec \ubbf8\uad6d\uc758 \uc21c\uc704\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_sales(id INT, country VARCHAR, sale_date DATE, equipment VARCHAR, value FLOAT); INSERT INTO military_sales(id, country, sale_date, equipment, value) VALUES (1, 'US', '2020-07-01', 'Tanks', 20000000.00), (2, 'US', '2020-08-15', 'Aircraft', 60000000.00), (3, 'Canada', '2020-09-01', 'Missiles', 10000000.00), (4, 'Mexico', '2020-07-15', 'Tanks', 5000000.00), (5, 'Brazil', '2020-08-01', 'Aircraft', 30000000.00);", "output": "SELECT country, SUM(value) AS total_value, RANK() OVER (ORDER BY SUM(value) DESC) AS rank FROM military_sales WHERE sale_date >= '2020-07-01' AND sale_date < '2020-10-01' GROUP BY country;"}
{"input": " \uaddc\uc81c\uac00 \uc801\uc6a9\ub418\ub294 \uc0ac\uc6a9\uc790 \uc774\ub984\uacfc \uadf8\ub4e4\uc774 \uc18c\uc720\ud55c \uc790\uc0b0\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_assets (user_id INT, asset_name VARCHAR(255)); INSERT INTO user_assets (user_id, asset_name) VALUES (1, 'Asset1'), (2, 'Asset2'), (3, 'Asset3');", "output": "SELECT u.name, d.name FROM users u INNER JOIN user_assets ua ON u.id = ua.user_id INNER JOIN digital_assets d ON ua.asset_name = d.name INNER JOIN regulatory_frameworks r ON d.name = r.asset_name;"}
{"input": " '2022\ub144 3\ubd84\uae30' '\ucc3d\uace0F'\uac00 \ud558\ub8e8 \ud3c9\uade0 \ucc98\ub9ac\ud55c \ud314\ub808\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (name varchar(20), pallets_handled int, handling_date date); INSERT INTO Warehouse (name, pallets_handled, handling_date) VALUES ('Warehouse F', 50, '2022-07-01'), ('Warehouse F', 60, '2022-07-02');", "output": "SELECT AVG(pallets_handled / (EXTRACT(DAY FROM handling_date) - EXTRACT(DAY FROM LAG(handling_date) OVER (PARTITION BY name ORDER BY handling_date)))) FROM Warehouse WHERE name = 'Warehouse F' AND quarter = 3 AND year = 2022;"}
{"input": " \uc778\ub3c4\ub124\uc2dc\uc544\uc758 \ucd5c\uc800 \uc784\uae08\uc740 \uc5bc\ub9c8\uc774\uba70, \uc774\ubcf4\ub2e4 \uc801\uc740 \uae08\uc561\uc744 \uc9c0\ubd88\ud558\ub294 \uc758\ub958 \uacf5\uc7a5\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Wages (country VARCHAR(50), wage DECIMAL(5,2), industry VARCHAR(50)); INSERT INTO Wages VALUES ('Indonesia', 2.9, 'Garment'), ('Indonesia', 3.1, 'Garment'), ('Indonesia', 2.7, 'Electronics'), ('Vietnam', 3.5, 'Garment');", "output": "SELECT MIN(wage) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment'; SELECT COUNT(*) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment' AND wage < (SELECT MIN(wage) FROM Wages WHERE country = 'Indonesia' AND industry = 'Garment');"}
{"input": " \uc544\uc2dc\uc544 \uc9c0\uc5ed\uc5d0\uc11c 500\uba85 \uc774\uc0c1 \ucc38\uc11d\ud558\ub294 \ubb38\ud654 \ud589\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CulturalEvents (EventName VARCHAR(255), Country VARCHAR(255), Attendees INT); INSERT INTO CulturalEvents (EventName, Country, Attendees) VALUES ('Asian Cultural Festival', 'China', 800), ('Asian Heritage Week', 'Japan', 600), ('Asian Art Exhibition', 'South Korea', 700), ('Asian Film Festival', 'India', 900), ('Asian Music Festival', 'Indonesia', 500);", "output": "SELECT EventName, Country, Attendees, (COUNT(*) OVER (PARTITION BY Country) - COUNT(CASE WHEN Attendees > 500 THEN 1 END) OVER (PARTITION BY Country)) * 100.0 / COUNT(*) OVER (PARTITION BY Country) AS PercentageMoreThan500 FROM CulturalEvents WHERE Country = 'Asia';"}
{"input": " \uc7ac\uace0\uc5d0 \uc788\ub294 \uae00\ub8e8\ud150 \ud504\ub9ac \uc81c\ud488\uc758 \ucd1d \uce7c\ub85c\ub9ac \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Inventory (product_id INT, product_name VARCHAR(100), is_gluten_free BOOLEAN, calorie_count INT); INSERT INTO Inventory (product_id, product_name, is_gluten_free, calorie_count) VALUES (1, 'Quinoa', true, 220), (2, 'Bread', false, 120), (3, 'Pasta', false, 200);", "output": "SELECT SUM(calorie_count) FROM Inventory WHERE is_gluten_free = true;"}
{"input": " 'clinic_7'\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\uace0 'clinic_8'\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\uc9c0 \uc54a\uc740 \ud658\uc790 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE clinic_7 (patient_id INT, therapy_received BOOLEAN); INSERT INTO clinic_7 (patient_id, therapy_received) VALUES (1, true), (2, false), (3, true), (14, false); CREATE TABLE clinic_8 (patient_id INT, therapy_received BOOLEAN); INSERT INTO clinic_8 (patient_id, therapy_received) VALUES (4, false), (5, true), (6, false), (15, false);", "output": "SELECT 'clinic_7' AS clinic, COUNT(*) FROM clinic_7 WHERE therapy_received = true INTERSECT SELECT 'clinic_8' AS clinic, COUNT(*) FROM clinic_8 WHERE therapy_received = false;"}
{"input": " \uc218\ud559\uacfc \ubb3c\ub9ac\ud559\uacfc \uad50\uc9c1\uc6d0\uc5d0\uac8c \uc9c0\uae09\ub41c \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA research;CREATE TABLE grants(faculty_name TEXT,department TEXT,amount INTEGER);INSERT INTO grants(faculty_name,department,amount)VALUES('Karen','Mathematics',150000),('Larry','Physics',200000),('Melissa','Physics',50000);", "output": "SELECT department,SUM(amount) FROM research.grants WHERE department='Mathematics' OR department='Physics' GROUP BY department;"}
{"input": " \ud638\uc8fc \uc2dc\ub4dc\ub2c8\uc5d0\ub294 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uac00 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE renewable_energy_projects (id INT, project_name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), project_type VARCHAR(50)); INSERT INTO renewable_energy_projects (id, project_name, city, country, project_type) VALUES (1, 'Sydney Wind Farm', 'Sydney', 'Australia', 'Wind');", "output": "SELECT COUNT(*) FROM renewable_energy_projects WHERE city = 'Sydney' AND country = 'Australia';"}
{"input": "\"Alien Aces\" \uac8c\uc784\uc5d0\uc11c \uc0c1\uc704 10%\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \ub418\uae30 \uc704\ud574 \ud544\uc694\ud55c \ucd5c\uc18c \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PlayerScores (PlayerID INT, Game TEXT, Score INT, Rank INT); INSERT INTO PlayerScores (PlayerID, Game, Score, Rank) VALUES (1, 'Alien Aces', 500, 1), (2, 'Alien Aces', 450, 2), (3, 'Alien Aces', 400, 3);", "output": "SELECT Score FROM PlayerScores WHERE Game = 'Alien Aces' AND Rank <= (SELECT COUNT(*) * 0.1 FROM PlayerScores WHERE Game = 'Alien Aces');"}
{"input": " \ud3d0\uc218 \uc720\uc785 \ubc0f \uc720\ucd9c \ube44\uc728\uacfc \ud568\uaed8 \uc218\ucc98\ub9ac \uc2dc\uc124\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE treatment_plants (plant_id INT, plant_name VARCHAR(50), location VARCHAR(50)); CREATE TABLE inflow (inflow_id INT, plant_id INT, inflow_rate INT); CREATE TABLE outflow (outflow_id INT, plant_id INT, outflow_rate INT); INSERT INTO treatment_plants VALUES (1, 'Plant A', 'City A'); INSERT INTO inflow VALUES (1, 1, 1200); INSERT INTO outflow VALUES (1, 1, 800);", "output": "SELECT tp.plant_name, i.inflow_rate, o.outflow_rate FROM treatment_plants tp INNER JOIN inflow i ON tp.plant_id = i.plant_id INNER JOIN outflow o ON tp.plant_id = o.plant_id;"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \uad50\uc721\uc744 \ubc1b\uc740 \uac01 \uc11c\uc2dd\uc9c0\uc758 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Habitats (id INT, name VARCHAR(20)); INSERT INTO Habitats (id, name) VALUES (1, 'Habitat A'), (2, 'Habitat B'); CREATE TABLE Animals (id INT, name VARCHAR(20), habitat_id INT); INSERT INTO Animals (id, name, habitat_id) VALUES (1, 'Lion', 1), (2, 'Elephant', 1), (3, 'Giraffe', 2); CREATE TABLE Education (animal_id INT, date DATE); INSERT INTO Education (animal_id, date) VALUES (1, '2022-01-01'), (2, '2022-01-02'), (3, '2022-01-03'), (4, '2021-01-01');", "output": "SELECT subquery.habitat_id, SUM(num_animals) FROM (SELECT habitat_id, COUNT(*) as num_animals FROM Animals INNER JOIN Education ON Animals.id = Education.animal_id GROUP BY habitat_id, YEAR(Education.date)) AS subquery GROUP BY subquery.habitat_id"}
{"input": " \uc544\ud504\ub9ac\uce74, \uc544\uc2dc\uc544, \ub0a8\ubbf8\uc758 \uae30\ud6c4 \ubcc0\ud654 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc790\uae08\uc740 \uad6d\uac00\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE mitigation_projects (id INT, country VARCHAR(50), region VARCHAR(50), funding FLOAT); INSERT INTO mitigation_projects (id, country, region, funding) VALUES (1, 'Kenya', 'Africa', 5000000.00), (2, 'Nigeria', 'Africa', 7000000.00), (3, 'India', 'Asia', 12000000.00), (4, 'China', 'Asia', 20000000.00), (5, 'Brazil', 'South America', 8000000.00);", "output": "SELECT m.country, SUM(m.funding) as total_funding FROM mitigation_projects m WHERE m.region IN ('Africa', 'Asia', 'South America') GROUP BY m.country;"}
{"input": " 2023\ub144\uc5d0\ub294 EU \ucd9c\uc2e0 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \ucc38\uac00\uc790\uac00 \uba87 \uba85\uc774\ub098 \ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE AutonomousDrivingParticipants (ParticipantID INT, ParticipantCountry TEXT, StudyID INT, Year INT);", "output": "SELECT COUNT(*) FROM AutonomousDrivingParticipants WHERE ParticipantCountry = 'EU' AND Year = 2023;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ucf5c\uce74\ud0c0 \ud56d\uc5d0\uc11c \ubc29\uae00\ub77c\ub370\uc2dc\ub85c \uc6b4\uc1a1\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ud3c9\uade0 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Port (port_id INT, port_name TEXT, country TEXT); INSERT INTO Port (port_id, port_name, country) VALUES (1, 'Port of Kolkata', 'India'); INSERT INTO Port (port_id, port_name, country) VALUES (2, 'Port of Chittagong', 'Bangladesh'); CREATE TABLE Shipment (shipment_id INT, container_id INT, port_id INT, shipping_date DATE); CREATE TABLE Container (container_id INT, weight FLOAT);", "output": "SELECT AVG(c.weight) as avg_weight FROM Container c JOIN Shipment s ON c.container_id = s.container_id JOIN Port p ON s.port_id = p.port_id WHERE p.country = 'Bangladesh' AND s.shipping_date >= NOW() - INTERVAL '3 months' AND s.port_id = (SELECT port_id FROM Port WHERE port_name = 'Port of Kolkata');"}
{"input": "\uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ub2e8\uccb4\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE organizations (id INT, name VARCHAR(100), mission_area VARCHAR(50), state VARCHAR(50)); CREATE TABLE donations (id INT, organization_id INT, amount DECIMAL(10, 2)); CREATE TABLE expenses (id INT, organization_id INT, amount DECIMAL(10, 2)); INSERT INTO organizations VALUES (1, 'Organization F', 'Sports', NULL); INSERT INTO donations VALUES (1, 1, 5000); INSERT INTO expenses VALUES (1, 1, NULL);", "output": "SELECT o.name FROM organizations o LEFT JOIN donations d ON o.id = d.organization_id LEFT JOIN expenses e ON o.id = e.organization_id WHERE d.organization_id IS NOT NULL AND e.organization_id IS NULL;"}
{"input": " \uac00\uc0c1\ud22c\uc5b4 \ub300\ube44 \ubb38\ud654\uc720\uc0b0 \uc608\uc57d \ube44\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE bookings (id INT PRIMARY KEY, tour_type VARCHAR(255), FOREIGN KEY (tour_type) REFERENCES tour_types(type)); CREATE TABLE tour_types (type VARCHAR(255) PRIMARY KEY, category VARCHAR(255)); INSERT INTO tour_types (type, category) VALUES ('Cultural Heritage', 'Real'), ('Virtual City', 'Virtual');", "output": "SELECT COUNT(*) / (SELECT COUNT(*) FROM bookings WHERE tour_type IN (SELECT type FROM tour_types WHERE category = 'Virtual')) AS ratio FROM bookings WHERE tour_type IN (SELECT type FROM tour_types WHERE category = 'Cultural Heritage');"}
{"input": " \uace0\uac1d\ub2f9 \uc0e4\ub9ac\uc544 \uc900\uc218 \ud380\ub4dc\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (id INT, name VARCHAR(255)); INSERT INTO clients (id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Alice Johnson'); CREATE TABLE investments (id INT, client_id INT, fund_type VARCHAR(255), amount DECIMAL(10, 2)); INSERT INTO investments (id, client_id, fund_type, amount) VALUES (1, 1, 'Shariah-compliant', 5000), (2, 1, 'Standard', 3000), (3, 3, 'Standard', 7000), (4, 2, 'Shariah-compliant', 4000), (5, 2, 'Shariah-compliant', 6000);", "output": "SELECT AVG(amount / NULLIF(cnt, 0)) FROM (SELECT client_id, COUNT(*) AS cnt, SUM(amount) AS amount FROM investments WHERE fund_type = 'Shariah-compliant' GROUP BY client_id) t;"}
{"input": " 2021\ub144\uc5d0 \uc5b4\ub5a4 \uc804\uae30 \uc790\ub3d9\ucc28\uac00 \uac00\uc7a5 \ub192\uc740 \uc548\uc804 \ub4f1\uae09\uc744 \ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE VehicleSafetyRatings (Id INT, Vehicle VARCHAR(50), SafetyRating INT, RatingYear INT); INSERT INTO VehicleSafetyRatings (Id, Vehicle, SafetyRating, RatingYear) VALUES (1, 'Tesla Model S', 5, 2021); INSERT INTO VehicleSafetyRatings (Id, Vehicle, SafetyRating, RatingYear) VALUES (2, 'Tesla Model 3', 5, 2021); INSERT INTO VehicleSafetyRatings (Id, Vehicle, SafetyRating, RatingYear) VALUES (3, 'Nissan Leaf', 4, 2021); INSERT INTO VehicleSafetyRatings (Id, Vehicle, SafetyRating, RatingYear) VALUES (4, 'Chevrolet Bolt', 5, 2021);", "output": "SELECT Vehicle, SafetyRating FROM VehicleSafetyRatings WHERE RatingYear = 2021 AND SafetyRating = (SELECT MAX(SafetyRating) FROM VehicleSafetyRatings WHERE RatingYear = 2021);"}
{"input": "2000\ub144 \uc774\ud6c4 \ub0a8\uadf9 \ub300\ub959\uc758 \ucd5c\uc18c \uae30\uc628 \uc0c1\uc2b9\uc740 \uc5bc\ub9c8\uc774\uba70, \uc0c1\uc2b9\uc774 \ubc1c\uc0dd\ud55c \uc5f0\ub3c4\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE temperature_data (id INT, region VARCHAR(255), year INT, temperature FLOAT); INSERT INTO temperature_data (id, region, year, temperature) VALUES (1, 'Antarctica', 2000, 1.5);", "output": "SELECT region, MIN(temperature) AS min_temp, year FROM temperature_data WHERE region = 'Antarctica' GROUP BY region, year HAVING min_temp = (SELECT MIN(temperature) FROM temperature_data WHERE region = 'Antarctica');"}
{"input": " \ub9e4\ub144 \uad6d\uac00\ubcc4\ub85c \ubc30\uce58\ub41c \uc704\uc131\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, country VARCHAR(50), launch_date DATE); INSERT INTO satellites (id, country, launch_date) VALUES (1, 'USA', '2020-01-01'), (2, 'China', '2020-02-14'), (3, 'Russia', '2020-05-20'), (4, 'USA', '2019-03-15');", "output": "SELECT country, YEAR(launch_date) as year, COUNT(*) as total_satellites FROM satellites GROUP BY country, year;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uac01 \ubaa9\uc801\uc9c0\uc758 \ud3c9\uade0 \uc5ec\ud589 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TravelCosts (Destination VARCHAR(255), Cost INT, TravelDate DATE);", "output": "SELECT Destination, AVG(Cost) OVER (PARTITION BY Destination) AS AvgCost, TO_CHAR(TravelDate, 'YYYY-Q') AS Quarter FROM TravelCosts WHERE TravelDate >= ADD_MONTHS(CURRENT_DATE, -3) AND TravelDate < CURRENT_DATE GROUP BY Destination, Quarter;"}
{"input": " 2021\ub144 \ud14d\uc0ac\uc2a4 \uac74\uc124 \ub178\ub3d9\uc790\uc758 \ucd5c\uc18c \uc778\uac74\ube44\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Labor_Costs_TX (WorkerID INT, State VARCHAR(50), Year INT, HourlyRate FLOAT);", "output": "SELECT MIN(HourlyRate) FROM Labor_Costs_TX WHERE State = 'Texas' AND Year = 2021;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 2XL \uc0ac\uc774\uc988 \uc758\ub958 \ud310\ub9e4\ub85c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (id INT, product_id INT, size VARCHAR(10), price DECIMAL(5,2), sale_date DATE); INSERT INTO Sales (id, product_id, size, price, sale_date) VALUES (1, 1, '2XL', 50.00, '2022-04-01'), (2, 2, 'XS', 30.00, '2022-05-15');", "output": "SELECT SUM(price) FROM Sales WHERE size = '2XL' AND sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);"}
{"input": "\uac01 \ubd80\uc11c\ubcc4 \ub0a8\uc9c1\uc6d0\uacfc \uc5ec\uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec \ucc28\uc774\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE EmployeeSalary (EmployeeID INT, Department VARCHAR(255), Gender VARCHAR(255), Salary INT); INSERT INTO EmployeeSalary (EmployeeID, Department, Gender, Salary) VALUES (1, 'IT', 'Male', 70000), (2, 'Finance', 'Female', 80000), (3, 'IT', 'Female', 75000), (4, 'HR', 'Non-binary', 60000);", "output": "SELECT Department, AVG(CASE WHEN Gender = 'Male' THEN Salary ELSE NULL END) AS Avg_Male_Salary, AVG(CASE WHEN Gender = 'Female' THEN Salary ELSE NULL END) AS Avg_Female_Salary, AVG(CASE WHEN Gender = 'Non-binary' THEN Salary ELSE NULL END) AS Avg_Non_binary_Salary FROM EmployeeSalary GROUP BY Department;"}
{"input": " A\uc9c0\ubc29\uc790\uce58\ub2e8\uccb4\uc758 \uc6d4\ud3c9\uade0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MunicipalityA (WasteQuantity INT, GenerationDate DATE); INSERT INTO MunicipalityA (WasteQuantity, GenerationDate) VALUES (500, '2021-01-01'), (600, '2021-02-01'), (700, '2021-03-01');", "output": "SELECT AVG(WasteQuantity) FROM (SELECT WasteQuantity, ROW_NUMBER() OVER (PARTITION BY EXTRACT(MONTH FROM GenerationDate) ORDER BY GenerationDate) as rn FROM MunicipalityA) tmp WHERE rn = 1;"}
{"input": " 2010\ub144 \uc774\ud6c4 \ub0a8\ubbf8 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc5f0\uac04 \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RenewableEnergyInvestment (country VARCHAR(255), year INT, investment DECIMAL(10,2)); INSERT INTO RenewableEnergyInvestment (country, year, investment) VALUES ('Brazil', 2010, 1000000), ('Brazil', 2011, 1500000), ('Brazil', 2012, 1750000), ('Brazil', 2013, 2000000), ('Brazil', 2014, 2250000), ('Brazil', 2015, 2500000), ('Colombia', 2010, 500000), ('Colombia', 2011, 750000), ('Colombia', 2012, 850000), ('Colombia', 2013, 950000), ('Colombia', 2014, 1050000), ('Colombia', 2015, 1150000);", "output": "SELECT country, year, SUM(investment) AS total_investment FROM RenewableEnergyInvestment WHERE country = 'South America' AND year BETWEEN 2010 AND 2020 GROUP BY year;"}
{"input": " \uc9c0\uc911\ud574\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591 \uc885\uc774 \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud574 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (name VARCHAR(255), status VARCHAR(255), location VARCHAR(255)); INSERT INTO marine_species (name, status, location) VALUES ('Mediterranean Monk Seal', 'Endangered', 'Mediterranean Sea'), ('Bluefin Tuna', 'Endangered', 'Mediterranean Sea');", "output": "SELECT COUNT(*) FROM marine_species WHERE status = 'Endangered' AND location = 'Mediterranean Sea';"}
{"input": " '\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591' \uc9c0\uc5ed\uc5d0\uc11c subscriber_id 43\uc5d0 \ub300\ud55c \uc5f0\uc18d \uac1c\uc6d4 \uac04\uc758 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE subscriber_data (subscriber_id INT, data_usage FLOAT, month DATE); INSERT INTO subscriber_data (subscriber_id, data_usage, month) VALUES (43, 28, '2021-01-01'), (43, 33, '2021-02-01'), (43, 38, '2021-03-01');", "output": "SELECT subscriber_id, LAG(data_usage) OVER (PARTITION BY subscriber_id ORDER BY month) as prev_data_usage, data_usage, month FROM subscriber_data WHERE subscriber_id = 43 AND region = 'Asia-Pacific' ORDER BY month;"}
{"input": " 'GHI' \ucc3d\uace0 \ubc0f \uad00\ub828\ub41c \ubaa8\ub4e0 \uc5ed\ubb3c\ub958 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE reverse_logistics (id INT PRIMARY KEY, warehouse_id INT, FOREIGN KEY (warehouse_id) REFERENCES warehouse(id)); INSERT INTO warehouse (id, name) VALUES (1, 'ABC'), (2, 'XYZ'), (3, 'GHI'); INSERT INTO reverse_logistics (id, warehouse_id) VALUES (1, 1), (2, 2), (3, 3);", "output": "WITH w AS (DELETE FROM warehouse WHERE name = 'GHI' RETURNING id) DELETE FROM reverse_logistics WHERE warehouse_id IN (SELECT id FROM w); DELETE FROM warehouse WHERE name = 'GHI';"}
{"input": " \uad70\uc0ac \uc7a5\ube44 \uc720\uc9c0 \uad00\ub9ac \uc694\uc57d\uc744 \uc720\ud615\ubcc4\ub85c \ud45c\uc2dc\ud558\ub294 'equipment_maintenance_summary' \ubdf0\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE equipment_maintenance (id INT PRIMARY KEY, type VARCHAR(50), last_maintenance DATE, next_maintenance DATE, status VARCHAR(20));CREATE TABLE military_equipment (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50));INSERT INTO military_equipment (id, name, type) VALUES (1, 'M1 Abrams', 'Tank'), (2, 'UH-60 Black Hawk', 'Helicopter'), (3, 'F-15 Eagle', 'Fighter Jet');INSERT INTO equipment_maintenance (id, type, last_maintenance, next_maintenance, status) VALUES (1, 'Tank', '2021-01-01', '2022-01-01', 'Completed'), (2, 'Helicopter', '2021-02-01', '2022-02-01', 'Scheduled'), (3, 'Fighter Jet', '2021-03-01', '2022-03-01', 'In Progress');", "output": "CREATE VIEW equipment_maintenance_summary AS SELECT type, COUNT(*) as total, MAX(CASE WHEN status = 'In Progress' THEN 1 ELSE 0 END) as in_progress, MAX(CASE WHEN status = 'Completed' THEN 1 ELSE 0 END) as completed FROM equipment_maintenance GROUP BY type;"}
{"input": " '\uad50\uc721' \ud504\ub85c\uadf8\ub7a8\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uae30\ubd80\ub97c \ud55c \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Donations (donation_id INT, donor_id INT, program_id INT, donation_amount DECIMAL(10,2)); INSERT INTO Donations (donation_id, donor_id, program_id, donation_amount) VALUES (1, 1, 1, 500.00), (2, 2, 2, 300.00), (3, 1, 1, 500.00);", "output": "SELECT d1.donor_name, SUM(d2.donation_amount) FROM Donors d1 JOIN Donations d2 ON d1.donor_id = d2.donor_id JOIN Programs p ON d2.program_id = p.program_id WHERE p.program_name = 'Education' GROUP BY d1.donor_name ORDER BY SUM(d2.donation_amount) DESC LIMIT 5;"}
{"input": " \ud799\ud569\uacfc \ub85d \uc74c\uc545\uc758 \ub514\uc9c0\ud138 \ubc0f \uc624\ud504\ub77c\uc778 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales_digital (song_id INT, genre VARCHAR(10), revenue DECIMAL(10,2));CREATE TABLE sales_physical (song_id INT, genre VARCHAR(10), revenue DECIMAL(10,2));", "output": "SELECT SUM(revenue) FROM (SELECT revenue FROM sales_digital WHERE genre IN ('hip-hop', 'rock') UNION ALL SELECT revenue FROM sales_physical WHERE genre IN ('hip-hop', 'rock')) AS total_sales;"}
{"input": " \uc7ac\uace0\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\uc758 \ud3c9\uade0 \uc7ac\uace0 \ud488\ubaa9 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Inventory (InventoryId INT, WarehouseId INT, ProductId INT, Quantity INT, Country VARCHAR(50)); INSERT INTO Inventory (InventoryId, WarehouseId, ProductId, Quantity, Country) VALUES (1, 1, 1, 100, 'USA'); INSERT INTO Inventory (InventoryId, WarehouseId, ProductId, Quantity, Country) VALUES (2, 1, 2, 200, 'USA'); INSERT INTO Inventory (InventoryId, WarehouseId, ProductId, Quantity, Country) VALUES (3, 2, 1, 300, 'Canada'); INSERT INTO Inventory (InventoryId, WarehouseId, ProductId, Quantity, Country) VALUES (4, 2, 2, 400, 'Canada'); INSERT INTO Inventory (InventoryId, WarehouseId, ProductId, Quantity, Country) VALUES (5, 3, 1, 500, 'Mexico');", "output": "SELECT AVG(Quantity) AS AvgQuantity FROM Inventory GROUP BY Country ORDER BY SUM(Quantity) DESC LIMIT 3;"}
{"input": " \ub514\uc2a4\ud504\ub85c\uc298 \ubc0f \ud14c\ub974\ube00\uc5d0 \ub300\ud55c \ud22c\uba85\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uacf5\uae09\uc5c5\uccb4\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE supply_chain_transparency (element VARCHAR(10), supplier VARCHAR(20), transparency INT); INSERT INTO supply_chain_transparency VALUES ('Dysprosium', 'Supplier A', 8), ('Dysprosium', 'Supplier B', 7), ('Dysprosium', 'Supplier C', 6), ('Terbium', 'Supplier A', 9), ('Terbium', 'Supplier B', 8), ('Terbium', 'Supplier C', 5);", "output": "SELECT element, MIN(transparency) AS min_transparency FROM supply_chain_transparency GROUP BY element;"}
{"input": " \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\ub97c \uc704\ud574 \uac01 \uad6d\uac00\uac00 \ud22c\uc785\ud558\ub294 \ud3c9\uade0 \uc5f0\uac04 \uae30\ud6c4 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country (country_code VARCHAR(3), country_name VARCHAR(50)); INSERT INTO country VALUES ('USA', 'United States'), ('CHN', 'China'), ('IND', 'India');   CREATE TABLE project (project_id INT, project_name VARCHAR(50), country_code VARCHAR(3), mitigation BOOLEAN); INSERT INTO project VALUES (1, 'Solar Farm', 'USA', false), (2, 'Wind Turbines', 'CHN', false), (3, 'Energy Efficiency', 'IND', true);   CREATE TABLE finance (project_id INT, year INT, amount INT); INSERT INTO finance VALUES (1, 2020, 500000), (2, 2020, 1000000), (3, 2020, 200000), (1, 2019, 600000), (2, 2019, 800000), (3, 2019, 300000);", "output": "SELECT c.country_name, AVG(f.amount/5)   FROM country c   JOIN project p ON c.country_code = p.country_code   JOIN finance f ON p.project_id = f.project_id   WHERE p.adaptation = true   GROUP BY c.country_name;"}
{"input": " \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, subscription_type VARCHAR(10)); INSERT INTO mobile_subscribers (subscriber_id, subscription_type) VALUES (1, 'mobile'), (2, 'broadband'); CREATE TABLE broadband_subscribers (subscriber_id INT, subscription_type VARCHAR(10)); INSERT INTO broadband_subscribers (subscriber_id, subscription_type) VALUES (3, 'mobile'), (4, 'mobile');", "output": "SELECT COUNT(*) FROM mobile_subscribers UNION ALL SELECT COUNT(*) FROM broadband_subscribers;"}
{"input": " \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts(id INT, contract_name VARCHAR(255), country VARCHAR(255)); INSERT INTO smart_contracts(id, contract_name, country) VALUES (1, 'Contract1', 'USA'), (2, 'Contract2', 'China'), (3, 'Contract3', 'USA'), (4, 'Contract4', 'India'), (5, 'Contract5', 'Germany');", "output": "SELECT country, COUNT(*) as contract_count FROM smart_contracts GROUP BY country ORDER BY contract_count DESC LIMIT 3;"}
{"input": " \uc0ac\ud30c\ub9ac\ub97c \uc81c\uc678\ud558\uace0 \uc544\ud504\ub9ac\uce74 \uc6b4\uc601\uc5c5\uccb4\uac00 \uc81c\uacf5\ud558\ub294 \ub3c5\ud2b9\ud55c \uc5ec\ud589 \uc720\ud615\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE africa_tour_operators (operator VARCHAR(50), tour_type VARCHAR(50)); INSERT INTO africa_tour_operators VALUES ('Acacia Africa', 'Overland tour'), ('African Budget Safaris', 'Safari'), ('Absolute Africa', 'Camping tour'), ('African Overland Tours', 'Budget tour'), ('G Adventures', 'Cultural tour');", "output": "SELECT DISTINCT tour_type FROM africa_tour_operators WHERE tour_type != 'Safari';"}
{"input": " 2015\ub144\uacfc 2016\ub144 \ud14c\ub974\ube00\uacfc \ud640\ubbb4\uc758 \uc5f0\uac04 \uc0dd\uc0b0\ub7c9 \ube44\uad50", "context": "CREATE TABLE production (element VARCHAR(10), year INT, month INT, quantity INT); INSERT INTO production (element, year, month, quantity) VALUES ('Terbium', 2015, 1, 50), ('Terbium', 2015, 2, 55), ('Terbium', 2016, 1, 60), ('Terbium', 2016, 2, 65), ('Holmium', 2015, 1, 70), ('Holmium', 2015, 2, 75), ('Holmium', 2016, 1, 80), ('Holmium', 2016, 2, 85);", "output": "SELECT element, SUM(quantity) FROM production WHERE (year = 2015 OR year = 2016) AND element IN ('Terbium', 'Holmium') GROUP BY element, year;"}
{"input": "2015\ub144 \uc774\ud6c4 Tesla\uac00 \uc81c\uc870\ud55c \ucc28\ub7c9\uc758 \ud3c9\uade0 \uc548\uc804 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicles (id INT, make VARCHAR(255), model VARCHAR(255), safety_rating FLOAT, manufacturing_date DATE); INSERT INTO Vehicles (id, make, model, safety_rating, manufacturing_date) VALUES (1, 'Tesla', 'Model S', 5.0, '2015-01-01'); INSERT INTO Vehicles (id, make, model, safety_rating, manufacturing_date) VALUES (2, 'Toyota', 'Camry', 4.5, '2018-01-01');", "output": "SELECT AVG(safety_rating) FROM Vehicles WHERE make = 'Tesla' AND manufacturing_date >= '2015-01-01';"}
{"input": " \ucd95\uad6c \uacbd\uae30 \ud3c9\uade0 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(100), country VARCHAR(50)); INSERT INTO teams (team_id, team_name, country) VALUES (1, 'Barcelona', 'Spain'), (2, 'Bayern Munich', 'Germany'); CREATE TABLE matches (match_id INT, team_home_id INT, team_away_id INT, tickets_sold INT); INSERT INTO matches (match_id, team_home_id, team_away_id, tickets_sold) VALUES (1, 1, 2, 5000), (2, 2, 1, 6000);", "output": "SELECT country, AVG(tickets_sold) as avg_sales FROM matches m JOIN teams t1 ON m.team_home_id = t1.team_id JOIN teams t2 ON m.team_away_id = t2.team_id GROUP BY country ORDER BY avg_sales DESC LIMIT 3;"}
{"input": " 1\ubc31\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc758 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucc3d\uc5c5\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups (startup_id INT, funding_amount INT); CREATE TABLE founders_startups (founder_id INT, startup_id INT); INSERT INTO startups VALUES (1, 1500000), (2, 750000), (3, 300000); INSERT INTO founders_startups VALUES (1, 1), (2, 2), (3, 3);", "output": "SELECT f.founder_id, f.founder_name FROM founders_startups fs JOIN founders f ON fs.founder_id = f.founder_id WHERE fs.startup_id IN (SELECT startup_id FROM startups WHERE funding_amount > 1000000);"}
{"input": "\uac01 \ud589\uc0ac\uc758 \uc694\uc77c\ubcc4 \ud2f0\ucf13 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE event_days (event_day ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'), event_id INT);", "output": "SELECT e.event_name, e.event_day, COUNT(t.ticket_id) FROM event_days ed JOIN events e ON ed.event_id = e.event_id JOIN tickets t ON ed.event_day = DAYOFWEEK(t.event_date) JOIN events e ON t.event_id = e.event_id GROUP BY e.event_name, e.event_day;"}
{"input": " \uc9c0\uc5ed 1\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uacbd\ucc30 \uc13c\ud130\uc5d0\uc11c \ubcf4\uace0\ud55c \uae34\uae09 \uc0ac\uac74 \ubc0f \ubc94\uc8c4 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_policing_centers (id INT, center_name TEXT, region TEXT); INSERT INTO community_policing_centers (id, center_name, region) VALUES (1, 'Center A', 'Region 1'), (2, 'Center B', 'Region 2'); CREATE TABLE emergency_incidents (id INT, center_id INT, incident_type TEXT, incident_count INT); INSERT INTO emergency_incidents (id, center_id, incident_type, incident_count) VALUES (1, 1, 'Fire', 30), (2, 1, 'Medical', 40), (3, 2, 'Fire', 50), (4, 2, 'Medical', 60); CREATE TABLE crimes_reported (id INT, center_id INT, crime_type TEXT, crime_count INT); INSERT INTO crimes_reported (id, center_id, crime_type, crime_count) VALUES (1, 1, 'Theft', 20), (2, 1, 'Vandalism', 10), (3, 2, 'Theft', 30), (4, 2, 'Vandalism', 20);", "output": "SELECT SUM(e.incident_count + cr.crime_count) AS total_incidents FROM community_policing_centers c JOIN emergency_incidents e ON c.id = e.center_id JOIN crimes_reported cr ON c.id = cr.center_id WHERE c.region = 'Region 1';"}
{"input": " '\uc720\ub7fd' \uc9c0\uc5ed\uc758 \ub098\ubb34\uc758 \ucd5c\uc18c \ub098\uc774\ub294 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE trees (id INT, age FLOAT, species TEXT, region TEXT); INSERT INTO trees (id, age, species, region) VALUES (1, 45.6, 'Beech', 'Europe'), (2, 78.9, 'Hornbeam', 'Europe'), (3, 23.4, 'Ash', 'Europe');", "output": "SELECT MIN(age) FROM trees WHERE region = 'Europe';"}
{"input": "\uc720\ub7fd\uc5d0\uc11c \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc774 \uac00\uc7a5 \uae34 \uc0c1\uc704 10\uac1c \uacbd\ub85c\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Routes (id INT, origin_city VARCHAR(255), destination_city VARCHAR(255), distance INT, etd DATE, eta DATE);", "output": "SELECT origin_city, destination_city, AVG(DATEDIFF(day, etd, eta)) as avg_delivery_time FROM Routes WHERE origin_city IN (SELECT city FROM Warehouse WHERE country = 'Europe') GROUP BY origin_city, destination_city ORDER BY avg_delivery_time DESC LIMIT 10;"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc5d0\uc11c \ubb34\ub8cc \ucf54\ub85c\ub09819 \uac80\uc0ac\ub97c \uc81c\uacf5\ud558\ub294 \ubcd1\uc6d0\uc758 \ube44\uc728\uc740 \uba87 \ud37c\uc13c\ud2b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hospitals (HospitalID INT, Name VARCHAR(50), City VARCHAR(30), State VARCHAR(20), FreeTesting BOOLEAN); INSERT INTO Hospitals (HospitalID, Name, City, State, FreeTesting) VALUES (1, 'Cedars-Sinai', 'Los Angeles', 'California', TRUE); INSERT INTO Hospitals (HospitalID, Name, City, State, FreeTesting) VALUES (2, 'UCLA Medical Center', 'Los Angeles', 'California', FALSE);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Hospitals WHERE City = 'Los Angeles')) FROM Hospitals WHERE City = 'Los Angeles' AND FreeTesting = TRUE;"}
{"input": " \uc0ac\uc6a9\uc790\ubcc4 \uccad\ucde8 \uc2dc\uac04\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE users (id INT, name VARCHAR(255), gender VARCHAR(10), country VARCHAR(255), registration_date DATE, listening_time INT); INSERT INTO users (id, name, gender, country, registration_date, listening_time) VALUES (1, 'User 1', 'Male', 'USA', '2018-01-01', 120), (2, 'User 2', 'Female', 'Canada', '2017-01-01', 90), (3, 'User 3', 'Male', 'USA', '2019-01-01', 150);", "output": "SELECT name AS user_name, listening_time AS listening_time_in_minutes, ROW_NUMBER() OVER (ORDER BY listening_time DESC) AS rank FROM users;"}
{"input": " 'site_f'\uc758 \uac00\uc7a5 \ube60\ub978 \uc774\uc288 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE excavation_sites (site_id INT, site_name VARCHAR(255)); CREATE TABLE artifacts (artifact_id INT, site_id INT, artifact_type VARCHAR(255), date_found DATE); INSERT INTO excavation_sites (site_id, site_name) VALUES (1, 'site_a'), (2, 'site_b'), (3, 'site_c'), (4, 'site_d'), (5, 'site_e'), (6, 'site_f'); INSERT INTO artifacts (artifact_id, site_id, artifact_type, date_found) VALUES (1, 1, 'Pottery', '2020-01-01'), (2, 1, 'Bone Fragments', '2019-01-01'), (3, 2, 'Pottery', '2021-01-01'), (4, 2, 'Coins', '2020-01-01'), (5, 3, 'Bone Fragments', '2018-01-01'), (6, 3, 'Bronze Tools', '2019-01-01'), (7, 4, 'Pottery', '2017-01-01'), (8, 4, 'Pottery', '2016-01-01'), (9, 5, 'Bronze Tools', '2015-01-01'), (10, 6, 'Bronze Tools', '2014-01-01');", "output": "SELECT MIN(date_found) FROM artifacts WHERE site_id = (SELECT site_id FROM excavation_sites WHERE site_name = 'site_f');"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \uad6d\ubc29 \uc678\uad50 \ucc38\uc5ec \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc544 \ud574\ub2f9 \uc810\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DefenseDiplomacy (country VARCHAR(255), score INT, region VARCHAR(255)); INSERT INTO DefenseDiplomacy (country, score, region) VALUES ('Colombia', 85, 'South America'); INSERT INTO DefenseDiplomacy (country, score, region) VALUES ('Peru', 80, 'South America'); INSERT INTO DefenseDiplomacy (country, score, region) VALUES ('Brazil', 90, 'South America');", "output": "SELECT country, score FROM (SELECT country, score, ROW_NUMBER() OVER (ORDER BY score DESC) as rnk FROM DefenseDiplomacy WHERE region = 'South America') sub WHERE rnk <= 3;"}
{"input": " 2021\ub144 \uc720\ub7fd \uc9c0\uc5ed\uc5d0\uc11c \uad70\uc6a9 \ub4dc\ub860\uc744 \uc5bc\ub9c8\ub098 \ud68d\ub4dd\ud588\ub098\uc694?", "context": "CREATE TABLE Equipment (equipment_id INT, equipment_type VARCHAR(50), year INT, region_id INT); INSERT INTO Equipment (equipment_id, equipment_type, year, region_id) VALUES (1, 'Military drone', 2021, 3), (2, 'Helicopter', 2020, 3);", "output": "SELECT COUNT(*) FROM Equipment WHERE equipment_type = 'Military drone' AND year = 2021 AND region_id = (SELECT region_id FROM Regions WHERE region_name = 'European');"}
{"input": "\uc8fc\ud0dd \ubcf4\ud5d8\uacfc \uc790\ub3d9\ucc28 \ubcf4\ud5d8\uc744 \ubaa8\ub450 \ubcf4\uc720\ud558\uace0 \ud50c\ub85c\ub9ac\ub2e4\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubcf4\ud5d8 \uc720\ud615\uc744 \uc885\ud569\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Policyholders (PolicyholderID INT, Address VARCHAR(100), State VARCHAR(2)); CREATE TABLE HomeInsurance (PolicyholderID INT, HomeAddress VARCHAR(100), InsuranceType VARCHAR(50)); CREATE TABLE AutoInsurance (PolicyholderID INT, AutoAddress VARCHAR(100), InsuranceType VARCHAR(50));", "output": "UPDATE HomeInsurance SET InsuranceType = 'Comprehensive' WHERE PolicyholderID IN (SELECT PolicyholderID FROM Policyholders WHERE State = 'FL'); UPDATE AutoInsurance SET InsuranceType = 'Comprehensive' WHERE PolicyholderID IN (SELECT PolicyholderID FROM Policyholders WHERE State = 'FL');"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uc5b8\uc5b4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Language_Speakers (id INT, language VARCHAR(50), region VARCHAR(50), speakers INT); INSERT INTO Language_Speakers (id, language, region, speakers) VALUES (1, 'Swahili', 'Africa', 140000000), (2, 'Hausa', 'Africa', 80000000), (3, 'Yoruba', 'Africa', 40000000);", "output": "SELECT language, speakers, ROW_NUMBER() OVER (PARTITION BY region ORDER BY speakers DESC) as rank FROM Language_Speakers WHERE region = 'Africa' HAVING rank <= 2;"}
{"input": " \ucd5c\uadfc 6\uac1c\uc6d4\uac04 \uc81c\ud488\ubcc4 \uc548\uc804\uc0ac\uace0\ub294?", "context": "CREATE TABLE safety_records (record_id INT, product_id INT, incident_date DATE); INSERT INTO safety_records (record_id, product_id, incident_date) VALUES (1, 101, '2022-01-15'), (2, 102, '2022-03-04'), (3, 103, '2022-05-09');", "output": "SELECT product_id, COUNT(*) as safety_incidents FROM safety_records WHERE incident_date >= DATEADD(month, -6, GETDATE()) GROUP BY product_id;"}
{"input": "NewsSourceA\uc640 NewsSourceB\uc5d0\uc11c \ubc1c\ud589\ub41c \uae30\uc0ac\ub97c \uc81c\uc678\ud558\uace0, \ud0d0\uc0ac\ubcf4\ub3c4 \uae30\uc0ac\uc640 \ub3d9\ubd80 \ubc0f \uc11c\ubd80 \uc9c0\uc5ed \ub274\uc2a4 \ub9e4\uccb4\uc5d0\uc11c \ubc1c\ud589\ub41c \ub274\uc2a4 \uae30\uc0ac\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA news;CREATE TABLE NewsSource (name varchar(255), type varchar(10), region varchar(10));INSERT INTO NewsSource (name, type, region) VALUES ('NewsSourceA', 'news', 'eastern'), ('NewsSourceB', 'investigative', 'western'), ('NewsSourceC', 'news', 'western'), ('NewsSourceD', 'opinion', 'eastern'), ('NewsSourceE', 'investigative', 'eastern'), ('NewsSourceF', 'news', 'western'), ('NewsSourceG', 'opinion', 'western'), ('NewsSourceH', 'investigative', 'western');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM news.NewsSource WHERE (region = 'eastern' OR region = 'western') AND type IN ('investigative', 'news') AND name NOT IN ('NewsSourceA', 'NewsSourceB')) EXCEPT (SELECT * FROM news.NewsSource WHERE name IN ('NewsSourceA', 'NewsSourceB')) ) AS eastern_western_news"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uac01 \ub85c\ud38c\ubcc4 \ucd1d \uc18c\uc1a1 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Cases (CaseID INT, LawFirmID INT, CaseDate DATE); CREATE TABLE LawFirms (LawFirmID INT, LawFirmName VARCHAR(255));", "output": "SELECT LawFirms.LawFirmName, SUM(1) OVER(PARTITION BY LawFirms.LawFirmID) FROM Cases JOIN LawFirms ON Cases.LawFirmID = LawFirms.LawFirmID WHERE CaseDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY LawFirms.LawFirmID, LawFirms.LawFirmName;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ud799\ud569 \uc2a4\ud2b8\ub9bc\uc744 \ub4e3\ub294 \uc0ac\uc6a9\uc790\uc758 \ube44\uc728", "context": "CREATE TABLE genres (id INT, name TEXT); INSERT INTO genres (id, name) VALUES (1, 'Hip-hop');", "output": "SELECT ROUND(100 * SUM(CASE WHEN users.country = 'United States' AND genre_id = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT users.id), 2) AS hiphop_percentage FROM users JOIN user_genres ON users.id = user_genres.user_id JOIN genres ON user_genres.genre_id = genres.id;"}
{"input": " 2021\ub144 12\uc6d4\uc5d0 \ubc30\uc1a1\ub41c \ucd1d \ud328\ud0a4\uc9c0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ubaa9\uc801\uc9c0\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Shipments (id INT, destination VARCHAR(50), packages INT, timestamp DATE); INSERT INTO Shipments (id, destination, packages, timestamp) VALUES (1, 'Sydney', 50, '2021-12-01'), (2, 'Melbourne', 30, '2021-12-02'), (3, 'Brisbane', 40, '2021-12-03'), (4, 'Perth', 55, '2021-12-04'), (5, 'Adelaide', 60, '2021-12-05');", "output": "SELECT destination, SUM(packages) FROM Shipments WHERE timestamp BETWEEN '2021-12-01' AND '2021-12-31' GROUP BY destination ORDER BY SUM(packages) DESC LIMIT 2;"}
{"input": " '\uc2ec\uac01\ud55c' \uc2ec\uac01\ub3c4 \ucde8\uc57d\uc810\uc774 \uc788\ub294 \uad6d\uac00\uc640 \ud574\ub2f9 \ucde8\uc57d\uc810\uc758 \uc218\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c? country, count_of_creation_severity_vulnerability \ud615\uc2dd\uc73c\ub85c \ucd9c\ub825\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE country_severity (id INT, ip_address VARCHAR(255), country VARCHAR(255), severity VARCHAR(255)); INSERT INTO country_severity (id, ip_address, country, severity) VALUES (1, '172.16.0.1', 'Brazil', 'Critical'), (2, '10.0.0.1', 'Canada', 'Low'), (3, '172.16.0.2', 'India', 'Critical'), (4, '10.0.0.2', 'Canada', 'Medium'), (5, '10.0.0.3', 'Canada', 'High'), (6, '10.0.0.4', 'Colombia', 'Critical');", "output": "SELECT country, COUNT(*) as count_of_critical_severity_vulnerabilities FROM country_severity WHERE severity = 'Critical' GROUP BY country;"}
{"input": " 2021\ub144 \ub9e4\ub9bd \uc6a9\ub7c9\uc758 \uc6d4\ubcc4 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE landfill_capacity (id INT, date DATE, capacity INT); INSERT INTO landfill_capacity (id, date, capacity) VALUES (1, '2021-01-01', 10000), (2, '2021-02-01', 9500), (3, '2021-03-01', 9200), (4, '2021-04-01', 8900);", "output": "SELECT date, capacity - LAG(capacity) OVER (ORDER BY date) AS change_in_capacity FROM landfill_capacity WHERE date BETWEEN '2021-01-01' AND '2021-12-31' ORDER BY date;"}
{"input": " 5G \ucd9c\uc2dc \uc774\ud6c4 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\uac00 5G\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud588\ub098\uc694?", "context": "CREATE TABLE network_upgrades (subscriber_id INT, service VARCHAR(10), upgrade_date DATE); INSERT INTO network_upgrades (subscriber_id, service, upgrade_date) VALUES (1, 'mobile', '2021-04-15'), (2, 'mobile', '2021-07-20');", "output": "SELECT COUNT(*) FROM network_upgrades WHERE service = 'mobile' AND upgrade_date >= (SELECT MIN(upgrade_date) FROM network_upgrades WHERE service = 'mobile' AND upgrade_date >= '2020-04-01');"}
{"input": " Basic \uba64\ubc84\uc2ed\uacfc Premium \uba64\ubc84\uc2ed\uc758 \uc6d4 \ud3c9\uade0 \uac00\uaca9 \ucc28\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE gym_memberships (id INT, member_name VARCHAR(50), start_date DATE, end_date DATE, membership_type VARCHAR(50), price DECIMAL(5,2));", "output": "SELECT AVG(price_diff) AS avg_monthly_price_difference FROM (SELECT DATEDIFF(end_date, start_date) / 12 AS months_between, AVG(CASE WHEN membership_type = 'Premium' THEN price ELSE 0 END) - AVG(CASE WHEN membership_type = 'Basic' THEN price ELSE 0 END) AS price_diff FROM gym_memberships WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY months_between) AS subquery;"}
{"input": " '\uc778\uc0c1\ud30c \ubbf8\uc220' \uc804\uc2dc\ud68c\uc5d0\uc11c \uc791\ud488 \uc0ad\uc81c", "context": "CREATE TABLE artworks (id INT, name VARCHAR(255), artist_id INT); CREATE TABLE exhibitions (id INT, name VARCHAR(255)); CREATE TABLE exhibition_artworks (exhibition_id INT, artwork_id INT); INSERT INTO artworks (id, name, artist_id) VALUES (1, 'The Persistence of Memory', 1); INSERT INTO exhibitions (id, name) VALUES (1, 'Impressionist Art'); INSERT INTO exhibition_artworks (exhibition_id, artwork_id) VALUES (1, 1);", "output": "WITH artwork_to_delete AS (DELETE FROM exhibition_artworks WHERE exhibition_id = 1 AND artwork_id = 1) SELECT * FROM artwork_to_delete;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uace0\uac1d\uc0ac \ud3c9\uade0 \uc7ac\ubb34\ub2a5\ub825 \uc810\uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE client (id INT, name VARCHAR(50), region VARCHAR(50), score INT); INSERT INTO client (id, name, region, score) VALUES (1, 'John', 'Africa', 60), (2, 'Jane', 'Asia', 70), (3, 'Jim', 'Europe', 80), (4, 'Joan', 'America', 90);", "output": "SELECT region, AVG(score) as avg_score FROM client GROUP BY region;"}
{"input": " \ud2b9\uc815 \uc131\ubd84\uacfc \ub3d9\uc77c\ud55c \uc9c0\uc5ed\uc5d0\uc11c \ud310\ub9e4\ub41c \uc81c\ud488\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(50)); INSERT INTO products VALUES (1, 'Lipstick 101'), (2, 'Eye Shadow 202'); CREATE TABLE ingredients (ingredient_id INT, product_id INT, sourcing_region VARCHAR(50)); INSERT INTO ingredients VALUES (1, 1, 'Europe'), (2, 1, 'Asia'), (3, 2, 'Canada'), (4, 2, 'US');", "output": "SELECT ingredients.ingredient_id, ingredients.sourcing_region FROM ingredients INNER JOIN products ON ingredients.product_id = products.product_id WHERE ingredients.sourcing_region IN (SELECT ingredients.sourcing_region FROM ingredients INNER JOIN products ON ingredients.product_id = products.product_id WHERE products.product_name = 'Lipstick 101');"}
{"input": " \uc724\ub9ac\uc801 AI \ud22c\uc790 \uce21\uba74\uc5d0\uc11c \uc0c1\uc704 3\uac1c \uae30\uc5c5\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company_investments (id INT, company_name VARCHAR(50), ethical_ai_investment DECIMAL(5,2), investment_date DATE); INSERT INTO company_investments (id, company_name, ethical_ai_investment, investment_date) VALUES (1, 'Company1', 15000.00, '2021-01-15'); INSERT INTO company_investments (id, company_name, ethical_ai_investment, investment_date) VALUES (2, 'Company2', 20000.00, '2021-06-30'); INSERT INTO company_investments (id, company_name, ethical_ai_investment, investment_date) VALUES (3, 'Company3', 10000.00, '2021-04-25');", "output": "SELECT company_name, SUM(ethical_ai_investment) OVER (PARTITION BY company_name) AS total_investment, RANK() OVER (ORDER BY SUM(ethical_ai_investment) DESC) AS rank FROM company_investments;"}
{"input": " 2019\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\uc11c \uc2e0\uace0\ub41c \ubc94\uc8c4 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ReportedCrimes (ID INT, State VARCHAR(20), Year INT, Crimes INT); INSERT INTO ReportedCrimes (ID, State, Year, Crimes) VALUES (1, 'California', 2019, 1500);", "output": "SELECT SUM(Crimes) FROM ReportedCrimes WHERE State = 'California' AND Year = 2019;"}
{"input": "2010\ub144 \uc774\ud6c4 \ud504\ub791\uc2a4\uc640 \ub3c5\uc77c\uc774 \uc911\ub3d9\uc5d0\uc11c \uc81c\uacf5\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_assistance (donor VARCHAR(255), region VARCHAR(255), cost DECIMAL(10, 2), assistance_date DATE);", "output": "SELECT SUM(cost) FROM humanitarian_assistance WHERE (donor = 'France' OR donor = 'Germany') AND region = 'Middle East' AND assistance_date >= '2010-01-01';"}
{"input": " \uc9c0\ub09c \ud574 \uc778\ub3c4\uc5d0\uc11c \uacf5\uae09\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c\uc758 \ud3c9\uade0 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sourcing (id INT, fabric_type TEXT, quantity INT, country TEXT, sourcing_date DATE); INSERT INTO sourcing (id, fabric_type, quantity, country, sourcing_date) VALUES (1, 'organic cotton', 500, 'India', '2021-06-01'), (2, 'recycled polyester', 300, 'China', '2021-07-15'), (3, 'hemp', 700, 'India', '2021-08-09');", "output": "SELECT AVG(quantity) FROM sourcing WHERE fabric_type = 'sustainable fabric' AND country = 'India' AND sourcing_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 40~50\ub300 \ud658\uc790\ub4e4\uc5d0\uac8c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uce58\ub8cc\ubc29\ubc95\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE treatments (patient_id INT, age INT, treatment_type VARCHAR(50)); INSERT INTO treatments (patient_id, age, treatment_type) VALUES (1, 45, 'CBT'); INSERT INTO treatments (patient_id, age, treatment_type) VALUES (2, 50, 'DBT'); INSERT INTO treatments (patient_id, age, treatment_type) VALUES (3, 42, 'Mindfulness'); INSERT INTO treatments (patient_id, age, treatment_type) VALUES (4, 48, 'CBT'); INSERT INTO treatments (patient_id, age, treatment_type) VALUES (5, 39, 'DBT');", "output": "SELECT treatment_type, COUNT(*) as count FROM treatments WHERE age BETWEEN 40 AND 50 GROUP BY treatment_type ORDER BY count DESC LIMIT 1;"}
{"input": " '\ub0a8\ubd80' \uc9c0\uc5ed\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Claims (ClaimID INT, PolicyID INT, Amount INT, Region VARCHAR(10)); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (1, 101, 500, 'North'); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (2, 102, 750, 'South');", "output": "SELECT SUM(Amount) FROM Claims WHERE Region = 'South';"}
{"input": "2022\ub144 10\uc885 \uacbd\uae30\uc5d0 \ucc38\uac00\ud558\ub294 \uac01 \uc120\uc218\uc758 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE decathlon_results (athlete_id INT, athlete_name VARCHAR(50), distance_covered INT); INSERT INTO decathlon_results (athlete_id, athlete_name, distance_covered) VALUES (1, 'Kevin Mayer', 8750), (2, 'Damian Warner', 8800), (3, 'Ashley Moloney', 8600), (4, 'Garrett Scantling', 8400), (5, 'Pierce Lepage', 8500);", "output": "SELECT athlete_name, AVG(distance_covered) as avg_distance_covered FROM decathlon_results GROUP BY athlete_name;"}
{"input": " \ub9c8\ub4dc\ub9ac\ub4dc \uc804\uae30 \uc5f4\ucc28\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE electric_trains (train_id INT, co2_emission FLOAT, city VARCHAR(50));", "output": "SELECT AVG(co2_emission) FROM electric_trains WHERE city = 'Madrid';"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub0b4 \ubaa8\ub4e0 \ub3c4\uc2dc\uc758 \ud3c9\uade0 \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \uae30\uc220 \ucc44\ud0dd \uc810\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE smart_cities (id INT, name VARCHAR(255), technology_adoption_score FLOAT);", "output": "SELECT AVG(technology_adoption_score) FROM smart_cities;"}
{"input": " '\ubd81\ub3d9\ucabd' \uc9c0\uc5ed\uc5d0\uc11c \ud3c9\uade0 \ud328\ud0a4\uc9c0 \uc911\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ucc3d\uace0\ub97c \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE warehouses (id INT, name TEXT, region TEXT); INSERT INTO warehouses (id, name, region) VALUES (1, 'Boston Warehouse', 'northeast'), (2, 'New York Warehouse', 'northeast'); CREATE TABLE packages (id INT, warehouse_id INT, weight FLOAT, state TEXT); INSERT INTO packages (id, warehouse_id, weight, state) VALUES (1, 1, 28.5, 'Massachusetts'), (2, 1, 23.3, 'New York'), (3, 2, 30.8, 'New York');", "output": "SELECT w.name FROM warehouses w JOIN (SELECT warehouse_id, MAX(avg_weight) as avg_weight FROM (SELECT warehouse_id, AVG(weight) as avg_weight FROM packages GROUP BY warehouse_id) sub) max_weight ON w.id = max_weight.warehouse_id WHERE w.region = 'northeast';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc640 \ud14d\uc0ac\uc2a4\uc758 \ucd1d \uac74\uc124 \ub178\ub3d9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Labor_Statistics (id INT, state VARCHAR(255), num_laborers INT); INSERT INTO Labor_Statistics (id, state, num_laborers) VALUES (1, 'California', 50000), (2, 'Texas', 45000), (3, 'New York', 40000);", "output": "SELECT SUM(num_laborers) FROM Labor_Statistics WHERE state IN ('California', 'Texas');"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \uc2dd\ubcc4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE volunteers_q2_2022 (id INT, name VARCHAR(50), volunteer_hours INT, volunteer_date DATE); INSERT INTO volunteers_q2_2022 (id, name, volunteer_hours, volunteer_date) VALUES (1, 'Mia Kim', 15, '2022-04-05'), (2, 'Ali Bailey', 20, '2022-04-05'), (3, 'Pablo Gonzales', 25, '2022-04-05'), (4, 'Mia Kim', 30, '2022-05-10'), (5, 'Ali Bailey', 35, '2022-05-10'), (6, 'Pablo Gonzales', 40, '2022-05-10');", "output": "SELECT name, SUM(volunteer_hours) as total_hours FROM volunteers_q2_2022 WHERE volunteer_date >= '2022-04-01' GROUP BY name ORDER BY total_hours DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ud574 \ucd5c\uc18c 5\ubc88\uc758 NBA \uacbd\uae30\ub97c \uad00\ub78c\ud55c \ud32c\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nba_fans (fan_id INT, name VARCHAR(50), age INT, games_attended INT); INSERT INTO nba_fans (fan_id, name, age, games_attended) VALUES (1, 'John Smith', 35, 6), (2, 'Maria Garcia', 28, 4), (3, 'James Kim', 40, 7), (4, 'Sarah Lee', 31, 3);", "output": "SELECT AVG(age) FROM nba_fans WHERE games_attended >= 5;"}
{"input": "\uc9c0\ub09c \uc8fc \uc21c \uc0ac\uc6a9\uc790 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ubd90\ube44\ub294 \uc9c0\ud558\ucca0\uc5ed \uc0c1\uc704 5\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE station_usage (station_name VARCHAR(255), user_id INT, usage_date DATE); INSERT INTO station_usage (station_name, user_id, usage_date) VALUES ('Times Square', 1, '2022-03-29'), ('Grand Central', 2, '2022-03-28'), ('Times Square', 3, '2022-03-27'), ('Union Station', 4, '2022-03-26'), ('Union Station', 5, '2022-03-25'), ('Times Square', 6, '2022-03-24'), ('Grand Central', 7, '2022-03-23');", "output": "SELECT station_name, COUNT(DISTINCT user_id) AS unique_users FROM station_usage WHERE usage_date >= DATEADD(day, -7, CURRENT_DATE) GROUP BY station_name ORDER BY unique_users DESC LIMIT 5"}
{"input": " \uac01 \uae30\ubd80\uc790\uc5d0 \ub300\ud574 \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548\uc758 \uae30\ubd80 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(255)); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount DECIMAL(10, 2));", "output": "SELECT DonorID, DonorName, AVG(DonationAmount) OVER (PARTITION BY DonorID ORDER BY DonationDate ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MovingAvg FROM Donors JOIN Donations ON Donors.DonorID = Donations.DonorID ORDER BY DonorID, DonationDate;"}
{"input": " \ucd1d \ub9e4\ucd9c \uae30\uc900 \uc0c1\uc704 3\ub300 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ud654\uc7a5\ud488 \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE brand (brand_id INT, brand_name VARCHAR(255), is_cruelty_free BOOLEAN, total_sales DECIMAL(10,2)); INSERT INTO brand (brand_id, brand_name, is_cruelty_free, total_sales) VALUES (1, 'Lush', true, 50000.00), (2, 'The Body Shop', true, 35000.00), (3, 'Estee Lauder', false, 80000.00);", "output": "SELECT brand_name, SUM(total_sales) as total_sales FROM brand WHERE is_cruelty_free = true GROUP BY brand_name ORDER BY total_sales DESC LIMIT 3;"}
{"input": " 'NY'\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0 \ub300\ud574 '2021\ub144'\uc5d0 \ucc98\ub9ac\ub41c \ubcf4\ud5d8 \uc99d\uad8c \ubc0f \uccad\uad6c \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PolicyData (PolicyID INT, PolicyholderID INT, IssueDate DATE); INSERT INTO PolicyData (PolicyID, PolicyholderID, IssueDate) VALUES (1, 1, '2021-01-01'); INSERT INTO PolicyData (PolicyID, PolicyholderID, IssueDate) VALUES (2, 2, '2021-02-15'); CREATE TABLE ClaimData (ClaimID INT, PolicyID INT, ClaimDate DATE); INSERT INTO ClaimData (ClaimID, PolicyID, ClaimDate) VALUES (1, 1, '2021-03-10'); INSERT INTO ClaimData (ClaimID, PolicyID, ClaimDate) VALUES (2, 2, '2021-04-20');", "output": "SELECT COUNT(DISTINCT PolicyData.PolicyID) AS Policies, COUNT(DISTINCT ClaimData.ClaimID) AS Claims FROM PolicyData JOIN ClaimData ON PolicyData.PolicyID = ClaimData.PolicyID WHERE YEAR(PolicyData.IssueDate) = 2021 AND PolicyData.PolicyholderID IN (SELECT PolicyholderID FROM Policyholders WHERE State = 'NY');"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uae00\ub8e8\ud150 \ud504\ub9ac \uc81c\ud488\uc774 \uba87 \ub2e8\uc704 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Dates (date DATE); CREATE TABLE Sales (sale_id INT, date DATE, product_id INT, quantity INT); CREATE TABLE Products (product_id INT, product_name VARCHAR(255), is_gluten_free BOOLEAN);", "output": "SELECT SUM(s.quantity) as total_quantity FROM Sales s JOIN Dates d ON s.date = d.date JOIN Products p ON s.product_id = p.product_id WHERE d.date BETWEEN '2022-01-01' AND '2022-03-31' AND p.is_gluten_free = TRUE;"}
{"input": " \uc9c0\ub09c \ub2ec \ud3d0\uc218 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad11\uc0b0 \uc791\uc5c5\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE WasteWater (MineID INT, Date DATE, Production INT); INSERT INTO WasteWater (MineID, Date, Production) VALUES (1, '2022-01-01', 500), (1, '2022-01-02', 550), (1, '2022-01-03', 600), (2, '2022-01-01', 700), (2, '2022-01-02', 750), (2, '2022-01-03', 800), (3, '2022-01-01', 900), (3, '2022-01-02', 950), (3, '2022-01-03', 1000), (4, '2022-01-01', 400), (4, '2022-01-02', 450), (4, '2022-01-03', 500);", "output": "SELECT MineID, SUM(Production) as Total_Production FROM WasteWater WHERE Date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY MineID ORDER BY Total_Production DESC;"}
{"input": " \uc815\ud655\ud558\uace0 \uc644\uc804\ud55c \ub370\uc774\ud130\ub85c \ub179\uc0c9 \uc5d0\ub108\uc9c0 \ubd80\ubb38 \uae30\uc5c5\uc758 \ub2e4\uc591\uc131 \uc9c0\ud45c \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE diversity_metrics (id INT, company_id INT, year INT, gender_distribution TEXT, racial_distribution TEXT); INSERT INTO diversity_metrics (id, company_id, year, gender_distribution, racial_distribution) VALUES (1, 1, 2020, '...', '...'); CREATE TABLE company (id INT, name TEXT, industry TEXT); INSERT INTO company (id, name, industry) VALUES (1, 'SunPower', 'Green Energy');", "output": "UPDATE diversity_metrics SET gender_distribution = '...', racial_distribution = '...' WHERE company_id IN (SELECT id FROM company WHERE industry = 'Green Energy');"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc0dd\uc0b0\ub418\ub294 \uc6b0\uc8fc\uc120\uc758 \ud3c9\uade0 \uc81c\uc870 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpacecraftManufacturing (id INT, company VARCHAR(255), country VARCHAR(255), cost FLOAT); INSERT INTO SpacecraftManufacturing (id, company, country, cost) VALUES (1, 'SpaceX', 'USA', 50000000), (2, 'Blue Origin', 'USA', 70000000), (3, 'Roscosmos', 'Russia', 30000000);", "output": "SELECT AVG(cost) FROM SpacecraftManufacturing WHERE country = 'USA';"}
{"input": " \uce90\ub098\ub2e4\uc758 \ubb38\ud654 \ud589\uc0ac\uac00 \ud3c9\uade0\uc801\uc73c\ub85c \uacbd\uc81c\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \uc5b4\ub290 \uc815\ub3c4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_id INT, country TEXT); INSERT INTO countries (country_id, country) VALUES (1, 'Canada'); CREATE TABLE cultural_events (event_id INT, country_id INT, economic_impact FLOAT); INSERT INTO cultural_events (event_id, country_id, economic_impact) VALUES (1, 1, 200.0), (2, 1, 250.0), (3, 1, 300.0);", "output": "SELECT AVG(economic_impact) FROM cultural_events WHERE country_id = (SELECT country_id FROM countries WHERE country = 'Canada');"}
{"input": " 2021\ub144 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c \ub17c\ubb38\uc740 \ud55c \ub2ec\uc5d0 \uba87 \ud3b8\uc774\ub098 \ubc1c\ud45c\ub410\ub098\uc694?", "context": "CREATE TABLE ResearchPapers (ID INT, Title TEXT, Author TEXT, PublicationDate DATE); INSERT INTO ResearchPapers (ID, Title, Author, PublicationDate) VALUES (1, 'Deep Learning for Autonomous Driving', 'John Doe', '2021-03-15'); INSERT INTO ResearchPapers (ID, Title, Author, PublicationDate) VALUES (2, 'Reinforcement Learning in Autonomous Vehicles', 'Jane Smith', '2021-07-22');", "output": "SELECT COUNT(*) FROM ResearchPapers WHERE YEAR(PublicationDate) = 2021 GROUP BY MONTH(PublicationDate);"}
{"input": " \uc9c0\ub09c \uc8fc \ud2b8\uc704\ud130\uc640 \uc778\uc2a4\ud0c0\uadf8\ub7a8\uc758 'LGBTQ+' \ucee4\ubba4\ub2c8\ud2f0 \uc0ac\uc6a9\uc790\uac00 \uc62c\ub9b0 \ucd1d \uac8c\uc2dc\ubb3c\uacfc \ub313\uae00 \uc218\ub97c \uc131\ubcc4\ubcc4\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (post_id INT, user_id INT, platform VARCHAR(20), post_text VARCHAR(100), post_date DATE); CREATE TABLE comments (comment_id INT, post_id INT, user_id INT, comment_text VARCHAR(100), comment_date DATE); CREATE TABLE user_profile (user_id INT, community VARCHAR(20), gender VARCHAR(10)); INSERT INTO posts VALUES (1, 1, 'Twitter', 'Hello World!', '2022-01-01'); INSERT INTO comments VALUES (1, 1, 2, 'Nice post!', '2022-01-02'); INSERT INTO user_profile VALUES (1, 'LGBTQ+', 'Female');", "output": "SELECT p.platform, u.gender, COUNT(DISTINCT p.post_id) as num_posts, COUNT(DISTINCT c.comment_id) as num_comments FROM posts p JOIN comments c ON p.post_id = c.post_id JOIN user_profile u ON p.user_id = u.user_id WHERE p.platform IN ('Twitter', 'Instagram') AND u.community = 'LGBTQ+' AND p.post_date >= DATEADD(week, -1, GETDATE()) GROUP BY p.platform, u.gender;"}
{"input": " 2020\ub144\uc5d0 '\ud638\uc8fc'\uc5d0\uc11c \ubc1c\uacac\ub41c \ud574\uc591 \uc0dd\ubb3c\uc740 \ubb34\uc5c7\uc774\uba70, 2015\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uadf8\uacf3\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc624\uc5fc \ud1b5\uc81c \uacc4\ud68d\uc774 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Species_3 (id INT, name VARCHAR(255), region VARCHAR(255), year INT); INSERT INTO Species_3 (id, name, region, year) VALUES (1, 'Kangaroo Fish', 'Australia', 2020); INSERT INTO Species_3 (id, name, region, year) VALUES (2, 'Blue-ringed Octopus', 'Australia', 2020); CREATE TABLE Initiatives_3 (id INT, initiative VARCHAR(255), region VARCHAR(255), start_year INT, end_year INT); INSERT INTO Initiatives_3 (id, initiative, region, start_year, end_year) VALUES (1, 'Coral Reef Restoration', 'Australia', 2015, 2020); INSERT INTO Initiatives_3 (id, initiative, region, start_year, end_year) VALUES (2, 'Marine Debris Removal', 'Australia', 2016, 2020); INSERT INTO Initiatives_3 (id, initiative, region, start_year, end_year) VALUES (3, 'Coastal Cleanups', 'Australia', 2017, 2020);", "output": "SELECT name FROM Species_3 WHERE region = 'Australia' AND year = 2020 UNION SELECT initiative FROM Initiatives_3 WHERE region = 'Australia' AND start_year BETWEEN 2015 AND 2020;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548\uc758 \ucd1d \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0 \uc218\ub97c \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE incidents_monthly (id INT, incident_month DATE, incident_count INT); INSERT INTO incidents_monthly (id, incident_month, incident_count) VALUES (1, '2021-01-01', 150); INSERT INTO incidents_monthly (id, incident_month, incident_count) VALUES (2, '2021-02-01', 200);", "output": "SELECT DATE_FORMAT(incident_month, '%Y-%m') as month, SUM(incident_count) FROM incidents_monthly WHERE incident_month >= (SELECT DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)) GROUP BY month;"}
{"input": " \ub2e4\uc591\ud55c \ub18d\uc7a5\uc758 \uac01 \uc5b4\uc885\uc5d0 \ub300\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \ucd5c\ub300 \uc218\uc6a9 \ubc00\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farm ( FarmID INT, FarmName VARCHAR(255) ); CREATE TABLE FishSpecies ( SpeciesID INT, SpeciesName VARCHAR(255), MaxDensity DECIMAL(10,2) ); CREATE TABLE Stock ( StockID INT, FarmID INT, SpeciesID INT, StockDensity DECIMAL(10,2), StockDate DATE ); INSERT INTO Farm (FarmID, FarmName) VALUES (1, 'Farm A'), (2, 'Farm B'), (3, 'Farm C'); INSERT INTO FishSpecies (SpeciesID, SpeciesName, MaxDensity) VALUES (1, 'Tilapia', 3.5), (2, 'Salmon', 2.7), (3, 'Catfish', 4.2); INSERT INTO Stock (StockID, FarmID, SpeciesID, StockDensity, StockDate) VALUES (1, 1, 1, 1.5, '2022-01-01'), (2, 1, 2, 2.3, '2022-01-02'), (3, 2, 1, 3.0, '2022-01-03'), (4, 2, 3, 4.0, '2022-01-04'), (5, 3, 1, 3.3, '2022-01-05');", "output": "SELECT f.FarmName, fs.SpeciesName, MAX(StockDensity) OVER (PARTITION BY f.FarmName, fs.SpeciesID) as MaxSustainableDensity FROM Stock JOIN Farm f ON Stock.FarmID = f.FarmID JOIN FishSpecies fs ON Stock.SpeciesID = fs.SpeciesID WHERE StockDensity <= MaxDensity;"}
{"input": "2022\ub144 \uc911\ub3d9 \ubc29\uc0b0\uc0ac\uc5c5 \uc9c0\uc5f0 \ucd5c\ub300 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE defense_projects (id INT PRIMARY KEY, region VARCHAR(50), start_date DATE, end_date DATE, delay_duration INT); INSERT INTO defense_projects (id, region, start_date, end_date, delay_duration) VALUES (1, 'Middle East', '2022-01-01', '2022-06-30', 30), (2, 'Middle East', '2022-04-01', '2022-12-31', 180), (3, 'Middle East', '2022-07-01', '2023-01-31', 120);", "output": "SELECT MAX(delay_duration) FROM defense_projects WHERE region = 'Middle East' AND year = 2022;"}
{"input": " \uc0ac\uc6b0\uc2a4\uc774\uc2a4\ud2b8 \ub514\ube44\uc804 \ud300\uc774 \uce58\ub978 \ud648 \uacbd\uae30\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(50), division VARCHAR(50), home_games INT);", "output": "SELECT SUM(teams.home_games) FROM teams WHERE teams.division = 'Southeast';"}
{"input": " \uc2f1\uac00\ud3ec\ub974\uc758 \uc804\uae30\ud0dd\uc2dc \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE taxis (taxi_id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO taxis (taxi_id, type, city) VALUES (1, 'Electric Taxi', 'Singapore'), (2, 'Taxi', 'Singapore'), (3, 'Electric Taxi', 'Singapore'), (4, 'Taxi', 'Singapore');", "output": "SELECT city, COUNT(*) * 100.0 / SUM(city = 'Singapore') OVER () AS percentage_etaxis FROM taxis WHERE type = 'Electric Taxi';"}
{"input": " 2021\uc2dc\uc98c \uac01 \ud300\uc758 \ud648\ud300 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE teams (id INT, name VARCHAR(255)); INSERT INTO teams (id, name) VALUES (1, 'TeamA'), (2, 'TeamB'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT); CREATE VIEW home_team_scores AS SELECT id, home_team_id, home_team_score FROM games;", "output": "SELECT t.name, AVG(h.home_team_score) as avg_score FROM home_team_scores h JOIN teams t ON h.home_team_id = t.id WHERE h.id IN (SELECT id FROM games WHERE game_date BETWEEN '2021-01-01' AND '2021-12-31') GROUP BY t.name;"}
{"input": " \uc9c0\ub09c \uc2dc\uc98c \uac01 \ud300\uc758 \ucd1d \uc2b9\ub9ac \uacbd\uae30 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_name VARCHAR(50), team_city VARCHAR(50), games_won INT); INSERT INTO teams (team_name, team_city, games_won) VALUES ('Red Sox', 'Boston', 93), ('Yankees', 'New York', 92);", "output": "SELECT team_name, SUM(games_won) as total_games_won FROM teams WHERE game_date >= DATEADD(year, -1, GETDATE()) GROUP BY team_name;"}
{"input": " donor_id\ub97c \uae30\uc900\uc73c\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uad50\uc721 \ubd80\ubb38\uc758 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\ubd80\ud558\uc9c0 \uc54a\uc740 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, name TEXT);CREATE TABLE projects (project_id INT, name TEXT, sector TEXT);CREATE TABLE donations (donation_id INT, donor_id INT, project_id INT, amount FLOAT);INSERT INTO donors VALUES (1, 'Eva Green'), (2, 'Frank Red'), (3, 'Grace Blue'), (4, 'Harry Yellow');INSERT INTO projects VALUES (1, 'Library', 'education'), (2, 'Science Lab', 'education'), (3, 'Art Studio', 'arts'), (4, 'Music Room', 'arts');INSERT INTO donations VALUES (1, 1, 3, 1000.00), (2, 1, 4, 2000.00), (3, 2, 1, 3000.00), (4, 2, 2, 4000.00), (5, 3, 3, 5000.00), (6, 3, 4, 6000.00), (7, 4, 1, 7000.00), (8, 4, 2, 8000.00);", "output": "SELECT donors.donor_id, donors.name FROM donors LEFT JOIN donations ON donors.donor_id = donations.donor_id LEFT JOIN projects ON donations.project_id = projects.project_id WHERE projects.sector IS NULL OR projects.sector != 'education' GROUP BY donors.donor_id ORDER BY donors.donor_id ASC;"}
{"input": " \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\uc640 \ud574\ub2f9 \uad6d\uac00\uc758 \uc7ac\ud65c\uc6a9\ub960\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE country_waste (country VARCHAR(50), waste_generation INT); INSERT INTO country_waste (country, waste_generation) VALUES ('USA', 5000), ('China', 7000), ('India', 3000); CREATE TABLE country_recycling (country VARCHAR(50), recycling_rate DECIMAL(5,2)); INSERT INTO country_recycling (country, recycling_rate) VALUES ('USA', 0.35), ('China', 0.20), ('India', 0.15);", "output": "SELECT cw.country, cw.waste_generation, cr.recycling_rate FROM (SELECT country, waste_generation, ROW_NUMBER() OVER (ORDER BY waste_generation DESC) AS rank FROM country_waste) cw JOIN country_recycling cr ON cw.country = cr.country WHERE rank <= 3;"}
{"input": " \uc5ec\uc131 \uc790\uc6d0\ubd09\uc0ac\uc790\ubcf4\ub2e4 \ub0a8\uc131 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub354 \ub9ce\uc740 \uc870\uc9c1\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE gender (vol_id INT, vol_name VARCHAR(255), gender VARCHAR(10)); INSERT INTO gender (vol_id, vol_name, gender) VALUES (1, 'John Doe', 'Male'), (2, 'Jane Smith', 'Female'), (3, 'Mike Johnson', 'Male'), (4, 'Alice Davis', 'Female'), (5, 'Bob Brown', 'Male'), (6, 'Charlie Green', 'Female');", "output": "SELECT organization.org_name, COUNT(CASE WHEN gender.gender = 'Male' THEN 1 END) as num_male, COUNT(CASE WHEN gender.gender = 'Female' THEN 1 END) as num_female FROM organization JOIN volunteer ON organization.org_id = volunteer.org_id JOIN gender ON volunteer.vol_id = gender.vol_id GROUP BY organization.org_name HAVING num_male > num_female;"}
{"input": " 2021\ub144 \ud1f4\uc5ed \uad70\uc778 \uc2e4\uc5c5\ub960\uacfc \uc2e4\uc5c5\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc8fc?", "context": "CREATE TABLE veteran_employment (state VARCHAR(100), year INT, unemployment_rate DECIMAL(5, 2)); INSERT INTO veteran_employment (state, year, unemployment_rate) VALUES ('California', 2021, 0.06), ('Texas', 2021, 0.05), ('Florida', 2021, 0.07), ('New York', 2021, 0.08), ('Pennsylvania', 2021, 0.09);", "output": "SELECT state, unemployment_rate FROM veteran_employment WHERE year = 2021 ORDER BY unemployment_rate DESC LIMIT 3;"}
{"input": " CityA\uc640 CityB\uc758 \ubd80\ub3d9\uc0b0 \uac04\uc758 \uacf5\ud1b5 \uacf5\ub3d9 \uc18c\uc720\uc790\ub97c \ucc3e\uc73c\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE property_coowners (property_id INT, coowner VARCHAR(255)); INSERT INTO property_coowners (property_id, coowner) VALUES (1, 'John Doe'), (1, 'Jane Smith'), (2, 'Jane Smith'), (2, 'Mike Johnson'), (3, 'John Doe');", "output": "SELECT pc1.coowner FROM property_coowners pc1 JOIN property_coowners pc2 ON pc1.coowner = pc2.coowner WHERE pc1.property_id IN (SELECT property_id FROM property_coowners WHERE city = 'CityA') AND pc2.property_id IN (SELECT property_id FROM property_coowners WHERE city = 'CityB');"}
{"input": " \ud0c0\uc784\uc2a4\ud0ec\ud504\uc5d0 \ub530\ub77c \uc815\ub82c\ub41c \uac01 \ubcc0\ud638\uc778\uc758 \uc0ac\uac74 \uc774\ubca4\ud2b8 \uc21c\uc11c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE defender_events (id INT, defender_id INT, event_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO defender_events (id, defender_id, event_type, timestamp) VALUES (1, 1, 'Consultation', '2022-01-01 10:00:00'); INSERT INTO defender_events (id, defender_id, event_type, timestamp) VALUES (2, 1, 'Representation', '2022-01-02 14:00:00');", "output": "SELECT defender_id, event_type, timestamp, ROW_NUMBER() OVER(PARTITION BY defender_id ORDER BY timestamp) as sequence FROM defender_events;"}
{"input": " \uc774\ub3d9_\uc548\uc804_\ub4f1\uae09", "context": "CREATE TABLE workplaces (id INT, name TEXT, safety_rating INT, union_sector TEXT); INSERT INTO workplaces (id, name, safety_rating, union_sector) VALUES (1, 'ABC Company', 88, 'Manufacturing'); INSERT INTO workplaces (id, name, safety_rating, union_sector) VALUES (2, 'XYZ Corporation', 92, 'Transportation');", "output": "SELECT *, LAG(safety_rating) OVER (PARTITION BY union_sector ORDER BY id) as previous_rating FROM workplaces;"}
{"input": " \ubaa8\ub4e0 \ud654\uc131 \uc791\uc804 \uc784\ubb34\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mars_missions_status (mission VARCHAR(50), year INTEGER, status VARCHAR(50)); INSERT INTO mars_missions_status (mission, year, status) VALUES ('Mars Pathfinder', 1997, 'Completed'), ('Mars Global Surveyor', 1997, 'Completed'), ('Nozomi', 1998, 'Failed'), ('Mars Climate Orbiter', 1999, 'Failed'), ('Mars Polar Lander', 1999, 'Failed'), ('Mars Odyssey', 2001, 'Operational'), ('Mars Express', 2003, 'Operational'), ('Beagle 2', 2003, 'Failed'), ('Mars Reconnaissance Orbiter', 2006, 'Operational'), ('Phoenix', 2008, 'Completed'), ('Mars Science Laboratory', 2012, 'Operational'), ('Mars Atmosphere and Volatile Evolution', 2013, 'Operational'), ('MAVEN', 2014, 'Operational'), ('ExoMars Trace Gas Orbiter', 2016, 'Operational'), ('InSight', 2018, 'Operational'), ('Hope Mars Mission', 2021, 'Operational'), ('Tianwen-1', 2021, 'Operational');", "output": "SELECT mission FROM mars_missions_status WHERE status = 'Operational';"}
{"input": "\ud504\ub791\uc2a4\uc758 \uac01 \uc720\uc801\uc9c0\uc5d0 \ub300\ud55c \ubc29\ubb38\uc790 \uc218\uc758 \ud569\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE heritage_sites_france (id INT, country VARCHAR(50), name VARCHAR(100), visitor_count INT); INSERT INTO heritage_sites_france (id, country, name, visitor_count) VALUES (1, 'France', 'Site A', 1000), (2, 'France', 'Site B', 2000), (3, 'France', 'Site C', 3000);", "output": "SELECT name, SUM(visitor_count) OVER (PARTITION BY country) FROM heritage_sites_france WHERE country = 'France';"}
{"input": " 2021\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc644\ub8cc\ub418\ub294 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_storage (id INT, project TEXT, location TEXT, year INT, capacity FLOAT, status TEXT); INSERT INTO energy_storage (id, project, location, year, capacity, status) VALUES (1, 'Los Angeles Energy Storage', 'California', 2021, 50.0, 'completed'), (2, 'San Diego Energy Storage', 'California', 2021, 75.0, 'in progress');", "output": "SELECT MAX(capacity) as max_capacity, MIN(capacity) as min_capacity FROM energy_storage WHERE location = 'California' AND year = 2021 AND status = 'completed';"}
{"input": " \ub3d9\ub0a8\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uc7a5\uc560 \uc778\uc2dd \uad50\uc721\uc744 \ubc1b\uc740 \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE employee_training (region VARCHAR(20), training VARCHAR(30), participants INT); INSERT INTO employee_training (region, training, participants) VALUES ('Southeast', 'Disability Awareness', 150); INSERT INTO employee_training (region, training, participants) VALUES ('Southeast', 'Disability Awareness', 100);", "output": "SELECT (SUM(participants) / (SELECT SUM(participants) FROM employee_training WHERE region = 'Southeast')) * 100 FROM employee_training WHERE region = 'Southeast' AND training = 'Disability Awareness';"}
{"input": "\uc568\ubc94\uc774 \uc5c6\ub294 \uc544\ud2f0\uc2a4\ud2b8 'John Smith'\ub97c \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY AUTO_INCREMENT, Name VARCHAR(100));CREATE TABLE Albums (AlbumID INT PRIMARY KEY AUTO_INCREMENT, Title VARCHAR(100), ArtistID INT, FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID));", "output": "DELETE FROM Artists WHERE ArtistID NOT IN (SELECT ArtistID FROM Albums);"}
{"input": " 2020\ub144 \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uad6d\uac00\ubcc4 \uc0ac\uc774\ubc84\ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00?", "context": "CREATE TABLE country (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE region (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE incident (id INT PRIMARY KEY, country_id INT, region_id INT, reported_date DATE); INSERT INTO country (id, name) VALUES (1, 'China'), (2, 'Japan'), (3, 'India'); INSERT INTO region (id, name) VALUES (1, 'Asia-Pacific'); INSERT INTO incident (id, country_id, region_id) VALUES (1, 1, 1), (2, 2, 1), (3, 3, 1);", "output": "SELECT c.name, COUNT(i.id) as total_incidents FROM country c INNER JOIN incident i ON c.id = i.country_id INNER JOIN region r ON i.region_id = r.id WHERE r.name = 'Asia-Pacific' AND YEAR(i.reported_date) = 2020 GROUP BY c.name;"}
{"input": " \uad6d\ubc29\uc0ac\uc5c5\uc758 \uac00\uc7a5 \ube60\ub978 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc778\uac00\uc694?", "context": "CREATE TABLE defense_projects_2 (project_id INT, project_name VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO defense_projects_2 (project_id, project_name, start_date, end_date) VALUES (1, 'Joint Strike Fighter', '2001-01-01', '2025-01-01'), (2, 'THAAD Missile Defense', '2005-01-01', '2027-01-01'), (3, 'Future Vertical Lift', '2020-01-01', '2030-01-01');", "output": "SELECT MIN(start_date) as earliest_start_date FROM defense_projects_2;"}
{"input": " '\ud050\ube44\uc998' \uc2dc\ub300\uc758 \ubaa8\ub4e0 \uc608\uc220\uac00\uc640 \uadf8\ub4e4\uc758 \uc791\ud488 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Artworks (id INT, artist_name VARCHAR(100), period VARCHAR(50), artwork_name VARCHAR(100)); INSERT INTO Artworks (id, artist_name, period, artwork_name) VALUES (1, 'Pablo Picasso', 'Cubism', 'Guernica'); INSERT INTO Artworks (id, artist_name, period, artwork_name) VALUES (2, 'Georges Braque', 'Cubism', 'Woman with a Guitar'); INSERT INTO Artworks (id, artist_name, period, artwork_name) VALUES (3, 'Fernand L\u00e9ger', 'Cubism', 'The Seasons');", "output": "SELECT artist_name, COUNT(*) as artwork_count FROM Artworks WHERE period = 'Cubism' GROUP BY artist_name;"}
{"input": " \uc544\ud2f0\uc2a4\ud2b8 '\ubc14\uc2a4\ud0a4\uc544'\uc758 \uc774\ubca4\ud2b8\uc5d0 \uc18c\uc694\ub41c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, ArtistName VARCHAR(255)); INSERT INTO Artists (ArtistID, ArtistName) VALUES (1, 'Basquiat'); CREATE TABLE Events (EventID INT PRIMARY KEY, EventName VARCHAR(255), Attendance INT, ArtistID INT, FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID)); INSERT INTO Events (EventID, EventName, Attendance, ArtistID) VALUES (1, 'Basquiat Exhibit', 900, 1); CREATE TABLE Funding (FundingID INT PRIMARY KEY, FundingSource VARCHAR(255), Amount DECIMAL(5,2), EventID INT, FOREIGN KEY (EventID) REFERENCES Events(EventID)); INSERT INTO Funding (FundingID, FundingSource, Amount, EventID) VALUES (1, 'Government Grant', 500.00, 1), (2, 'Private Donation', 400.00, 1), (3, 'Corporate Sponsorship', 100.00, 1);", "output": "SELECT SUM(Funding.Amount) FROM Funding INNER JOIN Events ON Funding.EventID = Events.EventID INNER JOIN Artists ON Events.ArtistID = Artists.ArtistID WHERE Artists.ArtistName = 'Basquiat';"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc5d0 \uc218\uc5ec\ub41c \uae30\ud6c4 \uad00\ub828 \ubcf4\uc870\uae08 \uc218\uc640 \ucd1d \uac00\uce58\ub97c \ud45c\uc2dc\ud569\ub2c8\uae4c?", "context": "CREATE TABLE grants (country VARCHAR(50), year INT, grant_amount INT, grant_type VARCHAR(20)); INSERT INTO grants (country, year, grant_amount, grant_type) VALUES ('Kenya', 2015, 50000, 'climate'), ('Kenya', 2016, 55000, 'climate'), ('Nigeria', 2015, 60000, 'climate'), ('Nigeria', 2016, 65000, 'climate'), ('Egypt', 2015, 40000, 'climate'), ('Egypt', 2016, 45000, 'climate');", "output": "SELECT country, COUNT(grant_amount) as num_grants, SUM(grant_amount) as total_grant_value FROM grants WHERE country IN ('Kenya', 'Nigeria', 'Egypt') AND grant_type = 'climate' AND year BETWEEN 2015 AND 2020 GROUP BY country;"}
{"input": " \uc9c0\ub09c \ud55c \uc8fc \ub3d9\uc548 \uac01 \ud68c\uc6d0\uc774 \uc774\ub3d9\ud55c \ucd5c\ub300 \uac70\ub9ac\ub294 \uc5f0\ub839\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE member_age_data(id INT, age INT, last_workout_date DATE); INSERT INTO member_age_data(id, age, last_workout_date) VALUES (1,30,'2022-01-14'),(2,40,'2022-02-15'),(3,25,'2022-02-16'),(4,50,'2022-02-17'),(5,35,'2022-02-18'),(6,45,'2022-02-19'),(7,28,'2022-02-20'),(8,55,'2022-02-21'),(9,32,'2022-02-22'),(10,22,'2022-02-23'),(11,29,'2022-02-24'),(12,52,'2022-02-25'); CREATE TABLE workout_distance(member_id INT, distance INT, workout_date DATE); INSERT INTO workout_distance(member_id, distance, workout_date) VALUES (1,5,'2022-01-14'),(2,7,'2022-02-15'),(3,6,'2022-02-16'),(4,8,'2022-02-17'),(5,9,'2022-02-18'),(6,10,'2022-02-19'),(7,11,'2022-02-20'),(8,12,'2022-02-21'),(9,13,'2022-02-22'),(10,14,'2022-02-23'),(11,15,'2022-02-24'),(12,16,'2022-02-25');", "output": "SELECT age, MAX(distance) FROM (SELECT member_id, age, distance FROM member_age_data JOIN workout_distance ON member_age_data.id = workout_distance.member_id WHERE workout_distance.workout_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY member_id, age) subquery GROUP BY age;"}
{"input": " \uc720\ub7fd \ud50c\ub808\uc774\uc5b4\uc758 RPG \uac8c\uc784 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id int, age int, gender varchar(10), country varchar(20)); INSERT INTO players (player_id, age, gender, country) VALUES (1, 25, 'Male', 'Germany'), (2, 30, 'Female', 'France'), (3, 22, 'Male', 'Spain'), (4, 35, 'Female', 'Italy'); CREATE TABLE game_sessions (session_id int, player_id int, game_name varchar(20), game_type varchar(10), duration int); INSERT INTO game_sessions (session_id, player_id, game_name, game_type, duration) VALUES (1, 1, 'RPG Game', 'Non-VR', 60), (2, 1, 'Shooter Game', 'VR', 90), (3, 2, 'Strategy Game', 'Non-VR', 120), (4, 3, 'Action Game', 'Non-VR', 180), (5, 4, 'RPG Game', 'Non-VR', 250); CREATE TABLE game_catalog (game_name varchar(20), game_type varchar(10)); INSERT INTO game_catalog (game_name, game_type) VALUES ('RPG Game', 'Non-VR'), ('Shooter Game', 'VR'), ('Strategy Game', 'Non-VR'), ('Action Game', 'Non-VR');", "output": "SELECT SUM(game_sessions.duration) FROM players INNER JOIN game_sessions ON players.player_id = game_sessions.player_id INNER JOIN game_catalog ON game_sessions.game_name = game_catalog.game_name WHERE players.country LIKE 'Europe%' AND game_catalog.game_type = 'RPG';"}
{"input": " \uad6d\uc81c \uc6b0\uc8fc \uc815\uac70\uc7a5\uc758 \ud3c9\uade0 \uada4\ub3c4 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_objects (name TEXT, orbital_velocity_km_s INTEGER); INSERT INTO space_objects (name, orbital_velocity_km_s) VALUES ('ISS', 27600), ('Hubble Space Telescope', 28600), ('Moon', 1680);", "output": "SELECT AVG(orbital_velocity_km_s) FROM space_objects WHERE name = 'ISS';"}
{"input": " \uc2dc\uac01 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc744 \uc704\ud55c \ud559\uc0dd\ub2f9 \uc7a5\uc560 \ud3b8\uc758 \uc2dc\uc124\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accommodations (id INT, student_id INT, type TEXT, cost INT);   INSERT INTO accommodations (id, student_id, type, cost) VALUES (1, 1, 'screen reader', 200);   INSERT INTO accommodations (id, student_id, type, cost) VALUES (2, 2, 'note taker', 500);", "output": "SELECT AVG(cost) FROM accommodations WHERE type IN ('screen reader', 'braille display', 'large print materials') GROUP BY student_id;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc758 \ubaa8\ub4e0 \uc57d\uad6d\uc5d0\uc11c Blue Dream\uacfc Sour Diesel \ud488\uc885 \uac04\uc758 \ud3c9\uade0 \uac00\uaca9 \ucc28\uc774\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE strains (id INT, name VARCHAR(255)); INSERT INTO strains (id, name) VALUES (1, 'Blue Dream'), (2, 'Sour Diesel'); CREATE TABLE prices (id INT, strain_id INT, dispensary_id INT, price DECIMAL(10, 2));", "output": "SELECT AVG(p1.price - p2.price) as price_difference FROM strains s1 INNER JOIN prices p1 ON s1.id = p1.strain_id INNER JOIN strains s2 ON s2.name = 'Sour Diesel' INNER JOIN prices p2 ON s2.id = p2.strain_id AND p1.dispensary_id = p2.dispensary_id WHERE s1.name = 'Blue Dream';"}
{"input": " '\uc544\uc2dc\uc544'\uc758 \ubaa8\ub4e0 \ud56d\uad6c\uc640 \ud574\ub2f9 \uad6d\uac00, \ucde8\uae09\ub418\ub294 '\ud654\ud559\ubb3c\uc9c8'\uc758 \ucd1d \uc911\ub7c9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE port(port_id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE handling(handling_id INT, port_id INT, cargo_id INT, quantity INT); CREATE TABLE cargo(cargo_id INT, cargo_type VARCHAR(255)); INSERT INTO port VALUES (1, 'Hong Kong', 'China'), (2, 'Singapore', 'Singapore'), (3, 'Dubai', 'United Arab Emirates'); INSERT INTO handling VALUES (1, 1, 1, 4000), (2, 1, 2, 3000), (3, 2, 1, 5000), (4, 3, 2, 6000); INSERT INTO cargo VALUES (1, 'Chemicals'), (2, 'Machinery');", "output": "SELECT p.name AS port_name, p.country, SUM(h.quantity) as total_weight FROM port p JOIN handling h ON p.port_id = h.port_id JOIN cargo c ON h.cargo_id = c.cargo_id WHERE p.country = 'China' AND c.cargo_type = 'Chemicals' GROUP BY p.port_id;"}
{"input": " '\uace0\ub300 \ubb38\uba85' \uc804\uc2dc \uad00\ub78c\uac1d\uc758 \uc131\ubcc4 \ube44\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Exhibitions (exhibition_id INT, exhibition_name VARCHAR(255)); INSERT INTO Exhibitions (exhibition_id, exhibition_name) VALUES (1, 'Ancient Civilizations'); CREATE TABLE Visitors (visitor_id INT, exhibition_id INT, age INT, gender VARCHAR(50)); INSERT INTO Visitors (visitor_id, exhibition_id, age, gender) VALUES (1, 1, 45, 'Female'), (2, 1, 35, 'Male'), (3, 1, 42, 'Female'), (4, 1, 30, 'Male');", "output": "SELECT gender, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Visitors WHERE exhibition_id = 1)) AS percentage FROM Visitors WHERE exhibition_id = 1 GROUP BY gender;"}
{"input": " 2021\ub144 1\uc6d4 \uc774\ud6c4 \uc560\ub9ac\uc870\ub098 \uc57d\uad6d\uc5d0\uc11c \uc218\ub7c9\uc774 0\uc778 \uac70\ub798 \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE AZDispensaries (DispensaryID INT, Name VARCHAR(100), Location VARCHAR(100)); CREATE TABLE AZTransactions (TransactionID INT, DispensaryID INT, QuantitySold INT, TransactionDate DATE);", "output": "DELETE FROM AZTransactions WHERE QuantitySold = 0 AND DispensaryID IN (SELECT DispensaryID FROM AZDispensaries WHERE State = 'Arizona') AND TransactionDate >= '2021-01-01';"}
{"input": " 2023\ub144 \uc624\ud074\ub79c\ub4dc\ud56d\uc5d0\uc11c \uc77c\ubcf8\uc73c\ub85c\uc758 \uc120\uc801\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \ud654\ubb3c \uae30\ub85d \uc0bd\uc785", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(255), country VARCHAR(255)); INSERT INTO ports VALUES (1, 'Port of Shanghai', 'China'); CREATE TABLE cargo (cargo_id INT, port_id INT, weight FLOAT, handling_date DATE);", "output": "INSERT INTO cargo (cargo_id, port_id, weight, handling_date) VALUES (1001, (SELECT port_id FROM ports WHERE port_name = 'Port of Oakland'), 6000, '2023-02-14'), (1002, (SELECT port_id FROM ports WHERE country = 'Japan'), 5500, '2023-02-16');"}
{"input": " \uac01 \uad6d\uac00\ubcc4\ub85c \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc694\uc18c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE production (id INT, country VARCHAR(255), element VARCHAR(255), quantity INT); INSERT INTO production (id, country, element, quantity) VALUES (1, 'China', 'Neodymium', 12000), (2, 'China', 'Dysprosium', 1000), (3, 'USA', 'Neodymium', 4000), (4, 'USA', 'Dysprosium', 800), (5, 'Australia', 'Neodymium', 3000), (6, 'Australia', 'Dysprosium', 500);", "output": "SELECT country, element, quantity FROM (SELECT country, element, quantity, RANK() OVER (PARTITION BY country ORDER BY quantity DESC) as rnk FROM production) as ranked WHERE rnk = 1;"}
{"input": " \uac01 \ubc15\ubb3c\uad00\uc758 \uae30\ud68d\uc804\uc2dc \ud3c9\uade0 \uad00\ub78c\uac1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE museums (id INT, name VARCHAR(255), city VARCHAR(255));CREATE TABLE exhibitions (id INT, title VARCHAR(255), start_date DATE, end_date DATE, museum_id INT);CREATE TABLE attendance (id INT, exhibition_id INT, date DATE, attendees INT);", "output": "SELECT m.name, AVG(a.attendees) as avg_attendance FROM museums m JOIN exhibitions e ON m.id = e.museum_id JOIN attendance a ON e.id = a.exhibition_id WHERE e.type = 'temporary' GROUP BY m.name;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ud574\uc591 \uc0dd\ubb3c \uc218\uc758 \ubcc0\ud654\ub97c \uac10\uc9c0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SpeciesCountOverTime (ID INT, Species VARCHAR(50), Count INT, TimeStamp DATETIME); INSERT INTO SpeciesCountOverTime (ID, Species, Count, TimeStamp) VALUES (1, 'Starfish', 300, '2020-01-01 10:00:00'), (2, 'Dolphin', 250, '2020-01-02 10:00:00'), (3, 'Shark', 400, '2020-01-03 10:00:00'), (4, 'Starfish', 350, '2020-01-04 10:00:00');", "output": "SELECT Species, Count, TimeStamp, LAG(Count) OVER (PARTITION BY Species ORDER BY TimeStamp) as PreviousCount FROM SpeciesCountOverTime;"}
{"input": " \ubd81\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uc120\ubc15\uc744 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessels (id INT, name VARCHAR(50), type VARCHAR(50), region VARCHAR(50), avg_speed DECIMAL(5,2));", "output": "SELECT type, AVG(avg_speed) FROM vessels WHERE region = 'North Pacific' GROUP BY type;"}
{"input": " \ub2e8\uc77c \uac8c\uc784\uc5d0\uc11c \uc120\uc218\uac00 \ub4dd\uc810\ud55c \ucd5c\ub300 \uace8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE game_stats (id INT, player TEXT, goals INT); INSERT INTO game_stats (id, player, goals) VALUES (1, 'Pele', 7), (2, 'Diego', 6), (3, 'Ronaldo', 5);", "output": "SELECT MAX(goals) FROM game_stats;"}
{"input": " \uc800\uc790\uc758 \ucd9c\uc2e0 \uad6d\uac00\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131 \uc5f0\uad6c \ub17c\ubb38\uc758 \ud3c9\uade0 \uc778\uc6a9 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_fairness_citations (id INT, paper_name VARCHAR(50), citations INT, author_country VARCHAR(50)); INSERT INTO ai_fairness_citations (id, paper_name, citations, author_country) VALUES (1, 'Fairness in AI Systems', 100, 'United States'), (2, 'Bias Mitigation Techniques', 80, 'India'), (3, 'Exploring Fairness in AI Algorithms', 120, 'Canada');", "output": "SELECT author_country, AVG(citations) FROM ai_fairness_citations GROUP BY author_country;"}
{"input": "\ud3c9\uade0 \ucc38\uc11d \uc5f0\ub839\uc774 \uac00\uc7a5 \ub0ae\uc740 \ud504\ub85c\uadf8\ub7a8\uc744 \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE ProgramAttendance (program_name VARCHAR(255), attendee_age INT, attendee_gender VARCHAR(50)); INSERT INTO ProgramAttendance (program_name, attendee_age, attendee_gender) VALUES ('Art Workshops', 25), ('Dance Classes', 30), ('Music Lessons', 35), ('Theater Workshops', 20);", "output": "SELECT program_name, AVG(attendee_age) FROM ProgramAttendance GROUP BY program_name ORDER BY AVG(attendee_age) LIMIT 1;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE VIEW Community_Education AS SELECT 'Future_Guardians' AS program, 14000 AS budget UNION SELECT 'Earth_Stewards', 16000;", "output": "SELECT SUM(budget) FROM Community_Education;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uce5c\ud658\uacbd \uc778\uc99d \uac74\ubb3c \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE green_buildings (building_id INT, city VARCHAR(50), state VARCHAR(20), green_certified BOOLEAN); INSERT INTO green_buildings (building_id, city, state, green_certified) VALUES (1, 'San Francisco', 'CA', TRUE), (2, 'Los Angeles', 'CA', TRUE), (3, 'New York', 'NY', TRUE), (4, 'Seattle', 'WA', FALSE), (5, 'Austin', 'TX', TRUE);", "output": "SELECT city, state, COUNT(*) AS num_green_buildings, RANK() OVER (PARTITION BY state ORDER BY COUNT(*) DESC) AS rank FROM green_buildings WHERE green_certified = TRUE GROUP BY city, state HAVING rank <= 3;"}
{"input": " 2017\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \uc778\ub3c4\uc758 \ud658\uacbd \uc601\ud5a5 \ud3c9\uac00 \uce21\uba74\uc5d0\uc11c \uc0c1\uc704 2\uac1c \uad11\uc0b0 \ud68c\uc0ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE IndianCompanyEnvironmentalImpact (year INT, company TEXT, country TEXT, impact_assessment_score INT); INSERT INTO IndianCompanyEnvironmentalImpact (year, company, country, impact_assessment_score) VALUES (2017, 'ABC Mining', 'India', 75), (2018, 'ABC Mining', 'India', 80), (2019, 'ABC Mining', 'India', 85), (2017, 'XYZ Mining', 'India', 80), (2018, 'XYZ Mining', 'India', 85), (2019, 'XYZ Mining', 'India', 90);", "output": "SELECT context.company, SUM(context.impact_assessment_score) as total_impact_score FROM IndianCompanyEnvironmentalImpact context WHERE context.country = 'India' AND context.year BETWEEN 2017 AND 2019 GROUP BY context.company ORDER BY total_impact_score DESC LIMIT 2;"}
{"input": " 1\ud3b8 \uc774\uc0c1\uc758 \ud559\uc220 \ub17c\ubb38\uc744 \ucd9c\ud310\ud55c \ub300\ud559\uc6d0\uc0dd\uc5d0\uac8c \uc9c0\uae09\ub418\ub294 \uc5f0\uad6c\ube44 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE graduate_students (student_id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO graduate_students (student_id, name, country) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'Canada'), (3, 'Carlos', 'Mexico'), (4, 'Diana', 'India'); CREATE TABLE research_grants (grant_id INT, student_id INT, amount INT); INSERT INTO research_grants (grant_id, student_id, amount) VALUES (1, 1, 10000), (2, 2, 15000), (3, 3, 5000), (4, 4, 20000); CREATE TABLE academic_publications (publication_id INT, student_id INT, title VARCHAR(50)); INSERT INTO academic_publications (publication_id, student_id) VALUES (1, 1), (2, 1), (3, 3), (4, 4), (5, 4);", "output": "SELECT SUM(rg.amount) FROM research_grants rg JOIN graduate_students gs ON rg.student_id = gs.student_id WHERE gs.student_id IN (SELECT ap.student_id FROM academic_publications ap);"}
{"input": " \ud14c\uc2a4\ud2b8 \ub2e8\uacc4\uc5d0 \ub3c4\ub2ec\ud55c \ubc14\uc774\uc624\uc13c\uc11c \uae30\uc220 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uade0 \uc608\uc0b0\uc774 \uac00\uc7a5 \ub192\uc740 \ub2e8\uacc4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE biosensor_projects (project_id INT, project_name VARCHAR(100), project_phase VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO biosensor_projects VALUES (1, 'Glucose Monitor', 'Research', 250000.00); INSERT INTO biosensor_projects VALUES (2, 'Neural Interface', 'Development', 500000.00); INSERT INTO biosensor_projects VALUES (3, 'Heart Rate Sensor', 'Testing', 800000.00); INSERT INTO biosensor_projects VALUES (4, 'Brain-Computer Interface', 'Testing', 1200000.00);", "output": "SELECT project_phase, AVG(budget) FROM biosensor_projects WHERE project_phase = 'Testing' GROUP BY project_phase UNION SELECT project_phase, AVG(budget) FROM biosensor_projects GROUP BY project_phase ORDER BY AVG(budget) DESC LIMIT 1;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ub0b4 \ubc30\uc1a1\uc758 \ubc30\uc1a1 \uae30\uac04\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE shipments (id INT, origin_country VARCHAR(255), destination_country VARCHAR(255), delivery_time INT); INSERT INTO shipments (id, origin_country, destination_country, delivery_time) VALUES (1, 'Egypt', 'South Africa', 20), (2, 'Nigeria', 'South Africa', 30);", "output": "SELECT MIN(delivery_time) as min_delivery_time, MAX(delivery_time) as max_delivery_time FROM shipments WHERE origin_country IN (SELECT destination_country FROM shipments) AND destination_country IN (SELECT origin_country FROM shipments);"}
{"input": " \uac01 \ub300\ub959\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc6b4\uc1a1 \uc635\uc158\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transportation (transportation_id INT, name TEXT, country TEXT, is_sustainable BOOLEAN); INSERT INTO transportation (transportation_id, name, country, is_sustainable) VALUES (1, 'Train', 'Europe', TRUE), (2, 'Bicycle', 'Europe', TRUE), (3, 'Car', 'Europe', FALSE), (4, 'Bus', 'Africa', TRUE), (5, 'Plane', 'Africa', FALSE);", "output": "SELECT is_sustainable, COUNT(*) AS sustainable_count FROM transportation GROUP BY is_sustainable;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \ud574\ubcd1\ub300\uc758 \uad70\uc0ac \uc7a5\ube44 \ubaa9\ub85d \ubc0f \uc720\uc9c0 \uad00\ub9ac \uc77c\uc815\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_equipment (equipment_id INT, equipment_name VARCHAR(100), type VARCHAR(50)); CREATE TABLE marine_corps_equipment (equipment_id INT, base_location VARCHAR(100)); CREATE TABLE equipment_maintenance (equipment_id INT, maintenance_schedule DATE); INSERT INTO military_equipment (equipment_id, equipment_name, type) VALUES (1, 'M1 Abrams', 'Tank'), (2, 'UH-1Y Venom', 'Helicopter'); INSERT INTO marine_corps_equipment (equipment_id, base_location) VALUES (1, 'Camp Pendleton, CA'), (2, 'Marine Corps Air Station Camp Pendleton, CA'); INSERT INTO equipment_maintenance (equipment_id, maintenance_schedule) VALUES (1, '2022-06-01'), (2, '2022-07-15');", "output": "SELECT me.equipment_name, em.maintenance_schedule FROM military_equipment me INNER JOIN marine_corps_equipment mce ON me.equipment_id = mce.equipment_id INNER JOIN equipment_maintenance em ON me.equipment_id = em.equipment_id WHERE mce.base_location LIKE '%CA%';"}
{"input": " 2019\ub144\uacfc 2021\ub144\uc5d0 \uc778\ub3c4\uc5d0 \uc124\uce58\ub41c \ucd1d \ud0dc\uc591\uad11 \ubc1c\uc804 \uc6a9\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE solar_capacity (country VARCHAR(255), year INT, capacity FLOAT); INSERT INTO solar_capacity (country, year, capacity) VALUES ('India', 2019, 28000), ('India', 2019, 30000), ('India', 2021, 35000), ('India', 2021, 37000);", "output": "SELECT SUM(capacity) as total_capacity, year FROM solar_capacity WHERE country = 'India' GROUP BY year;"}
{"input": "\uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 \uc788\ub2e4\uac00 \ucd5c\uadfc 3\ub144 \uc774\ub0b4\uc5d0 \ud1f4\uc0ac\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \uc870\ub2ec\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups(id INT, name TEXT, founder_gender TEXT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Female'); INSERT INTO startups VALUES (2, 'Beta Corp', 'Male'); CREATE TABLE funding_rounds(startup_id INT, amount_raised INT); INSERT INTO funding_rounds VALUES (1, 5000000); INSERT INTO funding_rounds VALUES (2, 7000000); CREATE TABLE exits(id INT, startup_id INT, exit_year INT); INSERT INTO exits VALUES (1, 1, 2020); INSERT INTO exits VALUES (2, 2, 2019);", "output": "SELECT SUM(funding_rounds.amount_raised) FROM startups INNER JOIN funding_rounds ON startups.id = funding_rounds.startup_id INNER JOIN exits ON startups.id = exits.startup_id WHERE startups.founder_gender = 'Female' AND exits.exit_year >= YEAR(CURRENT_DATE) - 3;"}
{"input": "\ub2e8\uc885\ub41c \uc758\ub958\uc640 \ucc45\uc784\uc774 \uc788\ub294 \uc81c\uc870\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Garments (GarmentID INT, GarmentName VARCHAR(50));CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50));CREATE TABLE DiscontinuedGarments (GarmentID INT, ManufacturerID INT, DiscontinuedDate DATE);", "output": "SELECT G.GarmentName, M.ManufacturerName FROM Garments G JOIN DiscontinuedGarments DG ON G.GarmentID = DG.GarmentID JOIN Manufacturers M ON DG.ManufacturerID = M.ManufacturerID;"}
{"input": " \ubaa8\ub4e0 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc758 \ud3c9\uade0 \uc0dd\uc0b0 \ube44\uc6a9\ubcf4\ub2e4 \uc0dd\uc0b0 \ube44\uc6a9\uc774 \ub192\uc740 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GARMENTS (garment_id INT, category VARCHAR(20), production_cost FLOAT); INSERT INTO GARMENTS VALUES (1, 'T-Shirts', 10), (2, 'Pants', 15), (3, 'Jackets', 20), (4, 'Dresses', 25);", "output": "SELECT category, production_cost FROM GARMENTS WHERE production_cost > (SELECT AVG(production_cost) FROM GARMENTS);"}
{"input": " 2019\ub144 \ub9e4\uc6d4 \ub9c8\uc9c0\ub9c9 10\uc77c \ub3d9\uc548 L\ud56d\uc73c\ub85c \uc774\ub3d9\ud558\ub294 \ub098\uc774\uc9c0\ub9ac\uc544 \uad6d\uc801 \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Vessels (id INT, name TEXT, speed FLOAT, flag_country TEXT, arrive_port TEXT, arrive_date DATE); INSERT INTO Vessels (id, name, speed, flag_country, arrive_port, arrive_date) VALUES (1, 'Vessel1', 24.5, 'Nigeria', 'Port L', '2019-01-25'); INSERT INTO Vessels (id, name, speed, flag_country, arrive_port, arrive_date) VALUES (2, 'Vessel2', 26.0, 'Nigeria', 'Port L', '2019-02-22');", "output": "SELECT arrive_port, AVG(speed) FROM Vessels WHERE flag_country = 'Nigeria' AND arrive_port = 'Port L' AND DATE_TRUNC('month', arrive_date) = DATE_TRUNC('month', arrive_date - INTERVAL '10 days') AND EXTRACT(YEAR FROM arrive_date) = 2019 GROUP BY arrive_port;"}
{"input": " '\uc544\uc2dc\uc544'\uc640 '\uc720\ub7fd'\uc758 \uac00\uc0c1 \ud22c\uc5b4\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE VirtualTours (TourID INTEGER, TourName TEXT, Location TEXT); INSERT INTO VirtualTours (TourID, TourName, Location) VALUES (1, 'Virtual Safari', 'Kenya'), (2, 'Virtual Castle Tour', 'Scotland'), (3, 'Virtual Trek', 'Nepal'), (4, 'Virtual Skiing', 'Switzerland'), (5, 'Virtual Temple Tour', 'Japan');", "output": "SELECT SUM(CASE WHEN Location IN ('Asia', 'Europe') THEN 1 ELSE 0 END) FROM VirtualTours;"}
{"input": " \ubd81\ud0dc\ud3c9\uc591\uc758 \ucd5c\uc800 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE temperature_readings (location TEXT, temperature FLOAT); INSERT INTO temperature_readings (location, temperature) VALUES ('Arctic Ocean', -2.34), ('North Atlantic', 12.56), ('North Pacific', 15.43);", "output": "SELECT temperature FROM temperature_readings WHERE location = (SELECT location FROM temperature_readings WHERE temperature = (SELECT MIN(temperature) FROM temperature_readings));"}
{"input": "\ud604\uc7ac \uad6c\ub3c5\ub8cc\uac00 9.99\ub2ec\ub7ec \uc774\uc0c1\uc778 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc2a4\ud2b8\ub9ac\ubc0d \uc911\uc774\uace0 \uc9c0\ub09c 5\ub144 \ub0b4\uc5d0 \ucd9c\uc2dc\ub41c \ubaa8\ub4e0 TV \ud504\ub85c\uadf8\ub7a8\uacfc \uc218\uc0c1 \ud69f\uc218\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE TVShows (ShowId INT, ShowName VARCHAR(100), Genre VARCHAR(50), ReleaseYear INT, Seasons INT); CREATE TABLE TVShowStreaming (ShowId INT, PlatformId INT, StartDate DATETIME, EndDate DATETIME); CREATE TABLE Awards (AwardId INT, ShowId INT, AwardName VARCHAR(100), Year INT); CREATE TABLE StreamingPlatforms (PlatformId INT, PlatformName VARCHAR(100), SubscriptionCost DECIMAL(5,2), ReleaseDate DATETIME);", "output": "SELECT TVShows.ShowName, COUNT(Awards.AwardId) AS AwardsWon FROM TVShows LEFT JOIN TVShowStreaming ON TVShows.ShowId = TVShowStreaming.ShowId LEFT JOIN Awards ON TVShows.ShowId = Awards.ShowId LEFT JOIN StreamingPlatforms ON TVShowStreaming.PlatformId = StreamingPlatforms.PlatformId WHERE TVShows.ReleaseYear >= YEAR(CURRENT_DATE) - 5 AND StreamingPlatforms.SubscriptionCost > 9.99 AND TVShowStreaming.EndDate IS NULL GROUP BY TVShows.ShowName;"}
{"input": " \ud55c \ub2ec\uc5d0 \ucd1d \ubd09\uc0ac\ud65c\ub3d9 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Volunteer_Hours (id INT, hours INT, volunteer_id INT, month INT);", "output": "SELECT month, SUM(hours) as total_hours FROM Volunteer_Hours GROUP BY month;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uc778\ub3c4\uc5d0\uc11c \uacf5\uae09\ub41c \uc720\uae30\ub18d \uba74 \uc6d0\ub2e8\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fabric_inventory (id INT, fabric_name VARCHAR(50), quantity_sourced INT, country_of_origin VARCHAR(50), source_date DATE); INSERT INTO fabric_inventory (id, fabric_name, quantity_sourced, country_of_origin, source_date) VALUES (1, 'Organic Cotton', 5000, 'India', '2021-01-05'), (2, 'Recycled Polyester', 3000, 'China', '2021-04-10'), (3, 'Bamboo Viscose', 2500, 'Indonesia', '2021-02-22');", "output": "SELECT SUM(quantity_sourced) FROM fabric_inventory WHERE fabric_name = 'Organic Cotton' AND country_of_origin = 'India' AND QUARTER(source_date) = 1 AND YEAR(source_date) = 2021;"}
{"input": " 2021\ub144 \uc6b0\uc6b8\uc99d \ubc0f \ubd88\uc548\uc7a5\uc560 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diagnoses (patient_id INT, age INT, diagnosis_name VARCHAR(50), diagnosis_date DATE); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (1, 22, 'Depression', '2021-08-18'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (2, 35, 'Anxiety Disorder', '2021-12-11'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (3, 42, 'Depression', '2021-05-03'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (4, 45, 'Anxiety Disorder', '2021-02-15'); INSERT INTO diagnoses (patient_id, age, diagnosis_name, diagnosis_date) VALUES (5, 28, 'Depression', '2021-07-01');", "output": "SELECT AVG(age) FROM diagnoses WHERE diagnosis_name IN ('Depression', 'Anxiety Disorder') AND YEAR(diagnosis_date) = 2021;"}
{"input": " e\uc2a4\ud3ec\uce20 \uc885\ubaa9\uc5d0\uc11c \uc0c1\uae08\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uac8c\uc784\uc758 \ucd1d \uc0c1\uae08 \ud480\uacfc \uac01 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE EsportsEvents (EventID INT, EventName VARCHAR(50), GameID INT, EventDate DATE, PrizePool NUMERIC(18,2)); INSERT INTO EsportsEvents (EventID, EventName, GameID, EventDate, PrizePool) VALUES (1, 'Fortnite World Cup', 1, '2019-07-26', 30000000); INSERT INTO EsportsEvents (EventID, EventName, GameID, EventDate, PrizePool) VALUES (2, 'Overwatch League Grand Finals', 2, '2019-09-29', 1500000); INSERT INTO EsportsEvents (EventID, EventName, GameID, EventDate, PrizePool) VALUES (3, 'League of Legends World Championship', 3, '2019-11-10', 24000000); INSERT INTO EsportsEvents (EventID, EventName, GameID, EventDate, PrizePool) VALUES (4, 'Dota 2 International', 4, '2019-08-20', 34500000);", "output": "SELECT GameID, SUM(PrizePool) as TotalPrizePool, NTILE(3) OVER (ORDER BY SUM(PrizePool) DESC) as PrizePoolRank FROM EsportsEvents GROUP BY GameID;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \ud65c\ub3d9\ud55c \uc704\ud611 \ud589\uc704\uc790\ub97c \ucd5c\uc2e0 \ud65c\ub3d9 \uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ThreatActors (id INT, actor_name VARCHAR(255), last_seen DATE); INSERT INTO ThreatActors (id, actor_name, last_seen) VALUES (1, 'APT29', '2022-03-10'), (2, 'Lazarus Group', '2022-03-05'), (3, 'Cozy Bear', '2022-03-01'), (4, 'Fancy Bear', '2022-02-25'), (5, 'WannaCry', '2022-02-20');", "output": "SELECT actor_name, last_seen, ROW_NUMBER() OVER (ORDER BY last_seen DESC) AS rank FROM ThreatActors WHERE last_seen >= DATEADD(day, -30, GETDATE());"}
{"input": "\uad70 \uc7a5\ube44\uc758 \uc885\ub958\ubcc4 \ud3c9\uade0 \ud06c\uae30\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_equipment(type TEXT, size FLOAT); INSERT INTO military_equipment(type, size) VALUES('tank', 60.0), ('fighter_jet', 20.0), ('helicopter', 15.0);", "output": "SELECT type, AVG(size) FROM military_equipment GROUP BY type;"}
{"input": " '\ubbf8\ub2c8\uba40\ub9ac\uc998' \uc7a5\ub974\uc758 \ubaa8\ub4e0 \uc804\uc2dc\uc758 \ucd1d \uc18c\uc694 \uc2dc\uac04\uc740 \uba87 \uc2dc\uac04\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Exhibition (exhibition_id INT, exhibition_name VARCHAR(30), genre VARCHAR(20), duration INT);", "output": "SELECT SUM(Exhibition.duration / 60) FROM Exhibition WHERE Exhibition.genre = 'Minimalism';"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc774\ub984, \uc2dc\uc791\uc77c, \uc608\uc0b0 \ub4f1 \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc5d0\uc11c \uc2dc\ud589\ub41c \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \uacc4\ud68d\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE community_development (project_name VARCHAR(50), project_start_date DATE, budget DECIMAL(10,2), community_type VARCHAR(50));", "output": "SELECT project_name, project_start_date, budget FROM community_development WHERE community_type LIKE '%indigenous%' AND country LIKE 'Lat%';"}
{"input": " \uc9c0\uc5ed\ubcc4 \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \ucd1d \uc0dd\uc0b0\ub7c9\uc5d0\uc11c \uc9c0\uc5ed\ubcc4 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE production_volume (volume_id INT, well_id INT, production_year INT, production_volume FLOAT, region VARCHAR(50)); INSERT INTO production_volume (volume_id, well_id, production_year, production_volume, region) VALUES (3, 3, 2022, 220.0, 'Asia-Pacific'); INSERT INTO production_volume (volume_id, well_id, production_year, production_volume, region) VALUES (4, 4, 2023, 180.5, 'Africa');", "output": "SELECT region, SUM(production_volume) as total_volume, PERCENTAGE_RANK() OVER (ORDER BY SUM(production_volume) DESC) as percentage_of_total FROM production_volume GROUP BY region;"}
{"input": " \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE infrastructure_projects (id INT, project_name VARCHAR(50), location VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO infrastructure_projects (id, project_name, location, budget) VALUES (1, 'Highway 101 Expansion', 'California', 5000000), (2, 'Bridge Replacement', 'New York', 3000000), (3, 'Transit System Upgrade', 'Texas', 8000000);", "output": "SELECT MAX(budget) as max_budget FROM infrastructure_projects;"}
{"input": " 2020\ub144\uc5d0 \ubbf8\uc2dc\uac04 \uc8fc\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30\uac00 \uc788\uc5c8\ub358 \uacc4\ud1b5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, strain VARCHAR(50), state VARCHAR(50), year INT, quantity INT); INSERT INTO sales (id, strain, state, year, quantity) VALUES (1, 'Green Crack', 'Michigan', 2020, 15000);", "output": "SELECT strain, SUM(quantity) FROM sales WHERE state = 'Michigan' AND year = 2020 GROUP BY strain ORDER BY SUM(quantity) DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uac00 5% \uc774\uc0c1 \uac10\uc18c\ud55c \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health_history (student_id INT, score INT, date DATE); INSERT INTO student_mental_health_history VALUES (1, 60, '2022-04-01'), (1, 55, '2022-07-01'), (2, 80, '2022-04-01'), (2, 75, '2022-07-01');", "output": "SELECT COUNT(*) FROM (SELECT student_id, (LAG(score) OVER(PARTITION BY student_id ORDER BY date) - score) / LAG(score) OVER(PARTITION BY student_id ORDER BY date) * 100.0 as decrease_percentage FROM student_mental_health_history WHERE date >= DATEADD(month, -3, GETDATE())) t WHERE decrease_percentage > 5;"}
{"input": " \uc694\uac00 \uc138\uc158 \uc911 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub97c \uc131\ubcc4\ub85c \ubd84\ub958\ud558\uc5ec \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE HeartRateData (HeartRate INT, WorkoutType VARCHAR(20), MemberID INT, WorkoutDate DATE); INSERT INTO HeartRateData (HeartRate, WorkoutType, MemberID, WorkoutDate) VALUES (85, 'Yoga', 1, '2021-01-06'), (90, 'Yoga', 1, '2021-01-07'), (75, 'Yoga', 2, '2021-03-19'), (80, 'Yoga', 3, '2021-08-15');", "output": "SELECT AVG(HeartRate) as AvgHeartRate, Gender FROM HeartRateData INNER JOIN Members ON HeartRateData.MemberID = Members.MemberID INNER JOIN Workouts ON Members.MemberID = Workouts.MemberID WHERE WorkoutType = 'Yoga' GROUP BY Gender;"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \uc815\uc2e0\uac74\uac15\uc13c\ud130\uc5d0\uc11c \uce58\ub8cc\ub97c \ubc1b\ub294 \ud658\uc790 \uc218 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uce58\ub8cc\uc0ac \uc0c1\uc704 3\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_mental_health_center (center_id INT, name VARCHAR(255)); INSERT INTO community_mental_health_center (center_id, name) VALUES (1, 'Community Mental Health Center 1'), (2, 'Community Mental Health Center 2'), (3, 'Community Mental Health Center 3'); CREATE TABLE patient (patient_id INT, center_id INT); CREATE TABLE therapy_session (session_id INT, patient_id INT, therapist_id INT, therapist_name VARCHAR(255));", "output": "SELECT therapist_name, COUNT(DISTINCT patient_id) AS patient_count FROM therapy_session JOIN patient ON therapy_session.patient_id = patient.patient_id JOIN community_mental_health_center ON patient.center_id = community_mental_health_center.center_id GROUP BY therapist_name ORDER BY patient_count DESC LIMIT 3;"}
{"input": " \ubcf4\ud5d8 \uc2dc\uc791\uc77c\uc774 2022\ub144 1\uc6d4 1\uc77c \uc774\ud6c4\uc778 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc8fc\uc758 \ucd1d \ubcf4\ud5d8 \uc218\uc640 \ubcf4\ud5d8\uc758 \ucd1d \ubcf4\uc7a5 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE policies (policy_number INT, policy_type VARCHAR(50), coverage_amount INT, policy_start_date DATE, state VARCHAR(2)); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date, state) VALUES (12345, 'Auto', 50000, '2022-01-01', 'TX'); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date, state) VALUES (67890, 'Home', 300000, '2022-02-15', 'CA'); INSERT INTO policies (policy_number, policy_type, coverage_amount, policy_start_date, state) VALUES (111213, 'Umbrella', 1000000, '2022-03-01', 'CA');", "output": "SELECT COUNT(*) as total_policies, SUM(coverage_amount) as total_coverage_amount FROM policies WHERE policy_start_date >= '2022-01-01' AND state = 'CA';"}
{"input": " '\uc5f0\uad6c\ud604\uc7a5 A'\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591\uc0dd\ubb3c\uc774 \uad00\ucc30\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE marine_species (species_id INT, site_id INT, species_name TEXT); INSERT INTO marine_species (species_id, site_id, species_name) VALUES (1, 1, 'Anglerfish'), (2, 3, 'Giant Squid'), (3, 1, 'Oceanic Trench Snailfish');", "output": "SELECT COUNT(*) FROM marine_species WHERE site_id = (SELECT site_id FROM marine_sites WHERE site_name = 'Research Site A');"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc704\uce58\ud55c \uc815\uc2e0\uac74\uac15\ud074\ub9ac\ub2c9\uc5d0\uc11c \uc2ec\ub9ac\uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \ucd1d \uc218\uc640 \uadf8\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uc815\uc2e0\uac74\uac15 \uc0c1\ud0dc\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE clinics (clinic_id INT, clinic_name VARCHAR(50), city VARCHAR(50), state VARCHAR(50)); INSERT INTO clinics (clinic_id, clinic_name, city, state) VALUES (1, 'ClinicI', 'San Francisco', 'CA'), (2, 'ClinicJ', 'Los Angeles', 'CA'); CREATE TABLE patients (patient_id INT, patient_name VARCHAR(50), age INT, clinic_id INT, condition_id INT); INSERT INTO patients (patient_id, patient_name, age, clinic_id, condition_id) VALUES (1, 'Jessica Davis', 32, 1, 1), (2, 'Daniel Lee', 45, 1, 3), (3, 'Natalie Green', 28, 2, 2); CREATE TABLE conditions (condition_id INT, condition_name VARCHAR(50)); INSERT INTO conditions (condition_id, condition_name) VALUES (1, 'Depression'), (2, 'Anxiety Disorder'), (3, 'PTSD'); CREATE TABLE therapies (therapy_id INT, therapy_name VARCHAR(50), patient_id INT); INSERT INTO therapies (therapy_id, therapy_name, patient_id) VALUES (1, 'Psychotherapy', 1), (2, 'CBT', 2), (3, 'Psychotherapy', 3);", "output": "SELECT cond.condition_name, COUNT(p.patient_id) AS total_patients, AVG(p.age) AS avg_age FROM patients p JOIN clinics c ON p.clinic_id = c.clinic_id JOIN therapies t ON p.patient_id = t.patient_id JOIN conditions cond ON p.condition_id = cond.condition_id WHERE c.state = 'CA' AND t.therapy_name = 'Psychotherapy' GROUP BY cond.condition_name;"}
{"input": " 2021\ub144 3\ubd84\uae30 '\uc11c\uc2dd\uc9c0 \ubcf5\uc6d0' \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?;", "context": "CREATE TABLE volunteers (id INT, volunteer_name VARCHAR(50), project_name VARCHAR(50), participation_date DATE); INSERT INTO volunteers (id, volunteer_name, project_name, participation_date) VALUES (1, 'Maria Rodriguez', 'Habitat Restoration', '2021-07-02'); INSERT INTO volunteers (id, volunteer_name, project_name, participation_date) VALUES (2, 'Ali Baba', 'Community Education', '2021-08-10');", "output": "SELECT COUNT(volunteer_name) FROM volunteers WHERE project_name = 'Habitat Restoration' AND MONTH(participation_date) BETWEEN 7 AND 9;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc0c1\uc704 3\uac1c \uc0b0\uc5c5\uc744 \uc790\uae08 \uae08\uc561 \uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE company (id INT, name TEXT, industry TEXT, founding_year INT); INSERT INTO company (id, name, industry, founding_year) VALUES (1, 'Acme Corp', 'Tech', 2010); CREATE TABLE investment (id INT, company_id INT, funding_amount INT, investment_year INT); INSERT INTO investment (id, company_id, funding_amount, investment_year) VALUES (1, 1, 5000000, 2015);", "output": "SELECT industry, SUM(funding_amount) as total_funding FROM company JOIN investment ON company.id = investment.company_id WHERE investment_year >= (SELECT YEAR(CURRENT_DATE) - 5) GROUP BY industry ORDER BY total_funding DESC LIMIT 3;"}
{"input": " '\uc804\ub7b5' \uce74\ud14c\uace0\ub9ac\uc758 \uac01 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GamePlayers (GameID int, GameName varchar(50), Category varchar(50), PlayerID int);", "output": "SELECT Category, COUNT(DISTINCT PlayerID) OVER(PARTITION BY Category) as PlayersCount FROM GamePlayers;"}
{"input": " 2021\ub144 5\uc6d4\uc5d0 \uac00\uc7a5 \ubb34\uac70\uc6b4 \ubc30\uc1a1\ubb3c \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Shipments (shipment_id INT, weight FLOAT, shipment_date DATE); INSERT INTO Shipments (shipment_id, weight, shipment_date) VALUES (1, 700.5, '2021-05-01'); INSERT INTO Shipments (shipment_id, weight, shipment_date) VALUES (2, 450.2, '2021-05-03');", "output": "SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY weight DESC) as row_num FROM Shipments WHERE shipment_date BETWEEN '2021-05-01' AND '2021-05-31') t WHERE row_num <= 3;"}
{"input": "\uae00\ub8e8\ud150 \ud504\ub9ac \uba54\ub274 \ud56d\ubaa9\uc758 \ucd5c\uace0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menus (menu_id INT, menu_name VARCHAR(50), menu_type VARCHAR(20), price DECIMAL(5,2), is_gluten_free BOOLEAN); INSERT INTO menus (menu_id, menu_name, menu_type, price, is_gluten_free) VALUES (1, 'Quinoa Salad', 'Vegetarian', 9.99, true), (2, 'Margherita Pizza', 'Non-vegetarian', 12.99, false), (3, 'Tofu Stir Fry', 'Vegetarian', 10.99, true), (4, 'Steak', 'Non-vegetarian', 25.99, false), (5, 'Grilled Chicken Sandwich', 'Non-vegetarian', 14.99, false);", "output": "SELECT MAX(price) FROM menus WHERE is_gluten_free = true;"}
{"input": " \uc9c0\ub09c 21\uac1c\uc6d4 \ub3d9\uc548 \ud504\ub791\uc2a4\ub85c\ubd80\ud130 \uad70\uc0ac \uc7a5\ube44\ub97c \uad6c\ub9e4\ud55c \uad6d\uac00\uc758 \ucd1d \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE military_equipment_sales (country TEXT, sale_date DATE); INSERT INTO military_equipment_sales (country, sale_date) VALUES ('Canada', '2021-01-15'), ('Australia', '2022-01-03'), ('Germany', '2021-12-21'), ('France', '2022-02-09'), ('Mexico', '2022-03-17'), ('Brazil', '2022-01-28'), ('South Korea', '2022-02-05'), ('France', '2021-11-29');", "output": "SELECT COUNT(DISTINCT country) as unique_countries FROM military_equipment_sales WHERE country = 'France' AND sale_date >= (SELECT CURRENT_DATE - INTERVAL '21 months');"}
{"input": " \uac01 AI \uc548\uc804 \uc870\uce58\uc758 \ud22c\uba85\uc131 \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SafetyMeasures (id INT, measure VARCHAR(255), transparency_rating DECIMAL(5,2)); INSERT INTO SafetyMeasures (id, measure, transparency_rating) VALUES (1, 'AI Risk Assessment', 8.00), (2, 'AI Incident Response', 9.00), (3, 'AI Monitoring', 8.50);", "output": "SELECT measure, AVG(transparency_rating) as avg_transparency_rating FROM SafetyMeasures GROUP BY measure;"}
{"input": " 'SmartContractD'\uc758 \ucd5c\ub300 \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Transactions (tx_id INT, contract_name VARCHAR(255), tx_value DECIMAL(10,2)); INSERT INTO Transactions (tx_id, contract_name, tx_value) VALUES (1, 'SmartContractD', 100.50); INSERT INTO Transactions (tx_id, contract_name, tx_value) VALUES (2, 'SmartContractD', 200.75);", "output": "SELECT MAX(tx_value) FROM Transactions WHERE contract_name = 'SmartContractD';"}
{"input": " \uac01 \uc704\uc131 \ubaa8\ub378\uc758 \uac00\uc7a5 \ube60\ub978 \ucd9c\uc2dc \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (id INT, name VARCHAR(100), model VARCHAR(100), launch_date DATE); INSERT INTO Satellites (id, name, model, launch_date) VALUES (1, 'Sat1', 'Model1', '2020-01-01'); INSERT INTO Satellites (id, name, model, launch_date) VALUES (2, 'Sat2', 'Model2', '2019-12-15'); INSERT INTO Satellites (id, name, model, launch_date) VALUES (3, 'Sat3', 'Model1', '2018-06-06');", "output": "SELECT model, MIN(launch_date) OVER (PARTITION BY model) as min_launch_date FROM Satellites;"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \ud2b9\uc815 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc74c\uc545\uc744 \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \ub3c4\uc2dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (id INT, name VARCHAR(100)); CREATE TABLE Users (id INT, name VARCHAR(100)); CREATE TABLE Streams (id INT, user_id INT, artist_id INT, minutes DECIMAL(10,2), year INT, city VARCHAR(50));", "output": "SELECT artist_id, city, COUNT(DISTINCT user_id) AS unique_users FROM Streams WHERE year = 2021 GROUP BY artist_id, city;"}
{"input": " 'RuralHealthFacility4'\uc5d0\uc11c \ud658\uc790\uac00 \uce58\ub8cc\ub97c \ubc1b\uc740 \uac00\uc7a5 \ube60\ub978 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RuralHealthFacility4 (id INT, date DATE, treatment INT); INSERT INTO RuralHealthFacility4 (id, date, treatment) VALUES (1, '2021-01-10', 2), (2, '2021-02-15', 4);", "output": "SELECT MIN(date) FROM RuralHealthFacility4;"}
{"input": " '\uc911\uc559\uc544\uba54\ub9ac\uce74'\uc758 \ubaa8\ub4e0 \ub3c4\ub85c \uae38\uc774\uc758 \ud569\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Roads (id INT, name TEXT, country TEXT, length FLOAT); INSERT INTO Roads (id, name, country, length) VALUES (1, 'RoadA', 'CountryX', 150.00), (2, 'RoadB', 'CountryY', 120.50), (3, 'RoadC', 'CountryZ', 180.25), (4, 'RoadD', 'CountryA', 200.00), (5, 'RoadE', 'CountryB', 250.50);", "output": "SELECT SUM(length) FROM Roads WHERE country IN (SELECT name FROM Countries WHERE continent = 'Central America');"}
{"input": " \uc544\ub974\ud5e8\ud2f0\ub098\uc758 \uac01 \uc8fc\uc5d0\uc11c \uc7ac\ubc30\ub41c \uac01 \uc791\ubb3c\uc758 \ucd1d \uc791\ubb3c \uc218\ud655\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE provinces (id INT, name TEXT, country TEXT); INSERT INTO provinces (id, name, country) VALUES (1, 'Buenos Aires', 'Argentina'), (2, 'Cordoba', 'Argentina');", "output": "SELECT crops.name, provinces.name as province_name, SUM(crop_yield.yield) FROM crop_yield JOIN farms ON crop_yield.farm_id = farms.id JOIN crops ON crop_yield.crop_id = crops.id JOIN provinces ON farms.id = provinces.id GROUP BY crops.name, provinces.name;"}
{"input": " \uce74\ub9ac\ube0c\ud574\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec \uc810\uc218\uac00 85\uc810 \uc774\uc0c1\uc778 \ud638\ud154\uc5d0 \uad6c\ud604\ub41c AI \uae30\ubc18 \ud504\ub7f0\ud2b8 \ub370\uc2a4\ud06c \uc194\ub8e8\uc158\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, region TEXT); CREATE TABLE ai_solutions (solution_id INT, hotel_id INT, implemented_date DATE, solution_type TEXT); CREATE TABLE virtual_tours (tour_id INT, hotel_id INT, engagement_score INT); INSERT INTO hotels (hotel_id, hotel_name, region) VALUES (1, 'Beachfront Haven', 'Caribbean'), (2, 'Tropical Hideaway', 'Caribbean'); INSERT INTO ai_solutions (solution_id, hotel_id, implemented_date, solution_type) VALUES (1, 1, '2021-02-01', 'front desk'), (2, 1, '2021-03-01', 'housekeeping'), (1, 2, '2021-01-01', 'front desk'), (2, 2, '2021-02-01', 'front desk'); INSERT INTO virtual_tours (tour_id, hotel_id, engagement_score) VALUES (1, 1, 90), (2, 1, 85), (1, 2, 75), (2, 2, 80);", "output": "SELECT COUNT(DISTINCT ai_solutions.solution_id) AS total_solutions FROM ai_solutions INNER JOIN hotels ON ai_solutions.hotel_id = hotels.hotel_id INNER JOIN virtual_tours ON hotels.hotel_id = virtual_tours.hotel_id WHERE hotels.region = 'Caribbean' AND virtual_tours.engagement_score >= 85 AND ai_solutions.solution_type = 'front desk';"}
{"input": "\ud504\ub85c\uadf8\ub7a8 \uc138\ubd80\uc815\ubcf4\uc640 \ud568\uaed8 \ubaa8\ub4e0 \uae30\ubd80\uc790, \uc5f0\ub77d\ucc98 \uc815\ubcf4, \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\ubd80\ud55c \ucd1d\uc561\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE donors (id INT, name TEXT, email TEXT); CREATE TABLE donations (id INT, donor_id INT, program_id INT, amount DECIMAL); CREATE TABLE programs (id INT, name TEXT, location TEXT, budget INT);", "output": "SELECT donors.name as donor_name, programs.name as program_name, SUM(donations.amount) as total_donation FROM donors INNER JOIN donations ON donors.id = donations.donor_id INNER JOIN programs ON donations.program_id = programs.id GROUP BY donors.id, programs.id;"}
{"input": " \uc2dc\uac01 \uc608\uc220 \ud504\ub85c\uadf8\ub7a8 \ubc0f \uc6cc\ud06c\uc20d\uc744 \uc704\ud574 \uc18c\uc678\ub41c \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uc5f0\ub839\ub300\ubcc4\ub85c \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visual_arts_programs (id INT, visitor_age INT, underrepresented_community BOOLEAN, visit_date DATE); CREATE TABLE workshops (id INT, visitor_age INT, underrepresented_community BOOLEAN, visit_date DATE);", "output": "SELECT 'Visual Arts Programs' AS event, visitor_age, COUNT(*) AS total FROM visual_arts_programs WHERE underrepresented_community = TRUE GROUP BY visitor_age UNION ALL SELECT 'Workshops' AS event, visitor_age, COUNT(*) AS total FROM workshops WHERE underrepresented_community = TRUE GROUP BY visitor_age;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uc9c1\ubb3c \uc720\ud615\ubcc4\ub85c \uc0dd\uc0b0\ub41c \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (production_id INT, fabric_type VARCHAR(50), units INT, production_date DATE);", "output": "SELECT fabric_type, SUM(units) as q2_production FROM production WHERE production_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY fabric_type;"}
{"input": " \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc8fc\ud0dd \uc815\ucc45\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE housing_policy (policy_id INT, property_id INT, policy_description TEXT); INSERT INTO housing_policy (policy_id, property_id, policy_description) VALUES (1, 1, 'Joint liability for mortgage payments'), (2, 2, 'Equal rights to sell the property'), (3, 3, 'Shared maintenance responsibilities');", "output": "SELECT hp.policy_description FROM housing_policy hp JOIN property_coowners pc ON hp.property_id = pc.property_id WHERE pc.property_id IN (SELECT property_id FROM property_coowners);"}
{"input": " \uad6d\uac00\ubcc4\ub85c \ubc1c\uc0ac\ub41c \uc704\uc131 \uc218\ub97c \ud655\uc778\ud558\uace0 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE SatelliteLaunches (SatelliteID INT, Name VARCHAR(50), LaunchDate DATE, Manufacturer VARCHAR(50), Country VARCHAR(50)); INSERT INTO SatelliteLaunches (SatelliteID, Name, LaunchDate, Manufacturer, Country) VALUES (1, 'Sentinel-1A', '2014-04-03', 'Thales Alenia Space', 'France'); INSERT INTO SatelliteLaunches (SatelliteID, Name, LaunchDate, Manufacturer, Country) VALUES (2, 'Sentinel-2A', '2015-06-23', 'Airbus Defence and Space', 'Germany'); INSERT INTO SatelliteLaunches (SatelliteID, Name, LaunchDate, Manufacturer, Country) VALUES (3, 'Terra', '1999-12-18', 'Lockheed Martin', 'USA'); INSERT INTO SatelliteLaunches (SatelliteID, Name, LaunchDate, Manufacturer, Country) VALUES (4, 'KOMPSAT-5', '2013-08-12', 'Korea Aerospace Research Institute', 'South Korea');", "output": "SELECT Country, COUNT(*) AS Num_Satellites, RANK() OVER (ORDER BY COUNT(*) DESC) AS Satellite_Rank FROM SatelliteLaunches GROUP BY Country;"}
{"input": " \uce90\ub098\ub2e4\uc758 \uac01 \uc5f0\ub3c4\ubcc4 \uc138\ub968 \uc0dd\uc0b0\ub7c9\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE cerium_production (country VARCHAR(20), quantity INT, year INT); INSERT INTO cerium_production (country, quantity, year) VALUES ('Canada', 3500, 2018), ('Canada', 3700, 2019), ('Canada', 4000, 2020);", "output": "SELECT country, year, quantity FROM cerium_production WHERE country = 'Canada';"}
{"input": "\ub9cc\ub8cc\ub41c '\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591' \ubc29\uc0b0 \ud504\ub85c\uc81d\ud2b8 \uacc4\uc57d \uc0ad\uc81c", "context": "CREATE TABLE defense_contracts (cont_id INT, cont_name VARCHAR(50), proj_id INT, cont_status VARCHAR(50), cont_end_date DATE);", "output": "DELETE FROM defense_contracts WHERE proj_id IN (SELECT proj_id FROM defense_projects WHERE region = 'Asia Pacific' AND cont_end_date < CURDATE()) AND cont_status = 'Expired';"}
{"input": " \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uacfc \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \uaddc\uc81c \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE regulatory_framework (id INT, name VARCHAR(255)); CREATE TABLE smart_contracts (id INT, name VARCHAR(255), framework_id INT); INSERT INTO regulatory_framework (id, name) VALUES (1, 'EU GDPR'), (2, 'US CFTC'), (3, 'Japan FSA'), (4, 'UK FCA'); INSERT INTO smart_contracts (id, name, framework_id) VALUES (1, 'SC1', 1), (2, 'SC2', 1), (3, 'SC3', 2), (4, 'SC4', NULL);", "output": "DELETE FROM regulatory_framework WHERE id NOT IN (SELECT DISTINCT framework_id FROM smart_contracts);"}
{"input": " \ucd5c\uc18c 3\ub144 \ub3d9\uc548 \ubc29\ubb38\uac1d \uc218\uac00 \uc9c0\uc18d\uc801\uc73c\ub85c \uc99d\uac00\ud55c \ubaa9\uc801\uc9c0\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE yearly_visitor_count (destination VARCHAR(50), year INT, visitor_count INT);", "output": "SELECT a.destination FROM yearly_visitor_count a JOIN yearly_visitor_count b ON a.destination = b.destination AND a.year = b.year + 1 JOIN yearly_visitor_count c ON a.destination = c.destination AND a.year = c.year + 2 WHERE a.visitor_count > b.visitor_count AND b.visitor_count > c.visitor_count GROUP BY a.destination;"}
{"input": " \uc2dc\ub9ac\uc988 A \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ub2e4\uc591\uc131 \uc810\uc218\uac00 80\uc810 \uc774\uc0c1\uc778 \ud68c\uc0ac\uc758 \ucc3d\uc5c5\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT PRIMARY KEY, name VARCHAR(100), founding_year INT, industry VARCHAR(50), diversity_score FLOAT); CREATE TABLE investment (id INT PRIMARY KEY, company_id INT, round_type VARCHAR(50), invested_amount INT, investment_date DATE); CREATE TABLE founder (id INT PRIMARY KEY, company_id INT, founder_name VARCHAR(100), gender VARCHAR(10), race VARCHAR(50));", "output": "SELECT DISTINCT founder.founder_name FROM company INNER JOIN investment ON company.id = investment.company_id INNER JOIN founder ON company.id = founder.company_id WHERE company.diversity_score > 80 AND investment.round_type = 'Series A';"}
{"input": " \ud2b9\uc815 \uc7a5\ub974, \uad6d\uac00\uc5d0\uc11c \uc74c\uc545\uc744 \ubc1c\ud45c\ud55c \ub3c5\ucc3d\uc801\uc778 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE genre_country_artists (artist_id INT, genre VARCHAR(255), country VARCHAR(255), artist_name VARCHAR(255)); CREATE TABLE artist (artist_id INT, artist_name VARCHAR(255));", "output": "SELECT genre, country, COUNT(DISTINCT artist_id) FROM genre_country_artists GROUP BY genre, country;"}
{"input": " \uad6d\uac00\ubcc4 \uc5f0\uac04 \ud3c9\uade0 \uc6a9\uc874 \uc0b0\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Country_DO (Country TEXT, Year INT, Dissolved_Oxygen_Level FLOAT); INSERT INTO Country_DO (Country, Year, Dissolved_Oxygen_Level) VALUES ('Brazil', 2019, 6.5), ('Peru', 2019, 7.0), ('Nigeria', 2019, 5.5), ('Brazil', 2020, 6.6), ('Peru', 2020, 7.1), ('Nigeria', 2020, 5.6);", "output": "SELECT Country, Year, AVG(Dissolved_Oxygen_Level) OVER (PARTITION BY Country) AS Avg_Dissolved_Oxygen_Level FROM Country_DO;"}
{"input": " \uc9c0\ub09c\uc8fc\uc5d0 \ud310\ub9e4\ub41c '\ubca0\uc9c0\ub7a9' \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE sandwiches (id INT, name VARCHAR(255), qty_sold INT); INSERT INTO sandwiches (id, name, qty_sold) VALUES (1, 'Veggie Wrap', 300), (2, 'Chicken Salad Sandwich', 250), (3, 'Turkey Club', 200); CREATE TABLE date (id INT, date DATE); INSERT INTO date (id, date) VALUES (1, '2022-03-21'), (2, '2022-03-22'), (3, '2022-03-23');", "output": "SELECT SUM(qty_sold) AS total_qty_sold FROM sandwiches WHERE name = 'Veggie Wrap' AND date IN (SELECT date FROM date WHERE date BETWEEN DATE_SUB(NOW(), INTERVAL 1 WEEK) AND NOW());"}
{"input": "\uc7ac\ud65c\uc6a9\ub960\uc774 \ud3c9\uade0\ubcf4\ub2e4 \ub0ae\uc740 \ud3d0\uae30\ubb3c \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_types (type TEXT, id INTEGER, recycling_rate FLOAT); INSERT INTO waste_types (type, id, recycling_rate) VALUES ('Plastic', 1, 0.3), ('Paper', 2, 0.5), ('Glass', 3, 0.7), ('Metal', 4, 0.8);", "output": "SELECT type, recycling_rate FROM waste_types WHERE recycling_rate < (SELECT AVG(recycling_rate) FROM waste_types);"}
{"input": " PTSD \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diagnoses (patient_id INT, diagnosis VARCHAR(20)); INSERT INTO diagnoses (patient_id, diagnosis) VALUES (1, 'PTSD'), (2, 'Anxiety'), (3, 'PTSD');", "output": "SELECT COUNT(*) FROM diagnoses WHERE diagnosis = 'PTSD';"}
{"input": " \uc724\ub9ac\uc801 \ud328\uc158 \uc0b0\uc5c5 \ubd84\uc57c \uae30\uc5c5\ubcc4 \ub178\ub3d9 \uad00\ud589 \uc704\ubc18 \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE labor_practices(company VARCHAR(50), violation VARCHAR(50), severity INT);", "output": "SELECT company, violation, ROW_NUMBER() OVER (PARTITION BY company ORDER BY severity DESC) as rank FROM labor_practices WHERE rank <= 3;"}
{"input": " 1950\ub144\ubd80\ud130 2000\ub144\uae4c\uc9c0 \ub0a8\uc544\uba54\ub9ac\uce74\uc758 \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc774\uba70, \uac19\uc740 \uae30\uac04 \ub3d9\uc548\uc758 \uc9c0\uad6c \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\uc640 \uc5b4\ub5bb\uac8c \ube44\uad50\ub429\ub2c8\uae4c?", "context": "CREATE TABLE WeatherData (location VARCHAR(50), year INT, avg_temp FLOAT);", "output": "SELECT w1.avg_temp - w2.avg_temp AS temp_diff FROM (SELECT AVG(avg_temp) FROM WeatherData WHERE location LIKE 'South America%' AND year BETWEEN 1950 AND 2000) w1, (SELECT AVG(avg_temp) FROM WeatherData WHERE year BETWEEN 1950 AND 2000) w2;"}
{"input": " 'RPG' \uc7a5\ub974 \ucd5c\uace0\ub839 \ud50c\ub808\uc774\uc5b4 TOP 3\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE players (id INT, age INT, genre VARCHAR(20)); INSERT INTO players (id, age, genre) VALUES (1, 40, 'RPG'), (2, 35, 'RPG'), (3, 25, 'FPS'), (4, 50, 'RPG');", "output": "SELECT * FROM (SELECT id, age, ROW_NUMBER() OVER (ORDER BY age DESC) AS rn FROM players WHERE genre = 'RPG') sub WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c 3\ub144 \ub3d9\uc548 \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uad70\uc0ac \ud601\uc2e0 \uc608\uc0b0\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\uc758 \ucd1d \uc608\uc0b0\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE MilitaryBudgets (country VARCHAR(255), year INT, budget DECIMAL(10, 2)); INSERT INTO MilitaryBudgets (country, year, budget) VALUES ('Japan', 2019, 50000000); INSERT INTO MilitaryBudgets (country, year, budget) VALUES ('South Korea', 2019, 60000000);", "output": "SELECT country, SUM(budget) as total_budget, ROW_NUMBER() OVER (ORDER BY SUM(budget) DESC) as budget_rank FROM MilitaryBudgets WHERE country LIKE 'Asia%' AND year >= 2018 GROUP BY country ORDER BY total_budget DESC FETCH FIRST 3 ROWS ONLY;"}
{"input": " 2019\ub144 \ub780\ud0c0\ub284\uacfc \uc138\ub968 \uc0dd\uc0b0\ub7c9\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Lanthanum_Production (year INT, production FLOAT); INSERT INTO Lanthanum_Production (year, production) VALUES (2015, 1500), (2016, 1600), (2017, 1700), (2018, 1800), (2019, 1900), (2020, 2000); CREATE TABLE Cerium_Production (year INT, production FLOAT); INSERT INTO Cerium_Production (year, production) VALUES (2015, 3000), (2016, 3200), (2017, 3400), (2018, 3600), (2019, 3800), (2020, 4000);", "output": "SELECT production[year=2019]/(SELECT production FROM Cerium_Production WHERE year = 2019) FROM Lanthanum_Production WHERE year = 2019;"}
{"input": " \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub97c \uac10\uc18c\uc2dc\ud0a4\ub294 \uc21c\uc11c\ub85c \ub098\uc5f4\ud558\uba74 \ubd81\uadf9\ud574\uc5d0 \uc788\ub294 \uac01 \uc885\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BiomassData (Species VARCHAR(100), Biomass FLOAT, Ocean VARCHAR(100)); INSERT INTO BiomassData (Species, Biomass, Ocean) VALUES ('Polar Bear', 500, 'Arctic Ocean'); INSERT INTO BiomassData (Species, Biomass, Ocean) VALUES ('Greenland Shark', 300, 'Arctic Ocean');", "output": "SELECT Species, SUM(Biomass) OVER (PARTITION BY Species ORDER BY Species DESC) AS TotalBiomass FROM BiomassData WHERE Ocean = 'Arctic Ocean' ORDER BY TotalBiomass DESC;"}
{"input": " \ub458 \uc774\uc0c1\uc758 \ud559\uacfc\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc740 \ud559\uc0dd\uc758 \uc774\ub984\uacfc ID\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE student_info (student_id INT, name VARCHAR(255)); INSERT INTO student_info (student_id, name) VALUES (1, 'John Doe'); INSERT INTO student_info (student_id, name) VALUES (2, 'Jane Smith'); CREATE TABLE student_disability_accommodations (student_id INT, accommodation_type VARCHAR(255), department VARCHAR(255)); INSERT INTO student_disability_accommodations (student_id, accommodation_type, department) VALUES (1, 'Extended Testing Time', 'Computer Science'); INSERT INTO student_disability_accommodations (student_id, accommodation_type, department) VALUES (1, 'Note Taker', 'Physics');", "output": "SELECT s.student_id, s.name FROM student_info s JOIN student_disability_accommodations sa1 ON s.student_id = sa1.student_id JOIN student_disability_accommodations sa2 ON s.student_id = sa2.student_id WHERE sa1.department <> sa2.department;"}
{"input": " \uac00\uc7a5 \ube44\uc2fc \uc0c1\uc704 3\uac1c \ud488\ubaa9\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uace0\uc720 \uc7ac\ub8cc\uac00 \uc0ac\uc6a9\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Materials (item_id INT, material VARCHAR(255)); INSERT INTO Materials (item_id, material) VALUES (1, 'Cotton'), (1, 'Polyester'), (2, 'Wool'), (3, 'Silk'), (3, 'Cashmere');", "output": "SELECT COUNT(DISTINCT material) FROM (SELECT material, ROW_NUMBER() OVER (ORDER BY price DESC) rn FROM Materials JOIN (SELECT item_id, MAX(price) price FROM Clothing GROUP BY item_id) c ON Materials.item_id = c.item_id) t WHERE rn <= 3;"}
{"input": " \ud604\uc9c0 \uace0\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Customers (id INT PRIMARY KEY, name VARCHAR(255), city VARCHAR(255), state VARCHAR(255)); CREATE VIEW LocalCustomers AS SELECT * FROM Customers WHERE state IN ('NY', 'NJ', 'PA');", "output": "SELECT l.city, COUNT(l.id) as customer_count FROM LocalCustomers l GROUP BY l.city ORDER BY customer_count DESC LIMIT 3;"}
{"input": " '\ud14d\uc0ac\uc2a4' \ubc0f '\ud50c\ub85c\ub9ac\ub2e4'\uc5d0 \uc704\uce58\ud55c \ub9e4\uc7a5\uc5d0\uc11c \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud310\ub9e4\ub418\uc9c0 \uc54a\uc740 \uc81c\ud488\uc5d0 \ub300\ud55c \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE Stores (store_id INT, store_name VARCHAR(50), state VARCHAR(50)); INSERT INTO Stores (store_id, store_name, state) VALUES (1, 'Farm Fresh', 'Texas'), (2, 'Green Earth', 'Florida'); CREATE TABLE Inventory (inventory_id INT, product_id INT, product_name VARCHAR(50), store_id INT, last_sale_date DATE); INSERT INTO Inventory (inventory_id, product_id, product_name, store_id, last_sale_date) VALUES (1, 1, 'Bananas', 1, '2022-03-15'), (2, 2, 'Oranges', 2, '2022-06-01');", "output": "DELETE FROM Inventory WHERE last_sale_date < DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) AND store_id IN (SELECT store_id FROM Stores WHERE state IN ('Texas', 'Florida'));"}
{"input": " \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc640 \ub871\ube44\uce58 \ud56d\uad6c\ub97c \uc624\uac00\uba70 \ubb3c\ud488\uc744 \uc6b4\uc1a1\ud55c \uc120\ubc15\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50)); INSERT INTO ports (port_id, port_name) VALUES (1, 'Los Angeles'), (2, 'Long Beach'); CREATE TABLE vessel_port (vessel_id INT, port_id INT); INSERT INTO vessel_port (vessel_id, port_id) VALUES (1, 1), (2, 2), (3, 1), (4, 2); CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50)); INSERT INTO vessels (vessel_id, vessel_name) VALUES (1, 'Vessel A'), (2, 'Vessel B'), (3, 'Vessel C'), (4, 'Vessel D');", "output": "SELECT DISTINCT v.vessel_name FROM vessels v JOIN vessel_port vp ON v.vessel_id = vp.vessel_id JOIN ports p ON vp.port_id = p.port_id WHERE p.port_name IN ('Los Angeles', 'Long Beach');"}
{"input": " \uc138\uacc4 3\ub300 \uc0dd\uc0b0\uacf5\uc7a5\uc758 \uc758\ub958\ub2f9 \uc0dd\uc0b0\uc6d0\uac00\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (id INT, factory VARCHAR(255), country VARCHAR(255), cost DECIMAL(10,2), quantity INT); INSERT INTO production (id, factory, country, cost, quantity) VALUES (1, 'Fabric Inc', 'Spain', 150.00, 100), (2, 'Stitch Time', 'USA', 120.00, 200), (3, 'Sew Good', 'India', 130.00, 150);", "output": "SELECT factory, cost/quantity as cost_per_garment FROM (SELECT factory, cost, quantity, ROW_NUMBER() OVER (ORDER BY quantity DESC) as rn FROM production) t WHERE rn <= 3;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc218\uc640 'Sarah Lee'\uac00 \uc9c4\ud589\ud558\ub294 \ud504\ub85c\uadf8\ub7a8\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE restorative_justice_programs (id INT, program_name TEXT, location TEXT, facilitator TEXT, participants INT); INSERT INTO restorative_justice_programs (id, program_name, location, facilitator, participants) VALUES (1, 'Victim Offender Mediation', 'Chicago', 'John Smith', 15), (2, 'Restorative Circles', 'Los Angeles', 'Ahmed Rami', 20), (3, 'Victim Empathy Workshop', 'Chicago', 'Sarah Lee', 12);", "output": "SELECT location, COUNT(*) AS total_programs, SUM(CASE WHEN facilitator = 'Sarah Lee' THEN 1 ELSE 0 END) AS sarah_lee_programs FROM restorative_justice_programs GROUP BY location;"}
{"input": " \uc804\uccb4 \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218 \ub300\ube44 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ucc38\uc5ec\ud558\ub294 \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, JoinDate DATE, Region VARCHAR(50));", "output": "SELECT v.Region, ROUND(COUNT(*) / (SELECT COUNT(*) FROM Volunteers) * 100, 2) as Percentage FROM Volunteers v GROUP BY v.Region;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac1c\ubd09\ub41c TV \ud504\ub85c\uadf8\ub7a8\uacfc \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE movies (title VARCHAR(255), genre VARCHAR(50), budget INT, release_year INT); CREATE TABLE tv_shows (title VARCHAR(255), genre VARCHAR(50), budget INT, release_year INT); INSERT INTO movies (title, genre, budget, release_year) VALUES ('Movie7', 'Comedy', 22000000, 2020), ('Movie8', 'Drama', 28000000, 2021), ('Movie9', 'Action', 32000000, 2022); INSERT INTO tv_shows (title, genre, budget, release_year) VALUES ('Show13', 'Comedy', 18000000, 2021), ('Show14', 'Drama', 24000000, 2022), ('Show15', 'Action', 29000000, 2023);", "output": "SELECT AVG(budget) FROM (SELECT budget FROM movies WHERE release_year >= (SELECT YEAR(CURRENT_DATE()) - 3) UNION ALL SELECT budget FROM tv_shows WHERE release_year >= (SELECT YEAR(CURRENT_DATE()) - 3)) as combined;"}
{"input": " 30\uac74\uc774 \ub118\ub294 \ud30c\uc0b0 \uc0ac\uac74\uc744 \ucc98\ub9ac\ud55c \ubcc0\ud638\uc0ac\uc758 \uace0\uc720 \uc131\uacfc \uac01\uac01\uc758 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE bankruptcy_cases (case_id INT, attorney_id INT, attorney_last_name VARCHAR(50));", "output": "SELECT attorney_last_name, COUNT(*) as case_count FROM bankruptcy_cases GROUP BY attorney_last_name HAVING COUNT(*) > 30;"}
{"input": " 2021\ub144 3\uc6d4 \uccab\uc9f8 \uc8fc\uc5d0 \ubc84\uc2a4 \ubc88\ud638\ubcc4\ub85c \uc9d5\uc218\ub41c \ucd1d \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA trans schemas.trans; CREATE TABLE bus_fares (bus_number INT, fare FLOAT, fare_date DATE); INSERT INTO bus_fares (bus_number, fare, fare_date) VALUES (1201, 1.75, '2021-03-01'), (1201, 1.75, '2021-03-02'), (1201, 1.75, '2021-03-03'), (1201, 1.75, '2021-03-04'), (1201, 1.75, '2021-03-05'), (1202, 2.25, '2021-03-01'), (1202, 2.25, '2021-03-02'), (1202, 2.25, '2021-03-03'), (1202, 2.25, '2021-03-04'), (1202, 2.25, '2021-03-05');", "output": "SELECT bus_number, SUM(fare) OVER (PARTITION BY bus_number) FROM bus_fares WHERE fare_date BETWEEN '2021-03-01' AND '2021-03-05';"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \uc9c0\uc5ed\ubcc4 \uac15\uc6b0\ub7c9 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Rainfall_Trend (date DATE, rainfall INT, region VARCHAR(20));", "output": "SELECT region, rainfall, ROW_NUMBER() OVER(PARTITION BY region ORDER BY date DESC) as rank, AVG(rainfall) OVER(PARTITION BY region ORDER BY date ROWS BETWEEN 11 PRECEDING AND CURRENT ROW) as avg_rainfall FROM Rainfall_Trend WHERE date >= DATEADD(year, -2, CURRENT_DATE);"}
{"input": " \uac01 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cases (case_id INT, attorney_id INT);", "output": "SELECT attorney_id, COUNT(*) FROM cases GROUP BY attorney_id;"}
{"input": " \ub300\uc655\uace0\ub798\uc758 \uc5f0\uc18d \uc5f0\ub3c4 \uac04 \uac1c\uccb4\uc218 \uaddc\ubaa8\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE blue_whale_population (year INT, population INT); INSERT INTO blue_whale_population (year, population) VALUES (2000, 9000), (2001, 9500), (2002, 10000), (2003, 10500);", "output": "SELECT year, population, population - LAG(population) OVER (ORDER BY year) as population_change FROM blue_whale_population;"}
{"input": " \uc0e4\ub9ac\uc544 \uc900\uc218 \ub300\ucd9c\uacfc \uae30\uc874 \ub300\ucd9c\uc744 \ubaa8\ub450 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uae08\uc735 \uae30\uad00\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE financial_institutions (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); INSERT INTO financial_institutions (id, name, type, location) VALUES (1, 'ABC Bank', 'Islamic', 'India'); INSERT INTO financial_institutions (id, name, type, location) VALUES (2, 'Islamic Bank', 'Conventional', 'UAE'); INSERT INTO financial_institutions (id, name, type, location) VALUES (3, 'XYZ Bank', 'Islamic', 'Saudi Arabia'); CREATE TABLE loans (id INT, institution_id INT, type VARCHAR(255), amount DECIMAL(10,2), date DATE); INSERT INTO loans (id, institution_id, type, amount, date) VALUES (1, 1, 'Islamic', 5000.00, '2022-01-01'); INSERT INTO loans (id, institution_id, type, amount, date) VALUES (2, 1, 'Conventional', 6000.00, '2022-01-02'); INSERT INTO loans (id, institution_id, type, amount, date) VALUES (3, 2, 'Conventional', 7000.00, '2022-01-03'); INSERT INTO loans (id, institution_id, type, amount, date) VALUES (4, 3, 'Islamic', 8000.00, '2022-01-04');", "output": "SELECT name FROM financial_institutions WHERE id IN (SELECT institution_id FROM loans WHERE type = 'Islamic') AND id IN (SELECT institution_id FROM loans WHERE type = 'Conventional');"}
{"input": "\uc601\ud654 \uc0c1\uc601\uacfc \uc2dc \ub0ad\ub3c5\ud68c\uc5d0 \ucc38\uc11d\ud55c \ub0a8\uc131\uc758 \uc218\ub294 \uc5ec\uc131\ubcf4\ub2e4 \uba87 \uba85 \ub354 \ub9ce\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE film_screenings (attendee_id INT, gender TEXT); CREATE TABLE poetry_readings (attendee_id INT, gender TEXT);", "output": "SELECT 'Film Screenings' AS event_type, SUM(CASE WHEN gender = 'Male' THEN 1 ELSE -1 END) AS gender_difference FROM film_screenings GROUP BY gender UNION ALL SELECT 'Poetry Readings', SUM(CASE WHEN gender = 'Male' THEN 1 ELSE -1 END) FROM poetry_readings GROUP BY gender;"}
{"input": "\uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc774 \ud560\ub2f9\ub41c \uac01 \uc8fc\uc758 \uc2a4\ub9c8\ud2b8 \uc2dc\ud2f0 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE smart_projects (project_id INT, project_name VARCHAR(100), state VARCHAR(50), budget FLOAT); CREATE TABLE states (state VARCHAR(50), country VARCHAR(50));", "output": "SELECT s.state, COUNT(sp.project_id) FROM smart_projects sp INNER JOIN states s ON sp.state = s.state JOIN (SELECT state, MAX(budget) AS max_budget FROM smart_projects GROUP BY state) AS sm ON s.state = sm.state AND sp.budget = sm.max_budget GROUP BY s.state;"}
{"input": " 2024\ub144 \uac01 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Budget (id INT, category TEXT, year INT, allocated_amount INT); INSERT INTO Budget (id, category, year, allocated_amount) VALUES (1, 'Arts & Culture', 2024, 25000); INSERT INTO Budget (id, category, year, allocated_amount) VALUES (2, 'Environment', 2024, 40000);", "output": "SELECT category, SUM(allocated_amount) FROM Budget WHERE year = 2024 GROUP BY category;"}
{"input": " \ud3c9\uade0 \uae30\uc628\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed\uc5d0\uc11c \ud06c\uae30\uac00 \uac00\uc7a5 \ud070 \ube59\ud558\ub294 \uc5b4\ub290 \uac83\uc785\ub2c8\uae4c?", "context": "CREATE TABLE glaciers (id INT PRIMARY KEY, name VARCHAR(255), size INT, latitude FLOAT, longitude FLOAT, region VARCHAR(255)); INSERT INTO glaciers (id, name, size, latitude, longitude, region) VALUES (1, 'Glacier A', 150, 78.9, 15.1, 'Arctic'), (2, 'Glacier B', 200, 75.5, -125.3, 'Antarctic'), (3, 'Glacier C', 120, 68.7, 14.2, 'Arctic'), (4, 'Glacier D', 250, 63.4, -168.5, 'Antarctic');", "output": "SELECT g.name, g.size FROM glaciers g INNER JOIN (SELECT region, AVG(latitude) AS avg_temp FROM glaciers GROUP BY region ORDER BY avg_temp DESC LIMIT 1) r ON g.region = r.region WHERE g.size = (SELECT MAX(size) FROM glaciers WHERE region = r.region);"}
{"input": " \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc911 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 75 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc758 \uad6d\uac00, \uc9c0\uc5ed \ubc0f \ubaa8\ubc14\uc77c \ud0c0\uc6cc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE countries (country_id INT PRIMARY KEY, country_name VARCHAR(255)); INSERT INTO countries (country_id, country_name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'); CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255), country_id INT); INSERT INTO regions (region_id, region_name, country_id) VALUES (1, 'East', 1), (2, 'West', 1), (3, 'Central', 2), (4, 'North', 3), (5, 'South', 3); CREATE TABLE mobile_towers (tower_id INT PRIMARY KEY, region_id INT); INSERT INTO mobile_towers (tower_id, region_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5); CREATE TABLE broadband_subscribers (subscriber_id INT PRIMARY KEY, region_id INT, data_usage FLOAT); INSERT INTO broadband_subscribers (subscriber_id, region_id, data_usage) VALUES (1, 1, 80.0), (2, 2, 70.0), (3, 3, 90.0), (4, 4, 65.0), (5, 5, 100.0);", "output": "SELECT c.country_name, r.region_name, m.tower_id FROM countries c JOIN regions r ON c.country_id = r.country_id JOIN mobile_towers m ON r.region_id = m.region_id JOIN broadband_subscribers b ON r.region_id = b.region_id GROUP BY r.region_id HAVING AVG(b.data_usage) > 75;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uba54\ub274 \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \ubc1c\uc0dd\ud55c \ud3d0\uae30\ubb3c\uc758 \ucd1d\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE waste (waste_id INT, menu_item_id INT, waste_amount INT, waste_date DATE); INSERT INTO waste VALUES (1, 1, 50, '2022-01-01'), (2, 2, 75, '2022-02-01'), (3, 3, 60, '2022-03-01'), (4, 1, 100, '2022-04-01'); CREATE TABLE menu_items (menu_item_id INT, category VARCHAR(255)); INSERT INTO menu_items VALUES (1, 'Entrees'), (2, 'Soups'), (3, 'Salads');", "output": "SELECT c1.category, SUM(w1.waste_amount) AS total_waste FROM waste w1 INNER JOIN menu_items m1 ON w1.menu_item_id = m1.menu_item_id INNER JOIN (SELECT menu_item_id, category FROM menu_items EXCEPT SELECT menu_item_id, category FROM menu_items WHERE menu_item_id NOT IN (SELECT menu_item_id FROM waste)) c1 ON m1.menu_item_id = c1.menu_item_id WHERE w1.waste_date > DATEADD(year, -1, GETDATE()) GROUP BY c1.category;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc720\ub7fd \uc758\ub958 \uc0dd\uc0b0\uc5d0 \ub300\ud55c CO2 \ubc30\ucd9c\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE co2_emissions (id INT, date DATE, region VARCHAR(255), co2_emissions INT); INSERT INTO co2_emissions (id, date, region, co2_emissions) VALUES (1, '2022-01-01', 'Europe', 100), (2, '2022-02-01', 'Europe', 105), (3, '2022-03-01', 'Europe', 110), (4, '2022-04-01', 'Europe', 115), (5, '2022-05-01', 'Europe', 120);", "output": "SELECT date, AVG(co2_emissions) OVER (ORDER BY date ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) AS moving_avg FROM co2_emissions WHERE region = 'Europe';"}
{"input": " national_forests \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ud0c4\uc18c \uaca9\ub9ac\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc885\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE national_forests.carbon_sequestration (species VARCHAR(255), sequestration_rate DECIMAL(5,2));", "output": "SELECT species FROM national_forests.carbon_sequestration WHERE sequestration_rate = (SELECT MAX(sequestration_rate) FROM national_forests.carbon_sequestration);"}
{"input": " 2022\ub144 \uc9c0\uc5ed\ubcc4 \uc5d0\ub108\uc9c0 \uc800\uc7a5\ub7c9 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc0ac\uc6a9\ub7c9 \ucc28\uc774 \uacc4\uc0b0", "context": "CREATE TABLE energy_storage (date DATE, region VARCHAR(255), capacity INT, usage INT); INSERT INTO energy_storage (date, region, capacity, usage) VALUES ('2022-01-01', 'West Coast', 1000, 600), ('2022-01-01', 'East Coast', 800, 400);", "output": "SELECT region, MAX(usage) - MIN(usage) FROM energy_storage WHERE EXTRACT(YEAR FROM date) = 2022 GROUP BY region;"}
{"input": " \uc9c0\ub09c 10\uacbd\uae30\uc5d0\uc11c \ub4dd\uc810 \uba74\uc5d0\uc11c \uac00\uc7a5 \ub6f0\uc5b4\ub09c \ub18d\uad6c \uc120\uc218\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE basketball_players (id INT, name VARCHAR(50), points INT, game_date DATE);", "output": "SELECT name FROM (SELECT name, points, ROW_NUMBER() OVER (ORDER BY points DESC) as rank FROM basketball_players WHERE game_date >= DATEADD(day, -10, GETDATE()) ) subquery WHERE rank = 1;"}
{"input": " \uc218\uc775\uc774 10,000\uc774 \ub118\ub294 \ubaa8\ub4e0 \ubb38\ud654 \ud589\uc0ac\uc640 \ud574\ub2f9 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cultural_events (event_id INT, event_name VARCHAR(50), artist_name VARCHAR(50), revenue DECIMAL(10,2)); INSERT INTO cultural_events (event_id, event_name, artist_name, revenue) VALUES (1, 'Dance Performance', 'Artist C', 15000); INSERT INTO cultural_events (event_id, event_name, artist_name, revenue) VALUES (2, 'Music Concert', 'Artist D', 8000);", "output": "SELECT cultural_events.event_name, artist_name, revenue FROM cultural_events INNER JOIN (SELECT event_name, MAX(revenue) as max_revenue FROM cultural_events GROUP BY event_name) subquery ON cultural_events.event_name = subquery.event_name AND cultural_events.revenue = subquery.max_revenue;"}
{"input": " \uc6b0\uc8fc\ube44\ud589\uc0ac\uac00 \ucc98\uc74c\uc73c\ub85c \uc6b0\uc8fc \ube44\ud589\uc744 \ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts(ID INT, Name VARCHAR(50), Age INT, FirstMissionDate DATE);", "output": "SELECT MIN(Age) FROM Astronauts INNER JOIN (SELECT MIN(FirstMissionDate) AS FirstMission FROM Astronauts) AS Subquery ON Astronauts.FirstMissionDate = Subquery.FirstMission;"}
{"input": " \ud574\ub2f9 \uc7a5\ub974\uc5d0\uc11c \ub2e4\ub978 \uc5b4\ub5a4 \ub178\ub798\ubcf4\ub2e4 \ub354 \ub9ce\uc774 \uc2a4\ud2b8\ub9ac\ubc0d\ub41c \ubaa8\ub4e0 \ub178\ub798\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE genre_song_streams (genre VARCHAR(10), song_id INT, stream_count BIGINT);", "output": "SELECT genre, song_id, stream_count FROM genre_song_streams gss1 WHERE stream_count >= ALL (SELECT stream_count FROM genre_song_streams gss2 WHERE gss1.genre = gss2.genre) ORDER BY genre;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc758 \ud3c9\uade0 \uc778\uad6c \uaddc\ubaa8\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_data (id INT PRIMARY KEY, name VARCHAR(255), population INT, region VARCHAR(255)); INSERT INTO community_data (id, name, population, region) VALUES (1, 'Community A', 500, 'Arctic'); INSERT INTO community_data (id, name, population, region) VALUES (2, 'Community B', 800, 'Non-Arctic'); INSERT INTO community_data (id, name, population, region) VALUES (3, 'Community C', 300, 'Arctic');", "output": "SELECT region, AVG(population) AS avg_population FROM community_data WHERE region = 'Arctic' GROUP BY region;"}
{"input": "2023 \ud68c\uacc4\uc5f0\ub3c4\uc5d0 \ud658\uacbd \uc11c\ube44\uc2a4\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc608\uc0b0\uc774 \ud560\ub2f9\ub41c \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\uc640 \uac01 \ub3c4\uc2dc\uc758 \uc608\uc0b0\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE city_environmental_budget (city VARCHAR(255), fiscal_year INT, budget DECIMAL(10,2)); INSERT INTO city_environmental_budget (city, fiscal_year, budget) VALUES ('New York', 2023, 12000000.00), ('Los Angeles', 2023, 10000000.00), ('Chicago', 2023, 15000000.00), ('Houston', 2023, 8000000.00), ('Miami', 2023, 9000000.00);", "output": "SELECT city, budget FROM (SELECT city, budget, ROW_NUMBER() OVER (ORDER BY budget DESC) as rank FROM city_environmental_budget WHERE fiscal_year = 2023 AND service = 'Environmental') as ranked_cities WHERE rank <= 3"}
{"input": " \uc9c0\ub09c \ub2ec \uc778\ub3c4\uc758 \uc625\uc218\uc218 \uc791\ubb3c\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE crop_temperature (id INT, crop VARCHAR(50), temperature FLOAT, record_date DATE); INSERT INTO crop_temperature (id, crop, temperature, record_date) VALUES (1, 'Corn', 30.5, '2022-04-01'), (2, 'Soybeans', 20.2, '2022-04-01'), (3, 'Cotton', 40.0, '2022-04-01'), (4, 'Wheat', 15.7, '2022-04-01'), (5, 'Corn', 32.1, '2022-04-02'), (6, 'Soybeans', 22.8, '2022-04-02'), (7, 'Cotton', 41.5, '2022-04-02'), (8, 'Wheat', 17.3, '2022-04-02'), (9, 'Corn', 35.0, '2022-04-03'), (10, 'Soybeans', 25.6, '2022-04-03');", "output": "SELECT AVG(temperature) FROM crop_temperature WHERE crop = 'Corn' AND record_date IN (SELECT record_date FROM satellite_images WHERE farm_id IN (SELECT id FROM farmers WHERE location = 'India')) AND record_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"input": " LoL\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ucc54\ud53c\uc5b8\uc744 \uae30\uc900\uc73c\ub85c \ud50c\ub808\uc774\uc5b4\uc758 \uc2b9\ub960\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE lolgames (game_id INT, champion VARCHAR(50), winner BOOLEAN); INSERT INTO lolgames (game_id, champion, winner) VALUES (1, 'Ashe', true);", "output": "SELECT champion, AVG(winner) as win_rate, RANK() OVER (ORDER BY AVG(winner) DESC) as rank FROM lolgames GROUP BY champion"}
{"input": " '\uac24\ub7ec\ub9acD'\uc5d0 '\uc624\uc870' \uc791\uac00\uc758 \uc0c8\ub85c\uc6b4 \ucd94\uc0c1\ud654 \uc0bd\uc785", "context": "CREATE TABLE Artists (id INT, name VARCHAR(50), style VARCHAR(20)); INSERT INTO Artists (id, name, style) VALUES (1, 'Ojo', 'Abstract'), (2, 'Pablo', 'Cubism'); CREATE TABLE Galleries (id INT, name VARCHAR(50), type VARCHAR(20)); INSERT INTO Galleries (id, name, type) VALUES (1, 'Gallery A', 'Modern'), (2, 'Gallery B', 'Contemporary'), (3, 'Gallery C', 'Modern'), (4, 'Gallery D', 'Abstract');", "output": "INSERT INTO ArtPieces (id, title, galleryId, year) SELECT NULL, 'New Abstract Painting', 4, YEAR(CURRENT_DATE) AS thisYear FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM ArtPieces WHERE title = 'New Abstract Painting' AND galleryId = 4);"}
{"input": " 2022\ub144 4\uc6d4\uc744 \uae30\uc900\uc73c\ub85c \ub3c4\ucfc4\uc758 \uc77c\uc2dd \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \ud0c4\uc218\ud654\ubb3c \ud568\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc0c1\uc704 3\uac1c \uc694\ub9ac\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE dishes (restaurant_name TEXT, cuisine TEXT, dish TEXT, carbohydrates INTEGER, dish_date DATE); INSERT INTO dishes (restaurant_name, cuisine, dish, carbohydrates, dish_date) VALUES ('Tokyo Sushi', 'Japanese', 'Sashimi', 5, '2022-04-01');", "output": "SELECT dish, carbohydrates FROM (SELECT dish, carbohydrates, ROW_NUMBER() OVER (PARTITION BY dish_date ORDER BY carbohydrates ASC) as rn FROM dishes WHERE restaurant_name LIKE 'Tokyo%' AND cuisine = 'Japanese' AND dish_date >= '2022-04-01' AND dish_date < '2022-05-01') t WHERE rn <= 3;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uc9c4\ud589\ub41c \ubaa8\ub4e0 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac\uc640 \ucc38\uac00\uad6d \uc218\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE DefenseDiplomacy (ID INT, EventName TEXT, EventDate DATE, ParticipatingCountries TEXT); INSERT INTO DefenseDiplomacy VALUES (1, 'Event 1', '2017-01-01', 'China, Japan, South Korea'); CREATE VIEW AsiaPacific AS SELECT Country FROM DefenseDiplomacy WHERE Country IN ('China', 'Japan', 'South Korea', 'Australia', 'India');", "output": "SELECT EventName, ParticipatingCountries, COUNT(DISTINCT SUBSTRING_INDEX(ParticipatingCountries, ',', n)) as NumberOfCountries FROM DefenseDiplomacy d CROSS JOIN (SELECT numbers.N FROM (SELECT 1 as N UNION ALL SELECT 2 UNION ALL SELECT 3) numbers) n JOIN AsiaPacific ap ON d.Country = ap.Country WHERE EventDate BETWEEN DATEADD(year, -5, GETDATE()) AND GETDATE() GROUP BY EventName, ParticipatingCountries;"}
{"input": " \ud55c \uc2dc\uc98c\uc5d0 \uac00\uc7a5 \ub9ce\uc740 3\uc810\uc29b\uc744 \uc131\uacf5\uc2dc\ud0a8 \ub18d\uad6c \uc120\uc218\ub97c \ucc3e\uc73c\uc138\uc694?", "context": "CREATE TABLE Players (player_id INTEGER, name TEXT, three_pointers INTEGER); INSERT INTO Players (player_id, name, three_pointers) VALUES (1, 'Player 1', 200), (2, 'Player 2', 250), (3, 'Player 3', 300);", "output": "SELECT name FROM Players WHERE three_pointers = (SELECT MAX(three_pointers) FROM Players);"}
{"input": " 2021\ub144 3\ubd84\uae30 \uac01 \uad11\uc0b0 \ud604\uc7a5\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site (site_id INT, site_name VARCHAR(20)); INSERT INTO site (site_id, site_name) VALUES (1, 'SiteA'), (2, 'SiteB'); CREATE TABLE co2_emission (emission_id INT, site_id INT, emission_quantity INT, emission_date DATE); INSERT INTO co2_emission (emission_id, site_id, emission_quantity, emission_date) VALUES (1, 1, 5000, '2021-07-01'), (2, 1, 6000, '2021-08-01'), (3, 2, 4000, '2021-07-01');", "output": "SELECT site_id, SUM(emission_quantity) FROM co2_emission WHERE emission_date BETWEEN '2021-07-01' AND '2021-09-30' GROUP BY site_id;"}
{"input": "\uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ud559\uad50\ub2f9 \ud559\uc0dd\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE schools (id INT, name VARCHAR(255)); INSERT INTO schools VALUES (1, 'SchoolA'), (2, 'SchoolB'); CREATE TABLE student_mental_health (id INT, student_id INT, school_id INT, score INT, date DATE);", "output": "SELECT school_id, AVG(score) as avg_score FROM (SELECT school_id, score, date, ROW_NUMBER() OVER(PARTITION BY school_id ORDER BY date DESC) as rn FROM student_mental_health WHERE date >= DATEADD(month, -3, GETDATE())) t WHERE rn = 1 GROUP BY school_id;"}
{"input": " \uad6d\uac00\ubcc4 \ucd1d \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (country VARCHAR(255), smart_contract_count INT); INSERT INTO smart_contracts (country, smart_contract_count) VALUES ('US', 3000), ('Japan', 1500), ('Germany', 2000);", "output": "SELECT country, SUM(smart_contract_count) OVER (PARTITION BY country) FROM smart_contracts;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc74c\uc545\uacfc \ucda4\uc744 \uc911\uc2ec\uc73c\ub85c \ud55c \ubb38\ud654\uc720\uc0b0\uc758 \ube44\uc728\uacfc \uc774\ub4e4\uc774 \uc124\ub9bd\ub41c \ud3c9\uade0 \uc5f0\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HeritageSites (id INT, name VARCHAR(255), location VARCHAR(255), focus_area VARCHAR(255), year_established INT, UNIQUE(id));", "output": "SELECT (COUNT(HeritageSites.id) * 100.0 / (SELECT COUNT(*) FROM HeritageSites WHERE HeritageSites.location = 'Africa')) as pct, AVG(HeritageSites.year_established) as avg_year FROM HeritageSites WHERE HeritageSites.location = 'Africa' AND HeritageSites.focus_area IN ('music', 'dance');"}
{"input": " \ucf5c\ub86c\ube44\uc544\uc640 \uba55\uc2dc\ucf54\uc758 \ub18d\uc5c5\ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8 \uc774\ub984\uacfc \uc608\uc0b0, \uadf8\ub9ac\uace0 \uc608\uc0b0\uc5d0 \ub530\ub978 \uac01 \uc21c\uc704\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE agri_innovation (id INT, name TEXT, location TEXT, budget FLOAT); INSERT INTO agri_innovation (id, name, location, budget) VALUES (1, 'Precision Agriculture', 'Colombia', 300000.00), (2, 'Sustainable Farming', 'Mexico', 450000.00), (3, 'Organic Farming', 'Colombia', 150000.00), (4, 'Farm Mechanization', 'Mexico', 200000.00);", "output": "SELECT name, budget, ROW_NUMBER() OVER (PARTITION BY location ORDER BY budget DESC) as rank FROM agri_innovation WHERE location IN ('Colombia', 'Mexico');"}
{"input": " \ucd1d \uc8fc\ubb38 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uac01 \uace0\uac1d\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc8fc\ubb38 \ube44\uc728\uc744 \uacb0\uc815\ud569\ub2c8\uae4c?", "context": "CREATE TABLE customer_orders (order_id INT, customer_id INT, customer_country VARCHAR(255), sustainable_order BOOLEAN); INSERT INTO customer_orders (order_id, customer_id, customer_country, sustainable_order) VALUES (1, 1, 'USA', TRUE), (2, 2, 'Canada', FALSE), (3, 3, 'Mexico', TRUE), (4, 1, 'USA', TRUE), (5, 2, 'Canada', TRUE), (6, 3, 'Mexico', FALSE), (7, 1, 'USA', FALSE), (8, 2, 'Canada', TRUE), (9, 3, 'Mexico', TRUE), (10, 1, 'USA', TRUE);", "output": "SELECT customer_country, 100.0 * SUM(CASE WHEN sustainable_order THEN 1 ELSE 0 END) OVER (PARTITION BY customer_country) / COUNT(*) OVER (PARTITION BY customer_country) as percentage_sustainable_orders FROM customer_orders;"}
{"input": " \"\ucf5c\ub85c\ub77c\ub3c4\" \uc2dc\uace8 \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \ubcd1\uc6d0\uc5d0\uc11c \ub2f9\ub1e8\ubcd1 \ud658\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \uc2dc\ud589\ud55c \uc758\ub8cc \uc2dc\uc220 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE medical_procedures (procedure_id INT, patient_id INT, hospital_id INT, procedure_date DATE, procedure_name TEXT); INSERT INTO medical_procedures (procedure_id, patient_id, hospital_id, procedure_date, procedure_name) VALUES (1, 1, 1, '2022-01-01', 'Surgery'); CREATE TABLE patient (patient_id INT, patient_name TEXT, age INT, gender TEXT, diagnosis TEXT, location TEXT); INSERT INTO patient (patient_id, patient_name, age, gender, diagnosis, location) VALUES (1, 'Jane Doe', 65, 'Female', 'Diabetes', 'Colorado'); CREATE TABLE hospital (hospital_id INT, hospital_name TEXT, location TEXT); INSERT INTO hospital (hospital_id, hospital_name, location) VALUES (1, 'Rural Hospital A', 'Colorado');", "output": "SELECT SUM(procedures) FROM (SELECT patient_id, COUNT(*) as procedures FROM medical_procedures WHERE patient.diagnosis = 'Diabetes' GROUP BY patient_id) as subquery;"}
{"input": "2022 UEFA \ucc54\ud53c\uc5b8\uc2a4 \ub9ac\uadf8\uc5d0\uc11c \uac01 \ud300\uc758 \ucd5c\uace0 \ub4dd\uc810 \uc120\uc218\uc640 \ucd1d \ub4dd\uc810\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ucl (player VARCHAR(255), team VARCHAR(255), goals INT); INSERT INTO ucl (player, team, goals) VALUES ('Messi', 'Barcelona', 10), ('Messi', 'Barcelona', 12), ('Ronaldo', 'Manchester United', 15), ('Ronaldo', 'Manchester United', 13);", "output": "SELECT team, MAX(goals) AS highest_goals, FIRST_VALUE(player) OVER (PARTITION BY team ORDER BY goals DESC) AS top_scorer FROM ucl GROUP BY team;"}
{"input": "\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc '\ub274\uc695'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\ub97c \ubc1b\uc9c0 \ubabb\ud55c \uc870\uc9c1\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE donors (id INT, name TEXT, state TEXT); INSERT INTO donors (id, name, state) VALUES (1, 'John Doe', 'California'); CREATE TABLE donations (id INT, donor_id INT, org_id INT, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, org_id, donation_amount) VALUES (1, 1, 1, 100.00);", "output": "SELECT organizations.name FROM organizations WHERE organizations.id IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'California') AND organizations.id NOT IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'New York');"}
{"input": " \ucc44\uad74\ub41c \uad11\uc11d 1\ud1a4\ub2f9 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \uad11\uc0b0\uc9c0\ub294 \uc5b4\ub514\uc774\uba70, \ubb3c \uc18c\ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MiningSites (SiteID INT, SiteName VARCHAR(50), Location VARCHAR(50), WaterConsumption DECIMAL(10,2), OreTons DECIMAL(10,2), ExtractionDate DATE);CREATE VIEW SiteWaterConsumption AS SELECT SiteID, SiteName, ROW_NUMBER() OVER (PARTITION BY SiteID ORDER BY ExtractionDate DESC) AS ExtractionRank, WaterConsumption / OreTons AS WaterConsumptionRatio FROM MiningSites;", "output": "SELECT SiteName, WaterConsumptionRatio FROM SiteWaterConsumption WHERE ExtractionRank = 1 ORDER BY WaterConsumptionRatio ASC FETCH FIRST 1 ROW ONLY;"}
{"input": " 2024\ub144 \ub18d\uc7a5 'Lush Prairies'\uc5d0 '\ud1a0\ub780' \uc791\ubb3c \uc2e0\uae30\ub85d \uc0bd\uc785", "context": "CREATE TABLE farms (id INT, name TEXT, location TEXT, size FLOAT); INSERT INTO farms (id, name, location, size) VALUES (1, 'Lush Prairies', 'Canada', 250.0); CREATE TABLE crops (id INT, farm_id INT, crop TEXT, yield INT, year INT);", "output": "INSERT INTO crops (id, farm_id, crop, yield, year) VALUES (6, (SELECT id FROM farms WHERE name = 'Lush Prairies'), 'taro', 80, 2024);"}
{"input": " \uac01 \uc815\ube44 \ubd80\uc11c\uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uad70\uc0ac \uc7a5\ube44 \uc720\ud615 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE military_equipment (equipment_id INT, type VARCHAR(255), department VARCHAR(255));INSERT INTO military_equipment (equipment_id, type, department) VALUES (1, 'Aircraft', 'Aerospace Engineering'), (2, 'Vehicle', 'Ground Vehicle Maintenance'), (3, 'Ship', 'Naval Architecture'), (4, 'Vehicle', 'Ground Vehicle Maintenance');", "output": "SELECT department, COUNT(DISTINCT type) as equipment_types FROM military_equipment GROUP BY department;"}
{"input": " 2022\ub144 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4\uc5d0\uc11c\ub294 \uc9c0\uc18d \ubd88\uac00\ub2a5\ud55c \uac74\ucd95 \uad00\ud589\uc5d0 \uba87 \uc2dc\uac04\uc758 \ub178\ub3d9 \uc2dc\uac04\uc774 \uc18c\ube44\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE labor_hours (labor_id INT, hours FLOAT, city VARCHAR(50), year INT, sustainable BOOLEAN); INSERT INTO labor_hours (labor_id, hours, city, year, sustainable) VALUES (7, 150, 'Los Angeles', 2022, FALSE); INSERT INTO labor_hours (labor_id, hours, city, year, sustainable) VALUES (8, 180, 'Los Angeles', 2022, FALSE);", "output": "SELECT SUM(hours) FROM labor_hours WHERE city = 'Los Angeles' AND year = 2022 AND sustainable = FALSE;"}
{"input": " \ub0a8\ubd80\uc758 \uac01 \uc8fc\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uac74\uc124 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE South_CP (project_id INT, state VARCHAR(20), completion_date DATE); INSERT INTO South_CP VALUES (4001, 'FL', '2022-02-28'), (4002, 'GA', '2022-03-31'), (4003, 'AL', '2022-04-30');", "output": "SELECT state, COUNT(project_id) OVER (PARTITION BY state) as num_projects FROM South_CP;"}
{"input": " 2020\ub144 'B\uad6d\uac00'\uc5d0\uc11c \uc2b9\uc778\ub41c \uc784\uc0c1\uc2dc\ud5d8 \uac74\uc218\ub294?", "context": "CREATE TABLE clinical_trials(trial_id TEXT, country TEXT, approval_date DATE); INSERT INTO clinical_trials (trial_id, country, approval_date) VALUES ('Trial1', 'CountryA', '2020-03-15'), ('Trial2', 'CountryB', '2019-12-20'), ('Trial3', 'CountryC', '2020-06-30'), ('Trial4', 'CountryB', '2020-08-01');", "output": "SELECT COUNT(*) FROM clinical_trials WHERE country = 'CountryB' AND EXTRACT(YEAR FROM approval_date) = 2020;"}
{"input": " 2021\ub144 3\ubd84\uae30\uc5d0 \ub274\uc695\uc2dc\uc5d0\uc11c \uc5f4\ub9b0 \ubb38\ud654 \ud589\uc0ac\uc758 \ucd1d \ucc38\uc11d\uc790 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (id INT, name VARCHAR(255));CREATE TABLE cultural_events (id INT, title VARCHAR(255), city_id INT, start_date DATE, end_date DATE, attendees INT);", "output": "SELECT SUM(attendees) as total_attendance FROM cultural_events WHERE city_id = (SELECT id FROM cities WHERE name = 'New York City') AND start_date BETWEEN '2021-07-01' AND '2021-09-30';"}
{"input": " \ucd9c\ud310\ub41c \ub17c\ubb38\uc758 \uce21\uba74\uc5d0\uc11c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc5f0\uad6c\uc790 \uc0c1\uc704 2\uba85\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE researchers (id INT, name TEXT, affiliation TEXT); INSERT INTO researchers (id, name, affiliation) VALUES (1, 'Alice', 'University A'); INSERT INTO researchers (id, name, affiliation) VALUES (2, 'Bob', 'University B'); INSERT INTO researchers (id, name, affiliation) VALUES (3, 'Charlie', 'University C'); CREATE TABLE articles (id INT, title TEXT, year INT, author_id INT); INSERT INTO articles (id, title, year, author_id) VALUES (1, 'Article 1', 2010, 1); INSERT INTO articles (id, title, year, author_id) VALUES (2, 'Article 2', 2011, 1); INSERT INTO articles (id, title, year, author_id) VALUES (3, 'Article 3', 2010, 2); INSERT INTO articles (id, title, year, author_id) VALUES (4, 'Article 4', 2011, 2); INSERT INTO articles (id, title, year, author_id) VALUES (5, 'Article 5', 2010, 3);", "output": "SELECT name, RANK() OVER (ORDER BY COUNT(author_id) DESC) as rank FROM articles GROUP BY author_id, name HAVING rank <= 2;"}
{"input": " \uc0ac\uace0 \uc720\ud615\ubcc4 \ucd1d \uc548\uc804\uc0ac\uace0 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE safety_incidents (vessel_id INT, incident_type VARCHAR(20)); INSERT INTO safety_incidents (vessel_id, incident_type) VALUES (1, 'Collision'), (1, 'Grounding'), (2, 'Fire'), (2, 'Mechanical failure'), (3, 'Collision'), (3, 'Collision');", "output": "SELECT incident_type, COUNT(*) FROM safety_incidents GROUP BY incident_type;"}
{"input": " \ub9c8\uc774\uc560\ubbf8\uc5d0 \uc704\uce58\ud55c \uc815\uc2e0\uac74\uac15\uc13c\ud130\uc5d0\uc11c \uc2a4\ud398\uc778\uc5b4\ub85c \uce58\ub8cc\ub97c \ubc1b\uc740 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_center (center_id INT, name VARCHAR(255), location VARCHAR(255)); INSERT INTO mental_health_center (center_id, name, location) VALUES (1, 'Mental Health Center 1', 'Miami'), (2, 'Mental Health Center 2', 'Miami'), (3, 'Mental Health Center 3', 'New York'); CREATE TABLE patient (patient_id INT, center_id INT, age INT, language VARCHAR(255)); CREATE TABLE therapy_session (session_id INT, patient_id INT, session_language VARCHAR(255));", "output": "SELECT AVG(patient.age) FROM patient JOIN therapy_session ON patient.patient_id = therapy_session.patient_id JOIN mental_health_center ON patient.center_id = mental_health_center.center_id WHERE mental_health_center.location = 'Miami' AND therapy_session.session_language = 'Spanish';"}
{"input": " \ubaa9\uc131\uc5d0\uc11c \uc6b0\uc8fc\uc120\uc774 \uc218\ud589\ud55c \uacfc\ud559\uc801 \uad00\uce21\uc758 \ucd1d \ud69f\uc218\ub97c \uacc4\uc0b0\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE spacecrafts (spacecraft_id INT, name TEXT, observations_jupiter INT); INSERT INTO spacecrafts (spacecraft_id, name, observations_jupiter) VALUES (1, 'Galileo', 1546), (2, 'Juno', 2000), (3, 'Pioneer 10', 20), (4, 'Cassini', 100); CREATE TABLE spacecraft_missions (spacecraft_id INT, mission_id INT); INSERT INTO spacecraft_missions (spacecraft_id, mission_id) VALUES (1, 1), (1, 2), (2, 3), (3, 4), (4, 5); CREATE TABLE space_missions (mission_id INT, name TEXT, destination TEXT); INSERT INTO space_missions (mission_id, name, destination) VALUES (1, 'Jupiter Orbiter', 'Jupiter'), (2, 'Jupiter Probe', 'Jupiter'), (3, 'Galileo', 'Jupiter'), (4, 'Cassini', 'Saturn'), (5, 'Voyager 1', 'Outer Solar System');", "output": "SELECT SUM(observations_jupiter) FROM spacecrafts sc JOIN spacecraft_missions sm ON sc.spacecraft_id = sm.spacecraft_id JOIN space_missions s ON sm.mission_id = s.mission_id WHERE s.destination = 'Jupiter';"}
{"input": " 2010\ub144 \uc774\uc804\uc5d0 \uac74\uc870\ub41c '\ucee8\ud14c\uc774\ub108' \uc720\ud615\uc758 \uc120\ubc15\uc774 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ships (id INT, name VARCHAR(50), type VARCHAR(50), year_built INT, max_capacity INT, port_id INT); CREATE TABLE cargos (id INT, description VARCHAR(50), weight FLOAT, port_id INT, ship_id INT); CREATE VIEW ship_cargo AS SELECT s.name AS ship_name, c.description AS cargo_description, c.weight FROM ships s JOIN cargos c ON s.id = c.ship_id;", "output": "SELECT MAX(c.weight) AS max_weight FROM ships s JOIN ship_cargo sc ON s.name = sc.ship_name JOIN cargos c ON sc.cargo_description = c.description WHERE s.type = 'Container' AND s.year_built < 2010;"}
{"input": " \uc6b0\uc8fc\uc784\ubb34\uc5d0 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc558\uc73c\ub098 \ucc9c\uccb4\ubb3c\ub9ac\ud559 \uc5f0\uad6c \uae30\ub85d\uc744 \ubcf4\uc720\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uad6d\uc801\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (Name TEXT, Age INT, Gender TEXT, Nationality TEXT); INSERT INTO Astronauts (Name, Age, Gender, Nationality) VALUES ('Sophia Chen', 32, 'Female', 'Taiwanese'); CREATE TABLE Research_Data (Astronaut TEXT, Experiment TEXT, Result TEXT); INSERT INTO Research_Data (Astronaut, Experiment, Result) VALUES ('Sophia Chen', 'Astrophysics', 'Completed'); CREATE TABLE Mission_Astronauts (Astronaut TEXT, Spacecraft TEXT);", "output": "SELECT Nationality FROM Astronauts WHERE Name NOT IN (SELECT Astronaut FROM Mission_Astronauts) INTERSECT SELECT Astronaut FROM Research_Data WHERE Experiment = 'Astrophysics';"}
{"input": " 2019\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \uba55\uc2dc\ucf54\ub9cc\uc5d0\uc11c \uc120\ubc15\uc5d0 \uae30\ub85d\ub41c \uae30\ub984 \uc720\ucd9c \uac74\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Region (region_id INT PRIMARY KEY, region_name VARCHAR(255)); INSERT INTO Region (region_id, region_name) VALUES (1, 'Gulf of Mexico'); CREATE TABLE Vessel (vessel_id INT PRIMARY KEY, vessel_name VARCHAR(255), region_id INT); CREATE TABLE Incident (incident_id INT PRIMARY KEY, incident_type VARCHAR(255), vessel_id INT);", "output": "SELECT COUNT(*) FROM Incident I JOIN Vessel V ON I.vessel_id = V.vessel_id JOIN Region R ON V.region_id = R.region_id WHERE R.region_name = 'Gulf of Mexico' AND I.incident_type = 'oil spill' AND I.incident_date >= '2019-01-01' AND I.incident_date < '2022-01-01';"}
{"input": " \ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc5d0\uc11c \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc94\uc8c4\uac00 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE nyc_boroughs (id INT, borough TEXT); INSERT INTO nyc_boroughs (id, borough) VALUES (1, 'Manhattan'), (2, 'Brooklyn'), (3, 'Bronx'), (4, 'Queens'), (5, 'Staten Island'); CREATE TABLE crimes_reported_nyc (id INT, borough TEXT, crime_type TEXT, crime_count INT); INSERT INTO crimes_reported_nyc (id, borough, crime_type, crime_count) VALUES (1, 'Manhattan', 'Murder', 10), (2, 'Manhattan', 'Robbery', 20), (3, 'Brooklyn', 'Murder', 15), (4, 'Brooklyn', 'Robbery', 30), (5, 'Bronx', 'Murder', 20), (6, 'Bronx', 'Robbery', 40), (7, 'Queens', 'Murder', 10), (8, 'Queens', 'Robbery', 20), (9, 'Staten Island', 'Murder', 5), (10, 'Staten Island', 'Robbery', 15);", "output": "SELECT borough, crime_type, SUM(crime_count) AS total_crimes FROM crimes_reported_nyc GROUP BY borough, crime_type;"}
{"input": " \uc54c\ub798\uc2a4\uce74\uc640 \uc624\ud074\ub77c\ud638\ub9c8\uc5d0 \uc2dc\ucd94\ub41c \uc6b0\ubb3c\uc758 \uc218\ub97c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE alaska_oklahoma_wells (state VARCHAR(2), num_wells INT); INSERT INTO alaska_oklahoma_wells (state, num_wells) VALUES ('AK', 500), ('OK', 900);", "output": "SELECT state, num_wells FROM alaska_oklahoma_wells;"}
{"input": " BIPOC \uac1c\uc778\uc774 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uba87 \ud37c\uc13c\ud2b8\ub97c \uc8fc\ub3c4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE initiatives (id INT, leader VARCHAR(255), initiative_type VARCHAR(255)); INSERT INTO initiatives (id, leader, initiative_type) VALUES (1, 'BIPOC Woman', 'digital_divide'), (2, 'White Man', 'digital_divide'), (3, 'BIPOC Man', 'accessibility');", "output": "SELECT (COUNT(*) FILTER (WHERE leader ILIKE '%BIPOC%')) * 100.0 / COUNT(*) FROM initiatives WHERE initiative_type = 'digital_divide';"}
{"input": " \ub3c5\uc77c\uc758 \uce5c\ud658\uacbd \ud638\ud154 \ubc0f \ubc15\ubb3c\uad00 \ubc29\ubb38\uc73c\ub85c \uc778\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eco_hotels (hotel_id INT, country VARCHAR(20), revenue FLOAT); INSERT INTO eco_hotels (hotel_id, country, revenue) VALUES (1, 'Germany', 7000.2), (2, 'Germany', 8000.1), (3, 'France', 4000.2); CREATE TABLE museum_visits (visit_id INT, country VARCHAR(20), amount FLOAT); INSERT INTO museum_visits (visit_id, country, amount) VALUES (1, 'Germany', 3000), (2, 'Germany', 4000), (3, 'Spain', 2000);", "output": "SELECT SUM(revenue) FROM eco_hotels WHERE country = 'Germany' UNION ALL SELECT SUM(amount) FROM museum_visits WHERE country = 'Germany';"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uc9c0\uc911\ud574\uc5d0\uc11c \uc120\ubc15\uc73c\ub85c \uc6b4\uc1a1\ub41c \uc911\ub7c9\uc774 50\ubbf8\ud130\ud1a4\uc744 \ucd08\uacfc\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Heavy_Containers (container_id INTEGER, weight INTEGER, vessel_name TEXT, handling_date DATE); INSERT INTO Heavy_Containers (container_id, weight, vessel_name, handling_date) VALUES (1, 75, 'VesselA', '2021-03-01'), (2, 55, 'VesselB', '2021-03-02'), (3, 80, 'VesselC', '2021-01-01'), (4, 45, 'VesselD', '2021-02-01');", "output": "SELECT COUNT(*) FROM Heavy_Containers WHERE weight > 50 AND vessel_name IN (SELECT vessel_name FROM Heavy_Containers WHERE handling_date >= '2021-01-01' AND handling_date <= '2021-03-31' AND location = 'Mediterranean');"}
{"input": "\ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \ud654\uc7a5\ud488 \uc131\ubd84\uc744 \uac00\uc7a5 \ub9ce\uc774 \uacf5\uae09\ud558\ub294 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ingredient (id INT, product VARCHAR(255), ingredient VARCHAR(255), sourcing_country VARCHAR(255)); INSERT INTO Ingredient (id, product, ingredient, sourcing_country) VALUES (1, 'Lush Soak Stimulant Bath Bomb', 'Sodium Bicarbonate', 'England'), (2, 'The Body Shop Born Lippy Strawberry Lip Balm', 'Caprylic/Capric Triglyceride', 'Brazil'), (3, 'Estee Lauder Advanced Night Repair', 'Water', 'France'), (4, 'Estee Lauder Advanced Night Repair', 'Silica', 'Germany'), (5, 'Lush Soak Stimulant Bath Bomb', 'Citric Acid', 'Spain');", "output": "SELECT sourcing_country, COUNT(DISTINCT product) as product_count FROM Ingredient GROUP BY sourcing_country ORDER BY product_count DESC;"}
{"input": " \uc9c0\ub09c \ub2ec \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc9c0\ucd9c \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uc704 \uad11\uace0\uc8fc\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE advertisers(name VARCHAR(30), region VARCHAR(20), spend FLOAT, ad_date DATE); INSERT INTO advertisers(name, region, spend, ad_date) VALUES('Anna', 'Africa', 1000, '2021-03-01'), ('Ben', 'Africa', 1200, '2021-03-02'), ('Carl', 'Africa', 1500, '2021-03-03'), ('Dana', 'Africa', 1700, '2021-03-04'), ('Eli', 'Africa', 2000, '2021-03-05'), ('Fiona', 'Africa', 1400, '2021-03-06');", "output": "SELECT name, SUM(spend) as total_spend FROM (SELECT name, spend, ROW_NUMBER() OVER (PARTITION BY name ORDER BY ad_date DESC) as rn FROM advertisers WHERE region = 'Africa' AND ad_date >= DATEADD(month, -1, CURRENT_DATE)) t WHERE rn <= 5 GROUP BY name"}
{"input": " \uc9c0\uc5ed \ubc0f \ucd1d \uc608\uc0b0\ubcc4\ub85c \ubaa8\ub4e0 \ub3c4\uc2dc \ub18d\uc5c5 \uacc4\ud68d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE urban_agriculture (initiative_name VARCHAR(255), region VARCHAR(255), budget FLOAT);", "output": "SELECT region, initiative_name, SUM(budget) as total_budget FROM urban_agriculture GROUP BY region;"}
{"input": " \uc815\uc2e0\uacfc \uc57d\ubb3c\uc758 \ucd1d \ud310\ub9e4\ub7c9\ubcf4\ub2e4 \ud310\ub9e4\ub7c9\uc774 \ub354 \ub9ce\uc740 \uc885\uc591 \uc57d\ubb3c\uc758 \uc57d \uc774\ub984\uacfc \ud574\ub2f9 \ucd1d \ud310\ub9e4\ub7c9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, drug_id INT, quarter INT, year INT, revenue FLOAT); INSERT INTO sales (id, drug_id, quarter, year, revenue) VALUES (1, 1, 1, 2022, 1500000); CREATE TABLE drugs (id INT, name VARCHAR(50), company VARCHAR(50), indication VARCHAR(50)); INSERT INTO drugs (id, name, company, indication) VALUES (1, 'DrugA', 'ABC Corp', 'Oncology');", "output": "SELECT s.drug_id, d.name, SUM(s.revenue) as total_sales FROM sales s JOIN drugs d ON s.drug_id = d.id WHERE d.indication = 'Oncology' GROUP BY s.drug_id HAVING total_sales > (SELECT SUM(s2.revenue) FROM sales s2 JOIN drugs d2 ON s2.drug_id = d2.id WHERE d2.indication = 'Psychiatric')"}
{"input": " 2020\ub144\uc5d0\uc11c 2021\ub144 \uc0ac\uc774\uc5d0 \ubbf8\uad6d \ub0b4 \uc720\uae30\ub18d \uc81c\ud488 \ud310\ub9e4\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, year INT, product_type VARCHAR(20), revenue FLOAT); INSERT INTO sales (id, year, product_type, revenue) VALUES (1, 2020, 'organic', 1000), (2, 2021, 'organic', 1200);", "output": "SELECT (revenue_2021 - revenue_2020) / revenue_2020 * 100 AS percentage_change FROM (SELECT (SELECT revenue FROM sales WHERE year = 2021 AND product_type = 'organic') AS revenue_2021, (SELECT revenue FROM sales WHERE year = 2020 AND product_type = 'organic') AS revenue_2020) AS organic_sales;"}
{"input": " \ud3c9\uade0\ubcf4\ub2e4 \uc88b\uc740 \uc131\uacfc\ub97c \ub0b8 \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE program_outcomes (program_id INT, outcome DECIMAL(10, 2)); INSERT INTO program_outcomes (program_id, outcome) VALUES (1, 0.85), (2, 0.70), (3, 0.95);", "output": "SELECT SUM(donations.amount) FROM donations JOIN programs ON donations.program_id = programs.id JOIN program_outcomes ON programs.id = program_outcomes.program_id WHERE program_outcomes.outcome > (SELECT AVG(outcome) FROM program_outcomes);"}
{"input": " \ube0c\ub79c\ub4dc\ubcc4 \uc720\uae30\ub18d \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE brands (brand_id INT, brand_name VARCHAR(255)); CREATE TABLE products (product_id INT, product_name VARCHAR(255), brand_id INT, rating INT); CREATE TABLE ingredients (ingredient_id INT, product_id INT, is_organic BOOLEAN);", "output": "SELECT b.brand_name, AVG(p.rating) as avg_rating FROM brands b INNER JOIN products p ON b.brand_id = p.brand_id INNER JOIN ingredients i ON p.product_id = i.product_id WHERE i.is_organic = TRUE GROUP BY b.brand_name;"}
{"input": " \uace0\uac1d\uc758 \ud3c9\uade0 \uac70\ub798 \uac00\uce58\ub97c \ucd08\uacfc\ud55c 2021\ub144 12\uc6d4\uc758 \ubaa8\ub4e0 \uac70\ub798\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, customer_name VARCHAR(255), city VARCHAR(255)); CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_date DATE, transaction_value DECIMAL(10,2)); INSERT INTO customers (customer_id, customer_name, city) VALUES (1, 'John Doe', 'New York'), (2, 'Jane Smith', 'Los Angeles'), (3, 'Bob Johnson', 'Chicago'); INSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_value) VALUES (1, 1, '2021-12-01', 250.00), (2, 1, '2021-12-05', 300.00), (3, 2, '2021-12-03', 100.00);", "output": "SELECT t.transaction_id, t.customer_id, t.transaction_date, t.transaction_value FROM transactions t INNER JOIN (SELECT customer_id, AVG(transaction_value) as avg_transaction_value FROM transactions WHERE transaction_date BETWEEN '2021-12-01' AND '2021-12-31' GROUP BY customer_id) avg_tv ON t.customer_id = avg_tv.customer_id WHERE t.transaction_value > avg_tv.avg_transaction_value;"}
{"input": " \uc0dd\uc0b0 \uc9c0\uc5ed\ubcc4\ub85c \ud310\ub9e4 \uac00\uaca9\uc774 \uac00\uc7a5 \ub192\uc740 \uc758\ub958\ub97c \uc2dd\ubcc4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE EthicalFashion.GarmentSales (garment_id INT, selling_price DECIMAL(5,2), production_region VARCHAR(20)); INSERT INTO EthicalFashion.GarmentSales (garment_id, selling_price, production_region) VALUES (1, 55.99, 'Asia'), (2, 44.49, 'Africa'), (3, 77.50, 'South America');", "output": "SELECT garment_id, selling_price, production_region, ROW_NUMBER() OVER (PARTITION BY production_region ORDER BY selling_price DESC) AS rank FROM EthicalFashion.GarmentSales;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uace0\uac1d\uc758 \ud3c9\uade0 \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, transaction_date DATE, transaction_value FLOAT); INSERT INTO customers VALUES (1, '2021-01-01', 100.0), (1, '2021-02-01', 200.0), (2, '2021-03-01', 150.0);", "output": "SELECT customer_id, AVG(transaction_value) OVER (PARTITION BY customer_id ORDER BY transaction_date DESC ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) AS avg_transaction_value FROM customers WHERE transaction_date >= DATEADD(month, -1, CURRENT_DATE);"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\ub97c \uae30\uc900\uc73c\ub85c \uacf5\uae09\uc5c5\uccb4 \uc21c\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE suppliers (id INT, name VARCHAR(50), country VARCHAR(50), sustainability_score INT); INSERT INTO suppliers (id, name, country, sustainability_score) VALUES (1, 'GreenTech', 'USA', 85); INSERT INTO suppliers (id, name, country, sustainability_score) VALUES (2, 'EcoInnovations', 'Canada', 90);", "output": "SELECT *, ROW_NUMBER() OVER (ORDER BY sustainability_score DESC) as rank FROM suppliers;"}
{"input": " \uc2dc\uc791\uc77c\uacfc \uc885\ub8cc\uc77c, \uc2e4\ud589\ub41c \uc9c0\uc5ed\uc744 \ud3ec\ud568\ud558\uc5ec \ud2b9\uc815 \uc758\uc57d\ud488\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc2dc\uc7a5 \uc811\uadfc \uc804\ub7b5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE market_access (id INT, drug_name VARCHAR(255), strategy VARCHAR(255), start_date DATE, end_date DATE, region VARCHAR(255)); INSERT INTO market_access (id, drug_name, strategy, start_date, end_date, region) VALUES (1, 'DrugE', 'Strategy1', '2018-01-01', '2019-12-31', 'Europe'); INSERT INTO market_access (id, drug_name, strategy, start_date, end_date, region) VALUES (2, 'DrugE', 'Strategy2', '2020-01-01', '2021-12-31', 'North America');", "output": "SELECT * FROM market_access WHERE drug_name = 'DrugE';"}
{"input": " 2020\ub144 \ub0a8\ubbf8\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE genetic_research (id INT, project_name VARCHAR(50), completion_year INT, region VARCHAR(50)); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (1, 'Genome Mapping', 2019, 'North America'); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (2, 'DNA Sequencing', 2020, 'South America'); INSERT INTO genetic_research (id, project_name, completion_year, region) VALUES (3, 'CRISPR Therapy', 2021, 'Europe');", "output": "SELECT COUNT(*) FROM genetic_research WHERE completion_year = 2020 AND region = 'South America';"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ubd84\uae30\ub2f9 \uad11\ubb3c \ucd94\ucd9c\ub7c9\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE quarterly_extractions (id INT, year INT, quarter INT, extraction_amount INT); INSERT INTO quarterly_extractions (id, year, quarter, extraction_amount) VALUES (1, 2019, 1, 800), (2, 2019, 2, 850), (3, 2019, 3, 900), (4, 2019, 4, 950), (5, 2020, 1, 1000), (6, 2020, 2, 1050), (7, 2020, 3, 1100), (8, 2020, 4, 1150), (9, 2021, 1, 1200), (10, 2021, 2, 1250), (11, 2021, 3, 1300), (12, 2021, 4, 1350);", "output": "SELECT year, quarter, (extraction_amount - LAG(extraction_amount) OVER (PARTITION BY year ORDER BY quarter)) * 100.0 / LAG(extraction_amount) OVER (PARTITION BY year ORDER BY quarter) AS percentage_change FROM quarterly_extractions WHERE year BETWEEN 2019 AND 2021 ORDER BY year, quarter;"}
{"input": " 2021\ub144 \ub0a8\ubbf8 \uad6d\uac00 \uc548\ubcf4\uc5d0 \uc5bc\ub9c8\ub098 \uc9c0\ucd9c\ub410\ub098\uc694?", "context": "CREATE TABLE national_security_budget(budget_id INT, budget FLOAT, year INT, country VARCHAR(255)); INSERT INTO national_security_budget(budget_id, budget, year, country) VALUES (1, 10000000, 2021, 'Country1'), (2, 15000000, 2021, 'Country2'), (3, 12000000, 2022, 'Country3'), (4, 20000000, 2022, 'Country4');", "output": "SELECT SUM(budget) FROM national_security_budget WHERE year = 2021 AND country LIKE 'South%';"}
{"input": " \ub9c8\uc9c0\ub9c9 \ub4f1\ub85d\uc77c\uc744 \uae30\uc900\uc73c\ub85c \uc8fc\ubcc4 \uc790\uc728\uc8fc\ud589\ucc28 \uc0ac\uace0 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE AutonomousVehicleAccidents (accident_id INT, vehicle_id INT, registration_date DATE, state TEXT); CREATE TABLE AutonomousVehicles (vehicle_id INT, vehicle_model TEXT);", "output": "SELECT state, 100.0 * COUNT(*) / (SELECT COUNT(*) FROM AutonomousVehicles) AS percentage_accidents FROM AutonomousVehicleAccidents ava INNER JOIN AutonomousVehicles av ON ava.vehicle_id = av.vehicle_id WHERE registration_date = (SELECT MAX(registration_date) FROM AutonomousVehicleAccidents) GROUP BY state;"}
{"input": " ID 8\uc758 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (id INT, name VARCHAR(255)); INSERT INTO smart_contracts (id, name) VALUES (8, 'Sushiswap');", "output": "SELECT name FROM smart_contracts WHERE id = 8;"}
{"input": "\ub0a0\uc9dc\ubcc4 \uc9c8\ubcd1 \uc0c1\uc704 25%\uc5d0 \ud574\ub2f9\ud558\ub294 \uc9c8\ubcd1 \ubc0f \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE medical (id INT, astronaut_id INT, medical_condition VARCHAR(50), medical_date DATE); INSERT INTO medical (id, astronaut_id, medical_condition, medical_date) VALUES (1, 1, 'Ear Infection', '1969-03-14'); INSERT INTO medical (id, astronaut_id, medical_condition, medical_date) VALUES (2, 2, 'Space Adaptation Syndrome', '1969-07-15'); INSERT INTO medical (id, astronaut_id, medical_condition, medical_date) VALUES (3, 3, 'Motion Sickness', '1963-06-16'); INSERT INTO medical (id, astronaut_id, medical_condition, medical_date) VALUES (4, 4, 'Migraine', '2022-09-25'); INSERT INTO medical (id, astronaut_id, medical_condition, medical_date) VALUES (5, 5, 'Nausea', '2022-11-12');", "output": "SELECT medical_condition, medical_date FROM (SELECT medical_condition, medical_date, NTILE(4) OVER (ORDER BY medical_date) as medical_group FROM medical) AS subquery WHERE medical_group = 4;"}
{"input": " \uac01 \uad00\uce21\uc18c\uc758 \uc9c0\ub09c 3\ub144\uac04 \ud3c9\uade0 \uae30\uc628 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE MonitoringStation (ID INT, Name VARCHAR(100), Location VARCHAR(100), Elevation FLOAT, AnnualTemp FLOAT); INSERT INTO MonitoringStation (ID, Name, Location, Elevation, AnnualTemp) VALUES (1, 'Station X', 'Svalbard', 150, 2.5); INSERT INTO MonitoringStation (ID, Name, Location, Elevation, AnnualTemp) VALUES (2, 'Station Y', 'Greenland', 250, 3.0);", "output": "SELECT Name, AVG(AnnualTemp) OVER (PARTITION BY Name ORDER BY Name ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS AvgAnnualTemp FROM MonitoringStation WHERE YEAR(CurrentDate) - YEAR(DateInstalled) BETWEEN 1 AND 3;"}
{"input": " 'community_education'\uc5d0\uc11c ID\uac00 1\uc778 \ub808\ucf54\ub4dc \uc0ad\uc81c", "context": "CREATE TABLE community_education (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(2), country VARCHAR(50));", "output": "WITH cte AS (DELETE FROM community_education WHERE id = 1) SELECT * FROM cte;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc \ud0c4\uc18c \uc0c1\uc1c4 \uc774\ub2c8\uc154\ud2f0\ube0c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\uc18c \ucd1d \uc0c1\uc1c4\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_offset_initiatives ( id INT PRIMARY KEY, project_name VARCHAR(255), total_offset INT, state VARCHAR(255) );", "output": "SELECT MIN(total_offset) FROM carbon_offset_initiatives WHERE state = 'California';"}
{"input": " 2017\ub144 \uc774\ud6c4 \uc5ec\uc131 \ubc1c\uba85\uac00\uac00 \ucd9c\uc6d0\ud55c \uc724\ub9ac\uc801 AI \ud2b9\ud5c8 \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE inventors (inventor_id INT, inventor_name VARCHAR(100), gender VARCHAR(10)); INSERT INTO inventors VALUES (1, 'Grace Hopper', 'female'), (2, 'Alan Turing', 'male'); CREATE TABLE patents (patent_id INT, patent_name VARCHAR(100), inventor_id INT, filed_year INT); INSERT INTO patents VALUES (1, 'Ethical AI Algorithm', 1, 2017), (2, 'Secure AI System', 1, 2018), (3, 'AI Speed Optimization', 2, 2019); CREATE TABLE patent_categories (patent_id INT, category VARCHAR(50)); INSERT INTO patent_categories VALUES (1, 'ethical AI'), (2, 'ethical AI'), (3, 'AI performance');", "output": "SELECT COUNT(*) FROM patents INNER JOIN inventors ON patents.inventor_id = inventors.inventor_id INNER JOIN patent_categories ON patents.patent_id = patent_categories.patent_id WHERE gender = 'female' AND filed_year >= 2017 AND category = 'ethical AI';"}
{"input": " HR \ubd80\uc11c\uc5d0\uc11c \ud2b8\ub79c\uc2a4\uc820\ub354 \ub610\ub294 \ub17c\ubc14\uc774\ub108\ub9ac\ub85c \ud655\uc778\ub418\uace0 \uae09\uc5ec\uac00 $65,000 \uc774\uc0c1\uc778 \uc9c1\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), GenderIdentity VARCHAR(20), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, Department, GenderIdentity, Salary) VALUES (1, 'IT', 'Male', 70000.00), (2, 'IT', 'Female', 75000.00), (3, 'HR', 'Non-binary', 60000.00), (4, 'IT', 'Non-binary', 70000.00), (5, 'HR', 'Transgender', 75000.00), (6, 'HR', 'Non-binary', 80000.00);", "output": "SELECT COUNT(*) FROM Employees WHERE GenderIdentity IN ('Transgender', 'Non-binary') AND Department = 'HR' AND Salary > 65000;"}
{"input": " \ud68c\uc0ac\ubcc4, \uc5f0\ub3c4\ubcc4 REE \uc0dd\uc0b0\ub7c9\uc744 \uc694\uc57d\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production (company_id INT, year INT, ree_production INT); INSERT INTO production (company_id, year, ree_production) VALUES (1, 2019, 1200), (1, 2020, 1500), (1, 2021, 1800), (2, 2019, 800), (2, 2020, 1000), (2, 2021, 1200);", "output": "SELECT company_id, year, SUM(ree_production) as total_production FROM production GROUP BY company_id, year;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc2dc\uae09\uc774 \uac00\uc7a5 \ub192\uc740 \ub178\ub3d9 \ud1b5\uacc4 \uae30\ub85d \ubaa9\ub85d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE labor_statistics (id INT, category VARCHAR(255), title VARCHAR(255), hourly_wage DECIMAL(5,2));", "output": "SELECT category, title, hourly_wage, ROW_NUMBER() OVER (PARTITION BY category ORDER BY hourly_wage DESC) as wage_rank FROM labor_statistics;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc5f0\ub839\ubcc4 \ubb38\ud654\ud589\uc0ac\uc5d0 \ucc38\uc11d\ud55c \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE event_visitors (id INT, event_name VARCHAR(50), year INT, visitor_age INT, visitor_count INT);", "output": "SELECT year, FLOOR(visitor_age / 10) * 10 as age_group, SUM(visitor_count) as total_visitors FROM event_visitors WHERE year >= 2017 GROUP BY year, FLOOR(visitor_age / 10);"}
{"input": " \ud3c9\uade0 \uc608\uc0b0\ubcf4\ub2e4 \uc608\uc0b0\uc774 \uc801\uac8c \ud560\ub2f9\ub41c \ubd80\uc11c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dept_budget (dept VARCHAR(50), budget INT); INSERT INTO dept_budget (dept, budget) VALUES ('Infrastructure', 800000), ('Education', 700000), ('Health', 900000);", "output": "SELECT dept FROM dept_budget WHERE budget < (SELECT AVG(budget) FROM dept_budget);"}
{"input": " \uac01 \ud654\ud559\ubb3c\uc9c8\uc758 \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemicals (id INT, name TEXT, production_volume INT); INSERT INTO chemicals (id, name, production_volume) VALUES (1, 'Chemical A', 500), (2, 'Chemical B', 300), (3, 'Chemical C', 700);", "output": "SELECT name, AVG(production_volume) FROM chemicals GROUP BY name;"}
{"input": " \uc2b9\ubb34\uc6d0\uc774 100\uba85 \uc774\uc0c1\uc778 \uc120\ubc15\uacfc 50\uba85 \ubbf8\ub9cc\uc778 \uc120\ubc15\uc758 \uc548\uc804 \uae30\ub85d\uc744 \ube44\uad50\ud558\uc138\uc694.", "context": "CREATE TABLE SAFETY_RECORDS (id INT, vessel_name VARCHAR(50), crew_size INT, accidents INT);", "output": "SELECT '100+ crew members' AS category, AVG(accidents) FROM SAFETY_RECORDS WHERE crew_size >= 100 UNION ALL SELECT 'Less than 50 crew members', AVG(accidents) FROM SAFETY_RECORDS WHERE crew_size < 50;"}
{"input": " \uac00\uc7a5 \ub098\uc774 \ub9ce\uc740 \uc0c1\uc704 5\uba85\uc758 \ud50c\ub808\uc774\uc5b4 \ud45c\uc2dc", "context": "CREATE TABLE Players (PlayerID INT, Age INT); INSERT INTO Players (PlayerID, Age) VALUES (1, 50); INSERT INTO Players (PlayerID, Age) VALUES (2, 60);", "output": "SELECT * FROM Players ORDER BY Age DESC LIMIT 5;"}
{"input": " 2020\ub144 \uae30\ubd80\uc790\uac00 100\uba85 \ubbf8\ub9cc\uc778 \uc0ac\uc5c5\uc744 \uc81c\uc678\ud55c \uc0ac\uc5c5\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, year INT, cause TEXT, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, year, cause, donation_amount) VALUES (1, 2020, 'Education', 500.00), (2, 2020, 'Health', 1500.00), (3, 2020, 'Environment', 300.00), (4, 2020, 'Education', 400.00), (5, 2020, 'Education', 50.00);", "output": "SELECT cause, SUM(donation_amount) FROM donations WHERE year = 2020 GROUP BY cause HAVING COUNT(*) >= 100;"}
{"input": "\uac01 \uad6d\uac00\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Products (product_id INT, name VARCHAR(255), category VARCHAR(255), material_id INT); INSERT INTO Products (product_id, name, category, material_id) VALUES (1, 'Recycled Polyester T-Shirt', 'Clothing', 1), (2, 'Bamboo Socks', 'Clothing', 2), (3, 'Recycled Plastic Water Bottle', 'Accessories', 3); CREATE TABLE Materials (material_id INT, name VARCHAR(255), is_sustainable BOOLEAN); INSERT INTO Materials (material_id, name, is_sustainable) VALUES (1, 'Recycled Polyester', TRUE), (2, 'Bamboo', TRUE), (3, 'Recycled Plastic', TRUE); CREATE TABLE Factories (factory_id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO Factories (factory_id, name, country) VALUES (1, 'GreenFactory', 'USA'), (2, 'EcoFriendlyFactory', 'India'), (3, 'SustainableFactory', 'Brazil'); CREATE TABLE ProductFactories (product_id INT, factory_id INT); INSERT INTO ProductFactories (product_id, factory_id) VALUES (1, 1), (2, 2), (3, 3);", "output": "SELECT Factories.country, (SUM(CASE WHEN Materials.is_sustainable THEN 1 ELSE 0 END) / COUNT(DISTINCT Products.product_id)) * 100 AS percentage FROM Factories INNER JOIN ProductFactories ON 1 = 1 INNER JOIN Products ON ProductFactories.factory_id = Products.factory_id INNER JOIN Materials ON Products.material_id = Materials.material_id GROUP BY Factories.country;"}
{"input": " \ubbf8\uad6d\uc5d0 \uac70\uc8fc\ud558\ub294 \uace0\uac1d\uc774 \ubc1b\uc744 \uc218 \uc788\ub294 \ucd5c\ub300 \ub300\ucd9c \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, loan_count INT, country VARCHAR(50)); INSERT INTO clients (client_id, loan_count, country) VALUES (1001, 3, 'United States'), (1002, 1, 'Canada'), (1003, 2, 'Mexico'), (1004, 4, 'Brazil'), (1005, 5, 'United States');", "output": "SELECT MAX(loan_count) FROM clients WHERE country = 'United States';"}
{"input": " \uc2a4\ud398\uc778\uacfc \uc774\ud0c8\ub9ac\uc544\uc758 \uc0dd\ubb3c\uacf5\uc815 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\uc640 \ube44\uc6a9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE bioprocess_engineering (id INT, project_name VARCHAR(50), location VARCHAR(50), cost FLOAT); INSERT INTO bioprocess_engineering (id, project_name, location, cost) VALUES (1, 'ProjectA', 'Spain', 1200000); INSERT INTO bioprocess_engineering (id, project_name, location, cost) VALUES (2, 'ProjectB', 'Italy', 1500000); INSERT INTO bioprocess_engineering (id, project_name, location, cost) VALUES (3, 'ProjectC', 'Italy', 1800000);", "output": "SELECT location, SUM(cost) FROM bioprocess_engineering GROUP BY location HAVING location IN ('Spain', 'Italy');"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc218\uc0c1 \uacbd\ub825\uc774 \uc5c6\ub294 \uc120\uc218\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Athletes (AthleteID INT PRIMARY KEY, Name VARCHAR(100), Sport VARCHAR(50), TeamID INT, LastAwardYear INT); CREATE TABLE Awards (AwardID INT PRIMARY KEY, AthleteID INT, Award VARCHAR(50), Year INT);", "output": "DELETE FROM Athletes WHERE Athletes.LastAwardYear < (YEAR(CURRENT_DATE) - 5) AND Athletes.AthleteID NOT IN (SELECT Awards.AthleteID FROM Awards);"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uc5ed\ub7c9 \uac15\ud654 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name TEXT); INSERT INTO countries (id, name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Mexico'); CREATE TABLE volunteers (id INT, name TEXT, country_id INT); INSERT INTO volunteers (id, name, country_id) VALUES (1, 'John Doe', 1), (2, 'Jane Smith', 2), (3, 'Alice Johnson', 1), (4, 'Bob Williams', 3); CREATE TABLE capacity_building (volunteer_id INT, activity_date DATE); INSERT INTO capacity_building (volunteer_id, activity_date) VALUES (1, '2021-05-12'), (2, '2022-03-15'), (3, '2021-12-28'), (1, '2020-08-07'), (4, '2021-01-02');", "output": "SELECT c.name, COUNT(DISTINCT v.id) as num_volunteers FROM countries c INNER JOIN volunteers v ON c.id = v.country_id INNER JOIN capacity_building cb ON v.id = cb.volunteer_id GROUP BY c.id;"}
{"input": " 2021\ub144 \uc0dd\uc77c\uc5d0 \uc2ec\ubc15\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Birthdays (user_id INT, birthday DATE); CREATE TABLE HeartRateOnBirthday (user_id INT, heart_rate INT, birthday DATE); INSERT INTO Birthdays (user_id, birthday) VALUES (1, '2021-02-14'), (2, '2021-11-28'), (3, '2021-12-12'); INSERT INTO HeartRateOnBirthday (user_id, heart_rate, birthday) VALUES (1, 120, '2021-02-14'), (2, 130, '2021-11-28'), (3, 110, '2021-12-12');", "output": "SELECT user_id, MAX(heart_rate) FROM HeartRateOnBirthday WHERE birthday = (SELECT birthday FROM Birthdays WHERE user_id = HeartRateOnBirthday.user_id) GROUP BY user_id;"}
{"input": " \uad6d\uac00\ubcc4 \ubb38\ud654\uc5ed\ub7c9\ud6c8\ub828 \uc774\uc218\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CulturalCompetencyTraining (TrainingID INT, State VARCHAR(2), CompletionDate DATE); INSERT INTO CulturalCompetencyTraining (TrainingID, State, CompletionDate) VALUES (1, 'NY', '2020-06-01'), (2, 'CA', '2019-12-15'), (3, 'TX', '2021-02-03');", "output": "SELECT State, COUNT(*) OVER (PARTITION BY State) * 100.0 / SUM(COUNT(*)) OVER () AS PercentageCompleted FROM CulturalCompetencyTraining;"}
{"input": " \uc791\ub144\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uce68\uc785 \uc2dc\ub3c4\uac00 \uae30\ub85d\ub41c \uc0c1\uc704 5\uba85\uc758 \uc704\ud611 \ud589\uc704\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4. \uc2dc\ub3c4 \ud69f\uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_actors (id INT, actor_name VARCHAR(255), intrusion_attempts INT, last_seen DATE); INSERT INTO threat_actors (id, actor_name, intrusion_attempts, last_seen) VALUES (1, 'Actor1', 150, '2021-12-31'), (2, 'Actor2', 120, '2021-12-30'), (3, 'Actor3', 80, '2021-12-29');", "output": "SELECT actor_name, intrusion_attempts, RANK() OVER (ORDER BY intrusion_attempts DESC) as rank FROM threat_actors WHERE last_seen >= DATE(NOW()) - INTERVAL 1 YEAR GROUP BY actor_name HAVING rank <= 5;"}
{"input": "\uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ud658\uacbd \ubb38\uc81c\uc5d0 \uad00\ud55c \uac8c\uc2dc\ubb3c\uc744 \uac8c\uc2dc\ud55c \uc0ac\uc6a9\uc790\uc758 \ucd5c\ub300 \ud314\ub85c\uc6cc \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, joined_date DATE, followers INT); INSERT INTO users (id, joined_date, followers) VALUES (1, '2021-01-01', 1000), (2, '2020-05-12', 2000), (3, '2019-10-05', 3000), (4, '2021-07-14', 4000); CREATE TABLE posts (id INT, user_id INT, posted_date DATE); INSERT INTO posts (id, user_id, posted_date) VALUES (1, 1, '2022-06-12'), (2, 1, '2022-05-25'), (3, 2, '2022-03-18'), (4, 3, '2021-11-15'), (5, 4, '2022-06-08'); CREATE TABLE post_tags (post_id INT, tag VARCHAR(255)); INSERT INTO post_tags (post_id, tag) VALUES (1, 'environmental issues'), (2, 'technology'), (3, 'politics'), (4, 'sports'), (5, 'travel');", "output": "SELECT MAX(users.followers) FROM users INNER JOIN posts ON users.id = posts.user_id INNER JOIN post_tags ON posts.id = post_tags.post_id WHERE post_tags.tag = 'environmental issues' AND users.joined_date <= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 'C\ucc3d\uace0'\uc5d0\uc11c \ud558\ub8e8 \ud3c9\uade0 \ucc98\ub9ac\ud558\ub294 \ud314\ub808\ud2b8 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (name varchar(20), pallets_handled int, handling_date date); INSERT INTO Warehouse (name, pallets_handled, handling_date) VALUES ('Warehouse C', 50, '2022-01-01'), ('Warehouse C', 60, '2022-01-02');", "output": "SELECT AVG(pallets_handled / (EXTRACT(DAY FROM handling_date) - EXTRACT(DAY FROM LAG(handling_date) OVER (PARTITION BY name ORDER BY handling_date)))) FROM Warehouse WHERE name = 'Warehouse C';"}
{"input": " '\uc2dc\ub0b4' \uc9c0\uc5ed \ud654\uc7ac \ubc1c\uc0dd \uc2dc \ucd5c\uc18c \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE fire_incidents (id INT, incident_time TIMESTAMP, district VARCHAR(20)); INSERT INTO fire_incidents (id, incident_time, district) VALUES (1, '2022-02-01 12:30:00', 'downtown'), (2, '2022-02-01 15:10:00', 'north'), (3, '2022-02-01 09:45:00', 'downtown');", "output": "SELECT MIN(EXTRACT(EPOCH FROM incident_time - LAG(incident_time) OVER (PARTITION BY district ORDER BY incident_time))) AS min_response_time FROM fire_incidents WHERE district = 'downtown';"}
{"input": " \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ud310\ub9e4 \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ud55c \uac01 \uc758\ub958 \uce74\ud14c\uace0\ub9ac\uc758 \ud310\ub9e4 \uc218\uc775\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Categories (CategoryID INT, CategoryName VARCHAR(255));CREATE TABLE Garments (GarmentID INT, CategoryID INT, SalePrice DECIMAL(10,2));CREATE TABLE Sales (SaleID INT, GarmentID INT, SaleDate DATE, Quantity INT);", "output": "SELECT c.CategoryName, AVG(g.SalePrice * s.Quantity) OVER (PARTITION BY c.CategoryName ORDER BY s.SaleDate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) AS MovingAverageRevenue FROM Categories c JOIN Garments g ON c.CategoryID = g.CategoryID JOIN Sales s ON g.GarmentID = s.GarmentID ORDER BY s.SaleDate;"}
{"input": " Studio Ghibli\uc5d0\uc11c \uc81c\uc791\ud55c \uc601\ud654\ub97c \ud3c9\uac00\ud588\uc9c0\ub9cc \uc560\ub2c8\uba54\uc774\uc158 TV \ud504\ub85c\uadf8\ub7a8\uc744 \uc2dc\uccad\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_ratings (user_id INT, movie_title VARCHAR(50), rating INT, rating_date DATE); CREATE TABLE show_views (user_id INT, show_name VARCHAR(50), views_date DATE); CREATE TABLE movies (id INT, movie_title VARCHAR(50), producer VARCHAR(20), release_date DATE); CREATE TABLE shows (id INT, show_name VARCHAR(50), genre VARCHAR(20), air_date DATE);", "output": "SELECT COUNT(DISTINCT user_ratings.user_id) FROM user_ratings INNER JOIN movies ON user_ratings.movie_title = movies.movie_title WHERE movies.producer = 'Studio Ghibli' AND user_ratings.user_id NOT IN (SELECT user_id FROM show_views INNER JOIN shows ON show_views.show_name = shows.show_name WHERE shows.genre = 'Anime');"}
{"input": " '\uc77c\ubcf8'\uc5d0\uc11c '#food' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc744 \uac00\uc7a5 \ub9ce\uc774 \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790 \uc0c1\uc704 3\uba85\uc740 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE users (id INT, name VARCHAR(50), post_country VARCHAR(50)); INSERT INTO users (id, name, post_country) VALUES (1, 'Hiroshi', 'Japan'); INSERT INTO users (id, name, post_country) VALUES (2, 'Ichigo', 'Japan'); INSERT INTO users (id, name, post_country) VALUES (3, 'Carla', 'USA'); CREATE TABLE user_posts (user_id INT, post_country VARCHAR(50), post_hashtags TEXT); INSERT INTO user_posts (user_id, post_country, post_hashtags) VALUES (1, 'Japan', '#food, #sushi'); INSERT INTO user_posts (user_id, post_country, post_hashtags) VALUES (2, 'Japan', '#food, #ramen'); INSERT INTO user_posts (user_id, post_country, post_hashtags) VALUES (3, 'USA', '#nature');", "output": "SELECT name FROM (SELECT name, ROW_NUMBER() OVER (PARTITION BY post_country ORDER BY COUNT(*) DESC) as rank FROM users JOIN user_posts ON users.id = user_posts.user_id WHERE post_country = 'Japan' AND post_hashtags LIKE '%#food%' GROUP BY name, post_country) AS user_ranks WHERE rank <= 3;"}
{"input": " 'AMS' \ucc3d\uace0\uc5d0\uc11c \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ubc30\uc1a1\ub41c \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shipments (shipment_id int, warehouse_id varchar(5), shipped_date date); INSERT INTO shipments (shipment_id, warehouse_id, shipped_date) VALUES (1, 'AMS', '2022-03-01'), (2, 'AMS', '2022-03-03'), (3, 'AMS', '2022-03-05');", "output": "SELECT MAX(shipped_date) FROM shipments WHERE warehouse_id = 'AMS';"}
{"input": " \ubc31\uc2e0 \uc811\uc885\uc744 \ubc1b\uc740 \uc5b4\ub9b0\uc774\uc758 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc8fc\ub97c \uc5f0\ub839\ub300\ubcc4\ub85c \uad6c\ubd84\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE vaccination_data (id INT, state TEXT, age_group TEXT, vaccinated INT, population INT); INSERT INTO vaccination_data (id, state, age_group, vaccinated, population) VALUES (1, 'California', '0-2', 800000, 1000000), (2, 'New York', '0-2', 700000, 800000);", "output": "SELECT state, age_group, SUM(vaccinated) OVER (PARTITION BY age_group) * 100.0 / SUM(population) OVER (PARTITION BY age_group) as pct_vaccinated, DENSE_RANK() OVER (ORDER BY SUM(vaccinated) OVER (PARTITION BY age_group) * 100.0 / SUM(population) OVER (PARTITION BY age_group) DESC) as rank FROM vaccination_data GROUP BY state, age_group ORDER BY pct_vaccinated DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ub2ec \ud3d0\ub834 \ubc31\uc2e0\uc744 \uc811\uc885\ud55c \ud14d\uc0ac\uc2a4 \ub0b4 \ud658\uc790\uc758 \ub0a8\uc131 \ub300 \uc5ec\uc131 \ube44\uc728\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE patient (patient_id INT, age INT, gender VARCHAR(10), state VARCHAR(10)); INSERT INTO patient (patient_id, age, gender, state) VALUES (1, 45, 'Female', 'Texas'); INSERT INTO patient (patient_id, age, gender, state) VALUES (2, 50, 'Male', 'Texas');", "output": "SELECT (SELECT COUNT(*) FROM patient WHERE gender = 'Male' AND state = 'Texas' AND pneumonia_vaccine_date >= DATEADD(month, -1, GETDATE())) / (SELECT COUNT(*) FROM patient WHERE gender = 'Female' AND state = 'Texas' AND pneumonia_vaccine_date >= DATEADD(month, -1, GETDATE())) AS ratio;"}
{"input": " 'XYZ' \ucc3d\uace0\uc758 \ubc18\ud488 \ubc30\uc1a1 \uc218\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE return_shipments (id INT PRIMARY KEY, warehouse_id INT, FOREIGN KEY (warehouse_id) REFERENCES warehouse(id)); INSERT INTO warehouse (id, name) VALUES (1, 'ABC'), (2, 'XYZ'); INSERT INTO return_shipments (id, warehouse_id) VALUES (1, 1), (2, 2), (3, 2);", "output": "SELECT COUNT(*) FROM return_shipments WHERE warehouse_id = (SELECT id FROM warehouse WHERE name = 'XYZ');"}
{"input": "\"service_animal\" \uc720\ud615\uc744 \uc81c\uc678\ud558\uace0 \"disability_services\" \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ud559\uc0dd\uacfc \uad50\uc9c1\uc6d0\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \uace0\uc720\ud55c \uc219\ubc15 \uc2dc\uc124 \uc720\ud615\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation VARCHAR(50)); CREATE TABLE students (id INT, name VARCHAR(50), accommodation VARCHAR(50));", "output": "SELECT COUNT(DISTINCT accommodation) FROM disability_services.staff WHERE accommodation != 'service_animal' UNION SELECT COUNT(DISTINCT accommodation) FROM disability_services.students WHERE accommodation != 'service_animal';"}
{"input": " \ud574\uacb0 \uc2dc\uac04\uc774 \uac00\uc7a5 \uae34 \uc548\uc804 \uc0ac\uace0\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE incident_resolution (incident_id INT, resolution_time INT, timestamp TIMESTAMP); INSERT INTO incident_resolution (incident_id, resolution_time, timestamp) VALUES (1, 120, '2022-01-01 00:00:00'); INSERT INTO incident_resolution (incident_id, resolution_time, timestamp) VALUES (2, 150, '2022-01-02 00:00:00');", "output": "SELECT incident_id, resolution_time FROM (SELECT incident_id, resolution_time, ROW_NUMBER() OVER (ORDER BY resolution_time DESC) as row_num FROM incident_resolution) as subquery WHERE row_num = 1;"}
{"input": " \uae30\ud6c4 \ubcc0\ud654\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \uc870\uc9c1\uacfc \uc9c0\uc18d \uac00\ub2a5\ud55c \ud22c\uc790\uc640\uc758 \ud30c\ud2b8\ub108\uc2ed\uc5d0 \ub300\ud55c \uc138\ubd80 \uc815\ubcf4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT PRIMARY KEY, strategy VARCHAR(255), risk_level VARCHAR(50), impact_score INT, esg_rating VARCHAR(50));CREATE TABLE organizations (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), sector VARCHAR(255));CREATE TABLE partnerships (id INT PRIMARY KEY, investment_id INT, organization_id INT, start_date DATE, end_date DATE);CREATE VIEW climate_change_organizations AS SELECT * FROM organizations WHERE sector = 'Climate change';CREATE VIEW sustainable_investments AS SELECT * FROM investments WHERE esg_rating = 'High';", "output": "SELECT i.strategy, i.risk_level, i.impact_score, i.esg_rating, o.name, o.location, o.sector, p.start_date, p.end_date FROM partnerships p JOIN sustainable_investments si ON p.investment_id = si.id JOIN climate_change_organizations cco ON p.organization_id = cco.id JOIN investments i ON si.id = i.id JOIN organizations o ON cco.id = o.id WHERE o.location = 'Latin America';"}
{"input": " \ud06c\ub85c\uc2a4 \ud50c\ub7ab\ud3fc \uac8c\uc784\uc744 \uc0ac\uc6a9\ud558\uc5ec e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ucd1d \uc5ec\uc131 \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Players (PlayerID INT, Name VARCHAR(100), Gender VARCHAR(10), Country VARCHAR(50), TotalHoursPlayed INT, Platform VARCHAR(50)); INSERT INTO Players VALUES (1, 'Sophia Lee', 'Female', 'China', 60, 'PC'); INSERT INTO Players VALUES (2, 'William White', 'Male', 'USA', 45, 'Console'); CREATE TABLE GameDesign (GameID INT, GameName VARCHAR(100), Genre VARCHAR(50), CrossPlatform BIT); INSERT INTO GameDesign VALUES (1, 'GameX', 'Sports'); INSERT INTO GameDesign VALUES (2, 'GameY', 'Strategy'); CREATE TABLE EsportsEvents (PlayerID INT, EventName VARCHAR(100)); INSERT INTO EsportsEvents VALUES (1, 'GameX Championship'); INSERT INTO EsportsEvents VALUES (2, 'TournamentY');", "output": "SELECT COUNT(DISTINCT P.PlayerID) as FemalePlayers FROM Players P JOIN GameDesign GD ON P.PlayerID = GD.GameID JOIN EsportsEvents E ON P.PlayerID = E.PlayerID WHERE P.Gender = 'Female' AND GD.CrossPlatform = 1;"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \ud559\uad50 \uc218\uc640 \ud559\uc0dd \uc218\uac00 500\uba85\uc774 \ub118\ub294 \ud559\uad50\uc758 \ube44\uc728\uc744 \ud45c\uc2dc\ud558\uc138\uc694.", "context": "CREATE TABLE cities (city_id INT PRIMARY KEY, city_name TEXT, state_id INT);CREATE TABLE schools (school_id INT PRIMARY KEY, school_name TEXT, city_id INT, num_students INT);CREATE TABLE states (state_id INT PRIMARY KEY, state_name TEXT);", "output": "SELECT c.city_name, COUNT(s.school_id), AVG(CASE WHEN s.num_students > 500 THEN 1 ELSE 0 END) * 100 as percentage FROM schools s INNER JOIN cities c ON s.city_id = c.city_id INNER JOIN states st ON c.state_id = st.state_id GROUP BY c.city_name;"}
{"input": " \uc811\uadfc\uc131\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc544\ud504\ub9ac\uce74 \uc0ac\ud68c \ubcf5\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \uae30\uc220 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE social_good_projects (project_id INT, region VARCHAR(20), focus VARCHAR(50)); INSERT INTO social_good_projects (project_id, region, focus) VALUES (1, 'Africa', 'accessibility'), (2, 'Africa', 'education'), (3, 'Europe', 'infrastructure'), (4, 'North America', 'policy');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM social_good_projects WHERE region = 'Africa')) as percentage FROM social_good_projects WHERE region = 'Africa' AND focus = 'accessibility';"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ubcf4\ud5d8 \uc99d\uad8c \ubc88\ud638\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policy (PolicyNumber INT, PolicyholderName VARCHAR(50)); CREATE TABLE Claim (ClaimID INT, PolicyNumber INT, ClaimDate DATE, ClaimAmount DECIMAL(10,2)); INSERT INTO Policy VALUES (1, 'Ayo Fayose'), (2, 'Peter Jackson'); INSERT INTO Claim VALUES (1, 1, '2021-07-01', 6000), (2, 1, '2021-08-01', 4000), (3, 2, '2021-10-01', 9000), (4, 2, '2021-11-01', 7000);", "output": "SELECT PolicyNumber, MAX(ClaimAmount) as MaxClaimAmount FROM Claim WHERE ClaimDate >= DATEADD(MONTH, -6, GETDATE()) GROUP BY PolicyNumber ORDER BY MaxClaimAmount DESC;"}
{"input": "\uc5b8\uc5b4 \ubcf4\uc874\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \ucc38\uc5ec\ud55c \ucee4\ubba4\ub2c8\ud2f0 \uad6c\uc131\uc6d0\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_members (id INT, name TEXT, engagement INT, language TEXT); INSERT INTO community_members (id, name, engagement, language) VALUES (1, 'Member A', 5000, 'Language1'), (2, 'Member B', 3000, 'Language2'), (3, 'Member C', 7000, 'Language3');", "output": "SELECT name FROM community_members WHERE engagement = (SELECT MAX(engagement) FROM community_members)"}
{"input": " \"service_animal\" \uc720\ud615\uc744 \uc81c\uc678\ud558\uace0 \uc219\ubc15 \uc2dc\uc124 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \"disability_services\" \uc2a4\ud0a4\ub9c8\uc758 \ucd1d \ud559\uc0dd \ubc0f \uad50\uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation VARCHAR(50)); CREATE TABLE students (id INT, name VARCHAR(50), accommodation VARCHAR(50));", "output": "SELECT accommodation, COUNT(*) FROM disability_services.staff WHERE accommodation != 'service_animal' GROUP BY accommodation UNION SELECT accommodation, COUNT(*) FROM disability_services.students WHERE accommodation != 'service_animal' GROUP BY accommodation;"}
{"input": " 2022\ub144 \uc77c\ubcf8\uacfc \ud55c\uad6d\uc758 \uac00\uc0c1 \uad00\uad11\uc774 \uc9c0\uc5ed \uacbd\uc81c\uc5d0 \uc5b4\ub5a4 \uc601\ud5a5\uc744 \ubbf8\uce60\uae4c\uc694?", "context": "CREATE TABLE virtual_tourism (country VARCHAR(50), year INT, local_impact FLOAT); INSERT INTO virtual_tourism (country, year, local_impact) VALUES ('Japan', 2022, 5000000), ('South Korea', 2022, 7000000), ('China', 2022, 6000000), ('Taiwan', 2022, 8000000);", "output": "SELECT SUM(local_impact) FROM virtual_tourism WHERE country IN ('Japan', 'South Korea') AND year = 2022;"}
{"input": "\ub3c4\ucfc4'\uc5d0 \uc788\ub294 '\ubd80\ud2f0\ud06c' \ud638\ud154\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels_types (hotel_id INT, type TEXT); CREATE TABLE bookings (booking_id INT, hotel_id INT, revenue FLOAT);", "output": "SELECT SUM(bookings.revenue) FROM hotels_types INNER JOIN bookings ON hotels_types.hotel_id = bookings.hotel_id WHERE hotels_types.type = 'Boutique' AND bookings.hotel_id IN (SELECT hotel_id FROM hotels WHERE city = 'Tokyo');"}
{"input": " \uac01 \uc704\uce58\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc624\uc5fc \ub18d\ub3c4\uc640 \uac01 \uc704\uce58\uc758 \ud3c9\uade0 \uccad\uc18c \ub178\ub825 \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Pollution (id INT PRIMARY KEY, location VARCHAR(255), pollutant VARCHAR(255), concentration FLOAT); CREATE TABLE CleanUp (id INT PRIMARY KEY, location VARCHAR(255), cleanup_date DATE, volunteers INT, hours_worked INT);", "output": "SELECT l.location, MAX(p.concentration) as max_pollution, MIN(p.concentration) as min_pollution, AVG(c.volunteers + c.hours_worked) as avg_cleanup_efforts FROM (SELECT DISTINCT location FROM Pollution) as l LEFT JOIN Pollution p ON l.location = p.location LEFT JOIN CleanUp c ON l.location = c.location GROUP BY l.location;"}
{"input": " 2021\ub144 3\ubd84\uae30 \ud654\uc11d \uc5f0\ub8cc\uc758 MWh\ub2f9 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740?", "context": "CREATE TABLE co2_emissions_q3_2021 (source VARCHAR(255), emissions FLOAT); INSERT INTO co2_emissions_q3_2021 (source, emissions) VALUES ('Coal', 90.3), ('Gas', 50.4), ('Oil', 70.5);", "output": "SELECT SUM(emissions) AS total_emissions, source FROM co2_emissions_q3_2021 WHERE source IN ('Coal', 'Gas', 'Oil') GROUP BY source;"}
{"input": " 'John Smith'\ub77c\ub294 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name TEXT); INSERT INTO attorneys (attorney_id, name) VALUES (1, 'John Smith'), (2, 'Jane Smith'), (3, 'Bob Johnson'); CREATE TABLE cases (case_id INT, attorney_id INT, billing_amount INT); INSERT INTO cases (case_id, attorney_id, billing_amount) VALUES (1, 1, 5000), (2, 1, 7000), (3, 2, 6000);", "output": "SELECT SUM(billing_amount) FROM cases WHERE attorney_id IN (SELECT attorney_id FROM attorneys WHERE name = 'John Smith')"}
{"input": " 30\uc138 \uc774\uc0c1 \ud68c\uc6d0\uc758 \uc6b4\ub3d9 \uc911 \uae30\ub85d\ub41c \ucd5c\ub300 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE member_heart_rate (member_id INT, workout_id INT, heart_rate INT); INSERT INTO member_heart_rate (member_id, workout_id, heart_rate) VALUES (1, 1, 120), (1, 2, 130), (2, 3, 150), (2, 4, 140), (3, 5, 110), (4, 6, 180), (5, 7, 160); CREATE TABLE members (member_id INT, birth_date DATE); INSERT INTO members (member_id, birth_date) VALUES (1, '1990-01-01'), (2, '1985-01-01'), (3, '1996-01-01'), (4, '2000-01-01'), (5, '1980-01-01');", "output": "SELECT member_id, MAX(heart_rate) as max_heart_rate FROM member_heart_rate JOIN members ON member_heart_rate.member_id = members.member_id WHERE members.birth_date <= DATE_SUB(CURRENT_DATE, INTERVAL 30 YEAR) GROUP BY member_id HAVING max_heart_rate = (SELECT MAX(heart_rate) FROM member_heart_rate JOIN members ON member_heart_rate.member_id = members.member_id WHERE members.birth_date <= DATE_SUB(CURRENT_DATE, INTERVAL 30 YEAR));"}
{"input": " Golden State Warriors\uc758 \ucd5c\uace0 \ub4dd\uc810 \uac8c\uc784\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (id INT, name TEXT, city TEXT); INSERT INTO teams (id, name, city) VALUES (2, 'Golden State Warriors', 'Oakland'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, points_home INT, points_away INT);", "output": "SELECT MAX(GREATEST(points_home, points_away)) FROM games WHERE home_team_id = (SELECT id FROM teams WHERE name = 'Golden State Warriors' AND city = 'Oakland') OR away_team_id = (SELECT id FROM teams WHERE name = 'Golden State Warriors' AND city = 'Oakland');"}
{"input": "\uc0c1\ubc18\uae30 \uc601\uc5c5\uc0ac\uc6d0 1\uc778\ub2f9 \uc6d4\ud3c9\uade0 \ub9e4\ucd9c\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (rep_id INT, date DATE, sales FLOAT); INSERT INTO sales (rep_id, date, sales) VALUES (1, '2021-01-01', 500), (1, '2021-02-01', 600), (1, '2021-03-01', 700), (1, '2021-04-01', 800), (1, '2021-05-01', 900), (1, '2021-06-01', 1000), (2, '2021-01-01', 400), (2, '2021-02-01', 500), (2, '2021-03-01', 600), (2, '2021-04-01', 700), (2, '2021-05-01', 800), (2, '2021-06-01', 900);", "output": "SELECT rep_id, AVG(sales) as avg_monthly_sales FROM sales WHERE date BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY rep_id;"}
{"input": " 2021\ub144 1\uc6d4 15\uc77c \uc774\uc804\uc5d0 \ud558\ub8e8 \ud3c9\uade0 \uc608\ubc29\uc811\uc885 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vaccinations (id INT PRIMARY KEY, patient_id INT, vaccine VARCHAR(255), date DATE); INSERT INTO vaccinations (id, patient_id, vaccine, date) VALUES (1, 12345, 'Pfizer-BioNTech', '2021-01-05'); INSERT INTO vaccinations (id, patient_id, vaccine, date) VALUES (2, 67890, 'Moderna', '2021-01-10'); INSERT INTO vaccinations (id, patient_id, vaccine, date) VALUES (3, 12345, 'Pfizer-BioNTech', '2021-01-15');", "output": "SELECT AVG(vaccinations_per_day) FROM (SELECT COUNT(*) / (DATEDIFF('2021-01-15', date)) AS vaccinations_per_day FROM vaccinations WHERE date < '2021-01-15') AS subquery;"}
{"input": " \uc778\uc0ac\ubd80\uc5d0\uc11c \uc5f0\ubd09\uc774 \uac00\uc7a5 \ub192\uc740 \uad00\ub9ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), position VARCHAR(50), department VARCHAR(50), salary DECIMAL(5,2), manager_id INT, FOREIGN KEY (manager_id) REFERENCES employees(id)); CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), manager_id INT, FOREIGN KEY (manager_id) REFERENCES employees(id));", "output": "SELECT employees.name AS manager_name, employees.salary AS salary FROM employees INNER JOIN departments ON employees.department = departments.name WHERE departments.name = 'Human Resources' AND employees.position = 'Manager' AND employees.salary = (SELECT MAX(employees.salary) FROM employees WHERE employees.department = departments.name AND employees.position = 'Manager');"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 A, B, C \uc5b8\ub860\uc0ac\uc5d0\uc11c \uac8c\uc7ac\ub41c \ub274\uc2a4 \uae30\uc0ac\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE news_articles (id INT, title VARCHAR(255), publication_date DATE, media_outlet VARCHAR(50)); INSERT INTO news_articles (id, title, publication_date, media_outlet) VALUES (1, 'Article1', '2022-02-01', 'A'), (2, 'Article2', '2022-02-10', 'B'), (3, 'Article3', '2022-01-15', 'C');", "output": "SELECT media_outlet, COUNT(*) as num_articles FROM news_articles WHERE publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY media_outlet;"}
{"input": " \ubcd1\uc0c1\uc774 5\uac1c \ubbf8\ub9cc\uc778 \ub274\uba55\uc2dc\ucf54\uc758 \uc758\ub8cc \uc2dc\uc124\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE medical_facilities (facility_id INT, facility_name TEXT, state TEXT, num_beds INT);", "output": "DELETE FROM medical_facilities WHERE facility_id IN (SELECT facility_id FROM medical_facilities WHERE state = 'New Mexico' AND num_beds < 5);"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 100\uac1c \ubbf8\ub9cc\uc758 \ubcf4\ud5d8 \uc0c1\ud488\uc744 \ucc98\ub9ac\ud55c \ubcf4\ud5d8\uc5c5\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underwriter (underwriter_id INT, name VARCHAR(50)); CREATE TABLE policy (policy_id INT, underwriter_id INT, processing_date DATE);", "output": "SELECT underwriter.name FROM underwriter LEFT JOIN (SELECT underwriter_id, COUNT(*) as policy_count FROM policy WHERE processing_date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY underwriter_id) AS policy_count ON underwriter.underwriter_id = policy_count.underwriter_id WHERE policy_count.policy_count IS NULL OR policy_count.policy_count < 100;"}
{"input": " \uc5ec\ub984 \uceec\ub809\uc158\uc5d0\uc11c \ud310\ub9e4 \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc758\ub958 \ud488\ubaa9\uacfc \uac00\uc7a5 \ub0ae\uc740 \ud488\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE collections (collection_id INT, collection_name VARCHAR(255));CREATE TABLE garments (garment_id INT, garment_name VARCHAR(255), collection_id INT, price DECIMAL(10,2), quantity INT);", "output": "SELECT c.collection_name, AVG(g.price * g.quantity) AS avg_revenue FROM garments g JOIN collections c ON g.collection_id = c.collection_id WHERE c.collection_name LIKE '%summer%' GROUP BY c.collection_name ORDER BY avg_revenue DESC, c.collection_name ASC LIMIT 1;  SELECT c.collection_name, AVG(g.price * g.quantity) AS avg_revenue FROM garments g JOIN collections c ON g.collection_id = c.collection_id WHERE c.collection_name LIKE '%summer%' GROUP BY c.collection_name ORDER BY avg_revenue ASC, c.collection_name ASC LIMIT 1;"}
{"input": " \ubd80\ud488 'P1'\uc5d0 \ub300\ud574 \uac00\uc7a5 \ub192\uc740 \ud3c9\uac00\ub97c \ubc1b\uc740 \uacf5\uae09\uc5c5\uccb4\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE part_suppliers (id INT, part_id INT, supplier_id INT, rating INT); INSERT INTO part_suppliers (id, part_id, supplier_id, rating) VALUES (1, 1, 1, 90), (2, 1, 2, 85), (3, 2, 1, 92), (4, 2, 2, 95);", "output": "SELECT supplier_id FROM part_suppliers WHERE part_id = 1 ORDER BY rating DESC LIMIT 1; SELECT name FROM suppliers WHERE id = (SELECT supplier_id FROM part_suppliers WHERE part_id = 1 ORDER BY rating DESC LIMIT 1);"}
{"input": " \ud654\uc131\uc744 \uc5ec\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \ucd5c\uc18c \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AstronautMedicalData (astronaut_name VARCHAR(30), country VARCHAR(20), age INT, mission_name VARCHAR(30)); INSERT INTO AstronautMedicalData (astronaut_name, country, age, mission_name) VALUES ('Emily Brown', 'USA', 35, 'Mars Exploration'), ('Samantha Lee', 'UK', 32, 'Mars Exploration');", "output": "SELECT MIN(age) FROM AstronautMedicalData WHERE mission_name = 'Mars Exploration';"}
{"input": " \ub3d9\ub0a8\uc544\uc2dc\uc544 \uad6d\uac00\uc5d0\ub294 \uc5b4\ub5a4 \uc804\ud1b5 \uc608\uc220 \ud615\uc2dd\uc774 \uc874\uc7ac\ud569\ub2c8\uae4c?", "context": "CREATE TABLE TraditionalArts (id INT, name VARCHAR(255), country VARCHAR(255)); INSERT INTO TraditionalArts (id, name, country) VALUES (1, 'Wayang Golek', 'Indonesia'), (2, 'Batik', 'Indonesia'), (3, 'Khon', 'Thailand');", "output": "SELECT TraditionalArts.name FROM TraditionalArts WHERE TraditionalArts.country IN ('Indonesia', 'Thailand', 'Malaysia', 'Philippines', 'Singapore');"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \uae34\uae09 \uc0c1\ud669\uc5d0 \ub300\ud55c \ucd5c\uc18c \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE district_emergencies (eid INT, did INT, time TIMESTAMP, PRIMARY KEY(eid), FOREIGN KEY(did) REFERENCES districts(did));", "output": "SELECT d.name, MIN(TIMESTAMPDIFF(MINUTE, de.time, (SELECT time FROM district_emergencies de2 WHERE de2.did = d.did AND de2.time > de.time ORDER BY de2.time LIMIT 1))) AS min_response_time FROM districts d JOIN district_emergencies de ON d.did = de.did GROUP BY d.did;"}
{"input": " 2022\ub144 3\uc6d4 \ub3d9\uc548 \ub7f0\ub358 \uc778\ub3c4 \uc694\ub9ac \ub808\uc2a4\ud1a0\ub791\uc758 \uc694\ub9ac\ub2f9 \ud3c9\uade0 \ub2e8\ubc31\uc9c8 \ud568\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dishes (restaurant_name TEXT, cuisine TEXT, dish TEXT, protein INTEGER, dish_date DATE); INSERT INTO dishes (restaurant_name, cuisine, dish, protein, dish_date) VALUES ('London Tandoori', 'Indian', 'Butter Chicken', 35, '2022-03-01');", "output": "SELECT cuisine, AVG(protein) as avg_protein FROM (SELECT restaurant_name, cuisine, dish, protein, dish_date, ROW_NUMBER() OVER (PARTITION BY cuisine, dish_date ORDER BY protein) as rn FROM dishes WHERE restaurant_name LIKE 'London%' AND cuisine = 'Indian' AND dish_date >= '2022-03-01' AND dish_date < '2022-04-01') t WHERE rn = 1 GROUP BY cuisine;"}
{"input": " 'equipment_summary' \ubcf4\uae30\uc5d0\uc11c \uc7a5\ube44 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uac01 \uc81c\uc870\uc5c5\uccb4\uc758 \uc7a5\ube44 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workout_equipment (equipment_id INT, equipment_name VARCHAR(50), quantity INT, manufacturer VARCHAR(50)); CREATE VIEW equipment_summary AS SELECT equipment_name, manufacturer, SUM(quantity) as total_quantity FROM workout_equipment GROUP BY equipment_name, manufacturer;", "output": "SELECT manufacturer, equipment_name, SUM(total_quantity) FROM equipment_summary GROUP BY manufacturer, equipment_name;"}
{"input": " 2018\ub144 \uc544\ud504\ub9ac\uce74 \uc232\uc758 \ud3c9\uade0 \uc57c\uc0dd\ub3d9\ubb3c \uc11c\uc2dd\uc9c0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wildlife_habitat(year INT, region VARCHAR(255), forest_type VARCHAR(255), habitat_score FLOAT); INSERT INTO wildlife_habitat(year, region, forest_type, habitat_score) VALUES (2015, 'Asia', 'Tropical', 70.0), (2015, 'Asia', 'Temperate', 80.0), (2016, 'Africa', 'Tropical', 75.0), (2016, 'Africa', 'Savanna', 85.0), (2017, 'South America', 'Tropical', 65.0), (2017, 'South America', 'Temperate', 75.0), (2018, 'Africa', 'Tropical', 80.0), (2018, 'Africa', 'Savanna', 88.0), (2019, 'Asia', 'Tropical', 72.0), (2019, 'Asia', 'Temperate', 82.0);", "output": "SELECT region, AVG(habitat_score) as avg_habitat_score FROM wildlife_habitat WHERE year = 2018 AND forest_type = 'Tropical' GROUP BY region;"}
{"input": " \uc790\uc2e0\uc744 \uc5ec\uc131\uc73c\ub85c \uc2dd\ubcc4\ud558\ub294 \uc77c\ubcf8 \uc120\uc218\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PlayerGender (PlayerID INT, Gender VARCHAR(10), FOREIGN KEY (PlayerID) REFERENCES Players(PlayerID)); INSERT INTO PlayerGender (PlayerID, Gender) VALUES (1, 'Female'); CREATE TABLE PlayerCountry (PlayerID INT, Country VARCHAR(50), FOREIGN KEY (PlayerID) REFERENCES Players(PlayerID)); INSERT INTO PlayerCountry (PlayerID, Country) VALUES (1, 'Japan'); CREATE TABLE PlayerAge (PlayerID INT, Age INT, FOREIGN KEY (PlayerID) REFERENCES Players(PlayerID)); INSERT INTO PlayerAge (PlayerID, Age) VALUES (1, 30);", "output": "SELECT AVG(PlayerAge.Age) FROM PlayerAge INNER JOIN PlayerGender ON PlayerAge.PlayerID = PlayerGender.PlayerID INNER JOIN PlayerCountry ON PlayerAge.PlayerID = PlayerCountry.PlayerID WHERE PlayerGender.Gender = 'Female' AND PlayerCountry.Country = 'Japan';"}
{"input": " \uc9c0\uc18d\uac00\ub2a5\uc131 \ubd80\ubb38\uc5d0\uc11c BIPOC \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucd9c\uad6c \uc804\ub7b5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE exit_strategies(id INT, startup_id INT, type TEXT); INSERT INTO exit_strategies (id, startup_id, type) VALUES (1, 1, 'Acquisition');", "output": "SELECT DISTINCT startup_id, type FROM exit_strategies JOIN startups ON exit_strategies.startup_id = startups.id JOIN founders ON startups.id = founders.startup_id WHERE industry = 'Sustainability' AND founder_identity = 'BIPOC';"}
{"input": " \ucd5c\uc18c \ud55c \ubc88 \uc774\uc0c1 5\ucc9c\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc758 \uc790\uae08\uc744 \uc870\ub2ec\ud588\uc73c\uba70 \ucd5c\uc18c 50%\uac00 \uc5ec\uc131\uc73c\ub85c \uad6c\uc131\ub41c \ud300\uc5d0 \uc758\ud574 \uc124\ub9bd\ub41c \ud68c\uc0ac\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE companies (id INT, name TEXT, industry TEXT, founding_date DATE, founder_gender TEXT);CREATE TABLE funds (id INT, company_id INT, amount INT, funding_round TEXT);CREATE TABLE company_founders (company_id INT, founder_id INT);CREATE TABLE founders (id INT, gender TEXT);", "output": "SELECT companies.name FROM companies INNER JOIN funds ON companies.id = funds.company_id INNER JOIN company_founders ON companies.id = company_founders.company_id INNER JOIN founders ON company_founders.founder_id = founders.id WHERE funds.amount > 50000000 AND (founders.gender = 'woman' OR founders.gender IS NULL) GROUP BY companies.name HAVING COUNT(*) FILTER (WHERE founders.gender = 'woman') / COUNT(*) >= 0.5;"}
{"input": " \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c '\ub0a8\ubbf8' \uc9c0\uc5ed\uc758 \ucd1d \uccad\uc815\uc5d0\ub108\uc9c0 \uc815\ucc45 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clean_energy_policies (id INT, policy VARCHAR(50), region VARCHAR(50)); INSERT INTO clean_energy_policies (id, policy, region) VALUES (1, 'Renewable Portfolio Standard', 'south_america'), (2, 'Net Metering', 'south_america'), (3, 'Production Tax Credit', 'south_america');", "output": "SELECT region, COUNT(policy) as total_policies FROM clean_energy_policies WHERE region = 'south_america' GROUP BY region ORDER BY total_policies DESC;"}
{"input": " \uac01 \uc8fc\uc2dd\uc758 \ucd5c\ub300 \uacf5\uac1c \uac00\uaca9\uacfc \ucd5c\uc18c \uacf5\uac1c \uac00\uaca9\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE stocks (stock_symbol TEXT, date DATE, open_price FLOAT, close_price FLOAT); INSERT INTO stocks (stock_symbol, date, open_price, close_price) VALUES ('GOOGL', '2022-01-01', 1500.00, 1550.00), ('GOOGL', '2022-01-02', 1550.00, 1600.00), ('MSFT', '2022-01-01', 200.00, 210.00), ('MSFT', '2022-01-02', 210.00, 220.00);", "output": "SELECT stock_symbol, MAX(open_price) OVER (PARTITION BY stock_symbol ORDER BY stock_symbol) - MIN(open_price) OVER (PARTITION BY stock_symbol ORDER BY stock_symbol) as price_difference FROM stocks;"}
{"input": " 'AMER' \uc9c0\uc5ed\uc5d0\uc11c \ubc30\uc1a1\ub41c \ucd1d \ud314\ub808\ud2b8 \uc218 \ucc3e\uae30", "context": "CREATE TABLE packages (id INT, type TEXT); INSERT INTO packages (id, type) VALUES (1, 'Box'), (2, 'Pallet'), (3, 'Envelope'); CREATE TABLE shipments (id INT, package_id INT, warehouse_id INT); INSERT INTO shipments (id, package_id, warehouse_id) VALUES (1, 1, 3), (2, 2, 3), (3, 3, 4), (4, 1, 2); CREATE TABLE warehouses (id INT, name TEXT, region TEXT); INSERT INTO warehouses (id, name, region) VALUES (1, 'Warehouse A', 'EMEA'), (2, 'Warehouse B', 'APAC'), (3, 'Warehouse C', 'AMER'), (4, 'Warehouse D', 'AMER');", "output": "SELECT SUM(shipments.id) AS total_pallets FROM shipments JOIN packages ON shipments.package_id = packages.id JOIN warehouses ON shipments.warehouse_id = warehouses.id WHERE packages.type = 'Pallet' AND warehouses.region = 'AMER';"}
{"input": " \uc791\ub144\uc5d0 \uc77c\ubcf8 \ud50c\ub808\uc774\uc5b4\uac00 '\uac00\uc0c1 \ud604\uc2e4' \uc7a5\ub974\uc758 \uac8c\uc784\uc5d0 \uc9c0\ucd9c\ud55c \ucd1d \uae08\uc561\uc744 \uac8c\uc784\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, Game VARCHAR(50), Genre VARCHAR(50)); INSERT INTO Games (GameID, Game, Genre) VALUES (1, 'Virtual Reality Racers', 'Virtual Reality'); INSERT INTO Games (GameID, Game, Genre) VALUES (2, 'Virtual Reality Football', 'Virtual Reality'); CREATE TABLE Players (PlayerID INT, Name VARCHAR(50), Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Name, Age, Country) VALUES (1, 'John Doe', 25, 'Japan'); INSERT INTO Players (PlayerID, Name, Age, Country) VALUES (2, 'Jane Smith', 30, 'USA'); CREATE TABLE Transactions (TransactionID INT, PlayerID INT, GameID INT, Amount DECIMAL(5,2), TransactionDate DATE); INSERT INTO Transactions (TransactionID, PlayerID, GameID, Amount, TransactionDate) VALUES (1, 1, 1, 50.00, '2022-01-01'); INSERT INTO Transactions (TransactionID, PlayerID, GameID, Amount, TransactionDate) VALUES (2, 1, 1, 10.00, '2022-01-15'); INSERT INTO Transactions (TransactionID, PlayerID, GameID, Amount, TransactionDate) VALUES (3, 2, 2, 55.00, '2022-01-05'); INSERT INTO Transactions (TransactionID, PlayerID, GameID, Amount, TransactionDate) VALUES (4, 2, 2, 25.00, '2022-01-20');", "output": "SELECT Games.Game, SUM(Transactions.Amount) FROM Transactions INNER JOIN Players ON Transactions.PlayerID = Players.PlayerID INNER JOIN Games ON Transactions.GameID = Games.GameID WHERE Players.Country = 'Japan' AND Games.Genre = 'Virtual Reality' AND Transactions.TransactionDate >= DATEADD(year, -1, GETDATE()) GROUP BY Games.Game;"}
{"input": " \ub85d \uc7a5\ub974\uc758 \uc6d4 \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Monthly (MonthID INT, SongID INT, Month VARCHAR(50), Revenue INT);", "output": "SELECT Monthly.Month, AVG(Monthly.Revenue) as AvgRevenuePerMonth FROM Monthly INNER JOIN Song ON Monthly.SongID = Song.SongID WHERE Song.GenreID = (SELECT GenreID FROM Genre WHERE Name='Rock') GROUP BY Monthly.Month;"}
{"input": " \ub274\uc695\uc758 \ucd1d \uae08\uc735 \ubd80\ubb38 \uace0\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer (customer_id INT, name VARCHAR(255), sector VARCHAR(255), state VARCHAR(255)); INSERT INTO customer (customer_id, name, sector, state) VALUES (1, 'John Doe', 'financial', 'New York'), (2, 'Jane Smith', 'technology', 'California');", "output": "SELECT COUNT(*) FROM customer WHERE sector = 'financial' AND state = 'New York';"}
{"input": " 'A\uc9c0\uc5ed'\uc5d0\ub294 \uc7ac\ub09c\ub09c\ubbfc\uc774 \uc131\ubcc4\ub85c \uba87 \uba85\uc774\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Refugees (id INT, disaster_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), nationality VARCHAR(50)); INSERT INTO Refugees (id, disaster_id, name, age, gender, nationality) VALUES (2, 2, 'Jane Doe', 25, 'Female', 'Country Y');   CREATE TABLE Disaster (id INT, name VARCHAR(50), location VARCHAR(50), type VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO Disaster (id, name, location, type, start_date, end_date) VALUES (2, 'Hurricane', 'Region A', 'Water', '2021-07-01', '2021-07-15');", "output": "SELECT Refugees.gender, COUNT(*) FROM Refugees WHERE Refugees.disaster_id IN (SELECT Disaster.id FROM Disaster WHERE Disaster.location = 'Region A') GROUP BY Refugees.gender"}
{"input": " WA\uc758 \uad11\uc0b0 \uc791\uc5c5\uc73c\ub85c \uc778\ud55c \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emissions (site VARCHAR(20), state VARCHAR(20), co2_emission INT); INSERT INTO emissions (site, state, co2_emission) VALUES ('SiteA', 'QLD', 2500), ('SiteB', 'NSW', 3000), ('SiteC', 'WA', 3500);", "output": "SELECT SUM(co2_emission) FROM emissions WHERE state = 'WA';"}
{"input": " \ud2b9\uc815 \ub0a0\uc9dc \uc774\ud6c4\uc5d0 \uac8c\uc784 \ucee4\ubba4\ub2c8\ud2f0\uc5d0 \uac00\uc785\ud55c \ud50c\ub808\uc774\uc5b4 \ubaa9\ub85d", "context": "CREATE TABLE players (player_id INT, name VARCHAR(100), joined_date DATE); CREATE TABLE games (game_id INT, name VARCHAR(50)); CREATE TABLE player_games (player_id INT, game_id INT, joined_date DATE);", "output": "SELECT p.name, g.name AS game_name FROM players p JOIN player_games pg ON p.player_id = pg.player_id JOIN games g ON pg.game_id = g.game_id WHERE pg.joined_date > '2022-01-01' AND p.player_id = pg.player_id AND g.game_id = pg.game_id;"}
{"input": "\uce90\ub098\ub2e4\uc640 \ubbf8\uad6d \uc804\uc5ed\uc758 \uad11\uc0b0 \uc6b4\uc601\uc5d0\uc11c \uc18c\uc678\ub41c \uc9c0\uc5ed \uc0ac\ud68c\uc758 \uc9c1\uc6d0 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (id INT, location VARCHAR(255), num_employees INT); INSERT INTO mining_operations (id, location, num_employees) VALUES (1, 'Canada', 300), (2, 'USA', 500); CREATE TABLE underrepresented_communities (id INT, community VARCHAR(255)); INSERT INTO underrepresented_communities (id, community) VALUES (1, 'Indigenous'), (2, 'Hispanic'), (3, 'African American');", "output": "SELECT SUM(num_employees) FROM mining_operations JOIN (SELECT 1 AS id, 'Canada' AS location UNION ALL SELECT 2, 'USA') location_table ON mining_operations.location = location_table.location JOIN underrepresented_communities ON 'Indigenous' = underrepresented_communities.community OR 'Hispanic' = underrepresented_communities.community OR 'African American' = underrepresented_communities.community;"}
{"input": "\uc9c0\uc5ed\ubcc4 \ud658\uacbd \uae30\uc900\uc744 \ucda9\uc871\ud558\ub294 \ud559\uad50\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Schools (region_id INT, meets_standard BOOLEAN); INSERT INTO Schools (region_id, meets_standard) VALUES (1, true), (1, false), (2, true), (2, true), (3, false), (3, true), (4, true), (4, true); CREATE TABLE Regions (id INT, name VARCHAR(50)); INSERT INTO Regions (id, name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West');", "output": "SELECT R.name, (COUNT(S.id) * 100.0 / (SELECT COUNT(*) FROM Schools WHERE region_id = R.id)) as Percentage_Meeting_Standards FROM Schools S JOIN Regions R ON S.region_id = R.id WHERE S.meets_standard = true GROUP BY R.name;"}
{"input": " \ud654\uc131\uc744 \ubc29\ubb38\ud55c \uc801\uc774 \uc788\uace0 \uc544\uc9c1 \uc791\ub3d9 \uc911\uc778 \uc6b0\uc8fc\uc120\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE mars_visitors (id INT, name VARCHAR(50), visit_year INT, status VARCHAR(50));", "output": "SELECT COUNT(*) FROM mars_visitors WHERE status = 'Operational';"}
{"input": " \ud3c9\uade0 \uc81c\ud488 \uac00\uaca9\ubcf4\ub2e4 \ub192\uc740 \uac00\uaca9\uc73c\ub85c \uc81c\ud488\uc744 \uacf5\uae09\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (id INT, name VARCHAR(255), price DECIMAL(10,2), supplier_id INT);", "output": "SELECT DISTINCT supplier_id FROM products WHERE price > (SELECT AVG(price) FROM products);"}
{"input": " \uc9c0\ub09c \ub2ec \uac00\uc7a5 \ud754\ud55c \ucde8\uc57d\uc810 \uc0c1\uc704 5\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, name TEXT, description TEXT, severity TEXT, date_discovered DATE); INSERT INTO vulnerabilities (id, name, description, severity, date_discovered) VALUES (1, 'SQL Injection', 'Unauthorized SQL code execution', 'Critical', '2022-01-01');", "output": "SELECT name, COUNT(*) as count FROM vulnerabilities WHERE date_discovered >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY name ORDER BY count DESC LIMIT 5;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc77c\uc77c \ud3c9\uade0 \uc218\uc775, \ud68c\uc0ac \uc804\uccb4 \uc218\uc775, \ucd5c\uace0 \uc218\uc775 \ub808\uc2a4\ud1a0\ub791\uacfc \ucd5c\uc800 \uc218\uc775 \ub808\uc2a4\ud1a0\ub791 \uac04\uc758 \uc218\uc775 \ucc28\uc774\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Sales (SaleID int, RestaurantID int, SaleDate date, SaleAmount numeric(10, 2)); INSERT INTO Sales (SaleID, RestaurantID, SaleDate, SaleAmount) VALUES (1, 1, '2021-01-01', 5000); INSERT INTO Sales (SaleID, RestaurantID, SaleDate, SaleAmount) VALUES (2, 1, '2021-01-02', 6000); INSERT INTO Sales (SaleID, RestaurantID, SaleDate, SaleAmount) VALUES (3, 2, '2021-01-01', 7000); INSERT INTO Sales (SaleID, RestaurantID, SaleDate, SaleAmount) VALUES (4, 2, '2021-01-02', 8000); CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(50), City varchar(50)); INSERT INTO Restaurants (RestaurantID, RestaurantName, City) VALUES (1, 'The Green Garden', 'San Francisco'); INSERT INTO Restaurants (RestaurantID, RestaurantName, City) VALUES (2, 'Healthy Bites', 'Los Angeles');", "output": "SELECT AVG(S.SaleAmount) AS AverageDailyRevenue, SUM(S.SaleAmount) AS CompanyRevenue, MAX(R.TotalRevenue) - MIN(R.TotalRevenue) AS RevenueDifference FROM Sales S JOIN (SELECT RestaurantID, SUM(SaleAmount) AS TotalRevenue FROM Sales GROUP BY RestaurantID) R ON S.RestaurantID = R.RestaurantID;"}
{"input": "2018\ub144 \uc804 \uc138\uacc4 \uad6d\uac00\ubcc4 \uc720\ub85c\ud53c\uc6c0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE europium_production (id INT, country TEXT, year INT, europium_prod FLOAT); INSERT INTO europium_production (id, country, year, europium_prod) VALUES (1, 'China', 2018, 5000.0), (2, 'Russia', 2018, 3000.0), (3, 'Australia', 2018, 2000.0), (4, 'Brazil', 2018, 1000.0);", "output": "SELECT country, (europium_prod / SUM(europium_prod) OVER ()) * 100 as europium_percentage FROM europium_production WHERE year = 2018;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc704\uc131 \ubc30\uce58\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellite_deployments (country VARCHAR(255), launch_date DATE); INSERT INTO satellite_deployments (country, launch_date) VALUES ('USA', '2020-01-01'), ('China', '2019-06-15'), ('Russia', '2021-08-27'), ('India', '2018-03-04'), ('Japan', '2021-02-12');", "output": "SELECT country, COUNT(*) as count FROM satellite_deployments WHERE launch_date >= DATEADD(year, -5, CURRENT_DATE) GROUP BY country ORDER BY count DESC LIMIT 3;"}
{"input": " \ub098\ud2b8\ub968 \ud568\ub7c9\uc774 \ub192\uc740 \uc694\ub9ac\uc5d0\ub294 \uc54c\ub808\ub974\uae30 \uc720\ubc1c \ubb3c\uc9c8\uc774 \uc788\ub294 \uc7ac\ub8cc\ub97c \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE Ingredients (IngredientID INT, Name TEXT, Allergens TEXT, Sodium FLOAT); CREATE TABLE Dishes (DishID INT, Name TEXT, IngredientID INT, Sodium FLOAT);", "output": "DELETE FROM Ingredients WHERE IngredientID IN (SELECT IngredientID FROM Dishes WHERE Sodium > 500) AND Allergens IN (SELECT Allergens FROM Ingredients WHERE IngredientID IN (SELECT IngredientID FROM Dishes WHERE Sodium > 500) GROUP BY Allergens HAVING COUNT(DISTINCT IngredientID) > 1);"}
{"input": " \uc544\uba54\ub9ac\uce78 \ub9ac\uadf8 \ud300\uc758 \uc2dc\uc98c\ub2f9 \ud3c9\uade0 \uc2b9\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(50), league VARCHAR(50), wins INT, season INT);", "output": "SELECT AVG(teams.wins) FROM teams WHERE teams.league = 'American' GROUP BY teams.season;"}
{"input": "\uac01 \uad6d\uac00\uc758 \uacf5\uac1c \uad50\uc721\ud559 \uacfc\uc815\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub9cc\uc871\ub3c4\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE courses (course_id INT, course_name VARCHAR(50), course_type VARCHAR(15), country_code CHAR(2)); INSERT INTO courses VALUES (1, 'Introduction to Programming', 'open', 'US'), (2, 'Data Science for All', 'open', 'CA'), (3, 'Calculus I', 'traditional', 'MX'); CREATE TABLE enrollments (enrollment_id INT, course_id INT, student_id INT, satisfaction_rating INT, country_code CHAR(2)); INSERT INTO enrollments VALUES (1, 1, 1, 9, 'US'), (2, 2, 2, 8, 'CA'), (3, 3, 3, 7, 'MX'); CREATE TABLE countries (country_code CHAR(2), country_name VARCHAR(50)); INSERT INTO countries VALUES ('US', 'United States'), ('CA', 'Canada'), ('MX', 'Mexico');", "output": "SELECT c.country_name, AVG(e.satisfaction_rating) AS avg_satisfaction FROM courses c JOIN enrollments e ON c.course_id = e.course_id JOIN countries co ON c.country_code = co.country_code WHERE c.course_type = 'open' GROUP BY c.country_name;"}
{"input": " \uc18c\ube44\uc790 \uc120\ud638\ub3c4\uac00 4.5 \uc774\uc0c1\uc778 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \uc81c\ud488\uc744 \ubaa8\ub450 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE product (id INT, name TEXT, cruelty_free BOOLEAN, rating FLOAT);", "output": "SELECT name FROM product WHERE cruelty_free = TRUE AND rating > 4.5;"}
{"input": " \uc804\uccb4 \uc778\ub825\uc5d0\uc11c \uac01\uc790\uc758 \uc9c1\ubb34 \uc5ed\ud560\uc744 \uac00\uc7a5 \uc624\ub7ab\ub3d9\uc548 \uc218\ud589\ud55c \uc9c1\uc6d0\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeRoles (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, JobRole VARCHAR(50), MineName VARCHAR(50)); INSERT INTO EmployeeRoles (EmployeeID, FirstName, LastName, Age, JobRole, MineName) VALUES (1, 'David', 'Lee', 45, 'Mining Engineer', 'ABC Mine'); INSERT INTO EmployeeRoles (EmployeeID, FirstName, LastName, Age, JobRole, MineName) VALUES (2, 'Sophia', 'Liu', 35, 'Environmental Scientist', 'DEF Mine'); INSERT INTO EmployeeRoles (EmployeeID, FirstName, LastName, Age, JobRole, MineName) VALUES (3, 'Daniel', 'Kim', 50, 'Mine Manager', 'GHI Mine'); INSERT INTO EmployeeRoles (EmployeeID, FirstName, LastName, Age, JobRole, MineName) VALUES (4, 'Olivia', 'Wang', 40, 'Geologist', 'JKL Mine');", "output": "SELECT EmployeeID, FirstName, LastName, Age, JobRole, MineName, ROW_NUMBER() OVER (PARTITION BY JobRole ORDER BY Age DESC) as 'AgeRank' FROM EmployeeRoles WHERE AgeRank = 1;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ud50c\ub85c\ub9ac\ub2e4 \ub808\uc2a4\ud1a0\ub791\uc758 \uc5f0\uac04 \uc218\uc775 \uc131\uc7a5\ub960\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (RestaurantID INT, RestaurantName VARCHAR(255), City VARCHAR(255), State VARCHAR(255), AnnualRevenue DECIMAL(10,2), Year INT);", "output": "SELECT RestaurantID, ((SUM(AnnualRevenue) OVER (PARTITION BY RestaurantID ORDER BY Year ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING) - SUM(AnnualRevenue) OVER (PARTITION BY RestaurantID ORDER BY Year ROWS BETWEEN 3 PRECEDING AND 2 PRECEDING)) * 100.0 / SUM(AnnualRevenue) OVER (PARTITION BY RestaurantID ORDER BY Year ROWS BETWEEN 3 PRECEDING AND 2 PRECEDING)) as AnnualRevenueGrowthRate FROM Restaurants WHERE State = 'Florida' AND Year BETWEEN EXTRACT(YEAR FROM CURRENT_DATE) - 3 AND EXTRACT(YEAR FROM CURRENT_DATE);"}
{"input": " \ub274\uc695 \uc8fc\uc5d0\uc11c \uc758\ub8cc \uc804\ubb38\uac00\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uace8 \uc9c4\ub8cc\uc18c\uc758 \uc774\ub984\uacfc \uc704\uce58\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE medical_professionals (id INT, name VARCHAR(50), clinic_id INT); CREATE TABLE clinics (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO medical_professionals (id, name, clinic_id) VALUES (1, 'Dr. Smith', 1), (2, 'Dr. Johnson', 1), (3, 'Dr. Lee', 2); INSERT INTO clinics (id, name, location) VALUES (1, 'Clinic A', 'New York'), (2, 'Clinic B', 'New York');", "output": "SELECT clinics.name, clinics.location FROM clinics JOIN (SELECT clinic_id, COUNT(*) as num_of_professionals FROM medical_professionals GROUP BY clinic_id ORDER BY num_of_professionals DESC LIMIT 1) AS subquery ON clinics.id = subquery.clinic_id;"}
{"input": " \ucd5c\uadfc 3\ub144\uac04 \uc791\uac00\ubcc4 \uae30\uc99d \uc791\ud488 \uc218\ub294 \ucd5c\uadfc 3\ub144\uac04 \uae30\uc99d \uc791\ud488 \uc218 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uba87 \uc810\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID int, ArtistName varchar(50), DonationYear int, NumberOfArtworks int);INSERT INTO Artists (ArtistID, ArtistName, DonationYear, NumberOfArtworks) VALUES (1, 'Pablo Picasso', 2020, 20), (2, 'Vincent Van Gogh', 2019, 30), (3, 'Claude Monet', 2021, 40);", "output": "SELECT ArtistName, SUM(NumberOfArtworks) OVER (PARTITION BY ArtistID ORDER BY DonationYear DESC ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as ArtworksDonatedInLast3Years FROM Artists ORDER BY ArtworksDonatedInLast3Years DESC;"}
{"input": " \uac01 \uc11c\uc2dd\uc9c0 \uc720\ud615\uc758 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_habitats (id INT, fish_id INT, habitat_type VARCHAR(20), temperature DECIMAL(5,2)); INSERT INTO fish_habitats (id, fish_id, habitat_type, temperature) VALUES (1, 1, 'tropical', 28.3); INSERT INTO fish_habitats (id, fish_id, habitat_type, temperature) VALUES (2, 2, 'temperate', 15.5);", "output": "SELECT habitat_type, MAX(temperature) as max_temp, MIN(temperature) as min_temp FROM fish_habitats GROUP BY habitat_type;"}
{"input": " \ub274\uc695 \ub3c4\uc2dc \ub18d\uc7a5 \ud1a0\uc591\uc758 \ud3c9\uade0 \uc9c8\uc18c \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE urban_farms (id INT PRIMARY KEY, name VARCHAR(100), nitrogen FLOAT, potassium FLOAT, farm_id INT, FOREIGN KEY (farm_id) REFERENCES farmers(id)); INSERT INTO urban_farms (id, name, nitrogen, potassium, farm_id) VALUES (1, 'Brooklyn Grange', 0.35, 0.55, 1), (2, 'Eagle Street Rooftop Farm', 0.40, 0.60, 2), (3, 'Gotham Greens', 0.30, 0.45, 3);", "output": "SELECT AVG(u.nitrogen) FROM urban_farms u WHERE u.farm_id IN (SELECT f.id FROM farmers f WHERE f.location = 'New York');"}
{"input": " \uc624\uc2a4\ud2f4\uacfc \uc2dc\uc560\ud2c0\uc758 \uce5c\ud658\uacbd \uc778\uc99d \uc8fc\uac70\uc6a9 \ubd80\ub3d9\uc0b0\uc740 \ucd1d \uba87 \ucc44\uc785\ub2c8\uae4c?", "context": "CREATE TABLE austin_prop(id INT, type VARCHAR(20), cert VARCHAR(20)); INSERT INTO austin_prop VALUES (1, 'residential', 'green'); CREATE TABLE seattle_prop(id INT, type VARCHAR(20), cert VARCHAR(20)); INSERT INTO seattle_prop VALUES (1, 'residential', 'green');", "output": "SELECT COUNT(*) FROM austin_prop WHERE type = 'residential' AND cert = 'green' UNION ALL SELECT COUNT(*) FROM seattle_prop WHERE type = 'residential' AND cert = 'green';"}
{"input": " '\ub0a8\ubbf8' \uc0c1\uc704 3\uac1c OTA\uc758 \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE ota_sales_south_america (ota TEXT, country TEXT, revenue FLOAT); INSERT INTO ota_sales_south_america (ota, country, revenue) VALUES ('Expedia', 'Brazil', 900000), ('Booking.com', 'Argentina', 1100000), ('Agoda', 'Chile', 700000), ('MakeMyTrip', 'Brazil', 800000), ('Despegar', 'Argentina', 1000000), ('Decolar', 'Chile', 900000);", "output": "SELECT SUM(revenue) FROM (SELECT ota, SUM(revenue) AS revenue FROM ota_sales_south_america GROUP BY ota ORDER BY revenue DESC LIMIT 3);"}
{"input": " \uc9c0\ub09c \ub2ec \uc2ec\uac01\ub3c4\ubcc4 \ucde8\uc57d\uc810 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (id INT, severity INT, last_patch DATE);", "output": "SELECT severity, COUNT(*) as num_vulnerabilities FROM vulnerabilities WHERE last_patch < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY severity;"}
{"input": " 'creative_ai' \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c 100.00\ubcf4\ub2e4 \ud070 \uac12\uc744 \uac00\uc9c4 \uac70\ub798\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE users (user_id INT, app VARCHAR(20)); INSERT INTO users (user_id, app) VALUES (1, 'creative_ai'), (2, 'algorithmic_fairness'), (3, 'explainable_ai'); CREATE TABLE transactions (transaction_id INT, user_id INT, amount DECIMAL(10, 2)); INSERT INTO transactions (transaction_id, user_id, amount) VALUES (1, 1, 50.00), (2, 1, 75.00), (3, 2, 30.00), (4, 3, 100.00), (5, 1, 60.00);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM transactions)::DECIMAL) as percentage FROM transactions INNER JOIN users ON transactions.user_id = users.user_id WHERE users.app = 'creative_ai' AND amount > 100.00;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ub41c \uc6b4\ub3d9\uc120\uc218\uc758 \uc218\uc640 '\ud53c\ud2b8\ub2c8\uc2a4' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud560 \uc218 \uc788\ub294 \uc6b4\ub3d9\uc120\uc218\uc758 \ucd5c\ub300 \uc5f0\ub839\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE athletes (athlete_id INT, name VARCHAR(255), age INT, program VARCHAR(255)); INSERT INTO athletes (athlete_id, name, age, program) VALUES (1, 'John Doe', 25, 'Wellbeing'), (2, 'Jane Smith', 30, 'Fitness'), (3, 'Alice Johnson', 35, 'Wellbeing'), (4, 'Bob Brown', 40, 'Fitness'), (5, 'Charlie Davis', 45, 'Fitness'), (6, 'Diana White', 50, 'Fitness');", "output": "SELECT program, COUNT(*), MAX(age) FROM athletes WHERE program = 'Fitness' GROUP BY program;"}
{"input": "YouTube\uc5d0\uc11c R&B \ud2b8\ub799\uc758 \ucd1d \uc2a4\ud2b8\ub9bc \uc218\ub97c \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uba74 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE MonthlyStreams (StreamID INT, TrackID INT, PlatformID INT, Date DATE, Streams INT); INSERT INTO MonthlyStreams (StreamID, TrackID, PlatformID, Date, Streams) VALUES (1, 1, 3, '2022-01-01', 100);", "output": "SELECT EXTRACT(MONTH FROM Date) as Month, EXTRACT(YEAR FROM Date) as Year, SUM(Streams) as TotalStreams FROM MonthlyStreams JOIN Tracks ON MonthlyStreams.TrackID = Tracks.TrackID JOIN StreamingPlatforms ON MonthlyStreams.PlatformID = StreamingPlatforms.PlatformID WHERE Genre = 'R&B' AND PlatformName = 'YouTube' GROUP BY Month, Year;"}
{"input": " \uc791\ub144 \ube0c\ub77c\uc9c8\uc758 \ubb3c \uc18c\ube44 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE countries (id INT, name VARCHAR(255)); INSERT INTO countries (id, name) VALUES (1, 'Brazil'); CREATE TABLE water_meter_readings (id INT, country_id INT, city_id INT, consumption FLOAT, reading_date DATE); INSERT INTO water_meter_readings (id, country_id, city_id, consumption, reading_date) VALUES (1, 1, 1, 100, '2022-01-01');", "output": "SELECT water_meter_readings.city_id, SUM(water_meter_readings.consumption) as total_consumption FROM water_meter_readings WHERE water_meter_readings.reading_date >= (CURRENT_DATE - INTERVAL '1 year')::date AND water_meter_readings.country_id IN (SELECT id FROM countries WHERE name = 'Brazil') GROUP BY water_meter_readings.city_id ORDER BY total_consumption DESC LIMIT 5;"}
{"input": " 2021\ub144 2\ubd84\uae30 \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed \uc724\ub9ac\uc801 AI \uae30\uc5c5\uc758 \uc77c\uc77c \uac70\ub798 \uc99d\uac00\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE company_data (company_id INT, company_name VARCHAR(50), company_region VARCHAR(20)); CREATE TABLE transactions (transaction_id INT, company_id INT, transaction_value FLOAT, transaction_date DATE); INSERT INTO company_data (company_id, company_name, company_region) VALUES (1, 'Ethical AI Co.', 'Asia-Pacific'); INSERT INTO transactions (transaction_id, company_id, transaction_value, transaction_date) VALUES (1, 1, 50.00, '2021-04-01');", "output": "SELECT ROW_NUMBER() OVER (ORDER BY transaction_date) as day, (LAG(SUM(transaction_value)) OVER (ORDER BY transaction_date) - SUM(transaction_value)) / ABS(LAG(SUM(transaction_value)) OVER (ORDER BY transaction_date)) as growth_rate FROM transactions INNER JOIN company_data ON transactions.company_id = company_data.company_id WHERE EXTRACT(MONTH FROM transaction_date) BETWEEN 4 AND 6 AND company_region = 'Asia-Pacific' AND company_name LIKE '%Ethical AI%' GROUP BY transaction_date;"}
{"input": " \ub2f9\uc88c \uc608\uae08 \uacc4\uc88c \uc794\uc561\uc774 $5,000 \uc774\uc0c1\uc778 \ub0a8\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc758 \ucd5c\uc18c \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accounts_2 (account_id INT, customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2)); INSERT INTO accounts_2 (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 12000.00), (2, 1, 'Checking', 5000.00), (3, 2, 'Savings', 8000.00), (4, 2, 'Checking', 3000.00), (5, 3, 'Savings', 15000.00), (6, 3, 'Checking', 5500.00);", "output": "SELECT MIN(balance) FROM accounts_2 WHERE account_type = 'Savings' AND customer_id IN (SELECT customer_id FROM accounts_2 WHERE account_type = 'Checking' AND balance > 5000);"}
{"input": " 1915\ub144 \uc774\uc804\uc5d0 \uc81c\uc791\ub41c '\ud050\ube44\uc998' \uc2a4\ud0c0\uc77c\uacfc \uad00\ub828\ub41c \ubaa8\ub4e0 \uc608\uc220 \uc791\ud488\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE art_styles (id INT, style VARCHAR(255), movement VARCHAR(255)); CREATE TABLE artworks (id INT, title VARCHAR(255), year INT, style_id INT);", "output": "DELETE FROM artworks WHERE style_id = (SELECT s.id FROM art_styles s WHERE s.style = 'Cubism') AND year < 1915;"}
{"input": "\uc9c0\ub09c \ubd84\uae30\uc5d0 \uac01 \uad6d\uac00\uc5d0 \uba87 \uac1c\uc758 IoT \uc13c\uc11c\uac00 \uc124\uce58\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE country (id INTEGER, name TEXT);CREATE TABLE region (id INTEGER, country_id INTEGER, name TEXT);CREATE TABLE iot_sensor (id INTEGER, region_id INTEGER, installed_date DATE);", "output": "SELECT co.name as country, r.name as region, COUNT(s.id) as num_sensors FROM country co INNER JOIN region r ON co.id = r.country_id INNER JOIN iot_sensor s ON r.id = s.region_id WHERE s.installed_date >= DATEADD(quarter, -1, CURRENT_DATE) GROUP BY co.name, r.name;"}
{"input": " \uac01 \ud559\uad50\uc758 \uad50\uc0ac\uac00 \uc774\uc218\ud55c \ud3c9\uade0 \uacfc\ubaa9 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE schools (school_id INT, school_name VARCHAR(255)); CREATE TABLE teachers (teacher_id INT, school_id INT); CREATE TABLE courses (course_id INT, course_name VARCHAR(255)); CREATE TABLE teacher_courses (teacher_id INT, course_id INT);", "output": "SELECT s.school_name, AVG(tc.course_id) FROM schools s JOIN teachers t ON s.school_id = t.school_id JOIN teacher_courses tc ON t.teacher_id = tc.teacher_id GROUP BY s.school_id;"}
{"input": "\uc9c0\uc18d \uac00\ub2a5\ud55c \uacf5\uae09\uc5c5\uccb4\uac00 \uacf5\uae09\ud558\ub294 \ucc9c\uc5f0 \uba54\uc774\ud06c\uc5c5 \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_type VARCHAR(50), price DECIMAL(5,2), sustainable_supplier BOOLEAN); INSERT INTO products VALUES (1, 'Organic Skincare', 35.99, true), (2, 'Organic Skincare', 20.99, false), (3, 'Natural Makeup', 15.49, true), (4, 'Natural Makeup', 22.50, true), (5, 'Organic Skincare', 50.00, false), (6, 'Natural Makeup', 9.99, true), (7, 'Cruelty-Free', 12.35, false), (8, 'Organic Skincare', 14.55, true), (9, 'Cruelty-Free', 18.99, false), (10, 'Cruelty-Free', 25.00, true);", "output": "SELECT AVG(p.price) FROM products p WHERE p.product_type = 'Natural Makeup' AND p.sustainable_supplier = true;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc758 \uc720\uae30\ub18d \uc81c\ud488\uc758 \ube44\uc728\uc740 \ubc31\ubd84\uc728\uc758 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, category VARCHAR(20), is_organic BOOLEAN); INSERT INTO products (product_id, category, is_organic) VALUES (1, 'Natural', false), (2, 'Organic', true), (3, 'Natural', true), (4, 'Conventional', false);", "output": "SELECT category, 100.0 * COUNT(*) FILTER (WHERE is_organic) / COUNT(*) as percentage FROM products GROUP BY category ORDER BY percentage DESC;"}
{"input": " 2019\ub144 \uc774\ud6c4 \uc911\ub3d9 \uc9c0\uc5ed\uc758 \ucd1d \uc815\ubcf4 \uc791\uc804 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Intelligence_Operations (operation_id INT, year INT, region_id INT); INSERT INTO Intelligence_Operations (operation_id, year, region_id) VALUES (1, 2019, 7), (2, 2020, 7), (3, 2021, 7);", "output": "SELECT COUNT(*) FROM Intelligence_Operations WHERE year >= 2019 AND region_id = (SELECT region_id FROM Regions WHERE region_name = 'Middle Eastern');"}
{"input": " \uac8c\uc2dc\ubb3c\uc744 \uac8c\uc2dc\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790 \uc0ad\uc81c", "context": "CREATE TABLE users (id INT, name VARCHAR(255));CREATE TABLE posts (id INT, user_id INT, content TEXT);", "output": "DELETE u FROM users u WHERE u.id NOT IN (SELECT p.user_id FROM posts p);"}
{"input": " 2010\ub144 \uc774\ud6c4 \ubc1c\uacac\ub41c \ubaa8\ub4e0 \uc2ec\ud574 \uc0dd\ubb3c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE deep_sea_creatures (id INT, creature_name TEXT, discovery_date DATE); INSERT INTO deep_sea_creatures (id, creature_name, discovery_date) VALUES (1, 'Snailfish', '2014-08-04'); INSERT INTO deep_sea_creatures (id, creature_name, discovery_date) VALUES (2, 'Yeti Crab', '2005-03-26');", "output": "SELECT creature_name FROM deep_sea_creatures WHERE discovery_date >= '2010-01-01';"}
{"input": " \ub2e4\uc74c \ubd84\uae30 \ube44\uc6a9\uc744 \ud1a0\ub300\ub85c 2021\ub144 2\ubd84\uae30 \ud5c8\uac00 \ube44\uc6a9\uc744 \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE permit (permit_id INT, quarter VARCHAR(10), cost FLOAT); INSERT INTO permit VALUES (1, 'Q2', 5000); INSERT INTO permit VALUES (2, 'Q3', 6000);", "output": "SELECT permit_id, quarter, cost, LEAD(cost) OVER (ORDER BY quarter) as next_quarter_cost FROM permit WHERE quarter IN ('Q2', 'Q3');"}
{"input": "\uc791\ub144\uc5d0 \ubd80\uc11c\ubcc4\ub85c \uc81c\ucd9c \ubc0f \uc774\ud589\ub41c FOIA \uc694\uccad \uc218 \ucc3e\uae30", "context": "CREATE TABLE FOIARequests (RequestID INT, Department TEXT, RequestDate DATE, FulfillmentDate DATE); INSERT INTO FOIARequests (RequestID, Department, RequestDate, FulfillmentDate) VALUES (1, 'Police', '2022-01-01', '2022-02-15'), (2, 'Education', '2022-03-01', '2022-04-01'), (3, 'Health', '2022-02-10', '2022-03-15');", "output": "SELECT Department, COUNT(*) FROM FOIARequests WHERE RequestDate >= DATEADD(year, -1, GETDATE()) AND FulfillmentDate IS NOT NULL GROUP BY Department;"}
{"input": " \ubc18\ud488 \uac74\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uba85\uc758 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers(id INT, customer_name VARCHAR(50), returned_items INT); INSERT INTO Customers(id, customer_name, returned_items) VALUES (1, 'John Smith', 10), (2, 'Jane Doe', 5), (3, 'Mike Johnson', 15);", "output": "SELECT customer_name, ROW_NUMBER() OVER (ORDER BY returned_items DESC) as rank FROM Customers WHERE rank <= 3;"}
{"input": "\ub300\uc11c\uc591\uc758 \ud574\uc591 \uc0b0\uc131\ud654\ub85c \uc778\ud574 \uc601\ud5a5\uc744 \ubc1b\ub294 \ud574\uc591 \uc0dd\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (name TEXT, affected_by_acidification BOOLEAN, ocean TEXT);   CREATE TABLE ocean_regions (name TEXT, area FLOAT);", "output": "SELECT COUNT(*)   FROM marine_species   WHERE affected_by_acidification = TRUE AND ocean = (SELECT name FROM ocean_regions WHERE area = 'Atlantic Ocean');"}
{"input": " \ud14d\uc0ac\uc2a4\uc640 \ub274\uc695\uc758 \ubc95\uc6d0\uacfc \ud30c\ud2b8\ub108\uc2ed\uc744 \ub9fa\uace0 \uc788\ub294 \ubc95\ub960 \uae30\uc220 \ud68c\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE legal_tech_tx (company_name VARCHAR(50), partnership BOOLEAN); INSERT INTO legal_tech_tx VALUES ('TechLegal TX', TRUE), ('LegalZoom TX', FALSE); CREATE TABLE legal_tech_ny (company_name VARCHAR(50), partnership BOOLEAN); INSERT INTO legal_tech_ny VALUES ('TechLegal NY', TRUE), ('LegalZoom NY', FALSE);", "output": "SELECT company_name FROM legal_tech_tx WHERE partnership = TRUE UNION ALL SELECT company_name FROM legal_tech_ny WHERE partnership = TRUE;"}
{"input": " \ud574\ub2f9 \uc5f0\ub3c4\uc758 \uac01 \ubd84\uae30\uc5d0 \uae30\ubd80\ud55c \uae30\ubd80\uc790\uc758 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donor (don_id INT, donor_name VARCHAR(255)); CREATE TABLE donation (don_id INT, donor_id INT, donation_date DATE);", "output": "SELECT EXTRACT(QUARTER FROM donation_date) AS quarter, COUNT(DISTINCT donor_id) AS num_donors FROM donation WHERE EXTRACT(YEAR FROM donation_date) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY quarter;"}
{"input": " \ub274\uc695\uc5d0\uc11c \ucc44\uc2dd \uc694\ub9ac\uc5d0 \ub300\ud55c \uc74c\uc2dd \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ny_menu_items (menu_item_id INT, restaurant_id INT, dish_type VARCHAR(255), food_cost DECIMAL(5,2)); INSERT INTO ny_menu_items (menu_item_id, restaurant_id, dish_type, food_cost) VALUES (1, 1, 'Vegetarian', 3.50), (2, 2, 'Vegetarian', 4.50), (3, 3, 'Vegetarian', 5.50);", "output": "SELECT dish_type, MAX(food_cost) FROM ny_menu_items WHERE dish_type = 'Vegetarian' GROUP BY dish_type;"}
{"input": " \uc720\ub7fd \uc5f0\ud569\uc5d0 \uc704\uce58\ud55c \uacf5\uae09\uc5c5\uccb4\uc758 \uc81c\ud488\uc744 \ucde8\uae09\ud558\ub294 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc704\uce58\ud55c \ubaa8\ub4e0 \ub9e4\uc7a5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stores (id INT, name VARCHAR(255), city VARCHAR(255), state VARCHAR(255)); CREATE TABLE products (id INT, name VARCHAR(255), price DECIMAL(10,2), supplier_id INT); CREATE TABLE supplier_location (supplier_id INT, country VARCHAR(255));", "output": "SELECT s.name FROM stores s JOIN (SELECT DISTINCT store_id FROM products p JOIN supplier_location sl ON p.supplier_id = sl.supplier_id WHERE sl.country IN ('Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden')) ss ON s.id = ss.store_id WHERE s.state = 'California';"}
{"input": "2022\ub144\uc5d0 \uc7ac\ud65c\uc6a9\ub960\uc774 \uac00\uc7a5 \ub0ae\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE recycling_rates (city TEXT, year INT, recycling_rate DECIMAL(5,4));   INSERT INTO recycling_rates (city, year, recycling_rate) VALUES ('Accra', 2022, 0.25), ('Cape Town', 2022, 0.35), ('Johannesburg', 2022, 0.45);", "output": "SELECT city, MIN(recycling_rate) FROM recycling_rates WHERE year = 2022 GROUP BY city;"}
{"input": " \uc724\ub9ac\uc801\uc778 \ud328\uc158 \uc81c\ud488\uc5d0 \ub300\ud55c \ucd1d \uc9c0\ucd9c\uc744 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 3\uba85\uc758 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID INT, CustomerName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Customers VALUES (1, 'John Smith', 'USA'), (2, 'Jane Doe', 'Canada'); CREATE TABLE Orders (OrderID INT, CustomerID INT, OrderValue DECIMAL(10,2)); INSERT INTO Orders VALUES (1, 1, 50.00), (2, 1, 75.00), (3, 2, 100.00), (4, 2, 200.00); CREATE TABLE EthicalProducts (ProductID INT, OrderID INT, ProductType VARCHAR(50)); INSERT INTO EthicalProducts VALUES (1, 1, 'Fair Trade'), (2, 2, 'Sustainable'), (3, 3, 'Fair Trade'), (4, 4, 'Sustainable');", "output": "SELECT CustomerName, SUM(OrderValue) as TotalSpending FROM Orders o JOIN Customers c ON o.CustomerID = c.CustomerID JOIN EthicalProducts ep ON o.OrderID = ep.OrderID WHERE ProductType IN ('Fair Trade', 'Sustainable') GROUP BY CustomerName ORDER BY TotalSpending DESC LIMIT 3;"}
{"input": " \ub354 \uc774\uc0c1 \ub3c4\uc6c0\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uad6d\uac00\uc5d0 \ub300\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0 \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE humanitarian_assistance (id INT PRIMARY KEY, country VARCHAR(100), region VARCHAR(50), assistance_date DATE, amount FLOAT);", "output": "DELETE FROM humanitarian_assistance WHERE country NOT IN (SELECT country FROM countries) AND assistance_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " 2020\ub144 \uc778\ub3c4\uc758 \ud3c9\uade0 \ud0c4\uc18c \uac00\uaca9\uacfc \ucd1d \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE carbon_price (id INT PRIMARY KEY, name VARCHAR(50), country_id INT, FOREIGN KEY (country_id) REFERENCES country(id), price DECIMAL(10,2));CREATE TABLE carbon_emission (id INT PRIMARY KEY, date DATE, source_id INT, FOREIGN KEY (source_id) REFERENCES renewable_source(id), carbon_emitted DECIMAL(10,2));CREATE TABLE power_usage (id INT PRIMARY KEY, date DATE, usage_amount INT, country_id INT, FOREIGN KEY (country_id) REFERENCES country(id));", "output": "SELECT c.name AS country_name, cp.name AS carbon_price_name, AVG(cp.price) AS average_carbon_price, SUM(ce.carbon_emitted) AS total_carbon_emitted  FROM carbon_emission ce  JOIN carbon_price cp ON ce.country_id = cp.country_id  JOIN power_usage pu ON ce.date = pu.date AND ce.country_id = pu.country_id  JOIN country c ON pu.country_id = c.id WHERE c.name = 'India' AND pu.date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY c.name, cp.name;"}
{"input": "2020\ub144 \uce90\ub098\ub2e4 \uc9c0\uc5ed\uc758 \uc885\ubcc4 \ucd1d \ubaa9\uc7ac \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE timber_production(year INT, region VARCHAR(255), species VARCHAR(255), volume FLOAT); INSERT INTO timber_production(year, region, species, volume) VALUES (2015, 'USA', 'Pine', 1200.0), (2015, 'USA', 'Oak', 1500.0), (2016, 'Canada', 'Pine', 1800.0), (2016, 'Canada', 'Oak', 2000.0), (2017, 'Mexico', 'Pine', 1000.0), (2017, 'Mexico', 'Oak', 1400.0), (2018, 'Canada', 'Pine', 2100.0), (2018, 'Canada', 'Oak', 2500.0), (2019, 'USA', 'Pine', 1300.0), (2019, 'USA', 'Oak', 1600.0), (2020, 'Canada', 'Pine', 2200.0), (2020, 'Canada', 'Oak', 2600.0);", "output": "SELECT species, SUM(volume) as total_volume FROM timber_production WHERE year = 2020 AND region = 'Canada' GROUP BY species;"}
{"input": " \uce90\ub098\ub2e4 \uad6d\uac00\ub85c \ubc30\uc1a1\ub418\ub294 \ubc30\uc1a1\uc758 \ud3c9\uade0 \ubc30\uc1a1 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE shipments (shipment_id INT, country VARCHAR(255), delivery_time INT); INSERT INTO shipments (shipment_id, country, delivery_time) VALUES (1, 'Canada', 5), (2, 'Canada', 7), (3, 'Canada', 6);", "output": "SELECT AVG(delivery_time) FROM shipments WHERE country = 'Canada';"}
{"input": " \uc5ec\uc131\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ucd1d \uc218\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE startups(id INT, name TEXT, founding_year INT, founder_gender TEXT); INSERT INTO startups (id, name, founding_year, founder_gender) VALUES (1, 'Acme Inc', 2010, 'Female'); INSERT INTO startups (id, name, founding_year, founder_gender) VALUES (2, 'Beta Corp', 2015, 'Male'); INSERT INTO startups (id, name, founding_year, founder_gender) VALUES (3, 'Gamma LLC', 2020, 'Female');", "output": "SELECT COUNT(*) FROM startups WHERE founder_gender = 'Female';"}
{"input": " \uc815\uc2e0 \uac74\uac15 \uc778\uc2dd\uc5d0 \uad00\ud55c \ucf58\ud150\uce20\uc5d0 \ucc38\uc5ec\ud588\uc9c0\ub9cc \ud53c\ud2b8\ub2c8\uc2a4\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uc5d0 \uc88b\uc544\uc694\ub97c \ud45c\uc2dc\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc758 \uc5f0\ub839, \uc131\ubcc4, \uc704\uce58\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_engagements (user_id INT, content_topic VARCHAR(50), user_age INT, user_gender VARCHAR(50), user_location VARCHAR(50)); INSERT INTO user_engagements (user_id, content_topic, user_age, user_gender, user_location) VALUES (1, 'mental health awareness', 25, 'female', 'New York'), (2, 'climate change', 32, 'male', 'California'), (3, 'mental health awareness', 28, 'non-binary', 'Texas'), (4, 'veganism', 35, 'male', 'Florida'), (5, 'mental health awareness', 29, 'female', 'Illinois'), (6, 'renewable energy', 27, 'non-binary', 'California');", "output": "SELECT user_age, user_gender, user_location FROM user_engagements WHERE content_topic = 'mental health awareness' AND user_id NOT IN (SELECT user_id FROM user_engagements WHERE content_topic = 'fitness');"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac01\uad6d\uc774 \ub3d9\ub9f9\uad6d\uacfc \ud568\uaed8 \uc2e4\uc2dc\ud55c \ud569\ub3d9\uad70\uc0ac\ud6c8\ub828 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Joint_Military_Exercises (id INT, country VARCHAR(50), year INT, allies VARCHAR(50));", "output": "SELECT country, COUNT(country) as joint_exercises FROM Joint_Military_Exercises WHERE year BETWEEN (YEAR(CURRENT_DATE) - 3) AND YEAR(CURRENT_DATE) GROUP BY country;"}
{"input": " \ub2e4\uc591\uc131 \uacc4\ud68d\uc774 \uc5c6\ub294 \uc870\uc9c1\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE organizations (id INT, name VARCHAR(255), diversity_initiatives BOOLEAN);", "output": "DELETE FROM organizations WHERE id NOT IN (SELECT o.id FROM organizations o WHERE o.diversity_initiatives = true);"}
{"input": " '\uba54\ud2b8\ub85c\ud3f4\ub9ac\ud0c4 \ubbf8\uc220\uad00'\uacfc '\ud14c\uc774\ud2b8 \ubaa8\ub358'\uc5d0 \uc791\ud488\uc744 \uc804\uc2dc\ud55c \uc791\uac00\ub4e4\uc758 \ud3c9\uade0 \uc218\uba85\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Galleries (GalleryID INT PRIMARY KEY, Name VARCHAR(50), City VARCHAR(50), Country VARCHAR(50)); INSERT INTO Galleries (GalleryID, Name, City, Country) VALUES (16, 'Metropolitan Museum of Art', 'New York', 'USA'), (17, 'Tate Modern', 'London', 'UK');", "output": "SELECT AVG(DeathYear - BirthYear) FROM Artists WHERE ArtistID IN (SELECT ArtistID FROM Exhibitions WHERE GalleryID IN (16, 17) GROUP BY ArtistID HAVING COUNT(DISTINCT GalleryID) = 2);"}
{"input": " '\ubd81\ubbf8' \uc9c0\uc5ed\uc758 \uc2e0\uace0\ub97c \uc81c\uc678\ud558\uace0 \uc9c0\ub09c \ub2ec\uc5d0 \uc0dd\uc131\ub41c \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4 \uc2e0\uace0 \uac74\uc218\ub97c \ubaa8\ub450 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence (report_id INT, report_date DATE, region VARCHAR(50)); INSERT INTO threat_intelligence (report_id, report_date, region) VALUES (1, '2022-01-01', 'Europe'), (2, '2022-01-15', 'Asia'), (3, '2022-02-05', 'North America');", "output": "SELECT COUNT(*) FROM threat_intelligence WHERE report_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND region != 'North America';"}
{"input": "AI \uae30\ubc18 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 'APAC' \ubc0f 'EMEA' \uc9c0\uc5ed\uc758 \ud638\ud154 \uc218\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE ai_hotels (hotel_id INT, hotel_name TEXT, region TEXT); INSERT INTO ai_hotels (hotel_id, hotel_name, region) VALUES (1, 'Hotel1', 'APAC'), (2, 'Hotel2', 'APAC'), (3, 'Hotel3', 'EMEA'), (4, 'Hotel4', 'EMEA'); CREATE TABLE ai_adoption (hotel_id INT, ai_adoption_date DATE); INSERT INTO ai_adoption (hotel_id, ai_adoption_date) VALUES (1, '2021-01-01'), (2, '2021-02-01'), (3, '2021-03-01'), (4, '2021-04-01');", "output": "SELECT COUNT(*) FROM ai_hotels WHERE region = 'APAC' INTERSECT SELECT COUNT(*) FROM ai_hotels WHERE region = 'EMEA' EXCEPT SELECT COUNT(*) FROM ai_adoption WHERE ai_adoption.hotel_id = ai_hotels.hotel_id AND region IN ('APAC', 'EMEA') GROUP BY region;"}
{"input": " 'SmartContractsTransactions' \ubcf4\uae30\uc5d0\uc11c 'Ethereum' \ube14\ub85d\uccb4\uc778\uc73c\ub85c \uc81c\ud55c\ub418\ub294 \uac01 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ucd1d \uac70\ub798\ub7c9\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE VIEW SmartContractsTransactions AS SELECT SmartContracts.name, Transactions.volume FROM SmartContracts JOIN Transactions ON SmartContracts.hash = Transactions.smart_contract_hash; CREATE TABLE Blockchain (id INT, name VARCHAR(20), type VARCHAR(20)); INSERT INTO Blockchain (id, name, type) VALUES (1, 'Ethereum', 'Blockchain'); ALTER TABLE Transactions ADD FOREIGN KEY (blockchain_id) REFERENCES Blockchain(id); ", "output": "SELECT SmartContracts.name, SUM(Transactions.volume) FROM SmartContractsTransactions JOIN SmartContracts ON SmartContractsTransactions.name = SmartContracts.name JOIN Transactions ON SmartContractsTransactions.hash = Transactions.smart_contract_hash JOIN Blockchain ON Transactions.blockchain_id = Blockchain.id WHERE Blockchain.name = 'Ethereum' GROUP BY SmartContracts.name;"}
{"input": " \ud56d\uacf5\uc0ac\ubcc4 \ud56d\uacf5\ud3b8\uc758 \ud3c9\uade0 \ub3c4\ucc29\uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Flights (Airline VARCHAR(255), ArrivalTime TIME);", "output": "SELECT Airline, AVG(ArrivalTime) OVER (PARTITION BY Airline) AS AvgArrivalTime FROM Flights;"}
{"input": "Habitat_A'\uc640 'Habitat_B'\uc5d0 \uc788\ub294 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Habitat (name VARCHAR(20), animal_count INT); INSERT INTO Habitat (name, animal_count) VALUES ('Habitat_A', 30), ('Habitat_B', 45);", "output": "SELECT SUM(animal_count) FROM Habitat WHERE name IN ('Habitat_A', 'Habitat_B');"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ubc1c\ub9e4\ub41c \uc568\ubc94\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Album (AlbumID INT, ReleaseYear INT); INSERT INTO Album (AlbumID, ReleaseYear) VALUES (1, 2010), (2, 2011), (3, 2012), (4, 2013), (5, 2014), (6, 2015);", "output": "SELECT AlbumID, ReleaseYear, ROW_NUMBER() OVER (ORDER BY ReleaseYear DESC) AS Rank FROM Album;"}
{"input": " \ud50c\ub7ab\ud3fc\ub2f9 \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \uacc4\uc0b0\ud558\uc5ec \uac01 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Platform VARCHAR(50)); INSERT INTO Players (PlayerID, Platform) VALUES (1, 'Xbox'), (2, 'PlayStation'), (3, 'Nintendo'), (4, 'Xbox'), (5, 'PlayStation');", "output": "SELECT Platform, COUNT(PlayerID) AS PlayersCount, SUM(COUNT(PlayerID)) OVER (PARTITION BY Platform ORDER BY PlayerID) AS RunningPlayerCount FROM Players GROUP BY Platform, PlayerID ORDER BY Platform, PlayerID;"}
{"input": " 2021\ub144 \ud504\ub791\uc2a4\uc758 \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE product_revenue (product_category VARCHAR(20), country VARCHAR(20), year INT, revenue INT); INSERT INTO product_revenue (product_category, country, year, revenue) VALUES ('tops', 'France', 2021, 1000000), ('bottoms', 'France', 2021, 1500000), ('dresses', 'France', 2021, 1200000);", "output": "SELECT product_category, SUM(revenue) FROM product_revenue WHERE country = 'France' AND year = 2021 GROUP BY product_category;"}
{"input": " \ud604\uc7ac \ubb44\ubc14\uc774\uc758 \ub9e4\ub9bd \uc6a9\ub7c9\uacfc 2035\ub144 \uc608\uc0c1 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE landfill_capacity (location VARCHAR(50), current_capacity INT, projected_capacity INT, year INT); INSERT INTO landfill_capacity (location, current_capacity, projected_capacity, year) VALUES ('Mumbai', 45000, 55000, 2035);", "output": "SELECT location, current_capacity, projected_capacity FROM landfill_capacity WHERE location = 'Mumbai' AND year = 2035;"}
{"input": " \ubbf8\uad6d \uac01 \uc8fc\uc758 \uc7ac\uc0dd \uac00\ub2a5 \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE renewable_projects (project_id INT, name VARCHAR(50), type VARCHAR(50), location VARCHAR(50)); INSERT INTO renewable_projects (project_id, name, type, location) VALUES (1, 'Wind Farm 1', 'Wind', 'Texas');", "output": "SELECT location, COUNT(*) FROM renewable_projects WHERE location LIKE 'USA%' GROUP BY location;"}
{"input": " NFT\uc640 \uad00\ub828\ub41c \uc774\ub354\ub9ac\uc6c0 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ud3c9\uade0 \uac00\uc2a4 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ethereum_smart_contracts (id INT, gas_fees DECIMAL(10, 2), nft_involvement BOOLEAN); INSERT INTO ethereum_smart_contracts (id, gas_fees, nft_involvement) VALUES (1, 50, TRUE);", "output": "SELECT AVG(gas_fees) FROM ethereum_smart_contracts WHERE nft_involvement = TRUE;"}
{"input": " 2017\ub144\ubd80\ud130 2019\ub144 \uc0ac\uc774\uc5d0 \uac1c\ubd09\ub41c \uc601\ud654\uc758 \ucd5c\uc800 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), release_year INT, rating FLOAT); INSERT INTO movies (id, title, release_year, rating) VALUES (1, 'Movie1', 2017, 7.8); INSERT INTO movies (id, title, release_year, rating) VALUES (2, 'Movie2', 2018, 8.2); INSERT INTO movies (id, title, release_year, rating) VALUES (3, 'Movie3', 2019, 7.5); INSERT INTO movies (id, title, release_year, rating) VALUES (4, 'Movie4', 2020, 8.0); INSERT INTO movies (id, title, release_year, rating) VALUES (5, 'Movie5', 2021, 7.9);", "output": "SELECT MIN(rating) FROM movies WHERE release_year BETWEEN 2017 AND 2019;"}
{"input": " \uae08 \ub610\ub294 \uc740 \uc0dd\uc0b0 \ub370\uc774\ud130 \uc911 \ud558\ub098\ub9cc \uac00\uc9c0\uace0 \uc788\uace0 \ub458 \ub2e4 \uac00\uc9c0\uace0 \uc788\uc9c0\ub294 \uc54a\uc740 \uad11\uc0b0\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE gold_mine_production (mine_name VARCHAR(255), quantity INT); CREATE TABLE silver_mine_production (mine_name VARCHAR(255), quantity INT);", "output": "SELECT mine_name FROM gold_mine_production GROUP BY mine_name HAVING COUNT(*) = 1 INTERSECT SELECT mine_name FROM silver_mine_production GROUP BY mine_name HAVING COUNT(*) = 0 UNION SELECT mine_name FROM gold_mine_production GROUP BY mine_name HAVING COUNT(*) = 0 INTERSECT SELECT mine_name FROM silver_mine_production GROUP BY mine_name HAVING COUNT(*) = 1;"}
{"input": " \uc81c\uc870\uc0ac\uac00 '\ud604\ub300'\uc774\uace0 \ubaa8\ub378\uc774 '\uc544\uc774\uc624\ub2c9 5'\uc778 \ucc28\ub7c9\uc758 '\uc548\uc804 \ub4f1\uae09'\uc744 '\ubcc4 5\uac1c'\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE vehicle_safety_testing (make TEXT, model TEXT, safety_rating TEXT); INSERT INTO vehicle_safety_testing (make, model, safety_rating) VALUES ('Tesla', 'Model 3', '5 Stars'), ('Hyundai', 'Ioniq 5', '4 Stars'), ('Volvo', 'XC40', '5 Stars');", "output": "WITH cte AS (UPDATE vehicle_safety_testing SET safety_rating = '5 Stars' WHERE make = 'Hyundai' AND model = 'Ioniq 5') SELECT * FROM cte;"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed\uc758 \uad11\uc0b0 \uc6b4\uc601\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub178\ub3d9 \uc0dd\uc0b0\uc131\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE labor_productivity_by_region (region VARCHAR(20), productivity FLOAT); INSERT INTO labor_productivity_by_region (region, productivity) VALUES ('West', 3.2), ('East', 3.5), ('North', 3.0), ('South', 3.6);", "output": "SELECT AVG(productivity) FROM labor_productivity_by_region WHERE region = 'West';"}
{"input": " \uac00\ub2a5\ud55c \uacbd\uc6b0 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \ub18d\ubd80\uc758 \uc791\ubb3c \uc218\ud655\ub7c9 \ubcc0\ud654\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE farmer_yields (farmer_id INT, yield_date DATE, crop_yield INT); INSERT INTO farmer_yields (farmer_id, yield_date, crop_yield) VALUES (1, '2021-01-01', 500), (1, '2021-02-01', 600), (2, '2021-01-01', 700), (2, '2021-02-01', 750);", "output": "SELECT farmer_id, yield_date, crop_yield, LAG(crop_yield) OVER (PARTITION BY farmer_id ORDER BY yield_date) AS prev_yield FROM farmer_yields;"}
{"input": " \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \uacf5\uacf5 \uc548\uc804\uc744 \uc704\ud574 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE areas (id INT, name VARCHAR(20)); INSERT INTO areas (id, name) VALUES (1, 'Urban'), (2, 'Rural'); CREATE TABLE budget (item VARCHAR(20), area_id INT, amount INT); INSERT INTO budget (item, area_id, amount) VALUES ('Public Safety', 1, 8000000), ('Public Safety', 2, 4500000);", "output": "SELECT SUM(amount) FROM budget WHERE item = 'Public Safety' AND area_id = (SELECT id FROM areas WHERE name = 'Urban');"}
{"input": " \uac01 \ubd80\uc11c\uc5d0\uc11c \uac00\uc7a5 \uacbd\ud5d8\uc774 \ud48d\ubd80\ud55c \uc9c1\uc6d0\uc744 \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE employee (id INT, name VARCHAR(50), department VARCHAR(20), hire_date DATE);CREATE VIEW experienced_employees_by_dept AS SELECT department, id, name, DATEDIFF(CURDATE(), hire_date) as work_experience FROM employee WHERE department IN ('Manufacturing', 'Design');", "output": "SELECT department, id, name, work_experience, RANK() OVER (PARTITION BY department ORDER BY work_experience DESC) as experience_rank FROM experienced_employees_by_dept WHERE experience_rank = 1;"}
{"input": " \ub3c4\ucfc4 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ubc84\uc2a4\uc758 \uac00\uc7a5 \ube60\ub978 \ucd9c\ubc1c \uc2dc\uac04\uacfc \uac00\uc7a5 \ub2a6\uc740 \ucd9c\ubc1c \uc2dc\uac04\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tokyo_transport (route_id INT, departure_time TIME); INSERT INTO tokyo_transport (route_id, departure_time) VALUES (1, '07:00:00'), (1, '07:30:00'), (2, '08:00:00'), (2, '08:15:00');", "output": "SELECT MIN(departure_time), MAX(departure_time) FROM tokyo_transport WHERE route_id IN (SELECT DISTINCT route_id FROM tokyo_transport WHERE departure_time LIKE '07:%');"}
{"input": " VR \ubc0f \ube44VR \uac8c\uc784\uc744 \ubaa8\ub450 \uc81c\uc791\ud55c \ub514\uc790\uc774\ub108\uc758 \ucd1d \uacbd\ub825 \uc5f0\uc218\uc640 \uc774\ub7ec\ud55c \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uace0\uc720 \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Designers (DesignerID INT, DesignerName VARCHAR(50), YearsOfExperience INT); CREATE TABLE Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20), DesignerID INT); CREATE TABLE GamePlayer (PlayerID INT, GameID INT); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10)); CREATE TABLE VR_Games (GameID INT, IsVR INT);", "output": "SELECT COUNT(DISTINCT Designers.DesignerID), COUNT(DISTINCT GamePlayer.PlayerID) FROM Designers INNER JOIN Games ON Designers.DesignerID = Games.DesignerID INNER JOIN GamePlayer ON Games.GameID = GamePlayer.GameID INNER JOIN VR_Games ON Games.GameID = VR_Games.GameID GROUP BY Designers.DesignerID HAVING COUNT(DISTINCT CASE WHEN VR_Games.IsVR = 1 THEN Games.GameID END) > 0 AND COUNT(DISTINCT CASE WHEN VR_Games.IsVR = 0 THEN Games.GameID END) > 0;"}
{"input": " '\ud0dc\ud3c9\uc591' \uc9c0\uc5ed\uc5d0\uc11c \ud65c\uc8fc\ub85c\uac00 5\uac1c \uc774\uc0c1\uc778 \uacf5\ud56d\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Airports (AirportID int, Name varchar(100), Location varchar(100), NumberOfRunways int); INSERT INTO Airports VALUES (1, 'Airport A', 'Pacific', 6); INSERT INTO Airports VALUES (2, 'Airport B', 'Pacific', 3);", "output": "SELECT COUNT(*) FROM Airports WHERE Location = 'Pacific' AND NumberOfRunways > 5;"}
{"input": " \ucc3d\uace0 'ASIA-HKG'\uc758 \ubaa8\ub4e0 \uace0\uc720 \ud488\ubaa9 \ucf54\ub4dc \ub098\uc5f4", "context": "CREATE TABLE item_codes (id INT, warehouse_id VARCHAR(5), item_code VARCHAR(5)); INSERT INTO item_codes VALUES (1, 'ASIA', 'A01'), (2, 'ASIA-HKG', 'A02'), (3, 'ASIA', 'A03');", "output": "SELECT DISTINCT item_code FROM item_codes WHERE warehouse_id = (SELECT id FROM warehouses WHERE name = 'ASIA-HKG');"}
{"input": " 2022\ub144 2\ubd84\uae30 \uc2dc\uce74\uace0 \uac01 \uc9c0\uc5ed\uc758 \uacf5\uacf5 \uc11c\ube44\uc2a4 \uc694\uccad\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ResponseTimes (District TEXT, Quarter INT, ResponseTime FLOAT); INSERT INTO ResponseTimes (District, Quarter, ResponseTime) VALUES ('Downtown', 2, 12.5), ('North Side', 2, 13.7), ('South Side', 2, 14.2), ('West Side', 2, 15.1);", "output": "SELECT AVG(ResponseTime) as AvgResponseTime, District FROM ResponseTimes WHERE Quarter = 2 GROUP BY District;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \uc758\ub958\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE GarmentSales (garment_id INT, category VARCHAR(50), year INT, revenue DECIMAL(10,2)); INSERT INTO GarmentSales (garment_id, category, year, revenue) VALUES (1, 'Tops', 2020, 5000.00), (2, 'Bottoms', 2020, 6000.00), (3, 'Tops', 2020, 4000.00);", "output": "SELECT garment_id, category, year, MAX(revenue) AS max_revenue FROM GarmentSales GROUP BY category, year;"}
{"input": " \uc5f0\ub8cc \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uac01 \uc120\ubc15\uc758 \uc77c\uc77c \ud3c9\uade0 \uc5f0\ub8cc \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessels (vessel_id INT, vessel_name VARCHAR(50), flag_state VARCHAR(50)); CREATE TABLE fuel_types (fuel_type_id INT, fuel_type VARCHAR(50)); CREATE TABLE fuel_consumption (id INT, vessel_id INT, fuel_type_id INT, consumption FLOAT, consumption_date DATE);", "output": "SELECT v.vessel_name, ft.fuel_type, AVG(fc.consumption) as avg_daily_consumption FROM fuel_consumption fc JOIN vessels v ON fc.vessel_id = v.vessel_id JOIN fuel_types ft ON fc.fuel_type_id = ft.fuel_type_id GROUP BY v.vessel_name, ft.fuel_type;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uc2ec\ub9ac\ud55c \uc0ac\uac74\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c? \uadf8 \uc0ac\uac74 \uc911 \uc804\uccb4 \ub610\ub294 \ubd80\ubd84 \ud569\uc758\ub85c \uc774\uc5b4\uc9c4 \uc0ac\uac74\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_rj_cases(id INT, location VARCHAR(255), result VARCHAR(255));CREATE TABLE canada_rj_cases(id INT, location VARCHAR(255), result VARCHAR(255));", "output": "SELECT SUM(total_cases), SUM(agreements) FROM (SELECT COUNT(*) AS total_cases, CASE WHEN result IN ('Full Agreement', 'Partial Agreement') THEN 1 ELSE 0 END AS agreements FROM us_rj_cases UNION ALL SELECT COUNT(*), CASE WHEN result IN ('Full Agreement', 'Partial Agreement') THEN 1 ELSE 0 END FROM canada_rj_cases) AS total;"}
{"input": " \uac1c\ubc1c\ube44\uac00 \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \ubc14\uc774\uc624\uc13c\uc11c\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE biosensor_development (name TEXT, cost FLOAT); INSERT INTO biosensor_development (name, cost) VALUES ('BioSensor1', 25000); INSERT INTO biosensor_development (name, cost) VALUES ('BioSensor2', 30000);", "output": "SELECT name, cost FROM biosensor_development WHERE cost > (SELECT AVG(cost) FROM biosensor_development);"}
{"input": " \ub3d9\uc77c\ud55c \uacc4\uc88c \uc720\ud615\uc5d0 \ub300\ud574 \uc774\uc804 \uc794\uc561\ubcf4\ub2e4 \uacc4\uc88c \uc794\uc561\uc774 \ub354 \ub9ce\uc740 \uace0\uac1d\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2), transaction_date DATE);", "output": "SELECT customer_id, account_type, balance FROM (SELECT customer_id, account_type, balance, LAG(balance) OVER (PARTITION BY customer_id, account_type ORDER BY transaction_date) AS prev_balance FROM accounts) AS lagged_accounts WHERE balance > prev_balance;"}
{"input": " \uac01 \ubd80\uc11c\uc5d0\uc11c \uc6d0\uc8fc\ubbfc\uc73c\ub85c \ud655\uc778\ub41c \uadfc\ub85c\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE department (dept_id INT, dept_name VARCHAR(50), worker_id INT); INSERT INTO department (dept_id, dept_name, worker_id) VALUES (1, 'Mining', 1), (1, 'Mining', 3), (2, 'Engineering', 2); CREATE TABLE worker_demographics (worker_id INT, worker_ethnicity VARCHAR(50)); INSERT INTO worker_demographics (worker_id, worker_ethnicity) VALUES (1, 'Caucasian'), (2, 'African American'), (3, 'Indigenous');", "output": "SELECT dept_name, worker_ethnicity, COUNT(*) as count, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE w.worker_ethnicity = de.worker_ethnicity) as percentage FROM department d JOIN worker_demographics w ON d.worker_id = w.worker_id WHERE worker_ethnicity = 'Indigenous' GROUP BY dept_name, worker_ethnicity;"}
{"input": " '\uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131' \uce74\ud14c\uace0\ub9ac\uc758 AI \uc724\ub9ac \ubb38\uc81c \uc218\ub97c \ubcf4\uace0 \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ethics_issues (issue_id INT, issue_category VARCHAR(50), report_year INT);", "output": "SELECT report_year, COUNT(*) FROM ethics_issues WHERE issue_category = 'algorithmic fairness' GROUP BY report_year;"}
{"input": " \ucd1d \uc608\uc0b0\uc5d0 \ub530\ub77c \uc21c\uc704\uac00 \ub9e4\uaca8\uc9c4 \uc9c0\uc5ed\ubcc4 \ucea0\ud398\uc778\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE campaigns (id INT, campaign_name VARCHAR(50), start_date DATE, end_date DATE, budget FLOAT, region VARCHAR(50)); INSERT INTO campaigns (id, campaign_name, start_date, end_date, budget, region) VALUES (17, 'EmpowerMinds', '2022-01-01', '2022-03-31', 25000, 'Asia'); INSERT INTO campaigns (id, campaign_name, start_date, end_date, budget, region) VALUES (18, 'MindfulLiving', '2022-04-01', '2022-06-30', 30000, 'Africa'); INSERT INTO campaigns (id, campaign_name, start_date, end_date, budget, region) VALUES (19, 'HarmonyHearts', '2022-07-01', '2022-09-30', 15000, 'Europe'); INSERT INTO campaigns (id, campaign_name, start_date, end_date, budget, region) VALUES (20, 'BraveSpirits', '2022-10-01', '2022-12-31', 28000, 'Americas');", "output": "SELECT region, SUM(budget) as total_budget, RANK() OVER (ORDER BY SUM(budget) DESC) as budget_rank FROM campaigns GROUP BY region;"}
{"input": " \ubaa8\ubc14\uc77c \uacb0\uc81c\ub85c \uc5ec\ud589 2\uc758 \uc694\uae08\uc744 16.00\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE fares (id INT, trip_id INT, amount REAL, payment_method TEXT);", "output": "WITH cte AS (UPDATE fares SET amount = 16.00 WHERE trip_id = 2 AND payment_method = 'Mobile Payment' RETURNING id) SELECT * FROM cte;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \ubd09\uc0ac\ud55c \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name TEXT, country TEXT, hours_served INT);", "output": "SELECT SUM(hours_served) FROM volunteers WHERE QUARTER(volunteer_date) = 2 AND YEAR(volunteer_date) = 2022;"}
{"input": " \uacf5\uacf5\uc0ac\uc5c5\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac74\ucd95\uc790\uc7ac \uc885\ub958\ubcc4 \ucd1d\ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE construction_materials (id INT, material_type VARCHAR(255), project_type VARCHAR(255), cost FLOAT); INSERT INTO construction_materials (id, material_type, project_type, cost) VALUES (1, 'Steel', 'Bridge', 150000.00), (2, 'Asphalt', 'Road', 50000.00), (3, 'Concrete', 'Building', 200000.00);", "output": "SELECT material_type, SUM(cost) as total_cost FROM construction_materials GROUP BY material_type;"}
{"input": " \ubaa8\ub4e0 \uc704\uce58\uc5d0\uc11c \uc7ac\uace0\uc5d0 \uc0ac\uc6a9\ub41c \uc720\uae30\ub18d \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inventory (id INT, restaurant_id INT, ingredient TEXT, organic BOOLEAN, quantity INT); INSERT INTO inventory (id, restaurant_id, ingredient, organic, quantity) VALUES (1, 1, 'Tomatoes', true, 50); INSERT INTO inventory (id, restaurant_id, ingredient, organic, quantity) VALUES (2, 1, 'Lettuce', false, 25); INSERT INTO inventory (id, restaurant_id, ingredient, organic, quantity) VALUES (3, 2, 'Carrots', true, 75); INSERT INTO inventory (id, restaurant_id, ingredient, organic, quantity) VALUES (4, 2, 'Onions', false, 30);", "output": "SELECT SUM(quantity) FROM inventory WHERE organic = true;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uc5ec\uc131 \uc9c1\uc6d0 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workers (id INT, name VARCHAR(50), department VARCHAR(50), gender VARCHAR(50)); INSERT INTO workers (id, name, department, gender) VALUES (1, 'John Doe', 'manufacturing', 'male'), (2, 'Jane Smith', 'engineering', 'female'), (3, 'Alice Johnson', 'manufacturing', 'female');", "output": "SELECT department, COUNT(*) FROM workers WHERE gender = 'female' GROUP BY department;"}
{"input": " 18~25\uc138 \ud50c\ub808\uc774\uc5b4\uc5d0\uac8c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uac8c\uc784 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Games (GameID INT, GameName VARCHAR(50), Platform VARCHAR(50), ReleaseDate DATE, Genre VARCHAR(50)); INSERT INTO Games (GameID, GameName, Platform, ReleaseDate, Genre) VALUES (1, 'Fortnite', 'PC', '2017-07-25', 'Battle Royale'); INSERT INTO Games (GameID, GameName, Platform, ReleaseDate, Genre) VALUES (2, 'PUBG', 'PC', '2017-12-20', 'Battle Royale'); INSERT INTO Games (GameID, GameName, Platform, ReleaseDate, Genre) VALUES (3, 'Mario Kart 8', 'Nintendo Switch', '2017-04-28', 'Racing'); INSERT INTO Games (GameID, GameName, Platform, ReleaseDate, Genre) VALUES (4, 'The Legend of Zelda: Breath of the Wild', 'Nintendo Switch', '2017-03-03', 'Action-Adventure'); INSERT INTO Games (GameID, GameName, Platform, ReleaseDate, Genre) VALUES (5, 'Overwatch', 'PC', '2016-05-24', 'First-Person Shooter');", "output": "SELECT Genre, COUNT(*) AS Popularity FROM Games INNER JOIN (SELECT PlayerID, EXTRACT(YEAR FROM Age) AS Age FROM Players) AS PlayerAges ON Games.GameID = PlayerAges.PlayerID WHERE Age BETWEEN 18 AND 25 GROUP BY Genre;"}
{"input": " FPS\uc640 RPG \uac8c\uc784\uc744 \ubaa8\ub450 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4 \ubaa9\ub85d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, name VARCHAR(20)); INSERT INTO players (id, name) VALUES (1, 'John'); INSERT INTO players (id, name) VALUES (2, 'Jane'); CREATE TABLE fps_games (id INT, player_id INT, title VARCHAR(20)); INSERT INTO fps_games (id, player_id, title) VALUES (1, 1, 'Call of Duty'); INSERT INTO fps_games (id, player_id, title) VALUES (2, 2, 'Battlefield'); CREATE TABLE rpg_games (id INT, player_id INT, title VARCHAR(20)); INSERT INTO rpg_games (id, player_id, title) VALUES (1, 1, 'World of Warcraft'); INSERT INTO rpg_games (id, player_id, title) VALUES (2, 2, 'Elder Scrolls');", "output": "SELECT players.name FROM players INNER JOIN fps_games ON players.id = fps_games.player_id INNER JOIN rpg_games ON players.id = rpg_games.player_id;"}
{"input": " \uac01 \uc18c\ub9e4\uc5c5\uccb4\uc5d0\uc11c \ud310\ub9e4\ud558\ub294 \uacf5\uc815\ubb34\uc5ed \ucee4\ud53c\uc6d0\ub450\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE retailers (retailer_id INT, retailer_name TEXT);CREATE TABLE products (product_id INT, product_name TEXT, is_fair_trade BOOLEAN, product_category TEXT, price INT);CREATE TABLE inventory (retailer_id INT, product_id INT);", "output": "SELECT retailers.retailer_name, AVG(products.price) as avg_price FROM retailers JOIN inventory ON retailers.retailer_id = inventory.retailer_id JOIN products ON inventory.product_id = products.product_id WHERE products.is_fair_trade = TRUE AND products.product_category = 'coffee beans' GROUP BY retailers.retailer_name;"}
{"input": " 2000\ub144 \uc774\ud6c4 \uc124\ub9bd\ub41c \uac24\ub7ec\ub9ac\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc77c\ubcf8 \ubbf8\uc220\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Galleries (GalleryID int, Name varchar(50), EstablishDate date); INSERT INTO Galleries VALUES (1, 'Gallery A', '2005-01-01'); INSERT INTO Galleries VALUES (2, 'Gallery B', '2008-05-15'); CREATE TABLE Artworks (ArtworkID int, Name varchar(50), Price decimal(5,2), GalleryID int, ArtCountry varchar(20)); INSERT INTO Artworks VALUES (1, 'Artwork 1', 15000, 1, 'Japan'); INSERT INTO Artworks VALUES (2, 'Artwork 2', 12000, 2, 'Japan');", "output": "SELECT AVG(Price) FROM (SELECT Price FROM Artworks WHERE ArtCountry = 'Japan' AND GalleryID IN (SELECT GalleryID FROM Galleries WHERE EstablishDate >= '2000-01-01')) AS art_gallery_data;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0 \ub6ab\ub9b0 \uc6b0\ubb3c\uc758 \uc218\ub97c \ube44\uad50\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE wells (well_id INT, country VARCHAR(50)); INSERT INTO wells (well_id, country) VALUES (1, 'Canada'), (2, 'USA'), (3, 'Norway');", "output": "SELECT 'Canada' as country, COUNT(*) as num_wells FROM wells WHERE country = 'Canada' UNION ALL SELECT 'USA' as country, COUNT(*) as num_wells FROM wells WHERE country = 'USA';"}
{"input": " 8\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uad50\uc678 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uad50\ud1b5 \uc704\ubc18\uc774 \uae30\ub85d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Violations (Month INT, City VARCHAR(255), ViolationCount INT); INSERT INTO Violations (Month, City, ViolationCount) VALUES (7, 'Capital', 3000), (8, 'Capital', 3500), (7, 'Suburban', 2000), (8, 'Suburban', 2200);", "output": "SELECT SUM(ViolationCount) FROM Violations WHERE Month = 8 AND City = 'Suburban';"}
{"input": "\ub0a8\uc544\uba54\ub9ac\uce74\uc758 \uac01 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \uc548\uc804 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AIApps (id INT, app VARCHAR(255), safety_score DECIMAL(5,2), region VARCHAR(255)); INSERT INTO AIApps (id, app, safety_score, region) VALUES (1, 'AI Writer', 85.67, 'South America'), (2, 'AI Artist', 91.23, 'Europe'), (3, 'AI Composer', 88.98, 'Africa'), (4, 'AI Explainer', 76.54, 'South America');", "output": "SELECT app, safety_score FROM AIApps WHERE region = 'South America';"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc18c\ub9e4 \ubd80\ubb38\uc5d0\uc11c \uc131\uacf5\uc801\uc73c\ub85c \uc545\uc6a9\ub41c \uc2ec\uac01\ub3c4\uac00 \ub192\uc740 \ucde8\uc57d\uc810\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vulnerabilities (vuln_id INT, sector VARCHAR(50), vuln_severity VARCHAR(50), vuln_exploited BOOLEAN); INSERT INTO vulnerabilities (vuln_id, sector, vuln_severity, vuln_exploited) VALUES (1, 'Retail', 'high', true), (2, 'Retail', 'medium', false), (3, 'Retail', 'high', false);", "output": "SELECT sector, vuln_severity, AVG(CASE WHEN vuln_exploited THEN 1.0 ELSE 0.0 END) as exploit_percentage FROM vulnerabilities WHERE sector = 'Retail' AND vuln_severity = 'high' AND vuln_report_date >= DATEADD(quarter, -1, GETDATE()) GROUP BY sector, vuln_severity;"}
{"input": " '\uad50\ud1b5'\uc5d0 \uc911\uc810\uc744 \ub450\uace0 \uc870\ud569\uc6d0\uc774 10\ub9cc \uba85\uc774 \ub118\ub294 \ub178\ub3d9\uc870\ud569\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, name TEXT, domain TEXT, members INT); INSERT INTO unions (id, name, domain, members) VALUES (1, 'International Brotherhood of Teamsters', 'Transportation', 1200000); INSERT INTO unions (id, name, domain, members) VALUES (2, 'United Steelworkers', 'Metals, Mining, Energy, Construction', 850000);", "output": "SELECT COUNT(*) FROM unions WHERE domain = 'Transportation' AND members > 100000;"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \ubcf8 TV \ud504\ub85c\uadf8\ub7a8 \uc0c1\uc704 5\uac1c\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tv_show (id INT, title VARCHAR(50), viewers INT); INSERT INTO tv_show (id, title, viewers) VALUES (1, 'TVShow1', 250000), (2, 'TVShow2', 180000), (3, 'TVShow3', 300000), (4, 'TVShow4', 220000), (5, 'TVShow5', 150000), (6, 'TVShow6', 190000);", "output": "SELECT title FROM tv_show ORDER BY viewers DESC LIMIT 5;"}
{"input": " \uac00\uc7a5 \uc720\uba85\ud55c \uadf8\ub9bc\uc744 \uadf8\ub9b0 \ud654\uac00\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE painters (name VARCHAR(255), paintings INT); INSERT INTO painters (name, paintings) VALUES ('Leonardo da Vinci', 7), ('Pablo Picasso', 5), ('Vincent van Gogh', 4);", "output": "SELECT name FROM painters WHERE paintings = (SELECT MAX(paintings) FROM painters);"}
{"input": " 2020\ub144 '\uc11c\ud574\uc548' \uc9c0\uc5ed\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc790\uc5f0\uc7ac\ud574\uac00 \uae30\ub85d\ub410\ub098\uc694?", "context": "CREATE TABLE regions (id INT, name VARCHAR(255)); CREATE TABLE natural_disasters (id INT, region_id INT, year INT); INSERT INTO regions (id, name) VALUES (1, 'West Coast'); INSERT INTO natural_disasters (id, region_id, year) VALUES (1, 1, 2020);", "output": "SELECT COUNT(*) FROM natural_disasters WHERE region_id = (SELECT id FROM regions WHERE name = 'West Coast') AND year = 2020;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ub2c8\uc81c\ub974 \uc0bc\uac01\uc8fc\uc758 \ucd1d \uc0dd\uc0b0\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE well_production (well_id INT, measurement_date DATE, production_rate FLOAT, location TEXT); INSERT INTO well_production (well_id, measurement_date, production_rate, location) VALUES (1, '2022-01-01', 500, 'Niger Delta'), (2, '2022-02-01', 700, 'Gulf of Mexico'), (3, '2022-03-01', 600, 'Siberia');", "output": "SELECT SUM(production_rate) FROM well_production WHERE location = 'Niger Delta' AND measurement_date >= DATEADD(year, -1, GETDATE());"}
{"input": " \uc758\ub958 \uc0b0\uc5c5\uc5d0\uc11c \uc21c\ud658 \uacf5\uae09\ub9dd \uc774\ub2c8\uc154\ud2f0\ube0c\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE supply_chain (supply_chain_id INT, industry VARCHAR(255), num_initiatives INT);", "output": "SELECT COUNT(*) FROM supply_chain WHERE industry = 'Apparel';"}
{"input": "\uc804\uae30\uc790\ub3d9\ucc28\uc640 \uc790\uc728\uc8fc\ud589\uc790\ub3d9\ucc28\ub97c \ubaa8\ub450 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ud68c\uc0ac\ub97c \ub9cc\ub098\ubcf4\uc138\uc694.", "context": "CREATE TABLE AutonomousVehicles (id INT, company VARCHAR(20), vehicle_type VARCHAR(20), num_vehicles INT); INSERT INTO AutonomousVehicles (id, company, vehicle_type, num_vehicles) VALUES (1, 'Waymo', 'Self-Driving Car', 500), (2, 'Tesla', 'Autopilot Car', 800), (3, 'Cruise', 'Self-Driving Car', 300), (5, 'Uber', 'Self-Driving Car', 100); CREATE TABLE ElectricVehicles (id INT, company VARCHAR(20), vehicle_type VARCHAR(20), num_vehicles INT); INSERT INTO ElectricVehicles (id, company, vehicle_type, num_vehicles) VALUES (1, 'Tesla', 'EV', 1500000), (2, 'Nissan', 'Leaf', 500000), (3, 'Chevrolet', 'Bolt', 300000), (6, 'Rivian', 'EV', 2000);", "output": "SELECT company FROM AutonomousVehicles WHERE vehicle_type = 'Self-Driving Car' INTERSECT SELECT company FROM ElectricVehicles WHERE vehicle_type = 'EV';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc8fc\uc758 \uad11\ub300\uc5ed \uace0\uac1d\uc73c\ub85c\ubd80\ud130 \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_customers (customer_id INT, speed FLOAT, revenue FLOAT, state VARCHAR(20)); INSERT INTO broadband_customers (customer_id, speed, revenue, state) VALUES (1, 150, 50, 'California'), (2, 120, 40, 'New York'), (3, 200, 60, 'California');", "output": "SELECT SUM(revenue) FROM broadband_customers WHERE state = 'California';"}
{"input": " \ubcf4\uc789\uc740 \uc5d4\uc9c4 \uc720\ud615 'CFM56'\uc744 \uc0ac\uc6a9\ud558\uc5ec \uba87 \ub300\uc758 \ud56d\uacf5\uae30\ub97c \uc81c\uc870\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE aircraft (id INT, manufacturer VARCHAR(255), model VARCHAR(255), engine_type VARCHAR(255)); INSERT INTO aircraft (id, manufacturer, model, engine_type) VALUES (1, 'Boeing', '737', 'CFM56');", "output": "SELECT COUNT(*) FROM aircraft WHERE manufacturer = 'Boeing' AND engine_type = 'CFM56';"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed\uc5d0\uc11c \ubcd1\uc0c1 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ubcd1\uc6d0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694", "context": "CREATE TABLE rural_hospitals( hospital_id INT PRIMARY KEY, name VARCHAR(255), bed_count INT, rural_urban_classification VARCHAR(50)) INSERT INTO rural_hospitals (hospital_id, name, bed_count, rural_urban_classification) VALUES (1, 'Rural General Hospital', 50, 'Rural'), (2, 'Urban Teaching Hospital', 250, 'Urban'), (3, 'Small Rural Clinic', 10, 'Rural'), (4, 'Large Rural Hospital', 100, 'Rural'), (5, 'Small Urban Clinic', 5, 'Urban')", "output": "SELECT * FROM ( SELECT name, bed_count, RANK() OVER ( ORDER BY bed_count DESC ) AS rank FROM rural_hospitals WHERE rural_urban_classification = 'Rural') subquery WHERE rank = 1"}
{"input": "2022\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \uc0b0\uc5c5 \ubaa9\uc801\uc744 \uc704\ud55c \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WaterUsageMetrics (UsageID INT PRIMARY KEY, Location VARCHAR(255), Usage INT, UsageType VARCHAR(255), Timestamp DATETIME); INSERT INTO WaterUsageMetrics (UsageID, Location, Usage, UsageType, Timestamp) VALUES (1, 'California', 800, 'Industrial', '2022-01-01 00:00:00');", "output": "SELECT SUM(Usage) FROM WaterUsageMetrics WHERE UsageType = 'Industrial' AND YEAR(Timestamp) = 2022 AND Location = 'California';"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc \ud504\ub85c\uc81d\ud2b8\ubd80\ud130 \uc21c\uc11c\ub300\ub85c '\uc7ac\uc0dd \uac00\ub2a5' \uce74\ud14c\uace0\ub9ac\uc758 \ub179\uc0c9 \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \ud0c4\uc18c \uc0c1\uc1c4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(255), category VARCHAR(255), carbon_offsets FLOAT); INSERT INTO green_buildings (id, name, category, carbon_offsets) VALUES (1, 'Solar Tower', 'renewable', 500.0); INSERT INTO green_buildings (id, name, category, carbon_offsets) VALUES (2, 'Wind Farm', 'renewable', 800.0);", "output": "SELECT AVG(carbon_offsets) FROM (SELECT ROW_NUMBER() OVER (ORDER BY id DESC) AS row_num, carbon_offsets FROM green_buildings WHERE category = 'renewable') AS subquery WHERE row_num <= 5;"}
{"input": " \uc9c0\ub09c \uc8fc \ub3c4\uc2dc \uc9c0\uc810\uc5d0\uc11c \ud310\ub9e4\ub41c \uae00\ub8e8\ud150 \ud504\ub9ac \uc694\ub9ac\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Branches (branch_id INT, branch_type VARCHAR(255));CREATE TABLE Menu (dish_name VARCHAR(255), branch_id INT, dietary_restrictions VARCHAR(255));CREATE TABLE Sales (sale_date DATE, dish_name VARCHAR(255), quantity INT);", "output": "SELECT SUM(quantity) as total_gluten_free_sales FROM Sales JOIN Menu ON Sales.dish_name = Menu.dish_name JOIN Branches ON Menu.branch_id = Branches.branch_id WHERE dietary_restrictions = 'gluten-free' AND branch_type = 'urban' AND sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND CURRENT_DATE;"}
{"input": " 2020\ub144 \ub18d\uc5c5 \ubd84\uc57c\uc758 \ubaa8\ub4e0 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc744 \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE infrastructure_projects (id INT, project_name VARCHAR(100), project_type VARCHAR(50), project_domain VARCHAR(50), start_date DATE, end_date DATE, total_cost FLOAT);", "output": "SELECT project_type, SUM(total_cost) FROM infrastructure_projects WHERE project_domain = 'agriculture' AND YEAR(start_date) = 2020 GROUP BY project_type;"}
{"input": " 2020\ub144 6\uc6d4 \uc774\ud6c4 \uc2dc\uc791\ub41c \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud558\uace0 \uad00\ub828 \uacc4\uc57d\uc790 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE projects (project_id int, project_name varchar(255), start_date date, num_contractors int); INSERT INTO projects (project_id, project_name, start_date, num_contractors) VALUES (1, 'Aircraft Carrier Construction', '2021-01-01', 5); INSERT INTO projects (project_id, project_name, start_date, num_contractors) VALUES (2, 'Missile Defense System Upgrade', '2020-07-15', 3);", "output": "SELECT project_name, num_contractors, ROW_NUMBER() OVER (ORDER BY num_contractors DESC) as project_rank FROM projects WHERE start_date > '2020-06-30';"}
{"input": " \uccad\uad6c \uae08\uc561 \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uac1c \uccad\uad6c\uc5d0 \ub300\ud55c \ubcf4\ud5d8 \uc99d\uad8c \ubc88\ud638, \ubcf4\ud5d8 \uacc4\uc57d\uc790 \uc774\ub984, \uccad\uad6c \uae08\uc561\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Policy (PolicyNumber INT, PolicyholderName VARCHAR(50)); CREATE TABLE Claim (ClaimID INT, PolicyNumber INT, ClaimAmount DECIMAL(10,2)); INSERT INTO Policy VALUES (1, 'John Doe'), (2, 'Jane Smith'); INSERT INTO Claim VALUES (1, 1, 5000), (2, 1, 3000), (3, 2, 7000), (4, 2, 8000), (5, 2, 9000);", "output": "SELECT PolicyNumber, PolicyholderName, ClaimAmount FROM (SELECT PolicyNumber, PolicyholderName, ClaimAmount, ROW_NUMBER() OVER (ORDER BY ClaimAmount DESC) as rn FROM Policy JOIN Claim ON Policy.PolicyNumber = Claim.PolicyNumber) x WHERE rn <= 5;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c VR \uac8c\uc784\uc744 \ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Country) VALUES (1, 22, 'Brazil'), (2, 30, 'Canada'), (3, 25, 'United Kingdom'), (4, 19, 'India'), (5, 45, 'Canada'), (6, 32, 'Canada'), (7, 28, 'Brazil'), (8, 42, 'Canada'), (9, 21, 'United Kingdom'); CREATE TABLE GameLibrary (GameID INT, GameName VARCHAR(50), GameType VARCHAR(50)); INSERT INTO GameLibrary (GameID, GameName, GameType) VALUES (1, 'GameA', 'Non-VR'), (2, 'GameB', 'Non-VR'), (3, 'GameC', 'VR'), (4, 'GameD', 'Non-VR'), (5, 'GameE', 'VR'), (6, 'GameF', 'Non-VR'); CREATE TABLE PlayerGameLibrary (PlayerID INT, GameID INT); INSERT INTO PlayerGameLibrary (PlayerID, GameID) VALUES (2, 3), (3, 3), (5, 3), (6, 3), (7, 5), (8, 5);", "output": "SELECT AVG(Players.Age) FROM Players JOIN PlayerGameLibrary ON Players.PlayerID = PlayerGameLibrary.PlayerID JOIN GameLibrary ON PlayerGameLibrary.GameID = GameLibrary.GameID WHERE GameLibrary.GameType = 'VR' AND Players.Country = 'Canada';"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uac8c\uc784 \uc7a5\ub974\ubcc4 \ucd1d \uc218\uc775\uc744 \ucd1d \uc218\uc775 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games(id INT, name VARCHAR(50), genre VARCHAR(50), revenue FLOAT); CREATE TABLE transactions(id INT, game_id INT, transaction_date DATE, amount FLOAT);", "output": "SELECT genres.genre, SUM(transactions.amount) as total_revenue FROM games JOIN transactions ON games.name = transactions.game_name JOIN (SELECT DISTINCT game_name, genre FROM games) genres ON games.genre = genres.genre WHERE transaction_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY genres.genre ORDER BY total_revenue DESC;"}
{"input": " \uac00\uc7a5 \ube60\ub978 \uc758\ub8cc \uc751\uae09 \uc0c1\ud669\uacfc \uac00\uc7a5 \ub290\ub9b0 \uc758\ub8cc \uc751\uae09 \uc0c1\ud669\uc758 \uc751\ub2f5 \uc2dc\uac04 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emergencies (type VARCHAR(255), response_time INT); INSERT INTO emergencies (type, response_time) VALUES ('Fire', 5), ('Medical', 8), ('Medical', 9), ('Medical', 7);", "output": "SELECT type, MAX(response_time) OVER (PARTITION BY type) - MIN(response_time) OVER (PARTITION BY type) AS response_time_difference FROM emergencies WHERE type = 'Medical';"}
{"input": "2021\ub144\uc5d0 \uad6c\ud604\ub41c \uc0ac\ud68c \ubcf5\uc9c0 \uae30\uc220 \ud504\ub85c\uc81d\ud2b8 \uc218\ub294 \ud504\ub85c\uc81d\ud2b8 \uc720\ud615 \ubc0f \uc704\uce58\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE years (id INT, name VARCHAR(50)); CREATE TABLE project_type (id INT, name VARCHAR(50)); CREATE TABLE social_good_tech_projects (id INT, year_id INT, project_type_id INT, location VARCHAR(50), projects INT); INSERT INTO years (id, name) VALUES (2020, '2020'), (2021, '2021'); INSERT INTO project_type (id, name) VALUES (1, 'AI'), (2, 'Blockchain'), (3, 'Data Science'); INSERT INTO social_good_tech_projects (id, year_id, project_type_id, location, projects) VALUES (1, 2021, 1, 'New York', 10), (2, 2021, 2, 'London', 15), (3, 2021, 3, 'Paris', 5), (4, 2020, 1, 'San Francisco', 8), (5, 2020, 2, 'Berlin', 12), (6, 2020, 3, 'Tokyo', 7);", "output": "SELECT years.name as project_year, project_type.name as project_type, social_good_tech_projects.location, SUM(social_good_tech_projects.projects) as total_projects FROM social_good_tech_projects INNER JOIN years ON social_good_tech_projects.year_id = years.id INNER JOIN project_type ON social_good_tech_projects.project_type_id = project_type.id GROUP BY years.name, project_type.name, social_good_tech_projects.location ORDER BY project_year, project_type;"}
{"input": " \uac01 \ud638\ud154\uc758 \uc804\uc6d4 \ub300\ube44 \uc6d4\ubcc4 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc758 \ubcc0\ud654\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, country TEXT, energy_consumption FLOAT, month INT); INSERT INTO hotels (hotel_id, hotel_name, city, country, energy_consumption, month) VALUES (1, 'Hotel A', 'Rome', 'Italy', 12000.0, 1), (1, 'Hotel A', 'Rome', 'Italy', 13000.0, 2);", "output": "SELECT hotel_name, ((energy_consumption - LAG(energy_consumption) OVER (PARTITION BY hotel_name ORDER BY month))/LAG(energy_consumption) OVER (PARTITION BY hotel_name ORDER BY month))*100 as percentage_change FROM hotels;"}
{"input": " \uba55\uc2dc\ucf54 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud55c \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Countries (id INT, name VARCHAR(20)); ALTER TABLE Visitors ADD COLUMN country_id INT, age INT; CREATE TABLE Event_Attendance (visitor_id INT, event_id INT);", "output": "SELECT AVG(Visitors.age) FROM Visitors JOIN Countries ON Visitors.country_id = Countries.id JOIN Event_Attendance ON Visitors.id = Event_Attendance.visitor_id WHERE Countries.name = 'Mexico';"}
{"input": " 2022\ub144 \uc544\ud504\ub9ac\uce74 \uc758\uc57d\ud488 '\ud30c\ub098\ub3cc' \ucd5c\ub300 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc600\ub098?", "context": "CREATE TABLE sales (drug_name TEXT, continent TEXT, sales_amount INT, sale_date DATE); INSERT INTO sales (drug_name, continent, sales_amount, sale_date) VALUES ('Panadol', 'Africa', 3000, '2022-01-01');", "output": "SELECT MAX(sales_amount) FROM sales WHERE drug_name = 'Panadol' AND continent = 'Africa' AND sale_date BETWEEN '2022-01-01' AND '2022-12-31';"}
{"input": " \uc9c0\ub09c 10\ub144 \ub3d9\uc548 Met\uac00 \ud504\ub791\uc2a4 \uadf8\ub9bc\uc73c\ub85c \ucc3d\ucd9c\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, name VARCHAR(255), artist_id INT, date_sold DATE, price DECIMAL(10,2), museum_id INT); CREATE TABLE Artists (artist_id INT, name VARCHAR(255), nationality VARCHAR(255)); CREATE TABLE Museums (museum_id INT, name VARCHAR(255));", "output": "SELECT SUM(Artworks.price) FROM Artworks INNER JOIN Artists ON Artworks.artist_id = Artists.artist_id INNER JOIN Museums ON Artworks.museum_id = Museums.museum_id WHERE Artists.nationality = 'French' AND Museums.name = 'The Met' AND Artworks.date_sold BETWEEN DATE_SUB(NOW(), INTERVAL 10 YEAR) AND NOW();"}
{"input": " \ub300\uc11c\uc591\uc758 \uc5b4\ub5a4 \uc885\ubcf4\ub2e4 \ubc14\uc774\uc624\ub9e4\uc2a4\uac00 \ub354 \ud070 \uc218\uc0dd \uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pacific_fish_stock (id INT, species VARCHAR(255), biomass INT); INSERT INTO pacific_fish_stock (id, species, biomass) VALUES (1, 'Whale Shark', 7000000), (2, 'Blue Whale', 12000000), (3, 'Great White Shark', 2000000);", "output": "SELECT species FROM pacific_fish_stock WHERE biomass > ALL (SELECT biomass FROM atlantic_fish_stock);"}
{"input": " \uc548\uc804\uc131 \ud3c9\uac00\ub97c \ubc1b\uc740 AI \uc54c\uace0\ub9ac\uc998\uc758 \ud3c9\uade0 \uc548\uc804\uc131 \uc810\uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE AI_Algorithms (algorithm_name TEXT, safety_evaluated BOOLEAN, safety_score INT); INSERT INTO AI_Algorithms (algorithm_name, safety_evaluated, safety_score) VALUES ('Algorithm X', TRUE, 85), ('Algorithm Y', FALSE, 90), ('Algorithm Z', TRUE, 75);", "output": "SELECT AVG(safety_score) FROM AI_Algorithms WHERE safety_evaluated = TRUE;"}
{"input": " \ud2b9\uc815 \uac8c\uc784\uc5d0 \ub300\ud574 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \uac01 \ud50c\ub808\uc774\uc5b4\uc758 \uc21c\uc704\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE PlayerGame (PlayerID INT, GameID INT, Playtime INT); INSERT INTO PlayerGame (PlayerID, GameID, Playtime) VALUES (1, 1, 1000); INSERT INTO PlayerGame (PlayerID, GameID, Playtime) VALUES (2, 1, 2000);", "output": "SELECT PlayerID, ROW_NUMBER() OVER (PARTITION BY GameID ORDER BY Playtime DESC) as PlaytimeRank FROM PlayerGame"}
{"input": " \ub0a8\ud574\uc591\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591 \uc885\uc774 \ud655\uc778\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (id INT, species_name VARCHAR(255), location VARCHAR(255)); INSERT INTO marine_species (id, species_name, location) VALUES (1, 'Crabeater Seal', 'Southern Ocean');", "output": "SELECT COUNT(*) FROM marine_species WHERE marine_species.location = 'Southern Ocean';"}
{"input": " \uc9c0\ub09c\ud574 \ud638\ud154\uc5c5\uacc4 AI \ub3c4\uc785 \ub3d9\ud5a5\uc740 \uc5b4\ub5a4\uac00\uc694?", "context": "CREATE TABLE ai_adoption (adoption_id INT, hotel_name VARCHAR(255), adoption_date DATE, adoption_level INT);", "output": "SELECT adoption_date, AVG(adoption_level) FROM ai_adoption WHERE hotel_name IN (SELECT hotel_name FROM hotels WHERE industry = 'hotel') GROUP BY adoption_date ORDER BY adoption_date;"}
{"input": " \ud604\uc7ac \uc810\uc218\uac00 8\uc810 \ubbf8\ub9cc\uc778 \uc778\ub3c4\ub124\uc2dc\uc544 \uace0\uac1d\uc758 \uc7ac\ubb34 \ub2a5\ub825 \uc810\uc218\ub97c 2\uc810 \ub192\uc785\ub2c8\ub2e4.", "context": "CREATE TABLE financial_capability_id (client_id INT, financial_capability_score INT, country VARCHAR(50)); INSERT INTO financial_capability_id (client_id, financial_capability_score, country) VALUES (1, 7, 'Indonesia'), (2, 3, 'Indonesia'), (3, 6, 'Indonesia');", "output": "WITH updated_scores AS (UPDATE financial_capability_id SET financial_capability_score = financial_capability_score + 2 WHERE country = 'Indonesia' AND financial_capability_score < 8) SELECT * FROM updated_scores;"}
{"input": " '\ub0a8\ubbf8' \uc9c0\uc5ed\uc5d0\uc11c \uace0\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc740 \uaddc\ubaa8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID INT, Size VARCHAR(10), Country VARCHAR(255)); INSERT INTO Customers (CustomerID, Size, Country) VALUES (1, 'XS', 'Brazil'), (2, 'S', 'Argentina'), (3, 'M', 'Chile'), (4, 'L', 'Peru'), (5, 'XL', 'Colombia'), (6, 'XS', 'Argentina'), (7, 'L', 'Brazil');", "output": "SELECT Size, COUNT(*) AS Count FROM Customers WHERE Country = 'South America' GROUP BY Size ORDER BY Count DESC LIMIT 1;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 '\ucee4\ubba4\ub2c8\ud2f0 \uac24\ub7ec\ub9ac' \uc774\ubca4\ud2b8\uc5d0 \ucc38\uc11d\ud55c \ubc29\ubb38\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists arts_culture;CREATE TABLE if not exists arts_culture.events (event_id INT, program_id INT, event_name VARCHAR(50), start_date DATE, end_date DATE, capacity INT, attendees INT); INSERT INTO arts_culture.events (event_id, program_id, event_name, start_date, end_date, capacity, attendees) VALUES (1, 1, 'Artistic Explorers', '2021-01-01', '2021-12-31', 1000, 850);", "output": "WITH q1_attendance AS (UPDATE arts_culture.events SET attendees = (SELECT SUM(visitor_count) FROM arts_culture.visitors WHERE visitors.event_id = events.event_id) WHERE events.program_id = (SELECT program_id FROM arts_culture.programs WHERE program_name = 'Community Gallery') AND events.start_date BETWEEN '2022-01-01' AND '2022-03-31' RETURNING attendees) SELECT * FROM q1_attendance;"}
{"input": " '\ud1a0\ub860\ud1a0'\uc758 \uad50\ud1b5 \uc815\ucc45\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE City (id INT, name VARCHAR(50)); INSERT INTO City (id, name) VALUES (1, 'New York'); INSERT INTO City (id, name) VALUES (2, 'Los Angeles'); INSERT INTO City (id, name) VALUES (3, 'Toronto'); INSERT INTO City (id, name) VALUES (4, 'London'); INSERT INTO City (id, name) VALUES (5, 'Tokyo'); CREATE TABLE Policy (id INT, name VARCHAR(50), city_id INT, category VARCHAR(50), budget DECIMAL(10,2), start_date DATE, end_date DATE); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (1, 'Education', 3, 'Education', 1200000, '2021-01-01', '2023-12-31'); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (2, 'Healthcare', 3, 'Healthcare', 1500000, '2020-01-01', '2022-12-31'); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (3, 'Transportation', 4, 'Transportation', 2000000, '2019-01-01', '2024-12-31'); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (4, 'Education', 4, 'Education', 1800000, '2020-01-01', '2023-12-31'); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (5, 'Transportation', 5, 'Transportation', 1000000, '2021-01-01', '2024-12-31'); INSERT INTO Policy (id, name, city_id, category, budget, start_date, end_date) VALUES (6, 'Transportation', 3, 'Transportation', 1700000, '2022-01-01', '2025-12-31');", "output": "SELECT SUM(budget) FROM Policy WHERE city_id = 3 AND category = 'Transportation';"}
{"input": "\uce90\ub098\ub2e4 \uac01 \uc8fc\uc5d0\uc11c \ud68c\ubcf5\uc801 \uc0ac\ubc95 \ud504\ub85c\uadf8\ub7a8\uc774 \ucc98\ub9ac\ud558\ub294 \uc0ac\uac74 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\uba70, \uae30\uc874 \uc0ac\ubc95 \uc81c\ub3c4\uc5d0\uc11c \uc2ec\ub9ac\ub418\ub294 \uc0ac\uac74 \uc218\uc640 \uc5b4\ub5bb\uac8c \ube44\uad50\ub429\ub2c8\uae4c?", "context": "CREATE TABLE canada_traditional_justice_cases(id INT, province VARCHAR(255), cases_handled INT);CREATE TABLE canada_rj_cases(id INT, province VARCHAR(255), cases_handled INT);", "output": "SELECT 'Restorative Justice', SUM(cases_handled) FROM canada_rj_cases GROUP BY province UNION ALL SELECT 'Traditional Justice', SUM(cases_handled) FROM canada_traditional_justice_cases GROUP BY province;"}
{"input": " \ud3c9\uc0dd\ud559\uc2b5\uacfc\uc815 \uc774\uc218\uc728\uc758 \uc131\ubcc4 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE lifelong_learning_gender (student_id INT, gender TEXT, course TEXT, completion_date DATE); INSERT INTO lifelong_learning_gender (student_id, gender, course, completion_date) VALUES (1, 'Female', 'Data Science', '2022-01-10'), (2, 'Male', 'Programming', '2021-06-15'), (3, 'Non-binary', 'Data Science', '2022-03-25');", "output": "SELECT gender, COUNT(*) / (SELECT COUNT(*) FROM lifelong_learning_gender) AS completion_rate FROM lifelong_learning_gender GROUP BY gender;"}
{"input": " \uc791\ub144\uc5d0 \uac01 \uc8fc\uc5d0 \ub300\ud55c \uac74\uac15 \ud615\ud3c9 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HealthEquityMetrics (ID INT, State VARCHAR(50), Metric VARCHAR(50), Date DATE); INSERT INTO HealthEquityMetrics (ID, State, Metric, Date) VALUES (1, 'California', 'AccessToCare', '2022-01-01'), (2, 'Texas', 'QualityOfCare', '2022-02-15'), (3, 'NewYork', 'AccessToCare', '2022-03-05');", "output": "SELECT State, Metric, AVG(Date) as AvgDate FROM HealthEquityMetrics WHERE Date >= DATEADD(year, -1, GETDATE()) GROUP BY State, Metric;"}
{"input": " VR \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uac00 \uc120\ud638\ud558\ub294 \uac8c\uc784 \uc7a5\ub974\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \uc8fc\ub2f9 \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, PreferredGenre VARCHAR(20), LastVRGame DATETIME, HoursPlayedPerWeek DECIMAL(3,2)); CREATE TABLE Games (GameID INT, Genre VARCHAR(20)); CREATE VIEW Game_Library AS SELECT PlayerID, GameID FROM Player_Games; CREATE VIEW Game_Details AS SELECT GameID, Genre FROM Games; CREATE VIEW VR_Games AS SELECT PlayerID FROM Game_Library WHERE GameID IN (SELECT GameID FROM Games WHERE VRCompatible = 1);", "output": "SELECT PreferredGenre, AVG(HoursPlayedPerWeek) FROM Players JOIN VR_Games ON Players.PlayerID = VR_Games.PlayerID JOIN Game_Details ON Game_Library.GameID = Games.GameID GROUP BY PreferredGenre;"}
{"input": "\uc9c0\uc5ed\ubcc4\ub85c \ub18d\uc5c5 \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc608\uc0b0\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c\uc758 \ub18d\uc5c5 \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\ub97c \ucc3e\uc544 \ud574\ub2f9 \uc9c0\uc5ed \ub0b4\uc5d0\uc11c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Agricultural_Innovations (Project_ID INT, Project_Name VARCHAR(50), Project_Budget FLOAT, Project_Region VARCHAR(50)); INSERT INTO Agricultural_Innovations (Project_ID, Project_Name, Project_Budget, Project_Region) VALUES (1, 'Precision Agriculture', 30000, 'Region A'), (2, 'Vertical Farming', 40000, 'Region A'), (3, 'Drip Irrigation', 50000, 'Region B'), (4, 'Automated Harvesting', 25000, 'Region B');", "output": "SELECT Project_ID, Project_Name, Project_Budget, Project_Region, ROW_NUMBER() OVER (PARTITION BY Project_Region ORDER BY Project_Budget DESC) AS Project_Rank FROM Agricultural_Innovations;"}
{"input": "\ud589\uc0ac\uba85, \uac1c\ucd5c\uad6d, \ucc38\uac00\uc790 \uc218\ub97c \ud3ec\ud568\ud558\uc5ec \ucc38\uac00\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud558\uc2dc\uc624.", "context": "CREATE TABLE defense_diplomacy (id INT, event VARCHAR(255), host_country VARCHAR(255), participants INT); INSERT INTO defense_diplomacy (id, event, host_country, participants) VALUES (1, 'Defense Innovation Summit', 'USA', 500), (2, 'International Peacekeeping Conference', 'France', 350), (3, 'Defense and Security Forum', 'Germany', 400), (4, 'Military Diplomacy Workshop', 'Canada', 200), (5, 'Defense Cooperation Meeting', 'Australia', 250);", "output": "SELECT event, host_country, participants FROM (SELECT event, host_country, participants, ROW_NUMBER() OVER (ORDER BY participants DESC) as rn FROM defense_diplomacy) t WHERE rn <= 3;"}
{"input": " 2022\ub144 3\ubd84\uae30 \uad6d\uac00\ubcc4 \uc57d\ud488\ubcc4 \ud310\ub9e4 \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE sales_revenue (drug VARCHAR(20), country VARCHAR(20), date DATE, revenue NUMERIC(12, 2)); INSERT INTO sales_revenue (drug, country, date, revenue) VALUES ('DrugA', 'USA', '2022-07-01', 500000.00), ('DrugB', 'USA', '2022-07-01', 600000.00), ('DrugA', 'Canada', '2022-07-01', 450000.00), ('DrugB', 'Canada', '2022-07-01', 500000.00);", "output": "SELECT drug, SUM(CASE WHEN country = 'USA' THEN revenue ELSE 0 END) AS usa_revenue, SUM(CASE WHEN country = 'Canada' THEN revenue ELSE 0 END) AS canada_revenue FROM sales_revenue WHERE date BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY drug;"}
{"input": " \uc9c0\ub09c \ub2ec \uae30\ubd80\ub97c \ubc1b\uc740 \ube44\uc601\ub9ac \ub2e8\uccb4\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, nonprofit_id INT, amount FLOAT, donation_date DATE); INSERT INTO donations (id, nonprofit_id, amount, donation_date) VALUES (1, 1, 500, '2022-03-15'), (2, 2, 1000, '2022-03-20'), (3, 1, 750, '2022-03-25'); CREATE TABLE nonprofit_ratings (id INT, nonprofit_id INT, rating INT); INSERT INTO nonprofit_ratings (id, nonprofit_id, rating) VALUES (1, 1, 4), (2, 1, 5), (3, 2, 3);", "output": "SELECT nonprofit_id, AVG(rating) FROM nonprofit_ratings JOIN (SELECT nonprofit_id FROM donations WHERE donation_date BETWEEN DATEADD(day, -30, GETDATE()) AND GETDATE() GROUP BY nonprofit_id) AS last_month_donors ON nonprofit_ratings.nonprofit_id = last_month_donors.nonprofit_id GROUP BY nonprofit_id;"}
{"input": "\ud3c9\uc810\uc774 5\uc810 \ubbf8\ub9cc\uc778 \uc694\ub9ac\ub97c \uc81c\uc678\ud55c \ube44\uac74 \uc694\ub9ac\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dish_ratings (id INT, dish_name TEXT, rating INT);", "output": "SELECT AVG(rating) FROM dish_ratings WHERE dish_name IN (SELECT dish_name FROM dish_ratings GROUP BY dish_name HAVING COUNT(*) >= 5) AND dish_name IN (SELECT dish_name FROM menu_items WHERE is_vegan = TRUE);"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc544\ud55c\ub300\ub9bc\uc5d0\uc11c \uc0dd\uc0b0\ub41c \ucd1d \ubaa9\uc7ac\ub7c9\uc758 \ube44\uc728\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE forest_timber (id INT, region VARCHAR(20), year INT, volume FLOAT);", "output": "SELECT region, (SUM(volume) / (SELECT SUM(volume) FROM forest_timber WHERE year BETWEEN 2019 AND 2021) * 100) as pct_volume FROM forest_timber WHERE region = 'Boreal' AND year BETWEEN 2019 AND 2021 GROUP BY region;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc77c\ub9ac\ub178\uc774\uc8fc \uac01 \ub3c4\uc2dc\uc5d0\uc11c \uba87 \ubc88\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud68c\uc758\uac00 \uc5f4\ub838\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE community_policing_il (id INT, city VARCHAR(255), meeting_date DATE);", "output": "SELECT city, COUNT(*) as total_meetings FROM community_policing_il WHERE meeting_date BETWEEN '2021-07-01' AND '2021-12-31' GROUP BY city;"}
{"input": "\uc804 \uc138\uacc4 \ub3c4\uc2dc\ubcc4 \ucf58\uc11c\ud2b8 \uac1c\ucd5c \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE concerts (concert_id int, venue_id int, city varchar(255), timestamp datetime); INSERT INTO concerts (concert_id, venue_id, city, timestamp) VALUES (1, 789, 'New York', '2022-06-01 12:00:00');", "output": "SELECT city, COUNT(*) as concert_count FROM concerts WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' AND city IS NOT NULL GROUP BY city;"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc '\ub274\uc695' \ub610\ub294 '\ud50c\ub85c\ub9ac\ub2e4'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\ub97c \ubc1b\uc9c0 \ubabb\ud55c \uc870\uc9c1\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE donors (id INT, name TEXT, state TEXT); INSERT INTO donors (id, name, state) VALUES (1, 'John Doe', 'California'); CREATE TABLE donations (id INT, donor_id INT, org_id INT, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, org_id, donation_amount) VALUES (1, 1, 1, 100.00);", "output": "SELECT organizations.name FROM organizations WHERE organizations.id IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'California') AND organizations.id NOT IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state IN ('New York', 'Florida'));"}
{"input": " \uc608\uc0b0\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ud504\ub85c\uadf8\ub7a8\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO Programs (ProgramID, ProgramName, Budget) VALUES (1, 'Education', 15000.00), (2, 'Healthcare', 20000.00), (3, 'Environment', 10000.00), (4, 'Research', 25000.00), (5, 'Arts', 12000.00);", "output": "SELECT SUM(Budget) FROM (SELECT Budget FROM Programs ORDER BY Budget DESC LIMIT 2) subquery;"}
{"input": " '\ub4dc\ub7ec\uadf8\uc81c\uc774'\uc758 \ucd5c\uadfc 3\ub144\uac04 \ub9e4\ucd9c\uc740 \uc5b4\ub560\ub098\uc694?", "context": "CREATE TABLE sales_history_2(drug varchar(10), year int, revenue int); INSERT INTO sales_history_2(drug, year, revenue) VALUES('DrugJ', 2019, 5000), ('DrugJ', 2020, 6000), ('DrugJ', 2021, 7000);", "output": "SELECT year, revenue FROM sales_history_2 WHERE drug = 'DrugJ' ORDER BY year DESC"}
{"input": "Alex Schwartz'\uac00 \ub514\uc790\uc778\ud55c \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uc774\ub984\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Players_Games (player_id INT, game_id INT); CREATE TABLE Games (id INT, name VARCHAR(50), designer VARCHAR(50)); INSERT INTO Players_Games (player_id, game_id) VALUES (1, 1), (2, 2), (3, 3); INSERT INTO Games (id, name, designer) VALUES (1, 'Beat Saber', 'Jan Kozlovsky'), (2, 'Job Simulator', 'Alex Schwartz'), (3, 'Superhot VR', 'Tomasz Kaczmarczyk');", "output": "SELECT Players.name FROM Players_Games JOIN Players ON Players_Games.player_id = Players.id JOIN Games ON Players_Games.game_id = Games.id WHERE Games.designer = 'Alex Schwartz';"}
{"input": " \uc778\uad6c\uac00 1\uc5b5 \uba85\uc774 \ub118\ub294 \uad6d\uac00\uc758 \uacbd\uc6b0 \uac01 \ubcd1\uacfc\uc758 \ucd5c\uc18c \uad70\uc778 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE populations (id INT, country_id INT, population INT); CREATE TABLE military_personnel (id INT, country_id INT, military_branch_id INT, number INT);", "output": "SELECT m.name as branch, MIN(mp.number) as min_personnel FROM populations p JOIN military_personnel mp ON p.country_id = mp.country_id JOIN military_branch m ON mp.military_branch_id = m.id WHERE p.population > 100000000 GROUP BY mp.military_branch_id;"}
{"input": " \uac01 \ud654\ud559\ubb3c\uc9c8 \uc720\ud615\uc5d0 \ub300\ud55c \uc548\uc804 \uc0ac\uace0 \uc218\ub97c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\uace0\ubd80\ud130 \uac00\uc7a5 \uc801\uc740 \uc0ac\uace0 \uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE safety_incidents (chemical_type VARCHAR(255), incident_date DATE); INSERT INTO safety_incidents (chemical_type, incident_date) VALUES ('Type A', '2020-01-05'), ('Type A', '2020-03-12'), ('Type B', '2020-02-18'), ('Type C', '2020-01-02'), ('Type C', '2020-04-20'), ('Type D', '2020-03-03');", "output": "SELECT chemical_type, COUNT(*) as incident_count FROM safety_incidents GROUP BY chemical_type ORDER BY incident_count DESC"}
{"input": "\uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uacbd\uae30\uc5d0 \ucc38\uc11d\ud588\uace0 \ud300\uacfc \uac19\uc740 \ub3c4\uc2dc\uc5d0 \uc0b4\uc558\ub358 \ud32c \uc218\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE fan_location (fan_id INT, city VARCHAR(50));", "output": "SELECT COUNT(DISTINCT fan_id) FROM fan_attendance JOIN fan_location ON fan_attendance.fan_id = fan_location.fan_id JOIN team_data ON fan_location.city = team_data.city WHERE fan_attendance.game_date >= CURDATE() - INTERVAL 60 DAY;"}
{"input": " \ubbf8\uad6d \ud56d\uad6c\ub97c \ubc29\ubb38\ud55c \ubaa8\ub4e0 \uc120\ubc15\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE ships (id INT, name VARCHAR(50)); CREATE TABLE ports (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE visits (ship_id INT, port_id INT, visit_date DATE); INSERT INTO ships (id, name) VALUES (1, 'Sealand Pride'), (2, 'Cosco Hope'), (3, 'MSC Anna'), (4, 'Ever Given'), (5, 'HMM Algeciras'); INSERT INTO ports (id, name, country) VALUES (1, 'Los Angeles', 'USA'), (2, 'Singapore', 'Singapore'), (3, 'Rotterdam', 'Netherlands'), (4, 'Busan', 'South Korea'), (5, 'Hamburg', 'Germany'); INSERT INTO visits (ship_id, port_id, visit_date) VALUES (1, 1, '2020-01-01'), (1, 2, '2020-02-01'), (2, 3, '2019-01-15'), (3, 1, '2020-03-01'), (4, 4, '2020-04-01'), (5, 5, '2020-05-01');", "output": "SELECT ships.name FROM ships INNER JOIN visits ON ships.id = visits.ship_id INNER JOIN ports ON visits.port_id = ports.id WHERE ports.country = 'USA';"}
{"input": " 2022\ub144 \uae30\uc0ac \uc218\uc640 \uae30\uc0ac\uc758 \uc5b8\uc5b4\ubcc4 \ucd1d \ub2e8\uc5b4\ub97c \ub098\uc5f4", "context": "CREATE TABLE articles (id INT, title VARCHAR(100), language VARCHAR(50), word_count INT, publication_date DATE); INSERT INTO articles (id, title, language, word_count, publication_date) VALUES (1, 'Article1', 'English', 500, '2022-01-01'), (2, 'Article2', 'Spanish', 350, '2022-02-01'), (3, 'Article3', 'French', 400, '2022-03-01');", "output": "SELECT language, SUM(word_count) as total_words FROM articles WHERE publication_date >= '2022-01-01' AND publication_date < '2023-01-01' GROUP BY language;"}
{"input": " \ucf00\ub0d0\uc5d0\uc11c ID 10\uc778 \uace0\uac1d\uc758 \uc7ac\uc815 \ub2a5\ub825 \uc810\uc218\ub97c \uc5b4\ub5bb\uac8c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\ub098\uc694?", "context": "CREATE TABLE financial_capability (client_id INT, country VARCHAR(50), score INT); INSERT INTO financial_capability (client_id, country, score) VALUES (10, 'Kenya', 7);", "output": "WITH client_score AS (UPDATE financial_capability SET score = 8 WHERE client_id = 10 AND country = 'Kenya') SELECT score FROM client_score;"}
{"input": " \ub3c4\uc2dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c '\ub3c4\uc2dc' \uc2a4\ud0a4\ub9c8\uc5d0 \uc788\ub294 \uac74\ubb3c\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE urban.buildings (city VARCHAR(20), co2_emission INT);", "output": "SELECT city, AVG(co2_emission) FROM urban.buildings GROUP BY city;"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uad00\ub9ac \uc911\uc778 \ub514\uc9c0\ud138 \uc790\uc0b0 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE digital_assets (id INT, name VARCHAR(50), country VARCHAR(10), value INT); INSERT INTO digital_assets (id, name, country, value) VALUES (1, 'Asset1', 'Germany', 1000), (2, 'Asset2', 'France', 2000), (3, 'Asset3', 'Italy', 3000);", "output": "SELECT country, COUNT(*) as num_assets, SUM(value) as total_value, RANK() OVER (ORDER BY SUM(value) DESC) as rank FROM digital_assets WHERE country IN ('Germany', 'France', 'Italy') GROUP BY country;"}
{"input": " \uc0dd\uc0b0\ub7c9\ubcc4\ub85c \ud558\uc704 2\uac1c \uc2dc\uc124\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uace0\uc720\ud55c \ud654\ud559\ubb3c\uc9c8 \uc720\ud615\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE facility_production (name VARCHAR(50), product VARCHAR(20), quantity INT); INSERT INTO facility_production VALUES ('facility C', 'chemical F', 150); INSERT INTO facility_production VALUES ('facility D', 'chemical G', 180);", "output": "SELECT DISTINCT product FROM (SELECT facility, product, ROW_NUMBER() OVER (PARTITION BY facility ORDER BY quantity DESC) AS rn FROM facility_production) tmp WHERE rn > 2;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uce90\ub098\ub2e4\uc5d0 \uad70\uc0ac \uc7a5\ube44\ub97c \uacf5\uae09\ud55c \ucd5c\uace0 \uacf5\uae09\uc5c5\uccb4\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Military_Equipment_Sales(sale_id INT, sale_date DATE, equipment_type VARCHAR(50), supplier VARCHAR(50), country VARCHAR(50), sale_value DECIMAL(10,2));", "output": "SELECT supplier, MAX(sale_value) FROM Military_Equipment_Sales WHERE country = 'Canada' AND sale_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY supplier ORDER BY MAX(sale_value) DESC LIMIT 1;"}
{"input": " 2018\ub144 \uc774\uc804 \ud615\uc0ac \uc0ac\ubc95 \uc2dc\uc2a4\ud15c\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE public.criminal_justice (id serial PRIMARY KEY, name text, type text, budget integer, year integer); INSERT INTO public.criminal_justice (name, type, budget, year) VALUES ('Prison System', 'Corrections', 85000000, 2020), ('Police Department', 'Law Enforcement', 150000000, 2018);", "output": "SELECT name, type, budget, year, (SELECT SUM(budget) FROM public.criminal_justice cj2 WHERE cj2.year < cj.year AND cj2.id <> cj.id) as total_budget_before FROM public.criminal_justice cj WHERE year < 2018;"}
{"input": " \uc77c\ubcf8\uacfc \ud55c\uad6d \ucc38\uac00\uc790\ub4e4\uc774 \ucc38\uc11d\ud55c \ub304\uc2a4 \uc6cc\ud06c\uc20d\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE DanceWorkshops (id INT, participant_name VARCHAR(50), country VARCHAR(50), workshop_date DATE); INSERT INTO DanceWorkshops (id, participant_name, country, workshop_date) VALUES (1, 'Hana', 'Japan', '2022-09-01'), (2, 'Bomi', 'South Korea', '2022-09-05'), (3, 'Kenta', 'Japan', '2022-09-03'), (4, 'Minji', 'South Korea', '2022-09-07');", "output": "SELECT SUM(total) FROM (SELECT COUNT(*) AS total FROM DanceWorkshops WHERE country IN ('Japan', 'South Korea') GROUP BY country) AS subquery;"}
{"input": " 1\ub144\uc5d0 \ubc1c\ud45c\ub418\ub294 \ucd5c\ub300 \uace1 \uc218\ub294 \uba87 \uace1\uc785\ub2c8\uae4c?", "context": "CREATE TABLE releases (id INT, song_id INT, release_year INT); INSERT INTO releases (id, song_id, release_year) VALUES (1, 1, 1999), (2, 2, 2000), (3, 3, 2000), (4, 4, 2001), (5, 5, 2001), (6, 6, 2002);", "output": "SELECT MAX(release_year_count) FROM (SELECT release_year, COUNT(*) AS release_year_count FROM releases GROUP BY release_year) AS subquery;"}
{"input": " 2022\ub144 3\uc6d4\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ud328\ud0a4\uc9c0\uac00 \ubc30\uc1a1\ub41c \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE packages (id INT, warehouse_id INT, weight FLOAT); INSERT INTO packages (id, warehouse_id, weight) VALUES (1, 1, 50.5), (2, 1, 45.3), (3, 2, 60.1), (4, 2, 70.0), (5, 3, 30.2);", "output": "SELECT warehouses.city, COUNT(*) as num_shipments FROM shipments JOIN packages ON shipments.id = packages.id JOIN warehouses ON shipments.warehouse_id = warehouses.id WHERE sent_date >= '2022-03-01' AND sent_date < '2022-04-01' GROUP BY warehouses.city ORDER BY num_shipments DESC LIMIT 3;"}
{"input": " \ud0c4\uc18c \uaca9\ub9ac \uc218\uc900\uc774 \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \uc11c\uc2dd\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE habitat (id INT, name VARCHAR(255), carbon_sequestration FLOAT); INSERT INTO habitat (id, name, carbon_sequestration) VALUES (1, 'Habitat1', 123.45); INSERT INTO habitat (id, name, carbon_sequestration) VALUES (2, 'Habitat2', 234.56); CREATE TABLE region (id INT, name VARCHAR(255)); INSERT INTO region (id, name) VALUES (1, 'Region1'); INSERT INTO region (id, name) VALUES (2, 'Region2');", "output": "SELECT h.name, h.carbon_sequestration  FROM habitat h  WHERE h.carbon_sequestration > (SELECT AVG(h2.carbon_sequestration) FROM habitat h2);"}
{"input": " \ud559\uacfc\ubcc4 \ud3c9\uade0 \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(255), department_id INT); CREATE TABLE publication (id INT, faculty_id INT, type VARCHAR(255)); INSERT INTO faculty (id, name, department_id) VALUES (1, 'John Doe', 1), (2, 'Jane Smith', 1), (3, 'Bob Johnson', 2); INSERT INTO publication (id, faculty_id, type) VALUES (1, 1, 'Journal Article'), (2, 1, 'Conference Paper'), (3, 2, 'Book Chapter'), (4, 3, 'Journal Article');", "output": "SELECT department.name, AVG(COUNT(publication.id)) as avg_num_publications FROM department LEFT JOIN faculty ON department.id = faculty.department_id LEFT JOIN publication ON faculty.id = publication.faculty_id GROUP BY department.name;"}
{"input": " \uac01 \ubc1c\uad74 \ud604\uc7a5\uc5d0\uc11c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc720\ubb3c \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtifactTypes (TypeID INT, ArtifactID INT, ArtifactType TEXT); INSERT INTO ArtifactTypes (TypeID, ArtifactID, ArtifactType) VALUES (1, 1, 'Pottery'); INSERT INTO ArtifactTypes (TypeID, ArtifactID, ArtifactType) VALUES (2, 2, 'Jewelry'); INSERT INTO ArtifactTypes (TypeID, ArtifactID, ArtifactType) VALUES (3, 3, 'Furniture'); INSERT INTO ArtifactTypes (TypeID, ArtifactID, ArtifactType) VALUES (4, 4, 'Statues');", "output": "SELECT e.SiteName, t.ArtifactType, COUNT(*) AS Count FROM ExcavationSites e JOIN ArtifactAnalysis a ON e.SiteID = a.SiteID JOIN ArtifactTypes t ON a.ArtifactID = t.ArtifactID GROUP BY e.SiteName, t.ArtifactType;"}
{"input": " 2021\ub144 2\uc6d4 '\uadf8\ub9b0 \ub77c\uc778' \ud3c9\uade0 \uc6b4\uc784\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE fares (route_name VARCHAR(20), fare_date DATE, fare FLOAT); INSERT INTO fares (route_name, fare_date, fare) VALUES ('Green Line', '2021-02-01', 1.75), ('Red Line', '2021-02-02', 2.50), ('Green Line', '2021-02-03', 1.75), ('Green Line', '2021-02-04', 1.85), ('Blue Line', '2021-02-05', 3.25);", "output": "SELECT AVG(fare) FROM fares WHERE route_name = 'Green Line' AND fare_date BETWEEN '2021-02-01' AND '2021-02-28';"}
{"input": " \uac01 \ub9e4\uc7a5\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc8fc\ubb38\ub418\ub294 \ud488\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales_data_3 (sale_id INT, location_id INT, item_id INT, quantity_sold INT, sale_date DATE); INSERT INTO sales_data_3 (sale_id, location_id, item_id, quantity_sold, sale_date) VALUES (1, 1, 1, 50, '2021-05-01'), (2, 2, 2, 90, '2021-05-02'), (3, 1, 2, 80, '2021-05-03');", "output": "SELECT location_id, item_id, SUM(quantity_sold) as total_sold FROM sales_data_3 GROUP BY location_id, item_id ORDER BY location_id, total_sold DESC;"}
{"input": " \ub098\uc774\uc9c0\ub9ac\uc544 \uac01 \uc8fc\uc758 \uc18c\uaddc\ubaa8 \uc790\uc791\ub18d\uc774 \uc0dd\uc0b0\ud55c \ub18d\uc791\ubb3c\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc774\uba70, \uc774\ub4e4\uc774 \uc804\uccb4 \ub18d\uc5c5 \uc0dd\uc0b0\ub7c9\uc5d0\uc11c \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE states (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO states (id, name, country) VALUES (1, 'Abia', 'Nigeria'); CREATE TABLE smallholder_farmers (id INT, crop_value FLOAT, state_id INT); INSERT INTO smallholder_farmers (id, crop_value, state_id) VALUES (1, 10000.0, 1); CREATE TABLE total_agricultural_production (state_id INT, total_production FLOAT); INSERT INTO total_agricultural_production (state_id, total_production) VALUES (1, 50000.0);", "output": "SELECT s.name, SUM(sf.crop_value) as total_value, (SUM(sf.crop_value) / tap.total_production) * 100 as percentage FROM smallholder_farmers sf INNER JOIN states s ON sf.state_id = s.id INNER JOIN total_agricultural_production tap ON sf.state_id = tap.state_id GROUP BY s.name;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ud3c9\ud654\uc720\uc9c0 \ud65c\ub3d9\uc5d0 \ub300\ud55c \ucd1d \uc9c0\ucd9c\uc561\uacfc \uc9c0\ucd9c \ub3d9\ud5a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PeacekeepingOperations (ID INT, Country TEXT, Spending DECIMAL(10, 2), Year INT); INSERT INTO PeacekeepingOperations VALUES (1, 'China', 1500000, 2020); CREATE VIEW AsiaPacific AS SELECT Country FROM PeacekeepingOperations WHERE Country IN ('China', 'Japan', 'India', 'Australia', 'South Korea');", "output": "SELECT m.Country, m.Year, m.Spending, m.Spending - ISNULL(p.Spending, 0) as SpendingChange FROM PeacekeepingOperations m LEFT JOIN PeacekeepingOperations p ON m.Country = p.Country AND YEAR(m.Year) = YEAR(p.Year) + 1 JOIN AsiaPacific ap ON m.Country = ap.Country WHERE m.Year BETWEEN DATEADD(year, -3, GETDATE()) AND GETDATE();"}
{"input": " \ubbf8\uad6d\uacfc \ub7ec\uc2dc\uc544\uc5d0\uc11c \ubc1c\uc0ac\ud588\uc9c0\ub9cc \ub458 \ub2e4\uc5d0\uc11c \ubc1c\uc0ac\ud55c \uc704\uc131\uc740 \ubaa8\ub450 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE USLaunchedSatellites (SatelliteName TEXT, Country TEXT);CREATE TABLE RussiaLaunchedSatellites (SatelliteName TEXT, Country TEXT);", "output": "(SELECT SatelliteName FROM USLaunchedSatellites WHERE Country = 'United States' EXCEPT SELECT SatelliteName FROM RussiaLaunchedSatellites WHERE Country = 'United States') UNION (SELECT SatelliteName FROM RussiaLaunchedSatellites WHERE Country = 'Russia' EXCEPT SELECT SatelliteName FROM USLaunchedSatellites WHERE Country = 'Russia');"}
{"input": " \uc9c0\uc5ed \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 ID\ub97c \uae30\uc900\uc73c\ub85c \uac01 \uc9c0\uc5ed \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc11c\ube44\uc2a4 \uc9c0\uc5ed\uc5d0\uc11c \ud751\uc778 \ub610\ub294 \uc544\ud504\ub9ac\uce74\uacc4 \ubbf8\uad6d\uc778\uc73c\ub85c \ud655\uc778\ub41c \ud658\uc790\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityHealthWorker (ID INT, Name TEXT, ServiceArea TEXT); INSERT INTO CommunityHealthWorker (ID, Name, ServiceArea) VALUES (1, 'Ebony Brown', 'Harlem'); INSERT INTO CommunityHealthWorker (ID, Name, ServiceArea) VALUES (2, 'Pablo Rodriguez', 'Bronx'); CREATE TABLE PatientMentalHealth (PatientID INT, CommunityHealthWorkerID INT, Score INT, Race TEXT);", "output": "SELECT CommunityHealthWorkerID, AVG(Score) as AvgScore FROM (SELECT PatientID, CommunityHealthWorkerID, Score, ROW_NUMBER() OVER (PARTITION BY CommunityHealthWorkerID ORDER BY PatientID) as rn FROM PatientMentalHealth WHERE Race = 'Black or African American') tmp WHERE rn = 1 GROUP BY CommunityHealthWorkerID ORDER BY CommunityHealthWorkerID;"}
{"input": " AI \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc870\uc9c1\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc758 \uc870\uc9c1\uc774 AI \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc9c0\ucd9c\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_projects_region (organization_name TEXT, region TEXT); INSERT INTO ai_projects_region (organization_name, region) VALUES ('TechCorp', 'Asia-Pacific'), ('InnoTech', 'North America'), ('GreenAI', 'Europe'), ('AIforGood', 'Africa'), ('Tech4Good', 'North America'); CREATE TABLE ai_projects_budget (organization_name TEXT, budget INTEGER); INSERT INTO ai_projects_budget (organization_name, budget) VALUES ('TechCorp', 1500000), ('InnoTech', 2000000), ('GreenAI', 1000000), ('AIforGood', 1200000), ('Tech4Good', 1800000);", "output": "SELECT SUM(budget) FROM ai_projects_budget INNER JOIN ai_projects_region ON ai_projects_budget.organization_name = ai_projects_region.organization_name WHERE region IN (SELECT region FROM (SELECT region, COUNT(*) as organization_count FROM ai_projects_region GROUP BY region ORDER BY organization_count DESC LIMIT 3) subquery);"}
{"input": "\uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uac01 \ub3d9\ub124\uc5d0\uc11c \uc720\ud615\ubcc4 \ubc94\uc8c4\uac00 \uba87 \uac74\uc774\ub098 \uc2e0\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Neighborhoods (NeighborhoodID INT, NeighborhoodName VARCHAR(255)); CREATE TABLE CrimeTypes (CrimeTypeID INT, CrimeType VARCHAR(255)); CREATE TABLE Crimes (CrimeID INT, CrimeTypeID INT, NeighborhoodID INT, CrimeDate DATE);", "output": "SELECT n.NeighborhoodName, ct.CrimeType, COUNT(c.CrimeID) as CrimesCount FROM Crimes c JOIN Neighborhoods n ON c.NeighborhoodID = n.NeighborhoodID JOIN CrimeTypes ct ON c.CrimeTypeID = ct.CrimeTypeID WHERE c.CrimeDate >= DATEADD(month, -1, GETDATE()) GROUP BY n.NeighborhoodName, ct.CrimeType;"}
{"input": " 2020\ub144 \uad6d\uac00\ubcc4 \ubaa8\ub4e0 \uad11\ubb3c\uc5d0 \ub300\ud55c \ucd1d \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EnvironmentalImpact (country VARCHAR(50), year INT, mineral VARCHAR(50), score INT); INSERT INTO EnvironmentalImpact (country, year, mineral, score) VALUES ('Canada', 2020, 'Gold', 50), ('Mexico', 2020, 'Silver', 60), ('Brazil', 2020, 'Iron', 70);", "output": "SELECT context.country, SUM(context.score) as total_score FROM context WHERE context.year = 2020 GROUP BY context.country;"}
{"input": " 2020\ub144 \ud3c9\uade0 \uc9c0\uc5ed\uc0ac\ud68c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8 \ucc38\uc11d\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_education (attendee_id INT, program VARCHAR(50), year INT, score INT);", "output": "SELECT AVG(score) FROM community_education WHERE year = 2020 AND program = 'Wildlife Conservation';"}
{"input": " \ubcf4\ud638\uad6c\uc5ed\uc5d0\ub294 \uac01 \uc11c\uc2dd\uc9c0 \uc720\ud615\ubcc4\ub85c \uba87 \ub9c8\ub9ac\uc758 \ub3d9\ubb3c\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE animals (id INT, name VARCHAR(30), habitat VARCHAR(20)); CREATE VIEW animal_counts AS SELECT habitat, COUNT(*) FROM animals GROUP BY habitat;", "output": "SELECT habitat, COUNT(*) FROM animals GROUP BY habitat;"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc\uc758 \ub370\uc774\ud130\ub97c \uae30\uc900\uc73c\ub85c \ubcfc \ub54c, \uac01 \ud574\uc591 \uc720\uc5ed\uc5d0\uc11c \uad00\ucc30\ub41c \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?\"", "context": "CREATE TABLE marine_species_observations (species_name VARCHAR(255), ocean_basin VARCHAR(255), last_observed_date DATE); INSERT INTO marine_species_observations (species_name, ocean_basin, last_observed_date) VALUES ('Great White Shark', 'Atlantic Basin', '2021-08-01'), ('Blue Whale', 'Pacific Basin', '2021-07-15'), ('Green Sea Turtle', 'Indian Basin', '2021-06-20');", "output": "SELECT ocean_basin, COUNT(DISTINCT species_name) as species_count FROM marine_species_observations WHERE last_observed_date = (SELECT MAX(last_observed_date) FROM marine_species_observations) GROUP BY ocean_basin;"}
{"input": " \ub2e8\ub3c5\uc8fc\ud0dd\uacfc \uc544\ud30c\ud2b8\uc758 \ud3c9\uade0 \uc7ac\uc0b0\uc138 \ucc28\uc774\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE properties (property_id INT, property_type VARCHAR(50), property_tax FLOAT);", "output": "SELECT property_type, AVG(property_tax) as avg_property_tax FROM properties GROUP BY property_type; SELECT (t1.avg_property_tax - t2.avg_property_tax) as tax_difference FROM (SELECT AVG(property_tax) as avg_property_tax FROM properties WHERE property_type = 'single-family') t1, (SELECT AVG(property_tax) as avg_property_tax FROM properties WHERE property_type = 'apartment') t2;"}
{"input": " \uad50\uc721\uc5d0 \ub300\ud55c \uc608\uc0b0 \ud560\ub2f9\uc774 \uac00\uc7a5 \ub192\uc740 \uc8fc\uc640 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE states (state_id INT PRIMARY KEY, state_name TEXT, budget_allocation FLOAT);CREATE TABLE education_budget (state_id INT, budget FLOAT);", "output": "SELECT s.state_name, AVG(eb.budget) as avg_budget FROM states s INNER JOIN education_budget eb ON s.state_id = eb.state_id GROUP BY s.state_name ORDER BY avg_budget DESC LIMIT 1;SELECT s.state_name, AVG(eb.budget) as avg_budget FROM states s INNER JOIN education_budget eb ON s.state_id = eb.state_id GROUP BY s.state_name ORDER BY avg_budget ASC LIMIT 1;"}
{"input": " \uac01 \uc232\uc5d0\uc11c \uc218\ud655\ub41c \ubaa9\uc7ac\uc758 \ucd1d\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE trees (id INT, species VARCHAR(50), volume DECIMAL(10,2)); INSERT INTO trees (id, species, volume) VALUES (1, 'Oak', 12.50), (2, 'Maple', 15.00), (3, 'Pine', 20.00), (4, 'Spruce', 18.50);", "output": "SELECT f.name, SUM(h.volume) FROM forests f JOIN harvests h ON f.id = h.forest_id JOIN trees t ON h.tree_id = t.id GROUP BY f.name;"}
{"input": " \uc544\uc2dc\uc544 \ub18d\ucd0c \uc758\ub8cc \uc2dc\uc124\uc758 \uad6c\uae09\ucc28 \uc218\ub294 \ucd1d \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE healthcare_facilities (facility_id INT, region VARCHAR(10), num_of_ambulances INT); INSERT INTO healthcare_facilities (facility_id, region, num_of_ambulances) VALUES (1, 'Asia', 5), (2, 'Africa', 3), (3, 'Asia', 7), (4, 'Europe', 4);", "output": "SELECT SUM(num_of_ambulances) FROM healthcare_facilities WHERE region = 'Asia';"}
{"input": " \ubd80\uc11c\ubcc4 \ub2e4\uc591\uc131 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Training (TrainingID INT, EmployeeID INT, TrainingType VARCHAR(20), CompletionDate DATE); INSERT INTO Training (TrainingID, EmployeeID, TrainingType, CompletionDate) VALUES (1, 1, 'Diversity', '2021-01-05'), (2, 2, 'Diversity', '2021-02-10'), (3, 3, 'Safety', '2020-12-15');", "output": "SELECT Department, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees e JOIN Training t ON e.EmployeeID = t.EmployeeID WHERE TrainingType = 'Diversity') AS Percentage FROM Employees e JOIN Training t ON e.EmployeeID = t.EmployeeID WHERE TrainingType = 'Diversity' GROUP BY Department;"}
{"input": "\uc9c0\ub09c 5\ub144 \ub3d9\uc548 \ub300\ub959 \uc804\uccb4\uc5d0 \uac78\uccd0 \uc811\uadfc\uc131, \uad50\uc721 \ubc0f \uace0\uc6a9\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc815\ucc45 \uc639\ud638 \ub178\ub825\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE policy_advocacy (id INT, year INT, focus VARCHAR(255), continent VARCHAR(255)); INSERT INTO policy_advocacy (id, year, focus, continent) VALUES (1, 2017, 'Accessibility', 'North America'), (2, 2018, 'Education', 'Europe'), (3, 2019, 'Employment', 'Asia'), (4, 2020, 'Accessibility', 'Africa'), (5, 2021, 'Education', 'North America'), (6, 2022, 'Employment', 'Europe');", "output": "SELECT focus, continent, COUNT(id) as total_efforts FROM policy_advocacy WHERE year BETWEEN 2017 AND 2022 AND focus IN ('Accessibility', 'Education', 'Employment') GROUP BY focus, continent;"}
{"input": " '\ubc1c\ub85c\ub780\ud2b8'\uc5d0\uc11c \ud1a0\ub108\uba3c\ud2b8 \uc6b0\uc2b9 \ud69f\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 e\uc2a4\ud3ec\uce20 \uc120\uc218\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerName VARCHAR(255), TournamentWins INT); INSERT INTO Players (PlayerName, TournamentWins) VALUES ('PlayerA', 10), ('PlayerB', 12), ('PlayerC', 15), ('PlayerD', 7), ('PlayerE', 11);", "output": "SELECT PlayerName FROM Players WHERE TournamentWins = (SELECT MAX(TournamentWins) FROM Players);"}
{"input": " '\ub274\uc695'\uc5d0\uc11c 'A' \ub4f1\uae09\uc744 \ubc1b\uc740 \ub808\uc2a4\ud1a0\ub791\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uac80\uc0ac \ubaa9\ub85d\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE city (id INT, name VARCHAR(255)); INSERT INTO city (id, name) VALUES (1, 'New York'); CREATE TABLE restaurant_inspections (id INT, restaurant_id INT, inspection_date DATE, rating VARCHAR(1));", "output": "SELECT r.name, i.inspection_date, i.rating FROM restaurant_inspections i JOIN restaurant r ON i.restaurant_id = r.id JOIN city c ON r.city_id = c.id WHERE c.name = 'New York' AND i.rating = 'A';"}
{"input": " \uc6b0\uc8fc \uc784\ubb34\uc5d0 \ucc38\uc5ec\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc \ube44\ud589\uc0ac\uc640 \uadf8\ub4e4\uc758 \uc758\ub8cc \uae30\ub85d\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Astronauts (id INT, name VARCHAR(255), age INT); CREATE TABLE SpaceMissions (id INT, astronaut_id INT, mission VARCHAR(255)); CREATE TABLE MedicalRecords (id INT, astronaut_id INT, medical_condition VARCHAR(255));", "output": "SELECT Astronauts.name, SpaceMissions.mission, MedicalRecords.medical_condition FROM Astronauts INNER JOIN SpaceMissions ON Astronauts.id = SpaceMissions.astronaut_id INNER JOIN MedicalRecords ON Astronauts.id = MedicalRecords.astronaut_id;"}
{"input": " \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \uc81c\ud488\uacfc \uc548\uc804 \uae30\ub85d\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE SafetyRecord (ProductID INT, SafetyTestDate DATE, Result VARCHAR(255)); INSERT INTO SafetyRecord (ProductID, SafetyTestDate, Result) VALUES (8, '2022-06-01', 'Pass'), (8, '2022-07-01', 'Pass'), (9, '2022-06-05', 'Pass'); CREATE TABLE Product (ProductID INT, ProductName VARCHAR(255), Price DECIMAL(5,2)); INSERT INTO Product (ProductID, ProductName, Price) VALUES (8, 'Foundation', 29.99), (9, 'Highlighter', 24.99); CREATE TABLE CrueltyFree (ProductID INT, CertificationDate DATE); INSERT INTO CrueltyFree (ProductID, CertificationDate) VALUES (8, '2022-01-15'), (9, '2022-02-20');", "output": "SELECT P.ProductName, SR.Result FROM CrueltyFree CF INNER JOIN Product P ON CF.ProductID = P.ProductID INNER JOIN SafetyRecord SR ON P.ProductID = SR.ProductID;"}
{"input": " 2021\ub144 '\uc720\ub7fd' \uc9c0\uc5ed\uc5d0\uc11c \ub2e8\uc77c \uad6d\uac00\uac00 \uae30\uc5ec\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0 \uc791\uc804\uc758 \ucd5c\ub300 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_assistance (country VARCHAR(50), region VARCHAR(50), year INT, operations INT); INSERT INTO humanitarian_assistance (country, region, year, operations) VALUES ('France', 'Europe', 2021, 40), ('Germany', 'Europe', 2021, 45), ('UK', 'Europe', 2021, 50);", "output": "SELECT region, MAX(operations) as max_operations FROM humanitarian_assistance WHERE region = 'Europe' AND year = 2021 GROUP BY region;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \ud504\ub85c\uc81d\ud2b8 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE climate_projects_north_america (id INT, country VARCHAR(50), sector VARCHAR(50), funding FLOAT); INSERT INTO climate_projects_north_america (id, country, sector, funding) VALUES (1, 'United States', 'Climate Mitigation', 6000000); INSERT INTO climate_projects_north_america (id, country, sector, funding) VALUES (2, 'United States', 'Climate Communication', 2000000); INSERT INTO climate_projects_north_america (id, country, sector, funding) VALUES (3, 'Canada', 'Climate Mitigation', 4000000); INSERT INTO climate_projects_north_america (id, country, sector, funding) VALUES (4, 'Canada', 'Climate Communication', 1500000);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM climate_projects_north_america) AS percentage FROM climate_projects_north_america WHERE sector = 'Climate Communication';"}
{"input": " 'city_transport' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ud3c9\uade0 \ube48\ub3c4\ubcf4\ub2e4 \ube48\ub3c4\uac00 \ub0ae\uc740 \uc6b4\uc1a1 \ubc29\ubc95\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE transport (id INT, method VARCHAR(50), frequency INT); INSERT INTO transport (id, method, frequency) VALUES (1, 'Bicycle', 1500), (2, 'Private Car', 8000), (3, 'Public Bus', 4000), (4, 'Subway', 3500), (5, 'Motorcycle', 600);", "output": "SELECT method FROM transport WHERE frequency < (SELECT AVG(frequency) FROM transport);"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \ub18d\uc0dd\ud0dc\ud559 \uc2dc\uc2a4\ud15c\uc774 \uc2dc\ud589\ub41c \uc9c0 \uba87 \ub144\uc774 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE agroecology_countries (country VARCHAR(255), years_implemented INT); INSERT INTO agroecology_countries (country, years_implemented) VALUES ('Country1', 12), ('Country2', 15), ('Country3', 8); CREATE VIEW agroecology_systems_view AS SELECT * FROM agroecology_countries WHERE years_implemented > 5;", "output": "SELECT country FROM agroecology_systems_view"}
{"input": " \ub300\ubc95\uc6d0\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc0ac\uac74\uc744 \ub2f4\ub2f9\ud55c \ubcc0\ud638\uc0ac TOP 3\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE cases (lawyer_name VARCHAR(20), court_type VARCHAR(20), num_cases INT); INSERT INTO cases (lawyer_name, court_type, num_cases) VALUES ('John Doe', 'Supreme Court', 200), ('Jane Smith', 'Supreme Court', 300), ('Jim Brown', 'Supreme Court', 400);", "output": "SELECT lawyer_name, SUM(num_cases) as total_cases FROM cases WHERE court_type = 'Supreme Court' GROUP BY lawyer_name ORDER BY total_cases DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, restaurant_id INT, sale_date DATE, revenue INT);", "output": "SELECT restaurant_id, SUM(revenue) FROM sales WHERE sale_date >= DATEADD(month, -1, GETDATE()) GROUP BY restaurant_id;"}
{"input": "3\uac1c \ubbf8\ub9cc\uc758 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud55c \uad50\uc721\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE educators(id INT, num_courses INT); INSERT INTO educators VALUES (1, 2), (2, 5), (3, 3), (4, 1), (5, 0);", "output": "SELECT COUNT(*) FROM educators WHERE num_courses < 3;"}
{"input": " \ube44\uac74 \uc694\ub9ac\uc758 \ud3c9\uade0 \uac00\uaca9\ubcf4\ub2e4 \ub192\uc740 \uac00\uaca9\uc758 \uc694\ub9ac\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE dishes (id INT, name TEXT, type TEXT, price DECIMAL); INSERT INTO dishes (id, name, type, price) VALUES (1, 'Quinoa Salad', 'Vegan', 12.99), (2, 'Chickpea Curry', 'Vegan', 10.99), (3, 'Beef Burger', 'Non-Vegan', 15.99);", "output": "SELECT name, price FROM dishes WHERE type = 'Vegan' AND price > (SELECT AVG(price) FROM dishes WHERE type = 'Vegan');"}
{"input": " \ud50c\ub85c\ub9ac\ub2e4 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uacbd\uc6b0 2021\ub144 1\uc6d4 1\uc77c \uc774\uc804\uc5d0 \ub9cc\ub8cc\ub41c \ubaa8\ub4e0 \ubcf4\ud5d8\uc744 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE policies (id INT, policyholder_id INT, policy_type TEXT, issue_date DATE, expiry_date DATE); INSERT INTO policies (id, policyholder_id, policy_type, issue_date, expiry_date) VALUES (1, 3, 'Life', '2021-01-01', '2022-01-01'), (2, 4, 'Health', '2021-02-01', '2022-02-01'), (3, 5, 'Auto', '2021-03-01', '2022-03-01'); CREATE TABLE policyholders (id INT, name TEXT, state TEXT, policy_type TEXT); INSERT INTO policyholders (id, name, state, policy_type) VALUES (3, 'Alex Brown', 'Florida', 'Life'), (4, 'Bob Johnson', 'California', 'Health'), (5, 'Claire Williams', 'Texas', 'Auto');", "output": "DELETE FROM policies WHERE policies.id IN (SELECT policies.id FROM policies JOIN policyholders ON policies.policyholder_id = policyholders.id WHERE policyholders.state = 'Florida' AND policies.expiry_date < '2021-01-01');"}
{"input": " \ucd5c\uadfc 1\ub144\uac04 \ubd80\ubb38\ubcc4 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sector_year_consumption (year INT, sector INT, consumption FLOAT, PRIMARY KEY(year, sector)); INSERT INTO sector_year_consumption (year, sector, consumption) VALUES (2015, 1, 15000), (2015, 2, 20000), (2015, 3, 30000), (2016, 1, 16000), (2016, 2, 22000), (2016, 3, 32000), (2017, 1, 17000), (2017, 2, 24000), (2017, 3, 34000);", "output": "SELECT syc.sector, SUM(syc.consumption) as total_consumption FROM sector_year_consumption syc JOIN (SELECT MAX(year) as most_recent_year FROM sector_year_consumption) max_year ON 1=1 WHERE syc.year = max_year.most_recent_year GROUP BY syc.sector;"}
{"input": "2018\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \uc544\ud504\ub9ac\uce74 \uc5f0\ud569\uc774 \uc2e4\uc2dc\ud55c \ud3c9\ud654 \uc720\uc9c0 \uc791\uc804 \ud69f\uc218\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PeacekeepingOperations (id INT, operation_name VARCHAR(255), operation_start_date DATE, operation_end_date DATE, organization VARCHAR(255));", "output": "SELECT COUNT(*) - LAG(COUNT(*)) OVER (PARTITION BY organization ORDER BY EXTRACT(YEAR FROM operation_start_date)) as change FROM PeacekeepingOperations WHERE organization = 'African Union' AND EXTRACT(YEAR FROM operation_start_date) IN (2018, 2019) GROUP BY organization;"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed \uc5ec\uc131 \ubcc0\ud638\uc0ac\uc758 \uc0ac\uac74 \uc218\uc640 \uc2b9\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Cases (CaseID INT, AttorneyID INT, CaseOutcome VARCHAR(50)); INSERT INTO Cases (CaseID, AttorneyID, CaseOutcome) VALUES (1, 1, 'Won'), (2, 1, 'Lost'), (3, 2, 'Won'), (4, 2, 'Won'), (5, 3, 'Lost'), (6, 3, 'Lost'), (7, 4, 'Won'), (8, 4, 'Lost'), (9, 5, 'Lost'), (10, 5, 'Won');   CREATE TABLE Attorneys (AttorneyID INT, AttorneyName VARCHAR(50), Gender VARCHAR(50)); INSERT INTO Attorneys (AttorneyID, AttorneyName, Gender) VALUES (1, 'Jane Doe', 'Female'), (2, 'John Smith', 'Male'), (3, 'Sara Connor', 'Female'), (4, 'David Kim', 'Male'), (5, 'Emily Johnson', 'Female');", "output": "SELECT a.AttorneyName, a.Gender, COUNT(c.CaseID) AS TotalCases, COUNT(c.CaseID) * 100.0 / SUM(COUNT(c.CaseID)) OVER (PARTITION BY a.Gender) AS WinRate FROM Attorneys a JOIN Cases c ON a.AttorneyID = c.AttorneyID WHERE a.Gender = 'Female' AND a.Region = 'West' GROUP BY a.AttorneyName, a.Gender;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ucd5c\uc18c \ud55c \ubc88 \uc774\uc0c1 \uac70\ub798\ub97c \ud55c \uac01 \uad6d\uac00\uc758 \ucd1d \uace0\uac1d \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), country VARCHAR(50), last_transaction_date DATE);", "output": "SELECT country, COUNT(*) as num_customers FROM customers c WHERE last_transaction_date >= (CURRENT_DATE - INTERVAL '1 year') GROUP BY country;"}
{"input": " \uc9c0\ub09c 7\uc77c \ub3d9\uc548 \uace0\uac1d \uc8fc\ubb38\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders(id INT, date DATE, quantity INT); INSERT INTO orders(id, date, quantity) VALUES (1, '2022-05-01', 3), (2, '2022-05-03', 2), (3, '2022-05-05', 5);", "output": "SELECT date, AVG(quantity) OVER (ORDER BY date ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as moving_average FROM orders WHERE date >= CURRENT_DATE - INTERVAL '7 days';"}
{"input": " \uae30\ubd80\uc790 'Juan Rodriguez'\uc758 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 $4000\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE donors (donor_id INT, donor_name TEXT, country TEXT, total_donation_amount FLOAT); INSERT INTO donors (donor_id, donor_name, country, total_donation_amount) VALUES (1, 'Juan Rodriguez', 'Mexico', 3000.00), (2, 'Maria Lopez', 'USA', 7000.00);", "output": "WITH updated_juan_rodriguez AS (UPDATE donors SET total_donation_amount = 4000.00 WHERE donor_name = 'Juan Rodriguez' AND country = 'Mexico' RETURNING *) SELECT * FROM updated_juan_rodriguez;"}
{"input": "2020\ub144\uacfc 2021\ub144 \uc804\uccb4 \uae30\uac04 \ub3d9\uc548 \uc6d0\uc790\uc7ac\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE expenses (expense_id INT, date DATE, category VARCHAR(20), amount FLOAT); INSERT INTO expenses (expense_id, date, category, amount) VALUES (1, '2021-01-01', 'textile', 2500), (2, '2021-05-15', 'tooling', 1500), (3, '2020-12-31', 'textile', 3000), (4, '2021-12-31', 'textile', 5000);", "output": "SELECT SUM(amount) FROM expenses WHERE date BETWEEN '2020-01-01' AND '2021-12-31' AND category = 'textile';"}
{"input": " \uacf5\uac1c\uad50\uc721\ud559 \uac15\uc88c\ub97c \uc218\uac15\ud55c \uc801\uc774 \uc5c6\ub294 \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, student_name VARCHAR(255)); INSERT INTO students VALUES (1, 'Student A'), (2, 'Student B'), (3, 'Student C'), (4, 'Student D'); CREATE TABLE student_courses (student_id INT, course_id INT); INSERT INTO student_courses VALUES (1, 1), (1, 2), (2, 1), (3, 2), (3, 3), (4, 1); CREATE TABLE open_pedagogy_courses (course_id INT, course_name VARCHAR(255)); INSERT INTO open_pedagogy_courses VALUES (1, 'Open Course 1'), (2, 'Open Course 2'), (3, 'Open Course 3');", "output": "SELECT COUNT(s.student_id) as no_open_pedagogy_courses FROM students s LEFT JOIN student_courses sc ON s.student_id = sc.student_id LEFT JOIN open_pedagogy_courses opc ON sc.course_id = opc.course_id WHERE opc.course_id IS NULL;"}
{"input": " 2000\ub144 \uc774\uc804\uc5d0 \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc \uae30\uad00\uacfc \uad00\ub828 \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Space_Agencies (Agency_ID INT, Agency VARCHAR(50)); INSERT INTO Space_Agencies (Agency_ID, Agency) VALUES (1, 'NASA'), (2, 'ESA'), (3, 'CNES'); CREATE TABLE Agency_Satellites (Agency VARCHAR(50), Satellite_Name VARCHAR(50), Launch_Date DATETIME); INSERT INTO Agency_Satellites (Agency, Satellite_Name, Launch_Date) VALUES ('NASA', 'Hubble Space Telescope', '1990-04-24'), ('ESA', 'XMM-Newton', '1999-12-10'), ('CNES', 'SPOT-1', '1986-02-22'); CREATE TABLE Astronauts (Astronaut_ID INT, Name VARCHAR(50), Gender VARCHAR(10), Age INT, Agency VARCHAR(50)); INSERT INTO Astronauts (Astronaut_ID, Name, Gender, Age, Agency) VALUES (2, 'Samantha Cristoforetti', 'Female', 45, 'ESA');", "output": "SELECT sa.Agency, a.Name, s.Satellite_Name FROM Space_Agencies sa INNER JOIN Agency_Satellites s ON sa.Agency = s.Agency INNER JOIN Astronauts a ON sa.Agency = a.Agency WHERE s.Launch_Date < '2000-01-01';"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \ud48d\ub825 \ubc1c\uc804 \ud504\ub85c\uc81d\ud2b8\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project_wind_canada (project_name TEXT, province TEXT); INSERT INTO project_wind_canada (project_name, province) VALUES ('Project A', 'Province A'), ('Project B', 'Province A'), ('Project C', 'Province B'), ('Project D', 'Province C'), ('Project E', 'Province D'), ('Project F', 'Province D');", "output": "SELECT province, COUNT(*) FROM project_wind_canada GROUP BY province ORDER BY COUNT(*) DESC;"}
{"input": " \uc9c0\ub09c \ud574 \uac00\uc7a5 \ub192\uc740 \uc218\ud655\ub7c9\uc744 \ubcf4\uc778 \uc0c1\uc704 5\uac1c \ud544\ub4dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE field_yield (id INT, field_id INT, yield INT, timestamp DATETIME);", "output": "SELECT field_id, SUM(yield) as total_yield FROM field_yield WHERE timestamp >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 YEAR) GROUP BY field_id ORDER BY total_yield DESC LIMIT 5;"}
{"input": " \ube44\uc724\ub9ac\uc801\uc778 \uacf5\uae09\uc790\ub85c\ubd80\ud130 \uc81c\ud488\uc744 \uad6c\ub9e4\ud55c \uc18c\ube44\uc790\uc758 \uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE consumers (consumer_id INT, consumer_name TEXT); CREATE TABLE purchases (purchase_id INT, consumer_id INT, supplier_id INT, product_id INT, quantity INT); CREATE TABLE suppliers (supplier_id INT, supplier_name TEXT, labor_practice TEXT);", "output": "SELECT COUNT(DISTINCT consumers.consumer_id) FROM consumers JOIN purchases ON consumers.consumer_id = purchases.consumer_id JOIN suppliers ON purchases.supplier_id = suppliers.supplier_id WHERE suppliers.labor_practice = 'Unethical';"}
{"input": " \uc7ac\ud65c\uc6a9\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Initiatives (InitiativeID INT, InitiativeName VARCHAR(50), RecyclingRate FLOAT); INSERT INTO Initiatives VALUES (1, 'Initiative1', 0.7), (2, 'Initiative2', 0.6), (3, 'Initiative3', 0.8), (4, 'Initiative4', 0.5);", "output": "SELECT InitiativeName, RecyclingRate FROM Initiatives WHERE RecyclingRate = (SELECT MAX(RecyclingRate) FROM Initiatives);"}
{"input": " \uc9c1\uc6d0\uc774 5\uba85 \uc774\uc0c1\uc778 \ubd80\uc11c\uc758 \uacbd\uc6b0 \ubd80\uc11c\ubcc4 \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (1, 'John', 'Doe', 'Mining and Quarry'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (2, 'Jane', 'Doe', 'Mining and Quarry'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (3, 'Mike', 'Smith', 'Environment'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (4, 'Lucy', 'Johnson', 'Environment'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (5, 'Emma', 'Williams', 'Safety'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (6, 'Oliver', 'Brown', 'Safety'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (7, 'Sophia', 'Davis', 'Safety');", "output": "SELECT Department, COUNT(*) as Total FROM Employees GROUP BY Department HAVING COUNT(*) > 5;"}
{"input": " \ubd81\ubbf8 \ud638\ud154\uc758 \uac00\uc0c1 \ud22c\uc5b4 \ucc38\uc5ec\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, country TEXT); INSERT INTO hotels (hotel_id, hotel_name, country) VALUES (1, 'Hotel A', 'USA'), (2, 'Hotel B', 'Canada'), (3, 'Hotel C', 'Mexico'), (4, 'Hotel D', 'Cuba'); CREATE TABLE virtual_tours (hotel_id INT, tour_name TEXT, views INT); INSERT INTO virtual_tours (hotel_id, tour_name, views) VALUES (1, 'Tour A', 100), (2, 'Tour B', 200), (3, 'Tour C', 300), (4, 'Tour D', 400), (5, 'Tour E', 500);", "output": "SELECT country, AVG(views / (SELECT SUM(views) FROM virtual_tours WHERE hotel_id = hotels.hotel_id) * 100) as engagement_rate FROM hotels INNER JOIN virtual_tours ON hotels.hotel_id = virtual_tours.hotel_id GROUP BY country;"}
{"input": " 18~24\uc138 \ud50c\ub808\uc774\uc5b4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uac00\uc0c1 \ud604\uc2e4 \uac8c\uc784\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE player (player_id INT, name VARCHAR(50), age INT, vr_game VARCHAR(50)); INSERT INTO player (player_id, name, age, vr_game) VALUES (1, 'Keisha Lee', 22, 'Beat Saber'); INSERT INTO player (player_id, name, age, vr_game) VALUES (2, 'Jordan Lee', 24, 'Superhot VR'); INSERT INTO player (player_id, name, age, vr_game) VALUES (3, 'Riley Nguyen', 19, 'Job Simulator');", "output": "SELECT vr_game, COUNT(*) FROM player WHERE age BETWEEN 18 AND 24 GROUP BY vr_game ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": "\uc9c0\ub09c\uc8fc \"\ucc44\uc2dd\" \ub2e4\uc774\uc5b4\ud2b8 \uadf8\ub8f9 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc12d\ucde8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_info (id INT, user_name TEXT, diet TEXT); INSERT INTO user_info (id, user_name, diet) VALUES (1, 'Alice', 'Vegetarian'), (2, 'Bob', 'Vegan'); CREATE TABLE meals (id INT, user_id INT, calories INT, meal_date DATE); INSERT INTO meals (id, user_id, calories, meal_date) VALUES (1, 1, 1200, '2023-01-01'), (2, 2, 1500, '2023-01-02');", "output": "SELECT AVG(calories) FROM (SELECT calories FROM meals JOIN user_info ON user_info.id = meals.user_id WHERE diet = 'Vegetarian' AND meal_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 WEEK) AND CURRENT_DATE()) AS subquery;"}
{"input": " \uc778\ub3c4\uc640 \uc911\uad6d\uc744 \uc81c\uc678\ud55c \uc544\uc2dc\uc544 \uc9c0\uc5ed \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\uc758 \uc774\ub984\uacfc \uae30\ubd80 \uae08\uc561\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Donations (id INT, name TEXT, country TEXT, amount DECIMAL(10,2)); INSERT INTO Donations (id, name, country, amount) VALUES (1, 'Raj Patel', 'India', 500), (2, 'Min Lee', 'China', 1000), (3, 'Park Kim', 'South Korea', 750), (4, 'Nguyen Tran', 'Vietnam', 800);", "output": "SELECT name, amount FROM (SELECT name, amount, ROW_NUMBER() OVER (ORDER BY amount DESC) AS rn FROM Donations WHERE country NOT IN ('India', 'China') AND country = ANY (SELECT country FROM (SELECT DISTINCT country FROM Donations) AS DistinctCountries WHERE country != 'India' AND country != 'China' AND country != '')) AS TopDonors WHERE rn <= 5;"}
{"input": " \ub274\uc695\uc8fc\uc758 \uc218\uc790\uc6d0 \ubcf4\uc874 \uacc4\ud68d\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE WaterConservationInitiatives (ID INT, State VARCHAR(20), Initiative VARCHAR(50)); INSERT INTO WaterConservationInitiatives (ID, State, Initiative) VALUES (1, 'New York', 'Rainwater harvesting'), (2, 'New York', 'Greywater recycling'), (3, 'California', 'Smart irrigation'), (4, 'Florida', 'Drought-resistant plants');", "output": "SELECT COUNT(*) FROM WaterConservationInitiatives WHERE State = 'New York'"}
{"input": " \ub0a8\uc790\ud68c\uc6d0 \ucd5c\uc800\uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE member_demographics (id INT, member_id INT, gender VARCHAR(10), heart_rate INT); INSERT INTO member_demographics (id, member_id, gender, heart_rate) VALUES (1, 301, 'male', 70), (2, 302, 'female', 85), (3, 303, 'male', 65), (4, 304, 'female', 90);", "output": "SELECT MIN(heart_rate) FROM member_demographics WHERE gender = 'male';"}
{"input": " \uac01 \ub300\ub959\uc758 \uace0\uc720\ud55c \uae30\ubd80\uc790 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE donors (id INT, name VARCHAR(100), continent VARCHAR(50)); INSERT INTO donors (id, name, continent) VALUES (1, 'John Doe', 'North America'), (2, 'Jane Smith', 'Europe'), (3, 'Pedro Rodriguez', 'South America');", "output": "SELECT continent, COUNT(DISTINCT name) FROM donors GROUP BY continent;"}
{"input": " UNION\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \uac8c\uc784\uacfc \ud574\ub2f9 \uc7a5\ub974\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GameList (GameID int, GameName varchar(100), Genre varchar(50)); INSERT INTO GameList VALUES (1, 'GameA', 'Action'), (2, 'GameB', 'RPG'), (3, 'GameC', 'Action'), (4, 'GameD', 'Simulation');", "output": "SELECT GameName, Genre FROM GameList WHERE Genre = 'Action' UNION SELECT GameName, Genre FROM GameList WHERE Genre = 'RPG' UNION SELECT GameName, Genre FROM GameList WHERE Genre = 'Simulation';"}
{"input": " 'Patel' \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc744 \uc81c\uc678\ud558\uace0 '\uc720\uc8c4' \ub610\ub294 '\uae30\uac01' \ud310\uacb0\uc774 \ub0b4\ub824\uc9c4 \uc0ac\uac74\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cases (id INT, attorney_id INT, verdict VARCHAR(20), billing_amount DECIMAL(10,2)); INSERT INTO cases (id, attorney_id, verdict, billing_amount) VALUES (1, 1, 'Guilty', 5000.00), (2, 1, 'Dismissed', 4000.00), (3, 2, 'Guilty', 6000.00), (4, 3, 'Guilty', 3000.00), (5, 4, 'Dismissed', 8000.00), (6, 4, 'Guilty', 9000.00), (7, 5, 'Dismissed', 1000.00), (8, 5, 'Guilty', 2000.00); CREATE TABLE attorneys (id INT, last_name VARCHAR(20)); INSERT INTO attorneys (id, last_name) VALUES (1, 'Patel'), (2, 'Lee'), (3, 'Johnson'), (4, 'Singh'), (5, 'Kim');", "output": "SELECT AVG(billing_amount) FROM cases WHERE verdict IN ('Guilty', 'Dismissed') AND attorney_id NOT IN (SELECT id FROM attorneys WHERE last_name = 'Patel');"}
{"input": " 2018\ub144\uc5d0 \ubd81\ubbf8\uc5d0 \uc704\uce58\ud55c \uad11\uc0b0 \ud68c\uc0ac\uac00 \ucd94\ucd9c\ud55c \ub780\ud0c0\ub284\uc740 \uba87 \ubbf8\ud130\ud1a4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rare_earth_elements (element TEXT); INSERT INTO rare_earth_elements VALUES ('Neodymium'), ('Praseodymium'), ('Lanthanum'); CREATE TABLE extraction_data (year INT, company_name TEXT, element TEXT, quantity INT); INSERT INTO extraction_data (year, company_name, element, quantity) VALUES (2018, 'XYZ Mining', 'Lanthanum', 1200), (2018, 'LMN Mining', 'Neodymium', 900), (2018, 'OPQ Mining', 'Praseodymium', 1800), (2018, 'ABC Mining', 'Lanthanum', 1500); CREATE TABLE mining_locations (company_name TEXT, region TEXT); INSERT INTO mining_locations (company_name, region) VALUES ('XYZ Mining', 'North America'), ('LMN Mining', 'South America'), ('OPQ Mining', 'Asia'), ('ABC Mining', 'North America');", "output": "SELECT SUM(quantity) as total_quantity FROM extraction_data WHERE year = 2018 AND element = 'Lanthanum' AND company_name IN (SELECT company_name FROM mining_locations WHERE region = 'North America');"}
{"input": " \ud30c\ub9ac\uc2dc\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \ub3c4\uc2dc\ud654 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\uc18c \uaddc\ubaa8\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SustainableUrbanism (id INT, city VARCHAR(20), size FLOAT);", "output": "SELECT MIN(size) FROM SustainableUrbanism WHERE city = 'Paris';"}
{"input": " \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc57c\uad6c\ud300\uacfc \ud574\ub2f9 \ud32c \uc778\uad6c\ud1b5\uacc4\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE baseball_teams (team_id INT, team_name VARCHAR(50)); INSERT INTO baseball_teams (team_id, team_name) VALUES (1, 'New York Yankees'), (2, 'Los Angeles Dodgers'); CREATE TABLE ticket_sales (team_id INT, sale_date DATE, quantity INT, revenue DECIMAL(10,2)); CREATE TABLE fan_demographics (fan_id INT, team_id INT, age INT, gender VARCHAR(10));", "output": "SELECT bt.team_name, SUM(ts.revenue) as total_revenue, AVG(fd.age) as avg_age, fd.gender FROM baseball_teams bt JOIN ticket_sales ts ON bt.team_id = ts.team_id JOIN fan_demographics fd ON bt.team_id = fd.team_id GROUP BY bt.team_name ORDER BY total_revenue DESC LIMIT 1;"}
{"input": "500\uba85\uc774 \ub118\ub294 \uc2e4\ubb34\uc790\ub4e4\uacfc \ud568\uaed8 \ub3d9\ub0a8\uc544\uc2dc\uc544 \ubb38\ud654 \uc601\uc5ed\uc5d0\uc11c \uc804\ud1b5 \uc608\uc220 \ud615\uc2dd\uacfc \uadf8 \uae30\uc6d0\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ArtForms (ArtFormID int, ArtFormName varchar(255), ArtFormOrigin varchar(255), CultureDomain varchar(255), PractitionersCount int); INSERT INTO ArtForms (ArtFormID, ArtFormName, ArtFormOrigin, CultureDomain, PractitionersCount) VALUES (1, 'Batik', 'Indonesia', 'Southeast Asian', 1000);", "output": "SELECT ArtFormName, ArtFormOrigin FROM ArtForms WHERE CultureDomain = 'Southeast Asian' AND PractitionersCount > 500;"}
{"input": " 2019\ub144 \uac01 \uc9c0\uc5ed\uc758 \ub098\ubb34\uac00 \uaca9\ub9ac\ud55c \ucd1d \ud0c4\uc18c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE trees (id INT, region VARCHAR(255), carbon_sequestered DECIMAL(10,2), year INT);", "output": "SELECT region, SUM(carbon_sequestered) as total_carbon_sequestered FROM trees WHERE year = 2019 GROUP BY region;"}
{"input": " \ub3c5\uc77c\uacfc \uc601\uad6d \uc804\ub825 \ubd80\ubb38\uc758 CO2 \ubc30\ucd9c\ub7c9\uc744 \ube44\uad50\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE co2_emissions (country VARCHAR(20), sector VARCHAR(20), co2_emissions INT); INSERT INTO co2_emissions (country, sector, co2_emissions) VALUES ('Germany', 'power', 305000), ('United Kingdom', 'power', 430000);", "output": "SELECT co2_emissions FROM co2_emissions WHERE country = 'Germany' INTERSECT SELECT co2_emissions FROM co2_emissions WHERE country = 'United Kingdom';"}
{"input": " \uac01 \uacfc\ubaa9\ubcc4 3\ubc88\uc9f8\ub85c \ub192\uc740 \uc810\uc218\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE student_scores (student_id INT, subject TEXT, score INT);", "output": "SELECT subject, score FROM (SELECT subject, score, ROW_NUMBER() OVER (PARTITION BY subject ORDER BY score DESC) as rank FROM student_scores) AS subquery WHERE rank = 3;"}
{"input": " \uc5b4\ub5a4 \uc232\uc5d0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\ub9ac \ubc29\ubc95\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE Forests ( ForestID INT PRIMARY KEY, Name VARCHAR(50), Country VARCHAR(50), Hectares FLOAT ); CREATE TABLE Management ( ManagementID INT PRIMARY KEY, Method VARCHAR(50), ForestID INT, FOREIGN KEY (ForestID) REFERENCES Forests(ForestID)); CREATE TABLE Sustainability ( SustainabilityID INT PRIMARY KEY, Certified BOOLEAN, ManagementID INT, FOREIGN KEY (ManagementID) REFERENCES Management(ManagementID));", "output": "SELECT Forests.Name FROM Forests INNER JOIN Management ON Forests.ForestID = Management.ForestID INNER JOIN Sustainability ON Management.ManagementID = Sustainability.ManagementID WHERE Sustainability.Certified = TRUE;"}
{"input": " '\uaca9\ud22c' \uc7a5\ub974\uc758 \uac01 \uac8c\uc784\ubcc4 \ucd5c\uace0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameScores (GameID int, GameName varchar(50), Category varchar(50), Score int);", "output": "SELECT GameName, MAX(Score) OVER(PARTITION BY Category) as MaxScore FROM GameScores WHERE Category = 'Fighting';"}
{"input": " \ucc38\uc11d\uc790\uac00 1000\uba85\uc774 \ub118\ub294 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc0c8 \uae30\ub85d\uc744 \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Events (id INT, name VARCHAR(255), date DATE, attendance INT);", "output": "INSERT INTO Events (id, name, date, attendance) SELECT ROW_NUMBER() OVER (ORDER BY attendance DESC) AS id, name, date, attendance FROM (SELECT name, date, attendance FROM Events WHERE attendance > 1000) subquery;"}
{"input": "\ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uc9c0\uc5ed\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ucd5c\ub300 \uc218\uc2ec\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name VARCHAR(255), location VARCHAR(255), avg_depth FLOAT, max_depth FLOAT);", "output": "SELECT max_depth FROM marine_protected_areas;"}
{"input": "\uc0ac\uc774\ubc84 \ubcf4\uc548 \uc131\uacf5\ub960\uc774 80% \uc774\uc0c1\uc778 \uad6d\uac00\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uad70\uc0ac \uae30\uc220\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE MilitaryTechnology (Id INT PRIMARY KEY, Country VARCHAR(50), Name VARCHAR(50), Year INT);", "output": "SELECT MilitaryTechnology.Name FROM MilitaryTechnology INNER JOIN (SELECT Country FROM CountryCybersecurity WHERE SuccessRate > 0.8 GROUP BY Country) AS C ON MilitaryTechnology.Country = C.Country;"}
{"input": " \uac74\ubb3c \uc720\ud615\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uad6c\ubd84\ud558\uc5ec \uc2dc\uae09 \uae30\uc900 \uc0c1\uc704 3\uac1c \uac74\uc124 \ub178\ub3d9 \ud1b5\uacc4\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE Labor_Statistics (labor_id INT, hourly_wage FLOAT, building_type VARCHAR(20)); INSERT INTO Labor_Statistics VALUES (1, 30.50, 'Residential'), (2, 35.00, 'Commercial'), (3, 28.75, 'Residential'), (4, 40.00, 'Industrial');", "output": "SELECT building_type, hourly_wage, RANK() OVER (PARTITION BY building_type ORDER BY hourly_wage DESC) as wage_rank FROM Labor_Statistics WHERE wage_rank <= 3;"}
{"input": " \ubca0\ub97c\ub9b0, \ubb8c\ud5e8, \ud568\ubd80\ub974\ud06c\ub97c \ud569\uce5c \ub3c5\uc77c \uad00\uad11\uac1d\uc758 \ud3c9\uade0 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourism_stats (visitor_country VARCHAR(20), destination VARCHAR(20), expenditure DECIMAL(10,2)); INSERT INTO tourism_stats (visitor_country, destination, expenditure) VALUES ('Germany', 'Berlin', 400.00), ('Germany', 'Berlin', 450.00), ('Germany', 'Munich', 350.00), ('Germany', 'Hamburg', 300.00);", "output": "SELECT AVG(expenditure) FROM (SELECT expenditure FROM tourism_stats WHERE visitor_country = 'Germany' AND destination IN ('Berlin', 'Munich', 'Hamburg')) subquery;"}
{"input": " \ud14d\uc0ac\uc2a4 \ud559\uc0dd\ub4e4\uc758 \uc7a5\uc560 \uc720\ud615\ubcc4 \ucd1d \uc219\ubc15 \ube44\uc6a9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Accommodations (id INT, student_id INT, disability_type VARCHAR(50), cost FLOAT);", "output": "SELECT d.disability_type, SUM(a.cost) as total_cost FROM Accommodations a JOIN Students s ON a.student_id = s.id JOIN Disabilities d ON a.disability_type = d.type WHERE s.state = 'TX' GROUP BY d.disability_type;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \ud574\uc591 \ud574\uad6c \uc0c1\uc704 10\uac1c\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_trenches (trench_name TEXT, depth FLOAT, location TEXT); INSERT INTO ocean_trenches (trench_name, depth, location) VALUES ('Mariana Trench', '-36069.2', 'Pacific Ocean'), ('Tonga Trench', '-35701.9', 'Pacific Ocean');", "output": "SELECT AVG(depth) FROM (SELECT ROW_NUMBER() OVER (ORDER BY depth DESC) as rn, depth FROM ocean_trenches) tmp WHERE rn <= 10;"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \ud14d\uc0ac\uc2a4 \uc8fc \ud48d\ub825 \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_energy (project_id INT, project_name VARCHAR(255), state VARCHAR(255), project_type VARCHAR(255), installed_capacity FLOAT);", "output": "SELECT project_type, SUM(installed_capacity) FROM wind_energy WHERE state = 'Texas' GROUP BY project_type;"}
{"input": " '\uac74\uac15' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ud55c '\ud504\ub791\uc2a4' \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (volunteer_id INT, volunteer_name TEXT, program_name TEXT, volunteer_start_date DATE); INSERT INTO volunteers (volunteer_id, volunteer_name, program_name, volunteer_start_date) VALUES (1, 'Jacques Leclerc', 'Health Check', '2022-04-01');", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM volunteers WHERE volunteer_country = 'France') AS percentage FROM volunteers WHERE program_name = 'Health' AND volunteer_country = 'France';"}
{"input": " \uc9c0\ub09c \uc8fc Avalanche \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ubd84\uc0b0\ud615 \uac70\ub798\uc18c\uc758 \ud3c9\uade0 \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE decentralized_exchanges_avalanche (exchange_name TEXT, transaction_volume INTEGER, transaction_date DATE);", "output": "SELECT exchange_name, AVG(transaction_volume) FROM decentralized_exchanges_avalanche WHERE transaction_date >= DATEADD(week, -1, GETDATE()) GROUP BY exchange_name;"}
{"input": " 10\uace8 \uc774\uc0c1\uc744 \ub123\uc740 \ubaa8\ub4e0 \uc120\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "athlete_stats", "output": "SELECT * FROM athlete_stats WHERE goals_scored > 10;"}
{"input": " \uc544\uc2dc\uc544\uc9c0\uc5ed\uc5d0\uc11c\ub294 \uae08\uc735\uc5ed\ub7c9\uad50\uc721\uc774 \uba87 \ubc88\uc774\ub098 \uc9c4\ud589\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE financial_capability_training (session_id INT, region VARCHAR(255), date DATE); INSERT INTO financial_capability_training (session_id, region, date) VALUES (1, 'North America', '2021-01-01'), (2, 'Asia', '2021-02-01'), (3, 'Europe', '2021-03-01');", "output": "SELECT COUNT(*) FROM financial_capability_training WHERE region = 'Asia';"}
{"input": " \uc778\ub3c4\uc591\uc758 \ubaa8\ub4e0 \ud574\uc591 \uc0dd\ubb3c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE MarineSpecies (id INT, species VARCHAR(255), location VARCHAR(255)); INSERT INTO MarineSpecies (id, species, location) VALUES (1, 'Whale Shark', 'Indian Ocean'); INSERT INTO MarineSpecies (id, species, location) VALUES (2, 'Olive Ridley Turtle', 'Indian Ocean');", "output": "SELECT species FROM MarineSpecies WHERE location = 'Indian Ocean';"}
{"input": " \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc5d0\ub294 \ub3d9\ubb3c\uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \uc81c\ud488\uc774 \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE Products (product_id INT, category VARCHAR(50), cruelty_free BOOLEAN);", "output": "SELECT category, COUNT(*) FROM Products WHERE cruelty_free = TRUE GROUP BY category;"}
{"input": " \uac01 \uc57c\uc0dd\ub3d9\ubb3c \uc11c\uc2dd\uc9c0\uc758 \uc5f0\ub839\ubcc4 \ub098\ubb34\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wildlife_habitats (id INT, name VARCHAR(255)); INSERT INTO wildlife_habitats (id, name) VALUES (1, 'Forest'), (2, 'Grassland'); CREATE TABLE trees (id INT, biomass INT, age INT, habitat_id INT); INSERT INTO trees (id, biomass, age, habitat_id) VALUES (1, 1000, 200, 1), (2, 800, 150, 2), (3, 1200, 300, 1), (4, 900, 250, 2); CREATE TABLE age_groups (id INT, name VARCHAR(255)); INSERT INTO age_groups (id, name) VALUES (1, '<100'), (2, '100-200'), (3, '>200');", "output": "SELECT h.name habitat, ag.name age_group, SUM(t.biomass) total_biomass FROM trees t JOIN wildlife_habitats h ON t.habitat_id = h.id JOIN age_groups ag ON (t.age >= ag.id * 100 AND t.age < (ag.id + 1) * 100) GROUP BY h.name, ag.name;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ubaa8\ubc14\uc77c \uac00\uc785\uc790 \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE regions (region_id INT PRIMARY KEY, region_name VARCHAR(255)); INSERT INTO regions (region_id, region_name) VALUES (1, 'East'), (2, 'West'), (3, 'Central'), (4, 'North'), (5, 'South'); CREATE TABLE mobile_subscribers (subscriber_id INT PRIMARY KEY, region_id INT); INSERT INTO mobile_subscribers (subscriber_id, region_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5); CREATE TABLE broadband_subscribers (subscriber_id INT PRIMARY KEY, region_id INT); INSERT INTO broadband_subscribers (subscriber_id, region_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (6, 5);", "output": "SELECT r.region_name, COUNT(m.subscriber_id) as mobile_subscribers, COUNT(b.subscriber_id) as broadband_subscribers FROM regions r LEFT JOIN mobile_subscribers m ON r.region_id = m.region_id LEFT JOIN broadband_subscribers b ON r.region_id = b.region_id GROUP BY r.region_name;"}
{"input": " 2010\ub144 \uc774\ud6c4 \uc720\ub7fd \ub0b4 \uac01 \uc870\uc9c1\uc758 \uc7ac\uc0dd\uc5d0\ub108\uc9c0\uc5d0 \ub300\ud55c \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RenewableEnergyInvestment (organization VARCHAR(50), year INT, investment FLOAT); INSERT INTO RenewableEnergyInvestment (organization, year, investment) VALUES ('Shell', 2010, 1500000), ('Shell', 2015, 2000000), ('BP', 2010, 1200000), ('BP', 2015, 1800000);", "output": "SELECT organization, SUM(investment) as 'Total Investment in Renewable Energy' FROM RenewableEnergyInvestment WHERE year >= 2010 AND continent = 'Europe' GROUP BY organization;"}
{"input": " 2021\ub144 1\ubd84\uae30\uc640 3\ubd84\uae30\uc5d0 \uc9c0\uc5ed\ubcc4\ub85c \uac00\uc785\ud55c \ud68c\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE memberships (membership_id INT, join_date DATE, region VARCHAR(20)); INSERT INTO memberships (membership_id, join_date, region) VALUES (1, '2021-01-05', 'North'), (2, '2021-04-10', 'South'), (3, '2021-07-22', 'East');", "output": "SELECT COUNT(*) as q1_q3_count, region FROM memberships WHERE (EXTRACT(QUARTER FROM join_date) = 1) OR (EXTRACT(QUARTER FROM join_date) = 3) GROUP BY region;"}
{"input": " '\ucd94\uc0c1 \ubbf8\uc220' \uc804\uc2dc\ud68c \uc791\ud488\uc758 \uc544\ud2f0\uc2a4\ud2b8_ID \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE artworks (id INT, name VARCHAR(255), artist_id INT); CREATE TABLE exhibitions (id INT, name VARCHAR(255)); CREATE TABLE exhibition_artworks (exhibition_id INT, artwork_id INT); INSERT INTO artworks (id, name, artist_id) VALUES (1, 'The Persistence of Memory', 1); INSERT INTO exhibitions (id, name) VALUES (1, 'Abstract Art'); INSERT INTO exhibition_artworks (exhibition_id, artwork_id) VALUES (1, 1);", "output": "WITH updated_artworks AS (UPDATE artworks SET artist_id = 2 WHERE id IN (SELECT artwork_id FROM exhibition_artworks WHERE exhibition_id = 1)) SELECT * FROM updated_artworks;"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc758 \uc81c\ud488 \uc218\uc640 \ud3c9\uade0 \uac00\uaca9\uc740 \ud3c9\uade0 \uac00\uaca9 \uae30\uc900\uc73c\ub85c \uc21c\uc704\uac00 \ub9e4\uaca8\uc838 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id int, product_category varchar(50), price decimal(5,2));", "output": "SELECT product_category, COUNT(*) as num_products, AVG(price) as avg_price, RANK() OVER (ORDER BY AVG(price) DESC) as rank FROM products GROUP BY product_category;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \ubaa9\uc801\uc9c0\ub97c \ubc29\ubb38\ud558\ub294 \uac01 \ub300\ub959 \uc5ec\ud589\uc790\uc758 \ud3c9\uade0 \ud0c4\uc18c \ubc1c\uc790\uad6d\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE continents (continent_name VARCHAR(50), country_code CHAR(3));CREATE TABLE travelers (traveler_id INT, country_code CHAR(3), carbon_footprint INT);CREATE TABLE destinations (destination_id INT, destination_name VARCHAR(100), is_sustainable BOOLEAN);CREATE TABLE visits (visit_id INT, traveler_id INT, destination_id INT);INSERT INTO continents (continent_name, country_code) VALUES ('North America', 'USA'), ('North America', 'CAN'), ('Europe', 'DEU'), ('Europe', 'GBR'), ('Asia', 'CHN'), ('Africa', 'ZAF'), ('Oceania', 'AUS');", "output": "SELECT c.continent_name, AVG(t.carbon_footprint) FROM continents c JOIN (SELECT traveler_id, carbon_footprint FROM travelers t JOIN visits v ON t.traveler_id = v.traveler_id WHERE v.destination_id IN (SELECT destination_id FROM destinations d WHERE d.is_sustainable = TRUE)) subquery ON c.country_code = subquery.country_code GROUP BY c.continent_name;"}
{"input": " 5\uac1c \uc774\uc0c1\uc758 \uc7a5\uc560 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \uac16\uace0 \uc788\ub294 \uc8fc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE states (state_id INT, state_name VARCHAR(50), num_programs INT); INSERT INTO states (state_id, state_name, num_programs) VALUES (1, 'California', 7), (2, 'Texas', 3), (3, 'New York', 6), (4, 'Florida', 4);", "output": "SELECT state_name FROM (SELECT state_name, ROW_NUMBER() OVER (ORDER BY num_programs DESC) as rn FROM states) t WHERE rn <= (SELECT COUNT(*) FROM states WHERE num_programs > 5);"}
{"input": "\uc720\ub7fd\uc5d0\uc11c \uc790\uc728\uc8fc\ud589 \ubc84\uc2a4\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE autonomous_buses (city VARCHAR(20), num_buses INT); INSERT INTO autonomous_buses (city, num_buses) VALUES ('Paris', 300), ('Berlin', 250), ('Madrid', 200), ('Rome', 180), ('Warsaw', 150);", "output": "SELECT city, num_buses FROM (SELECT city, num_buses, ROW_NUMBER() OVER (ORDER BY num_buses DESC) rn FROM autonomous_buses WHERE city LIKE 'A%' OR city LIKE 'B%' OR city LIKE 'C%') tmp WHERE rn <= 3;"}
{"input": " \uc9c0\uc18d \uc2dc\uac04\uc774 \uac00\uc7a5 \uae34 \uc0c1\uc704 5\uac1c \uc6b0\uc8fc \uc784\ubb34\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SpaceMissions (MissionID INT, Duration FLOAT);", "output": "SELECT * FROM (SELECT MissionID, Duration FROM SpaceMissions ORDER BY Duration DESC) subquery LIMIT 5;"}
{"input": "2022\ub144 4\uc6d4 '\uc911\ubd80' \uc9c0\uc5ed\uc758 \ucd5c\ub300 \uc5d0\ub108\uc9c0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_prices (id INT, region VARCHAR(50), price FLOAT, date DATE); INSERT INTO energy_prices (id, region, price, date) VALUES (1, 'Central', 70.5, '2022-04-01');", "output": "SELECT region, MAX(price) AS max_price FROM energy_prices WHERE date BETWEEN '2022-04-01' AND '2022-04-30' AND region = 'Central' GROUP BY region;"}
{"input": " \ub0a8\uc544\ud504\ub9ac\uce74 \uad11\uc0b0 \uc791\uc5c5\uc758 \uc77c\uc77c \ubb3c \uc0ac\uc6a9\ub7c9 \ubcc0\ud654\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Mining_Operation (Operation_ID INT, Mine_Name VARCHAR(50), Location VARCHAR(50), Operation_Type VARCHAR(50), Start_Date DATE, End_Date DATE); CREATE TABLE Environmental_Impact (Impact_ID INT, Operation_ID INT, Date DATE, Carbon_Emissions INT, Water_Usage INT, Waste_Generation INT);", "output": "SELECT Operation_ID, Date, Water_Usage, LAG(Water_Usage, 1) OVER (PARTITION BY Operation_ID ORDER BY Date) AS Previous_Day_Water, (Water_Usage - LAG(Water_Usage, 1) OVER (PARTITION BY Operation_ID ORDER BY Date)) AS Daily_Change_Water FROM Environmental_Impact WHERE Location = 'South Africa';"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 2\uc778\ubd84 \ubbf8\ub9cc \uc8fc\ubb38\uc744 \uc81c\uc678\ud558\uace0 \uac01 \uc694\ub9ac\ub97c \uba87 \ubc88 \uc8fc\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE dish_orders (id INT, dish_name TEXT, quantity INT, order_date DATE);", "output": "SELECT dish_name, SUM(quantity) FROM dish_orders WHERE order_date >= DATE(NOW()) - INTERVAL 1 WEEK GROUP BY dish_name HAVING SUM(quantity) >= 2;"}
{"input": " \uce90\ub098\ub2e4 \uc608\uc220\uac00\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artists (id INT, name VARCHAR(255), age INT, country VARCHAR(255)); INSERT INTO artists (id, name, age, country) VALUES (1, 'Justin Bieber', 27, 'Canada'), (2, 'Celine Dion', 53, 'Canada');", "output": "SELECT AVG(age) FROM artists WHERE country = 'Canada';"}
{"input": "\uae30\uac01' \uacb0\uacfc\uac00 \uc788\ub294 \ubaa8\ub4e0 \uc0ac\uac74\uacfc \ud574\ub2f9 \ubcc0\ud638\uc0ac\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Cases (CaseID INT, ClientID INT, Outcome TEXT); CREATE TABLE CaseAttorneys (CaseID INT, AttorneyID INT); CREATE TABLE Attorneys (AttorneyID INT, Name TEXT); INSERT INTO Cases (CaseID, ClientID, Outcome) VALUES (1, 1, 'Settled'); INSERT INTO CaseAttorneys (CaseID, AttorneyID) VALUES (1, 1); INSERT INTO Attorneys (AttorneyID, Name) VALUES (1, 'Jane Doe'); INSERT INTO Cases (CaseID, ClientID, Outcome) VALUES (2, 2, 'Dismissed'); INSERT INTO CaseAttorneys (CaseID, AttorneyID) VALUES (2, 2); INSERT INTO Attorneys (AttorneyID, Name) VALUES (2, 'John Smith');", "output": "SELECT Attorneys.Name, Cases.Outcome FROM Cases INNER JOIN CaseAttorneys ON Cases.CaseID = CaseAttorneys.CaseID INNER JOIN Attorneys ON CaseAttorneys.AttorneyID = Attorneys.AttorneyID WHERE Cases.Outcome = 'Dismissed';"}
{"input": " 'EcoFarm'\uacfc 'HealthyHarvest'\uc758 '\uc1e0\uace0\uae30' \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EcoFarm (product_id INT, product_name VARCHAR(50), price FLOAT); CREATE TABLE HealthyHarvest (product_id INT, product_name VARCHAR(50), price FLOAT); INSERT INTO EcoFarm (product_id, product_name, price) VALUES (1, 'Eggs', 4.0), (2, 'Milk', 3.5), (3, 'Chicken', 6.5), (4, 'Beef', 12.0); INSERT INTO HealthyHarvest (product_id, product_name, price) VALUES (1, 'Eggs', 4.5), (2, 'Milk', 4.0), (3, 'Chicken', 7.0), (4, 'Beef', 10.0);", "output": "SELECT AVG(price) FROM (SELECT price FROM EcoFarm WHERE product_name = 'Beef' UNION ALL SELECT price FROM HealthyHarvest WHERE product_name = 'Beef') AS subquery;"}
{"input": " 2020\ub144\uc5d0 \uc544\uc774\ud2f0\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc7ac\ub09c \uad6c\ud638 \ubb3c\ud488\uc774 \ubcf4\ub0b4\uc84c\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE disaster_relief_supplies (id INT, destination VARCHAR(255), year INT, quantity INT);", "output": "SELECT SUM(quantity) FROM disaster_relief_supplies WHERE destination = 'Haiti' AND year = 2020;"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ub178\ub798 \uc7a5\ub974 \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE Genre (id INT, genre VARCHAR(255)); CREATE TABLE Song (id INT, genre_id INT, title VARCHAR(255), playtime INT);", "output": "UPDATE Song SET genre_id = (SELECT id FROM Genre WHERE genre = 'Pop') WHERE title = 'Bohemian Rhapsody';"}
{"input": " \uc601\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ucd5c\uc18c \uc131\ubd84 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SkincareProducts(productID INT, numberOfIngredients INT, country VARCHAR(50)); INSERT INTO SkincareProducts(productID, numberOfIngredients, country) VALUES (1, 15, 'UK'), (2, 20, 'US'), (3, 18, 'Canada');", "output": "SELECT MIN(numberOfIngredients) FROM SkincareProducts WHERE country = 'UK';"}
{"input": " \ub514\uc9c0\ud138 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud558\ub294 \uad00\ub78c\uac1d\uc758 \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc804\uc2dc\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Exhibition1 (exhibition_id INT, visitor_id INT, primary key(exhibition_id, visitor_id)); INSERT INTO Exhibition1 VALUES (1, 1), (1, 2), (2, 3), (2, 4); CREATE TABLE Visitor (visitor_id INT, age INT, primary key(visitor_id)); INSERT INTO Visitor VALUES (1, 25), (2, 30), (3, 35), (4, 40); CREATE TABLE DigitalActivity (visitor_id INT, primary key(visitor_id)); INSERT INTO DigitalActivity VALUES (2), (3), (4);", "output": "SELECT Exhibition1.exhibition_id, AVG(Visitor.age) FROM Exhibition1 INNER JOIN Visitor ON Exhibition1.visitor_id = Visitor.visitor_id INNER JOIN DigitalActivity ON Visitor.visitor_id = DigitalActivity.visitor_id GROUP BY Exhibition1.exhibition_id;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 '\uace0\ub300' \uc21c\uc704\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uc2b9\ub960\uc744 \uae30\ub85d\ud55c \uc0c1\uc704 5\uba85\uc758 'Dota 2' \uc601\uc6c5\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE matches (id INT, game VARCHAR(10), hero VARCHAR(50), rank VARCHAR(20), match_result VARCHAR(10), match_date DATE); INSERT INTO matches (id, game, hero, rank, match_result, match_date) VALUES (1, 'Dota 2', 'Anti-Mage', 'Ancient', 'Win', '2022-06-15');", "output": "SELECT hero, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM matches WHERE game = 'Dota 2' AND rank = 'Ancient' AND match_date >= DATEADD(month, -6, GETDATE())) AS win_rate FROM matches WHERE game = 'Dota 2' AND rank = 'Ancient' AND match_result = 'Win' GROUP BY hero ORDER BY win_rate DESC, hero DESC LIMIT 5;"}
{"input": "\uc7a5\ub974\ubcc4, \ud50c\ub808\uc774\uc5b4 \uc9c0\uc5ed\ubcc4\ub85c \ubd84\ub958\ud55c VR \uac8c\uc784\uc758 \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE vr_games (id INT, game_id INT, player_id INT, last_played DATE, region VARCHAR(20), playtime INT);", "output": "SELECT g.genre, p.region, AVG(v.playtime) FROM vr_games v JOIN games g ON v.game_id = g.id JOIN players p ON v.player_id = p.id WHERE g.vr_compatible = 'Yes' GROUP BY g.genre, p.region;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uac8c\uc784 \uc7a5\ub974\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (id INT, genre VARCHAR(255), revenue DECIMAL(5,2));", "output": "SELECT genre, SUM(revenue) FROM games WHERE revenue IS NOT NULL AND purchase_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY genre;"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubcf4\ud5d8 \uacc4\uc57d \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE policy (policy_id INT, policy_holder VARCHAR(50), coverage_amount INT); CREATE TABLE claim (claim_id INT, policy_id INT, claim_amount INT, claim_date DATE); INSERT INTO policy (policy_id, policy_holder, coverage_amount) VALUES (1, 'John Doe', 400000), (2, 'Jane Smith', 600000), (3, 'Mary Johnson', 350000); INSERT INTO claim (claim_id, policy_id, claim_amount, claim_date) VALUES (1, 1, 5000, '2021-01-01'), (2, 1, 3000, '2021-02-01'), (3, 2, 7000, '2021-03-01'), (4, 3, 4000, '2021-04-01');", "output": "DELETE FROM policy WHERE policy_holder IN (SELECT policy_holder FROM policy JOIN (SELECT 'California' AS state_name UNION ALL SELECT 'CA') AS ca ON policy_holder LIKE '%CA%');"}
{"input": " \uacf5\uc815\ubb34\uc5ed \uc778\uc99d\uc81c\ud488\uc744 \uac00\uc7a5 \ub9ce\uc774 \ubcf4\uc720\ud55c \uacf5\uc7a5\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE Factory_Products(id INT, factory_id INT, product_id INT, is_fair_trade_certified BOOLEAN); INSERT INTO Factory_Products(id, factory_id, product_id, is_fair_trade_certified) VALUES (1, 1, 1, true), (2, 1, 2, true), (3, 2, 3, false); CREATE TABLE Factories(id INT, name TEXT); INSERT INTO Factories(id, name) VALUES (1, 'Factory A'), (2, 'Factory B');", "output": "SELECT Factories.name FROM Factories INNER JOIN (SELECT factory_id, COUNT(*) as product_count FROM Factory_Products WHERE is_fair_trade_certified = true GROUP BY factory_id) AS Subquery ON Factories.id = Subquery.factory_id ORDER BY Subquery.product_count DESC LIMIT 1;"}
{"input": " '\ubbf8\uc8fc' \uc9c0\uc5ed \uad6d\uac00\uc758 \uacbd\uc6b0 '\uc721\uad70' \uacc4\uc5f4\uc5d0\uc11c '\ub300\ub839' \uc774\uc0c1\uc758 \uc9c1\uae09\uc744 \uc9c0\ub2cc \uad70\uc778\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_personnel (id INT, name TEXT, rank TEXT, branch TEXT, country TEXT, region TEXT); INSERT INTO military_personnel (id, name, rank, branch, country, region) VALUES (1, 'John Doe', 'colonel', 'army', 'USA', 'Americas');", "output": "SELECT COUNT(*) FROM military_personnel WHERE branch = 'army' AND region = 'Americas' AND rank >= 'colonel';"}
{"input": "2021\ub144 \uc0c1\ubc18\uae30 \uac01 \uae30\uc5c5\uc758 \uc11d\uc720 \ubc0f \uac00\uc2a4 \ucd1d \uc0dd\uc0b0\ub7c9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE company (id INT, name VARCHAR(50)); CREATE TABLE oil_production (company_id INT, date DATE, oil_production FLOAT); CREATE TABLE gas_production (company_id INT, date DATE, gas_production FLOAT);", "output": "SELECT c.name, SUM(op.oil_production) + SUM(gp.gas_production) FROM company c JOIN oil_production op ON c.id = op.company_id JOIN gas_production gp ON c.id = gp.company_id WHERE op.date BETWEEN '2021-01-01' AND '2021-06-30' AND gp.date BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY c.id;"}
{"input": " EU \uad6d\uac00\ubcc4 \uc804\uae30\ucc28 \ucda9\uc804\uc18c \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ChargingStations(id INT, country VARCHAR(20), quantity INT);", "output": "SELECT country, COUNT(*) as quantity FROM ChargingStations WHERE country IN (SELECT country FROM Countries WHERE region = 'European Union') GROUP BY country ORDER BY quantity DESC;"}
{"input": " 2005\ub144 \uc774\ud6c4 \uac74\uc124\ub41c \ud50c\ub85c\ub9ac\ub2e4 \uc2dc\uace8 \ubcd1\uc6d0\uc758 \ucd5c\uc18c \ubcd1\uc0c1 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, beds INT, rural BOOLEAN, built DATE); INSERT INTO hospitals (id, name, location, beds, rural, built) VALUES (1, 'Hospital A', 'Florida', 120, true, '2006-01-01'), (2, 'Hospital B', 'Florida', 150, true, '2007-01-01');", "output": "SELECT MIN(beds) FROM hospitals WHERE location = 'Florida' AND rural = true AND built > '2005-01-01';"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uae30\uc628 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE WeatherData (Country VARCHAR(50), Year INT, Temperature DECIMAL(5,2)); INSERT INTO WeatherData (Country, Year, Temperature) VALUES ('Canada', 2020, 5.3), ('Canada', 2019, 4.6), ('Mexico', 2020, 22.1), ('Mexico', 2019, 21.8);", "output": "SELECT Country, AVG(Temperature) - LAG(AVG(Temperature)) OVER (PARTITION BY Country ORDER BY Year) as TempDifference FROM WeatherData GROUP BY Country, Year;"}
{"input": " \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc774 \uac00\uc7a5 \ub0ae\uc740 \ud504\ub85c\uadf8\ub7a8\uc744 \ucc3e\uc73c\uc2dc\ub098\uc694?", "context": "CREATE TABLE donations (id INT, program VARCHAR(255), amount DECIMAL(10, 2)); INSERT INTO donations (id, program, amount) VALUES (1, 'Animal Welfare', 500.00), (2, 'Education', 1000.00);", "output": "SELECT program FROM donations WHERE amount = (SELECT MIN(amount) FROM donations);"}
{"input": " 2020\ub144 9\uc6d4 \ub3d9\uc548 \ub9c8\uc774\uc560\ubbf8 \uc2dc\uc758 \ud3c9\uade0 \uc77c\uc77c \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WaterConsumption (ID INT, City VARCHAR(20), Consumption FLOAT, Date DATE); INSERT INTO WaterConsumption (ID, City, Consumption, Date) VALUES (9, 'Miami', 150, '2020-09-01'), (10, 'Miami', 145, '2020-09-02'), (11, 'Miami', 160, '2020-09-03'), (12, 'Miami', 140, '2020-09-04');", "output": "SELECT AVG(Consumption) FROM WaterConsumption WHERE City = 'Miami' AND Date >= '2020-09-01' AND Date <= '2020-09-30' GROUP BY Date"}
{"input": " \uc9c0\ub09c \uc8fc \ud2b8\uc704\ud130\uc5d0\uc11c '\uccad\uc18c\ub144' \uc5f0\ub839\ub300 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uac8c\uc2dc\ubb3c\uacfc \ub313\uae00 \uc218\ub97c \uc131\ubcc4\ub85c \ubd84\ub958\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE posts (post_id INT, user_id INT, platform VARCHAR(20), post_text VARCHAR(100), post_date DATE); CREATE TABLE comments (comment_id INT, post_id INT, user_id INT, comment_text VARCHAR(100), comment_date DATE); CREATE TABLE user_profile (user_id INT, age INT, gender VARCHAR(10)); INSERT INTO posts VALUES (1, 1, 'Twitter', 'Hello World!', '2022-01-01'); INSERT INTO comments VALUES (1, 1, 2, 'Nice post!', '2022-01-02'); INSERT INTO user_profile VALUES (1, 22, 'Female');", "output": "SELECT p.platform, COUNT(DISTINCT p.post_id) as num_posts, COUNT(DISTINCT c.comment_id) as num_comments, u.gender FROM posts p JOIN comments c ON p.post_id = c.post_id JOIN user_profile u ON p.user_id = u.user_id WHERE p.platform = 'Twitter' AND u.age BETWEEN 13 AND 25 AND p.post_date >= DATEADD(week, -1, GETDATE()) GROUP BY p.platform, u.gender;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uc758\ub958 \ud488\ubaa9\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uace0\uc720\ud55c \uc9c1\ubb3c \uc720\ud615\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE TextileSourcing (TextileType VARCHAR(255), IsSustainable BOOLEAN); INSERT INTO TextileSourcing (TextileType, IsSustainable) VALUES ('Organic Hemp', TRUE), ('Recycled Nylon', TRUE), ('Viscose', FALSE), ('Bamboo', TRUE);", "output": "SELECT DISTINCT TextileType FROM TextileSourcing WHERE IsSustainable = TRUE;"}
{"input": " 2022\ub144 1\ubd84\uae30 \ubaa8\ub4e0 \ub808\uc2a4\ud1a0\ub791\uc758 \uac01 \uba54\ub274 \ud56d\ubaa9\uc5d0 \uc801\uc6a9\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc2f1 \ud560\uc778\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?'", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255), City varchar(255)); CREATE TABLE Menu (MenuID int, RestaurantID int, MenuItem varchar(255), Price decimal(5,2)); CREATE TABLE Sustainability (SustainabilityID int, MenuID int, Discount decimal(5,2)); CREATE TABLE Sales (SaleID int, MenuID int, Quantity int, SaleDate date);", "output": "SELECT M.MenuItem, SUM(S.Quantity) as TotalQuantitySold, AVG(S.Quantity * M.Price * ISNULL(S.Discount, 0)) as AverageRevenue, AVG(S.Quantity * M.Price * ISNULL(S.Discount, 0)) / SUM(S.Quantity * M.Price) as AverageDiscountPercentage FROM Menu M INNER JOIN Sustainability S ON M.MenuID = S.MenuID INNER JOIN (SELECT MenuID, SUM(Quantity) as Quantity FROM Sales WHERE YEAR(SaleDate) = 2022 AND QUARTER(SaleDate) = 1 GROUP BY MenuID) S ON M.MenuID = S.MenuID GROUP BY M.MenuItem;"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \uc218\uc6a9\ub418\ub294 \uc21c\uc11c\ub300\ub85c \uc7a5\uc560 \uc720\ud615\ubcc4\ub85c \uc81c\uacf5\ub418\ub294 \ud3b8\uc758 \uc2dc\uc124 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AccommodationsByDisability (AccommodationID INT, AccommodationName VARCHAR(50), DisabilityType VARCHAR(50), Number INT); INSERT INTO AccommodationsByDisability (AccommodationID, AccommodationName, DisabilityType, Number) VALUES (1, 'Sign Language Interpretation', 'Hearing Loss', 500), (2, 'Wheelchair Access', 'Physical Disability', 700), (3, 'Braille Materials', 'Visual Impairment', 350), (4, 'Adaptive Equipment', 'Physical Disability', 600), (5, 'Assistive Technology', 'Intellectual Disability', 400), (6, 'Sensory Rooms', 'Autism Spectrum Disorder', 300);", "output": "SELECT DisabilityType, SUM(Number) as TotalAccommodations, ROW_NUMBER() OVER (ORDER BY SUM(Number) DESC) as Rank FROM AccommodationsByDisability GROUP BY DisabilityType;"}
{"input": " \ud2b9\uc815 \ub2ec\uc5d0 \ud2b9\uc815 \uace0\uac1d\uc758 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders (order_id INT, customer_id INT, order_date DATE); CREATE TABLE order_items (order_id INT, item_id INT, quantity INT, price FLOAT); CREATE TABLE menu (item_id INT, name TEXT, category TEXT, is_vegetarian BOOLEAN, price FLOAT); INSERT INTO menu (item_id, name, category, is_vegetarian, price) VALUES (1, 'Chickpea Curry', 'Lunch', true, 10.5), (2, 'Chicken Tikka Masala', 'Lunch', false, 13.0), (3, 'Quinoa Salad', 'Starters', true, 7.5); INSERT INTO orders (order_id, customer_id, order_date) VALUES (1, 101, '2022-03-05'), (2, 102, '2022-03-12'), (3, 103, '2022-04-01'); INSERT INTO order_items (order_id, item_id, quantity, price) VALUES (1, 1, 2, 10.5), (1, 3, 1, 7.5), (2, 2, 1, 13.0);", "output": "SELECT SUM(oi.quantity * m.price) as revenue FROM orders o JOIN order_items oi ON o.order_id = oi.order_id JOIN menu m ON oi.item_id = m.item_id WHERE o.customer_id = 101 AND o.order_date BETWEEN '2022-03-01' AND '2022-03-31';"}
{"input": " \uce7c\ub85c\ub9ac\uac00 2000\ubcf4\ub2e4 \ub192\uc740 \uc694\ub9ac \uc7ac\ub8cc\ub97c \uacf5\uae09\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Vendors (vid INT, name TEXT);CREATE TABLE Dishes (did INT, name TEXT, calorie_count INT);CREATE TABLE Ingredients (iid INT, dish_id INT, vendor_id INT);INSERT INTO Vendors VALUES (1, 'VendorA');INSERT INTO Dishes VALUES (1, 'DishA', 3000);INSERT INTO Ingredients VALUES (1, 1, 1);", "output": "SELECT DISTINCT Vendors.name FROM Vendors INNER JOIN Ingredients ON Vendors.vid = Ingredients.vendor_id INNER JOIN Dishes ON Ingredients.dish_id = Dishes.did WHERE Dishes.calorie_count > 2000;"}
{"input": " 2020\ub144 \uce90\ub098\ub2e4\uc5d0\uc11c \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \uc8fc\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE canada_water_usage (id INT, province VARCHAR(50), city VARCHAR(50), year INT, monthly_consumption FLOAT); INSERT INTO canada_water_usage (id, province, city, year, monthly_consumption) VALUES (1, 'Ontario', 'Toronto', 2020, 120), (2, 'Ontario', 'Ottawa', 2020, 110), (3, 'Quebec', 'Montreal', 2020, 130), (4, 'Quebec', 'Quebec City', 2020, 100);", "output": "SELECT province, city, monthly_consumption, RANK() OVER (PARTITION BY province ORDER BY monthly_consumption DESC) as rank FROM canada_water_usage WHERE year = 2020 GROUP BY province, city, monthly_consumption HAVING rank <= 3;"}
{"input": " 2016\ub144 \uc774\ud6c4 \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud55c \ub3d9\ub0a8\uc544\uc2dc\uc544 \uad70\uc778\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_personnel (personnel_id INT, country VARCHAR(255), role VARCHAR(255), start_date DATE); INSERT INTO military_personnel (personnel_id, country, role, start_date) VALUES (1, 'Country A', 'Peacekeeper', '2016-01-01'), (2, 'Country B', 'Peacekeeper', '2017-01-01'), (3, 'Country C', 'Commander', '2018-01-01'); CREATE TABLE countries (country VARCHAR(255)); CREATE TABLE roles (role VARCHAR(255));", "output": "SELECT COUNT(*) FROM military_personnel INNER JOIN countries ON military_personnel.country = countries.country INNER JOIN roles ON military_personnel.role = roles.role WHERE countries.country LIKE '%Southeast Asia%' AND role = 'Peacekeeper' AND start_date >= '2016-01-01';"}
{"input": "\uc9c0\ub09c 60\uc77c \ub3d9\uc548 \uc77c\uc77c \ucd5c\uc800 \uae30\uc628\uc740 \uc5bc\ub9c8\uc774\uba70, \ucd1d \uc77c\uc218\ub294 \uc12d\uc528 15\ub3c4 \ubbf8\ub9cc\uc785\ub2c8\uae4c?", "context": "CREATE TABLE WeatherData (id INT, Temperature INT, Timestamp DATETIME); INSERT INTO WeatherData (id, Temperature, Timestamp) VALUES (1, 12, '2022-04-15 12:00:00'), (2, 18, '2022-04-16 12:00:00');", "output": "SELECT Temperature, Timestamp, SUM(CASE WHEN Temperature < 15 THEN 1 ELSE 0 END) OVER (ORDER BY Timestamp) as RunningTotal FROM WeatherData WHERE Timestamp BETWEEN DATEADD(day, -60, GETDATE()) AND GETDATE();"}
{"input": " \ub9e4\ub144 \uba87 \uba85\uc758 \uc5ec\uc131 \ubc0f \ub0a8\uc131 \uad50\uc9c1\uc6d0\uc774 \ucc44\uc6a9\ub429\ub2c8\uae4c?", "context": "CREATE TABLE faculty_hires (id INT, year INT, gender VARCHAR(10)); INSERT INTO faculty_hires (id, year, gender) VALUES (1, 2017, 'Female'), (2, 2018, 'Male'), (3, 2017, 'Male'), (4, 2018, 'Female');", "output": "SELECT year, gender, COUNT(*) as num_hires FROM faculty_hires GROUP BY year, gender;"}
{"input": " '\ud799\ud569' \uc7a5\ub974 \ucf58\uc11c\ud2b8\uc758 \ucd5c\ub300 \ud2f0\ucf13 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE ConcertGenre (ConcertID INT, GenreID INT); INSERT INTO ConcertGenre VALUES (7, 3), (8, 1), (9, 2), (13, 5);", "output": "SELECT MAX(TicketPrice) FROM Concerts JOIN ConcertGenre ON Concerts.ConcertID = ConcertGenre.ConcertID JOIN Genre ON ConcertGenre.GenreID = Genre.GenreID WHERE Genre.Genre = 'Hip Hop';"}
{"input": " \uc21c\ud658 \uc591\uc2dd \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc885\ubcc4\ub85c \ubd84\ub958\ub41c \uc5b4\ub958\uc758 \ud3c9\uade0 \uc0ac\ub8cc \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE feed_cost (farm_id INT, system_type VARCHAR(20), species VARCHAR(20), feed_cost FLOAT); INSERT INTO feed_cost VALUES (1, 'Recirculating', 'Salmon', 3.5), (2, 'Pond', 'Tilapia', 2.0), (3, 'Recirculating', 'Trout', 2.8), (4, 'Cage', 'Carp', 1.5);", "output": "SELECT species, AVG(feed_cost) FROM feed_cost WHERE system_type = 'Recirculating' GROUP BY species;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uc778\ub3c4\uc591\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\uace0 \uc218\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE indian_temp (year INT, temperature FLOAT); INSERT INTO indian_temp (year, temperature) VALUES (2019, 28.2), (2020, 28.5), (2021, 28.8), (2022, 29.0);", "output": "SELECT MAX(temperature) FROM indian_temp WHERE year BETWEEN (SELECT EXTRACT(YEAR FROM NOW()) - 3) AND EXTRACT(YEAR FROM NOW());"}
{"input": " \uc5b8\uc5b4\ubcc4, \uc7a5\ub974\ubcc4 \uae30\uc0ac \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE articles (article_language VARCHAR(50), article_genre VARCHAR(50), article_title VARCHAR(100), publication_date DATE); INSERT INTO articles (article_language, article_genre, article_title, publication_date) VALUES ('English', 'News', 'Article 1', '2021-01-01'); INSERT INTO articles (article_language, article_genre, article_title, publication_date) VALUES ('Spanish', 'Entertainment', 'Article 2', '2021-01-02');", "output": "SELECT article_language, article_genre, COUNT(*) as article_count FROM articles GROUP BY article_language, article_genre;"}
{"input": "\ud30c\ub9ac \uad00\uad11\uc774 \uc9c0\uc5ed \uacbd\uc81c\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cities (city_id INT, city_name TEXT, country TEXT); INSERT INTO cities (city_id, city_name, country) VALUES (1, 'Paris', 'France'); CREATE TABLE tourism_impact (impact_id INT, city_id INT, economic_impact FLOAT); INSERT INTO tourism_impact (impact_id, city_id, economic_impact) VALUES (1, 1, 1000.0), (2, 1, 1500.0);", "output": "SELECT SUM(economic_impact) FROM tourism_impact WHERE city_id = (SELECT city_id FROM cities WHERE city_name = 'Paris');"}
{"input": " \uc601\uad6d \uad00\uad11\uac1d\ub4e4\uc774 \ud638\uc8fc \uc2dc\ub4dc\ub2c8\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ucc3e\ub294 \uad00\uad11 \uba85\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists countries (country_id INT, name TEXT); INSERT INTO countries (country_id, name) VALUES (1, 'Australia'); CREATE TABLE if not exists cities (city_id INT, name TEXT, country_id INT, population INT); INSERT INTO cities (city_id, name, country_id, population) VALUES (1, 'Sydney', 1, 5000000); CREATE TABLE if not exists attractions (attraction_id INT, name TEXT, city_id INT, visitors INT); INSERT INTO attractions (attraction_id, name, city_id, visitors) VALUES (1, 'Sydney Opera House', 1, 3000000), (2, 'Bondi Beach', 1, 2000000), (3, 'Taronga Zoo', 1, 1000000), (4, 'Sydney Harbour Bridge', 1, 800000); CREATE TABLE if not exists visit_logs (log_id INT, visitor_id INT, attraction_id INT, visit_date DATE, country_id INT); INSERT INTO visit_logs (log_id, visitor_id, attraction_id, visit_date, country_id) VALUES (1, 1, 1, '2022-01-01', 2), (2, 2, 1, '2022-01-05', 2), (3, 3, 2, '2022-01-10', 2), (4, 4, 3, '2022-01-15', 2), (5, 5, 4, '2022-01-20', 2);", "output": "SELECT attractions.name, MAX(attractions.visitors) FROM attractions JOIN visit_logs ON attractions.attraction_id = visit_logs.attraction_id WHERE visit_logs.country_id = (SELECT country_id FROM countries WHERE name = 'United Kingdom') GROUP BY attractions.name;"}
{"input": "\uace0\uc720\ud55c \uacbd\ub85c \uc774\ub984, \uc720\ud615, \uc0c9\uc0c1, \uc5ed \uc774\ub984, \uc704\ub3c4 \ubc0f \uacbd\ub3c4\ub97c \ubaa8\ub450 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stations (station_id INTEGER, name TEXT, latitude REAL, longitude REAL); INSERT INTO stations (station_id, name, latitude, longitude) VALUES (1, 'Downtown', 40.7128, -74.0060); CREATE TABLE routes (route_id INTEGER, name TEXT, type TEXT, color TEXT); INSERT INTO routes (route_id, name, type, color) VALUES (1, 'Red Line', 'Subway', '#FF0000'); CREATE TABLE route_stations (route_id INTEGER, station_id INTEGER); INSERT INTO route_stations (route_id, station_id) VALUES (1, 1);", "output": "SELECT DISTINCT r.name, r.type, r.color, s.name, s.latitude, s.longitude FROM routes r INNER JOIN route_stations rs ON r.route_id = rs.route_id INNER JOIN stations s ON rs.station_id = s.station_id;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 NATO \uad6d\uac00\uc5d0 \ub300\ud55c \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE military_sales_nato (id INT, year INT, quarter INT, country VARCHAR(50), equipment_type VARCHAR(30), revenue DECIMAL(10,2));", "output": "SELECT year, quarter, AVG(revenue) as avg_revenue FROM military_sales_nato WHERE country IN ('France', 'Germany', 'Italy', 'Spain', 'United Kingdom', 'United States') GROUP BY year, quarter ORDER BY year, quarter;"}
{"input": " 2022\ub144\uc5d0\ub294 \ubaa9\uc7ac \uc0dd\uc0b0 \uae30\ub85d\uc774 \uba87 \uac1c\ub098 \uc0bd\uc785\ub410\ub098\uc694?", "context": "CREATE TABLE timber_production (id INT, year INT, volume FLOAT); INSERT INTO timber_production (id, year, volume) VALUES (1, 2020, 1200.5), (2, 2021, 1500.7), (3, 2022, 1700.3);", "output": "SELECT COUNT(*) FROM timber_production WHERE year = 2022;"}
{"input": " '\ubaa8\uc2a4\ud06c\ubc14'\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4 \ud074\ub9ad \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ud638\ud154\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE virtual_tours (hotel_id INT, views INT, clicks INT); CREATE TABLE hotels_geo (id INT PRIMARY KEY, hotel_id INT, city VARCHAR(255));", "output": "SELECT h.name, MAX(v.clicks) FROM hotels h JOIN virtual_tours v ON h.id = v.hotel_id JOIN hotels_geo hg ON h.id = hg.hotel_id WHERE h.city = 'Moscow' GROUP BY h.name;"}
{"input": " \ube44\uac74 \uba54\ub274\uc758 \uc8fc\uac04 \ub9e4\ucd9c \ub3d9\ud5a5\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE menu_sales(menu_item VARCHAR(50), sale_date DATE, sales INT, type VARCHAR(10)); INSERT INTO menu_sales VALUES ('Burger', '2022-01-01', 50, 'non-veg'), ('Pizza', '2022-01-01', 30, 'veg'), ('Salad', '2022-01-01', 20, 'veg'), ('Burger', '2022-01-02', 60, 'non-veg'), ('Pizza', '2022-01-02', 40, 'veg'), ('Salad', '2022-01-02', 30, 'veg');", "output": "SELECT sale_date, type, SUM(sales) AS total_sales, ROW_NUMBER() OVER (PARTITION BY type ORDER BY SUM(sales) DESC) AS ranking FROM menu_sales WHERE type = 'veg' GROUP BY sale_date, type ORDER BY sale_date, total_sales DESC;"}
{"input": " Cardano \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \uac1c\ubc1c\uc790\uc640 \uad00\ub828\ub41c \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE developers (developer_id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO developers (developer_id, name, country) VALUES (1, 'Alice', 'USA'), (2, 'Bob', 'China'); CREATE TABLE dapps (dapp_id INT, name VARCHAR(50), developer_id INT, network VARCHAR(50)); INSERT INTO dapps (dapp_id, name, developer_id) VALUES (1, 'DApp1', 1), (2, 'DApp2', 2); CREATE TABLE smart_contracts (contract_id INT, name VARCHAR(50), developer_id INT, network VARCHAR(50)); INSERT INTO smart_contracts (contract_id, name, developer_id) VALUES (1, 'SmartContract1', 1), (2, 'SmartContract2', 2);", "output": "SELECT developers.name, COUNT(dapps.dapp_id) as dapp_count, COUNT(smart_contracts.contract_id) as contract_count FROM developers LEFT JOIN dapps ON developers.developer_id = dapps.developer_id LEFT JOIN smart_contracts ON developers.developer_id = smart_contracts.developer_id WHERE dapps.network = 'Cardano' AND smart_contracts.network = 'Cardano' GROUP BY developers.name;"}
{"input": " \ubaa8\ub4e0 \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc0ac\uc6a9\ub41c \uc54c\uace0\ub9ac\uc998 \uc774\ub984\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CreativeAIs (app_name VARCHAR(255), algorithm_name VARCHAR(255)); INSERT INTO CreativeAIs (app_name, algorithm_name) VALUES ('ArtGen', 'StyleGAN'), ('MusicGen', 'WaveNet');", "output": "SELECT app_name, algorithm_name FROM CreativeAIs;"}
{"input": " \ud504\ub791\uc2a4\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ud3c9\uade0 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups (id INT, name TEXT, industry TEXT, funding_source TEXT, funding_amount FLOAT); INSERT INTO startups (id, name, industry, funding_source, funding_amount) VALUES (1, 'BioInnovate', 'Biotech', 'Angel Investor', 3500000.5);", "output": "SELECT AVG(funding_amount) FROM startups WHERE industry = 'Biotech' AND country = 'France';"}
{"input": " 2021\ub144 10\uc6d4 \ucd1d \uc8fc\ubb38 \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (customer_id INT, first_name VARCHAR(15), last_name VARCHAR(15)); CREATE TABLE Orders (order_id INT, customer_id INT, order_date DATE); CREATE TABLE Order_Items (order_item_id INT, order_id INT, menu_id INT, quantity INT); CREATE TABLE Menu (menu_id INT, menu_name VARCHAR(20), is_vegetarian BOOLEAN); CREATE TABLE Inventory (inventory_id INT, menu_id INT, inventory_cost FLOAT); INSERT INTO Customers (customer_id, first_name, last_name) VALUES (1, 'John', 'Doe'), (2, 'Jane', 'Doe'), (3, 'Bob', 'Smith'); INSERT INTO Orders (order_id, customer_id, order_date) VALUES (1, 1, '2021-10-01'), (2, 1, '2021-10-02'), (3, 2, '2021-10-03'), (4, 1, '2021-10-04'), (5, 3, '2021-10-05'); INSERT INTO Order_Items (order_item_id, order_id, menu_id, quantity) VALUES (1, 1, 1, 2), (2, 2, 2, 1), (3, 3, 3, 3), (4, 4, 1, 1), (5, 5, 4, 2); INSERT INTO Menu (menu_id, menu_name, is_vegetarian) VALUES (1, 'Breakfast', TRUE), (2, 'Lunch', FALSE), (3, 'Dinner', FALSE), (4, 'Dessert', FALSE); INSERT INTO Inventory (inventory_id, menu_id, inventory_cost) VALUES (1, 1, 5.0), (2, 2, 3.5), (3, 1, 8.0), (4, 3, 7.0), (5, 4, 4.0);", "output": "SELECT Customers.first_name, Customers.last_name, SUM(Inventory.inventory_cost * Order_Items.quantity) AS total_cost FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id INNER JOIN Menu ON Order_Items.menu_id = Menu.menu_id INNER JOIN Inventory ON Menu.menu_id = Inventory.menu_id WHERE MONTH(Orders.order_date) = 10 AND YEAR(Orders.order_date) = 2021 GROUP BY Customers.customer_id ORDER BY total_cost DESC;"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uacf5\uc815\ubb34\uc5ed \uc778\uc99d \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE products (product_id INT, name VARCHAR(100), price DECIMAL(5,2), certification VARCHAR(50)); INSERT INTO products (product_id, name, price, certification) VALUES (1, 'Organic Cotton T-Shirt', 25.99, 'Fair Trade'); INSERT INTO products (product_id, name, price, certification) VALUES (2, 'Recycled Tote Bag', 12.99, 'Fair Trade'); CREATE TABLE store (store_id INT, location VARCHAR(50), continent VARCHAR(50)); INSERT INTO store (store_id, location, continent) VALUES (1, 'Berlin Store', 'Europe'); INSERT INTO store (store_id, location, continent) VALUES (2, 'Paris Store', 'Europe'); CREATE TABLE sales (sale_id INT, product_id INT, store_id INT, quantity INT);", "output": "SELECT AVG(p.price) FROM products p JOIN sales s ON p.product_id = s.product_id JOIN store st ON s.store_id = st.store_id WHERE p.certification = 'Fair Trade' AND st.continent = 'Europe';"}
{"input": "2020\ub144 \uac01 \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uc7ac\ud65c\uc6a9 \uc18c\uc7ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0dd\uc0b0\ub41c \uc758\ub958\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RecycledGarments (manufacturer VARCHAR(255), garment_count INT, year INT);", "output": "SELECT manufacturer, SUM(garment_count) FROM RecycledGarments WHERE year = 2020 GROUP BY manufacturer;"}
{"input": " \uc5b4\ub5a4 \uceec\ub809\uc158\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc81c\ud488\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE collections (collection_name VARCHAR(20), product_type VARCHAR(20), price DECIMAL(5,2)); INSERT INTO collections (collection_name, product_type, price) VALUES ('spring22', 'shirt', 25.99), ('spring22', 'shirt', 30.99), ('spring22', 'pant', 40.00), ('fall21', 'shirt', 20.00), ('fall21', 'shirt', 25.00), ('fall21', 'pant', 30.00), ('fall21', 'jacket', 50.00);", "output": "SELECT collection_name, COUNT(*) FROM collections GROUP BY collection_name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " 2020\ub144\uc5d0 \ud638\uc8fc \uc815\ubd80\uc758 \uc5b4\ub290 \ubd80\uc11c\uc5d0\uc11c \uacf5\uac1c \ud68c\uc758\uac00 \uac00\uc7a5 \ub9ce\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE AustralianMeetings (Department VARCHAR(50), MeetingDate DATE); INSERT INTO AustralianMeetings (Department, MeetingDate) VALUES ('Environment', '2020-01-01'), ('Environment', '2020-02-03'), ('Education', '2020-01-15'), ('Education', '2020-02-10');", "output": "SELECT Department, MAX(COUNT(*)) OVER (PARTITION BY Department) FROM AustralianMeetings WHERE MeetingDate >= '2020-01-01' AND MeetingDate < '2021-01-01' GROUP BY Department;"}
{"input": " \ubaa8\ub4e0 \ub3c4\uc2dc\ub97c \ud574\ub2f9 \uc804\uae30 \uc790\ub3d9\ucc28 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE public.vehicles (id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO public.vehicles (id, type, city) VALUES (1, 'electric_car', 'San Francisco'), (2, 'conventional_car', 'San Francisco'), (3, 'electric_bus', 'Los Angeles'), (4, 'conventional_bus', 'Los Angeles'), (5, 'electric_car', 'New York');", "output": "SELECT city, COUNT(*) FROM public.vehicles WHERE type LIKE 'electric%' GROUP BY city;"}
{"input": " \ud558\ub8e8\uc5d0 \uae30\ub85d\ub41c \ucd5c\ub300 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VolunteerHours (HourID INT, VolunteerID INT, EventID INT, Hours INT, HourDate DATE); INSERT INTO VolunteerHours (HourID, VolunteerID, EventID, Hours, HourDate) VALUES (1, 1, 1, 5, '2022-01-01'), (2, 2, 1, 6, '2022-01-01');", "output": "SELECT MAX(Hours) FROM VolunteerHours WHERE VolunteerHours.HourDate = (SELECT MAX(HourDate) FROM VolunteerHours);"}
{"input": " \uac01 \uae30\ubd80 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694? \uadf8\ub9ac\uace0 \uadf8\ub4e4\uc740 \uc5bc\ub9c8\ub97c \uae30\ubd80\ud588\ub294\uac00?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(255)); CREATE TABLE DonationCategories (CategoryID INT, CategoryName VARCHAR(255)); CREATE TABLE Donations (DonationID INT, DonorID INT, CategoryID INT, DonationAmount DECIMAL(10, 2));", "output": "SELECT DonorID, CategoryID, DonorName, DonationCategory, SUM(DonationAmount) AS TotalDonated, RANK() OVER (PARTITION BY CategoryID ORDER BY SUM(DonationAmount) DESC) AS DonorRank FROM Donations JOIN Donors ON Donations.DonorID = Donors.DonorID JOIN DonationCategories ON Donations.CategoryID = DonationCategories.CategoryID GROUP BY DonorID, CategoryID, DonorName, DonationCategory;"}
{"input": " \ub0a8\ubbf8\uc5d0 \uc18c\uc7ac\ud55c \ub2e8\uccb4\uac00 \uae30\ubd80\ud55c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organizations (id INT, name TEXT, region TEXT, donation_amount DECIMAL); INSERT INTO organizations (id, name, region, donation_amount) VALUES (1, 'ABC Corp', 'South America', 300.00);", "output": "SELECT SUM(donation_amount) FROM organizations WHERE region = 'South America';"}
{"input": " \ud14d\uc0ac\uc2a4 \uac70\uc8fc\uc6a9 \uad11\ub300\uc5ed \uace0\uac1d\uc758 \uc6d4 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE residential_customers (customer_id INT, state VARCHAR(255), monthly_data_usage DECIMAL(5,2)); INSERT INTO residential_customers (customer_id, state, monthly_data_usage) VALUES (1, 'Texas', 50.5), (2, 'California', 60.3), (3, 'Texas', 45.8);", "output": "SELECT AVG(monthly_data_usage) FROM residential_customers WHERE state = 'Texas';"}
{"input": " 2020\ub144 \ucd1d \uae30\ubd80\uae08\uc561 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc774\uba70, \uadf8\ub4e4\uc774 \uae30\ubd80\ud55c \ucd1d\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE donors (id INT, name TEXT, donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donors (id, name, donation_amount, donation_date) VALUES (1, 'John Doe', 1000.00, '2020-01-05'); INSERT INTO donors (id, name, donation_amount, donation_date) VALUES (2, 'Jane Smith', 1500.00, '2020-03-12');", "output": "SELECT name, SUM(donation_amount) AS total_donation FROM donors WHERE donation_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY name ORDER BY total_donation DESC LIMIT 3;"}
{"input": " \uac01 \uc790\uc6d0\ubd09\uc0ac\uc790 \ubc0f \uc9c0\uc5ed\uc0ac\ud68c \uad6c\uc131\uc6d0\uc758 \uc601\ud5a5 \ud69f\uc218\uc640 \ud568\uaed8 \ubaa8\ub4e0 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Feed the Hungry'), (2, 'Tutoring'); CREATE TABLE VolunteerPrograms (VolunteerID INT, ProgramID INT); INSERT INTO VolunteerPrograms (VolunteerID, ProgramID) VALUES (1, 1), (1, 2), (2, 1), (2, 2); CREATE TABLE CommunityImpact (ImpactID INT, ProgramID INT, Impacted INT); INSERT INTO CommunityImpact (ImpactID, ProgramID, Impacted) VALUES (1, 1, 500), (2, 1, 1000), (3, 2, 800);", "output": "SELECT Programs.ProgramName, COUNT(DISTINCT VolunteerPrograms.VolunteerID) AS VolunteerCount, SUM(CommunityImpact.Impacted) AS CommunityImpactCount FROM Programs INNER JOIN VolunteerPrograms ON Programs.ProgramID = VolunteerPrograms.ProgramID INNER JOIN CommunityImpact ON Programs.ProgramID = CommunityImpact.ProgramID GROUP BY Programs.ProgramName;"}
{"input": " \ubca0\ub97c\ub9b0 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc758 \uac01 \ucc28\ub7c9 \uc720\ud615\uc5d0 \ub300\ud55c \uac00\uc7a5 \ube60\ub978 \ucd9c\ubc1c \uc2dc\uac04\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE berlin_transport (route_id INT, vehicle_type VARCHAR(10), departure_time TIME); INSERT INTO berlin_transport (route_id, vehicle_type, departure_time) VALUES (1, 'Bus', '06:00:00'), (1, 'Train', '06:30:00'), (2, 'Bus', '07:00:00'), (2, 'Train', '07:30:00');", "output": "SELECT vehicle_type, MIN(departure_time) FROM berlin_transport GROUP BY vehicle_type;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\uc131 \ub4f1\uae09\uc774 \uac00\uc7a5 \ub0ae\uc740 \uac74\ubb3c \uc2dd\ubcc4", "context": "CREATE TABLE green_buildings (id INT, name VARCHAR(50), location VARCHAR(50), area FLOAT, sustainability_rating INT);", "output": "SELECT name FROM green_buildings WHERE sustainability_rating = (SELECT MIN(sustainability_rating) FROM green_buildings);"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc758 \ucd1d \ubd80\ub3d9\uc0b0 \uc218\uc640 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Properties (id INT, price INT, state TEXT); INSERT INTO Properties (id, price, state) VALUES (1, 500000, 'California'), (2, 400000, 'California'), (3, 700000, 'Colorado'), (4, 600000, 'Texas');", "output": "SELECT COUNT(*) AS total_properties, AVG(price) AS avg_price FROM Properties WHERE state = 'California';"}
{"input": " 2020\ub144\uc758 \ubaa8\ub4e0 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uacfc \uc720\ud615\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Cyber_Strategies (strategy_id INT, strategy_name VARCHAR(50), strategy_year INT, strategy_type VARCHAR(50)); INSERT INTO Cyber_Strategies (strategy_id, strategy_name, strategy_year, strategy_type) VALUES (1, 'Cloud Security', 2020, 'Defensive'); INSERT INTO Cyber_Strategies (strategy_id, strategy_name, strategy_year, strategy_type) VALUES (2, 'AI-Powered Threat Detection', 2021, 'Offensive');", "output": "SELECT strategy_name, strategy_type FROM Cyber_Strategies WHERE strategy_year = 2020;"}
{"input": " \uac01 \uad6d\uac00\ubcc4 \ud558\uc774\ube0c\ub9ac\ub4dc \ucc28\ub7c9\uc758 \ucd5c\ub300 \uc548\uc804 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicles (Id INT, Name VARCHAR(100), Type VARCHAR(50), SafetyRating FLOAT, Country VARCHAR(100)); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (1, 'Prius', 'Hybrid', 5.0, 'Japan'); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (2, 'Volvo XC90', 'Hybrid', 4.9, 'Sweden'); INSERT INTO Vehicles (Id, Name, Type, SafetyRating, Country) VALUES (3, 'i3', 'Hybrid', 4.7, 'Germany');", "output": "SELECT Country, MAX(SafetyRating) FROM Vehicles WHERE Type = 'Hybrid' GROUP BY Country;"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \uc5c6\ub294 \uc870\uc9c1\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE org_volunteer (org_id INT, vol_id INT); INSERT INTO org_volunteer (org_id, vol_id) VALUES (1, 1), (1, 2), (2, 3), (3, 4), (3, 5);", "output": "SELECT org_id FROM organization WHERE org_id NOT IN (SELECT org_id FROM org_volunteer);"}
{"input": "_\uc7a5\ub974\uac00 \uc5c6\ub294 \uc544\ud2f0\uc2a4\ud2b8\ub97c \uc81c\uc678\ud558\uace0 Spotify, Apple Music\uc5d0\uc11c \ucd1d \uc2a4\ud2b8\ub9ac\ubc0d \uc218\uac00 \ub450 \ubc88\uc9f8\ub85c \ub9ce\uc740 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ucc3e\uc544\ubcf4\uc138\uc694._", "context": "CREATE TABLE song_streams (song_id INT, artist_id INT, platform VARCHAR(50), stream_count INT); INSERT INTO song_streams (song_id, artist_id, platform, stream_count) VALUES (1, 1, 'Spotify', 1000000), (2, 2, 'Apple Music', 1200000);", "output": "SELECT artist_id, stream_count FROM (SELECT artist_id, SUM(stream_count) AS stream_count FROM song_streams WHERE platform IN ('Spotify', 'Apple Music') GROUP BY artist_id ORDER BY stream_count DESC LIMIT 2) subquery WHERE artist_id != (SELECT artist_id FROM artists WHERE genre IS NULL);"}
{"input": " \ube44\uac74 \uc81c\ud488\uc5d0 \ub300\ud574 \ud310\ub9e4\ub41c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc744 \uacc4\uc0b0\ud558\uace0 \uacf5\uae09\uc5c5\uccb4 \uc774\ub984\ubcc4\ub85c \uadf8\ub8f9\ud654\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(255), price DECIMAL(5,2), is_vegan BOOLEAN); CREATE TABLE sales (id INT PRIMARY KEY, product_id INT, supplier_id INT, quantity INT, date DATE); CREATE VIEW sales_per_product AS SELECT sales.product_id, products.name, products.is_vegan, SUM(sales.quantity) as quantity_sold FROM sales JOIN products ON sales.product_id = products.id GROUP BY sales.product_id, products.name, products.is_vegan, sales.supplier_id;", "output": "SELECT sales_per_product.is_vegan as is_vegan_product, supplier_id, SUM(quantity_sold) as total_quantity_sold FROM sales_per_product WHERE is_vegan_product = true GROUP BY is_vegan_product, supplier_id;"}
{"input": " \uac01 \uc694\ub9ac \uc720\ud615\uc5d0 \ub300\ud55c \ucd1d \uc218\uc775 \ud45c\uc2dc", "context": "CREATE TABLE cuisine (id INT, type VARCHAR(255)); INSERT INTO cuisine (id, type) VALUES (1, 'Italian'), (2, 'Mexican'), (3, 'Chinese'); CREATE TABLE restaurant (id INT, name VARCHAR(255), cuisine_id INT); INSERT INTO restaurant (id, name, cuisine_id) VALUES (1, 'Pizzeria', 1), (2, 'Taco House', 2), (3, 'Wok Palace', 3); CREATE TABLE menu (id INT, item VARCHAR(255), price DECIMAL(5,2), daily_sales INT, restaurant_id INT);", "output": "SELECT c.type, SUM(m.price * m.daily_sales) as revenue FROM menu m JOIN restaurant r ON m.restaurant_id = r.id JOIN cuisine c ON r.cuisine_id = c.id GROUP BY c.type;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uc778\ubb38\ud559\ubd80 \uc5f0\uad6c\ube44\ub97c \ud1b5\ud574 \ub17c\ubb38\uc744 \ubc1c\ud45c\ud55c \ub300\ud559\uc6d0\uc0dd\uc758 \uc9c0\uc6d0\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE graduate_students (id INT, name VARCHAR(50), department VARCHAR(50)); CREATE TABLE research_grants (id INT, graduate_student_id INT, amount DECIMAL(10,2)); CREATE TABLE publications (id INT, graduate_student_id INT, publication_date DATE);", "output": "SELECT SUM(rg.amount) FROM research_grants rg JOIN graduate_students gs ON rg.graduate_student_id = gs.id JOIN publications p ON gs.id = p.graduate_student_id WHERE gs.department = 'Humanities' AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " \ud0dc\ud3c9\uc591 \ud574\uc591 \uc0dd\ubb3c\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (species_id INT, species_name VARCHAR(50), min_depth FLOAT, max_depth FLOAT, ocean VARCHAR(50)); INSERT INTO marine_species (species_id, species_name, min_depth, max_depth, ocean) VALUES (1, 'Spinner Dolphin', 250, 500, 'Pacific'), (2, 'Clownfish', 10, 30, 'Pacific'), (3, 'Shark', 100, 600, 'Atlantic');", "output": "SELECT AVG(avg_depth) FROM (SELECT (min_depth + max_depth) / 2 AS avg_depth FROM marine_species WHERE ocean = 'Pacific') AS subquery;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \ube0c\ub79c\ub4dc\uac00 \uc0ac\uc6a9\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ucd1d\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Brand_Sustainable_Material_Monthly(Brand_ID INT, Month DATE, Quantity INT); INSERT INTO Brand_Sustainable_Material_Monthly(Brand_ID, Month, Quantity) VALUES (1, '2022-01-01', 500), (1, '2022-01-02', 500), (1, '2022-02-01', 600), (2, '2022-01-01', 600), (2, '2022-01-02', 600), (2, '2022-02-01', 700);", "output": "SELECT Brand_ID, SUM(Quantity) as Total_Quantity FROM Brand_Sustainable_Material_Monthly WHERE Month >= DATEADD(MONTH, -1, GETDATE()) GROUP BY Brand_ID;"}
{"input": " \ud0dc\uad6d\uacfc \ub9d0\ub808\uc774\uc2dc\uc544\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \ud328\ud0a4\uc9c0\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_tours_th_my (package_id INT, package_name VARCHAR(255), country VARCHAR(255), available INT); INSERT INTO sustainable_tours_th_my (package_id, package_name, country, available) VALUES (1, 'Sustainable Tour Chiang Mai', 'Thailand', 20); INSERT INTO sustainable_tours_th_my (package_id, package_name, country, available) VALUES (2, 'Sustainable Tour Kuala Lumpur', 'Malaysia', 30); INSERT INTO sustainable_tours_th_my (package_id, package_name, country, available) VALUES (3, 'Sustainable Tour Bangkok', 'Thailand', 25); INSERT INTO sustainable_tours_th_my (package_id, package_name, country, available) VALUES (4, 'Sustainable Tour Penang', 'Malaysia', 35);", "output": "SELECT country, SUM(available) FROM sustainable_tours_th_my GROUP BY country;"}
{"input": " \ucd1d\ub9e4\ucd9c\uc561 \uae30\uc900\uc73c\ub85c \uc758\uc57d\ud488\ubcc4 \ucd1d\ub9e4\ucd9c\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DrugSales (DrugName varchar(50), SalesRepID int, SalesDate date, TotalSalesRev decimal(18,2)); INSERT INTO DrugSales (DrugName, SalesRepID, SalesDate, TotalSalesRev) VALUES ('DrugI', 1, '2021-03-15', 50000.00), ('DrugJ', 2, '2021-02-01', 75000.00), ('DrugK', 3, '2021-01-25', 62000.00), ('DrugL', 4, '2021-04-02', 85000.00);", "output": "SELECT DrugName, TotalSalesRev, ROW_NUMBER() OVER (ORDER BY TotalSalesRev DESC) as SalesRank FROM (SELECT DrugName, SUM(TotalSalesRev) as TotalSalesRev FROM DrugSales GROUP BY DrugName) as TotalSales;"}
{"input": " \uc0b0\ud638\uc0bc\uac01\uc9c0 \uc9c0\uc5ed\uc5d0\uc11c \ubcf4\uc874 \uc6b0\uc120\uc21c\uc704\uac00 \uac00\uc7a5 \ub192\uc740 \ud574\uc591 \uc0dd\ubb3c 3\uc885\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE species (name VARCHAR(255), conservation_priority FLOAT, region VARCHAR(255)); INSERT INTO species (name, conservation_priority, region) VALUES ('Clownfish', 0.9, 'Coral Triangle'), ('Sea Turtle', 0.85, 'Coral Triangle'), ('Giant Clam', 0.8, 'Coral Triangle'), ('Dugong', 0.75, 'Coral Triangle'), ('Shark', 0.7, 'Coral Triangle'), ('Blue Whale', 0.65, 'North Pacific');", "output": "SELECT name, conservation_priority FROM (SELECT name, conservation_priority, ROW_NUMBER() OVER (ORDER BY conservation_priority DESC) as rn FROM species WHERE region = 'Coral Triangle') t WHERE rn <= 3;"}
{"input": " '\ub3c4\ucfc4'\uc5d0\uc11c \uac00\uc0c1 \ud22c\uc5b4 \uc870\ud68c\uc218\uac00 500\ud68c\ub97c \ub118\ub294 \ud638\ud154\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE hotels_geo (id INT PRIMARY KEY, hotel_id INT, city VARCHAR(255));", "output": "SELECT h.name FROM hotels h JOIN virtual_tours v ON h.id = v.hotel_id JOIN hotels_geo hg ON h.id = hg.hotel_id WHERE h.city = 'Tokyo' AND v.views > 500 GROUP BY h.name HAVING COUNT(*) > 1;"}
{"input": "\ubbf8\uad6d \uae30\ubd80\uc790\ub4e4\uc758 \ud504\ub85c\uadf8\ub7a8\ub2f9 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, donor_id INT, program_id INT, donation_amount DECIMAL, donation_date DATE);", "output": "SELECT programs.name as program_name, AVG(donations.donation_amount) as avg_donation_amount FROM donations INNER JOIN donors ON donations.donor_id = donors.id INNER JOIN programs ON donations.program_id = programs.id WHERE donors.country = 'US' GROUP BY programs.name;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac01 \uad6d\uac00\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emissions (country VARCHAR(255), year INT, co2_emission FLOAT);", "output": "SELECT country, SUM(co2_emission) OVER (PARTITION BY country)  FROM co2_emissions WHERE year BETWEEN 2020 AND 2022;"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed\uc758 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc5d0 \uadfc\ubb34\ud558\ub294 \uc8fc\uce58\uc758\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hospitals (name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), num_primary_care_physicians INT); INSERT INTO Hospitals (name, location, type, num_primary_care_physicians) VALUES ('Rural General Hospital', 'Springfield', 'Hospital', 50); CREATE TABLE Clinics (name VARCHAR(255), location VARCHAR(255), type VARCHAR(255), num_primary_care_physicians INT); INSERT INTO Clinics (name, location, type, num_primary_care_physicians) VALUES ('Rural Community Health Center', 'Oakwood', 'Clinic', 15);", "output": "SELECT SUM(num_primary_care_physicians) FROM Hospitals WHERE location LIKE '%rural%' UNION ALL SELECT SUM(num_primary_care_physicians) FROM Clinics WHERE location LIKE '%rural%';"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 Cyan Investments\uac00 \ubc1c\ud589\ud55c \ub179\uc0c9\ucc44\uad8c\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cyan_Investments (id INT, half INT, green_bonds_issued FLOAT); INSERT INTO Cyan_Investments (id, half, green_bonds_issued) VALUES (1, 1, 600000), (2, 2, 700000);", "output": "SELECT SUM(green_bonds_issued) FROM Cyan_Investments WHERE half = 1;"}
{"input": " \ubb3c\ub9ac\ud559\uacfc\uc758 \ub17c\ubc14\uc774\ub108\ub9ac \uad50\uc218\uc9c4\uc774 \ubc1b\uc740 \uc5f0\uad6c \ubcf4\uc870\uae08\uc758 \ud3c9\uade0 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE faculty (id INT, name VARCHAR(100), department VARCHAR(50), gender VARCHAR(50)); INSERT INTO faculty VALUES (1, 'Alex Smith', 'Physics', 'Non-binary');", "output": "SELECT AVG(number_of_grants) FROM (SELECT faculty.gender, COUNT(grants.id) AS number_of_grants FROM faculty JOIN grants ON faculty.id = grants.faculty_id WHERE faculty.department = 'Physics' AND faculty.gender = 'Non-binary' GROUP BY faculty.id) AS subquery;"}
{"input": " 2023\ub144 2\uc6d4 \ud68c\uc6d0\ubcc4 \ud3c9\uade0 \uc6b4\ub3d9 \uc138\uc158 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE members (member_id INT, name VARCHAR(50), gender VARCHAR(10), dob DATE); INSERT INTO members (member_id, name, gender, dob) VALUES (1, 'Nina Patel', 'Female', '1998-06-17'); INSERT INTO members (member_id, name, gender, dob) VALUES (2, 'Osman Mohamed', 'Male', '2003-02-25'); CREATE TABLE workout_sessions (session_id INT, member_id INT, session_date DATE, duration INT); INSERT INTO workout_sessions (session_id, member_id, session_date, duration) VALUES (1, 1, '2023-02-02', 45); INSERT INTO workout_sessions (session_id, member_id, session_date, duration) VALUES (2, 1, '2023-02-05', 60); INSERT INTO workout_sessions (session_id, member_id, session_date, duration) VALUES (3, 2, '2023-02-07', 75); INSERT INTO workout_sessions (session_id, member_id, session_date, duration) VALUES (4, 1, '2023-02-13', 30);", "output": "SELECT member_id, AVG(duration) AS avg_duration_feb_2023 FROM workout_sessions WHERE MONTH(session_date) = 2 AND YEAR(session_date) = 2023 GROUP BY member_id;"}
{"input": " \ubaa8\ub4e0 \ub18d\uad6c \uacbd\uae30\uc758 \ud2f0\ucf13 \uac00\uaca9\uc744 \ud604\uc7ac \uac00\uaca9\ubcf4\ub2e4 10% \ub192\uac8c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Games (GameID INT, SportID INT, TicketPrice DECIMAL(5,2));", "output": "UPDATE Games SET TicketPrice = TicketPrice * 1.10 WHERE SportID = (SELECT SportID FROM Sports WHERE Sport = 'Basketball');"}
{"input": " 'EU_West' \uc9c0\uc5ed \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uac8c\uc784 \ud50c\ub808\uc774 \uc2dc\uac04 \ucc3e\uae30", "context": "CREATE TABLE players (player_id INT, region VARCHAR(10)); CREATE TABLE game_sessions (session_id INT, player_id INT, duration FLOAT, PRIMARY KEY (session_id), FOREIGN KEY (player_id) REFERENCES players(player_id)); INSERT INTO players (player_id, region) VALUES (1, 'EU_West'), (2, 'NA_East'); INSERT INTO game_sessions (session_id, player_id, duration) VALUES (1, 1, 60.5), (2, 1, 45.3), (3, 2, 30.7), (4, 2, 75.2);", "output": "SELECT AVG(duration) FROM game_sessions WHERE player_id IN (SELECT player_id FROM players WHERE region = 'EU_West');"}
{"input": " \ud3ec\uc720\ub958\uc758 \uc218\ub97c \uc138\uc5b4\ubcf4\uc138\uc694", "context": "CREATE TABLE animals (id INT PRIMARY KEY, name VARCHAR(50), species VARCHAR(50), population INT); INSERT INTO animals (id, name, species, population) VALUES (1, 'Giraffe', 'Mammal', 500); CREATE VIEW mammals AS SELECT * FROM animals WHERE species = 'Mammal';", "output": "SELECT COUNT(*) FROM mammals;"}
{"input": " \uac01 \uc81c\uc870\uc5c5\uccb4\uac00 \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ubc1c\uc0ac\ud55c \uc704\uc131\uc758 \uc774\ub984\uacfc \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE manufacturers (id INT, name TEXT); CREATE TABLE satellites (id INT, manufacturer_id INT, name TEXT, launch_date DATE); INSERT INTO manufacturers (id, name) VALUES (1, 'SpaceX'), (2, 'Blue Origin'), (3, 'ULA'); INSERT INTO satellites (id, manufacturer_id, name, launch_date) VALUES (1, 1, 'StarDragon', '2012-05-25'), (2, 1, 'Falcon', '2015-12-21'), (3, 2, 'New Glenn', '2022-01-11'), (4, 3, 'Atlas V', '2019-12-20');", "output": "SELECT m.name, s.name, s.launch_date FROM satellites s JOIN manufacturers m ON s.manufacturer_id = m.id JOIN (SELECT manufacturer_id, MAX(launch_date) AS max_date FROM satellites GROUP BY manufacturer_id) sub ON s.manufacturer_id = sub.manufacturer_id AND s.launch_date = sub.max_date;"}
{"input": "\uc791\ub144\uc5d0 \ud2b9\uc815 \uace0\uac1d\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uac70\ub798\uc758 \ucd1d \uac00\uce58\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customer_transactions (transaction_id INT, customer_id INT, transaction_date DATE, transaction_value DECIMAL(10, 2)); INSERT INTO customer_transactions (transaction_id, customer_id, transaction_date, transaction_value) VALUES (1, 1, '2022-01-01', 100.00), (2, 1, '2022-02-01', 200.00), (3, 2, '2022-03-01', 150.00), (4, 1, '2022-04-01', 300.00);", "output": "SELECT SUM(transaction_value) FROM customer_transactions WHERE customer_id = 1 AND transaction_date >= DATE_SUB(NOW(), INTERVAL 1 YEAR);"}
{"input": " \ubbf8\uad6d\uc774 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \ubd84\uc57c\uc5d0 \ud22c\uc785\ud55c \uae30\ud6c4 \uc7ac\uc815\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_finance (id INT, committer VARCHAR(255), committed_amount DECIMAL(10,2), commit_year INT, sector VARCHAR(255));", "output": "SELECT SUM(committed_amount) FROM climate_finance WHERE committer = 'United States' AND sector = 'climate communication';"}
{"input": " \uc7ac\uc815\uc801 \uc601\ud5a5\uc774 \uac00\uc7a5 \ud070 \uc0c1\uc704 5\uac1c AI \uc548\uc804 \uc0ac\uace0\ub97c \uc7ac\uc815\uc801 \uc601\ud5a5\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE IncidentFinancials (incident_id INT, financial_impact DECIMAL(10,2)); INSERT INTO IncidentFinancials (incident_id, financial_impact) VALUES (1, 10000.00), (2, 5000.00), (3, 25000.00), (4, 15000.00), (5, 7500.00), (6, 3000.00), (7, 20000.00), (8, 12000.00), (9, 8000.00), (10, 4000.00);", "output": "SELECT incident_id, financial_impact FROM (SELECT incident_id, financial_impact, ROW_NUMBER() OVER (ORDER BY financial_impact DESC) as rank FROM IncidentFinancials) subquery WHERE rank <= 5;"}
{"input": " \ud654\ubb3c \uc720\ud615\ubcc4 \ud3c9\uade0 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cargo_details (cargo_id INT, cargo_type VARCHAR(50), cargo_weight INT); INSERT INTO cargo_details VALUES (1, 'CargoD', 1200), (2, 'CargoD', 1400), (3, 'CargoE', 1600), (4, 'CargoE', 1700), (5, 'CargoF', 1900);", "output": "SELECT cargo_type, AVG(cargo_weight) FROM cargo_details GROUP BY cargo_type;"}
{"input": " \ubbf8\uad6d\uc758 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, program TEXT, country TEXT, donation_amount DECIMAL(10, 2)); INSERT INTO donations VALUES (1, 'Education', 'USA', 200.00), (2, 'Healthcare', 'USA', 300.00), (3, 'Environment', 'Canada', 400.00);", "output": "SELECT program, SUM(donation_amount) FROM donations WHERE country = 'USA' GROUP BY program;"}
{"input": "2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc77c\ubcf8\uc758 \uac01 \uc720\uc801\uc9c0\uc5d0 \ub300\ud55c \ubc29\ubb38\uac1d \uc218\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE heritage_sites_japan (id INT, country VARCHAR(50), name VARCHAR(100), year INT, visitor_count INT); INSERT INTO heritage_sites_japan (id, country, name, year, visitor_count) VALUES (1, 'Japan', 'Site A', 2019, 1000), (2, 'Japan', 'Site A', 2020, 800), (3, 'Japan', 'Site B', 2019, 2000), (4, 'Japan', 'Site B', 2020, 1500);", "output": "SELECT name, (visitor_count - LAG(visitor_count, 1) OVER (PARTITION BY name ORDER BY year)) AS diff FROM heritage_sites_japan WHERE country = 'Japan';"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \ud1b5\ud654\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uba85\uc758 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, country VARCHAR(50), calls INT); INSERT INTO mobile_subscribers (subscriber_id, country, calls) VALUES (1, 'USA', 200), (2, 'Canada', 300), (3, 'Mexico', 150), (4, 'Brazil', 400), (5, 'USA', 500), (6, 'Canada', 600), (7, 'Germany', 250), (8, 'France', 350); CREATE TABLE country_codes (country VARCHAR(50), code CHAR(2)); INSERT INTO country_codes (country, code) VALUES ('USA', 'US'), ('Canada', 'CA'), ('Mexico', 'MX'), ('Brazil', 'BR'), ('Germany', 'DE'), ('France', 'FR');", "output": "SELECT ms1.country, ms1.subscriber_id, ms1.calls FROM mobile_subscribers ms1 JOIN ( SELECT country, SUBSTRING(GROUP_CONCAT(subscriber_id ORDER BY calls DESC), 1, 2) AS top_subscribers FROM mobile_subscribers GROUP BY country ) ms2 ON ms1.country = ms2.country AND FIND_IN_SET(ms1.subscriber_id, ms2.top_subscribers) ORDER BY ms1.country;"}
{"input": " \uc131\uc801\uc774 \uac00\uc7a5 \uc88b\uc740 \ud300\uacfc \uc131\uc801\uc774 \uac00\uc7a5 \ub098\uc05c \ud300\uc758 \ud3c9\uade0 \ud2f0\ucf13 \ud310\ub9e4\ub7c9 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(255)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Knights'), (2, 'Lions'), (3, 'Titans'); CREATE TABLE events (event_id INT, team_id INT, num_tickets_sold INT, total_seats INT); INSERT INTO events (event_id, team_id, num_tickets_sold, total_seats) VALUES (1, 1, 500, 1000), (2, 1, 700, 1000), (3, 2, 600, 1200), (4, 3, 800, 1500), (5, 3, 900, 1500);", "output": "SELECT AVG(e1.num_tickets_sold) - AVG(e2.num_tickets_sold) as difference_in_avg_tickets_sold FROM events e1, events e2 WHERE e1.team_id = (SELECT team_id FROM teams t JOIN events e ON t.team_id = e.team_id GROUP BY e.team_id ORDER BY AVG(e.num_tickets_sold) DESC LIMIT 1) AND e2.team_id = (SELECT team_id FROM teams t JOIN events e ON t.team_id = e.team_id GROUP BY e.team_id ORDER BY AVG(e.num_tickets_sold) ASC LIMIT 1);"}
{"input": " 2021\ub144 2\ubd84\uae30 \uad6d\uac00\ubcc4 \ud3c9\uade0 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RecyclingRates (rate_id INT, country VARCHAR(255), quarter DATE, recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingRates (rate_id, country, quarter, recycling_rate) VALUES (1, 'US', '2021-04-01', 0.35), (2, 'Canada', '2021-04-01', 0.40), (3, 'Mexico', '2021-04-01', 0.38), (4, 'Brazil', '2021-04-01', 0.42);", "output": "SELECT country, AVG(recycling_rate) FROM RecyclingRates WHERE quarter = '2021-04-01' GROUP BY country;"}
{"input": " 'Smith'\ub77c\ub294 \uc131\uc744 \uac00\uc9c4 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud558\ub294 \uc0ac\uac74\uc758 \ud3c9\uade0 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name TEXT); CREATE TABLE cases (case_id INT, attorney_id INT);", "output": "SELECT AVG(count) FROM (SELECT COUNT(*) as count FROM cases INNER JOIN attorneys ON cases.attorney_id = attorneys.attorney_id WHERE attorneys.name LIKE '%Smith%' GROUP BY attorneys.attorney_id) as subquery;"}
{"input": " \uc778\uad6c\uac00 500,000\uba85\uc774 \ub118\ub294 \ub3c4\uc2dc \uc9c0\uc5ed \uc18c\ubc29\uc11c\uc758 \ud3c9\uade0 \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fire_departments (id INT, department_name VARCHAR(50), location VARCHAR(50), population INT, average_response_time FLOAT);", "output": "SELECT AVG(average_response_time) FROM fire_departments WHERE population > 500000 AND location = 'urban';"}
{"input": " 1970\ub144 \uc774\uc804\uc5d0 \uac74\uc124\ub41c \uc911\uc11c\ubd80 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \uad50\ub7c9\uacfc \ud574\ub2f9 \uc720\uc9c0 \uad00\ub9ac \uc77c\uc815\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE bridges (id INT PRIMARY KEY, bridge_name VARCHAR(255), year_built INT, region VARCHAR(255), last_maintenance_date DATE); INSERT INTO bridges (id, bridge_name, year_built, region, last_maintenance_date) VALUES (1, 'Bridge A', 1965, 'Midwest', '2022-01-01'); INSERT INTO bridges (id, bridge_name, year_built, region, last_maintenance_date) VALUES (2, 'Bridge B', 1980, 'Midwest', '2023-01-01');", "output": "SELECT bridge_name, year_built, last_maintenance_date FROM bridges WHERE region = 'Midwest' AND year_built < 1970;"}
{"input": " \uc9c0\uc5ed\ubcc4 \uacf5\uac1c\uad50\uc721\ud559 \uac15\uc88c\uc5d0 \ub300\ud55c \ud3c9\uade0 \ub9cc\uc871\ub3c4\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE courses (course_id INT, course_name VARCHAR(50), course_type VARCHAR(15), region_code CHAR(2)); INSERT INTO courses VALUES (1, 'Introduction to Programming', 'open', 'NE'), (2, 'Data Science for All', 'open', 'SE'), (3, 'Calculus I', 'traditional', 'NW'); CREATE TABLE enrollments (enrollment_id INT, course_id INT, student_id INT, satisfaction_rating INT, region_code CHAR(2)); INSERT INTO enrollments VALUES (1, 1, 1, 9, 'NE'), (2, 2, 2, 8, 'SE'), (3, 3, 3, 7, 'NW'); CREATE TABLE regions (region_code CHAR(2), region_name VARCHAR(50)); INSERT INTO regions VALUES ('NE', 'Northeast'), ('SE', 'Southeast'), ('NW', 'Northwest'), ('SW', 'Southwest');", "output": "SELECT r.region_name, AVG(e.satisfaction_rating) AS avg_satisfaction FROM courses c JOIN enrollments e ON c.course_id = e.course_id JOIN regions r ON c.region_code = r.region_code WHERE c.course_type = 'open' GROUP BY r.region_name;"}
{"input": " \uc5b8\uc5b4\ubcc4 \uae30\uc0ac\uc758 \ud3c9\uade0 \ub2e8\uc5b4 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(255), language VARCHAR(255), word_count INT); INSERT INTO articles (id, title, language, word_count) VALUES (1, 'Article1', 'English', 500), (2, 'Article2', 'French', 700), (3, 'Article3', 'Spanish', 600);", "output": "SELECT language, AVG(word_count) as avg_word_count FROM articles GROUP BY language;"}
{"input": " 2021\ub144 \ucd1d \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\uc640 \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE country_donations (country_id INT, country_name VARCHAR(50), total_donations DECIMAL(10,2), donation_year INT, avg_donation DECIMAL(10,2)); INSERT INTO country_donations (country_id, country_name, total_donations, donation_year, avg_donation) VALUES (1, 'USA', 50000.00, 2021, 100.00), (2, 'Canada', 40000.00, 2021, 200.00), (3, 'Mexico', 30000.00, 2021, 150.00);", "output": "SELECT donation_year, country_name, total_donations, AVG(avg_donation) avg_donation, RANK() OVER (ORDER BY total_donations DESC) country_rank FROM country_donations WHERE donation_year = 2021 AND country_rank <= 2 GROUP BY donation_year, country_name, total_donations;"}
{"input": " \uc778\uad6c 10\ub9cc\uba85\ub2f9 \ud3c9\uade0 \uc18c\uc544\uacfc \uc758\uc0ac \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE medical_staff (name PRIMARY KEY, specialty VARCHAR(50), state VARCHAR(20), population INT); INSERT INTO medical_staff (name, specialty, state, population) VALUES ('Dr. A', 'Pediatrics', 'California', 1000000), ('Dr. B', 'Cardiology', 'California', 1000000), ('Dr. C', 'Pediatrics', 'New York', 2000000), ('Dr. D', 'Oncology', 'New York', 2000000);", "output": "SELECT AVG(s.num_pediatricians_per_100k) FROM (SELECT states.name, (COUNT(medical_staff.name) / (states.population / 100000)) AS num_pediatricians_per_100k FROM medical_staff JOIN states ON medical_staff.state = states.name WHERE medical_staff.specialty = 'Pediatrics' GROUP BY states.name) AS s;"}
{"input": " '\uc5b4\ub9b0\uc774 \ud504\ub85c\uadf8\ub7a8'\uc5d0\uc11c 18\uc138 \ubbf8\ub9cc \ucc38\uc11d\uc790\uc758 \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE Attendance (attendance_id INT PRIMARY KEY, attendee_id INT, attendee_age INT, event_id INT);", "output": "DELETE FROM Attendance WHERE attendee_age < 18 AND event_id IN (SELECT event_id FROM Events WHERE program = 'Children''s Program');"}
{"input": " \uc77c\uc8fc\uc77c \uc911 \ubc15\ubb3c\uad00 \ubc29\ubb38\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc558\ub358 \uc694\uc77c\uc740 \uc5b8\uc81c\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE museum_visits (visit_id INT, visit_date DATE, num_visitors INT); INSERT INTO museum_visits (visit_id, visit_date, num_visitors) VALUES (1, '2022-06-01', 500), (2, '2022-06-02', 600), (3, '2022-06-03', 700), (4, '2022-06-04', 800), (5, '2022-06-05', 550), (6, '2022-06-06', 400), (7, '2022-06-07', 350);", "output": "SELECT visit_date, num_visitors FROM museum_visits WHERE num_visitors = (SELECT MAX(num_visitors) FROM museum_visits);"}
{"input": " \ubd80\uc11c\ubcc4\ub85c \uc5ec\uc131\uc73c\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE employee_data (employee_id INT, first_name VARCHAR(50), last_name VARCHAR(50), department_name VARCHAR(50), gender VARCHAR(10)); INSERT INTO employee_data (employee_id, first_name, last_name, department_name, gender) VALUES (1, 'Jane', 'Smith', 'Engineering', 'Female'), (2, 'John', 'Doe', 'Engineering', 'Male'), (3, 'Jessica', 'Johnson', 'Human Resources', 'Female'), (4, 'Michael', 'Brown', 'Human Resources', 'Male'), (5, 'David', 'Williams', 'Operations', 'Male'), (6, 'Sarah', 'Jones', 'Operations', 'Female');", "output": "SELECT department_name, COUNT(*) as female_employee_count FROM employee_data WHERE gender = 'Female' GROUP BY department_name;"}
{"input": " 2020\ub144 'CityA'\uc5d0\uc11c \ubcf4\uac74 \ubc0f \uad50\uc721 \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CityA_Budget (Year INT, Service VARCHAR(20), Budget FLOAT); INSERT INTO CityA_Budget (Year, Service, Budget) VALUES (2020, 'Health', 5000000), (2020, 'Education', 7000000);", "output": "SELECT SUM(Budget) FROM CityA_Budget WHERE Year = 2020 AND Service IN ('Health', 'Education');"}
{"input": " \uc9c0\ub09c \ub2ec \ubbf8\uad6d\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (ID INT, Name VARCHAR(255), Speed FLOAT, Arrival DATETIME); INSERT INTO Vessels (ID, Name, Speed, Arrival) VALUES (1, 'Vessel1', 20.5, '2022-01-01 10:00:00'), (2, 'Vessel2', 25.3, '2022-01-15 14:30:00');", "output": "SELECT AVG(Speed) FROM (SELECT Speed, ROW_NUMBER() OVER (ORDER BY Arrival DESC) as RowNum FROM Vessels WHERE Arrival >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)) AS Sub WHERE RowNum <= 10;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec\uac04 \ucee4\ubba4\ub2c8\ud2f0 \uc544\ud2b8\uc13c\ud130\uc5d0 \uc2e0\uaddc \ud68c\uc6d0\uc73c\ub85c \uac00\uc785\ud55c \ud68c\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityArtCenter (memberID INT, joinDate DATE); INSERT INTO CommunityArtCenter (memberID, joinDate) VALUES (4, '2022-04-15'), (5, '2022-04-22'), (6, '2022-04-29');", "output": "SELECT COUNT(*) FROM CommunityArtCenter WHERE joinDate >= '2022-04-01' AND joinDate <= '2022-04-30';"}
{"input": " \uc790\uc7ac\ubcc4\ub85c \uc815\ub82c\ud558\uba74 \uc911\uc11c\ubd80\uc758 \uac74\ucd95 \uc790\uc7ac \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Midwest_Materials (location VARCHAR(20), material VARCHAR(30), cost FLOAT, order_date DATE); INSERT INTO Midwest_Materials VALUES ('WI', 'Concrete', 1500, '2022-01-05'), ('IL', 'Cement', 800, '2022-02-10'), ('MI', 'Insulation', 600, '2022-03-15');", "output": "SELECT material, SUM(cost) OVER (PARTITION BY material ORDER BY material) as total_cost FROM Midwest_Materials;"}
{"input": " 2021\ub144 \ubbf8\uad6d \ubc29\ubb38\uac1d\uc5d0\uac8c \ub274\uc695\uc744 \uc81c\uc678\ud558\uace0 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc5ec\ud589\uc9c0\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE TravelStats (VisitorID INT, Destination VARCHAR(20), VisitYear INT); INSERT INTO TravelStats (VisitorID, Destination, VisitYear) VALUES (1, 'New York', 2021), (2, 'London', 2021), (3, 'Paris', 2021), (4, 'New York', 2021);", "output": "SELECT Destination, COUNT(*) AS Popularity FROM TravelStats WHERE VisitYear = 2021 AND Destination != 'New York' GROUP BY Destination ORDER BY Popularity DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ub178\ub3d9\uc870\ud569\ub2f9 \uc0b0\uc5c5\uc7ac\ud574 \uac74\uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE UnionSafety (UnionID INT, IncidentDate DATE, IncidentType VARCHAR(20)); INSERT INTO UnionSafety (UnionID, IncidentDate, IncidentType) VALUES (1001, '2021-02-12', 'Chemical Spill'); INSERT INTO UnionSafety (UnionID, IncidentDate, IncidentType) VALUES (1002, '2021-04-03', 'Electrical Shock');", "output": "SELECT UnionID, COUNT(*) as IncidentCount FROM UnionSafety WHERE IncidentDate >= DATEADD(month, -6, GETDATE()) GROUP BY UnionID ORDER BY IncidentCount DESC;"}
{"input": " \ub274\uc695\uc2dc \uac01 \uc790\uce58\uad6c\uc758 \uad50\ud1b5\uc0ac\uace0 \ubc0f \uac74\ubb3c \ud654\uc7ac \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE traffic_accidents (id INT, borough VARCHAR(20), date DATE);CREATE TABLE building_fires (id INT, borough VARCHAR(20), date DATE);", "output": "SELECT 'traffic_accidents' AS metric, borough, COUNT(*) FROM traffic_accidents GROUP BY borough UNION ALL SELECT 'building_fires' AS metric, borough, COUNT(*) FROM building_fires GROUP BY borough;"}
{"input": "\uad6d\ubc29\uc678\uad50 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uc9c0\uc5ed\uc758 \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \uad6d\ubc29\uc678\uad50 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE defense_diplomacy_spending (region VARCHAR(50), spending INT); INSERT INTO defense_diplomacy_spending (region, spending) VALUES ('North America', 7000000), ('Europe', 6000000), ('Asia', 5000000), ('Africa', 4000000), ('South America', 3000000);", "output": "SELECT AVG(dds.spending) as avg_spending FROM (SELECT * FROM defense_diplomacy_spending ORDER BY spending DESC LIMIT 2) dds;"}
{"input": " \uae30\uc220\ubd80\uc5d0\uc11c \uc804\uc561 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \ub0a8\uc790 \ub300\ud559\uc6d0\uc0dd\uc758 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE graduate_student (id INT, name VARCHAR(50), gender VARCHAR(10), division VARCHAR(30), funding FLOAT); INSERT INTO graduate_student (id, name, gender, division, funding) VALUES (1, 'Qasim', 'Male', 'Technology', 100000.00), (2, 'Raya', 'Female', 'Technology', 0.00);", "output": "SELECT COUNT(*) FROM graduate_student WHERE gender = 'Male' AND division = 'Technology' AND funding = 100000.00;"}
{"input": " 2020\ub144 \uae30\uc900\uc73c\ub85c \ubbf8\uad6d \ub124\ubc14\ub2e4\uc8fc\uc640 \ub274\uba55\uc2dc\ucf54\uc8fc\uc758 \uac01 \uad11\uc0b0\ud68c\uc0ac\uac00 \ucc44\uad74\ud55c \uad11\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_companies (company_id INT, company_name TEXT);CREATE TABLE mining_sites (site_id INT, site_name TEXT, state TEXT, country TEXT);CREATE TABLE mineral_extraction (extraction_id INT, site_id INT, extraction_year INT, tons_extracted INT);", "output": "SELECT c.company_name, SUM(me.tons_extracted) AS total_tons_extracted FROM mining_companies c INNER JOIN mining_sites s ON c.company_id = s.company_id INNER JOIN mineral_extraction me ON s.site_id = me.site_id WHERE s.state IN ('Nevada', 'New Mexico') AND me.extraction_year = 2020 GROUP BY c.company_id, c.company_name;"}
{"input": "\uac01 \ud559\uc0dd\uc758 \uccab \ubc88\uc9f8 \uce21\uc815\uacfc \ub9c8\uc9c0\ub9c9 \uce21\uc815 \uc0ac\uc774\uc758 \uc815\uc2e0 \uac74\uac15 \uc810\uc218 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health_measurements (student_id INT, date DATE, score INT);", "output": "SELECT student_id, FIRST_VALUE(score) OVER (PARTITION BY student_id ORDER BY date) - LAST_VALUE(score) OVER (PARTITION BY student_id ORDER BY date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as difference FROM student_mental_health_measurements;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \uacc4\uc57d\uc5c5\uccb4\uac00 \uad00\ub9ac\ud558\ub294 \ubc30\uad00 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uacc4\uc57d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Contractors (Id INT, Name VARCHAR(50), LicenseNumber VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Specialty VARCHAR(50)); CREATE TABLE ContractorProjects (ContractorId INT, ProjectId INT, ContractStartDate DATE, ContractEndDate DATE, ContractAmount DECIMAL(10,2)); CREATE TABLE Projects (Id INT, Name VARCHAR(50), City VARCHAR(50), StartDate DATE, EndDate DATE, Sustainable BOOLEAN);", "output": "SELECT AVG(cp.ContractAmount)  FROM ContractorProjects cp  JOIN Contractors c ON cp.ContractorId = c.Id  JOIN Projects p ON cp.ProjectId = p.Id  WHERE c.State = 'CA' AND c.LicenseNumber IS NOT NULL AND p.Specialty = 'Plumbing';"}
{"input": " 2021\ub144 '\ub3c4\ucfc4'\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubb38\ud654\ud589\uc0ac\uac00 \uc5f4\ub838\ub098\uc694?", "context": "CREATE TABLE events(id INT, city VARCHAR(255), year INT, num_events INT); INSERT INTO events (id, city, year, num_events) VALUES (1, 'Tokyo', 2021, 15), (2, 'Tokyo', 2022, 20), (3, 'Paris', 2021, 25);", "output": "SELECT SUM(num_events) FROM events WHERE city = 'Tokyo' AND year = 2021;"}
{"input": " \ud14d\uc0ac\uc2a4\uc8fc \uacf5\ubb34\uc6d0 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc774\uace0, \ubaa8\ub4dc \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE GovernmentEmployees (EmployeeID INT, Salary DECIMAL(10,2), State VARCHAR(100)); INSERT INTO GovernmentEmployees (EmployeeID, Salary, State) VALUES (1, 45000.00, 'Texas'), (2, 50000.00, 'Texas'), (3, 55000.00, 'Texas'), (4, 60000.00, 'Texas'), (5, 65000.00, 'Texas');", "output": "SELECT AVG(Salary) as AverageSalary, MAX(Salary) as ModeSalary FROM GovernmentEmployees WHERE State = 'Texas' GROUP BY Salary HAVING COUNT(*) > 1;"}
{"input": " \uac00\uc7a5 \ub192\uc740 \uae38\uc774\uc640 \uac00\uc7a5 \ub0ae\uc740 \uae38\uc774\uc758 \ud608\uad00\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE vessels (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50), length FLOAT, year_built INT);", "output": "SELECT name, length FROM (SELECT name, length, ROW_NUMBER() OVER (ORDER BY length DESC) AS rn, COUNT(*) OVER () AS cnt FROM vessels) tmp WHERE rn = 1 OR rn = cnt;"}
{"input": "JAXA\uc640 NASA\uac00 \uc218\uac70\ud55c \uc6b0\uc8fc \uc4f0\ub808\uae30\uc758 \ucd1d \uc9c8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_debris (id INT, name VARCHAR(255), collection_date DATE, collecting_agency VARCHAR(255), mass FLOAT); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (1, 'DEBRISSAT', '2025-06-12', 'JAXA', 230.5); INSERT INTO space_debris (id, name, collection_date, collecting_agency, mass) VALUES (2, 'STARS', '2030-12-21', 'NASA', 500.0); CREATE VIEW space_debris_jaxa AS SELECT * FROM space_debris WHERE collecting_agency = 'JAXA'; CREATE VIEW space_debris_nasa AS SELECT * FROM space_debris WHERE collecting_agency = 'NASA';", "output": "SELECT SUM(s.mass) as total_mass FROM space_debris s INNER JOIN space_debris_jaxa j ON s.id = j.id INNER JOIN space_debris_nasa n ON s.id = n.id;"}
{"input": " \uc9c0\ub09c 30\uc77c\uac04 \uc77c\uc77c \uc218\uc775 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE restaurant_revenue (date DATE, revenue DECIMAL(10,2)); INSERT INTO restaurant_revenue (date, revenue) VALUES ('2022-01-01', 1500.00), ('2022-01-02', 1700.00), ('2022-01-03', 2000.00), ('2022-01-04', 2200.00), ('2022-01-05', 2500.00);", "output": "SELECT date, revenue, LAG(revenue) OVER (ORDER BY date) as previous_day_revenue FROM restaurant_revenue;"}
{"input": " \uc0ac\ub9dd\uc790 \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Accidents (AccidentID INT, Date DATE, Location VARCHAR(50), Type VARCHAR(50), Injuries INT, Fatalities INT); INSERT INTO Accidents (AccidentID, Date, Location, Type, Injuries, Fatalities) VALUES (1, '2018-03-12', 'Texas', 'SpaceX', 3, 0), (2, '2019-04-20', 'California', 'Blue Origin', 0, 1), (3, '2020-05-29', 'Florida', 'SpaceX', 1, 0);", "output": "SELECT AccidentID, Date, Location, Type, Injuries, Fatalities, ROW_NUMBER() OVER (ORDER BY Fatalities DESC) AS Rank FROM Accidents;"}
{"input": " \uae34\uae09 \uc0ac\uac74 \ubc0f \ubc94\uc8c4 \uc2e0\uace0 \uc720\ud615\ubcc4 \ucd5c\uc18c \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_incidents (id INT, incident_type VARCHAR(255), response_time INT); INSERT INTO emergency_incidents (id, incident_type, response_time) VALUES (1, 'Medical Emergency', 10), (2, 'Fire', 8), (3, 'Traffic Accident', 12); CREATE TABLE crime_reports (id INT, report_type VARCHAR(255), response_time INT); INSERT INTO crime_reports (id, report_type, response_time) VALUES (1, 'Theft', 20), (2, 'Vandalism', 15), (3, 'Assault', 18);", "output": "SELECT incident_type, MIN(response_time) as min_response_time FROM emergency_incidents GROUP BY incident_type UNION SELECT report_type, MIN(response_time) as min_response_time FROM crime_reports GROUP BY report_type;"}
{"input": " \uc62c\ud574 \ub0a8\ubbf8 \uad6d\uac00\ub97c \ubc29\ubb38\ud55c \ud574\uc678 \ubc29\ubb38\uac1d \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE InternationalVisitors (id INT, country TEXT, visit_date DATE);", "output": "SELECT SUM(visits) FROM (SELECT COUNT(*) AS visits FROM InternationalVisitors WHERE country IN ('South America', 'Northern South America', 'Southern South America', 'Central South America', 'Western South America', 'Eastern South America') AND visit_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AS total;"}
{"input": " \ub3c5\ud2b9\ud55c \uc74c\uc545 \uc7a5\ub974\uc758 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uac00\uc7a5 \ub2e4\uc591\ud55c \uc804\ud1b5 \uc74c\uc545\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Music (MusicID INT, MusicName VARCHAR(255), Country VARCHAR(255), PRIMARY KEY (MusicID));", "output": "SELECT Country, COUNT(DISTINCT MusicName) AS UniqueGenres FROM Music WHERE Country IN ('Western Africa', 'Northern Africa', 'Southern Africa', 'Eastern Africa', 'Central Africa') GROUP BY Country ORDER BY UniqueGenres DESC LIMIT 5;"}
{"input": " \uac01 \uc9c0\uc5ed\uc758 \ubaa9\uc7ac \uc0dd\uc0b0\uc9c0\uc640 \uc57c\uc0dd\ub3d9\ubb3c \uc11c\uc2dd\uc9c0\uc758 \ucd1d \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE timber (id INT, name VARCHAR(255), area FLOAT, region_id INT); INSERT INTO timber (id, name, area, region_id) VALUES (1, 'Timber1', 123.45, 1); INSERT INTO timber (id, name, area, region_id) VALUES (2, 'Timber2', 234.56, 2); CREATE TABLE habitat (id INT, name VARCHAR(255), area FLOAT, region_id INT); INSERT INTO habitat (id, name, area, region_id) VALUES (1, 'Habitat1', 345.67, 1); INSERT INTO habitat (id, name, area, region_id) VALUES (2, 'Habitat2', 456.78, 2); CREATE TABLE region (id INT, name VARCHAR(255)); INSERT INTO region (id, name) VALUES (1, 'Region1'); INSERT INTO region (id, name) VALUES (2, 'Region2');", "output": "SELECT r.name, SUM(t.area) + SUM(h.area) FROM timber t JOIN habitat h ON t.region_id = h.region_id JOIN region r ON t.region_id = r.id GROUP BY r.name;"}
{"input": "\uc2dc\uc560\ud2c0 \uc720\uae30\ub18d' \ub808\uc2a4\ud1a0\ub791\uc758 2022\ub144 1\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc2dd\uc0ac \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud55c \uc2dd\uc0ac\ub2f9 \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc12d\ucde8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE restaurant_meals (restaurant_name TEXT, meal_type TEXT, calories INTEGER, meal_date DATE); INSERT INTO restaurant_meals (restaurant_name, meal_type, calories, meal_date) VALUES ('Seattle Organic', 'Breakfast', 550, '2022-01-01'); INSERT INTO restaurant_meals (restaurant_name, meal_type, calories, meal_date) VALUES ('Seattle Organic', 'Lunch', 700, '2022-01-01');", "output": "SELECT meal_type, AVG(calories) as avg_calories FROM (SELECT restaurant_name, meal_type, calories, meal_date, ROW_NUMBER() OVER (PARTITION BY meal_type, meal_date ORDER BY calories) as rn FROM restaurant_meals WHERE restaurant_name = 'Seattle Organic' AND meal_date >= '2022-01-01' AND meal_date < '2022-02-01') t WHERE rn = 1 GROUP BY meal_type;"}
{"input": " 2022\ub144 \ubaa8\ub4e0 \uad6d\uac00\uc758 \ub514\uc2a4\ud504\ub85c\uc298\uacfc \ud14c\ub974\ube00\uc758 \ucd1d \uc0dd\uc0b0\ub7c9\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE production_data (year INT, country VARCHAR(255), element_type VARCHAR(255), production_quantity INT);", "output": "SELECT country, SUM(production_quantity) FROM production_data WHERE element_type IN ('Dysprosium', 'Terbium') AND year = 2022 GROUP BY country;"}
{"input": " 2021\ub144 \ud53c\ub2c9\uc2a4 \uc2dc\uc758 \ud3c9\uade0\ubcf4\ub2e4 \ubb3c \uc18c\ube44\ub7c9\uc774 \ub9ce\uc740 \uac00\uad6c \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE water_consumption (household_id INT, consumption FLOAT, city VARCHAR(50), year INT); INSERT INTO water_consumption (household_id, consumption, city, year) VALUES (1, 15.5, 'Phoenix', 2021), (2, 16.5, 'Phoenix', 2021), (3, 14.0, 'Phoenix', 2021);", "output": "SELECT COUNT(*) FROM water_consumption WHERE city = 'Phoenix' AND year = 2021 AND consumption > (SELECT AVG(consumption) FROM water_consumption WHERE city = 'Phoenix' AND year = 2021);"}
{"input": " \uc790\ub3d9\ucc28 \ubcf4\ud5d8\uacfc \uc0dd\uba85 \ubcf4\ud5d8 \ubaa8\ub450\uc5d0 \ub300\ud55c \ubcf4\ud5d8\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub294 \ub204\uad6c\uc774\uba70, \ubcf4\ud5d8 \uacc4\uc57d \ubc88\ud638\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE car_insurance (policyholder_name TEXT, policy_number INTEGER); CREATE TABLE life_insurance (policyholder_name TEXT, policy_number INTEGER); INSERT INTO car_insurance VALUES ('Alice', 123), ('Bob', 456), ('Charlie', 789), ('Dave', 111); INSERT INTO life_insurance VALUES ('Bob', 999), ('Eve', 888), ('Alice', 222), ('Dave', 333);", "output": "SELECT policyholder_name, policy_number FROM car_insurance WHERE policyholder_name IN (SELECT policyholder_name FROM life_insurance);"}
{"input": " \ub300\ub959\ubcc4\ub85c \ubd84\ub958\ub41c \uc544\ud504\ub9ac\uce74 \uad6d\uac00 \uae30\uc99d\uc790\uc758 \uac01 \uc6d0\uc778 \ubd84\uc57c\ubcc4 \uace0\uc720 \uae30\uc99d\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, country TEXT); CREATE TABLE donations (id INT, donor_id INT, donation_amount FLOAT, organization_id INT); CREATE TABLE organizations (id INT, name TEXT, cause_area TEXT, country TEXT); CREATE TABLE countries (id INT, name TEXT, continent TEXT);", "output": "SELECT c.continent, o.cause_area, COUNT(DISTINCT d.id) as num_unique_donors FROM donors d INNER JOIN donations ON d.id = donations.donor_id INNER JOIN organizations o ON donations.organization_id = o.id INNER JOIN countries ON d.country = countries.name WHERE countries.continent = 'Africa' GROUP BY c.continent, o.cause_area;"}
{"input": " 'NFL' \ub2e8\uc77c \uac8c\uc784\uc5d0\uc11c '\uc2dc\uc560\ud2c0 \uc2dc\ud638\ud06c\uc2a4'\uac00 \uae30\ub85d\ud55c \ud130\uce58\ub2e4\uc6b4 \ucd5c\ub2e4 \ud69f\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name TEXT, league TEXT, sport TEXT); INSERT INTO teams (team_id, team_name, league, sport) VALUES (1, 'Seattle Seahawks', 'NFL', 'American Football'); CREATE TABLE games (game_id INT, team_id INT, touchdowns INT, season_year INT); INSERT INTO games (game_id, team_id, touchdowns, season_year) VALUES (1, 1, 5, 2020), (2, 1, 4, 2020), (3, 1, 6, 2019);", "output": "SELECT MAX(touchdowns) FROM games WHERE team_id = (SELECT team_id FROM teams WHERE team_name = 'Seattle Seahawks') AND league = 'NFL';"}
{"input": " 3\ub144 \uc5f0\uc18d \uc0dd\uc0b0\ub7c9\uc774 \uac10\uc18c\ud55c \uc591\uc2dd\uc7a5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farm_production (farm_id INT, year INT, production INT); INSERT INTO farm_production (farm_id, year, production) VALUES (1, 2019, 500), (1, 2020, 450), (1, 2021, 400), (2, 2019, 600), (2, 2020, 600), (2, 2021, 550);", "output": "SELECT farm_id FROM (SELECT farm_id, production, LAG(production, 2) OVER (PARTITION BY farm_id ORDER BY year) AS lag_2, LAG(production, 1) OVER (PARTITION BY farm_id ORDER BY year) AS lag_1 FROM farm_production) AS subquery WHERE subquery.production < subquery.lag_1 AND subquery.lag_1 < subquery.lag_2;"}
{"input": " 'MarineProtectedAreaA' \ubc0f 'MarineProtectedAreaB'\uc5d0 \uace0\uc720\ud55c \uc885\uc758 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ProtectedAreaSpecies (area VARCHAR(255), species VARCHAR(255)); INSERT INTO ProtectedAreaSpecies (area, species) VALUES ('MarineProtectedAreaA', 'Dolphin'), ('MarineProtectedAreaA', 'Turtle'), ('MarineProtectedAreaB', 'Shark');", "output": "(SELECT species FROM ProtectedAreaSpecies WHERE area = 'MarineProtectedAreaA' EXCEPT SELECT species FROM ProtectedAreaSpecies WHERE area = 'MarineProtectedAreaB') UNION (SELECT species FROM ProtectedAreaSpecies WHERE area = 'MarineProtectedAreaB' EXCEPT SELECT species FROM ProtectedAreaSpecies WHERE area = 'MarineProtectedAreaA');"}
{"input": " \uac01 \uc131\ubcc4 \uce74\ud14c\uace0\ub9ac\uc5d0\ub294 \uba87 \uba85\uc758 \uc0ac\uc6a9\uc790\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE users (id INT, age INT, gender TEXT); INSERT INTO users (id, age, gender) VALUES ('1', '25', 'Female'), ('2', '35', 'Male'), ('3', '45', 'Non-binary');", "output": "SELECT gender, COUNT(*) as count FROM users GROUP BY gender;"}
{"input": " \uae30\uc0ac\ub97c \uac8c\uc2dc\ud558\uc9c0 \uc54a\uc740 \ud559\uc0dd\uc758 \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE Students (StudentID INT, Name VARCHAR(50), Department VARCHAR(50)); INSERT INTO Students (StudentID, Name, Department) VALUES (1, 'John Doe', 'Computer Science'), (2, 'Jane Smith', 'Physics'), (3, 'Alice Johnson', 'Mathematics'); CREATE TABLE Publications (PublicationID INT, StudentID INT, Title VARCHAR(50)); INSERT INTO Publications (PublicationID, StudentID) VALUES (1, 1), (2, 1), (3, 2);", "output": "DELETE FROM Students WHERE StudentID NOT IN (SELECT StudentID FROM Publications);"}
{"input": " 2020\ub144 \ub9e4\ub2ec \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50), VolunteerDOB date, VolunteerSignUpDate date); INSERT INTO Volunteers (VolunteerID, VolunteerName, VolunteerDOB, VolunteerSignUpDate) VALUES (1, 'James Brown', '1990-01-01', '2020-02-01'), (2, 'Emma White', '1985-06-15', '2020-04-20'), (3, 'Robert Green', '1979-12-31', '2020-11-05');", "output": "SELECT DATEPART(mm, VolunteerSignUpDate) as Month, COUNT(*) as VolunteersSignedUp FROM Volunteers WHERE VolunteerSignUpDate >= '2020-01-01' AND VolunteerSignUpDate < '2021-01-01' GROUP BY DATEPART(mm, VolunteerSignUpDate);"}
{"input": " \ud30c\ub9ac\uc758 \uc5b4\ub5a4 \uae30\ucc28 \ub178\uc120\uc5d0 \uc5ed\uc774 5\uac1c \uc774\uc0c1 \uc788\ub098\uc694?", "context": "CREATE TABLE train_routes (route_id INT, city VARCHAR(50), num_stations INT); INSERT INTO train_routes (route_id, city, num_stations) VALUES (101, 'Paris', 7), (102, 'Paris', 4), (103, 'Berlin', 9), (104, 'London', 6);", "output": "SELECT route_id, city, num_stations FROM (SELECT route_id, city, num_stations, ROW_NUMBER() OVER (PARTITION BY city ORDER BY num_stations DESC) as rnk FROM train_routes) tmp WHERE rnk = 1 AND city = 'Paris';"}
{"input": "\ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ubcf4\ud5d8 \uc720\ud615\uc744 \ud655\uc778\ud558\uace0 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Claims (ClaimID INT, PolicyType VARCHAR(255), PolicyholderID INT, ClaimAmount DECIMAL(10,2)); INSERT INTO Claims VALUES (1, 'Auto', 1, 5000), (2, 'Home', 2, 7000), (3, 'Auto', 3, 8000), (4, 'Life', 4, 6000), (5, 'Auto', 5, 9000);", "output": "SELECT PolicyType, AVG(ClaimAmount) as AvgClaimAmount FROM Claims GROUP BY PolicyType ORDER BY AvgClaimAmount DESC LIMIT 3;"}
{"input": " \ubca0\ub97c\ub9b0 S-Bahn \uc2dc\uc2a4\ud15c\uc758 \uac01 \uc5f4\ucc28 \ubaa8\ub378\uc5d0 \ub300\ud55c \ud3c9\uade0 \uace0\uc7a5 \uac04\uaca9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE train_models (model_id INT, model_name VARCHAR(255));CREATE TABLE failures (failure_id INT, model_id INT, failure_time DATETIME);", "output": "SELECT model_id, model_name, AVG(failure_time - LAG(failure_time) OVER (PARTITION BY model_id ORDER BY failure_time)) as average_time_between_failures FROM train_models tm JOIN failures f ON tm.model_id = f.model_id;"}
{"input": " \uac01 \ubc1c\uad74\ud604\uc7a5\uc5d0\uc11c \ub450 \ubc88\uc9f8\ub85c \uc624\ub798\ub41c \uc720\ubb3c\uc758 \uc5f0\ub300\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ancient_artifacts (id INT, artifact_name VARCHAR(50), age INT, excavation_site VARCHAR(50));", "output": "SELECT excavation_site, LEAD(age) OVER (PARTITION BY excavation_site ORDER BY age) as second_oldest_artifact_age FROM ancient_artifacts;"}
{"input": " \uc790\uae08 \ucd9c\ucc98 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c '\uc2dc\uac01 \uc608\uc220' \uce74\ud14c\uace0\ub9ac\uc758 \uc774\ubca4\ud2b8\uc5d0\uc11c \ubc1b\uc740 \uc790\uae08\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE funding_sources (id INT, event_name TEXT, funding_source_type TEXT, amount_funded INT); INSERT INTO funding_sources (id, event_name, funding_source_type, amount_funded) VALUES (1, 'Art Exhibit', 'Private', 5000), (2, 'Photography Show', 'Corporate', 10000);", "output": "SELECT funding_source_type, SUM(amount_funded) FROM funding_sources WHERE event_name IN (SELECT event_name FROM events WHERE event_category = 'visual arts') GROUP BY funding_source_type;"}
{"input": " Period5\uc758 \uc0ac\uc774\ud2b8 \ubcf4\uace0\uc11c\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc870\ud68c\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \ud574\ub2f9 \uc870\ud68c\uc218\uac00 \ud3ec\ud568\ub41c \ubcf4\uace0\uc11c \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sites (id INT, site_name VARCHAR(50), location VARCHAR(50), period VARCHAR(50), type VARCHAR(50)); INSERT INTO Sites (id, site_name, location, period, type) VALUES (1, 'Site1', 'Location1', 'Period1', 'Settlement'), (2, 'Site2', 'Location2', 'Period5', 'Village'); CREATE TABLE Reports (id INT, site_name VARCHAR(50), date DATE, type VARCHAR(50), views INT); INSERT INTO Reports (id, site_name, date, type, views) VALUES (1, 'Site1', '2021-01-01', 'Excavation', 1000), (2, 'Site2', '2021-02-01', 'Survey', 800);", "output": "SELECT r.type, r.views FROM Reports r JOIN Sites s ON r.site_name = s.site_name WHERE s.period = 'Period5' AND r.views = (SELECT MAX(views) FROM Reports WHERE site_name IN (SELECT site_name FROM Sites WHERE period = 'Period5'));"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc21c \ubc29\ubb38\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE unique_visitors_country (id INT, name TEXT, country TEXT); INSERT INTO unique_visitors_country VALUES (1, 'Kate', 'Canada');", "output": "SELECT unique_visitors_country.country, COUNT(DISTINCT unique_visitors_country.name) FROM unique_visitors_country GROUP BY unique_visitors_country.country;"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \ub3c4\uc2dc \uc9c0\uc5ed\uacfc \ube44\uad50\ud558\uc5ec \ub18d\ucd0c \uc9c0\uc5ed\uc758 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE health_equity_metrics (metric_date DATE, metric_value INT, location TEXT); INSERT INTO health_equity_metrics (metric_date, metric_value, location) VALUES ('2022-01-01', 75, 'Rural'), ('2022-01-01', 85, 'Urban'), ('2022-02-01', 76, 'Rural'), ('2022-02-01', 84, 'Urban'), ('2022-03-01', 77, 'Rural'), ('2022-03-01', 83, 'Urban'), ('2022-04-01', 78, 'Rural'), ('2022-04-01', 82, 'Urban'), ('2022-05-01', 79, 'Rural'), ('2022-05-01', 81, 'Urban'), ('2022-06-01', 80, 'Rural'), ('2022-06-01', 80, 'Urban');", "output": "SELECT location, AVG(metric_value) as avg_metric_value, ROW_NUMBER() OVER (PARTITION BY location ORDER BY metric_date) as row_num FROM health_equity_metrics GROUP BY location, metric_date ORDER BY location, row_num;"}
{"input": " \uac01 \uad6d\uac00\uc758 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\ub97c \uc6d4\ubcc4\ub85c \uacc4\uc0b0\ud558\uace0 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE EventDates (EventID INT, EventDate DATE); INSERT INTO EventDates (EventID, EventDate) VALUES (1, '2022-01-01'), (2, '2022-02-01'), (3, '2022-01-15');", "output": "SELECT E.EventCountry, EXTRACT(MONTH FROM E.EventDate) AS Month, COUNT(P.PlayerID) AS PlayersJoined, RANK() OVER (PARTITION BY EXTRACT(MONTH FROM E.EventDate) ORDER BY COUNT(P.PlayerID) DESC) AS Rank FROM Players P JOIN EventParticipation EP ON P.PlayerID = EP.PlayerID JOIN EventDates E ON EP.EventID = E.EventID GROUP BY E.EventCountry, EXTRACT(MONTH FROM E.EventDate)"}
{"input": " 2019\ub144\uacfc 2020\ub144\uc5d0 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ubaa8\ub4e0 \uae30\ud6c4 \uc7ac\uc815 \uc218\ud61c\uc790\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE climate_finance_2019 (recipient_name TEXT, funding_year INTEGER); INSERT INTO climate_finance_2019 (recipient_name, funding_year) VALUES ('Recipient A', 2019), ('Recipient B', 2019), ('Recipient A', 2020); CREATE TABLE climate_finance_2020 (recipient_name TEXT, funding_year INTEGER); INSERT INTO climate_finance_2020 (recipient_name, funding_year) VALUES ('Recipient A', 2020), ('Recipient C', 2020);", "output": "SELECT recipient_name FROM climate_finance_2019 WHERE funding_year = 2019 INTERSECT SELECT recipient_name FROM climate_finance_2020 WHERE funding_year = 2020;"}
{"input": " \ubd80\uc0c1\uc73c\ub85c \uc778\ud574 \ud55c \ubc88\ub3c4 \uacbd\uae30\uc5d0 \uacb0\uc7a5\ud55c \uc801\uc774 \uc5c6\ub294 \uc120\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE athlete_games (athlete_id INT, game_date DATE, played BOOLEAN);", "output": "SELECT athlete_id FROM athlete_games WHERE NOT EXISTS (SELECT 1 FROM athlete_games WHERE athlete_id = athlete_games.athlete_id AND played = FALSE);"}
{"input": " 2021\ub144 \uad6d\uac00\ubcc4 \uc218\ud61c\uc790 \uc218 \uae30\uc900 \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uadf8\ub7a8\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE community_programs (id INT, program_name TEXT, country TEXT, year INT, beneficiaries INT); INSERT INTO community_programs (id, program_name, country, year, beneficiaries) VALUES (1, 'Job Training', 'USA', 2021, 500), (2, 'Women Empowerment', 'India', 2021, 700), (3, 'Youth Mentoring', 'Brazil', 2021, 600), (4, 'Clean Water Access', 'Kenya', 2021, 800);", "output": "SELECT program_name, country, beneficiaries, RANK() OVER (PARTITION BY country ORDER BY beneficiaries DESC) AS rank FROM community_programs WHERE year = 2021;"}
{"input": "\ud3c9\uade0 \ud504\ub85c\uc81d\ud2b8 \uae30\uac04\ubcf4\ub2e4 \uae30\uac04\uc774 \uae34 \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DefenseProjects (Id INT, Project VARCHAR(255), StartDate DATE, EndDate DATE); INSERT INTO DefenseProjects (Id, Project, StartDate, EndDate) VALUES (3, 'Air Defense System', '2017-01-01', '2021-12-31'); INSERT INTO DefenseProjects (Id, Project, StartDate, EndDate) VALUES (4, 'Drone Surveillance', '2019-06-15', '2023-05-31');", "output": "SELECT Project, DATEDIFF(day, StartDate, EndDate) as ProjectDuration FROM DefenseProjects WHERE DATEDIFF(day, StartDate, EndDate) > (SELECT AVG(DATEDIFF(day, StartDate, EndDate)) FROM DefenseProjects);"}
{"input": " \uac01 \uc6b0\uc8fc\uc120\uc758 \ucd1d \uc784\ubb34 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE SpacecraftMissions(ID INT, SpacecraftName VARCHAR(50), MissionID INT);", "output": "SELECT SpacecraftName, COUNT(DISTINCT MissionID) FROM SpacecraftMissions GROUP BY SpacecraftName;"}
{"input": " \uc791\ub144\uc5d0 \uc2b9\uc9c4\ud55c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec \uc778\uc0c1\ub960\uacfc \uc2b9\uc9c4\ud558\uc9c0 \ubabb\ud55c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uae09\uc5ec \uc778\uc0c1\ub960\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Employees (EmployeeID INT, EmployeeName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2), PromotionDate DATE); INSERT INTO Employees (EmployeeID, EmployeeName, Department, Salary, PromotionDate) VALUES (1, 'John Doe', 'IT', 70000, '2022-01-01'), (2, 'Jane Smith', 'IT', 85000, NULL), (3, 'Mike Johnson', 'HR', 60000, '2022-06-01'), (4, 'Sara Brown', 'HR', 65000, NULL);", "output": "SELECT CASE WHEN PromotionDate IS NOT NULL THEN 'Promoted' ELSE 'Not Promoted' END AS PromotionStatus, AVG(Salary - LAG(Salary) OVER (PARTITION BY EmployeeID ORDER BY PromotionDate)) AS AverageSalaryIncrease FROM Employees WHERE PromotionDate IS NOT NULL OR DATEADD(YEAR, -1, GETDATE()) <= PromotionDate GROUP BY PromotionStatus;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uc9c0\uc5ed\ubcc4, \uc6d4\ubcc4 \ud3c9\uade0 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \uc810\uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Regions (id INT, region_name VARCHAR(255)); CREATE TABLE CommunityPolicing (id INT, region_id INT, policing_score INT, policing_date DATE); INSERT INTO Regions (id, region_name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West'); INSERT INTO CommunityPolicing (id, region_id, policing_score, policing_date) VALUES (1, 1, 85, '2021-02-01'), (2, 2, 88, '2021-03-01'), (3, 3, 92, '2021-01-01'), (4, 4, 78, '2021-04-01');", "output": "SELECT region_id, AVG(policing_score) as avg_score, EXTRACT(MONTH FROM policing_date) as month FROM CommunityPolicing WHERE policing_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND CURRENT_DATE GROUP BY region_id, month ORDER BY avg_score DESC;"}
{"input": " \ucd5c\uc18c \ub450 \uba85\uc758 \ub2e4\ub978 \uc608\uc220\uac00\uac00 \uacf5\uc5f0\ud55c \ubaa8\ub4e0 \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Concerts (ConcertID INT, Artist VARCHAR(50), City VARCHAR(50)); INSERT INTO Concerts (ConcertID, Artist, City) VALUES (1, 'Taylor Swift', 'Los Angeles'), (2, 'BTS', 'New York'), (3, 'Adele', 'London'), (4, 'Taylor Swift', 'Paris'), (5, 'BTS', 'New York'), (6, 'Rihanna', 'New York');", "output": "SELECT City FROM (SELECT City, Artist, ROW_NUMBER() OVER (PARTITION BY City ORDER BY City) as Rank FROM Concerts) WHERE Rank = 2 GROUP BY City;"}
{"input": " 2021\ub144 1\uc6d4 1\uc77c\ubd80\ud130 2021\ub144 1\uc6d4 31\uc77c \uc0ac\uc774\uc5d0 '\uc720\uc804\uc790 \ubcc0\ud615 \uc625\uc218\uc218' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc0ac\uc6a9\ub41c \ube44\ub8cc\uc758 \ucd1d \ube44\uc6a9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE inventory (fertilizer_id INT, crop_id INT, cost DECIMAL(5,2), usage_date DATE); INSERT INTO inventory (fertilizer_id, crop_id, cost, usage_date) VALUES (1, 1, 15.99, '2021-01-01'), (2, 2, 12.49, '2021-01-02'), (3, 1, 18.35, '2021-01-03');", "output": "SELECT SUM(cost) FROM inventory WHERE crop_id IN (SELECT crop_id FROM crops WHERE category = 'Genetically Modified Corn') AND usage_date BETWEEN '2021-01-01' AND '2021-01-31';"}
{"input": " ISS\uc5d0 \uc788\uc5c8\ub358 \ubaa8\ub4e0 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc640 \uc6b0\uc8fc\uc5d0\uc11c\uc758 \ucd1d \uc77c\uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Astronauts (astronaut_name TEXT, mission_name TEXT, days_in_space INT); INSERT INTO Astronauts (astronaut_name, mission_name, days_in_space) VALUES ('Serena Au\u00f1\u00f3n-Chancellor', 'ISS Expedition 56/57', 197), ('Alexander Gerst', 'ISS Expedition 40/41', 165), ('Reid Wiseman', 'ISS Expedition 40/41', 165), ('Max Surayev', 'ISS Expedition 21/22', 169), ('Jeff Williams', 'ISS Expedition 13/14, 21/22, 47/48, 51/52', 534);", "output": "SELECT astronaut_name, SUM(days_in_space) as total_days_in_space FROM Astronauts WHERE mission_name LIKE '%ISS%' GROUP BY astronaut_name;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30\uc5d0 \ub0a8\ubd80 \uc9c0\uc5ed\uc5d0\uc11c \uc81c\ub54c\uc5d0 \uc644\ub8cc\ub41c \ud504\ub85c\uc81d\ud2b8\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ProjectTimelineByHalf (ProjectID int, Region varchar(20), Half int, OnTime bit); INSERT INTO ProjectTimelineByHalf (ProjectID, Region, Half, OnTime) VALUES (1, 'Southern', 1, 1), (2, 'Northern', 1, 0), (3, 'Southern', 1, 1);", "output": "SELECT Region, PERCENTAGE(SUM(OnTime) OVER (PARTITION BY Region) / COUNT(*) OVER (PARTITION BY Region)) as PercentageOnTime FROM ProjectTimelineByHalf WHERE Region = 'Southern' AND Half = 1;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \uc0dd\uc0b0\ud55c \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE suppliers(id INT, name TEXT, location TEXT);CREATE TABLE products(id INT, supplier_id INT, product_name TEXT, quantity INT, manufacture_date DATE);INSERT INTO suppliers(id, name, location) VALUES (1, 'Supplier A', 'City A'), (2, 'Supplier B', 'City B'); INSERT INTO products(id, supplier_id, product_name, quantity, manufacture_date) VALUES (1, 1, 'Product 1', 100, '2021-02-01'), (2, 1, 'Product 2', 200, '2021-03-01'), (3, 2, 'Product 3', 150, '2021-01-10');", "output": "SELECT supplier_id, SUM(quantity) as total_quantity FROM products WHERE manufacture_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY supplier_id;"}
{"input": " \uc9c0\ub09c \uc8fc \uc778\ub3c4 \ub3c5\uc790\ub4e4\uc774 \ub274\uc2a4 \uae30\uc0ac\ub97c \uc77d\ub294 \ub370 \uc18c\ube44\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE reading_sessions (id INT, reader_id INT, start_time TIMESTAMP, end_time TIMESTAMP, num_articles INT);", "output": "SELECT SUM(TIMESTAMPDIFF(MINUTE, start_time, end_time)) / 60 as total_hours_read FROM reading_sessions WHERE reader_id IN (SELECT id FROM readers WHERE country = 'India') AND start_time >= CURDATE() - INTERVAL 1 WEEK;"}
{"input": " \uacf5\uc911\ubcf4\uac74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uc608\ubc29\uc811\uc885 \uc13c\ud130\uc640 \uac80\uc0ac\uc18c\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vaccination_centers (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO vaccination_centers (id, name, location) VALUES (1, 'Vaccination Center A', 'City A'); INSERT INTO vaccination_centers (id, name, location) VALUES (2, 'Vaccination Center B', 'City B'); CREATE TABLE testing_sites (id INT, name VARCHAR(50), location VARCHAR(50)); INSERT INTO testing_sites (id, name, location) VALUES (1, 'Testing Site A', 'City A'); INSERT INTO testing_sites (id, name, location) VALUES (2, 'Testing Site B', 'City B');", "output": "SELECT COUNT(*) FROM vaccination_centers UNION SELECT COUNT(*) FROM testing_sites;"}
{"input": " \uc885\uc591\ud559 \uc57d\ubb3c\uc758 \ud3c9\uade0 \uc784\uc0c1\uc2dc\ud5d8 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE clinical_trials (id INT, drug_id INT, drug_category VARCHAR(255), duration INT);", "output": "SELECT AVG(clinical_trials.duration) FROM clinical_trials WHERE clinical_trials.drug_category = 'Oncology';"}
{"input": " 2020\ub144 \uc0c1\uc704 3\uac1c \uc7ac\ud65c\uc6a9 \uad6d\uac00\uc758 \ud50c\ub77c\uc2a4\ud2f1 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates (country VARCHAR(255), year INT, plastic_rate FLOAT); INSERT INTO recycling_rates (country, year, plastic_rate) VALUES ('Germany', 2020, 0.6), ('Austria', 2020, 0.7), ('Switzerland', 2020, 0.8);", "output": "SELECT r.country, r.plastic_rate as recycling_rate FROM recycling_rates r ORDER BY r.plastic_rate DESC LIMIT 3;"}
{"input": " VR \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc2dc\ubbac\ub808\uc774\uc158 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Name VARCHAR(100), Age INT, FavoriteGenre VARCHAR(50), VRPossible BOOLEAN); INSERT INTO Players (PlayerID, Name, Age, FavoriteGenre, VRPossible) VALUES (1, 'John Doe', 25, 'Action', true), (2, 'Jane Smith', 28, 'Adventure', true), (3, 'James Johnson', 30, 'Simulation', true), (4, 'Emily Davis', 24, 'Strategy', false);", "output": "SELECT AVG(Age) FROM Players WHERE FavoriteGenre = 'Simulation' AND VRPossible = true;"}
{"input": " \uacf5\uac1c\uad50\uc721\uc5d0 \ucc38\uc5ec\ud55c \ucd5c\ud558\uc704 ID \ud559\uc0dd\uc758 \uc815\uc2e0\uac74\uac15 \uc810\uc218\ub294 \uba87 \uc810\uc778\uac00\uc694?", "context": "CREATE TABLE students (student_id INT, mental_health_score INT, participated_in_open_pedagogy BOOLEAN); INSERT INTO students (student_id, mental_health_score, participated_in_open_pedagogy) VALUES (1, 80, TRUE), (2, 70, FALSE), (3, 90, TRUE);", "output": "SELECT mental_health_score FROM students WHERE student_id = (SELECT MIN(student_id) FROM students WHERE participated_in_open_pedagogy = TRUE);"}
{"input": " \ub300\uc911\uad50\ud1b5\uc744 \uc774\uc6a9\ud558\uc5ec \uc544\uc2dc\uc544 \uc720\uc801\uc9c0\ub97c \ubc29\ubb38\ud558\ub294 \uad00\uad11\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_code CHAR(3), country_name VARCHAR(100), continent VARCHAR(50));CREATE TABLE destinations (destination_id INT, destination_name VARCHAR(100), is_historical BOOLEAN, continent VARCHAR(50));CREATE TABLE bookings (booking_id INT, guest_id INT, destination_id INT, country_code CHAR(3));CREATE TABLE transportation (transportation_id INT, booking_id INT, type VARCHAR(50));INSERT INTO countries (country_code, country_name, continent) VALUES ('CHN', 'China', 'Asia'), ('JPN', 'Japan', 'Asia'), ('KOR', 'South Korea', 'Asia'), ('IDN', 'Indonesia', 'Asia'), ('VNM', 'Vietnam', 'Asia');", "output": "SELECT 100.0 * COUNT(DISTINCT b.guest_id) / (SELECT COUNT(DISTINCT b.guest_id) FROM bookings b JOIN destinations d ON b.destination_id = d.destination_id JOIN countries c ON b.country_code = c.country_code WHERE d.is_historical = TRUE AND c.continent = 'Asia') AS percentage FROM transportation t JOIN bookings b ON t.booking_id = b.booking_id JOIN destinations d ON b.destination_id = d.destination_id JOIN countries c ON b.country_code = c.country_code WHERE t.type = 'Public Transportation' AND d.is_historical = TRUE AND c.continent = 'Asia';"}
{"input": " \"\uc544\ud504\ub9ac\uce74 \ubbf8\uc220\" \uc804\uc2dc\ud68c\uc5d0 \ucc38\uc11d\ud55c 30\uc138 \ubbf8\ub9cc \uad00\ub78c\uac1d\uc740 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE age_demographics (visitor_id INT, age INT); INSERT INTO age_demographics (visitor_id, age) VALUES (100, 28);", "output": "SELECT COUNT(*) FROM visitor_presence JOIN exhibitions ON visitor_presence.exhibition_id = exhibitions.exhibition_id JOIN age_demographics ON visitor_presence.visitor_id = age_demographics.visitor_id WHERE exhibitions.exhibition_name = 'African Art' AND age_demographics.age < 30;"}
{"input": " \ub274\uc9c8\ub79c\ub4dc\uc640 \ub0a8\uc544\ud504\ub9ac\uce74\uacf5\ud654\uad6d\uc758 \uce5c\ud658\uacbd \ud22c\uc5b4\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE eco_tours_nz_sa (id INT, country VARCHAR(20), tours INT); INSERT INTO eco_tours_nz_sa (id, country, tours) VALUES (1, 'New Zealand', 120), (2, 'New Zealand', 130), (3, 'South Africa', 140);", "output": "SELECT SUM(tours) FROM eco_tours_nz_sa WHERE country IN ('New Zealand', 'South Africa');"}
{"input": " '\uc790\uce74\ub974\ud0c0'\uc640 '\ub3c4\ucfc4' \uc0ac\uc6a9\uc790\uac00 \uc62c\ub9b0 \uac8c\uc2dc\ubb3c\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE posts (id INT PRIMARY KEY, user_id INT, content TEXT, post_date DATE, city VARCHAR(50)); INSERT INTO posts (id, user_id, content, post_date, city) VALUES (1, 1, 'Hello World!', '2021-01-01', 'Jakarta'); INSERT INTO posts (id, user_id, content, post_date, city) VALUES (2, 2, 'I love data!', '2021-01-02', 'Tokyo'); INSERT INTO posts (id, user_id, content, post_date, city) VALUES (3, 3, 'Privacy matters!', '2021-01-03', 'Jakarta');", "output": "SELECT city, COUNT(*) as total_posts FROM posts WHERE city IN ('Jakarta', 'Tokyo') GROUP BY city;"}
{"input": " \uc815\uc2e0 \uac74\uac15 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\ub294 \uc758\ub8cc \uc2dc\uc124\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HealthcareFacilities (Id INT, Name TEXT, Location TEXT, Services TEXT); INSERT INTO HealthcareFacilities (Id, Name, Location, Services) VALUES (1, 'Hospital A', 'City X', 'General, Emergency, Surgery'); INSERT INTO HealthcareFacilities (Id, Name, Location, Services) VALUES (2, 'Clinic A', 'City X', 'Family Medicine, Pediatrics, Dental'); INSERT INTO HealthcareFacilities (Id, Name, Location, Services) VALUES (3, 'Medical Center', 'City Y', 'Cardiology, Oncology, Mental Health'); INSERT INTO HealthcareFacilities (Id, Name, Location, Services) VALUES (4, 'Community Health', 'City Y', 'Geriatrics, Women''s Health, Mental Health');", "output": "SELECT Name FROM HealthcareFacilities WHERE Services NOT LIKE '%Mental Health%';"}
{"input": " \ub3c4\uc2dc\ubcc4 \uc804\uae30\ucc28 \ucda9\uc804\uc18c\ub294 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE charging_stations (station_id INT, city VARCHAR(50), is_ev_charging BOOLEAN);", "output": "SELECT city, COUNT(*) as num_stations FROM charging_stations WHERE is_ev_charging = true GROUP BY city;"}
{"input": " \uce90\ub098\ub2e4 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uac8c\uc2dc\ubb3c, \ub313\uae00, \uc88b\uc544\uc694 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), country VARCHAR(255)); CREATE TABLE posts (id INT, user_id INT, content TEXT); CREATE TABLE comments (id INT, post_id INT, content TEXT); CREATE TABLE likes (id INT, user_id INT, post_id INT);", "output": "SELECT COUNT(*) FROM posts JOIN users ON posts.user_id = users.id WHERE users.country = 'Canada' UNION ALL SELECT COUNT(*) FROM comments JOIN users ON comments.post_id = posts.id JOIN users ON posts.user_id = users.id WHERE users.country = 'Canada' UNION ALL SELECT COUNT(*) FROM likes JOIN users ON likes.user_id = users.id WHERE users.country = 'Canada';"}
{"input": " \uc5ec\uc131\uc774 \ucc3d\uc5c5\ud55c \uae30\uc5c5\uc758 \uc5c5\uc885\ubcc4 \ud3c9\uade0 \uc790\uae08 \uc870\ub2ec \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name TEXT, founder TEXT, industry TEXT, funding FLOAT); INSERT INTO company (id, name, founder, industry, funding) VALUES (1, 'Acme Inc', 'Female', 'Tech', 2000000);", "output": "SELECT industry, AVG(funding) FROM company WHERE founder = 'Female' GROUP BY industry;"}
{"input": "\uac01 \ub124\ud2b8\uc6cc\ud06c \uc720\ud615\uc5d0 \ub300\ud574 \uc0ac\uc6a9\ub7c9\uc774 \ud558\uc704 5%\uc5d0 \uc18d\ud558\ub294 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub97c \ub124\ud2b8\uc6cc\ud06c \uc720\ud615\ubcc4\ub85c \uc815\ub82c\ud55c \ub2e4\uc74c \uc0ac\uc6a9\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, usage FLOAT, network VARCHAR(255)); INSERT INTO mobile_subscribers (subscriber_id, usage, network) VALUES (1, 80.5, '4G'), (2, 70.2, '4G'), (3, 65.1, '5G'), (4, 5.3, '5G'), (5, 55.0, '3G');", "output": "SELECT network, subscriber_id, usage FROM (SELECT network, subscriber_id, usage, NTILE(20) OVER (PARTITION BY network ORDER BY usage ASC) as usage_tile FROM mobile_subscribers) t WHERE t.usage_tile = 1 ORDER BY network, usage ASC;"}
{"input": " '\uac8c\uc784' \ub124\ud2b8\uc6cc\ud06c \uc0ac\uc6a9\uc790\ub97c \ub300\uc0c1\uc73c\ub85c 2022\ub144 1\ubd84\uae30 \ubaa8\ub4e0 \uad11\uace0 \ucea0\ud398\uc778\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ads (id INT, campaign VARCHAR(255), country VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO ads (id, campaign, country, revenue) VALUES (1, 'gaming', 'USA', 2000.00), (2, 'sports', 'Canada', 3000.00);", "output": "SELECT SUM(revenue) FROM ads WHERE YEAR(timestamp) = 2022 AND QUARTER(timestamp) = 1 AND network = 'gaming';"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uce90\ub098\ub2e4\ub85c\ubd80\ud130 \uc778\ub3c4\uc801 \uc9c0\uc6d0\uc744 \ubc1b\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE humanitarian_assistance (assistance_id INT, provider TEXT, recipient TEXT, amount FLOAT, year INT); INSERT INTO humanitarian_assistance (assistance_id, provider, recipient, amount, year) VALUES (1, 'Canada', 'Syria', 1000000, 2020), (2, 'Canada', 'Afghanistan', 500000, 2021);", "output": "SELECT DISTINCT recipient FROM humanitarian_assistance WHERE provider = 'Canada' AND year >= (SELECT YEAR(GETDATE()) - 2)"}
{"input": " \uac00\uc7a5 \ube60\ub978 \ub3c4\uc785 \uc5f0\ub3c4\uc640 \uac00\uc7a5 \ub2a6\uc740 \ub3c4\uc785 \uc5f0\ub3c4\ub294 \ubb34\uc5c7\uc774\uba70, \ud2b9\uc815 \ub3c4\uc2dc\uc640 \uad6d\uac00\uc758 \uae30\uc220\ubcc4 \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \uae30\uc220 \ub3c4\uc785 \uac74\uc218\ub97c \ucc44\ud0dd \uac74\uc218 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74?", "context": "CREATE TABLE smart_city_technology_adoption (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50), technology VARCHAR(50), adoption_year INT, PRIMARY KEY (id));", "output": "SELECT city, country, technology, MIN(adoption_year) as first_adoption_year, MAX(adoption_year) as last_adoption_year, COUNT(*) as adoption_count, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as ranking FROM smart_city_technology_adoption WHERE city = 'CityName' AND country = 'CountryName' GROUP BY technology;"}
{"input": " \ud56d\uacf5\uae30 \ubaa8\ub378\ub2f9 \ud3c9\uade0 \ube44\ud589 \uc2dc\uac04\uc774 \uac00\uc7a5 \ub192\uc740 \ud56d\uacf5\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE aircrafts (aircraft_id INT, model VARCHAR(50), airline_id INT); INSERT INTO aircrafts (aircraft_id, model, airline_id) VALUES (1, '787-9', 101), (2, '787-10', 101), (3, '777-300ER', 101), (4, '737 MAX 8', 102), (5, '737 MAX 9', 102); CREATE TABLE flight_hours (flight_hour_id INT, aircraft_id INT, flight_hours DECIMAL(18, 2)); INSERT INTO flight_hours (flight_hour_id, aircraft_id, flight_hours) VALUES (1, 1, 1234.56), (2, 1, 1456.78), (3, 2, 1000.00), (4, 3, 2500.00), (5, 4, 3000.00), (6, 5, 1500.00); CREATE TABLE airlines (airline_id INT, airline_name VARCHAR(50)); INSERT INTO airlines (airline_id, airline_name) VALUES (101, 'Airline A'), (102, 'Airline B');", "output": "SELECT a.airline_name, AVG(fh.flight_hours) as avg_flight_hours FROM aircrafts a JOIN flight_hours fh ON a.aircraft_id = fh.aircraft_id JOIN airlines al ON a.airline_id = al.airline_id GROUP BY a.airline_id ORDER BY avg_flight_hours DESC;"}
{"input": " \uc791\uac00\ubcc4 \uae30\uc99d \uc791\ud488\uc758 \ucd1d \uc218\ub7c9\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74?", "context": "CREATE TABLE Artists (ArtistID int, ArtistName varchar(50), NumberOfArtworks int);INSERT INTO Artists (ArtistID, ArtistName, NumberOfArtworks) VALUES (1, 'Pablo Picasso', 500), (2, 'Vincent Van Gogh', 450), (3, 'Claude Monet', 350);", "output": "SELECT ArtistName, SUM(NumberOfArtworks) OVER (PARTITION BY ArtistID ORDER BY ArtistID) as TotalArtworksDonated FROM Artists ORDER BY TotalArtworksDonated DESC;"}
{"input": " 2023\ub144 1\ubd84\uae30 \uc2a4\ud0a8\ucf00\uc5b4 \uce74\ud14c\uace0\ub9ac\uc758 \uc81c\ud488\ub2f9 \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (product_id INT, product_name VARCHAR(100), category VARCHAR(50), sale_date DATE, revenue DECIMAL(10, 2), region VARCHAR(50)); INSERT INTO sales (product_id, product_name, category, sale_date, revenue, region) VALUES (1, 'Cleanser', 'Skincare', '2023-01-02', 15.99, 'East'), (2, 'Toner', 'Skincare', '2023-01-15', 20.99, 'West');", "output": "SELECT category, EXTRACT(QUARTER FROM sale_date) AS quarter, AVG(revenue) AS avg_revenue_per_product FROM sales WHERE category = 'Skincare' AND EXTRACT(QUARTER FROM sale_date) = 1 GROUP BY category, quarter;"}
{"input": " 2022\ub144 \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc790\uae08 \uc9c0\uc6d0 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE program_categories (id INT, program_category VARCHAR(255), funding_year INT, amount DECIMAL(10, 2));", "output": "SELECT program_category, (amount / SUM(amount) OVER (PARTITION BY funding_year)) * 100 AS funding_percentage  FROM program_categories WHERE funding_year = 2022 ORDER BY funding_percentage DESC;"}
{"input": " 2020\ub144 3\ubd84\uae30 \uc720\ub7fd\uc5f0\ud569\uc5d0\uc11c \uae30\ud6c4 \ubcc0\ud654 \uc194\ub8e8\uc158\uc744 \uc5f0\uad6c\ud558\ub294 \uae30\uc5c5\uc758 \uc77c\uc77c \uac70\ub798 \uc99d\uac00\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE company_data (company_id INT, company_name VARCHAR(50), company_region VARCHAR(20)); CREATE TABLE transactions (transaction_id INT, company_id INT, transaction_value FLOAT, transaction_date DATE); INSERT INTO company_data (company_id, company_name, company_region) VALUES (1, 'Climate Change Co.', 'European Union'); INSERT INTO transactions (transaction_id, company_id, transaction_value, transaction_date) VALUES (1, 1, 75.00, '2020-07-01');", "output": "SELECT ROW_NUMBER() OVER (ORDER BY transaction_date) as day, (LAG(SUM(transaction_value)) OVER (ORDER BY transaction_date) - SUM(transaction_value)) / ABS(LAG(SUM(transaction_value)) OVER (ORDER BY transaction_date)) as growth_rate FROM transactions INNER JOIN company_data ON transactions.company_id = company_data.company_id WHERE EXTRACT(MONTH FROM transaction_date) BETWEEN 7 AND 9 AND company_region = 'European Union' AND company_name LIKE '%Climate Change%' GROUP BY transaction_date;"}
{"input": " \uc758\ub958 \uc81c\uc870\uc5c5\uccb4\uc758 \uad6d\uac00\ubcc4 \ucd1d \uc0dd\uc0b0 \ub2a5\ub825\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE manufacturers (id INT, name VARCHAR(255), country VARCHAR(255), production_capacity INT);", "output": "SELECT country, SUM(production_capacity) as total_capacity FROM manufacturers GROUP BY country;"}
{"input": " \ube0c\ub77c\uc9c8 \ub9ac\uc6b0\ub370\uc790\ub124\uc774\ub8e8 \uce5c\ud658\uacbd \ud22c\uc5b4\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE if not exists countries (country_id INT, name TEXT); INSERT INTO countries (country_id, name) VALUES (1, 'Brazil'); CREATE TABLE if not exists cities (city_id INT, name TEXT, country_id INT, population INT); INSERT INTO cities (city_id, name, country_id, population) VALUES (1, 'Rio de Janeiro', 1, 6000000); CREATE TABLE if not exists tours (tour_id INT, name TEXT, city_id INT, eco_friendly BOOLEAN, rating INT); INSERT INTO tours (tour_id, name, city_id, eco_friendly, rating) VALUES (1, 'Samba Tour', 1, TRUE, 4), (2, 'Favela Tour', 1, TRUE, 5), (3, 'Beach Tour', 1, FALSE, 3), (4, 'Jungle Tour', 1, TRUE, 4), (5, 'Historic Tour', 1, FALSE, 5);", "output": "SELECT AVG(rating) FROM tours WHERE city_id = (SELECT city_id FROM cities WHERE name = 'Rio de Janeiro' AND country_id = (SELECT country_id FROM countries WHERE name = 'Brazil')) AND eco_friendly = TRUE;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \ud328\uc158 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (id INT, garmentID INT, quantity INT, saleDate DATE, isSustainable BOOLEAN); INSERT INTO Sales (id, garmentID, quantity, saleDate, isSustainable) VALUES (1, 301, 7, '2021-01-10', true), (2, 302, 4, '2021-02-15', false), (3, 303, 6, '2021-03-20', true), (4, 304, 5, '2021-04-12', true); CREATE TABLE Garments (id INT, garmentID INT, price DECIMAL(5,2), country VARCHAR(50)); INSERT INTO Garments (id, garmentID, price, country) VALUES (1, 301, 50.00, 'Nigeria'), (2, 302, 45.00, 'Egypt'), (3, 303, 60.00, 'South Africa'), (4, 304, 55.00, 'Morocco'); CREATE TABLE Countries (id INT, country VARCHAR(50), continent VARCHAR(50)); INSERT INTO Countries (id, country, continent) VALUES (1, 'Nigeria', 'Africa'), (2, 'Egypt', 'Africa'), (3, 'South Africa', 'Africa'), (4, 'Morocco', 'Africa');", "output": "SELECT SUM(quantity * price) FROM Sales INNER JOIN Garments ON Sales.garmentID = Garments.garmentID INNER JOIN Countries ON Garments.country = Countries.country WHERE isSustainable = true AND Countries.continent = 'Africa';"}
{"input": " \ud3c9\uade0 \uc9c0\uc18d\uac00\ub2a5\uc131 \ub4f1\uae09\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \ube0c\ub79c\ub4dc\ub2f9 \ud3c9\uade0 \uc9c0\uc18d\uac00\ub2a5\uc131 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE BrandSustainability (Brand VARCHAR(50), SustainabilityRating INT); INSERT INTO BrandSustainability (Brand, SustainabilityRating) VALUES ('Origins', 95); INSERT INTO BrandSustainability (Brand, SustainabilityRating) VALUES ('Lush', 90);", "output": "SELECT Brand, AVG(SustainabilityRating) OVER (PARTITION BY Brand) as 'AvgRating', RANK() OVER (ORDER BY AVG(SustainabilityRating) DESC) as 'Rank' FROM BrandSustainability;"}
{"input": " \uac01 \ub3c4 \ub0b4\uc5d0\uc11c \uc8fc\ubb38\ud55c \uc9c4\ub8cc\uc18c\uba85\ubcc4 \uc9c4\ub8cc\uc18c \uc218\uc6a9\ub2a5\ub825 \ud65c\uc6a9\ub960\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CapacityUtilization (ProvinceName VARCHAR(50), ClinicName VARCHAR(50), Capacity INT, Utilization INT); INSERT INTO CapacityUtilization (ProvinceName, ClinicName, Capacity, Utilization) VALUES ('Ontario', 'ClinicA', 200, 80), ('Ontario', 'ClinicB', 250, 90), ('Quebec', 'ClinicX', 150, 70), ('British Columbia', 'ClinicY', 200, 95), ('British Columbia', 'ClinicZ', 175, 85);", "output": "SELECT ProvinceName, ClinicName, Utilization, PERCENT_RANK() OVER (PARTITION BY ProvinceName ORDER BY Utilization DESC) AS PercentRank FROM CapacityUtilization"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8 \uc720\ud615\uc5d0 \ub300\ud55c \ucc38\uac00\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5bc\ub9c8\uc774\uba70, \ud504\ub85c\uadf8\ub7a8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uac01 \ud504\ub85c\uadf8\ub7a8 \uc720\ud615\ubcc4\ub85c \ubc1b\uc740 \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (program_id INT, program_name VARCHAR(50), program_type VARCHAR(20)); CREATE TABLE attendee_demographics (attendee_id INT, age INT, program_id INT); CREATE TABLE funding (funding_id INT, program_id INT, funding_amount DECIMAL(10,2)); INSERT INTO programs (program_id, program_name, program_type) VALUES (1, 'Art Education', 'Education'), (2, 'Music Education', 'Education'), (3, 'Theater Performance', 'Performance'); INSERT INTO attendee_demographics (attendee_id, age, program_id) VALUES (1, 25, 1), (2, 35, 2), (3, 45, 3); INSERT INTO funding (funding_id, program_id, funding_amount) VALUES (1, 1, 5000), (2, 2, 3000), (3, 3, 8000);", "output": "SELECT program_type, AVG(ad.age) AS avg_age, SUM(f.funding_amount) AS total_funding FROM programs p INNER JOIN attendee_demographics ad ON p.program_id = ad.program_id INNER JOIN funding f ON p.program_id = f.program_id GROUP BY program_type;"}
{"input": " \uac01 \uc5ed\uc5d0\uc11c \uc2dc\uac01 \uc7a5\uc560\uac00 \uc788\ub294 \uc2b9\uac1d\uc740 \uba87 \uba85\uc774\ub098 \uae30\ucc28\uc5d0 \ud0d1\uc2b9\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE passenger (passenger_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), disability VARCHAR(20)); INSERT INTO passenger (passenger_id, name, age, gender, disability) VALUES (1001, 'Alex Brown', 35, 'Male', 'Visual Impairment');", "output": "SELECT passenger_id, name, age, gender, disability, station_id, COUNT(*) OVER (PARTITION BY station_id, disability) AS passengers_by_station_disability FROM passenger;"}
{"input": " \uc74c\uc545\uc7a5\ub974\ubcc4 \ud3c9\uade0 \uc7ac\uc0dd\uc2dc\uac04 \ubc0f \ucd1d\uc218\uc775 \uacc4\uc0b0", "context": "CREATE TABLE Genre (id INT, genre VARCHAR(255)); CREATE TABLE Song (id INT, genre_id INT, title VARCHAR(255), playtime INT); CREATE TABLE Sales (id INT, genre_id INT, year INT, revenue INT);", "output": "SELECT G.genre, AVG(S.playtime) as avg_playtime, SUM(S.revenue) as total_revenue FROM Genre G INNER JOIN Song S ON G.id = S.genre_id INNER JOIN Sales SL ON G.id = SL.genre_id GROUP BY G.genre;"}
{"input": " 2019\ub144, 2020\ub144, 2021\ub144\uc5d0 \uc774\uc9d1\ud2b8\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE visitor_stats (destination VARCHAR(20), visit_year INT); INSERT INTO visitor_stats (destination, visit_year) VALUES ('Egypt', 2019), ('Egypt', 2019), ('Egypt', 2020), ('Egypt', 2020), ('Egypt', 2021), ('Egypt', 2021), ('Egypt', 2021);", "output": "SELECT SUM(visits) FROM (SELECT COUNT(*) AS visits FROM visitor_stats WHERE destination = 'Egypt' AND visit_year = 2019 UNION ALL SELECT COUNT(*) FROM visitor_stats WHERE destination = 'Egypt' AND visit_year = 2020 UNION ALL SELECT COUNT(*) FROM visitor_stats WHERE destination = 'Egypt' AND visit_year = 2021) AS subquery;"}
{"input": " 2020\ub144 \ubbf8\uad6d \uac01 \uc8fc \uc0b0\uc5c5\ubcc4 \ucd5c\ub300 \uc77c\uc77c \uc0b0\uc5c5 \ud3d0\uc218 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_industrial_wastewater (state VARCHAR(255), year INT, industry VARCHAR(255), discharge FLOAT); INSERT INTO us_industrial_wastewater (state, year, industry, discharge) VALUES ('California', 2020, 'Manufacturing', 1200000), ('California', 2020, 'Agriculture', 800000), ('California', 2020, 'Mining', 500000), ('Texas', 2020, 'Manufacturing', 1500000), ('Texas', 2020, 'Agriculture', 900000), ('Texas', 2020, 'Mining', 700000);", "output": "SELECT state, industry, MAX(discharge) as max_daily_discharge FROM us_industrial_wastewater WHERE year = 2020 GROUP BY state, industry;"}
{"input": " \ub9c8\uc774\uc560\ubbf8\uc2dc\uc758 Maria Rodriguez \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud558\ub294 \uacbd\uc6b0 \uc0ac\ub840 #3\uc758 \uacb0\uacfc\ub97c '\ud56d\uc18c \uc911'\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), city VARCHAR(50)); INSERT INTO attorneys (attorney_id, name, city) VALUES (1, 'Maria Rodriguez', 'Miami'); CREATE TABLE cases (case_id INT, attorney_id INT, outcome VARCHAR(50)); INSERT INTO cases (case_id, attorney_id, outcome) VALUES (1, NULL, 'Settled'), (2, 1, 'Dismissed'), (3, 1, 'Won');", "output": "UPDATE cases SET outcome = 'Under Appeal' WHERE case_id = 3 AND attorney_id IN (SELECT attorney_id FROM attorneys WHERE name = 'Maria Rodriguez' AND city = 'Miami');"}
{"input": " 'LA'\ud56d\uacfc 'LB'\ud56d\uc5d0\uc11c \uc591\ud558\ub41c \ud654\ubb3c\uc758 \ucd1d \ud1a4\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(20)); INSERT INTO ports (port_id, port_name) VALUES (1, 'LA'), (2, 'LB'), (3, 'HOU'); CREATE TABLE cargo (cargo_id INT, port_id INT, tonnage INT); INSERT INTO cargo (cargo_id, port_id, tonnage) VALUES (1, 1, 500000), (2, 1, 300000), (3, 2, 800000), (4, 3, 600000);", "output": "SELECT SUM(tonnage) FROM cargo WHERE port_id IN (SELECT port_id FROM ports WHERE port_name IN ('LA', 'LB'));"}
{"input": " \uc628\ub300\ub9bc\uc758 \ubaa8\ub4e0 \ub3c5\ud2b9\ud55c \uc885\uacfc \uc774\ub4e4\uc758 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac \uac12\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE species (id INT, name VARCHAR(50), forest_id INT); INSERT INTO species (id, name, forest_id) VALUES (1, 'Oak', 3), (2, 'Maple', 3), (3, 'Pine', 1), (4, 'Spruce', 2); CREATE TABLE carbon_sequestration (species_id INT, forest_id INT, value DECIMAL(5,2)); INSERT INTO carbon_sequestration (species_id, forest_id, value) VALUES (1, 3, 12.50), (1, 3, 13.00), (2, 3, 11.00), (3, 1, 5.00), (4, 2, 7.50);", "output": "SELECT s.name, AVG(cs.value) FROM species s JOIN carbon_sequestration cs ON s.id = cs.species_id JOIN forests f ON s.forest_id = f.id WHERE f.type = 'temperate' GROUP BY s.name;"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \uc561\uc158 \uac8c\uc784\uc744 \ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Location VARCHAR(20)); INSERT INTO Players (PlayerID, Age, Gender, Location) VALUES (1, 22, 'Female', 'Brazil'); INSERT INTO Players (PlayerID, Age, Gender, Location) VALUES (2, 35, 'Male', 'Argentina'); CREATE TABLE Games (GameID INT, GameName VARCHAR(20), Genre VARCHAR(20)); INSERT INTO Games (GameID, GameName, Genre) VALUES (1, 'Jungle Rush', 'Action');", "output": "SELECT COUNT(*) FROM Players INNER JOIN (SELECT DISTINCT PlayerID FROM Games WHERE Genre = 'Action') AS ActionPlayers ON Players.PlayerID = ActionPlayers.PlayerID WHERE Players.Location = 'South America';"}
{"input": " \ub9e4\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uace1\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SongRevenue (SongID INT, Revenue DECIMAL(10, 2));   INSERT INTO SongRevenue (SongID, Revenue) VALUES (1, 1000);   INSERT INTO SongRevenue (SongID, Revenue) VALUES (2, 2000);   INSERT INTO SongRevenue (SongID, Revenue) VALUES (3, 3000);", "output": "SELECT SongID, Revenue FROM SongRevenue ORDER BY Revenue DESC LIMIT 3;"}
{"input": " \ud638\uc8fc \uc6d0\uc8fc\ubbfc \ubc0f \ube44\uc6d0\uc8fc\ubbfc\uc5d0 \ub300\ud55c \ud615\uc0ac \uc0ac\ubc95 \uc808\ucc28\uc758 \uac01 \ub2e8\uacc4\uc5d0\uc11c \uc0ac\uac74 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE australia_criminal_justice (id INT, population VARCHAR(255), stage VARCHAR(255), cases INT); INSERT INTO australia_criminal_justice (id, population, stage, cases) VALUES (1, 'Indigenous', 'Arrest', 300), (2, 'Indigenous', 'Charge', 250), (3, 'Indigenous', 'Trial', 200), (4, 'Indigenous', 'Sentencing', 150), (5, 'Non-Indigenous', 'Arrest', 2000), (6, 'Non-Indigenous', 'Charge', 1500), (7, 'Non-Indigenous', 'Trial', 1000), (8, 'Non-Indigenous', 'Sentencing', 500);", "output": "SELECT population, stage, SUM(cases) AS total_cases FROM australia_criminal_justice GROUP BY population, stage;"}
{"input": " \uad50\uc721 \ubd80\ubb38\uc5d0\uc11c \uc5b4\ub290 \uc131\ubcc4\uc758 \ub178\uc870 \uac00\uc785\ub960\uc774 \uac00\uc7a5 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE genders (id INT, gender VARCHAR(10)); INSERT INTO genders (id, gender) VALUES (1, 'Male'), (2, 'Female'), (3, 'Other'); CREATE TABLE education_sectors (sector_id INT, sector_name VARCHAR(255)); INSERT INTO education_sectors (sector_id, sector_name) VALUES (1, 'Primary Education'), (2, 'Secondary Education'), (3, 'Higher Education'); CREATE TABLE union_membership_by_gender (id INT, gender_id INT, sector_id INT, membership_rate DECIMAL(5,2)); INSERT INTO union_membership_by_gender (id, gender_id, sector_id, membership_rate) VALUES (1, 1, 1, 0.72), (2, 2, 2, 0.81), (3, 3, 3, 0.68);", "output": "SELECT gender, MAX(membership_rate) FROM union_membership_by_gender u  JOIN genders g ON u.gender_id = g.id JOIN education_sectors e ON u.sector_id = e.sector_id GROUP BY gender;"}
{"input": "\uce74\uc774\ub85c\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uacf5\uc5f0\uc744 \ud55c \uc608\uc220\uac00\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artist_events (artist_id INT, event_id INT); CREATE TABLE artists (id INT, name VARCHAR(50)); CREATE TABLE events (id INT, city VARCHAR(20));", "output": "SELECT artists.name FROM artists INNER JOIN artist_events ON artists.id = artist_events.artist_id INNER JOIN events ON artist_events.event_id = events.id WHERE city = 'Cairo' GROUP BY artists.name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " \uad50\uc721\uc744 \uc774\uc218\ud558\uc9c0 \uc54a\uc740 \uc9c1\uc6d0\uc744 \uc81c\uc678\ud55c \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, FirstName varchar(50), LastName varchar(50), Department varchar(50), Salary int); CREATE TABLE TrainingPrograms (TrainingID int, EmployeeID int); CREATE TABLE EmployeeTrainings (TrainingID int, EmployeeID int, CompletionDate date);", "output": "SELECT e.Department, AVG(e.Salary) as AvgSalary FROM Employees e JOIN TrainingPrograms tp ON e.EmployeeID = tp.EmployeeID JOIN EmployeeTrainings et ON tp.TrainingID = et.TrainingID GROUP BY e.Department HAVING COUNT(DISTINCT e.EmployeeID) = (SELECT COUNT(DISTINCT EmployeeID) FROM Employees e JOIN TrainingPrograms tp ON e.EmployeeID = tp.EmployeeID WHERE et.CompletionDate IS NOT NULL);"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4 \uc8fc\uc2dd \uc2dc\uc7a5 \ubaa8\ub450\uc5d0 \ud22c\uc790\ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Investments (CustomerID INT, Market VARCHAR(20), Value DECIMAL(10,2)); INSERT INTO Investments (CustomerID, Market, Value) VALUES (1, 'US', 5000); INSERT INTO Investments (CustomerID, Market, Value) VALUES (2, 'Canada', 3000);", "output": "SELECT CustomerID FROM Investments WHERE Market = 'US' INTERSECT SELECT CustomerID FROM Investments WHERE Market = 'Canada'"}
{"input": " \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donations (DonationID INT, DonationDate DATE, DonationAmount DECIMAL(10,2), ProgramID INT); INSERT INTO Donations (DonationID, DonationDate, DonationAmount, ProgramID) VALUES (1, '2022-01-01', 100.00, 1), (2, '2022-01-15', 200.00, 1), (3, '2022-02-01', 300.00, 2), (4, '2022-02-15', 400.00, 2);", "output": "SELECT ProgramID, SUM(DonationAmount) OVER (PARTITION BY ProgramID ORDER BY ProgramID) AS TotalDonation FROM Donations;"}
{"input": "\uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc758 \uac00\uc7a5 \ube60\ub978 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects(id INT, name VARCHAR(50), lead_researcher VARCHAR(50), start_date DATE);INSERT INTO projects (id, name, lead_researcher, start_date) VALUES (1, 'ProjectX', 'Dr. Jane Smith', '2021-01-01');INSERT INTO projects (id, name, lead_researcher, start_date) VALUES (2, 'ProjectY', 'Dr. John Doe', '2020-06-15');", "output": "SELECT MIN(start_date) FROM projects WHERE sector = 'Genetics';"}
{"input": " \uc724\ub9ac\uc801 AI \ud504\ub85c\uc81d\ud2b8\uc5d0 \uc790\uae08\uc744 \uc9c0\uc6d0\ud558\ub294 \uc0c1\uc704 3\uba85\uc758 \uae30\uc5ec\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contributor (contributor_id INT, contributor_name VARCHAR(255), amount DECIMAL(10,2)); INSERT INTO contributor (contributor_id, contributor_name, amount) VALUES (1, 'Tech for Good Foundation', 600000), (2, 'AI Ethics Alliance', 450000), (3, 'Digital Responsibility Fund', 500000), (4, 'Inclusive AI Coalition', 300000); CREATE TABLE contributor_project (contributor_id INT, project_id INT); INSERT INTO contributor_project (contributor_id, project_id) VALUES (1, 1), (2, 1), (3, 1), (4, 2);", "output": "SELECT contributor_name, SUM(amount) as total_contribution FROM contributor JOIN contributor_project ON contributor.contributor_id = contributor_project.contributor_id JOIN (SELECT project_id FROM project_budget WHERE project_name LIKE '%AI ethics%' GROUP BY project_id) AS project_filter ON contributor_project.project_id = project_filter.project_id GROUP BY contributor_name ORDER BY total_contribution DESC LIMIT 3;"}
{"input": " \ub2e4\uc591\ud55c \uc720\ud615\uc758 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \ud3b8\uc758 \uc2dc\uc124 \uc218\uc640 \uac01 \uc7a5\uc560 \uc720\ud615\uc5d0 \ub300\ud55c \ucd1d \ud3b8\uc758 \uc2dc\uc124\uc758 \ube44\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, student_name VARCHAR(255), disability_type VARCHAR(255)); CREATE TABLE accommodations (accommodation_id INT, student_id INT, accommodation_date DATE);", "output": "SELECT s.disability_type, COUNT(a.accommodation_id) as accommodations_count, ROUND(COUNT(a.accommodation_id) * 100.0 / (SELECT COUNT(*) FROM accommodations) , 2) as percentage_of_total FROM students s JOIN accommodations a ON s.student_id = a.student_id GROUP BY s.disability_type;"}
{"input": " 2020\ub144 3\ubd84\uae30 \ub3d9\uc548 \uac01 \uae30\uacc4\uac00 \uc0dd\uc0b0\ub41c \uc2dc\uac04\uc758 \ubc31\ubd84\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MachineProduction (ID INT, MachineID INT, StartTime TIME, EndTime TIME); INSERT INTO MachineProduction (ID, MachineID, StartTime, EndTime) VALUES (1, 501, '06:00:00', '14:00:00'), (2, 502, '08:00:00', '16:00:00'), (3, 501, '10:00:00', '18:00:00'), (4, 503, '07:00:00', '15:00:00');", "output": "SELECT MachineID, SUM(TIMESTAMPDIFF(HOUR, StartTime, EndTime)) / (SELECT SUM(TIMESTAMPDIFF(HOUR, StartTime, EndTime)) FROM MachineProduction WHERE MachineProduction.MachineID = Machines.ID AND MachineProduction.StartTime >= '2020-07-01' AND MachineProduction.StartTime < '2020-10-01') * 100 AS Percentage FROM Machines WHERE MachineID IN (SELECT MachineID FROM MachineProduction WHERE MachineProduction.StartTime >= '2020-07-01' AND MachineProduction.StartTime < '2020-10-01') GROUP BY MachineID;"}
{"input": " \uc7ac\ud65c\uc6a9 \uc7ac\ub8cc\ub97c \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \uc5f0\ub77d\ucc98 \uc815\ubcf4 \ubc0f \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uacf5\uae09\ub41c \uc7ac\ud65c\uc6a9 \uc7ac\ub8cc \uc218\ub7c9\uacfc \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE suppliers (supplier_id INT, name VARCHAR(255), email VARCHAR(255), phone VARCHAR(20));CREATE TABLE recycled_materials (material_id INT, name VARCHAR(255), supplier_id INT, quantity_supplied INT);CREATE TABLE dates (date DATE);INSERT INTO suppliers (supplier_id, name, email, phone) VALUES (1, 'Green Supplies', 'info@greensupplies.com', '1234567890'), (2, 'Eco Resources', 'contact@ecoresources.com', '0987654321');INSERT INTO recycled_materials (material_id, name, supplier_id, quantity_supplied) VALUES (1, 'Recycled Cotton', 1, 1500), (2, 'Recycled Polyester', 2, 2000);INSERT INTO dates (date) VALUES ('2021-07-01'), ('2021-08-01'), ('2021-09-01'), ('2021-10-01'), ('2021-11-01'), ('2021-12-01');", "output": "SELECT suppliers.name, suppliers.email, suppliers.phone, SUM(recycled_materials.quantity_supplied) as total_quantity_supplied FROM suppliers JOIN recycled_materials ON suppliers.supplier_id = recycled_materials.supplier_id JOIN dates ON dates.date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) WHERE recycled_materials.name IN ('Recycled Cotton', 'Recycled Polyester') GROUP BY suppliers.name, suppliers.email, suppliers.phone;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uacf5\uc5f0\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uacfc \uc7a5\ub974\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE artists (id INT, name VARCHAR(255), genre VARCHAR(255), home_country VARCHAR(255)); CREATE TABLE artist_concerts (artist_id INT, country VARCHAR(255), city VARCHAR(255)); INSERT INTO artists (id, name, genre, home_country) VALUES (1, 'Taylor Swift', 'Country Pop', 'United States'); INSERT INTO artist_concerts (artist_id, country, city) VALUES (1, 'Canada', 'Toronto');", "output": "SELECT a.name, a.genre FROM artists a WHERE a.id NOT IN (SELECT ac.artist_id FROM artist_concerts ac WHERE ac.country = 'United States');"}
{"input": " \uae30\uc220\uc0b0\uc5c5 \ubca0\ud14c\ub791\uc774 \ucc3d\uc5c5\ud55c \uae30\uc5c5\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub420\uae4c\uc694?", "context": "CREATE TABLE company (id INT, name TEXT, founding_date DATE, industry TEXT, headquarters TEXT, veteran_founder BOOLEAN);", "output": "SELECT (COUNT(*) FILTER (WHERE industry = 'technology' AND veteran_founder = TRUE)) * 100.0 / COUNT(*) AS percentage FROM company;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uae30\ud6c4 \uc644\ud654 \uc815\ucc45\uc744 \uc2dc\ud589\ud55c \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \ud3c9\uade0 \uc628\uc2e4\uac00\uc2a4 \ubc30\ucd9c \uac10\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_mitigation_policies (country VARCHAR(255), year INT, reduction FLOAT);", "output": "SELECT AVG(reduction) FROM climate_mitigation_policies WHERE year BETWEEN 2015 AND 2020 AND country IN (SELECT country FROM african_countries);"}
{"input": " \uacf5\uae09\ud558\ub294 \ud654\ud559\ubb3c\uc9c8\uc758 \ud3c9\uade0 \uac00\uaca9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 10% \uacf5\uae09\uc5c5\uccb4\ub97c \ud3c9\uade0 \uac00\uaca9 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_inventory ( id INT PRIMARY KEY, chemical_name VARCHAR(255), quantity INT, supplier VARCHAR(255), last_updated TIMESTAMP);CREATE TABLE supplier_info ( id INT PRIMARY KEY, supplier_name VARCHAR(255), address VARCHAR(255), country VARCHAR(255));CREATE TABLE chemical_prices ( id INT PRIMARY KEY, chemical_name VARCHAR(255), price DECIMAL(10,2), price_updated_date DATE);", "output": "SELECT s.supplier_name, AVG(cp.price) AS avg_price FROM supplier_info s JOIN chemical_inventory ci ON s.supplier_name = ci.supplier JOIN chemical_prices cp ON ci.chemical_name = cp.chemical_name GROUP BY s.supplier_name ORDER BY avg_price DESC FETCH FIRST 10 PERCENT ROWS ONLY;"}
{"input": " \uc57d\ubb3c '\ub4dc\ub7ec\uadf8A'\uc640 '\ub4dc\ub7ec\uadf8B'\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE drugs (drug_name TEXT, sales INTEGER); INSERT INTO drugs (drug_name, sales) VALUES ('DrugA', 5000), ('DrugB', 7000);", "output": "SELECT SUM(sales) FROM drugs WHERE drug_name IN ('DrugA', 'DrugB');"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc11d\ubc29\ub41c \uac1c\uc778\uc758 \ud3c9\uade0 \uac10\uc625 \uccb4\ub958 \uae30\uac04\uc744 \ubc94\uc8c4 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE prison_releases (id INT, offense_type TEXT, release_date DATE, length_of_stay INT);", "output": "SELECT offense_type, AVG(length_of_stay) FROM prison_releases WHERE release_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY offense_type;"}
{"input": " 2021\ub144 4\ubd84\uae30\uc5d0 \ud65c\uc131\ud654\ub41c \ubaa8\ub4e0 \uc720\uc815\uc758 \uc774\ub984\uacfc \uc0dd\uc0b0\ub7c9\uc740 \uc0dd\uc0b0\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name TEXT, production_qty INT, start_date DATE, end_date DATE); INSERT INTO wells (well_id, well_name, production_qty, start_date, end_date) VALUES (1, 'Well A', 500, '2020-01-01', '2022-02-28'), (2, 'Well B', 700, '2021-01-01', '2023-01-01');", "output": "SELECT well_name, production_qty FROM wells WHERE start_date <= '2021-10-01' AND end_date >= '2021-01-01' ORDER BY production_qty DESC;"}
{"input": " 2015\ub144 \uc774\ud6c4 \uc544\ud504\ub9ac\uce74\uc5d0 \uc5f0\uac04 \ud3c9\uade0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc219\ubc15 \uc2dc\uc124\uc774 \ucd94\uac00\ub41c \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE sustainable_accommodations (id INT, name TEXT, country TEXT, added_date DATE); INSERT INTO sustainable_accommodations (id, name, country, added_date) VALUES (1, 'Eco Lodge', 'Kenya', '2017-01-01'), (2, 'Green Resort', 'Tanzania', '2018-07-15'), (3, 'Sustainable Hotel', 'Morocco', '2019-12-25');", "output": "SELECT AVG(yearly_added) FROM (SELECT EXTRACT(YEAR FROM added_date) AS year, COUNT(*) AS yearly_added FROM sustainable_accommodations WHERE added_date >= '2015-01-01' GROUP BY EXTRACT(YEAR FROM added_date)) AS subquery;"}
{"input": " '\uc11c\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (ClaimID INT, PolicyID INT, Amount INT, Region VARCHAR(10)); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (1, 101, 500, 'North'); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (2, 102, 750, 'South'); INSERT INTO Claims (ClaimID, PolicyID, Amount, Region) VALUES (3, 103, 900, 'West');", "output": "SELECT MAX(Amount) FROM Claims WHERE Region = 'West';"}
{"input": " \uce90\ub098\ub2e4 \ub0b4 \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uac01 \ud300\uc758 \uc21c\uc704\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(100)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Toronto Raptors'), (2, 'Vancouver Grizzlies'); CREATE TABLE matches (match_id INT, team_home_id INT, team_away_id INT, tickets_sold INT); INSERT INTO matches (match_id, team_home_id, team_away_id, tickets_sold) VALUES (9, 1, 2, 15000), (10, 2, 1, 17000);", "output": "SELECT team_name, RANK() OVER (ORDER BY total_sales DESC) as team_rank FROM (SELECT team_home_id, SUM(tickets_sold) as total_sales FROM matches WHERE location = 'Canada' GROUP BY team_home_id UNION ALL SELECT team_away_id, SUM(tickets_sold) as total_sales FROM matches WHERE location = 'Canada' GROUP BY team_away_id) total_sales JOIN teams t ON total_sales.team_home_id = t.team_id OR total_sales.team_away_id = t.team_id;"}
{"input": " \uc2ec\uac01\ub3c4\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c, \ube48\ub3c4\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uac01 \uc18c\uc2a4\uc758 \uc704\ud611 \uc2ec\uac01\ub3c4\uc640 \ube48\ub3c4\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE threat (id INT, source VARCHAR(255), severity INT, threat_date DATE); INSERT INTO threat (id, source, severity, threat_date) VALUES (1, 'Cyber Attack', 8, '2021-06-05'); INSERT INTO threat (id, source, severity, threat_date) VALUES (2, 'Terrorism', 5, '2022-02-12'); CREATE TABLE source (id INT, name VARCHAR(255)); INSERT INTO source (id, name) VALUES (1, 'Cyber Attack'); INSERT INTO source (id, name) VALUES (2, 'Terrorism');", "output": "SELECT s.name as source, t.severity, COUNT(t.id) as threat_frequency, ROW_NUMBER() OVER (ORDER BY t.severity DESC, COUNT(t.id) DESC) as rank FROM threat t JOIN source s ON t.source = s.name GROUP BY s.name, t.severity ORDER BY severity DESC, threat_frequency DESC;"}
{"input": " \uc9c0\ub09c\uc8fc \uac01 \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc758 \ud310\ub9e4 \uc218\uc775 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (sale_id INT, product_category VARCHAR(255), sales FLOAT, sale_date DATE); INSERT INTO sales (sale_id, product_category, sales, sale_date) VALUES (1, 'Electronics', 100, '2022-01-01'), (2, 'Clothing', 200, '2022-01-02'), (3, 'Electronics', 150, '2022-01-03');", "output": "SELECT product_category, SUM(sales) / (SELECT SUM(sales) FROM sales WHERE sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK)) FROM sales WHERE sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) GROUP BY product_category;"}
{"input": " \ud1a0\ub860\ud1a0 \ub0b4 \uc6d0\uc8fc\ubbfc \ubc94\uc8c4\uc790 \ubc0f \ud68c\ubcf5\uc801 \uc815\uc758 \uc911\uc7ac \uc0ac\uac74\uc758 \uc0ac\uac74 \ubc88\ud638\uc640 \uc704\uce58\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE offenders (id INT, name VARCHAR(255), age INT, gender VARCHAR(10), ethnicity VARCHAR(50)); INSERT INTO offenders (id, name, age, gender, ethnicity) VALUES (1, 'David Grey', 32, 'Male', 'Indigenous'); INSERT INTO offenders (id, name, age, gender, ethnicity) VALUES (2, 'Susan Black', 28, 'Female', 'Indigenous'); CREATE TABLE restorative_justice (case_id INT, type VARCHAR(50), facilitator VARCHAR(255), location VARCHAR(100)); INSERT INTO restorative_justice (case_id, type, facilitator, location) VALUES (1, 'Victim-Offender Mediation', 'John Smith', 'Toronto'); INSERT INTO restorative_justice (case_id, type, facilitator, location) VALUES (2, 'Community Reintegration', 'Emily Johnson', 'Toronto'); CREATE TABLE cases (id INT, offender_id INT, case_number VARCHAR(50), location VARCHAR(100)); INSERT INTO cases (id, offender_id, case_number, location) VALUES (1, 1, '2021-CJR-0001', 'Toronto'); INSERT INTO cases (id, offender_id, case_number, location) VALUES (2, 2, '2022-CJR-0002', 'Toronto');", "output": "SELECT c.case_number, rj.location FROM cases c JOIN restorative_justice rj ON c.id = rj.case_id WHERE c.offender_id IN (SELECT id FROM offenders WHERE ethnicity = 'Indigenous') AND rj.location = 'Toronto';"}
{"input": " 2020\ub144\uc5d0 \ubd80\uc11c\ub97c \ubc14\uafbc \uc9c1\uc6d0 \uc218\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE department_changes (id INT, employee_id INT, change_date DATE, new_department VARCHAR(255)); INSERT INTO department_changes (id, employee_id, change_date, new_department) VALUES (1, 401, '2020-03-01', 'IT'); INSERT INTO department_changes (id, employee_id, change_date, new_department) VALUES (2, 402, '2019-12-20', 'HR');", "output": "SELECT COUNT(DISTINCT employee_id) FROM department_changes WHERE YEAR(change_date) = 2020;"}
{"input": " \uc9c0\ub09c 20\uacbd\uae30\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc5b4\uc2dc\uc2a4\ud2b8\ub97c \uae30\ub85d\ud55c MVP \ud6c4\ubcf4\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE players (player_name TEXT, team TEXT, position TEXT, assists INT); INSERT INTO players (player_name, team, position, assists) VALUES ('Sue Bird', 'Seattle Storm', 'Guard', 15), ('Breanna Stewart', 'Seattle Storm', 'Forward', 5);", "output": "SELECT player_name, assists FROM (SELECT player_name, assists, RANK() OVER (PARTITION BY team ORDER BY assists DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 19 PRECEDING) as rank FROM players WHERE position = 'Guard') subquery WHERE rank = 1;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc758 \ucd1d \uad70\uc0ac\uae30\uc9c0 \uc218\uc640 \uad6d\uac00\ubcc4 \uae30\uc9c0 \uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE military_bases (id INT, name TEXT, country TEXT); INSERT INTO military_bases (id, name, country) VALUES (1, 'Fort Bragg', 'USA'), (2, 'CFB Petawawa', 'Canada');", "output": "SELECT m.country, COUNT(m.id) as total_bases FROM military_bases m GROUP BY m.country;"}
{"input": "\uc801\uc5b4\ub3c4 \ub450 \uba85\uc758 \uc11c\ub85c \ub2e4\ub978 \ucf58\uc194 \ud50c\ub808\uc774\uc5b4\uac00 \ud50c\ub808\uc774\ud55c \uac8c\uc784\uc758 \uc774\ub984\uacfc \uc7a5\ub974\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE PlayerGames (PlayerID INT, GameID INT); INSERT INTO PlayerGames (PlayerID, GameID) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 4), (7, 5); CREATE TABLE GameDesign (GameID INT, Name VARCHAR(50), Genre VARCHAR(20), NumLevels INT); INSERT INTO GameDesign (GameID, Name, Genre, NumLevels) VALUES (1, 'VR Racer', 'Racing', 10), (2, 'Solar System', 'Simulation', 1), (3, 'VR Puzzler', 'Puzzle', 15), (4, 'Space Shooter', 'Shooter', 20), (5, 'Mystery Game', 'Adventure', 25);", "output": "SELECT Name, Genre FROM GameDesign WHERE GameID IN (SELECT GameID FROM PlayerGames GROUP BY GameID HAVING COUNT(DISTINCT PlayerID) >= 2);"}
{"input": " \ud638\uc8fc\uc640 \uc778\ub3c4\uc5d0\uc11c \uc554 \uce58\ub8cc\ub97c \uc81c\uacf5\ud558\ub294 \uc2dc\uace8 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE hospitals_au (id INT, name TEXT, cancer_treatment BOOLEAN); INSERT INTO hospitals_au VALUES (1, 'Rural Hospital A', TRUE); INSERT INTO hospitals_au VALUES (2, 'Rural Hospital B', FALSE); CREATE TABLE clinics_au (id INT, name TEXT, cancer_treatment BOOLEAN); INSERT INTO clinics_au VALUES (1, 'Rural Clinic A', TRUE); INSERT INTO clinics_au VALUES (2, 'Rural Clinic B', TRUE); CREATE TABLE hospitals_in (id INT, name TEXT, cancer_treatment BOOLEAN); INSERT INTO hospitals_in VALUES (1, 'Rural Hospital A', TRUE); INSERT INTO hospitals_in VALUES (2, 'Rural Hospital B', FALSE); CREATE TABLE clinics_in (id INT, name TEXT, cancer_treatment BOOLEAN); INSERT INTO clinics_in VALUES (1, 'Rural Clinic A', TRUE); INSERT INTO clinics_in VALUES (2, 'Rural Clinic B', FALSE);", "output": "SELECT COUNT(*) FROM hospitals_au WHERE cancer_treatment = TRUE UNION SELECT COUNT(*) FROM clinics_au WHERE cancer_treatment = TRUE UNION SELECT COUNT(*) FROM hospitals_in WHERE cancer_treatment = TRUE UNION SELECT COUNT(*) FROM clinics_in WHERE cancer_treatment = TRUE;"}
{"input": " \uc0ac\uc6a9\uc790 'John Doe'\uc758 \ud68c\uc6d0 \uc0c1\ud0dc\ub97c '\ube44\ud65c\uc131'\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE membership (user_id INT, name VARCHAR(50), status VARCHAR(20)); INSERT INTO membership (user_id, name, status) VALUES (1, 'John Doe', 'Active');", "output": "WITH updated_membership AS (UPDATE membership SET status = 'Inactive' WHERE name = 'John Doe' RETURNING *) SELECT * FROM updated_membership;"}
{"input": " \ud14d\uc0ac\uc2a4 \uace0\uac1d\uc758 \uc6d4 \ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, state VARCHAR(255), monthly_data_usage INT);", "output": "SELECT AVG(monthly_data_usage) FROM customers WHERE state = 'Texas';"}
{"input": " \uc81c\uc791\uc5f0\ub3c4\uac00 \uac00\uc7a5 \ube60\ub978 \uc720\ubb3c\uc758 \uba85\uce6d\uacfc \uc5ed\uc0ac\uc801 \uc758\ubbf8\ub294 \ubb34\uc5c7\uc778\uac00?", "context": "CREATE TABLE Artifacts (ArtifactID INT, Name VARCHAR(100), CreationDate DATETIME, HistoricalSignificance TEXT); INSERT INTO Artifacts (ArtifactID, Name, CreationDate, HistoricalSignificance) VALUES (1, 'Ancient Dagger', '1500-01-01', 'Ceremonial weapon of ancient civilization');", "output": "SELECT Name, HistoricalSignificance FROM (SELECT Name, CreationDate, HistoricalSignificance, ROW_NUMBER() OVER (ORDER BY CreationDate) as RowNum FROM Artifacts) as ArtifactRank WHERE RowNum = 1;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uce90\ub098\ub2e4\uc758 \ucd1d \ud558\uc774\ube0c\ub9ac\ub4dc \ubc0f \uc804\uae30 \uc790\ub3d9\ucc28 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vehicle_Sales (id INT, vehicle_type VARCHAR(255), quantity_sold INT, region VARCHAR(50), sale_quarter INT); INSERT INTO Vehicle_Sales (id, vehicle_type, quantity_sold, region, sale_quarter) VALUES (1, 'Tesla Model 3 (Hybrid)', 1000, 'Canada', 1); INSERT INTO Vehicle_Sales (id, vehicle_type, quantity_sold, region, sale_quarter) VALUES (2, 'Chevrolet Volt (Electric)', 800, 'Canada', 1);", "output": "SELECT SUM(quantity_sold) FROM Vehicle_Sales WHERE region = 'Canada' AND (vehicle_type = 'Tesla Model 3 (Hybrid)' OR vehicle_type = 'Chevrolet Volt (Electric)') AND sale_quarter = 1;"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 \uac1c\uc778 \uae30\ubd80\uc790\uc640 \ub2e8\uccb4\uac00 '\uac74\uac15'\uc744 \uc704\ud574 \uae30\ubd80\ud55c \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE organizations (org_id INT, donor_id INT, name VARCHAR(255));", "output": "SELECT IF(d.donor_id IN (SELECT donor_id FROM organizations), 'Individual', 'Organization') as donor_type, ROUND(COUNT(d.donor_id) / (SELECT COUNT(DISTINCT donor_id) FROM donations d WHERE d.donation_date BETWEEN '2022-07-01' AND '2022-09-30' AND cause = 'Health') * 100, 2) as percentage FROM donations d JOIN organizations o ON d.donor_id = o.donor_id WHERE d.donation_date BETWEEN '2022-07-01' AND '2022-09-30' AND cause = 'Health' GROUP BY donor_type;"}
{"input": " 2010\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc720\ub7fd\uc758 \uc628\uc2e4\uac00\uc2a4 \ubc30\ucd9c \ucd94\uc138\ub294 \uc5b4\ub5bb\uace0, 2025\ub144 \uc804\ub9dd\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE greenhouse_gas_emissions (region VARCHAR(255), year INT, emissions FLOAT);", "output": "SELECT year, emissions FROM greenhouse_gas_emissions WHERE region = 'Europe' UNION SELECT 2025, (SELECT emissions FROM greenhouse_gas_emissions WHERE region = 'Europe' AND year = 2020 * 1.05) AS emissions;"}
{"input": " \ud638\uc8fc\uc5d0\uc11c \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uac00\uc7a5 \uc704\ud5d8\ud55c \uc0c1\uc704 2\uac1c \uc9c0\uc5ed\uc744 \ucd1d \uccad\uad6c \uae08\uc561 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Claims (PolicyType VARCHAR(20), ClaimAmount DECIMAL(10, 2), Region VARCHAR(50)); INSERT INTO Claims VALUES ('Auto', 5000, 'New South Wales'); INSERT INTO Claims VALUES ('Home', 3000, 'New South Wales'); INSERT INTO Claims VALUES ('Auto', 4000, 'Queensland'); INSERT INTO Claims VALUES ('Home', 6000, 'Queensland');", "output": "SELECT Region, AVG(ClaimAmount) AS AvgClaimAmount, SUM(ClaimAmount) AS TotalClaimAmount FROM Claims WHERE Country = 'Australia' GROUP BY Region ORDER BY TotalClaimAmount DESC, AvgClaimAmount DESC LIMIT 2;"}
{"input": " \ub274\uc695 \ub808\uc2a4\ud1a0\ub791\uc758 \ucd5c\uc18c \uc2dd\ud488 \uc548\uc804 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE food_safety_inspections(restaurant VARCHAR(255), score INT, city VARCHAR(255)); INSERT INTO food_safety_inspections(restaurant, score, city) VALUES ('Restaurant1', 95, 'New York'), ('Restaurant2', 85, 'Los Angeles'), ('Restaurant3', 90, 'New York'), ('Restaurant4', 92, 'San Francisco'), ('Restaurant5', 88, 'San Francisco');", "output": "SELECT MIN(score) FROM food_safety_inspections WHERE city = 'New York';"}
{"input": " '\uc81c\uc870\uc5c5' \uc5c5\uc885\uc758 \ucd5c\uc800\uc784\uae08\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE if not exists salaries3 (id INT, industry TEXT, region TEXT, salary REAL);INSERT INTO salaries3 (id, industry, region, salary) VALUES (1, 'manufacturing', 'east', 40000), (2, 'retail', 'west', 50000);", "output": "SELECT MIN(salary) FROM salaries3 WHERE industry = 'manufacturing';"}
{"input": " \uacf5\uae09\uc5c5\uccb4 \uc774\ub984 \ubc0f \uad6d\uac00\ub97c \ud3ec\ud568\ud558\uc5ec \uacf5\uae09\uc5c5\uccb4\ubcc4 \uad70\uc6a9 \uc7a5\ube44 \ud310\ub9e4 \ubaa9\ub85d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Suppliers (Supplier_ID INT, Supplier_Name VARCHAR(50), Country VARCHAR(50)); INSERT INTO Suppliers (Supplier_ID, Supplier_Name, Country) VALUES (1, 'Hanwha Systems', 'South Korea'), (2, 'Rheinmetall', 'Germany'), (3, 'BAE Systems', 'United Kingdom'); CREATE TABLE Equipment (Equipment_ID INT, Equipment_Name VARCHAR(50), Supplier_ID INT, Unit_Price DECIMAL(10,2)); INSERT INTO Equipment (Equipment_ID, Equipment_Name, Supplier_ID, Unit_Price) VALUES (1, 'K9 Thunder', 1, 8500000), (2, 'Marder IFV', 2, 4500000), (3, 'CV90 Infantry Fighting Vehicle', 3, 5000000); CREATE TABLE Sales (Sale_ID INT, Equipment_ID INT, Quantity INT, Sale_Date DATE); INSERT INTO Sales (Sale_ID, Equipment_ID, Quantity, Sale_Date) VALUES (1, 1, 25, '2020-01-01'), (2, 2, 50, '2019-12-15'), (3, 3, 30, '2020-03-20');", "output": "SELECT S.Supplier_Name, C.Country, E.Equipment_Name, SUM(S.Quantity) AS 'Total Quantity Sold' FROM Sales S JOIN Equipment E ON S.Equipment_ID = E.Equipment_ID JOIN Suppliers S ON E.Supplier_ID = S.Supplier_ID JOIN Countries C ON S.Country = C.Country_Name GROUP BY S.Supplier_Name, C.Country, E.Equipment_Name;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \uc778\uad6c\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\uc758 \ucd5c\uc18c \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RecyclingRates (country VARCHAR(50), recycling_rate FLOAT); INSERT INTO RecyclingRates (country, recycling_rate) VALUES ('Nigeria', 0.15), ('Egypt', 0.2), ('South Africa', 0.35);", "output": "SELECT MIN(recycling_rate) FROM (SELECT * FROM RecyclingRates WHERE country IN ('Nigeria', 'Egypt', 'South Africa') ORDER BY recycling_rate DESC LIMIT 3);"}
{"input": " \uac01 \ud559\uacfc \ud559\uc0dd\ub4e4\uc774 \uc644\ub8cc\ud55c \uacf5\uac1c \uad50\uc721\ud559 \ud504\ub85c\uc81d\ud2b8\uc758 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE open_pedagogy_projects (id INT, project_name VARCHAR(50), student_id INT, hours_spent INT);   CREATE TABLE students (id INT, name VARCHAR(50), age INT, department_id INT);   CREATE TABLE departments (id INT, department_name VARCHAR(50), PRIMARY KEY(id));", "output": "SELECT d.department_name, COUNT(op.id) as num_projects_completed   FROM open_pedagogy_projects op   JOIN students st ON op.student_id = st.id   JOIN departments d ON st.department_id = d.id   GROUP BY d.department_name;"}
{"input": " \uc9c0\ub09c \ub2ec \uad11\uc0b0\uc758 \uad11\uc11d \uc0dd\uc0b0\ub7c9 \ubcc0\ud654\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production_stats (id INT, mine_id INT, date DATE, ore_production FLOAT);", "output": "SELECT a.mine_id, a.ore_production - LAG(a.ore_production) OVER (PARTITION BY a.mine_id ORDER BY a.date) as change_in_ore_production FROM production_stats a WHERE a.date >= DATEADD(month, -1, CURRENT_DATE) ORDER BY a.mine_id, a.date;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubcf4\uac74\uc758\ub8cc\uc778\uc758 \ubb38\ud654\uc5ed\ub7c9\ud6c8\ub828 \uc774\uc218\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE training_sessions (session_id INT, session_name VARCHAR(50), completed_by_worker INT); INSERT INTO training_sessions (session_id, session_name, completed_by_worker) VALUES (1, 'Cultural Competency 101', 120), (2, 'Advanced Cultural Competency', 80);", "output": "SELECT r.region_name, COUNT(chw.worker_id) as total_workers, COUNT(ts.completed_by_worker) as completed_trainings, 100.0 * COUNT(ts.completed_by_worker) / COUNT(chw.worker_id) as completion_rate FROM regions r INNER JOIN community_health_workers chw ON r.region_id = chw.region_id LEFT JOIN (training_sessions ts INNER JOIN (SELECT worker_id, MAX(session_id) as max_session_id FROM training_sessions GROUP BY worker_id) ts_max ON ts.session_id = ts_max.max_session_id AND ts.completed_by_worker = ts_max.worker_id) ON chw.worker_id = ts_max.worker_id GROUP BY r.region_name;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \uae30\ub85d\ub41c \ucd5c\uc18c \ubc14\uc774\uc624\uc13c\uc11c \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biosensors;CREATE TABLE if not exists biosensors.measurements (id INT PRIMARY KEY, location VARCHAR(100), temperature FLOAT); INSERT INTO biosensors.measurements (id, location, temperature) VALUES (1, 'Toronto', 20.5), (2, 'Montreal', 19.3), (3, 'Vancouver', 22.1), (4, 'Ottawa', 18.7), (5, 'Calgary', 21.2);", "output": "SELECT MIN(temperature) FROM biosensors.measurements WHERE location = 'Canada';"}
{"input": "\uc9c0\ub09c 5\ub144\uac04 \uac1c\ubd09\ub41c TV \ud504\ub85c\uadf8\ub7a8\uacfc \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE movies (title VARCHAR(255), genre VARCHAR(50), budget INT, release_year INT); CREATE TABLE tv_shows (title VARCHAR(255), genre VARCHAR(50), budget INT, release_year INT); INSERT INTO movies (title, genre, budget, release_year) VALUES ('Movie4', 'Comedy', 25000000, 2018), ('Movie5', 'Drama', 30000000, 2020), ('Movie6', 'Action', 40000000, 2022); INSERT INTO tv_shows (title, genre, budget, release_year) VALUES ('Show7', 'Comedy', 15000000, 2019), ('Show8', 'Drama', 20000000, 2021), ('Show9', 'Action', 25000000, 2022);", "output": "SELECT AVG(budget) FROM (SELECT budget FROM movies WHERE release_year >= (SELECT YEAR(CURRENT_DATE()) - 5) UNION ALL SELECT budget FROM tv_shows WHERE release_year >= (SELECT YEAR(CURRENT_DATE()) - 5)) as combined;"}
{"input": " \uc138\uacc4 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ud1b5\uacc4\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE energy_efficiency_stats (country VARCHAR(255), year INT, energy_efficiency_index FLOAT);", "output": "SELECT country, energy_efficiency_index FROM energy_efficiency_stats WHERE country IN (SELECT country FROM (SELECT country, AVG(energy_efficiency_index) as avg_efficiency FROM energy_efficiency_stats GROUP BY country ORDER BY avg_efficiency DESC LIMIT 5) as temp) ORDER BY energy_efficiency_index DESC;"}
{"input": " \uc6a9\ub7c9\uc774 150MW\ub97c \ucd08\uacfc\ud558\ub294 \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_farms (id INT, name TEXT, region TEXT, capacity_mw FLOAT); INSERT INTO wind_farms (id, name, region, capacity_mw) VALUES (1, 'Windfarm A', 'west', 150.5); INSERT INTO wind_farms (id, name, region, capacity_mw) VALUES (2, 'Windfarm B', 'east', 120.2); CREATE TABLE solar_power_plants (id INT, name TEXT, region TEXT, capacity_mw FLOAT); INSERT INTO solar_power_plants (id, name, region, capacity_mw) VALUES (1, 'Solar Plant A', 'north', 125.8); INSERT INTO solar_power_plants (id, name, region, capacity_mw) VALUES (2, 'Solar Plant B', 'south', 180.3);", "output": "SELECT name, capacity_mw FROM wind_farms WHERE capacity_mw > 150 UNION ALL SELECT name, capacity_mw FROM solar_power_plants WHERE capacity_mw > 150;"}
{"input": " 5\uac1c \uc774\uc0c1\uc758 \ube44\uc601\ub9ac \ub2e8\uccb4\uac00 \uc788\ub294 \uc704\uce58\uc640 \ud574\ub2f9 \uc704\uce58\uc758 \ud3c9\uade0 \uac70\ubc84\ub10c\uc2a4 \uc694\uc18c\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE nonprofits (id INT, organization_name VARCHAR(50), country VARCHAR(50), mission_statement TEXT); INSERT INTO nonprofits (id, organization_name, country, mission_statement) VALUES (1, 'Doctors Without Borders', 'Switzerland', 'Provide medical assistance to people in crisis.');", "output": "SELECT i.location, AVG(e.governance_factor) as avg_gov_factor FROM impact_investments i LEFT JOIN esg_factors e ON i.id = e.investment_id LEFT JOIN nonprofits n ON i.location = n.country GROUP BY i.location HAVING COUNT(DISTINCT n.id) > 5;"}
{"input": " \uc758\ub958 \uc0b0\uc5c5\uc5d0\uc11c \uc21c\ud658 \uacf5\uae09\ub9dd\uc758 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Companies (company_id INT, country TEXT); INSERT INTO Companies (company_id, country) VALUES (1, 'USA'), (2, 'China'), (3, 'Bangladesh'), (4, 'Italy'), (5, 'India'); CREATE TABLE SupplyChains (company_id INT, type TEXT); INSERT INTO SupplyChains (company_id, type) VALUES (1, 'circular'), (1, 'linear'), (2, 'linear'), (3, 'circular'), (4, 'circular'), (5, 'linear'); CREATE TABLE Apparel (company_id INT); INSERT INTO Apparel (company_id) VALUES (1), (2), (3), (4), (5);", "output": "SELECT C.country, (COUNT(S.company_id) * 100.0 / (SELECT COUNT(*) FROM Companies C2 JOIN Apparel A2 ON C2.country = A2.country)) AS percentage FROM Companies C JOIN SupplyChains S ON C.company_id = S.company_id JOIN Apparel A ON C.company_id = A.company_id WHERE S.type = 'circular' GROUP BY C.country ORDER BY percentage DESC;"}
{"input": " \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uae30\ubd80\uc561 \uae30\uc900 \uc0c1\uc704 2\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE donors_ext (id INT, name VARCHAR(50), donation_amount DECIMAL(10,2), donation_date DATE, program VARCHAR(50)); INSERT INTO donors_ext (id, name, donation_amount, donation_date, program) VALUES (1, 'Alice', 500.00, '2022-02-01', 'Refugee Support'), (2, 'Bob', 300.00, '2022-03-10', 'Disaster Response');", "output": "SELECT name, program, SUM(donation_amount) AS total_donation, RANK() OVER (PARTITION BY program ORDER BY SUM(donation_amount) DESC) AS donation_rank FROM donors_ext GROUP BY name, program HAVING donation_rank <= 2 ORDER BY program;"}
{"input": " \ub9c8\ucf00\ud305 \ubd80\uc11c\uc5d0\uc11c LGBTQ+\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Department VARCHAR(20), LGBTQ VARCHAR(5)); INSERT INTO Employees (EmployeeID, Gender, Department, LGBTQ) VALUES (1, 'Male', 'IT', 'No'), (2, 'Female', 'IT', 'No'), (3, 'Male', 'HR', 'Yes'), (4, 'Female', 'HR', 'No'), (5, 'Non-binary', 'Marketing', 'Yes');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees WHERE Department = 'Marketing')) AS Percentage FROM Employees WHERE Department = 'Marketing' AND LGBTQ = 'Yes';"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uac01 \uc791\ubb3c \uc885\ub958\uc758 \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Weather (date DATE, temperature INT, crop_type VARCHAR(20));", "output": "SELECT crop_type, AVG(temperature) OVER(PARTITION BY crop_type ORDER BY crop_type ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) as avg_temp FROM Weather;"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ubb38\ud654\uc720\uc0b0 3\uacf3\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE site_visits(visit_id INT, site_name TEXT, region TEXT, num_visits INT);", "output": "SELECT site_name, num_visits FROM (SELECT site_name, num_visits, ROW_NUMBER() OVER (PARTITION BY region ORDER BY num_visits DESC) AS rank FROM site_visits WHERE region = 'South America') subquery WHERE rank <= 3;"}
{"input": " \uae00\ub85c\ubc8c \uc2dc\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uac01 \uc758\ub958 \uc720\ud615\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, garment TEXT, quantity_sold INT); INSERT INTO sales (id, garment, quantity_sold) VALUES (1, 'T-Shirt', 1500), (2, 'Jeans', 1200), (3, 'Dress', 1800);", "output": "SELECT garment, SUM(quantity_sold) as total_quantity FROM sales GROUP BY garment;"}
{"input": " \ubaa8\ub4e0 \ud68c\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA fitness; USE fitness; CREATE TABLE members (member_id INT PRIMARY KEY, name VARCHAR(50), age INT, membership VARCHAR(20)); INSERT INTO members (member_id, name, age, membership) VALUES (1, 'John Doe', 30, 'gold'), (2, 'Jane Smith', 40, 'silver'), (3, 'Mike Johnson', 50, 'platinum'), (4, 'Alice Davis', 35, NULL);", "output": "SELECT AVG(age) FROM members;"}
{"input": " \uccab\ub0a0 \uc885\uac00 \ub300\ube44 \uac01 \uc8fc\uc2dd\uc758 \uc885\uac00 \ubcc0\ub3d9\ub960\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE stocks (stock_symbol TEXT, date DATE, open_price FLOAT, close_price FLOAT); INSERT INTO stocks (stock_symbol, date, open_price, close_price) VALUES ('AAPL', '2022-01-01', 150.00, 155.00), ('AAPL', '2022-01-02', 155.00, 160.00);", "output": "SELECT stock_symbol, date, close_price, (close_price - FIRST_VALUE(close_price) OVER (PARTITION BY stock_symbol ORDER BY date)) / FIRST_VALUE(close_price) OVER (PARTITION BY stock_symbol ORDER BY date) * 100 as percentage_change FROM stocks;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac8c\uc784\uc744 \ud558\uc9c0 \uc54a\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE GameSessions (SessionID INT, PlayerID INT, SessionDate DATE); INSERT INTO GameSessions (SessionID, PlayerID, SessionDate) VALUES (1, 1, '2021-01-01'), (2, 2, '2021-06-01'), (3, 3, '2021-03-01'), (4, 5, '2021-02-01');", "output": "DELETE FROM GameSessions WHERE PlayerID IN (SELECT PlayerID FROM GameSessions WHERE SessionDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH));"}
{"input": " \uc6cc\uc2f1\ud134\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \uc790\uc7ac \uc0c1\uc704 3\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE materials (id INT, name TEXT, sustainability_score INT); CREATE TABLE project_materials (id INT, project_id INT, material_id INT); INSERT INTO materials (id, name, sustainability_score) VALUES (1, 'Recycled Steel', 90); INSERT INTO materials (id, name, sustainability_score) VALUES (2, 'Reclaimed Wood', 80); INSERT INTO materials (id, name, sustainability_score) VALUES (3, 'Bamboo', 85); INSERT INTO project_materials (id, project_id, material_id) VALUES (1, 1, 1); INSERT INTO project_materials (id, project_id, material_id) VALUES (2, 1, 2); INSERT INTO project_materials (id, project_id, material_id) VALUES (3, 2, 3); INSERT INTO project_materials (id, project_id, material_id) VALUES (4, 2, 1);", "output": "SELECT materials.name, COUNT(project_materials.id) as material_count FROM materials JOIN project_materials ON materials.id = project_materials.material_id WHERE materials.sustainability_score >= 80 AND project_materials.project_id IN (SELECT id FROM projects WHERE state = 'Washington') GROUP BY materials.name ORDER BY material_count DESC LIMIT 3;"}
{"input": " \uc778\ub3c4 \ucf58\ud150\uce20\uc5d0 \ub300\ud55c \uc124\uba85\uc758 \ud3c9\uade0 \uae38\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE media_content (id INT PRIMARY KEY, title VARCHAR(255), description TEXT, country VARCHAR(64), media_type VARCHAR(64)); INSERT INTO media_content (id, title, description, country, media_type) VALUES (1, 'Movie A', 'Short description', 'India', 'Movie'), (2, 'Show B', 'Long description', 'India', 'Show');", "output": "SELECT AVG(LENGTH(description)) AS avg_description_length FROM media_content WHERE country = 'India';"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc8fc \ub374\ubc84\uc5d0 \uc788\ub294 \uc57d\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \ubaa8\ub4e0 \ud488\uc885\uacfc \ud3c9\uade0 \uac00\uaca9\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE strains (id INT, name VARCHAR(255)); INSERT INTO strains (id, name) VALUES (1, 'Blue Dream'), (2, 'Sour Diesel'); CREATE TABLE prices (id INT, strain_id INT, dispensary_id INT, price DECIMAL(10, 2));", "output": "SELECT s.name, AVG(p.price) as avg_price FROM strains s INNER JOIN prices p ON s.id = p.strain_id INNER JOIN dispensaries d ON p.dispensary_id = d.id WHERE d.city = 'Denver' AND d.state = 'CO' GROUP BY s.name;"}
{"input": " 2021\ub144 2\ubd84\uae30\uc5d0 \ub4f1\ub85d\ud55c \uc2e0\uaddc \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uae30\uc220\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name VARCHAR(50), skill VARCHAR(30), signup_date DATE); INSERT INTO volunteers (id, name, skill, signup_date) VALUES (1, 'Michael', 'Marketing', '2021-04-01'), (2, 'Sarah', 'Fundraising', '2021-05-15'), (3, 'David', 'IT', '2021-06-03'), (4, 'Emma', 'Marketing', '2021-04-20'), (5, 'Oliver', 'Fundraising', '2021-06-28'), (6, 'Ava', 'IT', '2021-04-05'), (7, 'Jack', 'Marketing', '2021-05-01');", "output": "SELECT skill, COUNT(*) as new_volunteers FROM volunteers WHERE signup_date BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY skill;"}
{"input": " '\uc11c\ud574\uc548' \uc9c0\uc5ed\uc5d0\uc11c \uc720\uae30\ub18d\uc5c5\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucd1d \ud1a0\uc9c0 \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, region_name VARCHAR(20)); INSERT INTO region (region_id, region_name) VALUES (1, 'West Coast'), (2, 'North East'); CREATE TABLE farm (farm_id INT, farm_name VARCHAR(20), region_id INT); INSERT INTO farm (farm_id, farm_name, region_id) VALUES (1, 'Organic Valley', 1), (2, 'Farm Fresh', 2); CREATE TABLE farming_type (farming_id INT, farming_type VARCHAR(20)); INSERT INTO farming_type (farming_id, farming_type) VALUES (1, 'Organic'), (2, 'Conventional');", "output": "SELECT SUM(land_area) FROM farm JOIN farming_type ON farm.farm_id = farming_type.farming_id WHERE farming_type.farming_type = 'Organic' AND farm.region_id = (SELECT region_id FROM region WHERE region_name = 'West Coast');"}
{"input": " \uc7ac\uace0\uc5d0 \ud488\uc808\ub41c \uc0c1\ud488\uc774 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE inventory (item_name VARCHAR(50), category VARCHAR(50), quantity INTEGER); INSERT INTO inventory (item_name, category, quantity) VALUES ('Bruschetta', 'Appetizers', 10), ('Chicken Caesar Salad', 'Salads', 0), ('Veggie Burger', 'Entrees', 5);", "output": "SELECT category, SUM(CASE WHEN quantity = 0 THEN 1 ELSE 0 END) AS sold_out_count FROM inventory GROUP BY category;"}
{"input": " \ub2e4\uc591\ud55c \uad6d\uac00\uc758 \uac01 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\uc5d0 \ub300\ud55c \uc6d4\ubcc4 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tax_rates (tax_id INT, country VARCHAR(255), tax_rate DECIMAL(4,2)); INSERT INTO tax_rates (tax_id, country, tax_rate) VALUES (1, 'USA', 0.07), (2, 'Canada', 0.13), (3, 'Mexico', 0.16); CREATE TABLE mobile_plans (plan_id INT, plan_name VARCHAR(255), data_limit DECIMAL(10,2), price DECIMAL(10,2)); INSERT INTO mobile_plans (plan_id, plan_name, data_limit, price) VALUES (1, 'Basic', 2.00, 30.00), (2, 'Plus', 4.50, 50.00), (3, 'Premium', 10.00, 80.00);", "output": "SELECT plan_name, country, (price + (price * (SELECT tax_rate FROM tax_rates WHERE country = mobile_plans.country) * 1)) * 12 AS monthly_revenue_usd FROM mobile_plans;"}
{"input": " \ubc30\uc1a1 \uc2dc\uac04\uc774 \uac00\uc7a5 \uae34 \uc0c1\uc704 5\uac1c \ubaa9\uc801\uc9c0\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, location VARCHAR(255), capacity INT); INSERT INTO Warehouse (id, location, capacity) VALUES (1, 'New York', 500), (2, 'Toronto', 700), (3, 'Montreal', 600); CREATE TABLE Shipment (id INT, warehouse_id INT, delivery_time INT, destination VARCHAR(255)); INSERT INTO Shipment (id, warehouse_id, delivery_time, destination) VALUES (1, 1, 5, 'Mexico'), (2, 2, 3, 'Canada'), (3, 3, 4, 'Canada'), (4, 1, 6, 'Russia'), (5, 2, 7, 'Australia'), (6, 3, 8, 'Brazil');", "output": "SELECT destination, AVG(delivery_time) as avg_delivery_time, RANK() OVER (ORDER BY AVG(delivery_time) DESC) as rank FROM Shipment GROUP BY destination HAVING rank <= 5;"}
{"input": " \ud55c \uad6d\uac00\uc5d0\uc11c 1\ub144\uc5d0 \ubc1c\uc0ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc704\uc131 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, country VARCHAR(255), name VARCHAR(255), launch_date DATE);", "output": "SELECT MAX(satellites_per_year.count) FROM (SELECT COUNT(*) as count, YEAR(launch_date) as launch_year FROM satellites GROUP BY launch_year) as satellites_per_year;"}
{"input": " 2019\ub144 11\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc2dc\uce74\uace0 \uc2dc\uc758 \ubc95\ub960 \uc9c0\uc6d0 \ud074\ub9ac\ub2c9\uc5d0\uc11c \ubaa8\ub4e0 \ubcc0\ud638\uc0ac\uac00 \ubc95\ub960 \uc5f0\uad6c\uc5d0 \uc18c\ube44\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE legal_aid_clinics (clinic_id INT, city VARCHAR(20), state VARCHAR(20)); CREATE TABLE attorney_hours (attorney_id INT, clinic_id INT, hours INT, month INT, year INT); INSERT INTO legal_aid_clinics (clinic_id, city, state) VALUES (1, 'Chicago', 'Illinois'), (2, 'Los Angeles', 'California'); INSERT INTO attorney_hours (attorney_id, clinic_id, hours, month, year) VALUES (1, 1, 20, 11, 2019), (2, 1, 15, 11, 2019), (3, 2, 10, 12, 2019);", "output": "SELECT SUM(hours) FROM attorney_hours WHERE clinic_id = (SELECT clinic_id FROM legal_aid_clinics WHERE city = 'Chicago') AND month = 11 AND year = 2019;"}
{"input": " 1900\ub144 \uc774\uc804\uc5d0 \ud0dc\uc5b4\ub09c \uc608\uc220\uac00\ub4e4\uc758 \uc791\ud488 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artists (id INT, name TEXT, birth_year INT); CREATE TABLE sales (id INT, artwork_id INT, sale_price INT); INSERT INTO artists (id, name, birth_year) VALUES (1, 'Vincent Van Gogh', 1853), (2, 'Pablo Picasso', 1881), (3, 'Claude Monet', 1840); INSERT INTO sales (id, artwork_id, sale_price) VALUES (1, 1, 82000000), (2, 3, 110000000), (3, 2, 155000000); INSERT INTO artworks (id, title, artist_id) VALUES (1, 'Starry Night', 1), (2, 'Guernica', 2), (3, 'Water Lilies', 3);", "output": "SELECT SUM(sale_price) FROM sales sa INNER JOIN artworks a ON sa.artwork_id = a.id INNER JOIN artists ar ON a.artist_id = ar.id WHERE ar.birth_year < 1900;"}
{"input": "2021\ub144 \ub0a8\ubbf8\uc5d0\uc11c \uc0dd\uc0b0\ub41c \ub514\uc2a4\ud504\ub85c\uc298\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE production (id INT, element TEXT, location TEXT, year INT, quantity INT); INSERT INTO production (id, element, location, year, quantity) VALUES (1, 'dysprosium', 'South America', 2021, 300), (2, 'dysprosium', 'North America', 2021, 700);", "output": "SELECT (quantity / (SELECT SUM(quantity) FROM production WHERE element = 'dysprosium' AND year = 2021) * 100) AS market_share FROM production WHERE element = 'dysprosium' AND location = 'South America' AND year = 2021;"}
{"input": " \uce90\ub098\ub2e4 \uc0ac\uc6a9\uc790\uc758 \uc2dd\uc0ac\ub2f9 \ud3c9\uade0 \uce7c\ub85c\ub9ac \uc12d\ucde8\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE meals (user_id INT, meal_date DATE, calories INT); INSERT INTO meals (user_id, meal_date, calories) VALUES (1, '2022-01-01', 600), (1, '2022-01-02', 800), (2, '2022-01-01', 500);", "output": "SELECT AVG(calories) FROM (SELECT user_id, meal_date, SUM(calories) OVER (PARTITION BY user_id ORDER BY meal_date) as calories FROM meals) t WHERE t.user_id IN (SELECT user_id FROM users WHERE country = 'Canada');"}
{"input": " \ub3c5\uc77c\uacfc \ud504\ub791\uc2a4\uc758 \ubaa8\ub4e0 \uc790\ub3d9\ucc28 \uc1fc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE European_Auto_Shows (id INT, name TEXT, exhibitors INT, country TEXT); INSERT INTO European_Auto_Shows (id, name, exhibitors, country) VALUES (1, 'Berlin Auto Show', 700, 'Germany'); INSERT INTO European_Auto_Shows (id, name, exhibitors, country) VALUES (2, 'Paris Auto Show', 800, 'France');", "output": "SELECT name FROM European_Auto_Shows WHERE country IN ('Germany', 'France');"}
{"input": " \uc790\uc5f0\uc7ac\ud574 \ud53c\ud574\ub97c \uc785\uc740 \ub0a8\ubbf8 \uad6d\uac00\uc5d0 \ub300\ud55c \ucd1d \uae08\uc804\uc801 \uc9c0\uc6d0 \uae30\uc900 \uc0c1\uc704 3\uac1c \uae30\ubd80 \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE donors (id INT, name TEXT); INSERT INTO donors (id, name) VALUES (1, 'USA'), (2, 'Canada'), (3, 'Brazil'), (4, 'Argentina'); CREATE TABLE donations (id INT, donor INT, country INT, amount FLOAT); INSERT INTO donations (id, donor, country, amount) VALUES (1, 1, 2, 1000), (2, 2, 3, 1500), (3, 1, 2, 750); CREATE TABLE countries (id INT, name TEXT, region TEXT); INSERT INTO countries (id, name, region) VALUES (2, 'Colombia', 'South America'), (3, 'Peru', 'South America');", "output": "SELECT d.name, SUM(donation.amount) as total_aid FROM donations donation JOIN donors d ON donation.donor = d.id JOIN countries c ON donation.country = c.id WHERE c.region = 'South America' GROUP BY d.name ORDER BY total_aid DESC LIMIT 3;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \ub3d9\ub0a8\uc544\uc2dc\uc544\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud22c\uc790\ub97c \ubc1b\uc740 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, name TEXT, location TEXT, investment_amount INT, year INT); INSERT INTO project (id, name, location, investment_amount, year) VALUES (1, 'Northern Highway', 'India', 2000000, 2020), (2, 'Southern Railway', 'Vietnam', 1500000, 2021), (3, 'Central Dam', 'Indonesia', 2500000, 2019), (4, 'Eastern Irrigation', 'Nepal', 1000000, 2018);", "output": "SELECT name, investment_amount FROM (SELECT name, investment_amount, ROW_NUMBER() OVER (PARTITION BY name ORDER BY year DESC) as rank FROM project WHERE location LIKE 'Southeast%' AND year BETWEEN 2019 AND 2021) sub WHERE rank = 1;"}
{"input": " \uace0\uac1d\uc758 \ud3c9\uade0 \uc7ac\ubb34 \uc6f0\ube59 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE client_scores (id INT, client_id INT, financial_wellbeing_score INT); INSERT INTO client_scores (id, client_id, financial_wellbeing_score) VALUES (1, 1, 75), (2, 2, 60), (3, 3, 80);", "output": "SELECT AVG(financial_wellbeing_score) FROM client_scores;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544 \uc870\uc9c1\uc774 \uc644\ub8cc\ud558\ub294 \uc0ac\ud68c \ubcf5\uc9c0 \ud504\ub85c\uc81d\ud2b8\ub97c \uc704\ud55c \ucd5c\uc18c \uae30\uc220 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Social_Good_Projects_Count (Org_Name VARCHAR(50), Projects INT);", "output": "SELECT MIN(Projects) FROM Social_Good_Projects_Count WHERE Org_Name IN (SELECT Org_Name FROM Social_Good_Projects_Count WHERE Country IN ('Australia', 'New Zealand') GROUP BY Org_Name HAVING COUNT(*) >= 2);"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ub9ac\uc6b0\ub370\uc790\ub124\uc774\ub8e8\uc758 \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE circular_economy (location VARCHAR(50), year INT, initiatives INT); INSERT INTO circular_economy (location, year, initiatives) VALUES ('Rio de Janeiro', 2022, 850), ('Rio de Janeiro', 2021, 750), ('Rio de Janeiro', 2020, 650);", "output": "SELECT location, year, initiatives FROM circular_economy WHERE location = 'Rio de Janeiro' AND year >= 2020 ORDER BY year;"}
{"input": " \ud398\ub9ac \uc815\ub958\uc7a5\uc744 \uc81c\uc678\ud558\uace0 \ub300\uc911\uad50\ud1b5 \uc720\ud615\ubcc4\ub85c \uace0\uc720\ud55c \uc815\ub958\uc7a5\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE stops_ext (id INT, name VARCHAR(50), type VARCHAR(10)); INSERT INTO stops_ext (id, name, type) VALUES (1, 'Union Square', 'Subway'), (2, 'Market St', 'Bus'), (3, 'Ferry Building', 'Ferry'), (4, 'Pier 39', 'Ferry'), (5, 'Financial District', 'Bus'); CREATE TABLE ferry_routes_ext (id INT, name VARCHAR(50), type VARCHAR(10)); INSERT INTO ferry_routes_ext (id, name, type) VALUES (3, 'Alcatraz Tour', 'Ferry'), (4, 'Golden Gate Bay Cruise', 'Ferry'), (5, 'Ferry to Sausalito', 'Ferry');", "output": "SELECT type, COUNT(DISTINCT name) FROM stops_ext WHERE type NOT IN (SELECT type FROM ferry_routes_ext) GROUP BY type;"}
{"input": " \ud5ec\uc2a4\ucf00\uc5b4 \ubd84\uc57c \uc5ec\uc131 \ucc3d\uc5c5 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ud3c9\uade0 \ud380\ub529 \uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE startups(id INT, name TEXT, industry TEXT, founder_gender TEXT, funding FLOAT); INSERT INTO startups VALUES (1, 'StartupA', 'Healthcare', 'Female', 5000000);", "output": "SELECT AVG(funding) FROM startups WHERE industry = 'Healthcare' AND founder_gender = 'Female';"}
{"input": " \ub274\uc695\uc5d0\uc11c \ubc84\uc2a4\uc640 \uae30\ucc28\ub97c \ud0c0\ub294 \ub370 \ub300\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nyc_bus (ride_id INT, route_id INT, revenue INT); CREATE TABLE nyc_train (ride_id INT, route_id INT, revenue INT);", "output": "SELECT SUM(revenue) FROM nyc_bus WHERE route_id < 10 UNION ALL SELECT SUM(revenue) FROM nyc_train WHERE route_id < 5;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc778\ub3c4\uc591\uc758 \ud3c9\uade0 \ud50c\ub77c\uc2a4\ud2f1 \ud3d0\uae30\ubb3c \uc591\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE plastic_waste (year INT, region VARCHAR(255), volume FLOAT);INSERT INTO plastic_waste (year, region, volume) VALUES (2016, 'Indian Ocean', 12000), (2017, 'Indian Ocean', 15000), (2018, 'Indian Ocean', 18000), (2019, 'Indian Ocean', 20000), (2020, 'Indian Ocean', 22000);", "output": "SELECT AVG(volume) FROM plastic_waste WHERE region = 'Indian Ocean' AND year BETWEEN 2016 AND 2020;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uac15\uc0ac\uc758 \ucd1d \uc219\ubc15 \ube44\uc6a9\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Instructor_Accommodations (instructor_id INT, accommodation_id INT, cost FLOAT);", "output": "SELECT i.name, SUM(ia.cost) as total_cost FROM Instructors i JOIN Instructor_Accommodations ia ON i.id = ia.instructor_id JOIN Accommodations a ON ia.accommodation_id = a.id WHERE i.state = 'CA' GROUP BY i.name;"}
{"input": " SpaceTech Inc.\uc5d0\uc11c \uccab \ubc88\uc9f8 \uc704\uc131\uc744 \ubc1c\uc0ac\ud558\uae30 \uc804\uc5d0 \ubc30\uce58\ub41c \ubaa8\ub4e0 \uc704\uc131\uc758 \uc774\ub984\uacfc \ubc1c\uc0ac \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Satellites (satellite_id INT, name VARCHAR(50), manufacturer VARCHAR(50), launch_date DATE); INSERT INTO Satellites (satellite_id, name, manufacturer, launch_date) VALUES (1, 'Sat1', 'SpaceTech Inc.', '2020-01-01'), (2, 'Sat2', 'Other Inc.', '2019-01-01'), (3, 'Sat3', 'Other Inc.', '2018-01-01');", "output": "SELECT name, launch_date FROM Satellites WHERE launch_date < (SELECT launch_date FROM Satellites WHERE manufacturer = 'SpaceTech Inc.' LIMIT 1)"}
{"input": " '\ud50c\ub85c\ub9ac\ub2e4'\uc5d0\uc11c \uac00\uc7a5 \uc624\ub798\ub41c \uc7a5\uc560 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE program_history (program_id INT, program_name VARCHAR(50), state VARCHAR(50), start_year INT); INSERT INTO program_history (program_id, program_name, state, start_year) VALUES (1, 'Accessible Transportation', 'Florida', 2015), (2, 'Sign Language Interpretation', 'Florida', 2016), (3, 'Adaptive Equipment', 'Florida', 2017);", "output": "SELECT program_name FROM (SELECT program_name, ROW_NUMBER() OVER (PARTITION BY state ORDER BY start_year ASC) as rn FROM program_history WHERE state = 'Florida') t WHERE rn = 1;"}
{"input": " 2000\ub144\uc5d0 \uc778\ub3c4\uc640 \uc77c\ubcf8\uc740 \uba87 \uac1c\uc758 \uc704\uc131\uc744 \ubc1c\uc0ac\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE satellites (id INT, country VARCHAR(255), launch_date DATE);", "output": "SELECT SUM(satellites.rows) FROM (SELECT COUNT(*) AS rows FROM satellites WHERE country = 'India' AND EXTRACT(YEAR FROM launch_date) = 2000 UNION ALL SELECT COUNT(*) AS rows FROM satellites WHERE country = 'Japan' AND EXTRACT(YEAR FROM launch_date) = 2000) AS satellites;"}
{"input": " \ubd80\uc11c \uc774\ub984\uc744 \ud3ec\ud568\ud558\uc5ec \ubaa8\ub4e0 \uc9c1\uc6d0\uacfc \ud574\ub2f9 \uc9c1\uc704\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE job_titles(job_id INT, job_title VARCHAR(50)); INSERT INTO job_titles VALUES (1, 'Manager'), (2, 'Developer'), (3, 'Associate');", "output": "SELECT e.emp_id, e.hire_date, j.job_title, d.dept_name  FROM employees e JOIN departments d ON e.dept_id = d.dept_id JOIN job_titles j ON e.job_id = j.job_id;"}
{"input": " 2022\ub144 \uc2dc\uc98c\uc5d0 \uac01 \ucd95\uad6c \uc120\uc218\uac00 \ud544\ub4dc\uc5d0\uc11c \ubcf4\ub0b8 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE soccer_players (player_id INT, player_name VARCHAR(50), team_name VARCHAR(50), time_on_field INT); INSERT INTO soccer_players (player_id, player_name, team_name, time_on_field) VALUES (1, 'Alexis Sanchez', 'Inter Milan', 2100), (2, 'Robert Lewandowski', 'Bayern Munich', 2500), (3, 'Lionel Messi', 'Paris Saint-Germain', 2300);", "output": "SELECT team_name, AVG(time_on_field) as avg_time_on_field FROM soccer_players GROUP BY team_name;"}
{"input": " '\uc11c\uc2dd\uc9c0_\ubcf4\uc874' \ubcf4\uae30\uc5d0\uc11c \uc544\uc2dc\uc544 \ub610\ub294 \uc544\ud504\ub9ac\uce74\uac00 \uc6d0\uc0b0\uc9c0\uc778 \ub3d9\ubb3c\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE animal_population (animal VARCHAR(50), continent VARCHAR(50), population INT); INSERT INTO animal_population (animal, continent, population) VALUES ('Tiger', 'Asia', 500), ('Elephant', 'Africa', 300), ('Giraffe', 'Africa', 200), ('Penguin', 'Antarctica', 100); CREATE VIEW habitat_preservation AS SELECT animal, CONCAT('South ', continent) AS continent FROM animal_population WHERE continent IN ('America', 'Asia');", "output": "SELECT animal FROM habitat_preservation WHERE continent = 'Asia' UNION ALL SELECT animal FROM habitat_preservation WHERE continent = 'Africa';"}
{"input": " \ub274\uc695\uc758 \uc5b4\ub5a4 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 200\ub9cc \ub2ec\ub7ec \uc774\uc0c1\uc758 \uc790\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc \uc544\uc9c1 \uc720\uc804 \uc5f0\uad6c\ub97c \uc2dc\uc791\ud558\uc9c0 \uc54a\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE biotech_startups (startup_id INT, name VARCHAR(255), location VARCHAR(255)); INSERT INTO biotech_startups (startup_id, name, location) VALUES (1, 'StartupA', 'New York'), (2, 'StartupB', 'California'); CREATE TABLE funding (startup_id INT, amount FLOAT); INSERT INTO funding (startup_id, amount) VALUES (1, 2500000), (2, 1500000); CREATE TABLE genetic_research (startup_id INT, research_topic VARCHAR(255)); INSERT INTO genetic_research (startup_id, research_topic) VALUES (2, 'Genetic Mutation');", "output": "SELECT startup_id FROM biotech_startups WHERE location = 'New York' AND startup_id NOT IN (SELECT startup_id FROM genetic_research) INTERSECT SELECT startup_id FROM funding WHERE amount > 2000000;"}
{"input": " \uc0c8\ub85c\uc6b4 \uc794\ud639 \ud589\uc704 \uc5c6\ub294 \uc81c\ud488\uc744 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \ucd94\uac00\ud558\uc138\uc694.", "context": "Products (product_id, name, rating, cruelty_free)", "output": "INSERT INTO Products (name, rating, cruelty_free) SELECT 'new product', 4.7, 'yes' FROM dual WHERE NOT EXISTS (SELECT * FROM Products WHERE name = 'new product')"}
{"input": " \uc804\ub144\ub3c4 \uc624\uc5fc\uc0ac\uace0 \ubc00\ub3c4\ub97c \ub0a0\uc9dc\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uba87 \ub144\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pollution_timeline (id INT, incident_date DATE, level FLOAT); INSERT INTO pollution_timeline (id, incident_date, level) VALUES (1, '2021-01-01', 5.5), (2, '2021-02-01', 6.2), (3, '2021-03-01', 7.0);", "output": "SELECT incident_date, COUNT(*) OVER (PARTITION BY DATE_TRUNC('year', incident_date) ORDER BY incident_date) AS density FROM pollution_timeline ORDER BY incident_date;"}
{"input": " 2021\ub144 \uc2ec\uc57c \ud1a0\ud06c\uc1fc \ud3c9\uade0 \uc2dc\uccad\ub960\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE talk_shows (id INT, title VARCHAR(255), year INT, average_viewership INT); INSERT INTO talk_shows (id, title, year, average_viewership) VALUES (1, 'The Late Show with Stephen Colbert', 2021, 3200000), (2, 'The Tonight Show Starring Jimmy Fallon', 2021, 2800000);", "output": "SELECT AVG(average_viewership) FROM talk_shows WHERE year = 2021;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc758\ub958\ub2f9 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE garments (product_category VARCHAR(255), sustainable BOOLEAN, co2_emission NUMERIC, manufacture_date DATE); INSERT INTO garments (product_category, sustainable, co2_emission, manufacture_date) VALUES ('jeans', FALSE, 5, '2023-01-01'); INSERT INTO garments (product_category, sustainable, co2_emission, manufacture_date) VALUES ('t_shirt', TRUE, 3, '2023-02-15'); INSERT INTO garments (product_category, sustainable, co2_emission, manufacture_date) VALUES ('hoodie', FALSE, 8, '2023-03-05');", "output": "SELECT AVG(co2_emission) FROM garments WHERE sustainable = TRUE AND manufacture_date >= DATEADD(month, -6, CURRENT_DATE);"}
{"input": " 2022\ub144 \uc0c1\uc704 3\uac1c \uc9c0\ucd9c \uc870\uc9c1\uc758 \ud3c9\uade0 \uae30\ud6c4 \ucee4\ubba4\ub2c8\ucf00\uc774\uc158 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_communication (organization VARCHAR(50), year INT, budget FLOAT); INSERT INTO climate_communication (organization, year, budget) VALUES ('UNFCCC', 2022, 5000000), ('Greenpeace', 2022, 4000000), ('WWF', 2022, 6000000), ('Climate Action Network', 2022, 3000000), ('350.org', 2022, 2500000);", "output": "SELECT AVG(budget) FROM (SELECT budget FROM climate_communication WHERE organization IN ('UNFCCC', 'Greenpeace', 'WWF') AND year = 2022) AS top_orgs;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac00\uc7a5 \ub9ce\uc774 \uc0dd\uc0b0\ub41c \ud654\ud559\ubb3c\uc9c8\uc744 \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE chemical_production_new (id INT PRIMARY KEY, chemical_name VARCHAR(50), quantity INT, production_date DATE);", "output": "SELECT chemical_name, MAX(quantity) as max_quantity FROM chemical_production_new WHERE production_date > CURDATE() - INTERVAL 30 DAY GROUP BY chemical_name LIMIT 1;"}
{"input": " \uc601\uad6d\uacfc \uc2a4\ud398\uc778 \uc5f0\uadf9 \uacf5\uc5f0\uc758 \uad00\uac1d \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc774\uc5c8\ub098\uc694?", "context": "CREATE TABLE TheaterPerformances (id INT, performance_name VARCHAR(50), audience_member_name VARCHAR(50), country VARCHAR(50), performance_date DATE, age INT); INSERT INTO TheaterPerformances (id, performance_name, audience_member_name, country, performance_date, age) VALUES (1, 'Shakespeare Play', 'John', 'UK', '2022-08-01', 35), (2, 'Comedy Show', 'Jane', 'Spain', '2022-08-05', 28), (3, 'Drama Performance', 'Mark', 'UK', '2022-08-03', 42), (4, 'Musical', 'Natalie', 'Spain', '2022-08-07', 31);", "output": "SELECT AVG(age) FROM TheaterPerformances WHERE country IN ('UK', 'Spain');"}
{"input": " '\ud504\ub85c\uadf8\ub798\ubc0d \uc785\ubb38' \uacfc\uc815\uacfc '\ub370\uc774\ud130 \uad6c\uc870' \uacfc\uc815\uc744 \ubaa8\ub450 \ub4f1\ub85d\ud55c \ud559\uc0dd \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE course_enrollment (student_id INT, course_name VARCHAR(255)); INSERT INTO course_enrollment (student_id, course_name) VALUES (1, 'Introduction to Programming'), (2, 'Data Structures'), (3, 'Introduction to Programming'), (2, 'Introduction to Programming');", "output": "SELECT student_id FROM course_enrollment WHERE course_name = 'Introduction to Programming' INTERSECT SELECT student_id FROM course_enrollment WHERE course_name = 'Data Structures';"}
{"input": " \uc5ec\ub984\ucca0 \uc6b4\ub3d9 \uc2dc \ud68c\uc6d0\ub4e4\uc758 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Workouts (WorkoutID INT, MemberID INT, HeartRate INT, WorkoutDate DATE); INSERT INTO Workouts (WorkoutID, MemberID, HeartRate, WorkoutDate) VALUES (1,1,120,'2022-06-01'),(2,2,130,'2022-07-01'),(3,3,100,'2022-05-01');", "output": "SELECT AVG(HeartRate) FROM Workouts WHERE MONTH(WorkoutDate) BETWEEN 6 AND 8;"}
{"input": " \ub3c4\uc2dc\ubcc4 \uce5c\ud658\uacbd \ud22c\uc5b4 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE eco_tour (id INT, name VARCHAR(255), type VARCHAR(255), city VARCHAR(255), price INT, is_eco_friendly BOOLEAN); INSERT INTO eco_tour (id, name, type, city, price, is_eco_friendly) VALUES (1, 'Bike City Tour', 'Tour', 'Berlin', 50, true);", "output": "SELECT city, AVG(price) FROM eco_tour WHERE is_eco_friendly = true GROUP BY city;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donations (id INT, volunteer_id INT, program_id INT, amount DECIMAL(10,2)); INSERT INTO donations (id, volunteer_id, program_id, amount) VALUES (1, 1, 1, 100), (2, 2, 2, 200), (3, 3, 1, 300);", "output": "SELECT program_id, AVG(amount) OVER (PARTITION BY program_id) AS avg_donation_amount FROM donations;"}
{"input": " \ubd04\uc5d0 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc758\ub958\uc640 \uac01 \uc18c\uc7ac \uad6c\uc131\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fabrics (id INT PRIMARY KEY, name VARCHAR(100), composition VARCHAR(100), country_of_origin VARCHAR(100), popularity INT); CREATE TABLE garments (id INT PRIMARY KEY, fabric_id INT, style VARCHAR(100), price DECIMAL(10,2)); INSERT INTO fabrics (id, name, composition, country_of_origin, popularity) VALUES (1, 'Cotton', '100% Cotton', 'Country A', 55); INSERT INTO garments (id, fabric_id, style, price) VALUES (1, 1, 'T-Shirt', 20.99);", "output": "SELECT g.style, f.composition FROM garments g INNER JOIN fabrics f ON g.fabric_id = f.id WHERE f.season = 'Spring' AND f.popularity = (SELECT MAX(popularity) FROM fabrics WHERE season = 'Spring');"}
{"input": " \ub0a8\ub3d9\ubd80\uc5d0\uc11c $7000\ub97c \ucd08\uacfc\ud558\ub294 \ud5c8\uac00 \ube44\uc6a9\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE permit (permit_id INT, region VARCHAR(20), cost FLOAT); INSERT INTO permit VALUES (1, 'Southeast', 8000); INSERT INTO permit VALUES (2, 'Southeast', 6000);", "output": "SELECT region, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () as above_7000_percentage FROM permit WHERE region = 'Southeast' AND cost > 7000 GROUP BY region;"}
{"input": " 'DEX' \uac70\ub798 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ucd1d \uac70\ub798\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c\uc758 \ub514\uc9c0\ud138 \uc790\uc0b0\uc744 \uc6d4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ucd1d \uac70\ub798\ub7c9 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DEX (transaction_date DATE, digital_asset VARCHAR(20), transaction_volume DECIMAL(10, 2)); INSERT INTO DEX (transaction_date, digital_asset, transaction_volume) VALUES ('2022-01-01', 'ETH', 5000.00), ('2022-01-01', 'BTC', 3000.00), ('2022-01-02', 'ETH', 6000.00), ('2022-01-02', 'BTC', 2000.00), ('2022-01-03', 'ETH', 4000.00), ('2022-01-03', 'BTC', 2500.00);", "output": "SELECT DATE_TRUNC('month', transaction_date) as month, digital_asset, SUM(transaction_volume) as total_volume, RANK() OVER (PARTITION BY month ORDER BY SUM(transaction_volume) DESC) as rank FROM DEX GROUP BY month, digital_asset, transaction_volume HAVING rank <= 2;"}
{"input": " \uac01 \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ud558\ub294 \uc9c0\uc18d\uac00\ub2a5 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uacfc \ub9e4\uc7a5 \uc704\uce58, \uc778\uc99d \ub0a0\uc9dc\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE stores (store_id INT, store_location VARCHAR(255));CREATE TABLE products (product_id INT, product_name VARCHAR(255), store_id INT, is_sustainable BOOLEAN, FK_store_id REFERENCES stores(store_id));CREATE TABLE certifications (certification_id INT, certification_date DATE, FK_product_id REFERENCES products(product_id));", "output": "SELECT s.store_location, p.product_name, SUM(p.is_sustainable) as total_sustainable_sold, c.certification_date FROM stores s JOIN products p ON s.store_id = p.store_id JOIN certifications c ON p.product_id = c.product_id WHERE p.is_sustainable = TRUE GROUP BY s.store_id, c.certification_date;"}
{"input": " \ud638\ub791\uc774\uc640 \ud45c\ubc94\uc774 \uacf5\uc720\ud558\ub294 \uc11c\uc2dd\uc9c0\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE if NOT EXISTS animal_introductions (animal_id INT, habitat_id INT); INSERT INTO animal_introductions (animal_id, habitat_id) VALUES (1, 1); INSERT INTO animal_introductions (animal_id, habitat_id) VALUES (2, 2); INSERT INTO animal_introductions (animal_id, habitat_id) VALUES (3, 3); INSERT INTO animal_introductions (animal_id, habitat_id) VALUES (4, 1); CREATE TABLE if NOT EXISTS animal_region (animal_id INT, animal_name VARCHAR(50), habitat_id INT); INSERT INTO animal_region (animal_id, animal_name, habitat_id) VALUES (1, 'Tiger', 1); INSERT INTO animal_region (animal_id, animal_name, habitat_id) VALUES (2, 'Leopard', 2); INSERT INTO animal_region (animal_id, animal_name, habitat_id) VALUES (3, 'Jaguar', 3); INSERT INTO animal_region (animal_id, animal_name, habitat_id) VALUES (4, 'Tiger', 4);", "output": "SELECT habitat_id FROM animal_region WHERE animal_name = 'Tiger' INTERSECT SELECT habitat_id FROM animal_region WHERE animal_name = 'Leopard';"}
{"input": " '\ub274\uc695'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\uae08\uc744 \ubc1b\uc558\uc9c0\ub9cc '\ud14d\uc0ac\uc2a4' \ub610\ub294 '\ud50c\ub85c\ub9ac\ub2e4'\uc5d0 \uc704\uce58\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\ub97c \ubc1b\uc9c0 \ubabb\ud55c \uc870\uc9c1\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE donors (id INT, name TEXT, state TEXT); INSERT INTO donors (id, name, state) VALUES (1, 'Emily Smith', 'New York'); CREATE TABLE donations (id INT, donor_id INT, org_id INT, donation_amount DECIMAL(10,2)); INSERT INTO donations (id, donor_id, org_id, donation_amount) VALUES (1, 1, 1, 100.00);", "output": "SELECT organizations.name FROM organizations WHERE organizations.id IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state = 'New York') AND organizations.id NOT IN (SELECT donations.org_id FROM donations JOIN donors ON donations.donor_id = donors.id WHERE donors.state IN ('Texas', 'Florida'));"}
{"input": " 2018\ub144 \ube0c\ub77c\uc9c8 \ub3c4\uc2dc\ubcc4 \uc21c\ud658\uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE circular_economy (city VARCHAR(20), year INT, initiatives INT); INSERT INTO circular_economy (city, year, initiatives) VALUES ('Sao Paulo', 2018, 8), ('Rio de Janeiro', 2018, 6), ('Brasilia', 2018, 4), ('Salvador', 2018, 5), ('Fortaleza', 2018, 7);", "output": "SELECT city, SUM(initiatives) as total_initiatives FROM circular_economy WHERE year = 2018 GROUP BY city;"}
