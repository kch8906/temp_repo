{"input": " \ud328\uc158 \ud2b8\ub80c\ub4dc\ubcc4\ub85c \uc21c \uace0\uac1d \uc218\ub97c \uae30\uc900\uc73c\ub85c \uace0\uac1d \uc0ac\uc774\uc988 \uc21c\uc704\ub97c \ub9e4\uae30\uace0, \uac01 \ud2b8\ub80c\ub4dc\uc5d0\uc11c \uc0c1\uc704 \uc21c\uc704 \uc0ac\uc774\uc988\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CustomerSize (CustomerID INT, Size VARCHAR(255), Trend VARCHAR(255)); INSERT INTO CustomerSize (CustomerID, Size, Trend) VALUES (1, 'Small', 'Trend1');", "output": "SELECT Size, Trend, ROW_NUMBER() OVER (PARTITION BY Trend ORDER BY COUNT(DISTINCT CustomerID) DESC) as Rank FROM CustomerSize GROUP BY Size, Trend HAVING Rank = 1;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \ud504\ub85c\uc81d\ud2b8\uc758 \uacc4\uc57d\uc790 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE); INSERT INTO project (id, name, location, start_date, end_date) VALUES (2, 'Eco Renovate', 'California', '2021-05-01', '2021-09-30');", "output": "SELECT contractor.name FROM contractor JOIN project_contractor ON contractor.id = project_contractor.contractor_id JOIN project ON project_contractor.project_id = project.id WHERE project.location = 'California';"}
{"input": " \uac01 \uc6b0\uc8fc \ud0d0\uc0ac\uc120\uc5d0 \ub300\ud574 \ud0dc\uc591\uc5d0\uc11c \uac00\uc7a5 \uba3c \ud589\uc131\uae4c\uc9c0\uc758 \ud3c9\uade0 \uac70\ub9ac\ub97c \uacc4\uc0b0\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE space_probes (id INT, probe_name VARCHAR(50), launch_date DATE, avg_distance_to_sun DECIMAL(10,2), farthest_planet VARCHAR(50));", "output": "SELECT farthest_planet, AVG(avg_distance_to_sun) FROM space_probes GROUP BY farthest_planet;"}
{"input": " \uac70\ub798\uac00 \uc5c6\ub294 \uace0\uac1d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE customers (customer_id INT, name TEXT); INSERT INTO customers (customer_id, name) VALUES (1, 'John Doe'); INSERT INTO customers (customer_id, name) VALUES (2, 'Jane Smith'); CREATE TABLE customer_transactions (transaction_id INT, customer_id INT); INSERT INTO customer_transactions (transaction_id, customer_id) VALUES (1, 1);", "output": "DELETE FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_transactions);"}
{"input": " \uac19\uc740 \ud559\uad50\uc758 \ud559\uc0dd\ub4e4\uc774 \uc774\uc218\ud55c \uacf5\uac1c \uad50\uc721\ud559 \uacfc\uc815\uc758 \ud3c9\uade0 \uae30\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE schools (id INT, name VARCHAR(255)); INSERT INTO schools VALUES (1, 'SchoolA'), (2, 'SchoolB'); CREATE TABLE course_completions (id INT, student_id INT, course_id INT, completion_date DATE, duration INT, school_id INT);", "output": "SELECT school_id, AVG(duration) as avg_duration FROM (SELECT school_id, duration, completion_date, ROW_NUMBER() OVER(PARTITION BY school_id, student_id ORDER BY completion_date DESC) as rn FROM course_completions) t WHERE rn = 1 GROUP BY school_id;"}
{"input": " \ub9c8\ub9ac\uc544\ub098 \ud574\uad6c\uc758 \ud3c9\uade0 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mariana_trench (trench_name TEXT, average_depth REAL); INSERT INTO mariana_trench (trench_name, average_depth) VALUES ('Mariana Trench', 10994);", "output": "SELECT AVG(average_depth) FROM mariana_trench;"}
{"input": " '\uae30\uc220' \uc0b0\uc5c5\uc5d0 \uc885\uc0ac\ud558\ub294 \uadfc\ub85c\uc790\uc758 \ucd5c\ub300 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workers (id INT, name VARCHAR(100), industry VARCHAR(50), job_role VARCHAR(50), salary FLOAT); INSERT INTO workers (id, name, industry, job_role, salary) VALUES (1, 'John Doe', 'technology', 'Engineer', 100000.0), (2, 'Jane Smith', 'technology', 'Manager', 120000.0), (3, 'Mike Johnson', 'retail', 'Cashier', 30000.0);", "output": "SELECT industry, MAX(salary) FROM workers WHERE industry = 'technology' GROUP BY industry;"}
{"input": " 2021\ub144 '\uc2dd\ub7c9\uc548\ubcf4' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \uae30\uad00\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE organizations (id INT, name VARCHAR(255)); INSERT INTO organizations (id, name) VALUES (1, 'WFP'), (2, 'UNICEF'), (3, 'CARE'); CREATE TABLE donations (id INT, organization_id INT, program VARCHAR(255), amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (id, organization_id, program, amount, donation_date) VALUES (1, 1, 'Food Security', 5000, '2021-01-01'), (2, 1, 'Health', 7000, '2021-02-01'), (3, 2, 'Food Security', 3000, '2021-03-01'), (4, 2, 'Health', 6000, '2021-04-01'), (5, 3, 'Food Security', 4000, '2021-05-01');", "output": "SELECT organization_id, SUM(amount) as total_donations FROM donations WHERE program = 'Food Security' AND YEAR(donation_date) = 2021 GROUP BY organization_id;"}
{"input": " \ub274\uc695\uacfc \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc5d0\uc11c \uc0ac\uace0\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc790\uc728\uc8fc\ud589\ucc28\ub97c \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ny_av (vehicle_id INT, type VARCHAR(20), accident_date DATE);   CREATE TABLE sf_av (vehicle_id INT, type VARCHAR(20), accident_date DATE);", "output": "SELECT type, COUNT(*) FROM ny_av WHERE type IS NOT NULL   UNION ALL   SELECT type, COUNT(*) FROM sf_av WHERE type IS NOT NULL   GROUP BY type;"}
{"input": " \ucd5c\uc18c\ud55c \ud55c \ubc88\uc758 \uae30\ubd80\ub85c \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ubaa8\ub4e0 \ud504\ub85c\uadf8\ub7a8\uc744 \ucd1d \uc790\uae08 \uae08\uc561 \ubc0f \uac1c\uc778 \uae30\ubd80\uc790 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(50)); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Healthcare'), (3, 'Environment'); CREATE TABLE Donations (DonationID INT, DonorID INT, ProgramID INT, DonationAmount DECIMAL(10,2)); INSERT INTO Donations (DonationID, DonorID, ProgramID, DonationAmount) VALUES (1, 1, 1, 500.00), (2, 1, 2, 250.00), (3, 2, 3, 100.00); CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50)); INSERT INTO Donors (DonorID, DonorName) VALUES (1, 'John Smith'), (2, 'Jane Doe');", "output": "SELECT Programs.ProgramName, SUM(Donations.DonationAmount) AS TotalFunding, COUNT(DISTINCT Donors.DonorID) AS DonorCount FROM Programs INNER JOIN Donations ON Programs.ProgramID = Donations.ProgramID INNER JOIN Donors ON Donations.DonorID = Donors.DonorID GROUP BY Programs.ProgramName;"}
{"input": "\uac74\uac15 \uc778\uc2dd \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd1d \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(255), Country VARCHAR(255)); CREATE TABLE DonationCategories (CategoryID INT, CategoryName VARCHAR(255)); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10, 2), DonationDate DATE, CategoryID INT);", "output": "SELECT CategoryID, Country, SUM(DonationAmount) AS TotalDonations, RANK() OVER (PARTITION BY CategoryID ORDER BY SUM(DonationAmount) DESC) AS CountryRank FROM Donations JOIN Donors ON Donations.DonorID = Donors.DonorID JOIN DonationCategories ON Donations.CategoryID = DonationCategories.CategoryID WHERE DonationCategories.CategoryName = 'Health Awareness' GROUP BY CategoryID, Country;"}
{"input": " '\uc720\ub7fd' \uc9c0\uc5ed\uc5d0 \uc704\uce58\ud55c \uc81c\uc870\uc5c5\uccb4\uc758 \uc7ac\ud65c\uc6a9 \ud3f4\ub9ac\uc5d0\uc2a4\ud14c\ub974\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50), Region VARCHAR(50)); CREATE TABLE Materials (MaterialID INT, ManufacturerID INT, MaterialName VARCHAR(50), QuantityUsed INT); INSERT INTO Manufacturers (ManufacturerID, ManufacturerName, Region) VALUES (1, 'EcoFriendlyFabrics', 'Europe'), (2, 'GreenYarns', 'Asia'), (3, 'SustainableTextiles', 'Africa'), (4, 'EcoWeaves', 'Europe'); INSERT INTO Materials (MaterialID, ManufacturerID, MaterialName, QuantityUsed) VALUES (1, 1, 'organic cotton', 2000), (2, 1, 'recycled polyester', 1500), (3, 2, 'hemp fiber', 1200), (4, 3, 'organic cotton', 1800), (5, 3, 'recycled polyester', 1000), (6, 4, 'organic cotton', 2500), (7, 4, 'recycled polyester', 1800), (8, 4, 'hemp fiber', 1500);", "output": "DELETE FROM Materials WHERE ManufacturerID IN (SELECT ManufacturerID FROM Manufacturers WHERE Region = 'Europe') AND MaterialName = 'recycled polyester';"}
{"input": " 2023\ub144 1\ubd84\uae30 \uc0ac\uc5c5\ubd80\ubcc4\ub85c \uac01 \uc758\uc57d\ud488\uc758 R&D \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE r_d_expenditure (drug VARCHAR(20), division VARCHAR(20), date DATE, expenditure NUMERIC(12, 2)); INSERT INTO r_d_expenditure (drug, division, date, expenditure) VALUES ('DrugA', 'Oncology', '2023-01-01', 150000.00), ('DrugB', 'Cardiology', '2023-01-01', 120000.00), ('DrugA', 'Neurology', '2023-01-01', 90000.00), ('DrugB', 'Oncology', '2023-01-01', 155000.00), ('DrugA', 'Cardiology', '2023-01-01', 123000.00), ('DrugB', 'Neurology', '2023-01-01', 915000.00);", "output": "SELECT drug, SUM(CASE WHEN division = 'Oncology' THEN expenditure ELSE 0 END) AS oncology_expenditure, SUM(CASE WHEN division = 'Cardiology' THEN expenditure ELSE 0 END) AS cardiology_expenditure FROM r_d_expenditure WHERE date BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY drug;"}
{"input": " \uc9c0\uc911\ud574\uc758 \ucd5c\uc18c \uc624\uc5fc \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pollution_levels (id INT, location TEXT, pollution_level FLOAT); INSERT INTO pollution_levels (id, location, pollution_level) VALUES (1, 'Mediterranean Sea', 5.0), (2, 'Baltic Sea', 3.0);", "output": "SELECT MIN(pollution_level) FROM pollution_levels WHERE location = 'Mediterranean Sea';"}
{"input": "\uc9c0\ub09c\ud574 \uc624\ud074\ub79c\ub4dc\ud56d\uc5d0\uc11c \uc544\uc2dc\uc544\ub85c \uc6b4\uc1a1\ub41c \ucee8\ud14c\uc774\ub108\uc758 \ud3c9\uade0 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (id INT, name TEXT, location TEXT); INSERT INTO port (id, name, location) VALUES (1, 'Port of Oakland', 'Oakland, CA'); CREATE TABLE shipments (id INT, container_weight FLOAT, departure_port_id INT, arrival_region TEXT); INSERT INTO shipments (id, container_weight, departure_port_id, arrival_region) VALUES (1, 20000.0, 1, 'Asia');", "output": "SELECT AVG(container_weight) FROM shipments WHERE departure_port_id = (SELECT id FROM port WHERE name = 'Port of Oakland') AND arrival_region = 'Asia' AND shipment_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"input": " \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc758 \uba87 \ud37c\uc13c\ud2b8\uac00 \uc544\uc2dc\uc544\uc5d0\uc11c \ub098\uc624\ub098\uc694?", "context": "CREATE TABLE concert_sales (sale_id INT, sale_country VARCHAR(50), tickets_sold INT); INSERT INTO concert_sales (sale_id, sale_country, tickets_sold) VALUES (1, 'Japan', 500), (2, 'China', 800), (3, 'Canada', 1500);", "output": "SELECT (SUM(CASE WHEN sale_country = 'Asia' THEN tickets_sold ELSE 0 END) / SUM(tickets_sold)) * 100 AS percentage FROM concert_sales;"}
{"input": " 1\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \ud314\ub9b0 \ub9c8\uc2a4\uce74\ub77c\uc758 \ud310\ub9e4\ub7c9\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mascaras (product_id INT, product_name VARCHAR(255), sales_qty INT, sale_date DATE); INSERT INTO Mascaras (product_id, product_name, sales_qty, sale_date) VALUES (1, 'Mascara 1', 50, '2022-01-01'), (2, 'Mascara 2', 40, '2022-01-05'), (3, 'Mascara 3', 60, '2022-01-10');", "output": "SELECT SUM(sales_qty) FROM Mascaras WHERE product_name = (SELECT product_name FROM Mascaras ORDER BY sales_qty DESC LIMIT 1) AND sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"input": " \uac01 \ud574\uc591 \ubcf4\ud638 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uae4a\uc774\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE marine_protected_areas (area_id INT, name VARCHAR(255), depth FLOAT);", "output": "SELECT name, AVG(depth) AS avg_depth    FROM marine_protected_areas    GROUP BY name;"}
{"input": "\uac19\uc740 \ub3c4\uc2dc\uc5d0 \uc788\ub294 \ub808\uc2a4\ud1a0\ub791\uc758 \ud3c9\uade0 \uc218\uc775\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc218\uc775\uc744 \uc62c\ub9ac\ub294 \ub808\uc2a4\ud1a0\ub791\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE restaurants (id INT, name VARCHAR(255), type VARCHAR(255), city VARCHAR(255), revenue FLOAT); INSERT INTO restaurants (id, name, type, city, revenue) VALUES (1, 'Restaurant A', 'Italian', 'New York', 5000.00), (2, 'Restaurant B', 'Asian', 'New York', 8000.00), (3, 'Restaurant C', 'Mexican', 'Los Angeles', 3000.00);", "output": "SELECT name FROM restaurants r1 WHERE revenue > (SELECT AVG(revenue) FROM restaurants r2 WHERE r1.city = r2.city);"}
{"input": " \uc9c0\ub09c\ub2ec\uc5d0 \ubc1c\ubd80\ub41c \uacfc\uc18d \ub531\uc9c0\uc758 \ud3c9\uade0 \ubc8c\uae08\uc740 \uba74\ud5c8\uc99d \uc885\ub958\ubcc4\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE speeding_tickets (ticket_id INT, license_type VARCHAR(20), fine INT, issue_date DATE); INSERT INTO speeding_tickets (ticket_id, license_type, fine, issue_date) VALUES (1, 'CDL', 200, '2022-01-15'), (2, 'Passenger', 150, '2022-01-17'), (3, 'CDL', 250, '2022-02-03');", "output": "SELECT license_type, AVG(fine) as avg_fine  FROM (SELECT license_type, fine, ROW_NUMBER() OVER (PARTITION BY license_type ORDER BY issue_date DESC) as rn FROM speeding_tickets WHERE issue_date >= DATEADD(month, -1, GETDATE())) x WHERE rn = 1 GROUP BY license_type;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \uc0c1\uc704 5\uac1c \ucc38\ud638\uc758 \ud3c9\uade0 \uae4a\uc774\uc640 \uc774\ub984\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TRENCHES (NAME TEXT, DEPTH NUMERIC, RANK INTEGER); INSERT INTO TRENCHES (NAME, DEPTH, RANK) VALUES ('Mariana Trench', 36090, 1), ('Tonga Trench', 35702, 2), ('Kuril-Kamchatka Trench', 34455, 3), ('Philippine Trench', 33100, 4), ('Sibuyan Sea Trench', 33070, 5);", "output": "SELECT NAME, AVG(DEPTH) OVER () AS AVG_DEPTH FROM TRENCHES WHERE RANK <= 5;"}
{"input": " 2019\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uac01 \ub3c4\uc2dc\uc758 \uc778\uad6c \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CityYearPopulation (CityId INT, Year INT, Population INT, PRIMARY KEY (CityId, Year)); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (1, 2019, 8400000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (1, 2020, 8600000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (2, 2019, 3900000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (2, 2020, 3800000);", "output": "SELECT CityId, Year, Population, (Population - LAG(Population, 1) OVER (PARTITION BY CityId ORDER BY Year))*100.0 / LAG(Population, 1) OVER (PARTITION BY CityId ORDER BY Year) as PopulationPercentageChange FROM CityYearPopulation;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\ub300 \ud5c8\uac00 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tx_sustainable_permits (id INT, permit_id VARCHAR(50), permit_value FLOAT, permit_date DATE, city VARCHAR(50), state VARCHAR(50), sustainable_building VARCHAR(50)); INSERT INTO tx_sustainable_permits (id, permit_id, permit_value, permit_date, city, state, sustainable_building) VALUES (1, '123456', 2000000, '2021-07-20', 'Houston', 'TX', 'Yes'), (2, '789101', 1800000, '2021-06-15', 'Austin', 'TX', 'Yes'), (3, '111213', 1500000, '2021-05-05', 'Dallas', 'TX', 'Yes');", "output": "SELECT MAX(permit_value) as max_permit_value FROM tx_sustainable_permits WHERE state = 'TX' AND permit_date >= DATEADD(QUARTER, -1, CURRENT_DATE) AND sustainable_building = 'Yes';"}
{"input": " 2020\ub144 CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\uc640 \ucd1d \ubc30\ucd9c\ub7c9 \uc21c\uc704\ub97c \uc9c0\uc815\ud558\uc138\uc694.", "context": "CREATE TABLE city_emissions (city VARCHAR(50), year INT, co2_emissions FLOAT); INSERT INTO city_emissions (city, year, co2_emissions) VALUES ('New York', 2020, 50.3), ('Los Angeles', 2020, 45.6), ('Mumbai', 2020, 40.7);", "output": "SELECT city, SUM(co2_emissions) AS total_emissions, RANK() OVER (ORDER BY SUM(co2_emissions) DESC) as co2_rank FROM city_emissions WHERE year = 2020 GROUP BY city HAVING COUNT(*) FILTER (WHERE year = 2020) > 2 ORDER BY total_emissions DESC, city;"}
{"input": " 2021\ub144 \uac01 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 AI \uc548\uc804 \uc0ac\uace0\uac00 \ubcf4\uace0\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE IncidentReports (report_id INT, reported_by VARCHAR(255), incident_year INT); INSERT INTO IncidentReports (report_id, reported_by, incident_year) VALUES (1, 'Minority Group', 2021), (2, 'LGBTQ+', 2021), (3, 'Women in Tech', 2021);", "output": "SELECT reported_by, COUNT(*) FROM IncidentReports WHERE incident_year = 2021 GROUP BY reported_by;"}
{"input": " 'Artistic Wonders' \uac24\ub7ec\ub9ac\uc5d0 \uc804\uc2dc\ud55c \uba55\uc2dc\ucf54 \ucd9c\uc2e0 \uac01 \uc608\uc220\uac00\uc758 \ucd1d \uc804\uc2dc \uae30\uac04\uc744 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(50), Nationality VARCHAR(50), ActiveYears INT, Gender VARCHAR(10));CREATE TABLE Paintings (PaintingID INT, PaintingName VARCHAR(50), ArtistID INT, DisplayStart DATE, DisplayEnd DATE);CREATE TABLE Gallery (GalleryID INT, GalleryName VARCHAR(50), City VARCHAR(50));INSERT INTO Artists VALUES (1, 'Claude Monet', 'French', 67, 'Male'); INSERT INTO Paintings VALUES (1, 'Water Lilies', 1, '2020-01-01', '2021-12-31'); INSERT INTO Gallery VALUES (1, 'Artistic Wonders', 'Paris');", "output": "SELECT Artists.ArtistName, SUM(DATEDIFF(DisplayEnd, DisplayStart)) AS TotalDisplayDays FROM Paintings JOIN Artists ON Paintings.ArtistID = Artists.ArtistID JOIN Gallery ON Paintings.GalleryID = Gallery.GalleryID WHERE GalleryName = 'Artistic Wonders' AND Nationality = 'Mexico' GROUP BY Artists.ArtistName ORDER BY TotalDisplayDays DESC;"}
{"input": " \uc778\ud504\ub77c \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c 'renewable_energy' \uc2a4\ud0a4\ub9c8\uc758 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \uc778\ud504\ub77c\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE renewable_energy (project_id INT, infrastructure_type TEXT, cost FLOAT); INSERT INTO renewable_energy (project_id, infrastructure_type, cost) VALUES (1, 'solar farm', 500000.0), (1, 'wind farm', 700000.0), (2, 'geothermal plant', 900000.0), (2, 'hydroelectric dam', 1000000.0);", "output": "SELECT infrastructure_type, AVG(cost) FROM renewable_energy WHERE project_id IN (SELECT project_id FROM projects WHERE schema_name = 'renewable_energy') GROUP BY infrastructure_type;"}
{"input": " '\uae30\uc220' \ubd80\ubb38 \uae30\uc5c5\uc758 \ud3c9\uade0 ESG \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE companies (id INT, sector TEXT, ESG_rating FLOAT); INSERT INTO companies (id, sector, ESG_rating) VALUES (1, 'technology', 78.2), (2, 'finance', 82.5), (3, 'technology', 84.6);", "output": "SELECT AVG(ESG_rating) FROM companies WHERE sector = 'technology';"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc720\ub7fd \ubaa9\uc801\uc9c0\uc5d0 \ub300\ud574 \uba87 \uac74\uc758 \uc5ec\ud589 \uc8fc\uc758\ubcf4\uac00 \ubc1c\ub839\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE travel_advisories (id INT, advisory_date DATE, destination VARCHAR(50), reason VARCHAR(200));", "output": "SELECT COUNT(*) FROM travel_advisories WHERE destination LIKE 'Europe%' AND advisory_date BETWEEN '2018-01-01' AND '2020-12-31';"}
{"input": " 2020\ub144\uc5d0 \ub274\uc9c8\ub79c\ub4dc\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d \uc911 5\uc131\uae09 \ud638\ud154\uc5d0 \uc219\ubc15\ud55c \uad00\uad11\uac1d\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tourists(tourist_id INT, name TEXT, country_visited TEXT, stay_duration INT);CREATE TABLE stays(stay_id INT, tourist_id INT, hotel_id INT, check_in DATE, check_out DATE);CREATE TABLE hotels(hotel_id INT, name TEXT, star_rating INT);INSERT INTO tourists (tourist_id, name, country_visited, stay_duration) VALUES (1, 'John Doe', 'New Zealand', 5), (2, 'Jane Doe', 'Australia', 7); INSERT INTO stays (stay_id, tourist_id, hotel_id, check_in, check_out) VALUES (1, 1, 1, '2020-01-01', '2020-01-05'), (2, 1, 2, '2020-01-06', '2020-01-08'), (3, 2, 3, '2020-01-01', '2020-01-03'); INSERT INTO hotels (hotel_id, name, star_rating) VALUES (1, 'Hotel X', 5), (2, 'Hotel Y', 4), (3, 'Hotel Z', 5);", "output": "SELECT COUNT(*) FROM tourists INNER JOIN stays ON tourists.tourist_id = stays.tourist_id INNER JOIN hotels ON stays.hotel_id = hotels.hotel_id WHERE hotels.star_rating = 5 AND tourists.country_visited = 'New Zealand' AND stays.check_out <= '2020-12-31';"}
{"input": " '\uc911\uc11c\ubd80' \uc9c0\uc5ed\uc758 \uc18c\ube44\uc790 \uc911 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc18c\ube44\uc790\uac00 '\ub9bd\uc2a4\ud2f1' \uce74\ud14c\uace0\ub9ac\uc758 \uc81c\ud488\uc744 \uc120\ud638\ud569\ub2c8\uae4c?", "context": "CREATE TABLE consumers (id INT PRIMARY KEY, name VARCHAR(255), age INT, gender VARCHAR(10), region VARCHAR(50)); CREATE TABLE preferences (id INT PRIMARY KEY, consumer_id INT, product_id INT, preference VARCHAR(50), FOREIGN KEY (consumer_id) REFERENCES consumers(id)); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), category VARCHAR(50), price FLOAT, cruelty_free BOOLEAN);", "output": "SELECT COUNT(DISTINCT consumers.id) FROM consumers INNER JOIN preferences ON consumers.id = preferences.consumer_id INNER JOIN products ON preferences.product_id = products.id WHERE consumers.region = 'Midwest' AND products.category = 'Lipstick';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uac01 \uc9c0\uc5ed\uc758 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RegionCarbonSequestration (region_id INT, sequestration_rate DECIMAL(5,2), continent VARCHAR(255)); INSERT INTO RegionCarbonSequestration (region_id, sequestration_rate, continent) VALUES (1, 11.5, 'Africa'), (2, 13.0, 'Asia'), (3, 12.0, 'Europe'), (4, 10.5, 'Africa'), (5, 14.0, 'Africa');", "output": "SELECT Rcs.region_id, AVG(Rcs.sequestration_rate) as avg_sequestration_rate FROM RegionCarbonSequestration Rcs WHERE Rcs.continent = 'Africa' GROUP BY Rcs.region_id;"}
{"input": " \uac01 \uc8fc\ubcc4 \ucd5c\uc18c \ubcd1\uc0c1 \uc218\ub97c \uac16\ucd98 \ubcd1\uc6d0\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE hospitals (id INT, name TEXT, city TEXT, state TEXT, beds INT); INSERT INTO hospitals (id, name, city, state, beds) VALUES (1, 'General Hospital', 'Miami', 'Florida', 500); INSERT INTO hospitals (id, name, city, state, beds) VALUES (2, 'Memorial Hospital', 'Boston', 'Massachusetts', 600); INSERT INTO hospitals (id, name, city, state, beds) VALUES (3, 'Community Hospital', 'Los Angeles', 'California', 400);", "output": "SELECT state, MIN(beds) as min_beds, name as min_beds_hospital FROM hospitals GROUP BY state;"}
{"input": " 2010\ub144 \uc774\ud6c4 \uae30\ud6c4 \uc801\uc751 \ud65c\ub3d9\uc744 \ubcf4\uace0\ud558\uc9c0 \uc54a\uc740 \uc870\uc9c1\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE adaptation_activities (org VARCHAR(50), year INT, activity VARCHAR(50)); INSERT INTO adaptation_activities VALUES ('OrgA', 2010, 'ActivityA');", "output": "SELECT DISTINCT org FROM adaptation_activities WHERE org NOT IN (SELECT org FROM adaptation_activities WHERE year >= 2010 AND activity != 'N/A')"}
{"input": " \uc9c0\ub09c \ub2ec \ub9e4\ucd9c\ubcf4\ub2e4 \uc7ac\uace0 \ube44\uc6a9\uc774 \ub354 \ub192\uc740 \uba54\ub274\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sales (sale_id INT PRIMARY KEY, menu_item VARCHAR(50), sale_quantity INT, sale_price DECIMAL(5,2), sale_date DATE);  CREATE TABLE Inventory (inventory_id INT PRIMARY KEY, menu_item VARCHAR(50), inventory_quantity INT, inventory_cost DECIMAL(5,2), inventory_date DATE);  CREATE TABLE Menu (menu_item VARCHAR(50) PRIMARY KEY, menu_item_category VARCHAR(50));", "output": "SELECT i.menu_item FROM Inventory i JOIN Menu m ON i.menu_item = m.menu_item JOIN Sales s ON i.menu_item = s.menu_item WHERE i.inventory_cost > s.sale_price * s.sale_quantity AND i.inventory_date >= DATEADD(month, -1, GETDATE());"}
{"input": " \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ud504\ub85c\uadf8\ub7a8\uacfc \uac00\uc7a5 \uc801\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (id INT, name VARCHAR(255)); INSERT INTO programs (id, name) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE volunteers (id INT, name VARCHAR(255), program_id INT);", "output": "SELECT p.name, COUNT(*) as num_volunteers FROM programs p JOIN volunteers v ON p.id = v.program_id GROUP BY p.id ORDER BY num_volunteers DESC LIMIT 1; SELECT p.name, COUNT(*) as num_volunteers FROM programs p JOIN volunteers v ON p.id = v.program_id GROUP BY p.id ORDER BY num_volunteers LIMIT 1;"}
{"input": " \uba54\ud2b8\ub85c\ud3f4\ub9ac\ud0c4 \ubbf8\uc220\uad00\uc5d0\ub294 \uc788\uc9c0\ub9cc \uad6c\uac90\ud558\uc784 \ubbf8\uc220\uad00\uc5d0\ub294 \uc5c6\ub294 \ubbf8\uc220 \uc791\ud488\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE MetropolitanMuseum(id INT, type VARCHAR(20), artist VARCHAR(30)); CREATE TABLE GuggenheimMuseum(id INT, type VARCHAR(20), artist VARCHAR(30)); INSERT INTO MetropolitanMuseum(id, type, artist) VALUES (1, 'Painting', 'Rembrandt'), (2, 'Sculpture', 'Rodin'), (3, 'Painting', 'Van Gogh'); INSERT INTO GuggenheimMuseum(id, type, artist) VALUES (1, 'Painting', 'Picasso'), (2, 'Sculpture', 'Brancusi'), (3, 'Painting', 'Rembrandt');", "output": "SELECT type, artist FROM MetropolitanMuseum WHERE (type, artist) NOT IN (SELECT type, artist FROM GuggenheimMuseum);"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uac01 \ucc3d\uace0\uc5d0\uc11c \uc9c0\uc0c1 \uc6b4\uc1a1\uc744 \ud1b5\ud574 \ubc30\uc1a1\ub41c \ud328\ud0a4\uc9c0 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE packages (id INT, shipment_type VARCHAR(20), warehouse VARCHAR(20), quarter INT); INSERT INTO packages (id, shipment_type, warehouse, quarter) VALUES (1, 'Ground', 'Atlanta', 1), (2, 'Air', 'Dallas', 2), (3, 'Ground', 'Atlanta', 1); CREATE TABLE warehouses (id INT, name VARCHAR(20)); INSERT INTO warehouses (id, name) VALUES (1, 'Atlanta'), (2, 'Dallas'); CREATE TABLE shipment_types (id INT, type VARCHAR(20)); INSERT INTO shipment_types (id, type) VALUES (1, 'Ground'), (2, 'Air');", "output": "SELECT p.warehouse, COUNT(*) FROM packages p JOIN warehouses w ON p.warehouse = w.name JOIN shipment_types st ON p.shipment_type = st.type WHERE st.type = 'Ground' AND p.quarter = 1 GROUP BY p.warehouse;"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uba64\ubc84\uc2ed \uc720\ud615\uc5d0 \uac00\uc785\ud55c \uc0ac\uc6a9\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE memberships (membership_id INT, membership_type VARCHAR(50), start_date DATE); INSERT INTO memberships (membership_id, membership_type, start_date) VALUES (1, 'Basic', '2022-05-01'), (2, 'Premium', '2022-06-01'), (3, 'Elite', '2022-07-01'), (4, 'Basic', '2022-08-01');", "output": "SELECT membership_type, COUNT(membership_id) as users_signed_up FROM memberships WHERE start_date >= DATEADD(month, -1, CURRENT_DATE) GROUP BY membership_type;"}
{"input": " \uc6d4\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uac01 \ub18d\uc7a5\uc758 \ud1a0\uc591 \uc218\ubd84 \ubcc0\ud654\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE farm_soil_moisture (farm_id INT, timestamp TIMESTAMP, soil_moisture INT);", "output": "SELECT farm_id, EXTRACT(MONTH FROM timestamp) AS month, soil_moisture - LAG(soil_moisture) OVER (PARTITION BY farm_id ORDER BY EXTRACT(MONTH FROM timestamp)) AS moisture_change FROM farm_soil_moisture;"}
{"input": " '\uc568\ubc84\ud0c0' \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \ud65c\ubc1c\ud55c \uc720\uc815\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ud68c\uc0ac\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, company VARCHAR(50), region VARCHAR(50), active BOOLEAN); INSERT INTO wells VALUES (1, 'Company A', 'Alberta', TRUE); INSERT INTO wells VALUES (2, 'Company B', 'Alberta', FALSE); INSERT INTO wells VALUES (3, 'Company A', 'Gulf of Mexico', TRUE);", "output": "SELECT company, COUNT(*) as num_wells FROM wells WHERE region = 'Alberta' AND active = TRUE GROUP BY company ORDER BY num_wells DESC LIMIT 1;"}
{"input": " \uac01 \uac8c\uc2dc\ubb3c\uc5d0 \uc88b\uc544\uc694\ub97c \ub204\ub978 \uc21c \uc0ac\uc6a9\uc790 \uc218\uc640 \ucd1d \uc88b\uc544\uc694 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, title VARCHAR(50), content TEXT, posted_at TIMESTAMP); INSERT INTO posts (id, title, content, posted_at) VALUES (1, 'Sample Post 1', 'Content for post 1', '2021-06-01 10:45:00'), (2, 'Sample Post 2', 'Content for post 2', '2021-06-02 15:50:00'); CREATE TABLE likes (id INT, post_id INT, user_id INT, liked_at TIMESTAMP); INSERT INTO likes (id, post_id, user_id, liked_at) VALUES (1, 1, 1, '2021-06-01 10:50:00'), (2, 2, 2, '2021-06-02 15:50:00'), (3, 1, 2, '2021-06-01 11:00:00'), (4, 2, 1, '2021-06-02 16:00:00');", "output": "SELECT posts.title, COUNT(DISTINCT users.id) as unique_likers, COUNT(likes.id) as total_likes FROM posts JOIN likes ON posts.id = likes.post_id JOIN (SELECT user_id, MIN(liked_at) as first_like FROM likes GROUP BY user_id) as first_likes ON likes.user_id = first_likes.user_id JOIN users ON likes.user_id = users.id GROUP BY posts.title;"}
{"input": " \uac01 \uc544\ud2f0\uc2a4\ud2b8\uac00 \ub9e4\uc77c \ucc3d\ucd9c\ud558\ub294 \ucd1d \uc218\uc775\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE artists (artist_id INT, artist_name VARCHAR(255)); CREATE TABLE songs (song_id INT, title VARCHAR(255), genre_id INT, release_date DATE, artist_id INT); CREATE TABLE streams (stream_id INT, song_id INT, user_id INT, stream_date DATE, revenue DECIMAL(10,2));", "output": "SELECT a.artist_name, stream_date, SUM(s.revenue) as daily_revenue FROM artists a JOIN songs s ON a.artist_id = s.artist_id JOIN streams st ON s.song_id = st.song_id GROUP BY a.artist_name, stream_date;"}
{"input": "\ubbf8\uad6d\uc0b0 '\uc54c\ub85c\uc5d0\ubca0\ub77c'\ub97c \uc131\ubd84\uc73c\ub85c \ud568\uc720\ud55c \ud654\uc7a5\ud488\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc744 \uc54c\uc544\ubd05\ub2c8\ub2e4.", "context": "CREATE TABLE ingredients (ingredient_id INT, product_id INT, ingredient_name VARCHAR(50)); INSERT INTO ingredients (ingredient_id, product_id, ingredient_name) VALUES (1, 1, 'aloe vera'), (2, 2, 'lavender'), (3, 3, 'tea tree'); CREATE TABLE sourcing (product_id INT, country_code CHAR(2)); INSERT INTO sourcing (product_id, country_code) VALUES (1, 'US'), (2, 'FR'), (3, 'AU');", "output": "SELECT SUM(products.sales) FROM products JOIN ingredients ON products.product_id = ingredients.product_id JOIN sourcing ON products.product_id = sourcing.product_id WHERE ingredients.ingredient_name = 'aloe vera' AND sourcing.country_code = 'US';"}
{"input": " '\uc544\uc2dc\uc544\uc778' \uc778\uc885 \uadf8\ub8f9\uc5d0\uc11c \ub0a8\uc131 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), ethnicity VARCHAR(50)); INSERT INTO patients (id, name, age, gender, ethnicity) VALUES (1, 'John Doe', 45, 'Male', 'Asian'), (2, 'Jane Smith', 35, 'Female', 'African American'), (3, 'Alice Johnson', 50, 'Female', 'Hispanic'), (4, 'Bob Lee', 60, 'Male', 'Asian');", "output": "SELECT AVG(age) FROM patients WHERE gender = 'Male' AND ethnicity = 'Asian';"}
{"input": " \uae30\ubd80 \ud56d\ubaa9\ubcc4 \ucd1d \uae30\ubd80 \uae08\uc561 \ub300\ube44 \ube44\uc728\uc740 \uc5bc\ub9c8\uc774\uba70, \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(255)); CREATE TABLE DonationCategories (CategoryID INT, CategoryName VARCHAR(255)); CREATE TABLE Donations (DonationID INT, DonorID INT, CategoryID INT, DonationAmount DECIMAL(10, 2));", "output": "SELECT CategoryName, SUM(DonationAmount) AS TotalDonations, (SUM(DonationAmount) * 100.0 / (SELECT SUM(DonationAmount) FROM Donations)) AS Percentage FROM Donors JOIN Donations ON Donors.DonorID = Donations.DonorID JOIN DonationCategories ON Donations.CategoryID = DonationCategories.CategoryID GROUP BY CategoryName ORDER BY Percentage DESC;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uc911\ub0a8\ubbf8 \uc9c0\uc5ed \ud22c\uc790\uc804\ub7b5\ubcc4 \ud3c9\uade0 \ud22c\uc790\uc218\uc775\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investment_returns (investment_id INT, strategy TEXT, region TEXT, return DECIMAL(10,2)); INSERT INTO investment_returns (investment_id, strategy, region, return) VALUES (1, 'Stock Portfolio', 'Latin America', 0.05), (2, 'Bond Fund', 'North America', 0.03), (3, 'Real Estate', 'Europe', 0.04);", "output": "SELECT strategy, AVG(return) FROM investment_returns WHERE region = 'Latin America' AND return IS NOT NULL GROUP BY strategy;"}
{"input": " 2021\ub144\uc5d0 \ud638\uc8fc, \uc778\ub3c4, \uc544\ub974\ud5e8\ud2f0\ub098\uc5d0\uc11c \ucd9c\ud310\ub41c \uc724\ub9ac\uc801 AI \uc5f0\uad6c \ub17c\ubb38\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ea_research_australia(paper_id INT, country VARCHAR(10), publish_year INT); INSERT INTO ea_research_australia VALUES (1, 'Australia', 2021), (2, 'Australia', 2020); CREATE TABLE ea_research_india(paper_id INT, country VARCHAR(10), publish_year INT); INSERT INTO ea_research_india VALUES (1, 'India', 2021), (2, 'India', 2020); CREATE TABLE ea_research_argentina(paper_id INT, country VARCHAR(10), publish_year INT); INSERT INTO ea_research_argentina VALUES (1, 'Argentina', 2021), (2, 'Argentina', 2020);", "output": "SELECT SUM(publish_year = 2021) FROM ea_research_australia WHERE country = 'Australia' UNION ALL SELECT SUM(publish_year = 2021) FROM ea_research_india WHERE country = 'India' UNION ALL SELECT SUM(publish_year = 2021) FROM ea_research_argentina WHERE country = 'Argentina';"}
{"input": " 2019\ub144 \uad6d\uac00\ubcc4 \uc131\uacf5\uc801\uc778 \uc6b0\uc8fc \uc784\ubb34 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Space_Missions (mission_date DATE, country VARCHAR(255), success BOOLEAN); INSERT INTO Space_Missions (mission_date, country, success) VALUES ('2019-01-01', 'USA', TRUE), ('2019-02-01', 'Russia', FALSE), ('2019-03-01', 'China', TRUE), ('2019-04-01', 'USA', TRUE), ('2019-05-01', 'India', FALSE);", "output": "SELECT country, (COUNT(success) FILTER (WHERE success = TRUE) * 100.0 / COUNT(*)) AS success_percentage FROM Space_Missions WHERE YEAR(mission_date) = 2019 GROUP BY country;"}
{"input": "\ud3c9\uade0 \uc218\uc775\ub960\ubcf4\ub2e4 \uc218\uc775\ub960\uc774 \ub192\uc740 \ud22c\uc790 \uc804\ub7b5\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE investments_2 (investment_id INT, strategy VARCHAR(20), return_rate DECIMAL(10,2)); INSERT INTO investments_2 (investment_id, strategy, return_rate) VALUES (1, 'Stock', 0.12), (2, 'Bond', 0.05), (3, 'Real Estate', 0.07);", "output": "SELECT strategy FROM investments_2 WHERE return_rate > (SELECT AVG(return_rate) FROM investments_2);"}
{"input": " \uc720\uae30\ub18d \uc791\ubb3c\uc744 \uc7ac\ubc30\ud558\ub294 \uc911\uc11c\ubd80 \ub18d\ubbfc\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50), age INT, location VARCHAR(50), organic BOOLEAN); INSERT INTO farmers (id, name, age, location, organic) VALUES (1, 'James Brown', 45, 'Columbus', true); INSERT INTO farmers (id, name, age, location, organic) VALUES (2, 'Sara Johnson', 50, 'Detroit', true); INSERT INTO farmers (id, name, age, location, organic) VALUES (3, 'Maria Garcia', 55, 'Chicago', false); INSERT INTO farmers (id, name, age, location, organic) VALUES (4, 'David White', 60, 'St. Louis', true);", "output": "SELECT ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM farmers WHERE location LIKE 'Indianapolis%'), 2) as percentage FROM farmers WHERE organic = true AND location LIKE 'Indianapolis%';"}
{"input": " \ubbf8\uad6d\uc5d0 \ub300\ud55c \ud310\ub9e4\ub97c \uc81c\uc678\ud558\uace0 2019\ub144\uacfc 2020\ub144 \uc0ac\uc774\uc5d0 \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \ucd1d\uc561\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Military_Equipment_Sales(id INT, country VARCHAR(255), year INT, value FLOAT); INSERT INTO Military_Equipment_Sales(id, country, year, value) VALUES (1, 'India', 2020, 50000000), (2, 'India', 2019, 45000000), (3, 'US', 2020, 80000000), (4, 'India', 2018, 40000000), (5, 'US', 2019, 75000000);", "output": "SELECT (SUM(CASE WHEN year = 2020 THEN value ELSE 0 END) - SUM(CASE WHEN year = 2019 THEN value ELSE 0 END)) - (SELECT SUM(value) FROM Military_Equipment_Sales WHERE country = 'US' AND year IN (2019, 2020)) as Difference FROM Military_Equipment_Sales WHERE country != 'US';"}
{"input": " \uc5ec\uc131 \uc9c1\uc6d0 \uc218\ub97c 10% \ub298\ub824 \uc778\ub825 \ub2e4\uc591\uc131 \ud1b5\uacc4\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE WorkforceDiversity (Gender VARCHAR(10), TotalEmployees INT);", "output": "WITH updated_diversity AS (UPDATE WorkforceDiversity SET TotalEmployees = TotalEmployees * 1.10 WHERE Gender = 'Female' RETURNING *) SELECT * FROM updated_diversity;"}
{"input": " 2022\ub144 \uc2dc\ub4dc\ub2c8 \ub610\ub294 \uba5c\ubc84\ub978 \ud504\ub85c\uadf8\ub7a8\uc758 \ud3c9\uade0 \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uace0 \uacc4\uc0b0\ub41c \ud3c9\uade0 \uc608\uc0b0\uc73c\ub85c \uae30\ub85d\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Programs (program_id INT, program_city VARCHAR(50), program_budget DECIMAL(10,2)); INSERT INTO Programs (program_id, program_city, program_budget) VALUES (1, 'Sydney', 15000), (2, 'Melbourne', 12000), (3, 'Sydney', 18000), (4, 'Melbourne', 14000), (5, 'Sydney', 16000), (6, 'Melbourne', 13000);", "output": "SELECT AVG(program_budget) FROM Programs WHERE program_city IN ('Sydney', 'Melbourne') AND program_year = 2022;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uc720\uae30\ub18d \ub2ed\uace0\uae30\ub97c \uacf5\uae09\ud55c \uacf5\uae09\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Suppliers (SupplierID INT, SupplierName TEXT, Country TEXT);   CREATE TABLE FoodItems (FoodItemID INT, FoodItemName TEXT, Organic BOOLEAN);   CREATE TABLE SupplyData (SupplyID INT, SupplyDate DATE, SupplierID INT, FoodItemID INT);", "output": "SELECT SupplierName  FROM Suppliers   JOIN SupplyData ON Suppliers.SupplierID = SupplyData.SupplierID   JOIN FoodItems ON SupplyData.FoodItemID = FoodItems.FoodItemID   WHERE FoodItems.Organic = TRUE AND SupplyDate BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": " \ub0a8\ubbf8\uc640 \ubbf8\uad6d\uc5d0\uc11c \uccad\uc18c\ub144 \ubc94\uc8c4\uc790\ub97c \uc704\ud55c \uc131\uacf5\uc801\uc778 \uc804\ud658 \ud504\ub85c\uadf8\ub7a8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE south_america_diversion (id INT, age_group VARCHAR(255), success BOOLEAN); INSERT INTO south_america_diversion (id, age_group, success) VALUES (1, 'Youth', TRUE), (2, 'Youth', FALSE), (3, 'Youth', TRUE);CREATE TABLE us_diversion (id INT, age_group VARCHAR(255), success BOOLEAN); INSERT INTO us_diversion (id, age_group, success) VALUES (1, 'Youth', TRUE), (2, 'Youth', TRUE), (3, 'Youth', FALSE);", "output": "SELECT (SUM(CASE WHEN age_group = 'Youth' AND success = TRUE THEN 1 ELSE 0 END) / COUNT(CASE WHEN age_group = 'Youth' THEN 1 ELSE NULL END)) * 100 AS youth_success_percentage FROM south_america_diversion UNION ALL SELECT (SUM(CASE WHEN age_group = 'Youth' AND success = TRUE THEN 1 ELSE 0 END) / COUNT(CASE WHEN age_group = 'Youth' THEN 1 ELSE NULL END)) * 100 AS youth_success_percentage FROM us_diversion;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \uc218\uc911 \ucc38\ud638 \uc0c1\uc704 3\uac1c\uc640 \uadf8 \uae4a\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underwater_trenches (trench_id INT, trench_name VARCHAR(50), depth INT); INSERT INTO underwater_trenches (trench_id, trench_name, depth) VALUES (1, 'Mariana Trench', 36000), (2, 'Tonga Trench', 35000), (3, 'Kermadec Trench', 32000);", "output": "SELECT trench_name, depth FROM (SELECT trench_name, depth, RANK() OVER (ORDER BY depth DESC) as trench_rank FROM underwater_trenches) t WHERE trench_rank <= 3;"}
{"input": " \ucd1d \ube44\uc6a9\uc774 100,000\uc744 \ucd08\uacfc\ud558\ub294 '\ub0a8\uc544\uba54\ub9ac\uce74'\uc758 \ubaa8\ub4e0 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uacfc \uc2dc\uc791 \ub0a0\uc9dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE climate_adaptation (project_id INT, project_name VARCHAR(255), location VARCHAR(255), start_date DATE, end_date DATE, total_cost DECIMAL(10,2));", "output": "SELECT project_name, start_date FROM climate_adaptation WHERE location = 'South America' AND total_cost > 100000;"}
{"input": " 2020\ub144 2\ubd84\uae30 \ub3c4\uc2dc \uc9c0\uc5ed \uae30\ubd80\uc790\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID int, DonationDate date, DonationAmount numeric, DonorAreaType varchar(50));", "output": "SELECT AVG(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonationDate BETWEEN '2020-04-01' AND '2020-06-30' AND DonorAreaType = 'Urban');"}
{"input": " \uccad\uad6c \ube48\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uc815\ucc45 \uc720\ud615\uc744 \uccad\uad6c \ube48\ub3c4\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policyholder (id INT, name VARCHAR(50), policy_type VARCHAR(50)); CREATE TABLE claims (id INT, policyholder_id INT, claim_amount DECIMAL(10, 2)); INSERT INTO policyholder (id, name, policy_type) VALUES (1, 'John Doe', 'Auto'); INSERT INTO policyholder (id, name, policy_type) VALUES (2, 'Jane Smith', 'Home'); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (1, 1, 500); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (2, 1, 300); INSERT INTO claims (id, policyholder_id, claim_amount) VALUES (3, 2, 800);", "output": "SELECT policy_type, COUNT(*) OVER (PARTITION BY policy_type) as claim_frequency FROM policyholder p JOIN claims c ON p.id = c.policyholder_id GROUP BY policy_type ORDER BY claim_frequency DESC LIMIT 3;"}
{"input": " \uc911\ub3d9\uc758 \ud3c9\uade0 \uc7ac\ub09c \ub300\uc751 \uc0ac\uac74 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE disasters (id INT, type TEXT, location TEXT, year INT); INSERT INTO disasters (id, type, location, year) VALUES (1, 'Flood', 'South America', 2020), (2, 'Earthquake', 'Asia', 2019), (3, 'Tornado', 'North America', 2020), (4, 'Disaster Response', 'Middle East', 2018), (5, 'Disaster Response', 'Middle East', 2019), (6, 'Disaster Response', 'Middle East', 2020);", "output": "SELECT AVG(total_disasters) FROM (SELECT location, COUNT(*) AS total_disasters FROM disasters WHERE type = 'Disaster Response' AND location = 'Middle East' GROUP BY location, year) AS disaster_counts GROUP BY location;"}
{"input": " \ub450 \uac00\uc9c0 \uc774\uc0c1\uc758 \uad00\ub828 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc804\ub7b5\uc774 \uc788\ub294 \uad6d\uac00 \ubcf4\uc548 \ubc94\uc8fc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cybersecurity_strategies (id INT, strategy TEXT, category TEXT); INSERT INTO cybersecurity_strategies (id, strategy, category) VALUES (1, 'Strategy1', 'Category1'), (2, 'Strategy2', 'Category2'), (3, 'Strategy3', 'Category1'), (4, 'Strategy4', 'Category3'), (5, 'Strategy5', 'Category1'), (6, 'Strategy6', 'Category4');", "output": "SELECT category, COUNT(*) FROM cybersecurity_strategies GROUP BY category HAVING COUNT(*) > 2;"}
{"input": " \ud1a0\ub860\ud1a0 \uc2dc\uc758 \ubaa8\ub4e0 \uce5c\ud658\uacbd \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE green_building_projects (project_id INT, project_name VARCHAR(255), city VARCHAR(255), country VARCHAR(255)); INSERT INTO green_building_projects (project_id, project_name, city, country) VALUES (1, 'Toronto Green Tower', 'Toronto', 'CA'); INSERT INTO green_building_projects (project_id, project_name, city, country) VALUES (2, 'Canadian Eco-Skyscraper', 'Toronto', 'CA');", "output": "SELECT project_name FROM green_building_projects WHERE city = 'Toronto';"}
{"input": " \ud654\ud559\uacf5\uc7a5\ubcc4 \ub2f9\uc6d4\uacfc \uc804\ub144\ub3d9\uc6d4\uc758 \ud658\uacbd\uc601\ud5a5\uc810\uc218 \ucc28\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE environmental_impact (plant_id INT, impact_date DATE, plant_location TEXT, score INT); INSERT INTO environmental_impact (plant_id, impact_date, plant_location, score) VALUES (1, '2021-01-01', 'Plant A', 85), (2, '2021-01-15', 'Plant B', 92), (3, '2021-02-01', 'Plant C', 78);", "output": "SELECT plant_location, (score - LAG(score) OVER (PARTITION BY EXTRACT(MONTH FROM impact_date) ORDER BY EXTRACT(MONTH FROM impact_date))) AS difference FROM environmental_impact WHERE impact_date >= DATEADD(month, -12, DATEADD(month, DATEDIFF(month, 0, CURRENT_DATE), 0)) GROUP BY plant_location, EXTRACT(MONTH FROM impact_date);"}
{"input": "2022\ub144\uc5d0 \uc568\ubc84\ud0c0 \uc8fc\uc5d0\uc11c \ud0dc\uc591\uad11\uacfc \ud48d\ub825\uc744 \ud1b5\ud574 \uc0dd\uc0b0\ub41c \ucd1d \uc5d0\ub108\uc9c0\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE energy_generation (province VARCHAR(20), energy_source VARCHAR(20), generation INT, year INT); INSERT INTO energy_generation (province, energy_source, generation, year) VALUES ('Alberta', 'Solar', 1500, 2022), ('Alberta', 'Wind', 3500, 2022);", "output": "SELECT SUM(generation) FROM energy_generation WHERE province = 'Alberta' AND (energy_source = 'Solar' OR energy_source = 'Wind') AND year = 2022;"}
{"input": " 'recycled_content'\uac00 \uac00\uc7a5 \ub192\uc740 'product_transparency' \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c 'product_name' \ubc0f 'recycled_content'\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE product_transparency (product_id INT, product_name VARCHAR(50), circular_supply_chain BOOLEAN, recycled_content DECIMAL(4,2), COUNTRY VARCHAR(50));", "output": "SELECT product_name, recycled_content FROM product_transparency WHERE recycled_content = (SELECT MAX(recycled_content) FROM product_transparency);"}
{"input": "EthicalFashion' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \uacf5\uc815 \ubb34\uc5ed \ubc0f \uc9c0\uc18d \uac00\ub2a5\ud55c \uc758\ub958 \ud488\ubaa9\uc758 \ud3c9\uade0 \uac00\uaca9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE item_details (item_id INT, item_name VARCHAR(255), is_fair_trade BOOLEAN, is_sustainable BOOLEAN, price DECIMAL(10,2));", "output": "SELECT AVG(price) FROM item_details WHERE is_fair_trade = TRUE AND is_sustainable = TRUE;"}
{"input": " \uac8c\uc784 '\ub9c8\uc778\ud06c\ub798\ud504\ud2b8'\uc758 \ud3c9\uade0 \ucd5c\uace0 \uc810\uc218 \uacb0\uc815", "context": "CREATE TABLE players (id INT, name VARCHAR(100), game_id INT, high_score INT); CREATE TABLE games (id INT, name VARCHAR(100)); INSERT INTO players (id, name, game_id, high_score) VALUES (1, 'John Doe', 1, 1000); INSERT INTO players (id, name, game_id, high_score) VALUES (2, 'Jane Doe', 1, 1200); INSERT INTO players (id, name, game_id, high_score) VALUES (3, 'Jim Brown', 2, 1800); INSERT INTO players (id, name, game_id, high_score) VALUES (4, 'Jake White', 2, 1600); INSERT INTO players (id, name, game_id, high_score) VALUES (5, 'Jill Black', 2, 1400); INSERT INTO games (id, name) VALUES (1, 'Minecraft'); INSERT INTO games (id, name) VALUES (2, 'Fortnite');", "output": "SELECT AVG(high_score) FROM players WHERE game_id = (SELECT id FROM games WHERE name = 'Minecraft');"}
{"input": " \uada4\ub3c4 \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \uc704\uc131 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE Satellites (ID INT, Name VARCHAR(50), LaunchDate DATE, Status VARCHAR(50)); INSERT INTO Satellites (ID, Name, LaunchDate, Status) VALUES (1, 'Sat1', '2018-01-01', 'Active'), (2, 'Sat2', '2020-05-15', 'Active'), (3, 'Sat3', '2019-09-01', 'Inactive'), (4, 'Sat4', '2016-03-01', 'Active'), (5, 'Sat5', '2017-12-25', 'Active');", "output": "UPDATE Satellites SET Status = 'Inactive' WHERE ID IN (SELECT ID FROM (SELECT ID, DATEDIFF(year, LaunchDate, GETDATE()) as YearsInOrbit FROM Satellites) as Satellites WHERE YearsInOrbit > 5);"}
{"input": " 'investigative_reports'\uc758 '\ubd80\ud328' \ub610\ub294 '\uc815\ubd80'\uc5d0 \uad00\ud55c \uae30\uc0ac\uc5d0 \uc0ac\uc6a9\ub41c \uace0\uc720\ud55c \ucd9c\ucc98\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investigative_reports (title VARCHAR(255), source VARCHAR(255), topic VARCHAR(255));", "output": "SELECT DISTINCT source FROM investigative_reports WHERE topic IN ('corruption', 'government') ORDER BY source;"}
{"input": " \uce90\ub098\ub2e4\uc5d0 \uc704\uce58\ud55c \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uce7c\ub85c\ub9ac\uac00 700\uc744 \ucd08\uacfc\ud558\ub294 \uae30\uc874 \uc2dd\uc0ac \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (id INT, name TEXT, country TEXT); CREATE TABLE Meals (id INT, name TEXT, type TEXT, calories INT, RestaurantId INT, FOREIGN KEY (RestaurantId) REFERENCES Restaurants(id)); INSERT INTO Restaurants (id, name, country) VALUES (1, 'Restaurant A', 'Canada'), (2, 'Restaurant B', 'Canada'), (3, 'Restaurant C', 'USA'); INSERT INTO Meals (id, name, type, calories, RestaurantId) VALUES (1, 'Meal 1', 'Conventional', 800, 1), (2, 'Meal 2', 'Conventional', 700, 1), (3, 'Meal 3', 'Organic', 600, 1), (4, 'Meal 4', 'Conventional', 500, 2), (5, 'Meal 5', 'Organic', 400, 2), (6, 'Meal 6', 'Conventional', 900, 3);", "output": "DELETE FROM Meals WHERE Meals.type = 'Conventional' AND Meals.calories > 700 AND RestaurantId IN (SELECT id FROM Restaurants WHERE Restaurants.country = 'Canada');"}
{"input": " \uccab \uc8fc\ud0dd \uad6c\uc785\uc790\uc5d0\uac8c \uac00\uc7a5 \uc800\ub834\ud55c \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE city_data (city VARCHAR(50), median_home_price FLOAT, first_time_buyer_friendly INT); INSERT INTO city_data (city, median_home_price, first_time_buyer_friendly) VALUES ('CityA', 200000, 1), ('CityB', 300000, 0), ('CityC', 150000, 1), ('CityD', 400000, 1), ('CityE', 250000, 0);", "output": "SELECT city, median_home_price FROM (SELECT city, median_home_price, RANK() OVER (ORDER BY median_home_price ASC) AS rank FROM city_data WHERE first_time_buyer_friendly = 1) AS subquery WHERE rank <= 3;"}
{"input": "\uac01 \ub300\ud589\uc0ac\uc758 \uc131\uacf5 \ubc0f \uc2e4\ud328 \ucd1d \ucd9c\uc2dc \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE launch_results (agency VARCHAR(10), launch_outcome VARCHAR(10), year INT); INSERT INTO launch_results (agency, launch_outcome, year) VALUES ('NASA', 'Success', 2019), ('NASA', 'Failure', 2020), ('SpaceX', 'Success', 2018), ('SpaceX', 'Success', 2019), ('ESA', 'Failure', 2021);", "output": "SELECT agency, launch_outcome, COUNT(*) FROM launch_results GROUP BY agency, launch_outcome;"}
{"input": " 2021\ub144 1\ubd84\uae30 \uac01 \ucc28\ub7c9 \uc720\ud615\uc758 \ud3c9\uade0 \uc694\uae08\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE fare_collection (id INT, vehicle_type VARCHAR(20), fare_date DATE, fare FLOAT); INSERT INTO fare_collection (id, vehicle_type, fare_date, fare) VALUES (1, 'Bus', '2021-01-01', 2.0), (2, 'Tram', '2021-01-03', 2.5), (3, 'Train', '2021-01-05', 3.0), (4, 'Bus', '2021-01-07', 2.2), (5, 'Tram', '2021-01-09', 2.8), (6, 'Train', '2021-01-11', 3.2);", "output": "SELECT vehicle_type, AVG(fare) as median_fare FROM (SELECT vehicle_type, fare, ROW_NUMBER() OVER (PARTITION BY vehicle_type ORDER BY fare) as rn, COUNT(*) OVER (PARTITION BY vehicle_type) as cnt FROM fare_collection WHERE fare_date BETWEEN '2021-01-01' AND '2021-03-31' GROUP BY vehicle_type, fare) x WHERE rn IN (cnt/2 + 1, cnt/2 + 2) GROUP BY vehicle_type;"}
{"input": " \uad6d\uac00\ubcc4 \ucd1d \uc815\ubcf4\uc791\uc804 \uc218 \ud30c\uc545", "context": "CREATE TABLE IntelligenceOperations (Id INT PRIMARY KEY, Country VARCHAR(50), Operation VARCHAR(50));", "output": "SELECT Country, COUNT(*) FROM IntelligenceOperations GROUP BY Country;"}
{"input": " AI \ud1b5\ud569\uc744 \uad6c\ud604\ud558\uace0 \uc77c\ubcf8\uc5d0 \uc704\uce58\ud55c \ud638\ud154\uc758 \ud3c9\uade0 \uc608\uc57d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HotelTechAdoption (hotel_id INT, ai_integration BOOLEAN, virtual_tour BOOLEAN); CREATE TABLE OnlineTravelAgency (ota_id INT, hotel_id INT, bookings INT); CREATE TABLE AIHospitalityTrends (hotel_id INT, ai_trend VARCHAR(255)); CREATE TABLE HotelGeolocation (hotel_id INT, country VARCHAR(255), city VARCHAR(255));", "output": "SELECT AVG(bookings) as avg_bookings FROM OnlineTravelAgency ota JOIN HotelTechAdoption hta ON ota.hotel_id = hta.hotel_id JOIN HotelGeolocation hgl ON ota.hotel_id = hgl.hotel_id WHERE hta.ai_integration = TRUE AND hgl.country = 'Japan';"}
{"input": " \ubd81\ubbf8 e\uc2a4\ud3ec\uce20 \ub300\ud68c\uc5d0\uc11c \uc6b0\uc2b9\ud55c \uc120\uc218\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(255)); INSERT INTO Players (PlayerID, Age, Country) VALUES (1, 25, 'USA'); INSERT INTO Players (PlayerID, Age, Country) VALUES (2, 30, 'Canada'); CREATE TABLE Events (EventID INT, Location VARCHAR(255)); INSERT INTO Events (EventID, Location) VALUES (1, 'New York'); INSERT INTO Events (EventID, Location) VALUES (2, 'Toronto'); CREATE TABLE Winners (PlayerID INT, EventID INT); INSERT INTO Winners (PlayerID, EventID) VALUES (1, 1); INSERT INTO Winners (PlayerID, EventID) VALUES (2, 2);", "output": "SELECT AVG(Players.Age) FROM Players INNER JOIN Winners ON Players.PlayerID = Winners.PlayerID INNER JOIN Events ON Winners.EventID = Events.EventID WHERE Events.Location LIKE '%North America%';"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 1\uc778\ub2f9 \ud3c9\uade0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE city_waste_generation (city_id INT, city_name VARCHAR(50), population INT, waste_generated FLOAT); INSERT INTO city_waste_generation (city_id, city_name, population, waste_generated) VALUES (1, 'CityA', 50000, 25000), (2, 'CityB', 30000, 18000);", "output": "SELECT city_name, AVG(waste_generated/population) OVER (PARTITION BY city_name) as avg_waste_per_capita FROM city_waste_generation;"}
{"input": " \uc12d\uc528 13.5\ub3c4\ubcf4\ub2e4 \ub0ae\uc740 \uc628\ub3c4\ub97c \uae30\ub85d\ud55c \ud544\ub4dc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE field_1 (date DATE, temperature FLOAT); INSERT INTO field_1 (date, temperature) VALUES ('2022-01-01', 15.0), ('2022-01-02', 14.5); CREATE TABLE field_2 (date DATE, temperature FLOAT); INSERT INTO field_2 (date, temperature) VALUES ('2022-01-01', 16.0), ('2022-01-02', 18.0);", "output": "SELECT 'field_1' AS field_name FROM field_1 WHERE temperature < 13.5 UNION SELECT 'field_2' AS field_name FROM field_2 WHERE temperature < 13.5;"}
{"input": " \uac01 \uc57c\uad6c\ud300\uc774 \uce58\ub978 \ud648 \uacbd\uae30 \uc218\ub97c \ud45c\uc2dc\ud558\uc138\uc694.", "context": "CREATE TABLE baseball_games (id INT, team_id INT, game_date DATE, is_home BOOLEAN); INSERT INTO baseball_games (id, team_id, game_date, is_home) VALUES (1, 1, '2021-04-01', true), (2, 2, '2021-04-05', false), (3, 1, '2021-05-03', true);", "output": "SELECT team_id, COUNT(*) as home_games_played FROM baseball_games WHERE is_home = true GROUP BY team_id;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 CO2 \ubc30\ucd9c\ub7c9\uc758 \uc6d4\ubcc4 \ucd94\uc138\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE environmental_impact (id INT, date DATE, co2_emissions FLOAT);", "output": "SELECT EXTRACT(MONTH FROM date) as month, AVG(co2_emissions) as avg_co2_emissions FROM environmental_impact WHERE date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY EXTRACT(MONTH FROM date) ORDER BY EXTRACT(MONTH FROM date);"}
{"input": " 2015\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \uc554\uc744 \ud45c\uc801\uc73c\ub85c \ud558\ub294 \uc57d\ubb3c\uc5d0 \ub300\ud55c \uc784\uc0c1\uc2dc\ud5d8\uc740 \uc5bc\ub9c8\ub098 \uc9c4\ud589\ub410\ub098\uc694?", "context": "CREATE SCHEMA clinical;CREATE TABLE clinical.trials (id INT, drug_id INT, disease_id INT, start_year INT, end_year INT);CREATE TABLE clinical.drugs (id INT, name VARCHAR(50));CREATE TABLE clinical.diseases (id INT, name VARCHAR(50)); INSERT INTO clinical.drugs (id, name) VALUES (1, 'DrugA'), (2, 'DrugB'); INSERT INTO clinical.diseases (id, name) VALUES (1, 'Cancer'), (2, 'Heart Disease'); INSERT INTO clinical.trials (id, drug_id, disease_id, start_year, end_year) VALUES (1, 1, 1, 2015, 2017), (2, 1, 2, 2018, 2020), (3, 2, 1, 2016, 2018), (4, 2, 2, 2019, 2021);", "output": "SELECT COUNT(*) FROM clinical.trials t JOIN clinical.drugs d ON t.drug_id = d.id JOIN clinical.diseases ds ON t.disease_id = ds.id WHERE ds.name = 'Cancer' AND t.start_year BETWEEN 2015 AND 2019;"}
{"input": " \ubca0\ub97c\ub9b0\uc5d0\uc11c \uac00\uc7a5 \uce5c\ud658\uacbd\uc801\uc778 \uac74\ubb3c \uc911 \ub450 \ubc88\uc9f8\ub85c \ub192\uc740 \uc784\ub300\ub8cc\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE buildings (building_id INT, city VARCHAR(20), green_rating INT, rent INT); INSERT INTO buildings (building_id, city, green_rating, rent) VALUES (1, 'Berlin', 5, 1500), (2, 'Berlin', 4, 1400), (3, 'Paris', 5, 2000);", "output": "SELECT LEAD(rent) OVER (ORDER BY green_rating DESC, rent DESC) as second_highest_rent FROM buildings WHERE city = 'Berlin' AND green_rating = (SELECT MAX(green_rating) FROM buildings WHERE city = 'Berlin');"}
{"input": " \ube0c\ub77c\uc9c8 \ubb38\ud654\uc720\uc0b0\uc758 \uc77c\uc77c \ucd5c\ub300 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cultural_heritage_sites (id INT, name TEXT, country TEXT, daily_visitors INT); INSERT INTO cultural_heritage_sites (id, name, country, daily_visitors) VALUES (1, 'Christ the Redeemer', 'Brazil', 10000), (2, 'Sugarloaf Mountain', 'Brazil', 8000), (3, 'Iguazu Falls', 'Brazil', 12000);", "output": "SELECT MAX(daily_visitors) FROM cultural_heritage_sites WHERE country = 'Brazil';"}
{"input": " '\ubb3c\ub958' \ubd80\uc11c \uc9c1\uc6d0\uc758 \ud3c9\uade0 \uc6d4\uae09\uc740 \uac00\uc7a5 \ub192\uc740 \uac83\ubd80\ud130 \ub0ae\uc740 \uac83 \uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE staff (staff_id INT, supplier_id INT, department VARCHAR(255), employment_date DATE, salary DECIMAL(10,2));", "output": "SELECT staff_id, department, salary, RANK() OVER (PARTITION BY department ORDER BY salary DESC) as salary_rank, AVG(salary) OVER (PARTITION BY department) as avg_monthly_salary FROM staff WHERE department = 'Logistics';"}
{"input": " \ub0a8\uc911\uad6d\ud574\uc5d0\uc11c \ud0d0\uc0ac \ub0a0\uc9dc\ubcc4\ub85c \ucd1d \ud0d0\uc0ac \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uc720\uc815\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE south_china_sea_data (data_id INT, well_id INT, date_explored DATE, type VARCHAR(50), cost FLOAT); INSERT INTO south_china_sea_data (data_id, well_id, date_explored, type, cost) VALUES (13, 13, '2020-06-01', 'Seismic', 200000.0), (14, 13, '2020-07-01', 'Drilling', 700000.0), (15, 14, '2019-11-15', 'Seismic', 250000.0), (16, 14, '2020-02-10', 'Drilling', 800000.0);", "output": "SELECT well_id, SUM(cost) OVER (PARTITION BY well_id ORDER BY date_explored DESC) as total_cost FROM south_china_sea_data WHERE location = 'South China Sea';"}
{"input": " 2,500\uba85\uc774 \ucc38\uc11d\ud558\ub294 \uc0c8\ub85c\uc6b4 \uc774\ubca4\ud2b8 \"Dia de los Muertos Festival\" \uc0bd\uc785", "context": "CREATE TABLE events (event_id INT PRIMARY KEY, name VARCHAR(100), attendance INT);", "output": "INSERT INTO events (event_id, name, attendance) VALUES ((SELECT MAX(event_id) FROM events) + 1, 'Dia de los Muertos Festival', 2500);"}
{"input": " \uc7ac\ud574 \ubc0f \uc218\ud61c \uae30\uad00\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc815\ubcf4\uc640 \ud568\uaed8 \ubbf8\uc8fc \uc9c0\uc5ed \uc7ac\ud574 \ub300\uc751\uc5d0 \ub300\ud55c \ucd1d \uae30\ubd80 \uae08\uc561 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE disaster (disaster_id INT, name VARCHAR(255), location VARCHAR(255), start_date DATE); INSERT INTO disaster VALUES (1, 'Hurricane Katrina', 'USA', '2005-08-29'); INSERT INTO disaster VALUES (2, 'Earthquake', 'Mexico', '2017-09-19'); CREATE TABLE donation (donation_id INT, disaster_id INT, donor_id INT, amount DECIMAL(10,2)); INSERT INTO donation VALUES (1, 1, 1001, 500000); INSERT INTO donation VALUES (2, 2, 1002, 750000); CREATE TABLE donor (donor_id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO donor VALUES (1001, 'Donor1', 'Individual'); INSERT INTO donor VALUES (1002, 'Donor2', 'Corporation'); CREATE TABLE organization (org_id INT, name VARCHAR(255), type VARCHAR(255)); INSERT INTO organization VALUES (1, 'ORG1', 'NGO'); INSERT INTO organization VALUES (2, 'ORG2', 'Government Agency');", "output": "SELECT donor.name, SUM(donation.amount) as total_donation, disaster.name, organization.name as recipient FROM donation JOIN donor ON donation.donor_id = donor.donor_id JOIN disaster ON donation.disaster_id = disaster.disaster_id JOIN organization ON disaster.org_id = organization.org_id WHERE disaster.location = 'Americas' GROUP BY donor.name ORDER BY total_donation DESC LIMIT 3;"}
{"input": " \uc0c1\uc704 2\uac1c \uac00\uc0c1 \ud22c\uc5b4\uc758 \ucc38\uc5ec\uc728\uacfc \ucc38\uc5ec \uc2dc\uac04\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE virtual_tours_top (id INT, engagement_rate FLOAT, engagement_time INT); INSERT INTO virtual_tours_top (id, engagement_rate, engagement_time) VALUES (1, 0.15, 700), (2, 0.13, 800);", "output": "SELECT id, engagement_rate, engagement_time FROM virtual_tours_top WHERE row_number() OVER (ORDER BY engagement_rate DESC) <= 2;"}
{"input": " VR \ud5e4\ub4dc\uc14b\uc744 \uc18c\uc720\ud558\uace0 \ubd81\ubbf8 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ucd5c\ub300 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE players (player_id INT, age INT, country VARCHAR(50), vr_owner BOOLEAN); CREATE TABLE esports_participants (participant_id INT, player_id INT); CREATE TABLE esports_events (event_id INT, location VARCHAR(50));", "output": "SELECT MAX(players.age) FROM players INNER JOIN esports_participants ON players.player_id = esports_participants.player_id INNER JOIN (SELECT event_id FROM esports_events WHERE location = 'North America') AS north_america_events ON esports_participants.player_id = north_america_events.event_id WHERE players.vr_owner = TRUE;"}
{"input": " \uac01 \ubcc0\ud638\uc0ac\uc758 \ucd5c\uc18c \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), start_date DATE); INSERT INTO attorneys (attorney_id, name, start_date) VALUES (1, 'John Doe', '2020-01-01'); INSERT INTO attorneys (attorney_id, name, start_date) VALUES (2, 'Jane Smith', '2019-06-15'); CREATE TABLE billing (billing_id INT, attorney_id INT, amount DECIMAL(10, 2), bill_date DATE); INSERT INTO billing (billing_id, attorney_id, amount, bill_date) VALUES (1, 1, 500.00, '2020-01-15'); INSERT INTO billing (billing_id, attorney_id, amount, bill_date) VALUES (2, 2, 750.00, '2019-07-01'); INSERT INTO billing (billing_id, attorney_id, amount, bill_date) VALUES (3, 1, 100.00, '2020-02-15');", "output": "SELECT attorney_id, MIN(amount) as min_amount FROM billing GROUP BY attorney_id;"}
{"input": " 2021\ub144 \ud559\uc0dd\ub4e4\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students (student_id INT, student_name VARCHAR(255), mental_health_score INT, mental_health_year INT); INSERT INTO students VALUES (1, 'Alex Lee', 85, 2021), (2, 'Yasmine Khalil', 90, 2021), (3, 'James Chen', 75, 2021), (4, 'Sophia Kim', 80, 2020);", "output": "SELECT AVG(s.mental_health_score) as average_mental_health_score FROM students s WHERE s.mental_health_year = 2021;"}
{"input": " \ube0c\ub77c\uc9c8\uc758 \ud638\ud154\uacfc \ubb38\ud654\uc720\uc0b0 \uc720\uc801\uc9c0\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Brazil_Sites (site_id INT, site_name VARCHAR(50), country VARCHAR(50)); INSERT INTO Brazil_Sites (site_id, site_name, country) VALUES (1, 'Hotel Sao Paulo', 'Brazil'), (2, 'Hotel Rio de Janeiro', 'Brazil'), (3, 'Christ the Redeemer', 'Brazil');", "output": "SELECT COUNT(*) FROM Brazil_Sites WHERE country = 'Brazil';"}
{"input": " \uae30\uc220 \uc2a4\ud0c0\ud2b8\uc5c5\uc5d0\uc11c \uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Companies (id INT, name VARCHAR(50), industry VARCHAR(50), country VARCHAR(50)); INSERT INTO Companies (id, name, industry, country) VALUES (1, 'CodeForHer', 'Tech', 'USA'); INSERT INTO Companies (id, name, industry, country) VALUES (2, 'TechFemmes', 'Tech', 'France');", "output": "SELECT country, COUNT(*) as female_founders_count FROM Companies WHERE name IN ('CodeForHer', 'TechFemmes') GROUP BY country ORDER BY female_founders_count DESC LIMIT 1;"}
{"input": " '\ub85d'\uacfc '\uc7ac\uc988' \uc7a5\ub974\uc758 \uc544\ud2f0\uc2a4\ud2b8\ub97c \ucd08\ub300\ud55c \ucf58\uc11c\ud2b8 \uc7a5\uc18c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Concerts (ConcertID INT, VenueID INT, ArtistID INT, Genre VARCHAR(10)); INSERT INTO Concerts (ConcertID, VenueID, ArtistID, Genre) VALUES (1, 1001, 1, 'Rock'), (2, 1002, 2, 'Jazz'), (3, 1003, 3, 'Jazz'), (4, 1004, 4, 'Pop'), (5, 1005, 1, 'Rock'), (6, 1006, 2, 'Rock'), (7, 1007, 3, 'Pop');", "output": "SELECT VenueID FROM Concerts WHERE Genre = 'Rock' INTERSECT SELECT VenueID FROM Concerts WHERE Genre = 'Jazz';"}
{"input": " \ubcf5\uc6d0\ub41c \uc720\ub7fd\uc758 \uc720\uc801\uc9c0 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE HeritageSites (id INT, location VARCHAR(20), status VARCHAR(20));", "output": "SELECT COUNT(*) FROM HeritageSites WHERE location LIKE 'Europe%' AND status = 'restored';"}
{"input": " '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc5d0 \uc704\uce58\ud55c \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 '\uc720\uae30\ub18d \uc0ac\uacfc'\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Stores (store_id INT, store_name VARCHAR(50), state VARCHAR(50)); INSERT INTO Stores (store_id, store_name, state) VALUES (1, 'Farm Fresh', 'California'); CREATE TABLE Inventory (product_id INT, product_name VARCHAR(50), store_id INT); INSERT INTO Inventory (product_id, product_name, store_id) VALUES (1, 'Organic Apples', 1); CREATE TABLE Sales (sale_id INT, product_id INT, sale_quantity INT); INSERT INTO Sales (sale_id, product_id, sale_quantity) VALUES (1, 1, 50);", "output": "SELECT SUM(sale_quantity) FROM Sales JOIN Inventory ON Sales.product_id = Inventory.product_id JOIN Stores ON Inventory.store_id = Stores.store_id WHERE product_name = 'Organic Apples' AND state = 'California';"}
{"input": "\uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ubd88\ub9cc\uc744 \uc81c\uae30\ud55c \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers(subscriber_id INT, last_complaint_date DATE); INSERT INTO mobile_subscribers(subscriber_id, last_complaint_date) VALUES (1, '2021-07-01'), (2, '2021-09-15'), (3, '2021-05-05'), (4, '2021-01-01'); CREATE TABLE broadband_subscribers(subscriber_id INT, last_complaint_date DATE); INSERT INTO broadband_subscribers(subscriber_id, last_complaint_date) VALUES (1, '2021-06-30'), (2, '2021-12-31'), (3, '2021-08-08'), (4, '2021-07-07');", "output": "SELECT COUNT(*) FROM (SELECT subscriber_id FROM mobile_subscribers WHERE last_complaint_date >= DATEADD(month, -6, GETDATE()) UNION SELECT subscriber_id FROM broadband_subscribers WHERE last_complaint_date >= DATEADD(month, -6, GETDATE()));"}
{"input": " \uc9c0\uc5ed\ubcc4 AI \ub3c4\uad6c \ud3c9\uc810 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE ai_tools (tool_id INT, tool_name VARCHAR(50), region VARCHAR(50), rating FLOAT); INSERT INTO ai_tools (tool_id, tool_name, region, rating) VALUES (1, 'AITSG1', 'APAC', 4.3), (2, 'AITSG2', 'EMEA', 4.6), (3, 'AITSG3', 'AMER', 4.5);", "output": "SELECT region, NTILE(5) OVER (ORDER BY rating) as rating_group FROM ai_tools GROUP BY region;"}
{"input": " \uc218\uc775 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 '\uac8c\uc784' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc788\ub294 \uac01 \uac8c\uc784\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE games (id INT, name VARCHAR(50), genre VARCHAR(50), revenue FLOAT); INSERT INTO games (id, name, genre, revenue) VALUES (1, 'Game1', 'Gaming', 5000000), (2, 'Game2', 'Gaming', 7000000), (3, 'Game3', 'Simulation', 3000000);", "output": "SELECT name, revenue FROM (SELECT name, revenue, ROW_NUMBER() OVER (ORDER BY revenue DESC) as rn FROM games WHERE genre = 'Gaming') sub WHERE rn != 1;"}
{"input": " \ubcc0\ud638\uc0ac\uac00 \uac74\ub2f9 \uccad\uad6c\ud558\ub294 \ud3c9\uade0 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cases (CaseID INT, CaseType VARCHAR(50)); INSERT INTO Cases (CaseID, CaseType) VALUES (1, 'Civil'); INSERT INTO Cases (CaseID, CaseType) VALUES (2, 'Criminal'); CREATE TABLE CaseBilling (CaseBillingID INT, CaseID INT, BillingID INT); INSERT INTO CaseBilling (CaseBillingID, CaseID, BillingID) VALUES (1, 1, 1); INSERT INTO CaseBilling (CaseBillingID, CaseID, BillingID) VALUES (2, 1, 2); INSERT INTO CaseBilling (CaseBillingID, CaseID, BillingID) VALUES (3, 2, 3);", "output": "SELECT AT.Name, AVG(B.Amount) AS AvgBillingPerCase FROM Attorneys AT JOIN Assignments A ON AT.AttorneyID = A.AttorneyID JOIN CaseBilling CB ON A.AssignmentID = CB.AssignmentID JOIN Billing B ON CB.BillingID = B.BillingID JOIN Cases C ON CB.CaseID = C.CaseID GROUP BY AT.Name;"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0\uc11c \ud56d\uacf5\uae30\ub97c \uc81c\uc870\ud55c \uc81c\uc870\uc5c5\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AircraftModels (model_id INT, name VARCHAR(50), manufacturer VARCHAR(50), country VARCHAR(50)); INSERT INTO AircraftModels (model_id, name, manufacturer, country) VALUES (1, 'Air1', 'AvionicCorp', 'USA'), (2, 'Air2', 'AeroCanada', 'Canada'), (3, 'Air3', 'EuroJet', 'France'), (4, 'Air4', 'AvionicCorp', 'Mexico'), (5, 'Air5', 'AeroCanada', 'USA');", "output": "SELECT manufacturer FROM AircraftModels WHERE country IN ('USA', 'Canada') GROUP BY manufacturer HAVING COUNT(DISTINCT country) = 2;"}
{"input": " 2020\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc0b0\uc5c5 \ubd80\ubb38\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE industrial_water_use (sector VARCHAR(50), year INT, amount INT); INSERT INTO industrial_water_use (sector, year, amount) VALUES ('Agriculture', 2020, 12000), ('Manufacturing', 2020, 8000), ('Mining', 2020, 5000);", "output": "SELECT i.sector, SUM(i.amount) as total_water_consumption FROM industrial_water_use i WHERE i.year = 2020 AND i.sector = 'Industrial' GROUP BY i.sector;"}
{"input": " \uc9c0\uc5ed \ud3c9\uade0\ubcf4\ub2e4 \uc0dd\uc0b0\ub7c9\uc774 \ub9ce\uc740 '\ub0a8\uc911\uad6d\ud574'\uc758 \uc6b0\ubb3c \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE WellProduction (well_id INT, well_name TEXT, region TEXT, production_qty REAL); INSERT INTO WellProduction (well_id, well_name, region, production_qty) VALUES (1, 'Delta', 'SouthChinaSea', 1200), (2, 'Echo', 'SouthChinaSea', 1800), (3, 'Foxtrot', 'SouthChinaSea', 1000);", "output": "SELECT well_name FROM WellProduction WHERE region = 'SouthChinaSea' AND production_qty > (SELECT AVG(production_qty) FROM WellProduction WHERE region = 'SouthChinaSea')"}
{"input": " \uba55\uc2dc\ucf54 \uad00\uad11\uc774 \uc9c0\uc5ed \uacbd\uc81c\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE impact (id INT, country TEXT, tourism INT, economic INT); INSERT INTO impact (id, country, tourism, economic) VALUES (1, 'Mexico', 30000, 500000);", "output": "SELECT economic FROM impact WHERE country = 'Mexico';"}
{"input": " \uce5c\ud658\uacbd \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ud3c9\uade0\uac00\uaca9\uc744 \uad6c\ud574\ubcf4\uc138\uc694", "context": "CREATE TABLE cosmetics (id INT, name VARCHAR(50), price DECIMAL(5,2), eco_friendly BOOLEAN);", "output": "SELECT AVG(price) FROM cosmetics WHERE eco_friendly = TRUE;"}
{"input": " 2020\ub144 '\ubd81\ub3d9\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uc720\uc9c0\uad00\ub9ac \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uad50\ub7c9 \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Bridges (    BridgeID INT,    Name VARCHAR(255),    Region VARCHAR(255),    MaintenanceCost DECIMAL(10, 2),    Year INT);", "output": "SELECT * FROM (    SELECT *,    ROW_NUMBER() OVER (PARTITION BY Region ORDER BY MaintenanceCost DESC) as rank    FROM Bridges    WHERE Year = 2020 AND Region = 'Northeast') sub WHERE rank <= 3;"}
{"input": " \uc77c\uc77c \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218\uc5d0 \ub530\ub77c \uc21c\uc704\ub97c \ub9e4\uae34 \uc18c\uc15c \ubbf8\ub514\uc5b4 \ud50c\ub7ab\ud3fc\uc758 \uc77c\uc77c \ud3c9\uade0 \ud65c\uc131 \uc0ac\uc6a9\uc790 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE social_media_platforms (id INT, name VARCHAR(50), daily_active_users INT); INSERT INTO social_media_platforms (id, name, daily_active_users) VALUES (1, 'Facebook', 2000000000); INSERT INTO social_media_platforms (id, name, daily_active_users) VALUES (2, 'Instagram', 1500000000); INSERT INTO social_media_platforms (id, name, daily_active_users) VALUES (3, 'TikTok', 1000000000);", "output": "SELECT AVG(daily_active_users) as avg_dau, RANK() OVER (ORDER BY daily_active_users DESC) as rank FROM social_media_platforms;"}
{"input": " 2022\ub144 \ud55c \ub2ec \ub3d9\uc548 \ucf58\ud150\uce20 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub41c \ucf58\ud150\uce20 \ud56d\ubaa9 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE content (id INT, created_at TIMESTAMP); INSERT INTO content (id, created_at) VALUES (1, '2022-01-01 10:00:00'), (2, '2022-01-15 14:30:00'), (3, '2022-02-03 09:15:00'), (4, '2022-03-05 16:45:00'), (5, '2022-03-20 11:00:00'), (6, '2022-04-01 13:30:00'), (7, '2022-04-15 17:00:00'), (8, '2022-05-03 10:45:00'), (9, '2022-05-17 15:00:00'), (10, '2022-06-01 11:30:00');", "output": "SELECT EXTRACT(MONTH FROM created_at) AS month, type, COUNT(*) AS num_content FROM content, (SELECT 'article' AS type UNION ALL SELECT 'video') types GROUP BY month, type ORDER BY month, type;"}
{"input": " \uc5ec\uc131 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucd1d \ubc1c\ub9e4 \uace1\uc218\uc640 \uc568\ubc94 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Gender VARCHAR(10)); INSERT INTO Artists (ArtistID, ArtistName, Gender) VALUES (1, 'Taylor Swift', 'Female'), (2, 'Green Day', 'Male'); CREATE TABLE Songs (SongID INT, SongName VARCHAR(100), ArtistID INT); INSERT INTO Songs (SongID, SongName, ArtistID) VALUES (1, 'Love Story', 1), (2, 'American Idiot', 2); CREATE TABLE Albums (AlbumID INT, AlbumName VARCHAR(100), ArtistID INT); INSERT INTO Albums (AlbumID, AlbumName, ArtistID) VALUES (1, 'Fearless', 1), (2, 'American Idiot', 2);", "output": "SELECT COUNT(DISTINCT s.SongID) + COUNT(DISTINCT a.AlbumID) AS TotalReleases FROM Artists a JOIN Songs s ON a.ArtistID = s.ArtistID JOIN Albums al ON a.ArtistID = al.ArtistID WHERE a.Gender = 'Female';"}
{"input": " \uac01 \uad11\uc0b0\uc5d0 \ub300\ud55c CO2 \ubc30\ucd9c\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE environmental_impact (id INT, mine_name VARCHAR(50), co2_emissions INT, year INT); INSERT INTO environmental_impact (id, mine_name, co2_emissions, year) VALUES (1, 'Copper Mountain', 12000, 2017), (2, 'Barrick Gold', 15000, 2018), (3, 'Newmont Goldcorp', 18000, 2019), (4, 'Copper Mountain', 12500, 2018), (5, 'Barrick Gold', 14000, 2019);", "output": "SELECT mine_name, year, AVG(co2_emissions) OVER (PARTITION BY mine_name ORDER BY year ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS moving_average FROM environmental_impact;"}
{"input": " \ucd1d \uc601\ud5a5 \uac00\uce58\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uba85\uc758 \uc704\ud611 \ud589\uc704\uc790\uc640 \uc774\ub4e4\uc758 \ucd1d \uc0ac\uac74 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_actors (id INT, actor VARCHAR(50), impact_value INT, incident_count INT); INSERT INTO threat_actors (id, actor, impact_value, incident_count) VALUES (1, 'ActorA', 12000, 4), (2, 'ActorB', 10000, 5), (3, 'ActorC', 8000, 6), (4, 'ActorA', 9000, 3), (5, 'ActorD', 11000, 7);", "output": "SELECT actor, SUM(impact_value) as total_impact, SUM(incident_count) as total_incidents, RANK() OVER (ORDER BY SUM(impact_value) DESC) as rnk FROM threat_actors GROUP BY actor HAVING rnk <= 5;"}
{"input": " \uc720\ubb3c\uc774 \uc5c6\ub294 \uc720\uc801\uc9c0\ub97c \uc81c\uc678\ud558\uace0 \uac01 \ubc1c\uad74\ud604\uc7a5\uc5d0\uc11c \ubc1c\uacac\ub41c \uc720\ubb3c\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSites (SiteID INT, SiteName VARCHAR(100), ArtifactID INT); INSERT INTO ExcavationSites (SiteID, SiteName, ArtifactID) VALUES (1, 'Site A', 1), (1, 'Site A', 2), (2, 'Site B', 3), (3, 'Site C', NULL);", "output": "SELECT SiteName, COUNT(ArtifactID) as ArtifactCount FROM ExcavationSites WHERE ArtifactID IS NOT NULL GROUP BY SiteName ORDER BY ArtifactCount DESC;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub97c \ud655\uc778\ud558\uace0 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE programs (program_id INT, program TEXT, num_volunteers INT); INSERT INTO programs VALUES (1, 'Feeding Program', 0), (2, 'Education Program', 0);", "output": "SELECT program, COUNT(volunteer_id) as num_volunteers, RANK() OVER (ORDER BY COUNT(volunteer_id) DESC) as program_rank FROM volunteers GROUP BY program;"}
{"input": " \ud2b9\uc815 \ub3d9\ub124\uc758 \uc0ac\uc6a9\uc790\uac00 \ub2ec\ub9ac\ub294 \ud3c9\uade0 \uac70\ub9ac\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Runs (id INT, user_id INT, distance FLOAT, neighborhood TEXT); INSERT INTO Runs (id, user_id, distance, neighborhood) VALUES (1, 1, 5.6, 'West Village'), (2, 2, 7.2, 'Silver Lake');", "output": "SELECT AVG(distance) FROM Runs WHERE neighborhood = 'West Village';"}
{"input": " 2000\ubbf8\ud130\ubcf4\ub2e4 \uae4a\uc740 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc758 \uc774\ub984\uacfc \ud3c9\uade0 \uae4a\uc774\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marine_protected_areas (name VARCHAR(255), region VARCHAR(255), avg_depth FLOAT); INSERT INTO marine_protected_areas (name, region, avg_depth) VALUES ('Mariana Trench Marine National Monument', 'Pacific', 10994.0), ('Tonga Trench', 'Pacific', 10820.0), ('Kermadec Trench', 'Pacific', 10047.0);", "output": "SELECT name, avg_depth FROM marine_protected_areas WHERE region = 'Pacific' AND avg_depth > 2000;"}
{"input": " \uc5ed\uc0ac\uc801\uc73c\ub85c \uc18c\uc678\ub41c \ubc30\uacbd\uc744 \uac00\uc9c4 \ub300\ud559\uc6d0\uc0dd \uc911\uc5d0\uc11c \ubcf4\uc870\uae08 \uc218\ud61c\uc790\uc640 \ub17c\ubb38 \uc800\uc790\uc758 \uad50\ucc28\uc810\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE grant_recipients (student_id INT, grant_id INT);   CREATE TABLE paper_authors (student_id INT, paper_id INT);   CREATE TABLE students (student_id INT, student_name VARCHAR(255), student_community VARCHAR(255));", "output": "SELECT DISTINCT s.student_name FROM students s INNER JOIN grant_recipients gr ON s.student_id = gr.student_id INNER JOIN paper_authors pa ON s.student_id = pa.student_id WHERE s.student_community IN ('Historically Marginalized Community 1', 'Historically Marginalized Community 2');"}
{"input": " \ud558\ub8e8 \ud3c9\uade0 \uac70\ub798 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ub514\uc9c0\ud138 \uc790\uc0b0\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE transactions (asset TEXT, tx_date DATE); INSERT INTO transactions (asset, tx_date) VALUES ('Securitize', '2021-01-01'), ('Securitize', '2021-01-02'), ('Polymath', '2021-01-01'), ('Polymath', '2021-01-02'), ('Polymath', '2021-01-03');", "output": "SELECT asset, AVG(tx_count) FROM (SELECT asset, COUNT(*) AS tx_count FROM transactions GROUP BY asset, tx_date) AS subquery GROUP BY asset ORDER BY AVG(tx_count) DESC;"}
{"input": " '\uc7ac\ud65c\uc6a9' \uc778\uc99d\uacfc '\uacf5\uc815\ubb34\uc5ed' \uc778\uc99d\uc744 \ubaa8\ub450 \ubc1b\uc740 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(255), certification VARCHAR(255));INSERT INTO products VALUES (1,'Product A','recycled'),(2,'Product B','fair_trade'),(3,'Product C','organic'),(4,'Product D','recycled'),(5,'Product E','fair_trade'),(6,'Product F','recycled, fair_trade');", "output": "SELECT SUM(quantity) FROM products WHERE certification IN ('recycled', 'fair_trade') GROUP BY certification HAVING COUNT(DISTINCT certification) = 2"}
{"input": "\ub0a8\uc131 \uace0\uac1d\uacfc \uc5ec\uc131 \uace0\uac1d\uc758 \uc8fc\ubb38\ub2f9 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud3c9\uade0 \uc9c1\ubb3c \ube44\uc6a9\uc758 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders (order_id INT, customer_id INT, sustainable_fabric_cost DECIMAL(5,2));CREATE TABLE customers (customer_id INT, gender VARCHAR(10));", "output": "SELECT gender, AVG(sustainable_fabric_cost) - LAG(AVG(sustainable_fabric_cost)) OVER (ORDER BY gender) FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id GROUP BY gender;"}
{"input": " \ubb44\ubc14\uc774\uc5d0\uc11c \ub3c4\uc2dc \ud3c9\uade0\ubcf4\ub2e4 \ubb3c \uc18c\ube44\ub7c9\uc774 \ub9ce\uc740 \uac00\uad6c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mumbai_water_consumption (id INT, date DATE, household_id INT, water_consumption FLOAT); INSERT INTO mumbai_water_consumption (id, date, household_id, water_consumption) VALUES (1, '2021-01-01', 1, 150.0), (2, '2021-01-02', 2, 200.0);", "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(DISTINCT household_id) FROM mumbai_water_consumption) FROM mumbai_water_consumption WHERE water_consumption > (SELECT AVG(water_consumption) FROM mumbai_water_consumption);"}
{"input": "\ub3c4\uc2dc\ubcc4 \uc548\uc804 \ubb38\uc81c\uac00 \uc788\ub294 \uc0ac\uc5c5\uc7a5\uc740 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplaces (id INT, city VARCHAR(10), safety_issues INT); INSERT INTO workplaces (id, city, safety_issues) VALUES (1, 'New York', 10), (2, 'Los Angeles', 5), (3, 'Houston', 15), (4, 'Miami', 8); CREATE TABLE cities (id INT, city VARCHAR(10)); INSERT INTO cities (id, city) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Houston'), (4, 'Miami');", "output": "SELECT w.city, SUM(w.safety_issues) OVER (PARTITION BY w.city) AS total_safety_issues FROM workplaces w INNER JOIN cities c ON w.city = c.city;"}
{"input": " \uc18c\ube44\uc790\uac00 \uac00\uc7a5 \uc120\ud638\ud558\ub294 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ud654\uc7a5\ud488 \ube0c\ub79c\ub4dc TOP 3\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE cosmetic_brands (brand_name VARCHAR(100), is_cruelty_free BOOLEAN); INSERT INTO cosmetic_brands (brand_name, is_cruelty_free) VALUES ('Lush', true), ('The Body Shop', true), ('Pacifica', true);", "output": "SELECT brand_name FROM (SELECT brand_name, ROW_NUMBER() OVER (ORDER BY is_cruelty_free DESC) as rank FROM cosmetic_brands) subquery WHERE rank <= 3;"}
{"input": " 2020\ub144 \ubd81\ud574 \ucd5c\uace0\uc758 \uc0dd\uc0b0\uc9c0 3\uac1c\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE production (field VARCHAR(50), year INT, oil_production FLOAT, gas_production FLOAT); INSERT INTO production (field, year, oil_production, gas_production) VALUES ('Ekofisk', 2020, 12345.6, 7890.1); INSERT INTO production (field, year, oil_production, gas_production) VALUES ('Statfjord', 2020, 23456.7, 8901.2); INSERT INTO production (field, year, oil_production, gas_production) VALUES ('Gullfaks', 2020, 34567.8, 9012.3);", "output": "SELECT field, oil_production + gas_production as total_production FROM production WHERE year = 2020 AND field LIKE 'North Sea%' ORDER BY total_production DESC LIMIT 3;"}
{"input": " \ub0a8\ubc18\uad6c \uac01 \uad6d\uac00\uc758 \ubc14\ub2f7\ubb3c \uc591\uc2dd\uc7a5\uc5d0\uc11c \ubb3c\uace0\uae30\uc758 \ucd5c\ub300 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_farms (id INT, name TEXT, type TEXT, location TEXT, biomass FLOAT); INSERT INTO fish_farms (id, name, type, location, biomass) VALUES (1, 'Farm U', 'Fish', 'Chile', 35000.0), (2, 'Farm V', 'Fish', 'Australia', 40000.0); CREATE TABLE country_codes (country TEXT, code TEXT); INSERT INTO country_codes (country, code) VALUES ('Chile', 'CL'), ('Australia', 'AU');", "output": "SELECT country, MAX(biomass) FROM fish_farms JOIN country_codes ON fish_farms.location = country_codes.country WHERE type = 'Fish' AND country IN (SELECT country FROM country_codes WHERE code IN ('CL', 'AU')) GROUP BY country;"}
{"input": " AeroTech Inc.\uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \ud56d\uacf5\uae30\uc758 \ucd5c\uc18c \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Aircraft (aircraft_name TEXT, maintenance_cost FLOAT); INSERT INTO Aircraft (aircraft_name, maintenance_cost) VALUES ('Fighter J', 800000), ('Cargo K', 1200000), ('AeroTech Helicopter', 900000);", "output": "SELECT MIN(maintenance_cost) FROM Aircraft WHERE aircraft_name LIKE '%AeroTech%';"}
{"input": " \ubaa8\ub4e0 \ucc3d\uc758\uc801 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3c9\uade0 \uc124\uba85\uc131 \uc810\uc218\ubcf4\ub2e4 \uc124\uba85\uc131 \uc810\uc218\uac00 \ub354 \ub192\uc740 \ucc3d\uc758\uc801 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Creative_AI (app_name TEXT, explainability_score INT); INSERT INTO Creative_AI (app_name, explainability_score) VALUES ('AI Painter', 75), ('AI Poet', 82), ('AI Music Composer', 78);", "output": "SELECT app_name FROM Creative_AI WHERE explainability_score > (SELECT AVG(explainability_score) FROM Creative_AI);"}
{"input": " \uc5f0\uac04 \uba87 \uac74\uc758 \uc815\ubcf4 \uc791\uc804\uc774 \uc218\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE IntelOps (id INT, name VARCHAR(50), agency VARCHAR(50), location VARCHAR(50), start_date DATE); INSERT INTO IntelOps (id, name, agency, location, start_date) VALUES (1, 'Operation Cyclone', 'CIA', 'Afghanistan', '1979-07-03');", "output": "SELECT YEAR(start_date), COUNT(*) FROM IntelOps GROUP BY YEAR(start_date);"}
{"input": " \ubbf8\uad6d\uacfc \uce90\ub098\ub2e4\uc5d0\uc11c \uc81c\uc791\ub41c \uc601\ud654\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (title VARCHAR(255), rating INT, production_country VARCHAR(50)); INSERT INTO movies (title, rating, production_country) VALUES ('Movie1', 8, 'USA'), ('Movie2', 7, 'Canada'), ('Movie3', 9, 'USA'), ('Movie4', 6, 'Canada');", "output": "SELECT AVG(rating) FROM movies WHERE production_country IN ('USA', 'Canada');"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \uacbd\ucc30 \ud65c\ub3d9 \ubc0f \ube44\uc0c1 \ub300\uc751\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_policing (id INT, type VARCHAR(255), location VARCHAR(255), reported_date DATE); INSERT INTO community_policing (id, type, location, reported_date) VALUES (1, 'Meeting', 'Community Center', '2021-01-02'); CREATE TABLE emergency_response (id INT, type VARCHAR(255), location VARCHAR(255), reported_date DATE); INSERT INTO emergency_response (id, type, location, reported_date) VALUES (1, 'Response', 'Fire Station', '2021-01-03');", "output": "SELECT COUNT(*) FROM community_policing UNION SELECT COUNT(*) FROM emergency_response;"}
{"input": " \ud504\ub85c\uc81d\ud2b8 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c 'rural_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_infrastructure (project_id INT, project_name VARCHAR(50), project_type VARCHAR(50), budget INT); INSERT INTO rural_infrastructure (project_id, project_name, project_type, budget) VALUES (1, 'Irrigation System', 'Water Management', 250000);", "output": "SELECT project_type, SUM(budget) FROM rural_infrastructure GROUP BY project_type;"}
{"input": " \ubbf8\uad6d \ub0b4 \uc0c1\uc704 3\uac1c \uae30\ubd80\ub2e8\uccb4\uc758 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonorType TEXT, Country TEXT, TotalDonations INT); INSERT INTO Donors (DonorID, DonorName, DonorType, Country, TotalDonations) VALUES (1, 'Bill & Melinda Gates Foundation', 'Organization', 'United States', 5000000), (2, 'Open Society Foundations', 'Organization', 'United States', 4000000), (3, 'Ford Foundation', 'Organization', 'United States', 3000000), (4, 'The William and Flora Hewlett Foundation', 'Organization', 'United States', 2000000);", "output": "SELECT SUM(TotalDonations) FROM Donors WHERE DonorType = 'Organization' AND Country = 'United States' AND DonorID IN (SELECT DonorID FROM (SELECT DonorID, ROW_NUMBER() OVER (ORDER BY TotalDonations DESC) rn FROM Donors WHERE DonorType = 'Organization' AND Country = 'United States') t WHERE rn <= 3);"}
{"input": " Tesla Model 3\uc758 \ub9c8\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE electric_cars (make VARCHAR(255), model VARCHAR(255), horsepower INT); INSERT INTO electric_cars (make, model, horsepower) VALUES ('Tesla', 'Model 3', 261), ('Tesla', 'Model S', 469);", "output": "SELECT horsepower FROM electric_cars WHERE make = 'Tesla' AND model = 'Model 3';"}
{"input": " \ubaa8\ub4e0 \uc11c\uc2dd\uc9c0\uc640 \uba78\uc885 \uc704\uae30 \ub610\ub294 \uc2ec\uac01\ud55c \uba78\uc885 \uc704\uae30\uc5d0 \ucc98\ud55c \uac83\uc73c\ub85c \ubd84\ub958\ub41c \uac01 \uc11c\uc2dd\uc9c0\uc758 \ub3d9\ubb3c \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE animals (id INT PRIMARY KEY, name VARCHAR(50), species VARCHAR(50), population INT, conservation_status VARCHAR(50)); CREATE TABLE habitats (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50), size FLOAT); CREATE TABLE animals_in_habitats (animal_id INT, habitat_id INT);", "output": "SELECT habitats.name, COUNT(animals.id) AS num_endangered_animals FROM habitats INNER JOIN animals_in_habitats ON habitats.id = animals_in_habitats.habitat_id INNER JOIN animals ON animals_in_habitats.animal_id = animals.id WHERE animals.conservation_status IN ('Endangered', 'Critically Endangered') GROUP BY habitats.name;"}
{"input": " \ucd1d \uae30\ubd80 \uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, program VARCHAR(255), amount DECIMAL(10, 2)); INSERT INTO donations (id, program, amount) VALUES (1, 'Animal Welfare', 500.00), (2, 'Education', 1000.00);", "output": "SELECT program FROM donations WHERE amount = (SELECT MAX(amount) FROM donations);"}
{"input": " \uac01 \ubc1c\uad74 \ud604\uc7a5\uc5d0\uc11c 1000\ub144 \uc774\uc0c1 \ub41c \uc720\ubb3c\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ancient_artifacts (id INT, artifact_name VARCHAR(50), age INT, excavation_site VARCHAR(50));", "output": "SELECT excavation_site, 100.0 * SUM(CASE WHEN age > 1000 THEN 1 ELSE 0 END) OVER (PARTITION BY excavation_site) / COUNT(*) OVER (PARTITION BY excavation_site) as pct_older_than_1000 FROM ancient_artifacts;"}
{"input": " \ubaa8\ub4e0 \uad6d\uac00\uc5d0\uc11c 1\uc6d4\uc5d0 \ud68c\uc0ac\uc5d0 \uc785\uc0ac\ud55c \ubaa8\ub4e0 \uc9c1\uc6d0\uc744 \uc774\ub984\uacfc \uc785\uc0ac\uc77c\uacfc \ud568\uaed8 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Country VARCHAR(50), HireDate DATE); INSERT INTO Employees (EmployeeID, FirstName, LastName, Country, HireDate) VALUES (1, 'John', 'Doe', 'USA', '2021-01-01'); INSERT INTO Employees (EmployeeID, FirstName, LastName, Country, HireDate) VALUES (2, 'Jane', 'Doe', 'Canada', '2021-02-01');", "output": "SELECT Employees.FirstName, Employees.LastName, Employees.HireDate FROM Employees WHERE MONTH(Employees.HireDate) = 1;"}
{"input": "\ub0a8\ubbf8\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists startups; USE startups; CREATE TABLE if not exists budgets (id INT, startup_id INT, budget DECIMAL(10, 2)); INSERT INTO budgets (id, startup_id, budget) VALUES (1, 1, 30000000.00), (2, 2, 20000000.00), (3, 3, 18000000.00), (4, 4, 25000000.00), (5, 5, 13000000.00);", "output": "SELECT AVG(budget) FROM startups.budgets WHERE startup_id IN (SELECT id FROM startups.startups WHERE region = 'South America');"}
{"input": " 'IT' \ubd80\uc11c\uc5d0\uc11c \uc5f0\ubd09\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c1\uc6d0\uc758 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Employees (Employee_ID INT, First_Name VARCHAR(50), Last_Name VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2)); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (1, 'Sana', 'Mir', 'Finance', 80000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (2, 'Ali', 'Khan', 'IT', 75000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (3, 'Zainab', 'Ali', 'Finance', 85000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (4, 'Ahmed', 'Javed', 'HR', 70000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (5, 'Fatima', 'Khan', 'Marketing', 90000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (6, 'Aisha', 'Begum', 'Finance', 95000.00); INSERT INTO Employees (Employee_ID, First_Name, Last_Name, Department, Salary) VALUES (7, 'Hamza', 'Ali', 'IT', 90000.00);", "output": "SELECT Salary FROM Employees WHERE Employee_ID = (SELECT Employee_ID FROM Employees WHERE Department = 'IT' ORDER BY Salary DESC LIMIT 1);"}
{"input": " NY \ubc0f CA\uc758 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uac00 \uc81c\uacf5\ud558\ub294 \ubb38\ud654\uc801 \uc5ed\ub7c9 \ud6c8\ub828 \ud504\ub85c\uadf8\ub7a8\uc744 \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE community_health_workers (worker_id INT, name VARCHAR(50), state VARCHAR(2), training_programs VARCHAR(100)); INSERT INTO community_health_workers (worker_id, name, state, training_programs) VALUES (1, 'Jane Doe', 'NY', 'Cultural Competency, First Aid'); INSERT INTO community_health_workers (worker_id, name, state, training_programs) VALUES (2, 'John Smith', 'CA', 'Cultural Competency, CPR');", "output": "SELECT state, training_programs FROM community_health_workers WHERE state IN ('NY', 'CA') AND training_programs LIKE '%Cultural Competency%';"}
{"input": " \uc2a4\ud398\uc778\uacfc \ud3ec\ub974\ud22c\uac08\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ubb38\ud654\uc720\uc0b0\uacfc \uac00\uc0c1 \ud22c\uc5b4\uc758 \uc218\ub97c \ud655\uc778\ud558\uace0 \ub450 \uc22b\uc790\uc758 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cultural_sites (site_id INT, country VARCHAR(20), type VARCHAR(20)); INSERT INTO cultural_sites (site_id, country, type) VALUES (1, 'Spain', 'heritage'), (2, 'Portugal', 'heritage'), (3, 'Spain', 'heritage'), (4, 'Spain', 'virtual'), (5, 'Portugal', 'virtual');", "output": "SELECT COUNT(*) FROM cultural_sites WHERE country = 'Spain' AND type = 'heritage' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Portugal' AND type = 'heritage' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Spain' AND type = 'virtual' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Portugal' AND type = 'virtual' EXCEPT (SELECT * FROM (SELECT COUNT(*) FROM cultural_sites WHERE country = 'Spain' AND type = 'heritage' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Portugal' AND type = 'heritage' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Spain' AND type = 'virtual' UNION ALL SELECT COUNT(*) FROM cultural_sites WHERE country = 'Portugal' AND type = 'virtual') AS subquery);"}
{"input": " \ubd81\uc11c\ubd80\uc9c0\uc5ed \ub178\uc870\ubcc4 \uc870\ud569\uc6d0 100\uba85\ub2f9 \uc0ac\uace0\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_membership (member_id INT, name VARCHAR(50), union_name VARCHAR(50), region VARCHAR(50), membership_start_date DATE);CREATE TABLE workplace_safety (safety_id INT, union_name VARCHAR(50), incident_date DATE, incident_type VARCHAR(50), severity VARCHAR(50));CREATE VIEW union_membership_summary AS SELECT union_name, COUNT(*) as num_members FROM union_membership GROUP BY union_name;CREATE VIEW northwest_unions AS SELECT union_name FROM union_membership WHERE region = 'Northwest';", "output": "SELECT ums.union_name, (COUNT(*) * 100.0 / ums.num_members) as incident_rate FROM workplace_safety ws JOIN union_membership_summary ums ON ws.union_name = ums.union_name JOIN northwest_unions nu ON ws.union_name = nu.union_name GROUP BY ums.union_name;"}
{"input": " \uc18c\ub9e4\uac00\ub97c \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \ube44\uc2fc \uc758\ub958 \uc0c1\uc704 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Garments (garment_id INT, garment_name VARCHAR(50), retail_price DECIMAL(5,2)); INSERT INTO Garments (garment_id, garment_name, retail_price) VALUES (1, 'Sequin Evening Gown', 850.99), (2, 'Cashmere Sweater', 250.00), (3, 'Silk Blouse', 150.00);", "output": "SELECT garment_name, retail_price FROM (SELECT garment_name, retail_price, ROW_NUMBER() OVER (ORDER BY retail_price DESC) as rn FROM Garments) sub WHERE rn <= 3;"}
{"input": " '\ud64d\ucf69'\uc758 \uac01 \ud06c\ub808\uc778\uc774 \ud558\ub8e8\uc5d0 \ucc98\ub9ac\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ud3c9\uade0 \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE port (port_id INT, name TEXT, created_at DATETIME);CREATE TABLE crane (crane_id INT, port_id INT, name TEXT);CREATE TABLE container (container_id INT, crane_id INT, weight INT, created_at DATETIME);INSERT INTO port VALUES (4, 'Hong Kong', '2022-01-01');", "output": "SELECT crane.name, AVG(COUNT(container.container_id)) FROM crane JOIN port ON crane.port_id = port.port_id JOIN container ON crane.crane_id = container.crane_id WHERE port.name = 'Hong Kong' GROUP BY crane.name, DATE(container.created_at);"}
{"input": " \ucd1d \uc601\ud5a5\uc774 \uac00\uc7a5 \ud070 \uad11\uc0b0\uc758 \uc77c\uc77c \ud658\uacbd \uc601\ud5a5\uc740 \uc5bc\ub9c8\uc774\uba70, \ud574\ub2f9 \uc601\ud5a5\uc744 \uc644\ud654\ud558\ub294 \ub370 \ub4dc\ub294 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mines (MineID INT, MineName VARCHAR(50), Location VARCHAR(50));CREATE TABLE EnvironmentalImpact (ImpactID INT, MineID INT, ImpactType VARCHAR(50), ImpactAmount DECIMAL(10,2), ImpactDate DATE);CREATE TABLE Mitigation (MitigationID INT, ImpactID INT, MitigationType VARCHAR(50), MitigationDate DATE, MitigationCost DECIMAL(10,2));CREATE VIEW MineImpact AS SELECT MineID, SUM(ImpactAmount) AS TotalImpact FROM EnvironmentalImpact GROUP BY MineID ORDER BY TotalImpact DESC FETCH FIRST 1 ROW ONLY;CREATE VIEW MitigationCosts AS SELECT MitigationID, ImpactID, MitigationType, MitigationDate, MitigationCost, (MitigationCost * 1.5) AS TotalCost FROM Mitigation;", "output": "SELECT M.MineName, EI.ImpactType, EI.ImpactAmount, MC.MitigationType, MC.TotalCost FROM MineImpact MI JOIN Mines M ON MI.MineID = M.MineID JOIN EnvironmentalImpact EI ON MI.MineID = EI.MineID JOIN MitigationCosts MC ON MI.ImpactID = MC.ImpactID FETCH FIRST 1 ROW ONLY;"}
{"input": "\ube0c\ub77c\uc9c8 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubcf4\ud5d8 \ucde8\uc18c\uc728\uc744 \ub9e4\uc6d4 \uccab \ub2ec \uc774\ub0b4\uc5d0 \ubcf4\ud5d8\uc744 \ucde8\uc18c\ud55c \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ubc31\ubd84\uc728\ub85c \uacc4\uc0b0\ud558\uc5ec \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholders (PolicyholderID INT, Country VARCHAR(50), Cancelled BOOLEAN, CancellationDate DATE); INSERT INTO Policyholders VALUES (1, 'Brazil', TRUE, '2022-01-01'); INSERT INTO Policyholders VALUES (2, 'Brazil', FALSE, '2022-01-15'); INSERT INTO Policyholders VALUES (3, 'Brazil', FALSE, '2022-02-01');", "output": "SELECT EXTRACT(MONTH FROM CancellationDate) AS Month, COUNT(*) * 100.0 / SUM(CASE WHEN EXTRACT(MONTH FROM CancellationDate) = EXTRACT(MONTH FROM CancellationDate) THEN 1 ELSE 0 END) OVER (PARTITION BY EXTRACT(MONTH FROM CancellationDate)) AS PolicyCancellationRate FROM Policyholders WHERE Country = 'Brazil' AND FirstMonth = TRUE;"}
{"input": " \ub9c8\ucf00\ud305 \ubd80\uc11c\uc5d0\uc11c \ub2e4\uc591\uc131 \ubc0f \ud3ec\uc6a9\uc131 \uad50\uc721\uc744 \uc774\uc218\ud55c \uc9c1\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, Name varchar(50), Department varchar(50)); CREATE TABLE Training (TrainingID int, EmployeeID int, TrainingName varchar(50), CompletedDate date); CREATE TABLE TrainingCategories (TrainingID int, Category varchar(50)); INSERT INTO Employees (EmployeeID, Name, Department) VALUES (1, 'John Doe', 'Marketing'); INSERT INTO Training (TrainingID, EmployeeID, TrainingName, CompletedDate) VALUES (1, 1, 'Sales Training', '2022-01-10'); INSERT INTO TrainingCategories (TrainingID, Category) VALUES (1, 'Diversity and Inclusion');", "output": "SELECT COUNT(*) FROM Employees e JOIN Training t ON e.EmployeeID = t.EmployeeID JOIN TrainingCategories tc ON t.TrainingID = tc.TrainingID WHERE e.Department = 'Marketing' AND tc.Category = 'Diversity and Inclusion';"}
{"input": " '\ubb38\ud559\uc81c'\uc640 '\uc601\ud654\uc81c' \ud504\ub85c\uadf8\ub7a8\uc758 \uc790\uae08 \uc870\ub2ec \ubc29\uc2dd\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE LiteratureFestival(id INT, funding_source VARCHAR(20), amount DECIMAL(10,2)); CREATE TABLE FilmFestival(id INT, funding_source VARCHAR(20), amount DECIMAL(10,2));", "output": "SELECT funding_source, SUM(amount) FROM LiteratureFestival GROUP BY funding_source UNION SELECT funding_source, SUM(amount) FROM FilmFestival GROUP BY funding_source;"}
{"input": " 2022\ub144 \uad6d\ubc29\ud601\uc2e0\uc0ac\uc5c5\uc5d0 \ud3b8\uc131\ub41c \uc608\uc0b0\uc740 \ucd1d \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Military_Innovation (Innovation_ID INT PRIMARY KEY, Year INT, Budget FLOAT);", "output": "SELECT SUM(Budget) FROM Military_Innovation WHERE Year = 2022 AND Innovation_ID IN (SELECT Innovation_ID FROM Innovation_Types WHERE Type = 'Military');"}
{"input": "\uac01 \ub3c4\uc2dc\uc758 \uacf5\uacf5 \uc11c\ube44\uc2a4, \ud559\uad50, \ubcd1\uc6d0 \uc218\ub97c \uc9c0\uc5ed\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE regions (region_id INT, region_name VARCHAR(255)); CREATE TABLE cities (city_id INT, city_name VARCHAR(255), region_id INT); CREATE TABLE public_services (service_id INT, service_name VARCHAR(255), city_id INT); CREATE TABLE schools (school_id INT, school_name VARCHAR(255), city_id INT); CREATE TABLE hospitals (hospital_id INT, hospital_name VARCHAR(255), city_id INT);", "output": "SELECT r.region_name, COUNT(DISTINCT c.city_id) as num_cities, COUNT(DISTINCT ps.service_id) as num_services, COUNT(DISTINCT s.school_id) as num_schools, COUNT(DISTINCT h.hospital_id) as num_hospitals FROM regions r JOIN cities c ON r.region_id = c.region_id LEFT JOIN public_services ps ON c.city_id = ps.city_id LEFT JOIN schools s ON c.city_id = s.city_id LEFT JOIN hospitals h ON c.city_id = h.city_id GROUP BY r.region_name;"}
{"input": " \uc7a0\uc7ac\uc801\uc778 \uc54c\ub808\ub974\uae30 \uc720\ubc1c \ubb3c\uc9c8\uc774 \uc788\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\uc640 \ud574\ub2f9 \uc81c\ud488\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Allergens (ProductID INT, Allergen VARCHAR(100)); INSERT INTO Allergens (ProductID, Allergen) VALUES (1, 'Nuts'); INSERT INTO Allergens (ProductID, Allergen) VALUES (2, 'Gluten');", "output": "SELECT S.SupplierID, S.SupplierName, P.ProductName FROM Suppliers S INNER JOIN Products P ON S.SupplierID = P.SupplierID INNER JOIN Allergens A ON P.ProductID = A.ProductID;"}
{"input": " VR \uac8c\uc784\uc744 \ub9cc\ub4e0 \ubaa8\ub4e0 \ub514\uc790\uc774\ub108\uc640 \ud574\ub2f9 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Designers (DesignerID INT, DesignerName VARCHAR(50), Age INT); CREATE TABLE VR_Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20), DesignerID INT); CREATE TABLE GamePlayer (PlayerID INT, GameID INT); CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10));", "output": "SELECT Designers.DesignerName, AVG(Players.Age) FROM Designers INNER JOIN VR_Games ON Designers.DesignerID = VR_Games.DesignerID INNER JOIN GamePlayer ON VR_Games.GameID = GamePlayer.GameID INNER JOIN Players ON GamePlayer.PlayerID = Players.PlayerID GROUP BY Designers.DesignerName;"}
{"input": " \uae30\ubd80 \ucd1d\uc561\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74, \uc6d0\uc778\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cause (cause_id INT, cause_name VARCHAR(50), donation_amount DECIMAL(10, 2)); INSERT INTO cause (cause_id, cause_name, donation_amount) VALUES (1, 'Education', 25000.00), (2, 'Health', 30000.00), (3, 'Environment', 15000.00);", "output": "SELECT cause_name, SUM(donation_amount) AS total_donation_amount FROM cause GROUP BY cause_name ORDER BY total_donation_amount DESC;"}
{"input": " \uc774\ubc88 \ub2ec\uc5d0 \uc2dc\uac01 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc5d0\uac8c \uc81c\uacf5\ub418\ub294 \uc219\ubc15 \uc2dc\uc124\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accommodations (id INT, student_id INT, type TEXT, cost INT, date DATE);   INSERT INTO accommodations (id, student_id, type, cost, date) VALUES (1, 8, 'screen reader', 300, '2022-06-01');   INSERT INTO accommodations (id, student_id, type, cost, date) VALUES (2, 9, 'braille display', 600, '2022-06-15');", "output": "SELECT SUM(cost) FROM accommodations WHERE type IN ('screen reader', 'braille display', 'large print materials') AND date >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"input": " 5\uac1c \uc774\uc0c1\uc758 \uc6b0\uc8fc\uc120\uc744 \uc81c\uc870\ud55c \ud68c\uc0ac\uc5d0\uc11c \uc81c\uc870\ud55c \uace0\uc720\ud55c \uc6b0\uc8fc\uc120 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Spacecraft_Manufacturers_5 (Company VARCHAR(50), Spacecraft_Name VARCHAR(50), Manufacturing_Date DATE); INSERT INTO Spacecraft_Manufacturers_5 (Company, Spacecraft_Name, Manufacturing_Date) VALUES ('SpaceX', 'Cargo Dragon', '2012-05-25'); INSERT INTO Spacecraft_Manufacturers_5 (Company, Spacecraft_Name, Manufacturing_Date) VALUES ('SpaceX', 'Crew Dragon', '2019-03-02'); INSERT INTO Spacecraft_Manufacturers_5 (Company, Spacecraft_Name, Manufacturing_Date) VALUES ('Boeing', 'Starliner', '2019-08-03');", "output": "SELECT DISTINCT Spacecraft_Name FROM Spacecraft_Manufacturers_5 WHERE Company IN (SELECT Company FROM Spacecraft_Manufacturers_5 GROUP BY Company HAVING COUNT(*) > 5);"}
{"input": " 2021\ub144\uc5d0 \uc720\ub7fd \uc5f0\ud569\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc804\uae30 \uc790\ub3d9\ucc28\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Vehicle_Sales (Sale_ID INT, Vehicle_ID INT, Country VARCHAR(50), Year INT, Quantity INT); INSERT INTO Vehicle_Sales (Sale_ID, Vehicle_ID, Country, Year, Quantity) VALUES (1, 1, 'Germany', 2021, 500), (2, 2, 'France', 2021, 300), (3, 3, 'Italy', 2020, 400), (4, 4, 'Spain', 2021, 600), (5, 5, 'United Kingdom', 2021, 700), (6, 1, 'Germany', 2020, 400);", "output": "SELECT SUM(Quantity) FROM Vehicle_Sales WHERE Year = 2021 AND Vehicle_ID IN (SELECT Vehicle_ID FROM Vehicles WHERE Electric = TRUE) AND Country LIKE '%European Union%';"}
{"input": " \ubbf8\uad6d \ub300\ud559\uc758 \uac01 \ud559\uacfc\uc5d0\uc11c \uc7a5\uc560\uc778 \uc2dc\uc124\uc5d0 \ud560\ub2f9\ub41c \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Departments (DepartmentID INT PRIMARY KEY, DepartmentName VARCHAR(50), BudgetForDisabilityAccommodations DECIMAL(10,2)); CREATE TABLE Universities (UniversityID INT PRIMARY KEY, UniversityName VARCHAR(50), UniversityLocation VARCHAR(50)); CREATE TABLE UniversityDepartments (UniversityDepartmentID INT PRIMARY KEY, UniversityID INT, DepartmentID INT, FOREIGN KEY (UniversityID) REFERENCES Universities(UniversityID), FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID));", "output": "SELECT d.DepartmentName, MAX(ud.BudgetForDisabilityAccommodations) as MaxBudget FROM Departments d JOIN UniversityDepartments ud ON d.DepartmentID = ud.DepartmentID JOIN Universities u ON ud.UniversityID = u.UniversityID WHERE u.UniversityLocation LIKE '%United States%' GROUP BY d.DepartmentName;"}
{"input": " \uc9c0\ub09c \ub2ec '\uae30\uc220'\uacfc '\uacfc\ud559'\uc5d0 \ub300\ud55c \uae30\uc0ac\ub97c \uc77d\uc740 \uad6c\ub3c5\uc790\ub85c\ubd80\ud130 \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscriptions (id INT, user_id INT, start_date DATETIME, end_date DATETIME, price INT); CREATE TABLE users (id INT, name TEXT, is_subscriber BOOLEAN); CREATE TABLE user_activity (user_id INT, article_id INT, start_time DATETIME, end_time DATETIME); CREATE TABLE articles (id INT, title TEXT, category TEXT);", "output": "SELECT SUM(price) FROM subscriptions JOIN users ON subscriptions.user_id = users.id JOIN user_activity ON users.id = user_activity.user_id JOIN articles ON user_activity.article_id = articles.id WHERE articles.category IN ('technology', 'science') AND subscriptions.start_date <= DATE_SUB(NOW(), INTERVAL 1 MONTH) AND subscriptions.end_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH) AND users.is_subscriber = TRUE;"}
{"input": " \ucf69\uacfc \uc625\uc218\uc218\ub97c \ubaa8\ub450 \uc7ac\ubc30\ud558\ub294 \ub18d\ubd80\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Farmers (id INT, name VARCHAR(50), age INT, country VARCHAR(50)); INSERT INTO Farmers (id, name, age, country) VALUES (1, 'Pedro Gonzales', 50, 'Mexico'); CREATE TABLE Crops (id INT, name VARCHAR(50), growth_stage VARCHAR(50), Farm_id INT); INSERT INTO Crops (id, name, growth_stage, Farm_id) VALUES (1, 'Corn', 'Germination', 1), (2, 'Soybeans', 'Vegetative', 1);", "output": "SELECT f.name FROM Farmers f JOIN Crops c1 ON f.id = c1.Farm_id JOIN Crops c2 ON f.id = c2.Farm_id WHERE c1.name = 'Corn' AND c2.name = 'Soybeans';"}
{"input": " 2021\ub144 \uac01 \ub300\ub959\ubcc4 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE if not exists VisitorContinents (Continent VARCHAR(50), Country VARCHAR(50), Visitors INT); INSERT INTO VisitorContinents (Continent, Country, Visitors) VALUES ('North America', 'Canada', 150000), ('Asia', 'Japan', 200000), ('Europe', 'France', 300000), ('Oceania', 'Australia', 250000), ('Africa', 'Egypt', 100000), ('South America', 'Brazil', 120000);", "output": "SELECT a.Continent, SUM(a.Visitors) AS TotalVisitors FROM VisitorContinents a WHERE a.Year = 2021 GROUP BY a.Continent;"}
{"input": " \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub41c \uac01 \uc7ac\ub8cc\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ProductionMaterials (id INT, name TEXT, co2_emissions INT); INSERT INTO ProductionMaterials (id, name, co2_emissions) VALUES (1, 'Organic Cotton', 4), (2, 'Recycled Polyester', 7), (3, 'Hemp', 2), (4, 'Tencel', 3);", "output": "SELECT name, SUM(co2_emissions) FROM ProductionMaterials GROUP BY name;"}
{"input": " \uc720\ub7fd\uc758 \ucc44\uad74 \uc791\uc5c5\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \uc5ed\ud560 \uc218\uc640 \uac1c\uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE european_countries (id INT, name VARCHAR(50)); CREATE TABLE mining_operations (id INT, country_id INT, region VARCHAR(20)); CREATE TABLE employees (id INT, operation_id INT, role VARCHAR(20)); INSERT INTO european_countries (id, name) VALUES (1, 'Germany'), (2, 'France'); INSERT INTO mining_operations (id, country_id, region) VALUES (1, 1, 'Europe'), (2, 2, 'Europe'); INSERT INTO employees (id, operation_id, role) VALUES (1, 1, 'Operator'), (2, 1, 'Engineer'), (3, 2, 'Operator'), (4, 2, 'Supervisor');", "output": "SELECT e.role, COUNT(DISTINCT e.id) as role_count FROM employees e INNER JOIN mining_operations m ON e.operation_id = m.id INNER JOIN european_countries c ON m.country_id = c.id GROUP BY e.role;"}
{"input": "2020\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc6d4\ubcc4\ub85c \uba87 \ub300\uc758 \uc804\uae30 \uc790\ub3d9\ucc28\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ElectricVehicleSales (id INT, sale_date DATE, make VARCHAR(20), model VARCHAR(20), state VARCHAR(20), is_electric BOOLEAN); INSERT INTO ElectricVehicleSales (id, sale_date, make, model, state, is_electric) VALUES (1, '2020-01-01', 'Tesla', 'Model S', 'California', true), (2, '2020-02-01', 'Tesla', 'Model 3', 'California', true), (3, '2020-03-01', 'Volvo', 'XC60', 'California', false);", "output": "SELECT EXTRACT(MONTH FROM sale_date) AS month, COUNT(*) AS num_electric_vehicles_sold  FROM ElectricVehicleSales WHERE state = 'California' AND is_electric = true AND sale_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY month;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \ud558\ub8e8 \ud3c9\uade0 \uac00\uc0c1 \ud22c\uc5b4 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE canadian_tours (tour_id INT, country TEXT, date DATE); INSERT INTO canadian_tours (tour_id, country, date) VALUES (1, 'Canada', '2022-03-01'), (2, 'Canada', '2022-03-05'), (3, 'Canada', '2022-03-09');", "output": "SELECT AVG(total_per_day) FROM (SELECT COUNT(*) AS total_per_day, date FROM canadian_tours GROUP BY date) AS daily_tours;"}
{"input": " \uac01 \uacf5\uae09\uc5c5\uccb4\uac00 \uacf5\uae09\ud558\ub294 \uc720\uae30\ub18d \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicProducts (ProductID INT, ProductName VARCHAR(100), Organic BOOLEAN); INSERT INTO OrganicProducts (ProductID, ProductName, Organic) VALUES (1, 'OrganicProduct1', true); INSERT INTO OrganicProducts (ProductID, ProductName, Organic) VALUES (2, 'ConventionalProduct2', false); CREATE TABLE SupplierProducts (SupplierID INT, ProductID INT, Quantity INT); INSERT INTO SupplierProducts (SupplierID, ProductID, Quantity) VALUES (1, 1, 50); INSERT INTO SupplierProducts (SupplierID, ProductID, Quantity) VALUES (2, 2, 30);", "output": "SELECT S.SupplierID, S.SupplierName, SUM(SP.Quantity) as TotalOrganicQuantity FROM Suppliers S INNER JOIN SupplierProducts SP ON S.SupplierID = SP.SupplierID INNER JOIN OrganicProducts OP ON SP.ProductID = OP.ProductID WHERE OP.Organic = true GROUP BY S.SupplierID;"}
{"input": " 2020\ub144\uc5d0 '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc758 \uc5b4\ub5a4 \ud1a0\ucc29 \uc2dd\ub7c9 \uc2dc\uc2a4\ud15c\uc774 \uc5d0\uc774\ucee4\ub2f9 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub192\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE indigenous_food_systems_yields (name TEXT, state TEXT, year NUMERIC, yield NUMERIC); INSERT INTO indigenous_food_systems_yields (name, state, year, yield) VALUES ('Yurok Tribe', 'CA', 2020, 20000), ('Hoopa Valley Tribe', 'CA', 2020, 18000), ('Karuk Tribe', 'CA', 2020, 22000);", "output": "SELECT name, yield, ROW_NUMBER() OVER (ORDER BY yield DESC) as rank FROM indigenous_food_systems_yields WHERE state = 'CA' AND year = 2020;"}
{"input": " 2021\ub144 \uc0c1\ubc18\uae30 \ubd81\ubbf8 \uad50\uc721 \ubd80\ubb38\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uc0c1\uc704 3\uac00\uc9c0 \uc545\uc131 \ucf54\ub4dc \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE malware_incidents (id INT, sector VARCHAR(255), malware_type VARCHAR(255), incident_count INT, occurrence_date DATE); INSERT INTO malware_incidents (id, sector, malware_type, incident_count, occurrence_date) VALUES (1, 'Education', 'Ransomware', 50, '2021-01-01');", "output": "SELECT malware_type, SUM(incident_count) AS total_incidents FROM malware_incidents WHERE sector = 'Education' AND occurrence_date >= '2021-01-01' AND occurrence_date < '2021-07-01' AND region = 'North America' GROUP BY malware_type ORDER BY total_incidents DESC LIMIT 3;"}
{"input": " 30\uc77c \ub3d9\uc548 \uac01 \uad11\uc0b0\uc758 \uae08 \uc0dd\uc0b0\ub7c9\uc758 \uc774\ub3d9 \ud3c9\uade0\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mine_gold_production (mine_id INT, production_date DATE, gold_production FLOAT); INSERT INTO mine_gold_production (mine_id, production_date, gold_production) VALUES (1, '2021-01-01', 100), (1, '2021-01-02', 110), (1, '2021-01-03', 120), (1, '2021-01-04', 130), (2, '2021-01-01', 140), (2, '2021-01-02', 150), (2, '2021-01-03', 160), (2, '2021-01-04', 170);", "output": "SELECT mine_id, production_date, AVG(gold_production) OVER (PARTITION BY mine_id ORDER BY production_date ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) as moving_avg FROM mine_gold_production;"}
{"input": " \ub9c8\ub4dc\ub9ac\ub4dc\uc5d0\uc11c \ud2b8\ub7a8\uc744 \ud0c0\uba74 \ud558\ub8e8 \uc218\uc775\uc774 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE tram_rides(ride_date DATE, revenue FLOAT); INSERT INTO tram_rides (ride_date, revenue) VALUES ('2022-01-01', 3000), ('2022-01-02', 3200);", "output": "SELECT ride_date, SUM(revenue) AS daily_revenue FROM tram_rides GROUP BY ride_date;"}
{"input": "\ub300\uc911\uad50\ud1b5\uc73c\ub85c \ud3c9\uade0 \uc774\ub3d9 \uac70\ub9ac\uac00 \uac00\uc7a5 \uae34 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE city_transport (city VARCHAR(20), transport_type VARCHAR(20), avg_distance FLOAT); INSERT INTO city_transport (city, transport_type, avg_distance) VALUES ('CityA', 'bus', 12.3), ('CityB', 'tram', 14.5), ('CityC', 'subway', 10.7);", "output": "SELECT city, AVG(avg_distance) as avg_distance FROM city_transport GROUP BY city ORDER BY avg_distance DESC LIMIT 1;"}
{"input": " '\ud544\ub4dc C'\uc5d0 \uae30\ub85d\ub41c \ucd5c\uc800 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sensors (sensor_id INT, location VARCHAR(50)); INSERT INTO sensors (sensor_id, location) VALUES (003, 'Field C'); CREATE TABLE temps (sensor_id INT, temp FLOAT, timestamp TIMESTAMP); INSERT INTO temps (sensor_id, temp, timestamp) VALUES (003, 28.2, '2022-01-01 10:00:00'); INSERT INTO temps (sensor_id, temp, timestamp) VALUES (003, 25.1, '2022-01-02 11:00:00');", "output": "SELECT MIN(temp) FROM temps WHERE sensor_id = 003;"}
{"input": " \uc131\ubcc4\ub85c \ubd84\ub958\ub41c \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, Age INT, Gender VARCHAR(10)); INSERT INTO Volunteers (VolunteerID, Age, Gender) VALUES (1, 25, 'Male'), (2, 30, 'Female'), (3, 35, 'Male');", "output": "SELECT Gender, COUNT(*) as NumVolunteers, AVG(Age) as AvgAge FROM Volunteers GROUP BY Gender;"}
{"input": "MoMA\uc640 \ud14c\uc774\ud2b8 \ubaa8\ub358\uc758 \ubbf8\uc220 \uceec\ub809\uc158\uc5d0 \ud3ec\ud568\ub41c \uc2dc\uac01 \uc608\uc220\uac00\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE art_collection (museum VARCHAR(255), artist VARCHAR(255), art_type VARCHAR(255), year INT, value DECIMAL(10,2)); INSERT INTO art_collection (museum, artist, art_type, year, value) VALUES ('MoMA', 'Andy Warhol', 'Painting', 1962, 200000.00), ('MoMA', 'Jackson Pollock', 'Painting', 1952, 140000.00), ('Tate Modern', 'Pablo Picasso', 'Painting', 1937, 135000.00), ('Tate Modern', 'Frida Kahlo', 'Painting', 1948, 150000.00);", "output": "SELECT SUM(artist_count) FROM (SELECT COUNT(DISTINCT artist) AS artist_count FROM art_collection WHERE museum IN ('MoMA', 'Tate Modern') GROUP BY museum) AS subquery;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc \ub178\ub3d9\uc870\ud569 \ubc94\uc8fc\ubcc4 \ucd1d \uadfc\ub85c\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE unions (id INT, name VARCHAR(255), state VARCHAR(255)); INSERT INTO unions (id, name, state) VALUES (1, 'Teamsters', 'California'); INSERT INTO unions (id, name, state) VALUES (2, 'UFCW', 'California');", "output": "SELECT SUM(workers) FROM (SELECT state, category as unions, COUNT(*) as workers FROM union_data WHERE state = 'California' GROUP BY state, category) as subquery GROUP BY unions;"}
{"input": "\uc911\ud615' \ud06c\uae30 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac01 \uace0\uac1d\uc758 \uc8fc\ubb38 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE orders (customer_id INT, order_date DATE, size VARCHAR(10), quantity INT); INSERT INTO orders (customer_id, order_date, size, quantity) VALUES (1, '2022-01-01', 'large', 100), (2, '2022-01-02', 'large', 200), (3, '2022-01-03', 'medium', 150), (4, '2022-01-04', 'large', 120), (4, '2022-01-05', 'medium', 130); CREATE TABLE customers (customer_id INT, name VARCHAR(20)); INSERT INTO customers (customer_id, name) VALUES (1, 'John'), (2, 'Sarah'), (3, 'Mohammed'), (4, 'Ayanna');", "output": "SELECT c.customer_id, c.name, 100.0 * COUNT(o.order_id) / (SELECT COUNT(*) FROM orders) as pct_orders FROM orders o RIGHT JOIN customers c ON o.customer_id = c.customer_id WHERE size = 'medium' GROUP BY c.customer_id, c.name;"}
{"input": " \uac01 MLB \ud300\uc774 \uc2b9\ub9ac\ud55c \uac8c\uc784\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); CREATE TABLE games (game_id INT, team_id INT, won INT);", "output": "SELECT team_id, AVG(won) * 100.0 / (SELECT COUNT(*) FROM games WHERE team_id = teams.team_id) AS win_percentage FROM games JOIN teams ON games.team_id = teams.team_id GROUP BY team_id;"}
{"input": " '\uce90\ub9ac\ube44\uc548' \ud568\ub300\uc758 \uac01 \uc120\ubc15\uc774 \ucc98\ub9ac\ud558\ub294 \uace0\uc720\ud55c \ud654\ubb3c \uc720\ud615\uc758 \uc218\ub97c \uacb0\uc815\ud558\uace0 \uacb0\uacfc\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vessels (vessel_id INT, fleet VARCHAR(50)); CREATE TABLE cargo (cargo_id INT, vessel_id INT, cargo_type VARCHAR(50), handling_date DATE);", "output": "SELECT v.vessel_name, COUNT(DISTINCT cargo_type) AS unique_cargo_types, RANK() OVER (ORDER BY COUNT(DISTINCT cargo_type) DESC) AS cargo_rank FROM cargo c JOIN vessels v ON c.vessel_id = v.vessel_id WHERE v.fleet = 'Caribbean' GROUP BY v.vessel_name ORDER BY cargo_rank;"}
{"input": " \ub9c8\uc774\uc560\ubbf8 \uc2dc\uc5d0\ub294 \uc9c0\uc18d\uac00\ub2a5\uc131 \ub4f1\uae09\uc774 3\uc810 \uc774\uc0c1\uc778 \ubd80\ub3d9\uc0b0\uc774 \uba87 \uad70\ub370 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE properties (id INT, city VARCHAR(255), sustainability_rating INT); INSERT INTO properties (id, city, sustainability_rating) VALUES (1, 'Miami', 3), (2, 'Miami', 4), (3, 'Miami', 5), (4, 'Orlando', 2);", "output": "SELECT COUNT(*) FROM properties WHERE city = 'Miami' AND sustainability_rating >= 3;"}
{"input": " 2018\ub144\uacfc 2019\ub144\uc5d0 \uac00\uc7a5 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11\uc0c1\uc744 \ubc1b\uc740 \ubaa9\uc801\uc9c0\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE destinations (name VARCHAR(50), year INT, awards INT);CREATE TABLE sustainable_tourism_awards (destination_name VARCHAR(50), year INT, category VARCHAR(50));", "output": "SELECT name FROM destinations WHERE awards IN (SELECT MAX(awards) FROM destinations WHERE year IN (2018, 2019)) AND year IN (2018, 2019) UNION SELECT destination_name FROM sustainable_tourism_awards WHERE category = 'Sustainable Tourism' AND year IN (2018, 2019) GROUP BY destination_name HAVING COUNT(*) > 1;"}
{"input": " 2010\ub144\ubd80\ud130 2015\ub144\uae4c\uc9c0 \uac01 \uc544\uc2dc\uc544 \uad6d\uac00\uc5d0 \ubd80\uc5ec\ub41c \uae30\ud6c4 \uad00\ub828 \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \ucd1d \uc608\uc0b0\uc744 \ubcf4\uc5ec\uc8fc\uc138\uc694.", "context": "CREATE TABLE projects (country VARCHAR(50), year INT, budget INT, project_type VARCHAR(20)); INSERT INTO projects (country, year, budget, project_type) VALUES ('China', 2010, 100000, 'climate'), ('China', 2011, 110000, 'climate'), ('India', 2010, 80000, 'climate'), ('India', 2011, 85000, 'climate');", "output": "SELECT country, COUNT(budget) as num_projects, SUM(budget) as total_budget FROM projects WHERE country IN ('China', 'India') AND project_type = 'climate' AND year BETWEEN 2010 AND 2015 GROUP BY country;"}
{"input": " \ubaa8\ub4e0 \uc81c\ud488\uacfc \uacf5\uae09\uc5c5\uccb4 \ub098\uc5f4", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(50));CREATE TABLE supplier_products (supplier_id INT, product_id INT);CREATE TABLE suppliers (supplier_id INT, supplier_name VARCHAR(50));", "output": "SELECT products.product_name, suppliers.supplier_name FROM products JOIN supplier_products ON products.product_id = supplier_products.product_id JOIN suppliers ON supplier_products.supplier_id = suppliers.supplier_id;"}
{"input": " \ub300\ub959\ubcc4 \ucc44\uad74 \uc791\uc5c5\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MiningOperations (id INT, name VARCHAR(255), type VARCHAR(255), co2_emissions INT, region VARCHAR(255)); INSERT INTO MiningOperations (id, name, type, co2_emissions, region) VALUES (1, 'Open Pit Mining', 'Surface', 500, 'Africa'), (2, 'Underground Mining', 'Surface', 300, 'South America'), (3, 'Mountaintop Removal Mining', 'Surface', 700, 'North America'), (4, 'Placer Mining', 'Surface', 200, 'South America'), (5, 'Hard Rock Mining', 'Underground', 800, 'Europe');", "output": "SELECT region, AVG(co2_emissions) as avg_emissions FROM MiningOperations GROUP BY region;"}
{"input": " \uce90\ub098\ub2e4\uc758 \ud3c9\uade0 \uc218\uc775\ubcf4\ub2e4 \uc218\uc775\uc774 \ub354 \ub192\uc740 \ubaa8\ub4e0 \ucf58\uc11c\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Concerts (id INT, country VARCHAR(50), revenue FLOAT);", "output": "SELECT * FROM Concerts WHERE revenue > (SELECT AVG(revenue) FROM Concerts WHERE country = 'Canada');"}
{"input": " \ubbf8\uc8fc \uc9c0\uc5ed\uc5d0\uc11c \uc0dd\uc0b0\ub41c \uc81c\ud488\uc758 \ud3c9\uade0 \ud22c\uba85\uc131 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, transparency_score DECIMAL(3,2), product_origin VARCHAR(50)); INSERT INTO products (product_id, transparency_score, product_origin) VALUES (1, 8.5, 'Asia'), (2, 9.2, 'Europe'), (3, 7.8, 'Americas'), (4, 6.9, 'Asia'), (5, 9.1, 'Europe');", "output": "SELECT AVG(transparency_score) AS avg_score FROM products WHERE product_origin = 'Americas';"}
{"input": " '\uc5b8\ub860\uc724\ub9ac'\uc640 '\ud0d0\uc0ac\uc800\ub110\ub9ac\uc998'\uc5d0 \ub300\ud55c \ucd1d \uae30\uc0ac \uc218\ub294 \uba87 \ud3b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(50), category VARCHAR(20)); INSERT INTO articles (id, title, category) VALUES (1, 'Article One', 'media ethics'), (2, 'Article Two', 'investigative journalism');", "output": "SELECT SUM(total) FROM (SELECT COUNT(*) AS total FROM articles WHERE category = 'media ethics' UNION SELECT COUNT(*) FROM articles WHERE category = 'investigative journalism') AS subquery;"}
{"input": " \ud654\ud559\ubb3c\uc9c8 \ub18d\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uc81c\ud488\uc758 \uc0dd\uc0b0\uc77c\uc790\uc640 \uc81c\ud488\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Production (Product VARCHAR(255), Production_Date DATE, Chemical_Concentration DECIMAL(5,2)); INSERT INTO Production (Product, Production_Date, Chemical_Concentration) VALUES ('Product1', '2022-01-01', 0.12), ('Product2', '2022-01-02', 0.15), ('Product3', '2022-01-03', 0.20);", "output": "SELECT Product, Production_Date, Chemical_Concentration FROM (SELECT Product, Production_Date, Chemical_Concentration, ROW_NUMBER() OVER (ORDER BY Chemical_ConcentrATION DESC) AS Rank FROM Production) AS Subquery WHERE Rank <= 5;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\uc11c \ud574\uacb0\ub418\uc9c0 \uc54a\uc740 \ubcf4\uc548 \uc0ac\uace0\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE security_incidents (id INT, region VARCHAR(50), resolved BOOLEAN);", "output": "SELECT COUNT(*) FROM security_incidents WHERE region = 'Africa' AND resolved = FALSE;"}
{"input": " 2022\ub144 '\uac74\uc124' \uc5c5\uacc4\uc5d0\uc11c \uc6d4\ubcc4\ub85c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc791\uc5c5\uc7a5 \uc548\uc804\uc0ac\uace0\uac00 \ubcf4\uace0\ub410\ub098\uc694?", "context": "CREATE TABLE safety_incidents (incident_id INT, industry TEXT, incident_date DATE); INSERT INTO safety_incidents (incident_id, industry, incident_date) VALUES (1, 'construction', '2022-01-05'), (2, 'construction', '2022-02-12'), (3, 'retail', '2022-03-20');", "output": "SELECT industry, MONTH(incident_date) AS month, COUNT(*) OVER (PARTITION BY industry, MONTH(incident_date)) FROM safety_incidents WHERE industry = 'construction' AND YEAR(incident_date) = 2022;"}
{"input": " \uc7ac\uc0dd \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Renewable_Energy_Projects (project_id INT, location VARCHAR(50), energy_efficiency_rating INT); INSERT INTO Renewable_Energy_Projects (project_id, location, energy_efficiency_rating) VALUES (1, 'Germany', 90), (2, 'Spain', 88), (3, 'Denmark', 85), (4, 'China', 82), (5, 'United States', 80), (6, 'India', 78);", "output": "SELECT location, energy_efficiency_rating, RANK() OVER (ORDER BY energy_efficiency_rating DESC) as country_rank FROM Renewable_Energy_Projects WHERE location IN ('Germany', 'Spain', 'Denmark', 'China', 'United States', 'India') GROUP BY location, energy_efficiency_rating HAVING country_rank <= 5;"}
{"input": " \uac01 \uc7a5\ub974\uc758 \ub178\ub798\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE genres (genre_id INT, genre VARCHAR(255)); CREATE TABLE songs (song_id INT, title VARCHAR(255), genre_id INT, release_date DATE); CREATE TABLE users (user_id INT, user_country VARCHAR(255)); CREATE TABLE streams (stream_id INT, song_id INT, user_id INT, stream_date DATE);", "output": "SELECT g.genre, COUNT(DISTINCT st.user_id) as unique_users FROM genres g JOIN songs s ON g.genre_id = s.genre_id JOIN streams st ON s.song_id = st.song_id GROUP BY g.genre;"}
{"input": " \uc778\ub3c4 \ucd5c\ucd08\uc758 \uc5ec\uc131 \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc600\ub098\uc694?", "context": "CREATE TABLE astronauts (id INT, name VARCHAR(255), country VARCHAR(255), first_flight DATE); INSERT INTO astronauts (id, name, country, first_flight) VALUES (1, 'Kalpana Chawla', 'India', '1997-11-19');", "output": "SELECT name FROM astronauts WHERE country = 'India' AND id = (SELECT MIN(id) FROM astronauts WHERE country = 'India' AND gender = 'Female');"}
{"input": " \ud55c \ubc88\ub3c4 \ubcf4\ud5d8\uae08\uc744 \uccad\uad6c\ud55c \uc801\uc774 \uc5c6\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \uc774\ub984\uacfc \ubcf4\ud5d8 \uacc4\uc57d \ubc88\ud638\ub294 \ubb34\uc5c7\uc774\uba70, \ud574\ub2f9 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (PolicyNumber VARCHAR(20), PolicyholderName VARCHAR(50)); INSERT INTO Policyholders (PolicyNumber, PolicyholderName) VALUES ('P001', 'John Doe'); CREATE TABLE Claims (ClaimID INT, PolicyNumber VARCHAR(20), ClaimAmount INT); INSERT INTO Claims (ClaimID, PolicyNumber, ClaimAmount) VALUES (1, 'P002', 2000);", "output": "SELECT p.PolicyholderName, p.PolicyNumber FROM Policyholders p LEFT JOIN Claims c ON p.PolicyNumber = c.PolicyNumber WHERE c.ClaimID IS NULL; SELECT COUNT(*) FROM (SELECT p.PolicyholderName, p.PolicyNumber FROM Policyholders p LEFT JOIN Claims c ON p.PolicyNumber = c.PolicyNumber WHERE c.ClaimID IS NULL) AS t;"}
{"input": " \ub2e8\uc77c \uad11\uace0\uc758 \ud558\ub8e8 \ucd5c\ub300 \uad11\uace0 \ub178\ucd9c \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ad_impressions (id INT, ad_id INT, impressions INT, impression_date DATE); INSERT INTO ad_impressions (id, ad_id, impressions, impression_date) VALUES (1, 1, 500, '2022-01-01'), (2, 1, 600, '2022-01-02'), (3, 2, 400, '2022-01-01'), (4, 3, 700, '2022-01-01');", "output": "SELECT ad_id, MAX(impressions) FROM ad_impressions GROUP BY ad_id;"}
{"input": " \ube44\uac74 \ud488\ubaa9\uc758 \ubaa8\ub4e0 \uce74\ud14c\uace0\ub9ac \ud45c\uc2dc", "context": "CREATE TABLE items (id INT, name VARCHAR(50), is_vegan BOOLEAN, category VARCHAR(50)); INSERT INTO items (id, name, is_vegan, category) VALUES (1, 'Tofu', TRUE, 'Proteins'), (2, 'Almond Milk', TRUE, 'Dairy'), (3, 'Chips', FALSE, 'Snacks');", "output": "SELECT DISTINCT category FROM items WHERE is_vegan = TRUE;"}
{"input": " \ucd1d \uc6b4\ub3d9 \ud69f\uc218\uc640 \uc694\uac00 \uc218\uc5c5\uc5d0 \ucc38\uc5ec\ud55c \uace0\uc720 \ud68c\uc6d0 \uc218\ub97c \uc6d4\ubcc4, \uc5f0\ub3c4\ubcc4\ub85c \ubd84\ub958\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workouts (id INT, member_id INT, workout_type VARCHAR(20), workout_date DATE);", "output": "SELECT YEAR(workout_date) as year, MONTH(workout_date) as month, COUNT(DISTINCT member_id) as total_members, COUNT(*) as total_workouts FROM workouts WHERE workout_type = 'yoga' GROUP BY year, month;"}
{"input": " \uce90\ub098\ub2e4 \uc2dc\uc7a5\uc758 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488 \uc911 \ube44\uac74 \uc81c\ud488\uc740 \uba87 \ud37c\uc13c\ud2b8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE SkincareProducts(productID INT, productName VARCHAR(50), isVegan BOOLEAN, country VARCHAR(50)); INSERT INTO SkincareProducts(productID, productName, isVegan, country) VALUES (1, 'Green Tea Moisturizer', FALSE, 'US'), (2, 'Aloe Vera Cleanser', TRUE, 'Canada'), (3, 'Lavender Toner', FALSE, 'Canada');", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM SkincareProducts WHERE country = 'Canada')) FROM SkincareProducts WHERE country = 'Canada' AND isVegan = TRUE;"}
{"input": " \"AmericasReserve\"\uc758 \uc7ac\uaddc\uc5b4 \ubcf4\uc874\uc744 \uc704\ud55c \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (donor_id INT, reserve VARCHAR(50), amount DECIMAL(10, 2), purpose VARCHAR(50)); INSERT INTO Donations (donor_id, reserve, amount, purpose) VALUES (1, 'AsianReserve', 500.00, 'TigerConservation'), (2, 'AfricanReserve', 300.00, 'LionConservation'), (3, 'AmericasReserve', 200.00, 'JaguarConservation'), (4, 'AmericasReserve', 250.00, 'JaguarConservation'), (5, 'AsianReserve', 700.00, 'TigerConservation');", "output": "SELECT AVG(amount) FROM Donations WHERE reserve = 'AmericasReserve' AND purpose = 'JaguarConservation';"}
{"input": " '2022\ub144 1\ubd84\uae30' 'oil_well_A' \uc0dd\uc0b0\ub7c9\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE oil_well_A (date DATE, production_oil INT, production_gas INT); INSERT INTO oil_well_A (date, production_oil, production_gas) VALUES ('2022-01-01', 1500, 5000), ('2022-01-02', 1600, 5200), ('2022-01-03', 1450, 4800);", "output": "SELECT SUM(production_oil) as total_oil_production, SUM(production_gas) as total_gas_production FROM oil_well_A WHERE date BETWEEN '2022-01-01' AND '2022-03-31' AND date >= (SELECT MAX(date) - INTERVAL '3 month' FROM oil_well_A);"}
{"input": "\ucd1d \ubaa9\uc7ac\ub7c9\uacfc \ud568\uaed8 \uac01 \uc0b0\ub9bc \uc720\ud615\uc758 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\uc728\uc744 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\uc728\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE forest_type (forest_type_id INT, forest_type_name TEXT, PRIMARY KEY (forest_type_id)); CREATE TABLE timber (timber_id INT, forest_type_id INT, year INT, volume INT, PRIMARY KEY (timber_id), FOREIGN KEY (forest_type_id) REFERENCES forest_type(forest_type_id)); CREATE TABLE carbon_sequestration (carbon_sequestration_id INT, forest_type_id INT, rate REAL, PRIMARY KEY (carbon_sequestration_id), FOREIGN KEY (forest_type_id) REFERENCES forest_type(forest_type_id));", "output": "SELECT ft.forest_type_name, AVG(cs.rate) AS avg_carbon_sequestration_rate, SUM(t.volume) AS total_timber_volume FROM forest_type ft INNER JOIN timber t ON ft.forest_type_id = t.forest_type_id INNER JOIN carbon_sequestration cs ON ft.forest_type_id = cs.forest_type_id GROUP BY ft.forest_type_name ORDER BY avg_carbon_sequestration_rate DESC;"}
{"input": " \ub3d9\ub0a8\uc544\uc2dc\uc544\uc5d0 \uc704\uce58\ud55c \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uac00\uc7a5 \uc601\ud5a5\ub825\uc774 \ub192\uc740 \uc0ac\ud68c \ubb38\uc81c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE social_issues (id INT PRIMARY KEY, name VARCHAR(255), impact_score INT);CREATE TABLE projects (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), budget DECIMAL(10,2));CREATE TABLE project_issues (project_id INT, issue_id INT, PRIMARY KEY (project_id, issue_id));CREATE VIEW high_impact_issues AS SELECT * FROM social_issues WHERE impact_score >= 75;", "output": "SELECT p.name, p.location, si.name as issue, si.impact_score FROM projects p JOIN project_issues pi ON p.id = pi.project_id JOIN social_issues si ON pi.issue_id = si.id WHERE p.location = 'Southeast Asia' AND si.impact_score IN (SELECT impact_score FROM high_impact_issues);"}
{"input": " \uc720\uae30\ub18d \ub18d\uc7a5 \uc218\ub97c \uae30\uc900\uc73c\ub85c \uad6d\uac00\uc758 \uc21c\uc704\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Farm (FarmID int, FarmType varchar(20), Country varchar(50)); INSERT INTO Farm (FarmID, FarmType, Country) VALUES (1, 'Organic', 'USA'), (2, 'Conventional', 'Canada'), (3, 'Urban', 'Mexico'), (4, 'Organic', 'USA'), (5, 'Organic', 'Mexico'), (6, 'Biodynamic', 'France');", "output": "SELECT Country, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) as Rank FROM Farm WHERE FarmType = 'Organic' GROUP BY Country;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uacbd\ucc30\uad00\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc774\uba70, \uac01 \ub3c4\uc2dc\uc758 \uacbd\ucc30\uad00 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Cities (CityName TEXT, CityID INTEGER); CREATE TABLE PoliceStations (StationID INTEGER, StationCityID INTEGER); CREATE TABLE PoliceOfficers (OfficerID INTEGER, OfficerStationID INTEGER, OfficerSalary INTEGER);", "output": "SELECT C.CityName, COUNT(PO.OfficerID) FROM Cities C INNER JOIN PoliceStations PS ON C.CityID = PS.StationCityID INNER JOIN PoliceOfficers PO ON PS.StationID = PO.OfficerStationID WHERE C.State = 'Texas' GROUP BY C.CityName ORDER BY COUNT(PO.OfficerID) DESC LIMIT 5;"}
{"input": " \uc544\uba54\ub9ac\uce74 \ub300\ub959 \uac01 \uad6d\uac00\uc758 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE climate_adaptation (project_name TEXT, country TEXT);INSERT INTO climate_adaptation (project_name, country) VALUES ('Coastal Protection', 'USA'), ('Water Management', 'Mexico'), ('Disaster Preparedness', 'Canada');", "output": "SELECT country, COUNT(project_name) as num_projects FROM climate_adaptation WHERE country IN ('USA', 'Canada', 'Mexico') GROUP BY country;"}
{"input": " \ud310\ub9e4 \ub0a0\uc9dc\uc640 \ud568\uaed8 \ucd5c\uace0 \ubc0f \ucd5c\uc800 \ud310\ub9e4 \uac00\uaca9\uc774 \ud3ec\ud568\ub41c \uad70\uc6a9 \uc7a5\ube44\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE SCHEMA IF NOT EXISTS military_equipment;CREATE TABLE IF NOT EXISTS military_equipment (equipment_id INT, equipment_name VARCHAR(255), sale_price DECIMAL(10, 2), sale_date DATE);INSERT INTO military_equipment (equipment_id, equipment_name, sale_price, sale_date) VALUES (1, 'Tank_A', 1500000, '2021-01-01'), (2, 'Helicopter_B', 8000000, '2021-02-01'), (3, 'Aircraft_C', 2000000, '2021-03-01');", "output": "SELECT equipment_name, sale_price, sale_date, ROW_NUMBER() OVER (ORDER BY sale_price DESC) AS equipment_rank FROM military_equipment WHERE equipment_rank IN (1, 3);"}
{"input": " \uc791\ub144\uc5d0 \uc7ac\ubb34 \ub2a5\ub825 \uc810\uc218\uac00 \ud5a5\uc0c1\ub41c \uace0\uac1d\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE capability_scores (customer_id INT, score INT, score_date DATE);", "output": "SELECT customer_id FROM (SELECT customer_id, score, score_date, LAG(score, 12) OVER (PARTITION BY customer_id ORDER BY score_date) AS prev_score FROM capability_scores) WHERE score > prev_score;"}
{"input": " \uc601\uad6d\uc758 \uc720\uc0c9 \uc778\uc885\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5 \uc911 \ud558\ub098 \uc774\uc0c1\uc5d0 \ud22c\uc790\ud55c \uace0\uc720 \ud22c\uc790\uc790\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE investors(id INT, name TEXT, country TEXT); CREATE TABLE startups(id INT, name TEXT, founder TEXT, country TEXT); CREATE TABLE investments(investor_id INT, startup_id INT); INSERT INTO investors(id, name, country) VALUES (1, 'Firm A', 'US'), (2, 'Firm B', 'UK'), (3, 'Firm C', 'India'); INSERT INTO startups(id, name, founder, country) VALUES (1, 'Acme Inc', 'John Doe', 'US'), (2, 'Beta Corp', 'Rajesh Patel', 'UK'), (3, 'Gamma Startup', 'Pedro Sanchez', 'Spain'); INSERT INTO investments(investor_id, startup_id) VALUES (1, 1), (2, 1), (3, 2);", "output": "SELECT DISTINCT investors.name FROM investors JOIN investments ON investors.id = investments.investor_id JOIN startups ON investments.startup_id = startups.id WHERE startups.founder IN ('Rajesh Patel') AND investors.country = 'UK';"}
{"input": " \ud504\ub791\uc2a4 \uae30\uc5c5\uacfc\uc758 \uacc4\uc57d \ud611\uc0c1\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contract_negotiations (id INT, contractor_id INT, negotiation_date DATE, amount DECIMAL(10,2)); INSERT INTO contract_negotiations (id, contractor_id, negotiation_date, amount) VALUES (2, 2, '2021-07-16', 2000000.00);", "output": "SELECT * FROM contract_negotiations WHERE contractor_id IN (SELECT id FROM contractors WHERE country = 'France');"}
{"input": " \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uad11\uc0b0\uc5d0\ub294 \uac01 \uc790\uc6d0 \uc720\ud615\ubcc4\ub85c \uba87 \ub2e8\uc704\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Resources (ResourceID INT, MineSite VARCHAR(50), ResourceType VARCHAR(50), Quantity INT, Units VARCHAR(50), WasteGeneration INT); INSERT INTO Resources (ResourceID, MineSite, ResourceType, Quantity, Units, WasteGeneration) VALUES (1, 'Site A', 'Gold', 1000, 'ounces', 5000), (2, 'Site B', 'Silver', 2000, 'ounces', 3000);", "output": "SELECT ResourceType, Quantity, Units FROM Resources WHERE WasteGeneration = (SELECT MAX(WasteGeneration) FROM Resources);"}
{"input": " \uc791\ub144\uc5d0 3\ud68c \uc774\uc0c1\uc758 \ud589\uc0ac\uc5d0 \ucc38\uc11d\ud55c \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "ALTER TABLE Visitors ADD COLUMN last_event_date DATE, event_count INT;", "output": "SELECT COUNT(*) FROM Visitors WHERE last_event_date >= DATEADD(year, -1, CURRENT_DATE) GROUP BY Visitors.id HAVING COUNT(*) > 3;"}
{"input": " \uc778\ub354\uc2a4\ud2b8\ub9ac 4.0 \uae30\uc220\uc744 \uad6c\ud604\ud55c \uacf5\uc7a5\uacfc \uad6c\ud604\ud55c \uc778\ub354\uc2a4\ud2b8\ub9ac 4.0 \uae30\uc220\uc758 \uc218.", "context": "CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, industry_4_0 TEXT, num_technologies INT);", "output": "SELECT factory_id, name, COUNT(industry_4_0) as num_technologies FROM factories WHERE industry_4_0 IS NOT NULL GROUP BY factory_id;"}
{"input": " LNG \uc5d4\uc9c4\uc744 \uc7a5\ucc29\ud558\uace0 \uc778\ub3c4 \ud56d\uad6c\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15\uc774 \ucc98\ub9ac\ud55c \ucd1d \ud654\ubb3c \uc911\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Vessels (VesselID INT, VesselName TEXT, FuelType TEXT, EngineStatus TEXT); CREATE TABLE Ports (PortID INT, PortName TEXT, Country TEXT); CREATE TABLE Cargo (VesselID INT, PortID INT, ArrivalDate DATE, CargoWeight INT); INSERT INTO Ports (PortID, PortName, Country) VALUES (1, 'Mumbai', 'India'), (2, 'Chennai', 'India'), (3, 'Kolkata', 'India'); INSERT INTO Vessels (VesselID, VesselName, FuelType, EngineStatus) VALUES (1, 'Sea Tiger', 'LNG', 'Operational'), (2, 'Ocean Wave', 'Diesel', 'Operational'), (3, 'River Queen', 'LNG', 'Operational'), (4, 'Harbor Breeze', 'Diesel', 'Operational'); INSERT INTO Cargo (VesselID, PortID, ArrivalDate, CargoWeight) VALUES (1, 1, '2022-06-01', 5000), (1, 2, '2022-06-15', 7000), (2, 1, '2022-06-20', 6000), (3, 2, '2022-06-25', 8000), (4, 3, '2022-06-30', 9000);", "output": "SELECT SUM(CargoWeight) FROM Cargo INNER JOIN Vessels ON Cargo.VesselID = Vessels.VesselID INNER JOIN Ports ON Cargo.PortID = Ports.PortID WHERE FuelType = 'LNG' AND Country = 'India';"}
{"input": " \uc21c\ud658 \uacbd\uc81c\uc5d0\uc11c \uc724\ub9ac\uc801 \ud328\uc158 \ube0c\ub79c\ub4dc\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Brands (brand_id INT, brand_name VARCHAR(50), ethical BOOLEAN); CREATE TABLE Sales (sale_id INT, brand_id INT, revenue DECIMAL(10,2)); CREATE TABLE CircularEconomy (brand_id INT, circular_economy BOOLEAN);", "output": "SELECT B.brand_name, SUM(S.revenue) FROM Brands B INNER JOIN Sales S ON B.brand_id = S.brand_id INNER JOIN CircularEconomy CE ON B.brand_id = CE.brand_id WHERE B.ethical = TRUE AND CE.circular_economy = TRUE GROUP BY B.brand_name;"}
{"input": " 2021\ub144 \uc2dc\uce74\uace0 \uc2dc\uc758 \uc8fc\uac70\uc6a9 \uac74\ubb3c\uc5d0 \ub300\ud574 \ubc1c\uae09\ub41c \ud5c8\uac00 \uac74\uc218\ub294 \ucd1d \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE building_permits (permit_id INT, building_type VARCHAR(50), city VARCHAR(50), issue_date DATE); INSERT INTO building_permits (permit_id, building_type, city, issue_date) VALUES (13, 'Residential', 'Chicago', '2021-01-01'); INSERT INTO building_permits (permit_id, building_type, city, issue_date) VALUES (14, 'Residential', 'Chicago', '2021-02-01');", "output": "SELECT COUNT(*) FROM building_permits WHERE building_type = 'Residential' AND city = 'Chicago' AND YEAR(issue_date) = 2021;"}
{"input": " \uae30\ubd80\uc790\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT, DonationAmount DECIMAL(10,2)); INSERT INTO Donors (DonorID, DonorName, DonationAmount) VALUES (1, 'John Doe', 500.00), (2, 'Jane Smith', 350.00), (3, 'Alice Johnson', 700.00);", "output": "SELECT DonorName, SUM(DonationAmount) OVER (PARTITION BY DonorName ORDER BY DonorName) AS TotalDonation FROM Donors ORDER BY TotalDonation DESC;"}
{"input": " 'disaster_response' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ucd1d \uae30\ubd80\uae08\uc774 \uac00\uc7a5 \ub192\uc740 \ubd80\ubb38\uacfc \uac00\uc7a5 \ub0ae\uc740 \ubd80\ubb38\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE disaster_response.sectors_donations (sector_id INT, sector_name VARCHAR(255), total_donations DECIMAL); INSERT INTO disaster_response.sectors_donations (sector_id, sector_name, total_donations) VALUES (1, 'Education', 15000.00), (2, 'Health', 20000.00), (3, 'Water', 10000.00), (4, 'Shelter', 12000.00);", "output": "SELECT sector_name, total_donations FROM (SELECT sector_name, total_donations, DENSE_RANK() OVER (ORDER BY total_donations DESC) as donation_rank FROM disaster_response.sectors_donations) ranked_donations WHERE donation_rank = 1 OR donation_rank = 4;"}
{"input": "\uad6d\uac00\ubcc4 \ud3c9\uade0 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cybersecurity_incidents (country TEXT, year INT, num_incidents INT); INSERT INTO cybersecurity_incidents (country, year, num_incidents) VALUES ('USA', 2019, 50000), ('UK', 2019, 7000), ('China', 2019, 12000), ('USA', 2020, 55000), ('UK', 2020, 8000), ('China', 2020, 15000);", "output": "SELECT AVG(num_incidents) as avg_incidents_per_country FROM cybersecurity_incidents;"}
{"input": " \uc9c0\ub09c \ub2ec \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \uc0c1\uc704 5\uac1c \uc81c\ud488 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE sales (sale_id INT, product_name VARCHAR(255), sale_date DATE, revenue DECIMAL(10, 2)); INSERT INTO sales VALUES (1, 'ProductA', '2022-01-01', 100), (2, 'ProductB', '2022-01-03', 150), (3, 'ProductC', '2022-01-02', 200);", "output": "SELECT product_name, SUM(revenue) OVER (PARTITION BY product_name ORDER BY sale_date DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as total_revenue FROM sales WHERE sale_date >= DATEADD(day, -30, CURRENT_DATE) GROUP BY product_name ORDER BY total_revenue DESC LIMIT 5;"}
{"input": " 2022\ub144 \ub300\uc11c\uc591\uc5d0\uc11c \ud654\ubb3c \ucde8\uae09 \uc9c0\uc5f0\uc758 \ucd1d \ud69f\uc218\uc640 \uc120\ubc15 \uc720\ud615\ubcc4 \ud3c9\uade0 \uc9c0\uc5f0 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE VesselTypes (vessel_type_id INT, vessel_type VARCHAR(50));", "output": "SELECT vt.vessel_type, COUNT(ch.cargo_handling_id) as total_delays, AVG(ch.delay_duration) as avg_delay_duration  FROM CargoHandling ch JOIN Vessels v ON ch.port_id = v.port_id JOIN VesselTypes vt ON v.vessel_type = vt.vessel_type WHERE v.region = 'Atlantic Ocean' AND ch.handling_date >= '2022-01-01' GROUP BY vt.vessel_type_id;"}
{"input": " '\ubb44\ubc14\uc774' \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc77c\uc77c \ucd1d \ub9e4\ucd9c \ud45c\uc2dc", "context": "CREATE TABLE city (id INT, name VARCHAR(255)); INSERT INTO city (id, name) VALUES (1, 'Mumbai'); CREATE TABLE restaurant (id INT, name VARCHAR(255), city_id INT); INSERT INTO restaurant (id, name, city_id) VALUES (1, 'Spice Kitchen', 1), (2, 'Pizza Palace', 1), (3, 'Sushi House', 1); CREATE TABLE menu (id INT, item VARCHAR(255), price DECIMAL(5,2), daily_sales INT, restaurant_id INT);", "output": "SELECT r.name, SUM(m.daily_sales) as total_sales FROM menu m JOIN restaurant r ON m.restaurant_id = r.id JOIN city c ON r.city_id = c.id WHERE c.name = 'Mumbai' GROUP BY r.name;"}
{"input": " '\ub18d\ucd0c\ucd0c' \ubc1c\uad74\ud604\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc720\ubb3c \uc720\ud615\uc774 \ubc1c\uacac\ub410\ub098\uc694?", "context": "CREATE TABLE ExcavationSites (id INT, name VARCHAR(255)); INSERT INTO ExcavationSites (id, name) VALUES (1, 'Rural Settlement'); CREATE TABLE ArtifactTypes (id INT, name VARCHAR(255), category VARCHAR(255)); INSERT INTO ArtifactTypes (id, name, category) VALUES (1, 'Pottery', 'Artifact'), (2, 'Stone Tools', 'Artifact'), (3, 'Ceramics', 'Artifact'); CREATE TABLE Artifacts (id INT, excavationSiteId INT, artifactTypeId INT); INSERT INTO Artifacts (id, excavationSiteId, artifactTypeId) VALUES (1, 1, 1), (2, 1, 2), (3, 1, 3);", "output": "SELECT ArtifactTypes.name FROM ArtifactTypes JOIN Artifacts ON ArtifactTypes.id = Artifacts.artifactTypeId WHERE Artifacts.excavationSiteId = (SELECT id FROM ExcavationSites WHERE name = 'Rural Settlement');"}
{"input": "\ubd81\uadf9 \uc9c0\uc5ed\uc5d0 \uc788\ub294 \ud574\uc591 \uc0dd\ubb3c \uc5f0\uad6c \uae30\uc9c0\uc758 \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_life (id INT, name TEXT, region TEXT, depth FLOAT); INSERT INTO marine_life (id, name, region, depth) VALUES (1, 'Station A', 'Arctic', 1500.2); INSERT INTO marine_life (id, name, region, depth) VALUES (2, 'Station B', 'Antarctic', 4000.0);", "output": "SELECT MAX(depth) FROM marine_life WHERE region = 'Arctic';"}
{"input": " \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \ud5c8\uac00 2022-005 \uc0ad\uc81c", "context": "CREATE TABLE building_permits (permit_number TEXT, contractor TEXT); INSERT INTO building_permits (permit_number, contractor) VALUES ('2022-005', 'Contractor C');", "output": "WITH cte AS (DELETE FROM building_permits WHERE permit_number = '2022-005') SELECT * FROM cte;"}
{"input": " 2021\ud559\ub144\ub3c4 \uac00\uc744\ud559\uae30 \uc608\uccb4\ub2a5\uacc4\uc5f4\uacfc \uccb4\uc721\uacc4\uc5f4\uc5d0\uc11c \ud3b8\uc758\ub97c \uc81c\uacf5\ubc1b\uc740 \ucd1d \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE arts_accommodations (student_id INT, semester VARCHAR(10));CREATE TABLE pe_accommodations (student_id INT, semester VARCHAR(10)); INSERT INTO arts_accommodations VALUES (4, 'fall 2021'), (5, 'fall 2021'), (6, 'fall 2021'); INSERT INTO pe_accommodations VALUES (5, 'fall 2021'), (6, 'fall 2021'), (7, 'fall 2021');", "output": "SELECT COUNT(*) FROM arts_accommodations WHERE semester = 'fall 2021' UNION ALL SELECT COUNT(*) FROM pe_accommodations WHERE semester = 'fall 2021';"}
{"input": " \uc77c\ub9ac\ub178\uc774 \uc8fc\uc5d0\uc11c \uad50\ud1b5 \uc704\ubc18\uc5d0 \ud544\uc694\ud55c \ucd5c\uc18c \uc9c0\uc5ed\uc0ac\ud68c \ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_service_hours (id INT, state VARCHAR(50), violation_type VARCHAR(50), hours INT); INSERT INTO community_service_hours (id, state, violation_type, hours) VALUES (1, 'Illinois', 'Speeding', 10), (2, 'Illinois', 'Running Red Light', 15), (3, 'Illinois', 'Reckless Driving', 20);", "output": "SELECT MIN(hours) FROM community_service_hours WHERE state = 'Illinois' AND violation_type = 'Traffic Violation';"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \ucd94\uac00\ub41c \ubaa8\ub4e0 \ub3d9\ubb3c\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE animal_population (animal_id INT, animal_name VARCHAR(50), program VARCHAR(50), added_date DATE); INSERT INTO animal_population (animal_id, animal_name, program, added_date) VALUES (1, 'Grizzly Bear', 'habitat_preservation', '2022-01-01'), (2, 'Gray Wolf', 'community_education', '2022-02-01'), (3, 'Bald Eagle', 'habitat_preservation', '2022-03-01'), (4, 'Red Fox', 'community_education', '2022-04-01');", "output": "SELECT animal_name, program, added_date FROM animal_population WHERE added_date >= DATEADD(WEEK, -1, GETDATE());"}
{"input": " \ubb38\uc81c \uc720\ud615\ubcc4, \uc6d4\ubcc4 \uace0\uac1d \ubd88\ub9cc \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE customer_complaints_data (complaint_id INT, complaint_type VARCHAR(20), complaint_date DATE); INSERT INTO customer_complaints_data (complaint_id, complaint_type, complaint_date) VALUES (1, 'Billing', '2022-01-01'), (2, 'Service', '2022-02-01'), (3, 'Billing', '2022-03-01');", "output": "SELECT DATE_FORMAT(complaint_date, '%Y-%m') AS month, complaint_type, COUNT(*) AS complaint_count FROM customer_complaints_data GROUP BY month, complaint_type;"}
{"input": " \uc804\uccb4\uc801\uc73c\ub85c \uc628\ub3c4\uac00 \uac00\uc7a5 \ub0ae\uc740 \ub0a0\uc9dc\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "temperature_readings", "output": "SELECT reading_date as lowest_temp_date FROM temperature_readings WHERE temperature = (SELECT MIN(temperature) FROM temperature_readings);"}
{"input": " \ub300\ub959\ubcc4, \uc5f0\ub3c4\ubcc4 CO2 \ucd1d \ubc30\ucd9c\ub7c9\uc744 \ucc3e\uc544 \uc21c\uc704\ub97c \ub9e4\uae30\uc138\uc694.", "context": "CREATE TABLE EmissionsData (Continent VARCHAR(50), Year INT, CO2Emission DECIMAL(5,2), Population INT); INSERT INTO EmissionsData (Continent, Year, CO2Emission, Population) VALUES ('Asia', 2020, 5.3, 4600000000), ('Asia', 2019, 4.6, 4580000000), ('Africa', 2020, 2.1, 1300000000), ('Africa', 2019, 1.8, 1280000000);", "output": "SELECT Continent, Year, SUM(CO2Emission) as TotalCO2Emission, RANK() OVER (PARTITION BY Year ORDER BY SUM(CO2Emission) DESC) as Rank FROM EmissionsData GROUP BY Continent, Year;"}
{"input": "2021\ub144 \uc720\ub7fd \uc5f0\ud569 \uc0ac\uc6a9\uc790\uac00 \ucc38\uc5ec\ud55c \uac00\uc0c1 \ud22c\uc5b4 \uc218\ub97c \ucc38\uc5ec \uc6d4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users(user_id INT, user_region TEXT); INSERT INTO users(user_id, user_region) VALUES (1, 'European Union'); CREATE TABLE virtual_tours(tour_id INT, tour_date DATE); CREATE TABLE user_tour_interactions(user_id INT, tour_id INT);", "output": "SELECT MONTH(vt.tour_date) AS month, COUNT(uti.user_id) AS num_interactions FROM users u INNER JOIN user_tour_interactions uti ON u.user_id = uti.user_id INNER JOIN virtual_tours vt ON uti.tour_id = vt.tour_id WHERE u.user_region = 'European Union' AND YEAR(vt.tour_date) = 2021 GROUP BY month;"}
{"input": " \uac01 \uad11\uc0b0 \ud604\uc7a5\uc758 \uc131\ubcc4 \ubc0f \uc778\uc885 \uce21\uba74\uc5d0\uc11c \uc778\ub825\uc758 \ub2e4\uc591\uc131\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE gender (id INT, gender VARCHAR(255)); INSERT INTO gender (id, gender) VALUES (1, 'Male'), (2, 'Female'), (3, 'Non-binary'); CREATE TABLE race (id INT, race VARCHAR(255)); INSERT INTO race (id, race) VALUES (1, 'White'), (2, 'Black'), (3, 'Hispanic'), (4, 'Asian'); CREATE TABLE employee_demographics (id INT, employee_id INT, site_id INT, gender_id INT, race_id INT); INSERT INTO employee_demographics (id, employee_id, site_id, gender_id, race_id) VALUES (1, 1, 1, 1, 1), (2, 2, 1, 2, 2), (3, 3, 2, 1, 3), (4, 4, 3, 2, 4);", "output": "SELECT s.site_name, g.gender, r.race, COUNT(ed.id) as count FROM employee_demographics ed INNER JOIN employees e ON ed.employee_id = e.id INNER JOIN mining_sites s ON e.site_id = s.id INNER JOIN gender g ON ed.gender_id = g.id INNER JOIN race r ON ed.race_id = r.id GROUP BY s.site_name, g.gender, r.race;"}
{"input": "\uae30\uc99d\uc790\ub4e4 \uc911 \uc0c1\uc704 3\uac1c\uc758 \uac00\uc7a5 \ud754\ud55c \uc131\uc528 \ucc3e\uae30", "context": "CREATE TABLE donors (id INT, last_name VARCHAR, first_name VARCHAR, city VARCHAR); INSERT INTO donors VALUES (1, 'Smith', 'John', 'NYC')", "output": "SELECT d.last_name, COUNT(*) AS count FROM donors d GROUP BY d.last_name ORDER BY count DESC LIMIT 3;"}
{"input": " \ubbf8\uc220\ud559\uacfc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ucd1d \ud3b8\uc758\uc2dc\uc124 \uc218\uc640 \uccb4\uc721\ud559\uacfc\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \ucd1d \ud3b8\uc758\uc2dc\uc124 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ArtAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO ArtAccommodations (AccommodationID, Department) VALUES (1, 'Art'), (2, 'Art'), (3, 'Art'); CREATE TABLE PhysicalEducationAccommodations (AccommodationID INT, Department VARCHAR(20)); INSERT INTO PhysicalEducationAccommodations (AccommodationID, Department) VALUES (4, 'Physical Education'), (5, 'Physical Education'), (6, 'Physical Education');", "output": "SELECT COUNT(*) FROM ArtAccommodations WHERE Department = 'Art' UNION SELECT COUNT(*) FROM PhysicalEducationAccommodations WHERE Department = 'Physical Education';"}
{"input": " \uce74\ub9ac\ube0c\ud574\uc5d0\uc11c \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE marine_protected_areas (country VARCHAR(255), region VARCHAR(255), number_of_sites INT); INSERT INTO marine_protected_areas (country, region, number_of_sites) VALUES ('Bahamas', 'Caribbean', 43), ('Cuba', 'Caribbean', 34), ('Jamaica', 'Caribbean', 25), ('Haiti', 'Caribbean', 12), ('Dominican Republic', 'Caribbean', 30);", "output": "SELECT country, number_of_sites, ROW_NUMBER() OVER (ORDER BY number_of_sites DESC) as rn FROM marine_protected_areas WHERE region = 'Caribbean' LIMIT 2;"}
{"input": " \uc18c\uc15c \uc784\ud329\ud2b8\uc5d0 \uc911\uc810\uc744 \ub454 \uae30\uad00\uc758 \uc218\uc640 \ud22c\uc790\uc790\ubcc4 \ud22c\uc790 \ucd1d\uc561\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE investments (investment_id INT, investor_id INT, org_id INT, investment_amount INT); INSERT INTO investments (investment_id, investor_id, org_id, investment_amount) VALUES (1, 1, 2, 50000), (2, 2, 3, 75000), (3, 1, 1, 100000), (4, 3, 2, 35000), (5, 2, 1, 80000); CREATE TABLE investors (investor_id INT, investor_name TEXT); INSERT INTO investors (investor_id, investor_name) VALUES (1, 'Investor A'), (2, 'Investor B'), (3, 'Investor C'); CREATE TABLE organizations (org_id INT, org_name TEXT, focus_topic TEXT); INSERT INTO organizations (org_id, org_name, focus_topic) VALUES (1, 'Org 1', 'Social Impact'), (2, 'Org 2', 'Social Impact'), (3, 'Org 3', 'Climate Change');", "output": "SELECT investors.investor_name, COUNT(organizations.org_id) AS orgs_invested, SUM(investments.investment_amount) AS total_invested FROM investments JOIN investors ON investments.investor_id = investors.investor_id JOIN organizations ON investments.org_id = organizations.org_id WHERE organizations.focus_topic = 'Social Impact' GROUP BY investors.investor_name;"}
{"input": " \uac74\uc124 \uc5c5\uacc4\uc5d0\uc11c \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\uc11c \ubc1c\uae09\ub418\ub294 \ud5c8\uac00\uc758 \ud3c9\uade0 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE permit (permit_id INT, state VARCHAR(50), industry VARCHAR(50), cost FLOAT); INSERT INTO permit (permit_id, state, industry, cost) VALUES (1, 'California', 'Construction', 5000);", "output": "SELECT AVG(cost) FROM permit WHERE state = 'California' AND industry = 'Construction';"}
{"input": "ProvinceF'\uc758 \uc5f0\uc18d \uc5f0\ub3c4 \uac04 \ub9e4\ub9bd \uc6a9\ub7c9 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ProvinceF (Year INT, Capacity INT); INSERT INTO ProvinceF (Year, Capacity) VALUES (2021, 5000), (2022, 5500), (2023, 6000), (2024, 6500);", "output": "SELECT LAG(Capacity, 1) OVER (ORDER BY Year) as prev_capacity, Capacity, (Capacity - LAG(Capacity, 1) OVER (ORDER BY Year)) as change_capacity FROM ProvinceF;"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 \ub274\uc695\uc8fc\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, state VARCHAR(50), month VARCHAR(50), revenue FLOAT); INSERT INTO sales (id, state, month, revenue) VALUES (1, 'New York', 'July', 50000.0), (2, 'New York', 'August', 60000.0), (3, 'New York', 'September', 70000.0);", "output": "SELECT SUM(revenue) FROM sales WHERE state = 'New York' AND (month = 'July' OR month = 'August' OR month = 'September');"}
{"input": " \uc724\ub9ac\uc801\uc778 \ud328\uc158 \uacf5\uae09\ub9dd\uc5d0\uc11c \uc81c\uc870\uc5c5\uccb4\uac00 \uc0ac\uc6a9\ud558\ub294 \uc720\uae30\ub18d \uba74\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organic_cotton_supply_chain (manufacturer_id INT, quantity FLOAT); INSERT INTO organic_cotton_supply_chain (manufacturer_id, quantity) VALUES (1, 400.0), (2, 350.0), (3, 550.0);", "output": "SELECT SUM(quantity) FROM organic_cotton_supply_chain;"}
{"input": " \ub0a8\uc544\uc2dc\uc544\uc758 \uad6d\uac00\ubcc4 \ub514\uc9c0\ud138 \uaca9\ucc28 \uc774\ub2c8\uc154\ud2f0\ube0c \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE digital_divide_india(id INT, initiative VARCHAR(50), country VARCHAR(10)); INSERT INTO digital_divide_india VALUES (1, 'India Digital Connect', 'India'); CREATE TABLE digital_divide_pakistan(id INT, initiative VARCHAR(50), country VARCHAR(10)); INSERT INTO digital_divide_pakistan VALUES (1, 'Pakistan Digital Inclusion', 'Pakistan');", "output": "SELECT country, COUNT(initiative) AS num_initiatives FROM digital_divide_india GROUP BY country UNION ALL SELECT country, COUNT(initiative) AS num_initiatives FROM digital_divide_pakistan GROUP BY country;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac01 \uc6b4\uc601\uc790\uac00 \uc2dc\ucd94\ud55c \ucd1d \uc6b0\ubb3c \uc218\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE operators (operator_id INT, operator_name TEXT); INSERT INTO operators (operator_id, operator_name) VALUES (1, 'Company A'), (2, 'Company B'); CREATE TABLE wells (well_id INT, operator_id INT, year INT); INSERT INTO wells (well_id, operator_id, year) VALUES (1, 1, 2018), (2, 1, 2020), (3, 2, 2019), (4, 2, 2021), (5, 1, 2022), (6, 2, 2017), (7, 1, 2016), (8, 2, 2020);", "output": "SELECT o.operator_name, COUNT(w.well_id) AS num_wells_drilled FROM wells w JOIN operators o ON w.operator_id = o.operator_id WHERE w.year BETWEEN (SELECT MAX(year) - 5 FROM wells) AND MAX(year) GROUP BY o.operator_id;"}
{"input": " \uc7a5\uc560\uc778 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uace0\uc720\ud55c \ud3b8\uc758 \uc2dc\uc124\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Accommodations (accommodation_id INT, accommodation VARCHAR(255)); INSERT INTO Accommodations VALUES (1, 'Extra Time');", "output": "SELECT DISTINCT accommodation FROM Accommodations;"}
{"input": " R&B \uc74c\uc545\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ub3c8\uc744 \uc9c0\ucd9c\ud55c \uc0c1\uc704 5\uba85\uc758 \uc0ac\uc6a9\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Users (user_id INT, username TEXT); CREATE TABLE Songs (song_id INT, title TEXT, genre TEXT, release_date DATE, price DECIMAL(5,2)); CREATE TABLE Purchases (purchase_id INT, user_id INT, song_id INT, purchase_date DATE);", "output": "SELECT Users.username, SUM(Songs.price) as total_spent FROM Users INNER JOIN Purchases ON Users.user_id = Purchases.user_id INNER JOIN Songs ON Purchases.song_id = Songs.song_id WHERE Songs.genre = 'R&B' GROUP BY Users.username ORDER BY total_spent DESC LIMIT 5;"}
{"input": "\ubaa8\ub378 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uac01 AI \ubaa8\ub378\uc758 \uacf5\uc815\uc131 \ubc0f \uc548\uc804\uc131 \uc810\uc218\ub294 \ucd1d \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_scores (score_id INT PRIMARY KEY, model_id INT, score_date DATE, score_type VARCHAR(50), score_value FLOAT); INSERT INTO ai_scores (score_id, model_id, score_date, score_type, score_value) VALUES (1, 1, '2021-01-01', 'Fairness', 0.75), (2, 2, '2021-02-01', 'Safety', 0.87), (3, 1, '2021-03-01', 'Fairness', 0.82), (4, 3, '2021-04-01', 'Safety', 0.91), (5, 2, '2021-05-01', 'Fairness', 0.95), (6, 1, '2021-01-01', 'Safety', 0.92), (7, 3, '2021-04-01', 'Fairness', 0.78), (8, 2, '2021-02-01', 'Fairness', 0.85);", "output": "SELECT model_type, COUNT(*) as total_scores FROM (SELECT model_id, model_type, score_value FROM ai_scores WHERE score_type = 'Fairness' UNION ALL SELECT model_id, model_type, score_value FROM ai_scores WHERE score_type = 'Safety') AS all_scores GROUP BY model_type;"}
{"input": " 2019\ub144 \ucc44\uc6a9\ub41c \uc9c1\uc6d0\uc758 \ubd80\uc11c\ubcc4 \uae09\uc5ec \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), Salary DECIMAL(10,2), HireDate DATE, Department VARCHAR(50)); INSERT INTO Employees (EmployeeID, Gender, Salary, HireDate, Department) VALUES (1, 'Male', 50000, '2020-01-01', 'HR'); INSERT INTO Employees (EmployeeID, Gender, Salary, HireDate, Department) VALUES (2, 'Female', 55000, '2019-01-01', 'IT'); INSERT INTO Employees (EmployeeID, Gender, Salary, HireDate, Department) VALUES (3, 'Male', 60000, '2020-05-01', 'IT'); INSERT INTO Employees (EmployeeID, Gender, Salary, HireDate, Department) VALUES (4, 'Female', 70000, '2018-01-01', 'Sales'); INSERT INTO Employees (EmployeeID, Gender, Salary, HireDate, Department) VALUES (5, 'Male', 80000, '2019-06-01', 'Finance');", "output": "SELECT Department, SUM(Salary) as Total_Salary_Cost FROM Employees WHERE YEAR(HireDate) = 2019 GROUP BY Department;"}
{"input": " \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \ud14d\uc0ac\uc2a4\uc5d0\uc11c \ubc1c\uae09\ub41c \uac74\uc124 \ud5c8\uac00\uc758 \ucd1d \uac74\uc218\ub294 \ud5c8\uac00 \uae08\uc561\uc5d0 \ub530\ub77c \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tx_permits (id INT, permit_id VARCHAR(50), permit_value FLOAT, permit_date DATE, city VARCHAR(50), state VARCHAR(50)); INSERT INTO tx_permits (id, permit_id, permit_value, permit_date, city, state) VALUES (1, '123456', 1000000, '2021-07-01', 'Dallas', 'TX'), (2, '789101', 1500000, '2021-06-15', 'Houston', 'TX'), (3, '111213', 800000, '2021-05-05', 'Austin', 'TX');", "output": "SELECT permit_id, permit_value, RANK() OVER (ORDER BY permit_value DESC) as rank FROM tx_permits WHERE state = 'TX' AND permit_date >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY permit_id, permit_value ORDER BY permit_value DESC;"}
{"input": " \uc2dc\uace8 \ubcd1\uc6d0\uc758 \ucd1d \ub2f9\ub1e8\ubcd1 \ud658\uc790 \uc218\ub97c \ubcd1\uc6d0 \uc704\uce58\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE patients (patient_id INT, age INT, gender TEXT, rural BOOLEAN, disease TEXT, hospital_id INT); INSERT INTO patients (patient_id, age, gender, rural, disease, hospital_id) VALUES (1, 50, 'Female', true, 'Diabetes', 1); CREATE TABLE hospitals (hospital_id INT, hospital_name TEXT, beds INT, rural BOOLEAN, state_id INT); INSERT INTO hospitals (hospital_id, hospital_name, beds, rural, state_id) VALUES (1, 'Hospital A', 100, true, 1); CREATE TABLE states (state_id INT, state TEXT); INSERT INTO states (state_id, state) VALUES (1, 'Alabama'), (2, 'Alaska');", "output": "SELECT states.state, SUM(CASE WHEN patients.disease = 'Diabetes' THEN 1 ELSE 0 END) patient_count FROM patients JOIN hospitals ON patients.hospital_id = hospitals.hospital_id JOIN states ON hospitals.state_id = states.state_id WHERE hospitals.rural = true GROUP BY states.state;"}
{"input": " \ucd5c\uc18c 3\uac1c\uad6d\uc5d0\uc11c \uc5ec\ud589 \uc8fc\uc758\ubcf4\uac00 \ubc1c\ub839\ub41c \ubaa9\uc801\uc9c0\ub294 \uba87 \uad70\ub370\uc785\ub2c8\uae4c?", "context": "CREATE TABLE travel_advisories (country_issuing_advisory VARCHAR(50), destination VARCHAR(50));", "output": "SELECT COUNT(DISTINCT destination) FROM travel_advisories WHERE destination IN (SELECT destination FROM travel_advisories GROUP BY destination HAVING COUNT(DISTINCT country_issuing_advisory) >= 3);"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad11\uc0b0 \uc791\uc5c5\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE WaterConsumptionByOperation (OperationID INT, Date DATE, Consumption INT); INSERT INTO WaterConsumptionByOperation (OperationID, Date, Consumption) VALUES (1, '2022-01-01', 2000), (1, '2022-01-02', 2500), (1, '2022-01-03', 3000), (2, '2022-01-01', 1500), (2, '2022-01-02', 2000), (2, '2022-01-03', 2500), (3, '2022-01-01', 3500), (3, '2022-01-02', 4000), (3, '2022-01-03', 4500), (4, '2022-01-01', 1000), (4, '2022-01-02', 1200), (4, '2022-01-03', 1400), (5, '2022-01-01', 5000), (5, '2022-01-02', 5500), (5, '2022-01-03', 6000);", "output": "SELECT OperationID, SUM(Consumption) as Total_Consumption, RANK() OVER (ORDER BY SUM(Consumption) DESC) as Rank FROM WaterConsumptionByOperation WHERE Date >= DATEADD(QUARTER, -1, GETDATE()) GROUP BY OperationID;"}
{"input": " \ud638\uc8fc\uc758 \uad11\uc0b0 \ud604\uc7a5, \uc9c1\uc6d0\uc774 30\uba85 \uc774\uc0c1\uc778 \ud604\uc7a5\uc758 \uacbd\uc6b0 \ud558\ub8e8\uc5d0 \ucd5c\ub300 \uc740\uc744 \ucd94\ucd9c\ud560 \uc218 \uc788\ub294 \uc591\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE silver_mine (site_id INT, country VARCHAR(50), num_employees INT, extraction_date DATE, quantity INT); INSERT INTO silver_mine (site_id, country, num_employees, extraction_date, quantity) VALUES (1, 'Australia', 40, '2015-01-02', 1000), (2, 'Australia', 35, '2014-12-31', 1500), (3, 'Australia', 60, '2016-03-04', 2000), (4, 'Australia', 50, '2015-06-10', 500);", "output": "SELECT country, MAX(quantity) as max_daily_silver FROM silver_mine WHERE num_employees > 30 AND country = 'Australia' GROUP BY country;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ubd81\ubc18\uad6c \ub2f4\uc218 \uc5f0\uccb4\ub3d9\ubb3c \uc591\uc2dd\uc7a5\uc758 \ud3c9\uade0 \uc218\uc628\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mollusk_farms (id INT, name TEXT, type TEXT, location TEXT, water_temp FLOAT, record_date DATE); INSERT INTO mollusk_farms (id, name, type, location, water_temp, record_date) VALUES (1, 'Farm S', 'Mollusk', 'Canada', 15.0, '2022-03-10'), (2, 'Farm T', 'Mollusk', 'Alaska', 12.5, '2022-02-15');", "output": "SELECT AVG(water_temp) FROM mollusk_farms WHERE type = 'Mollusk' AND location IN (SELECT location FROM mollusk_farms WHERE biomass IS NOT NULL GROUP BY location HAVING EXTRACT(HOUR FROM AVG(location)) < 12) AND record_date BETWEEN DATE('now', '-1 year') AND DATE('now');"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uad11\uace0 \uc2a4\ud0a4\ub9c8\uc5d0 \uc788\ub294 \uac01 \uad11\uace0\uc8fc\uc758 \ucd1d \uc218\uc775\uacfc \ub178\ucd9c\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE advertisers (id INT, name VARCHAR(50)); CREATE TABLE campaigns (id INT, advertiser_id INT, start_date DATE, end_date DATE); CREATE TABLE ad_performance (campaign_id INT, impressions INT, revenue FLOAT);", "output": "SELECT a.name AS advertiser, SUM(ap.revenue) AS total_revenue, SUM(ap.impressions) AS total_impressions FROM ad_performance ap JOIN campaigns c ON ap.campaign_id = c.id JOIN advertisers a ON c.advertiser_id = a.id WHERE ap.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY a.name;"}
{"input": " \uc77c\ubcf8, \ud55c\uad6d, \uc911\uad6d\uc5d0\ub294 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc219\ubc15\uc2dc\uc124\uc774 \uc5bc\ub9c8\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE SustainableAccommodations (id INT, country VARCHAR(20)); INSERT INTO SustainableAccommodations (id, country) VALUES (1, 'Japan'), (2, 'Korea'), (3, 'China');", "output": "SELECT COUNT(*) FROM SustainableAccommodations WHERE country IN ('Japan', 'Korea', 'China');"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubbf8\uad6d\uc758 \uac01 \ubd80\ub3d9\uc0b0\uc5d0 \ub300\ud55c \ubd80\ub3d9\uc0b0 \ud06c\uae30\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE property_sizes (id INT, size INT, property_id INT, measurement_time TIMESTAMP); INSERT INTO property_sizes (id, size, property_id, measurement_time) VALUES (1, 1500, 1, '2022-01-01 00:00:00'), (2, 1600, 1, '2022-02-01 00:00:00'), (3, 1800, 2, '2022-01-01 00:00:00');", "output": "SELECT property_id, size, measurement_time, LEAD(size) OVER (PARTITION BY property_id ORDER BY measurement_time) - size as size_change FROM property_sizes WHERE country = 'USA';"}
{"input": " \uc9c0\uc5ed\ubcc4 \uc791\ubb3c \uc0dd\uc0b0\ub7c9\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE crops_region (id INT, name VARCHAR(50), region VARCHAR(50), year INT, production INT); INSERT INTO crops_region (id, name, region, year, production) VALUES (1, 'Rice', 'Asia', 2020, 15000), (2, 'Wheat', 'Europe', 2020, 12000), (3, 'Corn', 'Americas', 2020, 10000), (4, 'Barley', 'Europe', 2020, 9000), (5, 'Rice', 'Asia', 2019, 14000), (6, 'Wheat', 'Europe', 2019, 11000), (7, 'Corn', 'Americas', 2019, 9000), (8, 'Barley', 'Europe', 2019, 8000);", "output": "SELECT region, SUM(production) as total_production FROM crops_region GROUP BY region;"}
{"input": " 'RegionA'\uc640 'RegionB'\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholders (PolicyID INT, Age INT, Region VARCHAR(10)); INSERT INTO Policyholders (PolicyID, Age, Region) VALUES (1, 35, 'RegionA'), (2, 42, 'RegionB');", "output": "SELECT AVG(Age) FROM Policyholders WHERE Region IN ('RegionA', 'RegionB');"}
{"input": " \ud558\ub8e8 \uc911 \uc2dc\uac04\ubcc4 \ubcf4\uc548 \uc0ac\uace0 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, incident_date TIMESTAMP); INSERT INTO security_incidents (id, incident_date) VALUES (1, '2022-01-01 10:00:00'), (2, '2022-01-02 11:00:00');", "output": "SELECT HOUR(incident_date) as hour, COUNT(*) as total_incidents FROM security_incidents GROUP BY hour;"}
{"input": " \uc77c\ubcf8\uc5d0\ub294 \uac00\uc0c1 \uad00\uad11 \uccb4\ud5d8\uc744 \uc81c\uacf5\ud558\ub294 5\uc131\uae09 \ud638\ud154\uc774 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE hotels (hotel_id INT, name VARCHAR(255), country VARCHAR(255), rating INT, virtual_tour BOOLEAN); INSERT INTO hotels (hotel_id, name, country, rating, virtual_tour) VALUES (1, 'Five Star Tokyo Hotel', 'Japan', 5, true), (2, 'Seaside Ryokan', 'Japan', 4, false), (3, 'Kyoto Heritage Hotel', 'Japan', 5, false);", "output": "SELECT COUNT(*) FROM hotels WHERE country = 'Japan' AND rating = 5 AND virtual_tour = true;"}
{"input": " \uc544\uc2dc\uc544\uc758 \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud55c \uae30\uc220\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc870\uc9c1\uc774 \ubc1b\uc740 \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contributor (contributor_id INT, contributor_name VARCHAR(255), amount DECIMAL(10,2)); INSERT INTO contributor (contributor_id, contributor_name, amount) VALUES (1, 'Tech for Good Foundation', 600000), (2, 'AI Ethics Alliance', 450000), (3, 'Digital Responsibility Fund', 500000), (4, 'Inclusive AI Coalition', 300000), (5, 'Social Tech Fund Asia', 800000); CREATE TABLE contributor_project (contributor_id INT, project_id INT); INSERT INTO contributor_project (contributor_id, project_id) VALUES (1, 1), (2, 1), (3, 1), (4, 2), (5, 3); CREATE TABLE project (project_id INT, project_name VARCHAR(255), location VARCHAR(50)); INSERT INTO project (project_id, project_name, location) VALUES (1, 'Ethical AI Development', 'North America'), (2, 'Accessible Tech Education', 'Asia'), (3, 'Digital Inclusion Program', 'Africa');", "output": "SELECT SUM(amount) as total_funding FROM contributor JOIN contributor_project ON contributor.contributor_id = contributor_project.contributor_id JOIN project ON contributor_project.project_id = project.project_id WHERE project.location = 'Asia';"}
{"input": " VR \uac8c\uc784 '\ud53c\uc2a4\ud1a8 \ud729'\uc5d0\uc11c \ud50c\ub808\uc774\uc5b4 '\uc5d8\ub77c'\uc758 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE vr_games_2 (id INT, player TEXT, game TEXT, playtime INT); INSERT INTO vr_games_2 (id, player, game, playtime) VALUES (1, 'Ella', 'Pistol Whip', 60), (2, 'Fred', 'Half-Life: Alyx', 120), (3, 'Ella', 'The Walking Dead: Saints & Sinners', 90);", "output": "SELECT SUM(playtime) FROM vr_games_2 WHERE player = 'Ella' AND game = 'Pistol Whip';"}
{"input": " 2019\ub144 \uad6d\uac00\ubcc4 \ud3c9\uade0 R&D \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE rd_expenditures (country VARCHAR(50), year INT, amount FLOAT); INSERT INTO rd_expenditures (country, year, amount) VALUES ('USA', 2019, 70000000), ('China', 2019, 40000000), ('Germany', 2019, 30000000);", "output": "SELECT AVG(amount) FROM rd_expenditures WHERE year = 2019 GROUP BY year;"}
{"input": "\uac01 \uc81c\uc870\uc5c5\uccb4\uc5d0\uc11c \uc0dd\uc0b0\ud55c \uace0\uc720\ud55c \uc758\ub958\uc758 \ucd1d \uac1c\uc218\ub294 \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc73c\uba70 \uc54c\ud30c\ubcb3 \uc21c\uc11c\ub85c \uc815\ub82c\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(255));CREATE TABLE Garments (GarmentID INT, ManufacturerID INT, ProductionDate DATE);", "output": "SELECT m.ManufacturerName, COUNT(DISTINCT g.GarmentID) AS TotalUniqueGarments, RANK() OVER (PARTITION BY NULL ORDER BY m.ManufacturerName) AS Rank FROM Manufacturers m JOIN Garments g ON m.ManufacturerID = g.ManufacturerID GROUP BY m.ManufacturerName ORDER BY m.ManufacturerName;"}
{"input": " 50,000\ud3c9\ubc29\ud0ac\ub85c\ubbf8\ud130\uac00 \ub118\ub294 \ud0dc\ud3c9\uc591 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc774 \uc788\ub294 \ubaa8\ub4e0 \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marine_protected_areas (id INT, name VARCHAR(255), area_size FLOAT, region VARCHAR(255), country VARCHAR(255)); INSERT INTO marine_protected_areas (id, name, area_size, region, country) VALUES (1, 'Great Barrier Reef', 344400, 'Pacific', 'Australia');", "output": "SELECT DISTINCT country FROM marine_protected_areas WHERE region = 'Pacific' AND area_size > 50000;"}
{"input": " \ubd81\uadf9\ud574\uc5d0 \ubc14\uc774\uc624\ub9e4\uc2a4 \ub370\uc774\ud130\uac00 \uc788\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE arctic_species (id INT, species_name TEXT, biomass INT); INSERT INTO arctic_species (id, species_name, biomass) VALUES (1, 'Beluga Whale', 1500), (2, 'Narwhal', 1200), (3, 'Greenland Shark', 800), (4, 'Bearded Seal', 500);", "output": "SELECT COUNT(*) FROM arctic_species WHERE biomass IS NOT NULL;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 'CityY' \ud589\uc0ac\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc29\ubb38\uac1d\uc774 \ucc38\uc11d\ud588\ub098\uc694?", "context": "CREATE TABLE Visitors (visitor_id INT, name VARCHAR(255), birthdate DATE, city VARCHAR(255)); CREATE TABLE Visits (visit_id INT, visitor_id INT, event_id INT, visit_date DATE); CREATE TABLE Events (event_id INT, name VARCHAR(255), date DATE);", "output": "SELECT COUNT(DISTINCT V.visitor_id) FROM Visitors V JOIN Visits IV ON V.visitor_id = IV.visitor_id JOIN Events E ON IV.event_id = E.event_id WHERE V.city = 'CityY' AND E.date >= DATE(CURRENT_DATE) - INTERVAL 3 MONTH;"}
{"input": " top_ethics_training \ubcf4\uae30\uc758 \ubaa8\ub4e0 \uae30\ub85d \ud45c\uc2dc", "context": "CREATE TABLE workforce_training (id INT PRIMARY KEY, employee_name VARCHAR(255), training_topic VARCHAR(255), training_hours INT, training_completion_date DATE); CREATE VIEW top_ethics_training AS WITH cte AS (SELECT * FROM workforce_training WHERE training_topic = 'ethics') SELECT * FROM cte WHERE training_hours > 5;", "output": "SELECT * FROM top_ethics_training;"}
{"input": " \uc7a5\ube44 \uc885\ub958\ubcc4 \uad70\uc7a5\ube44 \uc720\uc9c0\ubcf4\uc218 \uc694\uccad \ube48\ub3c4\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE maintenance_frequency (request_id INT, equipment_id INT, request_date DATE); INSERT INTO maintenance_frequency VALUES (1, 100, '2021-01-01'), (2, 101, '2021-01-02'), (3, 100, '2021-01-03');", "output": "SELECT equipment_id, COUNT(*) OVER (PARTITION BY equipment_id) AS num_requests FROM maintenance_frequency WHERE request_date >= DATEADD(year, -1, CURRENT_DATE);"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud2b9\uc815 \ub9e4\uc7a5\uc5d0 \uc81c\ud488\uc744 \uacf5\uae09\ud55c \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \uacf5\uae09\ub41c \uc81c\ud488 \uc218\ub7c9\uacfc \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vendors (id INT, name VARCHAR(50), country VARCHAR(50)); CREATE TABLE vendor_shipments (id INT, vendor_id INT, store_id INT, shipment_date DATE, quantity INT); CREATE TABLE stores (id INT, name VARCHAR(50), city VARCHAR(50), region VARCHAR(50));", "output": "SELECT vendors.name, vendor_shipments.product_id, vendor_shipments.quantity FROM vendors JOIN vendor_shipments ON vendors.id = vendor_shipments.vendor_id JOIN stores ON vendor_shipments.store_id = stores.id WHERE stores.name = 'Specific Store Name' AND vendor_shipments.shipment_date >= DATE(NOW()) - INTERVAL 6 MONTH;"}
{"input": " \uc0ac\ud68c\uc801 \uc774\uc775\uc744 \uc704\ud574 \uae30\uc220\uc744 \uad6c\ud604\ud55c \uc870\uc9c1\uc758 \uc774\ub984\uacfc \ud574\ub2f9 \uc6b4\uc601 \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE organizations_social_good (org_id INT, org_name VARCHAR(100), country VARCHAR(50)); INSERT INTO organizations_social_good VALUES (1, 'AI for Humanity', 'USA'), (2, 'Tech for Global Good', 'Canada'), (3, 'Digital Empowerment', 'India'); CREATE TABLE technology_implementation (org_id INT, tech_id INT, implementation_year INT); INSERT INTO technology_implementation VALUES (1, 1, 2018), (2, 2, 2019), (3, 3, 2020); CREATE TABLE technologies (tech_id INT, tech_name VARCHAR(50), domain VARCHAR(50)); INSERT INTO technologies VALUES (1, 'AI for Health', 'social good'), (2, 'ML for Education', 'social good'), (3, 'Blockchain for Transparency', 'social good');", "output": "SELECT org_name, country FROM organizations_social_good INNER JOIN technology_implementation ON organizations_social_good.org_id = technology_implementation.org_id INNER JOIN technologies ON technology_implementation.tech_id = technologies.tech_id WHERE domain = 'social good';"}
{"input": " \uace0\uae09 \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \ud3c9\uade0 \uce7c\ub85c\ub9ac \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac00\uc9c0 \uc694\ub9ac \uc720\ud615\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE cuisine (cuisine_id INT, name VARCHAR(50), type VARCHAR(50));CREATE TABLE restaurants (restaurant_id INT, name VARCHAR(100), country VARCHAR(50), fine_dining INT, cuisine_id INT);CREATE TABLE dishes (dish_id INT, name VARCHAR(100), type VARCHAR(50), restaurant_id INT, calorie_count INT);", "output": "SELECT c.name, AVG(d.calorie_count) FROM dishes d JOIN restaurants r ON d.restaurant_id = r.restaurant_id JOIN cuisine c ON r.cuisine_id = c.cuisine_id WHERE r.fine_dining = 1 GROUP BY c.cuisine_id ORDER BY AVG(d.calorie_count) DESC LIMIT 3;"}
{"input": " 2020\ub144 \ud55c \ub2ec \ub3d9\uc548 \ub3d9\ubb3c \uc2e4\ud5d8\uc744 \ud558\uc9c0 \uc54a\uc740 \uc81c\ud488\uc774 \uba87 \uac1c\ub098 \ud310\ub9e4\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(20), cruelty_free BOOLEAN, sale_date DATE); INSERT INTO products (product_id, product_name, cruelty_free, sale_date) VALUES (1, 'Lipstick', true, '2020-01-01'), (2, 'Eyeshadow', false, '2020-01-01'), (3, 'Blush', true, '2020-02-01'), (4, 'Mascara', true, '2020-03-01');", "output": "SELECT EXTRACT(MONTH FROM sale_date) AS month, COUNT(*) FROM products WHERE cruelty_free = true GROUP BY month;"}
{"input": " \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc744 \ubc1b\uc740 \ub77c\ud2f4 \uc544\uba54\ub9ac\uce74 \uc800\uc18c\ub4dd \ub300\ucd9c\uc790\uc758 \ud3c9\uade0 \uacc4\uc88c \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID int, IncomeLevel varchar(50), Location varchar(50)); INSERT INTO Customers (CustomerID, IncomeLevel, Location) VALUES (1, 'Low Income', 'Latin America'); CREATE TABLE Loans (LoanID int, CustomerID int, Type varchar(50), SociallyResponsible bit); INSERT INTO Loans (LoanID, CustomerID, Type, SociallyResponsible) VALUES (1, 1, 'Personal Loan', 1); CREATE TABLE Accounts (AccountID int, CustomerID int, Balance decimal(10,2)); INSERT INTO Accounts (AccountID, CustomerID, Balance) VALUES (1, 1, 500.00);", "output": "SELECT AVG(A.Balance) FROM Accounts A INNER JOIN Customers C ON A.CustomerID = C.CustomerID INNER JOIN Loans L ON C.CustomerID = L.CustomerID WHERE C.Location = 'Latin America' AND C.IncomeLevel = 'Low Income' AND L.SociallyResponsible = 1;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uc7a5\uc560 \uc778\uc2dd \uac1c\uc120\uc744 \uc704\ud574 \uc2e4\uc2dc\ub41c \uad50\uc721 \uc138\uc158\uc758 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TrainingSessions (TrainingSessionID INT, TrainingSession VARCHAR(50), Date DATE); INSERT INTO TrainingSessions (TrainingSessionID, TrainingSession, Date) VALUES (1, 'Disability Awareness Training', '2022-05-01'); INSERT INTO TrainingSessions (TrainingSessionID, TrainingSession, Date) VALUES (2, 'Accessibility Training', '2022-05-05');", "output": "SELECT COUNT(TrainingSessions.TrainingSessionID) as NumberOfSessions FROM TrainingSessions WHERE TrainingSessions.Date BETWEEN DATEADD(month, -1, GETDATE()) AND GETDATE();"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud574 \uace0\uc720\ud55c \uae30\ubd80\uc790\uc758 \uc218\uc640 \ud574\ub2f9 \uae30\ubd80\uc790\uc758 \ucd1d \uae30\ubd80 \uae08\uc561\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DonorPrograms (DonorID int, ProgramID int); CREATE TABLE Donations (DonationID int, DonorID int, Amount decimal(10,2), DonationDate date); INSERT INTO DonorPrograms (DonorID, ProgramID) VALUES (1, 1), (2, 1), (3, 2); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate) VALUES (1, 1, 500.00, '2022-01-01'), (2, 2, 350.00, '2022-02-01'), (3, 3, 200.00, '2022-03-01');", "output": "SELECT P.Name, COUNT(DISTINCT DP.DonorID) as UniqueDonors, SUM(D.Amount) as TotalDonations FROM Programs P JOIN DonorPrograms DP ON P.ProgramID = DP.ProgramID JOIN Donations D ON DP.DonorID = D.DonorID GROUP BY P.ProgramID, P.Name;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc5f0\uac04 \ucd9c\ud310\ub418\ub294 \uc724\ub9ac\uc801 AI \uc5f0\uad6c \ub17c\ubb38\uc758 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai_research (id INT, publication_year INT, country VARCHAR, is_ethical BOOLEAN);", "output": "SELECT publication_year, COUNT(*) as num_publications FROM ethical_ai_research WHERE is_ethical = TRUE AND country = 'United States' GROUP BY publication_year;"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uc720\ub7fd\uc5f0\ud569\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uccad\uc815\uc5d0\ub108\uc9c0 \uc815\ucc45 \ub3d9\ud5a5\uc774 \uc2dc\ud589\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE policy_trends (id INT, region VARCHAR(50), policy_trend_name VARCHAR(50), start_year INT, end_year INT); INSERT INTO policy_trends (id, region, policy_trend_name, start_year, end_year) VALUES (1, 'European Union', 'Carbon pricing', 2015, 2020), (2, 'US', 'Renewable portfolio standards', 2016, 2019), (3, 'China', 'Energy efficiency targets', 2017, 2022), (4, 'India', 'Solar power expansion', 2018, 2023);", "output": "SELECT COUNT(*) FROM policy_trends WHERE region = 'European Union' AND start_year BETWEEN 2015 AND 2020 AND end_year BETWEEN 2015 AND 2020;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ub9d0\ub77c\ub9ac\uc544 \uac10\uc5fc\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE districts (district_id INT, district_name TEXT, region TEXT, malaria_cases INT); INSERT INTO districts (district_id, district_name, region, malaria_cases) VALUES (1, 'Downtown', 'East', 45), (2, 'Uptown', 'East', 78), (3, 'Rural', 'West', 32);", "output": "SELECT district, malaria_cases/population AS infection_rate FROM (SELECT district_name AS district, SUM(malaria_cases) OVER (PARTITION BY region) AS malaria_cases, SUM(population) OVER (PARTITION BY region) AS population FROM districts JOIN populations ON districts.district_id = populations.district_id) ORDER BY district;"}
{"input": " 2022\ub144 1\uc6d4\uc5d0 '\ub3d9\ubd80' \uc9c0\uc5ed \ucc3d\uace0\uc5d0\uc11c \uba87 \uac1c\uc758 \ud328\ud0a4\uc9c0\uac00 \ubc30\uc1a1\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_monthly_stats (warehouse_id INT, month INT, packages_shipped INT); INSERT INTO warehouse_monthly_stats (warehouse_id, month, packages_shipped) VALUES (1, 1, 400), (2, 1, 300), (1, 2, 450), (2, 2, 350);", "output": "SELECT SUM(packages_shipped) FROM warehouse_monthly_stats WHERE warehouse_id IN (SELECT id FROM warehouses WHERE region = 'east') AND month = 1;"}
{"input": " \uc9c0\ub09c \ub2ec \uac00\uc7a5 \ub9ce\uc774 \ub85c\uadf8\uc778\uc744 \uc2dc\ub3c4\ud55c \uc0c1\uc704 5\uac1c IP \uc8fc\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE login_attempts (id INT, ip_address VARCHAR(255), attempt_time TIMESTAMP); INSERT INTO login_attempts (id, ip_address, attempt_time) VALUES (1, '192.168.1.1', '2022-01-02 12:30:00'), (2, '192.168.1.2', '2022-01-10 14:15:00'), (3, '192.168.1.3', '2022-01-05 09:20:00');", "output": "SELECT ip_address, COUNT(*) as count FROM login_attempts WHERE attempt_time >= DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL 1 MONTH) GROUP BY ip_address ORDER BY count DESC LIMIT 5;"}
{"input": " \ubbf8\uad6d \uc57c\uad6c\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud648\ub7f0\uc744 \uce5c \uc120\uc218\uc758 \uc21c\uc704\uc640 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE USBaseballPlayers (PlayerID INT, Name VARCHAR(50), Age INT, HomeRuns INT, Sport VARCHAR(20), Country VARCHAR(50)); INSERT INTO USBaseballPlayers (PlayerID, Name, Age, HomeRuns, Sport, Country) VALUES (1, 'Mike Trout', 30, 312, 'Baseball', 'USA'); INSERT INTO USBaseballPlayers (PlayerID, Name, Age, HomeRuns, Sport, Country) VALUES (2, 'Aaron Judge', 30, 201, 'Baseball', 'USA');", "output": "SELECT PlayerID, Name, HomeRuns, RANK() OVER (ORDER BY HomeRuns DESC) AS Ranking FROM USBaseballPlayers WHERE Sport = 'Baseball' AND Country = 'USA';"}
{"input": " \ube48\ub3c4\ubcc4\ub85c \uc0c1\uc704 3\uac00\uc9c0 \uc0ac\uc774\ubc84 \uc704\ud611\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CyberThreats (Threat VARCHAR(50), Frequency INT); INSERT INTO CyberThreats (Threat, Frequency) VALUES ('Phishing', 1500), ('Malware', 1200), ('Ransomware', 1000), ('Denial of Service', 800), ('Data Breach', 600);", "output": "SELECT Threat, Frequency, RANK() OVER (ORDER BY Frequency DESC) as Rank FROM CyberThreats WHERE Rank <= 3;"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ubc1c\uc0dd\ud55c \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9\uc758 \uc138\ubd80 \ub0b4\uc6a9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE brute_force_attacks (id INT, ip VARCHAR(255), timestamp TIMESTAMP); INSERT INTO brute_force_attacks (id, ip, timestamp) VALUES (1, '10.0.0.1', '2021-01-01 10:00:00'), (2, '10.0.0.2', '2021-01-01 11:00:00');", "output": "SELECT * FROM brute_force_attacks WHERE timestamp = (SELECT MAX(timestamp) FROM brute_force_attacks);"}
{"input": " \uac01 \ud53c\uace0\uc758 \uc0ac\uac74 \uc0ac\uac74 \uc21c\uc11c\ub294 \ud0c0\uc784\uc2a4\ud0ec\ud504\uc5d0 \ub530\ub77c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE defendant_events (id INT, defendant_id INT, event_type VARCHAR(255), timestamp TIMESTAMP); INSERT INTO defendant_events (id, defendant_id, event_type, timestamp) VALUES (1, 1, 'Arrest', '2022-01-01 10:00:00'); INSERT INTO defendant_events (id, defendant_id, event_type, timestamp) VALUES (2, 1, 'Arraignment', '2022-01-02 14:00:00');", "output": "SELECT defendant_id, event_type, timestamp, ROW_NUMBER() OVER(PARTITION BY defendant_id ORDER BY timestamp) as sequence FROM defendant_events;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uac00\uc2a4 \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc558\ub358 \uc0c1\uc704 3\uac1c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE contract_usage (contract_address TEXT, gas_used INTEGER, timestamp TIMESTAMP); INSERT INTO contract_usage (contract_address, gas_used, timestamp) VALUES ('0x1234567890abcdef', 25000, '2022-01-01 12:34:56'); INSERT INTO contract_usage (contract_address, gas_used, timestamp) VALUES ('0x9876543210fedcba', 30000, '2022-01-02 13:01:20');", "output": "SELECT contract_address, SUM(gas_used) as total_gas_used FROM contract_usage WHERE timestamp >= (SELECT timestamp FROM contract_usage ORDER BY timestamp DESC LIMIT 1) - INTERVAL '1 month' GROUP BY contract_address ORDER BY total_gas_used DESC LIMIT 3;"}
{"input": " \ub871\ube44\uce58 \ud56d\uad6c\uc5d0 \uc788\ub294 \"MSC Lucy\" \uc120\ubc15\uc758 \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipment (id INT PRIMARY KEY, cargo_id INT, vessel_id INT, port_id INT, FOREIGN KEY (cargo_id) REFERENCES Cargo(id), FOREIGN KEY (vessel_id) REFERENCES Vessel(id), FOREIGN KEY (port_id) REFERENCES Port(id)); CREATE TABLE Vessel (id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50), port_id INT, FOREIGN KEY (port_id) REFERENCES Port(id)); CREATE TABLE Cargo (id INT PRIMARY KEY, description VARCHAR(50), weight FLOAT);", "output": "SELECT C.weight FROM Shipment S JOIN Vessel V ON S.vessel_id = V.id JOIN Cargo C ON S.cargo_id = C.id WHERE V.name = 'MSC Lucy' AND S.port_id = (SELECT id FROM Port WHERE name = 'Long Beach');"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 '\ud658\uacbd' \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c '#sustainability' \ub610\ub294 '#climatechange' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c \uc218\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE posts (id INT, user_id INT, timestamp DATETIME, content TEXT, hashtags TEXT, network VARCHAR(255)); INSERT INTO posts (id, user_id, timestamp, content, hashtags, network) VALUES (6, 3, '2023-01-25 10:00:00', 'Reduce, reuse, recycle!', '#sustainability', 'environment'), (7, 4, '2023-02-10 15:00:00', 'Climate change is real!', '#climatechange', 'environment');", "output": "SELECT COUNT(*) FROM posts WHERE hashtags LIKE '%#sustainability%' OR hashtags LIKE '%#climatechange%' AND network = 'environment' AND timestamp >= NOW() - INTERVAL 30 DAY;"}
{"input": " \uc800\uc18c\ub4dd \uac00\uad6c\uc5d0 \ub300\ud574 \uc8fc\ubcc4\ub85c \uc2b9\uc778\ub41c \ubc95\ub960 \uc9c0\uc6d0 \uc2e0\uccad\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE legal_aid_applications (id INT, income_level VARCHAR(10), approved BOOLEAN, state VARCHAR(50));", "output": "SELECT state, COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY NULL) AS percentage_approved FROM legal_aid_applications WHERE income_level = 'low' AND approved = TRUE GROUP BY state;"}
{"input": " \uac01 \uc784\ubb34\uc5d0 \ubc30\uce58\ub41c \uc704\uc131 \uc218\uc640 \ud568\uaed8 \uc6b0\uc8fc \uc784\ubb34\uc640 \ubc1c\uc0ac \uc7a5\uc18c\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SpaceMissions (Mission VARCHAR(50), LaunchSite VARCHAR(50), Satellites INT); INSERT INTO SpaceMissions (Mission, LaunchSite, Satellites) VALUES ('STS-1', 'Kennedy Space Center', 2), ('STS-2', 'Kennedy Space Center', 0), ('Spacelab-1', 'Kennedy Space Center', 7);", "output": "SELECT Mission, LaunchSite, Satellites FROM SpaceMissions;"}
{"input": "healthcare_data'\uc758 \ucd5c\uc18c \uc758\ub8cc \uc804\ubb38\uac00 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA healthcare_data; CREATE TABLE professionals (id INT, name TEXT, location TEXT, professionals INT); INSERT INTO healthcare_data.professionals (id, name, location, professionals) VALUES (1, 'Hospital A', 'City A', 50), (2, 'Hospital B', 'City B', 75), (3, 'Hospital C', 'City C', 100), (4, 'Hospital D', 'City D', 125), (5, 'Hospital E', 'City E', 150);", "output": "SELECT MIN(professionals) FROM healthcare_data.professionals;"}
{"input": " \ucd1d \ud3d0\uae30\ubb3c \uae30\uc900\uc73c\ub85c \uc0c1\uc704 5\uac1c\uad6d\uc758 \uc6d4 \ud3c9\uade0 \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation (country VARCHAR(50), year INT, total_waste FLOAT); INSERT INTO waste_generation (country, year, total_waste) VALUES ('USA', 2020, 260), ('China', 2020, 240), ('India', 2020, 160), ('Germany', 2020, 120), ('Brazil', 2020, 100);", "output": "SELECT AVG(total_waste) FROM (SELECT country, total_waste FROM waste_generation WHERE country IN (SELECT country FROM (SELECT country, ROW_NUMBER() OVER (ORDER BY total_waste DESC) rn FROM waste_generation) t WHERE rn <= 5) ORDER BY total_waste DESC) t;"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac01 \uc57d\uad6d\uc5d0\uc11c \ud310\ub9e4\ub41c \ub3c5\ud2b9\ud55c \uade0\uc8fc\uc758 \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Dispensaries (DispensaryID INT, DispensaryName VARCHAR(50)); CREATE TABLE Strains (StrainID INT, StrainName VARCHAR(50)); CREATE TABLE Sales (SaleID INT, DispensaryID INT, StrainID INT, QuantitySold INT, SaleDate DATE);", "output": "SELECT DispensaryID, COUNT(DISTINCT StrainID) AS UniqueStrainsSold FROM Sales S JOIN Dispensaries D ON S.DispensaryID = D.DispensaryID JOIN Strains ST ON S.StrainID = ST.StrainID WHERE SaleDate >= DATEADD(day, -7, GETDATE()) GROUP BY DispensaryID;"}
{"input": " \uc774\uc9d1\ud2b8 \ubc1c\uad74 \ud604\uc7a5\uc744 \uc704\ud574 \uc9c4\ud589 \uc911\uc778 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc640 \uc790\uae08 \ucd9c\ucc98\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExcavationSite (SiteID INT, SiteName VARCHAR(100), Country VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO ExcavationSite (SiteID, SiteName, Country, StartDate, EndDate) VALUES (5, 'Saqqara', 'Egypt', '3200-01-01', '1964-07-01'); CREATE TABLE ResearchProject (ProjectID INT, ProjectName VARCHAR(100), SiteID INT, StartDate DATE, EndDate DATE); INSERT INTO ResearchProject (ProjectID, ProjectName, SiteID, StartDate, EndDate) VALUES (5, 'Saqqara Archaeological Project', 5, '2021-01-01', '2023-12-31'); CREATE TABLE FundingSource (FundingSourceID INT, ProjectID INT, SourceName VARCHAR(100), Amount DECIMAL(10,2)); INSERT INTO FundingSource (FundingSourceID, ProjectID, SourceName, Amount) VALUES (5, 5, 'Egyptian Ministry of Antiquities', 200000);", "output": "SELECT rp.ProjectName, e.SiteName, f.SourceName, f.Amount FROM ResearchProject rp JOIN ExcavationSite e ON rp.SiteID = e.SiteID JOIN FundingSource f ON rp.ProjectID = f.ProjectID WHERE e.Country = 'Egypt' AND rp.EndDate >= CURDATE();"}
{"input": " \ub3c4\uad6c\ubcf4\ub2e4 \ub3c4\uc790\uae30\uac00 \ub354 \ub9ce\uc740 \uc0ac\uc774\ud2b8\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artifacts (ArtifactID INT, ArtifactType VARCHAR(50), Quantity INT, SiteID INT); INSERT INTO Artifacts (ArtifactID, ArtifactType, Quantity, SiteID) VALUES (1, 'Pottery', 25, 1), (2, 'Tools', 12, 1), (3, 'Pottery', 30, 2), (4, 'Tools', 18, 2), (5, 'Pottery', 22, 3), (6, 'Tools', 15, 3);", "output": "SELECT SiteID FROM (SELECT ArtifactType, SiteID, Quantity, SUM(Quantity) OVER (PARTITION BY ArtifactType) AS TotalQuantity FROM Artifacts) AS Subquery WHERE ArtifactType = 'Pottery' AND TotalQuantity > (SELECT SUM(Quantity) FROM Artifacts WHERE ArtifactType = 'Tools' AND SiteID = Subquery.SiteID);"}
{"input": " 2015\ub144 \uc774\ud6c4 '\uce98\ub9ac\ud3ec\ub2c8\uc544'\uc5d0\uc11c \ube48\ub3c4\uac00 \uac00\uc7a5 \ub0ae\uc740 \uc7a5\uc560 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE disability_types (disability_id INT, disability_type VARCHAR(50), state VARCHAR(50), frequency INT, start_year INT); INSERT INTO disability_types (disability_id, disability_type, state, frequency, start_year) VALUES (1, 'Mobility', 'California', 3000, 2015), (2, 'Vision', 'California', 2000, 2015), (3, 'Hearing', 'California', 1500, 2015);", "output": "SELECT disability_type FROM (SELECT disability_type, ROW_NUMBER() OVER (PARTITION BY state ORDER BY frequency ASC) as rn FROM disability_types WHERE state = 'California' AND start_year >= 2015) t WHERE rn = 1;"}
{"input": " \uc544\ub9c8\uc874 \uc720\uc5ed\uc5d0 \uc788\ub294 \ubcf4\ud638\ub9bc\uc758 \uc774\ub984\uacfc \uba74\uc801\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE ProtectedForests (id INT, name VARCHAR(255), region VARCHAR(255), area FLOAT); INSERT INTO ProtectedForests (id, name, region, area) VALUES (1, 'Amazon Rainforest', 'Amazon Basin', 7000000);", "output": "SELECT name, area FROM ProtectedForests WHERE region = 'Amazon Basin';"}
{"input": " \uc720\uae30\ub18d \uacfc\uc77c\uacfc \ucc44\uc18c\ub97c \uacf5\uae09\ud558\ub294 \ub18d\ubd80\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Farmers(FarmerID INT, Name VARCHAR(50), Organic BOOLEAN);CREATE TABLE FruitsVeggies(FruitVeggieID INT, FarmerID INT, Product VARCHAR(50), Quantity INT, Organic BOOLEAN);INSERT INTO Farmers VALUES (1, 'Green Acres', TRUE), (2, 'Sunny Fields', FALSE), (3, 'Organic Orchard', TRUE);INSERT INTO FruitsVeggies VALUES (1, 1, 'Apples', 300, TRUE), (2, 1, 'Carrots', 400, TRUE), (3, 2, 'Bananas', 500, FALSE);", "output": "SELECT Name FROM Farmers WHERE FarmerID IN (SELECT FarmerID FROM FruitsVeggies WHERE Organic = TRUE);"}
{"input": "\uc9c0\ub09c 7\ub144 \ub3d9\uc548 \uc544\ud504\ub9ac\uce74\uc5d0\uc11c \ud3c9\ud654 \uc720\uc9c0 \ud65c\ub3d9\uc5d0 \ucc38\uc5ec\ud55c \uad70\uc6a9 \ucc28\ub7c9\uc758 \ucd1d \ub300\uc218\ub294 \uad6d\uac00\ubcc4\ub85c \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MilitaryVehicles (ID INT, VehicleType TEXT, Operation TEXT, Country TEXT, Year INT); INSERT INTO MilitaryVehicles VALUES (1, 'Armored Personnel Carrier', 'Operation 1', 'Egypt', 2015);", "output": "SELECT h.Country, COUNT(*) as TotalVehicles FROM MilitaryVehicles m JOIN (SELECT Operation, Country, Year FROM MilitaryVehicles WHERE Operation LIKE '%Africa%' AND Year BETWEEN DATEADD(year, -7, GETDATE()) AND GETDATE()) h ON m.Country = h.Country AND m.Year = h.Year GROUP BY h.Country;"}
{"input": " \ubd81\uadf9\ud574\uc640 \ub0a8\uadf9\ud574\uc5d0\uc11c \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed \uae4a\uc774\uac00 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\uc640 \uac00\uc7a5 \ub0ae\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name TEXT, depth FLOAT, country TEXT, ocean TEXT); INSERT INTO marine_protected_areas (name, depth, country, ocean) VALUES ('Nordic Seas', 3500.0, 'Norway', 'Arctic'), ('Fram Strait', 4000.0, 'Russia', 'Arctic'), ('Amundsen Sea', 5000.0, 'Chile', 'Antarctic'), ('Bellingshausen Sea', 6000.0, 'Argentina', 'Antarctic');", "output": "SELECT MAX(depth) FROM marine_protected_areas WHERE ocean = 'Arctic' UNION ALL SELECT MIN(depth) FROM marine_protected_areas WHERE ocean = 'Antarctic';"}
{"input": " '\ubc8c\ud06c\uc120' \uc720\ud615 \uc120\ubc15\uc758 \uacbd\uc6b0, 2022\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \ud654\ubb3c \uc911\ub7c9\uc744 \ucc98\ub9ac\ud55c \uc0c1\uc704 5\uac1c \ud56d\uad6c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Ports (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE Vessels (vessel_id INT, vessel_name VARCHAR(50), vessel_type VARCHAR(50)); CREATE TABLE Cargo (cargo_id INT, port_id INT, vessel_id INT, cargo_weight INT, cargo_date DATE);", "output": "SELECT p.port_name, SUM(c.cargo_weight) as total_weight  FROM Cargo c JOIN Ports p ON c.port_id = p.port_id JOIN Vessels v ON c.vessel_id = v.vessel_id WHERE v.vessel_type = 'Bulk Carrier' AND c.cargo_date >= '2022-01-01' GROUP BY p.port_name ORDER BY total_weight DESC LIMIT 5;"}
{"input": " \uc544\uc2dc\uc544\uc758 \uc7a5\ub974\ubcc4 \uc791\ud488 \ud3c9\uade0 \ud310\ub9e4 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc774\uba70, \ud3c9\uade0\uc774 \uac00\uc7a5 \ub192\uc740 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artwork (ArtworkID INT, Genre TEXT, SellingPrice DECIMAL); INSERT INTO Artwork (ArtworkID, Genre, SellingPrice) VALUES (1, 'Impressionism', 200000), (2, 'Surrealism', 300000);", "output": "SELECT Genre, AVG(SellingPrice) as AvgSellingPrice FROM Artwork WHERE Continent = 'Asia' GROUP BY Genre ORDER BY AvgSellingPrice DESC;"}
{"input": " \ubaa8\ub4e0 \uc9c0\uc5ed\uc758 \uc81c\uc870\uc5c5\uc758 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Waste_Generation_All (industry VARCHAR(20), region VARCHAR(20), waste_quantity INT); INSERT INTO Waste_Generation_All (industry, region, waste_quantity) VALUES ('Manufacturing', 'North', 1000), ('Manufacturing', 'South', 1500), ('Retail', 'North', 500), ('Retail', 'East', 700), ('Agriculture', 'West', 2000), ('Manufacturing', 'West', 2500);", "output": "SELECT industry, SUM(waste_quantity) FROM Waste_Generation_All WHERE industry = 'Manufacturing' GROUP BY industry;"}
{"input": " 2022\ub144 2\uc6d4\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales_data_4 (sale_id INT, location_id INT, item_id INT, quantity_sold INT, sale_price DECIMAL(5, 2), sale_date DATE); INSERT INTO sales_data_4 (sale_id, location_id, item_id, quantity_sold, sale_price, sale_date) VALUES (1, 1, 1, 5, 15.99, '2022-02-05'), (2, 2, 2, 10, 12.99, '2022-02-07');", "output": "SELECT SUM(quantity_sold * sale_price) FROM sales_data_4 WHERE EXTRACT(MONTH FROM sale_date) = 2 AND EXTRACT(YEAR FROM sale_date) = 2022;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \ub3d9\ubb3c \uac1c\uccb4\uc218\uac00 \uac10\uc18c\ud558\ub294 \ucd94\uc138\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE animal_population (year INT, animal_name VARCHAR(255), population INT); INSERT INTO animal_population (year, animal_name, population) VALUES (2019, 'Tiger', 200), (2020, 'Tiger', 180), (2021, 'Tiger', 160), (2019, 'Elephant', 300), (2020, 'Elephant', 280), (2021, 'Elephant', 260), (2019, 'Crane', 150), (2020, 'Crane', 140), (2021, 'Crane', 130);", "output": "SELECT animal_name, population, LAG(population) OVER (PARTITION BY animal_name ORDER BY year) as previous_population FROM animal_population WHERE year > 2019 AND population < previous_population;"}
{"input": " \ud14d\uc0ac\uc2a4\uc5d0\uc11c \uc218\ud589\ub418\ub294 \ub3c4\ub85c \uc720\uc9c0 \uad00\ub9ac \ud65c\ub3d9\uc758 \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Infrastructure (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); CREATE TABLE Maintenance (id INT, infrastructure_id INT, maintenance_date DATE, maintenance_type VARCHAR(255)); INSERT INTO Infrastructure (id, name, type, location) VALUES (1, 'Road A', 'Road', 'Texas'); INSERT INTO Infrastructure (id, name, type, location) VALUES (2, 'Bridge B', 'Bridge', 'California'); INSERT INTO Maintenance (id, infrastructure_id, maintenance_date, maintenance_type) VALUES (1, 1, '2022-01-01', 'Road Maintenance'); INSERT INTO Maintenance (id, infrastructure_id, maintenance_date, maintenance_type) VALUES (2, 1, '2022-02-01', 'Inspection');", "output": "SELECT COUNT(*) FROM Maintenance WHERE maintenance_type = 'Road Maintenance' AND infrastructure_id IN (SELECT id FROM Infrastructure WHERE location = 'Texas' AND type = 'Road');"}
{"input": " \uad6d\uac00\ubcc4 \uc9c0\uc5ed\uacbd\uc81c\uc801 \uc601\ud5a5\uc744 \uacc4\uc0b0\ud574 \ubcfc\uae4c\uc694?", "context": "CREATE TABLE local_businesses (business_id INT, business_name VARCHAR(50), country VARCHAR(30)); CREATE TABLE hotel_business_partnerships (partnership_id INT, hotel_id INT, business_id INT); INSERT INTO local_businesses (business_id, business_name, country) VALUES (1, 'Green Groceries', 'USA'), (2, 'Eco-friendly Tours', 'Brazil'), (3, 'Cultural Art Gallery', 'Mexico'), (4, 'Sustainable Fashion', 'Canada'); INSERT INTO hotel_business_partnerships (partnership_id, hotel_id, business_id) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 3), (4, 3, 4);", "output": "SELECT country, SUM(price) FROM local_businesses JOIN hotel_business_partnerships ON local_businesses.business_id = hotel_business_partnerships.business_id JOIN hotel_rooms ON hotel_business_partnerships.hotel_id = hotel_rooms.hotel_id WHERE hotel_rooms.is_eco_friendly = TRUE GROUP BY country;"}
{"input": " '\ub0a8\uc544\uba54\ub9ac\uce74' \uc9c0\uc5ed\uc758 '\uc2e0\uc131\ud55c \uc74c\uc2dd \uc758\uc2dd'\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uacf5\ub3d9\uccb4 \uad6c\uc131\uc6d0\uc774 \uc788\ub294 \ud1a0\ucc29 \uc74c\uc2dd \uc2dc\uc2a4\ud15c\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE indigenous_food_systems_sa (name TEXT, region TEXT, community_members INT); INSERT INTO indigenous_food_systems_sa (name, region, community_members) VALUES ('Sacred Food Ceremony', 'South America', 100); INSERT INTO indigenous_food_systems_sa (name, region, community_members) VALUES ('Feast of the Dead', 'South America', 120);", "output": "SELECT name FROM indigenous_food_systems_sa WHERE region = 'South America' AND community_members > (SELECT community_members FROM indigenous_food_systems_sa WHERE name = 'Sacred Food Ceremony');"}
{"input": " \uc81c\uc870\uc5c5\uccb4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \ub7ec\uc2dc\uc544\uc640 \uc911\uad6d \ud56d\uacf5\uae30\uc758 \uac01 \ud56d\uacf5\uae30 \ubaa8\ub378\uc5d0 \ub300\ud55c \ud3c9\uade0 \ube44\ud589 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE russian_fleet(model VARCHAR(255), flight_time INT);CREATE TABLE chinese_fleet(model VARCHAR(255), flight_time INT);", "output": "SELECT 'Russian' as Manufacturer, AVG(flight_time) as Avg_Flight_Time FROM russian_fleet GROUP BY Manufacturer UNION ALL SELECT 'Chinese' as Manufacturer, AVG(flight_time) as Avg_Flight_Time FROM chinese_fleet GROUP BY Manufacturer;"}
{"input": " \ud55c \uc2dc\uc98c \ub3d9\uc548 \uac01 \ud300\uc774 \ub4dd\uc810\ud55c \ucd1d \ub4dd\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Team (TeamID int, TeamName varchar(50), Points int); CREATE TABLE Match (MatchID int, HomeTeamID int, AwayTeamID int, HomeTeamPoints int, AwayTeamPoints int);  INSERT INTO Team (TeamID, TeamName, Points) VALUES (1, 'Barcelona', 0), (2, 'Real Madrid', 0); INSERT INTO Match (MatchID, HomeTeamID, AwayTeamID, HomeTeamPoints, AwayTeamPoints) VALUES (1, 1, 2, 3, 1), (2, 2, 1, 2, 2), (3, 1, 2, 1, 1), (4, 2, 1, 3, 0);", "output": "SELECT COALESCE(t.TeamName, ht.TeamName) AS TeamName, SUM(COALESCE(ht.Points, 0)) + SUM(COALESCE(at.Points, 0)) AS TotalPoints FROM Team t RIGHT JOIN ( SELECT HomeTeamID, HomeTeamPoints AS Points, TeamName FROM Team UNION ALL SELECT AwayTeamID, AwayTeamPoints, TeamName FROM Team ) ht ON t.TeamID = ht.HomeTeamID RIGHT JOIN ( SELECT HomeTeamID, AwayTeamPoints AS Points, TeamName FROM Team UNION ALL SELECT AwayTeamID, HomeTeamPoints, TeamName FROM Team ) at ON t.TeamID = at.AwayTeamID GROUP BY t.TeamID, t.TeamName;"}
{"input": " \"\ud615\uc0ac_\ubc29\uc5b4\" \ubd80\uc11c\uc758 \uac01 \ubcc0\ud638\uc0ac\uac00 \uc0ac\uac74\uc744 \uc885\uacb0\ud558\ub294 \ub370 \uc18c\uc694\ub418\ub294 \ud3c9\uade0 \uae30\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO attorneys (attorney_id, name, department) VALUES (1, 'John Doe', 'criminal_defense'); INSERT INTO attorneys (attorney_id, name, department) VALUES (2, 'Jane Smith', 'criminal_defense'); CREATE TABLE cases (case_id INT, attorney_id INT, status VARCHAR(50), duration INT); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (1, 1, 'closed', 25); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (2, 1, 'closed', 30); INSERT INTO cases (case_id, attorney_id, status, duration) VALUES (3, 2, 'closed', 40);", "output": "SELECT attorney_id, MEDIAN(duration) OVER (PARTITION BY attorney_id) as median_duration FROM cases WHERE status = 'closed';"}
{"input": " 2022\ub144\uc5d0 \ubc1c\ub9e4\ub41c \uc568\ubc94\uc774 \uc5c6\ub294 \uc7a5\ub974\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Genres (Genre VARCHAR(20)); CREATE TABLE Albums (AlbumID INT, Genre VARCHAR(20), ReleaseYear INT); INSERT INTO Genres VALUES ('Rock'), ('Pop'), ('Jazz'), ('Blues'), ('Folk'), ('Country'); INSERT INTO Albums VALUES (1, 'Rock', 2022), (2, 'Jazz', 2020), (3, 'Blues', 2022), (4, 'Folk', 2022), (5, 'Pop', 2022), (6, 'Rock', 2022), (7, 'Jazz', 2021), (8, 'Blues', 2022), (9, 'Folk', 2022), (10, 'Pop', 2022), (11, 'Rock', 2022), (12, 'Country', 2020);", "output": "SELECT Genre FROM Genres WHERE Genre NOT IN (SELECT Genre FROM Albums WHERE ReleaseYear = 2022);"}
{"input": " \uac74\ucd95 \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud55c \ub274\uc695 \uc2dc\uc758 LEED \uc778\uc99d \uac74\ubb3c\uc758 \ud3c9\uade0 \uba74\uc801\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE leed_buildings (id INT, building_name VARCHAR(50), square_footage FLOAT, construction_type VARCHAR(50), city VARCHAR(50), state VARCHAR(50)); INSERT INTO leed_buildings (id, building_name, square_footage, construction_type, city, state) VALUES (1, 'GreenHQ', 120000, 'Steel', 'New York', 'NY'), (2, 'EcoTower', 200000, 'Concrete', 'New York', 'NY'), (3, 'SustainableSpire', 180000, 'Wood', 'New York', 'NY');", "output": "SELECT construction_type, AVG(square_footage) as avg_square_footage FROM leed_buildings WHERE city = 'New York' AND state = 'NY' AND construction_type IN ('Steel', 'Concrete', 'Wood') GROUP BY construction_type;"}
{"input": "2021\ub144 \uc0c1\ubc18\uae30 \uae30\ubd80\uc790\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID INT, Name TEXT, TotalDonation DECIMAL(10,2)); INSERT INTO Donors VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 7000.00), (3, 'Mike Johnson', 6000.00);", "output": "SELECT Name, SUM(TotalDonation) FROM Donors WHERE MONTH(DonationDate) BETWEEN 1 AND 6 GROUP BY Name;"}
{"input": " \uc720\ub2c8\uc5b8\uc744 \uc774\uc6a9\ud55c '\ub274\uc695'\uacfc '\ub274\uc800\uc9c0' \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uac74\uc124\ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ProjectsNY (name TEXT, state TEXT, cost INTEGER); INSERT INTO ProjectsNY (name, state, cost) VALUES ('Highway ExpansionNY', 'New York', 1500000); CREATE TABLE ProjectsNJ (name TEXT, state TEXT, cost INTEGER); INSERT INTO ProjectsNJ (name, state, cost) VALUES ('Bridge ReplacementNJ', 'New Jersey', 2000000);", "output": "SELECT cost FROM ProjectsNY WHERE state = 'New York' UNION SELECT cost FROM ProjectsNJ WHERE state = 'New Jersey'"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \uc720\uae30\ub18d \ub300\ub9c8\ucd08 \uc81c\ud488\uc744 \ud310\ub9e4\ud558\ub294 \uc57d\uad6d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE DispensaryProducts (dispensary VARCHAR(255), city VARCHAR(255), organic BOOLEAN); INSERT INTO DispensaryProducts (dispensary, city, organic) VALUES ('Dispensary A', 'Los Angeles', TRUE), ('Dispensary A', 'Denver', FALSE), ('Dispensary B', 'Los Angeles', TRUE), ('Dispensary B', 'Denver', TRUE);", "output": "SELECT city, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM DispensaryProducts WHERE organic = TRUE) as percentage FROM DispensaryProducts WHERE organic = TRUE GROUP BY city;"}
{"input": " \uc6b0\uc8fc \uc655\ubcf5\uc120\uacfc \uad6d\uc81c \uc6b0\uc8fc \uc815\uac70\uc7a5\uc5d0 \ubaa8\ub450 \ud0d1\uc2b9\ud55c \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ShuttleAstronauts (AstronautName TEXT, Missions INTEGER);CREATE TABLE ISSAstronauts (AstronautName TEXT, Missions INTEGER);", "output": "SELECT AstronautName FROM ShuttleAstronauts WHERE Missions > 1 INTERSECT SELECT AstronautName FROM ISSAstronauts WHERE Missions > 1;"}
{"input": " \ub18d\uc5c5 \ubd80\ubb38\uc5d0\uc11c \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\uc758 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE emissions (city VARCHAR(20), sector VARCHAR(20), co2_emissions INT); INSERT INTO emissions (city, sector, co2_emissions) VALUES ('CityA', 'agriculture', 1200), ('CityB', 'agriculture', 1500), ('CityC', 'agriculture', 800), ('CityD', 'agriculture', 2000), ('CityE', 'agriculture', 1700), ('CityF', 'agriculture', 900);", "output": "SELECT AVG(co2_emissions) FROM (SELECT * FROM emissions WHERE sector = 'agriculture' ORDER BY co2_emissions DESC LIMIT 5);"}
{"input": " \uce60\ub808 \ubc1c\ud30c\ub77c\uc774\uc18c \ud56d\uc5d0 \uc120\uc801\ub41c \ubaa8\ub4e0 \ud654\ubb3c\uc758 \ubb34\uac8c\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT PRIMARY KEY, name VARCHAR(255)); CREATE TABLE cargo (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, weight FLOAT, volume FLOAT, port_id INT, vessel_id INT, FOREIGN KEY (port_id) REFERENCES ports(id), FOREIGN KEY (vessel_id) REFERENCES vessels(id));", "output": "SELECT SUM(weight) FROM cargo WHERE port_id = (SELECT id FROM ports WHERE name = 'Valpara\u00edso');"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc560\ub9ac\uc870\ub098\uc758 \uc2dc\uace8 \uc9c4\ub8cc\uc18c\ub97c \ubc29\ubb38\ud558\uc9c0 \uc54a\uc740 \ud658\uc790\uc758 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE patient_visits (patient_id INT, clinic_id INT, last_visit_date DATE); INSERT INTO patient_visits (patient_id, clinic_id, last_visit_date) VALUES (1, 4, '2022-06-01'), (2, 5, '2022-01-01'), (3, 6, '2022-07-03'), (4, 4, '2022-12-10');", "output": "DELETE FROM patient_visits WHERE patient_id IN (SELECT patient_id FROM patient_visits p JOIN (SELECT patient_id, MAX(last_visit_date) AS max_date FROM patient_visits WHERE clinic_id IN (SELECT clinic_id FROM rural_clinics WHERE state = 'Arizona') GROUP BY patient_id) t ON p.patient_id = t.patient_id AND p.last_visit_date < t.max_date - INTERVAL '6 month');"}
{"input": " \uc9c0\ub09c \ub2ec \ud2b9\uc815 \uad6d\uac00\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \ud314\ub85c\uc6cc\ub97c \uc5bb\uc740 \uc0c1\uc704 3\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), country VARCHAR(255), follower_count INT); INSERT INTO users (id, name, country, follower_count) VALUES (1, 'Alice', 'USA', 1000), (2, 'Bob', 'Canada', 2000), (3, 'Charlie', 'USA', 1500);", "output": "SELECT name, follower_count, (follower_count - (SELECT follower_count FROM users WHERE id = u.id AND country = 'USA' AND DATE(date_added) < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH))) AS follower_gain FROM users u WHERE country = 'USA' ORDER BY follower_gain DESC, follower_count DESC LIMIT 3;"}
{"input": " \uc720\uc0c9 \uc778\uc885\uc774 \uac10\ub3c5\ud55c \uc601\ud654\uc758 \ucf58\ud150\uce20 \uce74\ud14c\uace0\ub9ac \ubd84\ud3ec\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE ContentCategories (MovieID INT, ContentCategory TEXT); INSERT INTO ContentCategories (MovieID, ContentCategory) VALUES (1, 'Drama'), (1, 'Action'), (2, 'Comedy'); CREATE TABLE Movies (MovieID INT, DirectorID INT); INSERT INTO Movies (MovieID, DirectorID) VALUES (1, 2), (2, 3); CREATE TABLE Directors (DirectorID INT, DirectorName TEXT, Race TEXT); INSERT INTO Directors (DirectorID, DirectorName, Race) VALUES (2, 'Ava DuVernay', 'African-American'), (3, 'Alfonso Cuar\u00f3n', 'Hispanic');", "output": "SELECT ContentCategory, COUNT(*) as Count FROM ContentCategories JOIN Movies ON ContentCategories.MovieID = Movies.MovieID JOIN Directors ON Movies.DirectorID = Directors.DirectorID WHERE Directors.Race != 'Caucasian' GROUP BY ContentCategory;"}
{"input": " \uac00\uaca9\uc774 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud488\ubaa9\uc758 \uc911\uac04\uac12\ubcf4\ub2e4 \ub192\uc740 \ubaa8\ub4e0 \ud488\ubaa9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE inventory (id INT, item_name VARCHAR(20), price DECIMAL(5,2), is_sustainable BOOLEAN); INSERT INTO inventory (id, item_name, price, is_sustainable) VALUES (1, 't-shirt', 20.99, false), (2, 'blouse', 45.50, true), (3, 'jeans', 39.99, true);", "output": "SELECT * FROM inventory WHERE is_sustainable = true AND price > (SELECT AVG(price) FROM inventory WHERE is_sustainable = true);"}
{"input": " \uacf5\ub3d9 \uc18c\uc720\uc790\uac00 1\uba85 \uc774\uc0c1\uc778 \uc560\ud2c0\ub79c\ud0c0\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \ub3c4\uc2dc\ud654 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \ubd80\ub3d9\uc0b0\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE property_prices (property_id INT, city VARCHAR(50), price INT); CREATE TABLE sustainable_urbanism (property_id INT, sustainable_project BOOLEAN); CREATE TABLE co_ownership (property_id INT, co_owner_count INT); INSERT INTO property_prices (property_id, city, price) VALUES (1, 'Atlanta', 500000), (2, 'Portland', 400000), (3, 'Atlanta', 600000), (4, 'Seattle', 800000); INSERT INTO sustainable_urbanism (property_id) VALUES (1), (3); INSERT INTO co_ownership (property_id, co_owner_count) VALUES (1, 2), (3, 3);", "output": "SELECT AVG(price) FROM property_prices p JOIN sustainable_urbanism s ON p.property_id = s.property_id JOIN co_ownership c ON p.property_id = c.property_id WHERE p.city = 'Atlanta' AND c.co_owner_count > 1;"}
{"input": " \ud604\uc7ac \ubaa9\uc131 \uc8fc\uc704 \uada4\ub3c4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc6b0\uc8fc\uc120\uc5d0 \uc788\ub294 \uacfc\ud559 \uc7a5\ube44\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uadf8 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE jupiter_spacecraft(id INT, spacecraft_name VARCHAR(255), in_orbit BOOLEAN, number_of_instruments INT);", "output": "SELECT spacecraft_name, number_of_instruments FROM jupiter_spacecraft WHERE in_orbit = TRUE; SELECT SUM(number_of_instruments) FROM jupiter_spacecraft WHERE in_orbit = TRUE;"}
{"input": " Contractor_info \ubcf4\uae30\uc5d0\uc11c \ubaa8\ub4e0 \uace0\uc720 \ubc29\uc0b0\uc5c5\uccb4 \uc774\ub984\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE VIEW contractor_info AS SELECT contractor_name FROM defense_contracts;", "output": "SELECT DISTINCT contractor_name FROM contractor_info;"}
{"input": " 2021\ub144\uc5d0 \uac8c\uc2dc\ud558\uc9c0 \uc54a\uc740 \ub3c5\uc77c \uc0ac\uc6a9\uc790\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name VARCHAR(255), country VARCHAR(255), created_at TIMESTAMP); CREATE TABLE posts (id INT, user_id INT, content TEXT, created_at TIMESTAMP);", "output": "DELETE FROM users WHERE users.id IN (SELECT posts.user_id FROM posts JOIN users ON posts.user_id = users.id WHERE YEAR(posts.created_at) <> 2021) AND users.country = 'Germany';"}
{"input": " 2010\ub144 1\uc6d4 1\uc77c \uc774\ud6c4 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uac1c\ubc1c\ub418\uac70\ub098 \ubc30\uce58\ub41c \ubaa8\ub4e0 \uad70\uc0ac \uae30\uc220\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE country (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE region (id INT PRIMARY KEY, name VARCHAR(255));CREATE TABLE tech (id INT PRIMARY KEY, name VARCHAR(255), start_date DATE, country_id INT); INSERT INTO country (id, name) VALUES (1, 'Japan'), (2, 'Australia'), (3, 'South Korea'); INSERT INTO region (id, name) VALUES (1, 'Pacific'); INSERT INTO tech (id, name, start_date, country_id) VALUES (1, 'Stealth Technology', '2012-01-01', 1), (2, 'Hypersonic Missiles', '2015-01-01', 2), (3, 'Cyber Warfare Systems', '2011-01-01', 3);", "output": "SELECT t.name as tech_name, c.name as country_name FROM tech t INNER JOIN country c ON t.country_id = c.id INNER JOIN region r ON c.region_id = r.id WHERE r.name = 'Pacific' AND t.start_date > '2010-01-01';"}
{"input": "\uac01 \uc694\uc77c\uc5d0 'Boston Globe'\uc640 'Chicago Tribune'\uc5d0 \uac8c\uc7ac\ub41c \uae30\uc0ac \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE BG_Articles(id INT, title VARCHAR(50), publication DATE, category VARCHAR(20));CREATE TABLE CT_Articles(id INT, title VARCHAR(50), publication DATE, category VARCHAR(20));", "output": "SELECT DATEPART(dw, publication) AS DayOfWeek, COUNT(*) FROM BG_Articles WHERE publication IS NOT NULL GROUP BY DATEPART(dw, publication) UNION ALL SELECT DATEPART(dw, publication) AS DayOfWeek, COUNT(*) FROM CT_Articles WHERE publication IS NOT NULL GROUP BY DATEPART(dw, publication);"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uc608\uc220 \uacf5\uc5f0 \ubc0f \uc9c0\uc5ed \uc0ac\ud68c \ucc38\uc5ec \ud589\uc0ac \uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE CityData (City VARCHAR(20), ArtPerformances INT, CommunityEvents INT); INSERT INTO CityData VALUES ('Sydney', 5, 3), ('Melbourne', 2, 1); CREATE VIEW ArtPerformanceCount AS SELECT City, COUNT(*) AS ArtPerformances FROM CityPerformances GROUP BY City; CREATE VIEW CommunityEventCount AS SELECT City, COUNT(*) AS CommunityEvents FROM CityEngagement GROUP BY City;", "output": "SELECT d.City, a.ArtPerformances, e.CommunityEvents FROM CityData d JOIN ArtPerformanceCount a ON d.City = a.City JOIN CommunityEventCount e ON d.City = e.City;"}
{"input": " \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc758\ub958 \ud488\ubaa9\uc5d0\ub294 \uc5b4\ub5a4 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c \uc720\ud615\uc774 \uc0ac\uc6a9\ub429\ub2c8\uae4c?", "context": "CREATE TABLE Items (ItemID INT, Item TEXT, FabricID INT); INSERT INTO Items (ItemID, Item, FabricID) VALUES (1, 'T-Shirt', 1), (2, 'Pants', 2), (3, 'Jacket', 3), (4, 'Hat', 3);", "output": "SELECT Fabrics.FabricName FROM Fabrics INNER JOIN Items ON Fabrics.FabricID = Items.FabricID WHERE Items.Item IN (SELECT Item FROM Sales GROUP BY Item ORDER BY COUNT(*) DESC LIMIT 1);"}
{"input": " \uc811\uadfc\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uae30\uc220\uc758 \uc774\ub984\uacfc \uc811\uadfc\uc131 \uc810\uc218\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE tech_accessibility (id INT, name VARCHAR(50), accessibility_score DECIMAL(3,2)); INSERT INTO tech_accessibility (id, name, accessibility_score) VALUES (1, 'Tech1', 3.5); INSERT INTO tech_accessibility (id, name, accessibility_score) VALUES (2, 'Tech2', 2.8);", "output": "SELECT name, accessibility_score, RANK() OVER (ORDER BY accessibility_score) AS rank FROM tech_accessibility;"}
{"input": " \ubbf8\uad6d \uac1c\uc778\uc758 \ud3c9\uade0 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name TEXT, country TEXT, donation_amount FLOAT); INSERT INTO donors (id, name, country, donation_amount) VALUES (1, 'John Doe', 'USA', 500.00), (2, 'Jane Smith', 'Canada', 750.00);", "output": "SELECT AVG(donation_amount) FROM donors WHERE country = 'USA';"}
{"input": " \ube0c\ub77c\uc9c8 \uc232\uc758 \ucd5c\ub300 \uba74\uc801\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Forests (id INT, name VARCHAR(50), hectares FLOAT, country VARCHAR(50)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Amazon Rainforest', 55000000.0, 'Brazil'); CREATE TABLE Forest_Hectares (id INT, forest_id INT, hectares FLOAT); INSERT INTO Forest_Hectares (id, forest_id, hectares) VALUES (1, 1, 55000000.0);", "output": "SELECT MAX(hectares) FROM Forest_Hectares WHERE forest_id IN (SELECT id FROM Forests WHERE country = 'Brazil');"}
{"input": " \uacf5\uae09\uc5c5\uccb4 \uc720\ud615 \ubc0f \ub9c8\uc9c0\ub9c9 \uac80\uc0ac \ub0a0\uc9dc\uc640 \ud568\uaed8 \uac01 \uacf5\uae09\uc5c5\uccb4\uc758 \uc724\ub9ac\uc801 \ub178\ub3d9 \uad00\ud589 \uc704\ubc18 \uac74\uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE suppliers (supplier_id INT, supplier_type VARCHAR(255));CREATE TABLE violations (violation_id INT, violation_count INT, FK_supplier_id REFERENCES suppliers(supplier_id));CREATE TABLE inspections (inspection_id INT, last_inspection_date DATE, FK_supplier_id REFERENCES suppliers(supplier_id));", "output": "SELECT s.supplier_type, v.violation_count, i.last_inspection_date FROM suppliers s JOIN violations v ON s.supplier_id = v.supplier_id JOIN inspections i ON s.supplier_id = i.supplier_id GROUP BY s.supplier_id, v.violation_count, i.last_inspection_date;"}
{"input": " \uac00\uc0c1 \ud22c\uc5b4\ub098 \uc9c0\uc5ed \ucd95\uc81c\uc5d0 \ucc38\uc5ec\ud55c \uc801\uc774 \uc788\ub294 \ud638\ud154\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HotelBookings (booking_id INT, hotel_id INT, guest_name VARCHAR(50), checkin_date DATE, checkout_date DATE); INSERT INTO HotelBookings (booking_id, hotel_id, guest_name, checkin_date, checkout_date) VALUES (1, 101, 'Alex', '2022-05-01', '2022-05-05'); CREATE TABLE VirtualTours (tour_id INT, location VARCHAR(50), tour_name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO VirtualTours (tour_id, location, tour_name, start_date, end_date) VALUES (1, 'Barcelona', 'Historic Tour', '2022-01-01', '2022-12-31'); CREATE TABLE LocalFestivals (festival_id INT, location VARCHAR(50), festival_name VARCHAR(50), start_date DATE, end_date DATE); INSERT INTO LocalFestivals (festival_id, location, festival_name, start_date, end_date) VALUES (1, 'Tokyo', 'Cherry Blossom Festival', '2022-03-20', '2022-04-03');", "output": "SELECT DISTINCT hb.hotel_id FROM HotelBookings hb JOIN (SELECT location FROM VirtualTours UNION SELECT location FROM LocalFestivals) AS vfl ON hb.guest_name = vfl.location;"}
{"input": " \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uac01 \ud300\uc758 \uc21c\uc704\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(100)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Barcelona'), (2, 'Bayern Munich'); CREATE TABLE matches (match_id INT, team_home_id INT, team_away_id INT, tickets_sold INT); INSERT INTO matches (match_id, team_home_id, team_away_id, tickets_sold) VALUES (1, 1, 2, 5000), (2, 2, 1, 6000);", "output": "SELECT team_name, RANK() OVER (ORDER BY total_sales DESC) as team_rank FROM (SELECT team_home_id, SUM(tickets_sold) as total_sales FROM matches GROUP BY team_home_id UNION ALL SELECT team_away_id, SUM(tickets_sold) as total_sales FROM matches GROUP BY team_away_id) total_sales JOIN teams t ON total_sales.team_home_id = t.team_id OR total_sales.team_away_id = t.team_id;"}
{"input": " \ud638\uc8fc\uc5d0\uc11c \uc2e4\ubb34\uc790\uac00 1000\uba85 \ubbf8\ub9cc\uc778 \uc804\ud1b5 \uc608\uc220 \uc13c\ud130\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ArtCenters (CenterName VARCHAR(255), Country VARCHAR(255), NumberOfPractitioners INT); INSERT INTO ArtCenters (CenterName, Country, NumberOfPractitioners) VALUES ('Aboriginal Art Centre', 'Australia', 1200), ('Boomerang Art', 'Australia', 800), ('Corroboree Australia', 'Australia', 1500), ('Dreamtime Art', 'Australia', 700), ('Japingka Aboriginal Art', 'Australia', 900);", "output": "SELECT CenterName, Country, NumberOfPractitioners, (COUNT(*) OVER (PARTITION BY Country) - COUNT(CASE WHEN NumberOfPractitioners >= 1000 THEN 1 END) OVER (PARTITION BY Country)) * 100.0 / COUNT(*) OVER (PARTITION BY Country) AS PercentageLessThan1000 FROM ArtCenters WHERE Country = 'Australia';"}
{"input": " \uc9c0\uc5ed\ubcc4 \ucd1d \uccad\uad6c\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Claims (id INT, region VARCHAR(20), amount FLOAT); INSERT INTO Claims (id, region, amount) VALUES (1, 'North', 5000), (2, 'South', 7000), (3, 'East', 8000), (4, 'West', 6000);", "output": "SELECT region, SUM(amount) as total_claim FROM Claims GROUP BY region;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \ub3d9\ub124\uc5d0\uc11c \uc9c4\ud589\ub418\ub294 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud589\uc0ac\uc758 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE neighborhoods (neighborhood_id INT, neighborhood_name VARCHAR(255));CREATE TABLE community_policing (event_id INT, event_date DATE, neighborhood_id INT); INSERT INTO neighborhoods VALUES (1, 'West Hill'), (2, 'East End'); INSERT INTO community_policing VALUES (1, '2020-01-01', 1), (2, '2020-02-01', 2);", "output": "SELECT neighborhood_id, DATE_TRUNC('month', event_date) as month, COUNT(*) as num_events FROM community_policing GROUP BY neighborhood_id, month ORDER BY neighborhood_id, month"}
{"input": " \uc720\ud615\ubcc4 \uccad\uad6c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CaseTypeBilling (CaseType VARCHAR(50), TotalAmount DECIMAL(10,2)); INSERT INTO CaseTypeBilling (CaseType, TotalAmount) VALUES ('Civil', 0); INSERT INTO CaseTypeBilling (CaseType, TotalAmount) VALUES ('Criminal', 0);", "output": "UPDATE CaseTypeBilling SET TotalAmount = (SELECT SUM(B.Amount) FROM Billing B JOIN CaseBilling CB ON B.BillingID = CB.BillingID JOIN Cases C ON CB.CaseID = C.CaseID WHERE C.CaseType = CaseTypeBilling.CaseType);"}
{"input": " \uc548\uc804\uac80\uc0ac\ub97c \ud1b5\uacfc\ud55c \uc804\uccb4 \uc120\ubc15 \uc218, \uc5d4\uc9c4 \uc6a9\ub7c9\uc774 2500 \ubbf8\ub9cc\uc778 \uc120\ubc15 \uc218, \uc720\uc870\uc120\uc774 \uc544\ub2cc \uc120\ubc15 \uc218\ub97c \ud558\ub098\uc758 \uacb0\uacfc \uc138\ud2b8\ub85c \ud45c\uc2dc\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Vessels (ID INT, Name VARCHAR(50), Type VARCHAR(50), Safety_Inspections INT, Engine_Capacity INT); INSERT INTO Vessels (ID, Name, Type, Safety_Inspections, Engine_Capacity) VALUES (1, 'MV Aries', 'Tanker', 1, 3000), (2, 'MV Taurus', 'Cargo Ship', 0, 1500);", "output": "SELECT COUNT(*) FROM Vessels WHERE Safety_Inspections = 1 INTERSECT SELECT COUNT(*) FROM Vessels WHERE Engine_Capacity < 2500 EXCEPT SELECT COUNT(*) FROM Vessels WHERE Type = 'Tanker';"}
{"input": " '\ub274\uc695 \ubbf8\uc220\uad00'\uc5d0\uc11c \ud55c \ubc88\ub3c4 \uc791\ud488\uc744 \uc804\uc2dc\ud55c \uc801\uc774 \uc5c6\ub294 \uc608\uc220\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ArtGalleryNY (artist_id INT); INSERT INTO ArtGalleryNY (artist_id) VALUES (1), (3); CREATE TABLE ArtistsExhibitions (artist_id INT, gallery_id INT); INSERT INTO ArtistsExhibitions (artist_id, gallery_id) VALUES (1, 1), (2, 1), (2, 2);", "output": "SELECT artist_id FROM ArtistsExhibitions WHERE gallery_id != (SELECT gallery_id FROM ArtGalleryNY);"}
{"input": " 12\ud559\ub144\uc774\uace0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\uac00 80\uc810 \uc774\uc0c1\uc778 \ud559\uc0dd\uc758 \uc774\ub984\uacfc \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Students (StudentID INT, Name VARCHAR(50), MentalHealthScore INT, GradeLevel INT); INSERT INTO Students (StudentID, Name, MentalHealthScore, GradeLevel) VALUES (3, 'Jim Brown', 82, 12); INSERT INTO Students (StudentID, Name, MentalHealthScore, GradeLevel) VALUES (4, 'Sara White', 78, 11);", "output": "SELECT Name, MentalHealthScore FROM Students WHERE GradeLevel = 12 INTERSECT SELECT Name, MentalHealthScore FROM Students WHERE MentalHealthScore > 80;"}
{"input": " \uac19\uc740 \ub2ec\uacfc \uc5f0\ub3c4\uc5d0 \uc625\uc218\uc218\uc640 \ub300\ub450 \uc791\ubb3c\uc758 \ud1a0\uc591 \uc218\ubd84 \uc218\uc900\uc744 \ube44\uad50\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE corn_moisture (crop_type TEXT, measurement_date DATE, soil_moisture INT); INSERT INTO corn_moisture (crop_type, measurement_date, soil_moisture) VALUES ('Corn', '2022-06-01', 650), ('Corn', '2022-06-15', 630); CREATE TABLE soybeans_moisture (crop_type TEXT, measurement_date DATE, soil_moisture INT); INSERT INTO soybeans_moisture (crop_type, measurement_date, soil_moisture) VALUES ('Soybeans', '2022-06-01', 700), ('Soybeans', '2022-06-15', 720);", "output": "SELECT 'Corn' AS crop_type, AVG(soil_moisture) AS avg_moisture FROM corn_moisture WHERE measurement_date BETWEEN '2022-06-01' AND '2022-06-15' UNION SELECT 'Soybeans' AS crop_type, AVG(soil_moisture) FROM soybeans_moisture WHERE measurement_date BETWEEN '2022-06-01' AND '2022-06-15';"}
{"input": " '\uc544\uc2dc\uc544\ud0dc\ud3c9\uc591' \uc9c0\uc5ed\uc758 \uae30\uc9c0\ub2f9 \ud3c9\uade0 \uad70\uc778 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE military_bases (id INT, base TEXT, region TEXT, personnel INT); INSERT INTO military_bases (id, base, region, personnel) VALUES (1, 'US Army Garrison Japan', 'Asia-Pacific', 5000), (2, 'Camp Humphreys', 'Asia-Pacific', 7000), (3, 'Camp Bonifas', 'Asia-Pacific', 1000);", "output": "SELECT AVG(personnel) FROM military_bases WHERE region = 'Asia-Pacific';"}
{"input": " 2015\ub144\uacfc 2019\ub144 \uc0ac\uc774\uc5d0 \uc0dd\uc0b0\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc774 \uc99d\uac00\ud55c \ud76c\ud1a0\ub958 \uc6d0\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (element VARCHAR(10), year INT, quantity FLOAT); INSERT INTO production (element, year, quantity) VALUES ('Neodymium', 2015, 12000), ('Neodymium', 2016, 15000), ('Neodymium', 2017, 17000), ('Neodymium', 2018, 19000), ('Neodymium', 2019, 21000), ('Dysprosium', 2015, 300), ('Dysprosium', 2016, 350), ('Dysprosium', 2017, 400), ('Dysprosium', 2018, 450), ('Dysprosium', 2019, 500), ('Terbium', 2015, 200), ('Terbium', 2016, 250), ('Terbium', 2017, 300), ('Terbium', 2018, 350), ('Terbium', 2019, 400);", "output": "SELECT element, MAX(diff) FROM (SELECT element, (quantity - LAG(quantity) OVER (PARTITION BY element ORDER BY year)) AS diff FROM production) AS subquery;"}
{"input": " \ud2b9\uc815 \uac8c\uc784\uc5d0 \ub300\ud55c \ud50c\ub808\uc774\uc5b4 \ud3c9\uc810 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE player_ratings (id INT, game VARCHAR(20), rating INT); INSERT INTO player_ratings (id, game, rating) VALUES (1, 'Game1', 5), (2, 'Game1', 4), (3, 'Game1', 5);", "output": "SELECT game, rating, COUNT(*) as count FROM player_ratings GROUP BY game, rating;"}
{"input": " \ud2b9\uc815 \ub7ed\ube44 \uacbd\uae30\uc758 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE ticket_sales (ticket_id INT, match_id INT, customer_id INT, country VARCHAR(100), quantity INT); INSERT INTO ticket_sales (ticket_id, match_id, customer_id, country, quantity) VALUES (1, 1, 1, 'South Africa', 50); INSERT INTO ticket_sales (ticket_id, match_id, customer_id, country, quantity) VALUES (2, 1, 2, 'New Zealand', 25); INSERT INTO ticket_sales (ticket_id, match_id, customer_id, country, quantity) VALUES (3, 1, 3, 'Australia', 30);", "output": "SELECT country, SUM(quantity) as total_sales, ROW_NUMBER() OVER (ORDER BY SUM(quantity) DESC) as rank FROM ticket_sales WHERE match_id = 1 GROUP BY country"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RegionBudget (RegionID INT, RegionName VARCHAR(50), Budget DECIMAL(10,2)); INSERT INTO RegionBudget (RegionID, RegionName, Budget) VALUES (1, 'Asia', 90000), (2, 'Africa', 75000), (3, 'Europe', 120000), (4, 'Americas', 105000), (5, 'Oceania', 80000);", "output": "SELECT RegionName, SUM(Budget) as TotalBudget, ROW_NUMBER() OVER (ORDER BY SUM(Budget) DESC) as Rank FROM RegionBudget GROUP BY RegionName;"}
{"input": " \ud55c \uc885\ub958 \uc774\uc0c1\uc758 \uc791\ubb3c\uc744 \uc7ac\ubc30\ud55c \ub18d\ubd80\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50)); CREATE TABLE crops_farmers (farmer_id INT, crop_id INT); CREATE TABLE crops (id INT, name VARCHAR(50)); INSERT INTO farmers (id, name) VALUES (1, 'John'), (2, 'Jane'), (3, 'Mary'); INSERT INTO crops (id, name) VALUES (1, 'Corn'), (2, 'Soybean'), (3, 'Wheat'); INSERT INTO crops_farmers (farmer_id, crop_id) VALUES (1, 1), (1, 2), (2, 1), (3, 1), (3, 2), (3, 3);", "output": "SELECT f.name FROM farmers f JOIN crops_farmers cf ON f.id = cf.farmer_id JOIN crops c ON cf.crop_id = c.id GROUP BY f.name HAVING COUNT(DISTINCT c.name) > 1;"}
{"input": " \ud0dc\uc591\uad11 \ud328\ub110 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6b0\uc8fc\uc120\uc744 \uc81c\uc870\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft (SpacecraftID INT, Name VARCHAR(50), ManufacturerCountry VARCHAR(50), LaunchDate DATE, SolarPanel BOOLEAN); INSERT INTO Spacecraft (SpacecraftID, Name, ManufacturerCountry, LaunchDate, SolarPanel) VALUES (1, 'Voyager 1', 'USA', '1977-09-05', TRUE); INSERT INTO Spacecraft (SpacecraftID, Name, ManufacturerCountry, LaunchDate, SolarPanel) VALUES (2, 'Galileo Orbiter', 'USA', '1989-10-18', TRUE);", "output": "SELECT DISTINCT ManufacturerCountry FROM Spacecraft WHERE SolarPanel = TRUE;"}
{"input": "\uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c \ubd80\ubb38\uc5d0\uc11c \uacc4\uc88c \uc794\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uba85\uc758 \uace0\uac1d\uacfc \uc774\ub4e4\uc758 \uacc4\uc88c \uc794\uc561\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE socially_responsible_lending(customer_id INT, name VARCHAR(50), account_balance DECIMAL(10, 2)); INSERT INTO socially_responsible_lending VALUES (1, 'John Doe', 5000), (2, 'Jane Smith', 7000), (3, 'Ali Hassan', 6000), (4, 'Fatima Khan', 8000);", "output": "SELECT customer_id, name, account_balance FROM (SELECT customer_id, name, account_balance, RANK() OVER (ORDER BY account_balance DESC) AS rn FROM socially_responsible_lending) t WHERE rn <= 2;"}
{"input": "Southeast' \uc9c0\uc5ed\uc5d0\uc11c \uc790\uc0b0 \uac00\uce58\uac00 \uac00\uc7a5 \ub192\uc740 \uace0\uac1d\uc744 \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE customers (customer_id INT, name TEXT, region TEXT, assets_value DECIMAL); INSERT INTO customers (customer_id, name, region, assets_value) VALUES (1, 'John Doe', 'Southeast', 50000.00), (2, 'Jane Smith', 'Southeast', 100000.00);", "output": "SELECT name FROM customers WHERE region = 'Southeast' AND assets_value = (SELECT MAX(assets_value) FROM customers WHERE region = 'Southeast');"}
{"input": " '\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548' \uc815\ucc45\uc758 \ud3c9\uade0 \uac80\ud1a0 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Compliance_Policies (id INT PRIMARY KEY, policy_name VARCHAR(255), category VARCHAR(50), description TEXT, last_reviewed DATE, review_period INT); INSERT INTO Compliance_Policies (id, policy_name, category, description, last_reviewed, review_period) VALUES (2, 'Firewall rules', 'Network security', 'Network perimeter security policies', '2021-03-15', 90);", "output": "SELECT AVG(review_period) FROM Compliance_Policies WHERE category = 'Network security';"}
{"input": " 2022\ub144 \ud589\uc0ac \uc885\ub958\ubcc4 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TicketSales (TicketSaleID INT, EventID INT, Revenue DECIMAL(10, 2), TicketSaleDate DATE); INSERT INTO TicketSales (TicketSaleID, EventID, Revenue, TicketSaleDate) VALUES (1, 1, 1000, '2022-01-01'), (2, 1, 2000, '2022-02-01'), (3, 2, 1500, '2022-03-01');", "output": "SELECT et.EventTypeName, SUM(ts.Revenue) as TotalRevenue FROM TicketSales ts INNER JOIN Events e ON ts.EventID = e.EventID INNER JOIN EventTypes et ON e.EventTypeID = et.EventTypeID WHERE ts.TicketSaleDate >= '2022-01-01' AND ts.TicketSaleDate < '2023-01-01' GROUP BY et.EventTypeName;"}
{"input": "\uc9c0\ub09c\ud574 \ucd1d \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\uc640 \ucde8\uc57d\uc810 \uc720\ud615\ubcc4 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE incident_vulnerabilities_long (id INT, incident_id INT, vulnerability_type VARCHAR(255), year INT, incidents INT); INSERT INTO incident_vulnerabilities_long (id, incident_id, vulnerability_type, year, incidents) VALUES (1, 1, 'SQL Injection', 2021, 1), (2, 1, 'Cross-site Scripting', 2021, 1), (3, 2, 'SQL Injection', 2021, 1), (4, 3, 'Cross-site Scripting', 2021, 1), (5, 3, 'Phishing', 2021, 1), (6, 4, 'Phishing', 2021, 1), (7, 4, 'SQL Injection', 2021, 1), (8, 5, 'Cross-site Scripting', 2021, 1);", "output": "SELECT vulnerability_type, SUM(incidents) as total_incidents, (SUM(incidents)*100.0/SUM(SUM(incidents)) OVER()) as percentage FROM incident_vulnerabilities_long WHERE year = 2021 GROUP BY vulnerability_type;"}
{"input": " \uc694\ub9ac \uc720\ud615\ubcc4 \uc720\uae30\ub18d \uc694\ub9ac\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Dishes (id INT, cuisine VARCHAR(255), organic BOOLEAN); INSERT INTO Dishes (id, cuisine, organic) VALUES (1, 'Italian', TRUE), (2, 'Italian', FALSE), (3, 'Mexican', TRUE), (4, 'Mexican', TRUE), (5, 'Indian', FALSE);", "output": "SELECT cuisine, COUNT(*) as total_organic FROM Dishes WHERE organic = TRUE GROUP BY cuisine;"}
{"input": " \ub3c5\uc77c\uc758 \uc720\uc804 \uc5f0\uad6c \uae30\uad00\uc758 \uc774\ub984\uacfc \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE SCHEMA if not exists biotech;CREATE TABLE if not exists biotech.genetic_research(id INT, name STRING, location STRING);INSERT INTO biotech.genetic_research(id, name, location) VALUES (1, 'InstituteA', 'Germany'), (2, 'InstituteB', 'US'), (3, 'InstituteC', 'UK');", "output": "SELECT name, location FROM biotech.genetic_research WHERE location = 'Germany';"}
{"input": " \ud638\uc8fc\uc5d0\uc11c \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uc774 2.0 \ubbf8\ub9cc\uc778 \uc81c\ud488\uc758 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SustainabilityRatings (product_id INT, carbon_footprint DECIMAL(5,2), water_usage DECIMAL(5,2), country VARCHAR(50)); INSERT INTO SustainabilityRatings (product_id, carbon_footprint, water_usage, country) VALUES (4, 1.8, 10.0, 'Australia');", "output": "SELECT AVG(water_usage) as avg_water_usage FROM SustainabilityRatings WHERE carbon_footprint < 2.0 AND country = 'Australia';"}
{"input": " \ud3c9\uade0 \uc885 ID\ubcf4\ub2e4 \ub192\uc740 ID\ub97c \uac00\uc9c4 \ubaa8\ub4e0 \uc885\uc758 \uace0\uc720\ud55c \uc885 \uc774\ub984\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Species(species_id INT, species_name TEXT); INSERT INTO Species (species_id, species_name) VALUES (1, 'Eagle'), (2, 'Wolf'), (3, 'Bear'), (4, 'Fox'), (5, 'Owl');", "output": "SELECT DISTINCT species_name FROM Species WHERE species_id > (SELECT AVG(species_id) FROM Species);"}
{"input": "\ub7f0\ub358 \ud658\uc790\uc758 \uc6d4 \ud3c9\uade0 \uce58\ub8cc \uc138\uc158 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE therapy_sessions_london (id INT, patient_id INT, session_date DATE); INSERT INTO therapy_sessions_london (id, patient_id, session_date) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-02-01'), (3, 2, '2021-03-01'), (4, 3, '2021-04-01'), (5, 3, '2021-04-15'), (6, 4, '2021-05-01');", "output": "SELECT EXTRACT(MONTH FROM session_date) AS month, AVG(therapy_sessions_london.id) AS avg_sessions FROM therapy_sessions_london WHERE city = 'London' GROUP BY month;"}
{"input": " \"\uc0ac\uc774\ubc84 \ubcf4\uc548\" \ubd80\ubb38\uc5d0\uc11c \uc774\ubbfc\uc790\uac00 \uc124\ub9bd\ud55c \ud68c\uc0ac\uc5d0 \ub300\ud55c \uc2dc\ub9ac\uc988 D \ub77c\uc6b4\ub4dc\ub294 \uba87 \uac1c\ub098 \uc788\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE round_data (company_id INT, round TEXT); INSERT INTO round_data (company_id, round) VALUES (1, 'series A'), (1, 'series B'), (2, 'series C'), (3, 'series D'), (3, 'series A'), (4, 'series C');", "output": "SELECT COUNT(*) FROM round_data JOIN company ON round_data.company_id = company.id JOIN founders ON company.id = founders.company_id WHERE company.industry = 'cybersecurity' AND founders.nationality = 'immigrant' AND round_data.round = 'series D';"}
{"input": "\uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \ud559\uc0dd\uc774 \ucde8\ub4dd\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud3c9\uc0dd\ud559\uc2b5 \ud559\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE lifelong_learning_credits (student_id INT, program_id INT, credits_earned INT);", "output": "SELECT program_id, MAX(credits_earned) FROM lifelong_learning_credits GROUP BY program_id;"}
{"input": "\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c '\ub18d\uc5c5 \ud601\uc2e0' \ud504\ub85c\uadf8\ub7a8\uc744 \ud1b5\ud574 \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc0c1\uc704 5\uba85\uc758 \ub18d\ubd80\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Agricultural_Innovation(farmer_id INT, farmer_name VARCHAR(50), country VARCHAR(50), funding FLOAT); INSERT INTO Agricultural_Innovation(farmer_id, farmer_name, country, funding) VALUES (1, 'John Doe', 'Kenya', 10000), (2, 'Jane Smith', 'Nigeria', 15000);", "output": "SELECT farmer_name, SUM(funding) as total_funding FROM Agricultural_Innovation WHERE country = 'Africa' GROUP BY farmer_name ORDER BY total_funding DESC LIMIT 5;"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc \uc624\uc2a4\ud2f4 \uc2dc\uc758 \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc7ac\uc0b0\uc138\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE property_owners (id INT PRIMARY KEY, name TEXT, share FLOAT); CREATE TABLE properties (id INT PRIMARY KEY, address TEXT, city TEXT, state TEXT, property_tax FLOAT); CREATE TABLE co_ownership (property_id INT, owner_id INT, FOREIGN KEY (property_id) REFERENCES properties(id), FOREIGN KEY (owner_id) REFERENCES property_owners(id));", "output": "SELECT AVG(properties.property_tax) FROM properties INNER JOIN co_ownership ON properties.id = co_ownership.property_id WHERE property_owners.city = 'Austin' AND property_owners.state = 'Texas' AND co_ownership.owner_id IN (SELECT owner_id FROM property_owners WHERE share > 0.5);"}
{"input": " \uae30\uc220 \uc5c5\uacc4\uc758 \ub77c\ud2f4\uacc4 \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \ub77c\uc6b4\ub4dc\ub2f9 \ud3c9\uade0 \uc790\uae08 \uc870\ub2ec\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups(id INT, name TEXT, founders TEXT, founding_year INT, industry TEXT); INSERT INTO startups VALUES (1, 'StartupA', 'Ana, Bob', 2010, 'Tech'); INSERT INTO startups VALUES (2, 'StartupB', 'Eve', 2015, 'Healthcare'); INSERT INTO startups VALUES (3, 'StartupC', 'Carlos', 2018, 'Tech'); CREATE TABLE investments(startup_id INT, round INT, funding INT); INSERT INTO investments VALUES (1, 1, 1000000); INSERT INTO investments VALUES (1, 2, 2000000); INSERT INTO investments VALUES (2, 1, 3000000); INSERT INTO investments VALUES (3, 1, 4000000); INSERT INTO investments VALUES (3, 2, 5000000);", "output": "SELECT AVG(funding) FROM (SELECT startup_id, funding FROM investments JOIN startups ON investments.startup_id = startups.id WHERE startups.industry = 'Tech' AND founders LIKE '%Carlos%' GROUP BY startup_id, round) subquery;"}
{"input": " 'CA'\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE policyholders (id INT, policy_number INT, name VARCHAR(255), age INT, state VARCHAR(255)); INSERT INTO policyholders (id, policy_number, name, age, state) VALUES (1, 12345, 'John Doe', 35, 'CA'); INSERT INTO policyholders (id, policy_number, name, age, state) VALUES (2, 67890, 'Jane Smith', 42, 'NY'); CREATE TABLE claims (id INT, policy_number INT, claim_amount DECIMAL(10,2)); INSERT INTO claims (id, policy_number, claim_amount) VALUES (1, 12345, 500.00); INSERT INTO claims (id, policy_number, claim_amount) VALUES (2, 67890, 1200.00);", "output": "SELECT AVG(claim_amount) FROM claims WHERE policy_number IN (SELECT policy_number FROM policyholders WHERE state = 'CA');"}
{"input": " \ubaa8\ub4e0 \uc778\ub825 \uac1c\ubc1c \ud504\ub85c\uadf8\ub7a8\uacfc \ud574\ub2f9 \uc608\uc0b0\uc744 \uc608\uc0b0\ubcc4\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE workforce_programs (program_id INT, name TEXT, budget FLOAT); INSERT INTO workforce_programs (program_id, name, budget) VALUES (1, 'Apprenticeship Initiative', 50000.00), (2, 'Skills Training Program', 75000.00), (3, 'Youth Employment Scheme', 120000.00);", "output": "SELECT * FROM workforce_programs ORDER BY budget DESC;"}
{"input": " 'Refuge G'\uc640 'Refuge H'\uc5d0 \ub4f1\uc7a5\ud558\ub294 '\uc601\uc7a5\ub958' \uc885\uc740 \ucd1d \uba87 \ub9c8\ub9ac\uc778\uac00\uc694?", "context": "CREATE TABLE RefugeG(animal_id INT, species VARCHAR(20), refuge VARCHAR(10)); INSERT INTO RefugeG VALUES (1, 'Howler Monkey', 'RefugeG'), (2, 'Spider Monkey', 'RefugeG'), (3, 'Tamarin', 'RefugeG'); CREATE TABLE RefugeH(animal_id INT, species VARCHAR(20), refuge VARCHAR(10)); INSERT INTO RefugeH VALUES (4, 'Orangutan', 'RefugeH'), (5, 'Gibbon', 'RefugeH'), (6, 'Lemur', 'RefugeH');", "output": "SELECT SUM(qty) FROM (SELECT COUNT(*) as qty FROM RefugeG WHERE species LIKE '%Primate%' UNION ALL SELECT COUNT(*) as qty FROM RefugeH WHERE species LIKE '%Primate%') as total;"}
{"input": " 2019\ub144 \ud68c\uc0ac\ubcc4 '\ud734\ubbf8\ub77c'\uc758 \ucd1d \ub9e4\ucd9c\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pharmaceutical_sales (company VARCHAR(255), drug VARCHAR(255), qty_sold INT, sales_revenue FLOAT, sale_date DATE); INSERT INTO pharmaceutical_sales (company, drug, qty_sold, sales_revenue, sale_date) VALUES ('AbbVie', 'Humira', 300, 18000.00, '2019-01-01');", "output": "SELECT company, SUM(sales_revenue) FROM pharmaceutical_sales WHERE drug = 'Humira' AND sale_date BETWEEN '2019-01-01' AND '2019-12-31' GROUP BY company;"}
{"input": " \uac01 \uad6d\uac00\uc5d0\ub294 \uba87 \uac1c\uc758 \uc591\uc2dd\uc7a5\uc774 \uc788\uc73c\uba70, \uc591\uc2dd\uc7a5\ub2f9 \uc885 \uc218\uc5d0 \ub530\ub77c \uc21c\uc704\uac00 \ub9e4\uaca8\uc838 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE aquaculture_sites (site_id INT, country VARCHAR(50), species INT); INSERT INTO aquaculture_sites VALUES (1, 'Norway', 5), (2, 'Norway', 3), (3, 'Canada', 4), (4, 'Canada', 6), (5, 'USA', 2), (6, 'USA', 1);", "output": "SELECT country, COUNT(*) AS site_count, RANK() OVER (ORDER BY COUNT(*) DESC) AS site_count_rank FROM aquaculture_sites GROUP BY country;"}
{"input": " \uba85\uc0c1\uacfc \uac19\uc740 \ub300\uccb4 \uc694\ubc95\uc744 \uc2dc\ub3c4\ud55c \ud14d\uc0ac\uc2a4 \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, age INT, gender TEXT, state TEXT, alternative_therapy TEXT); INSERT INTO patients (id, age, gender, state, alternative_therapy) VALUES (1, 35, 'Female', 'California', 'No'); INSERT INTO patients (id, age, gender, state, alternative_therapy) VALUES (2, 42, 'Male', 'Texas', 'Yes');", "output": "SELECT AVG(patients.age) FROM patients WHERE patients.state = 'Texas' AND patients.alternative_therapy = 'Yes';"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \ube44\uac74 \uc81c\ud488\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \ube0c\ub79c\ub4dc\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE Brands (BrandID INT, BrandName VARCHAR(100), TotalVeganProducts INT); INSERT INTO Brands (BrandID, BrandName, TotalVeganProducts) VALUES (1, 'Brand X', 50), (2, 'Brand Y', 30), (3, 'Brand Z', 70), (4, 'Brand W', 40), (5, 'Brand V', 60);", "output": "SELECT BrandName, TotalVeganProducts FROM (SELECT BrandName, TotalVeganProducts, ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY TotalVeganProducts DESC) as rn FROM Brands WHERE Country = 'US') t WHERE rn <= 3;"}
{"input": " \ub3c4\uc2dc\uc640 \ub18d\ucd0c \uc9c0\uc5ed\uc758 \ubcd1\uc6d0 \uc218\ub294 \ucd1d \uba87 \uac1c\uc774\uba70, \uadf8 \uc911 \uac10\uc5fc\ubcd1 \uc804\ubb38\ubcd1\uc6d0\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Hospitals (Name VARCHAR(255), Location VARCHAR(10), Specialized BOOLEAN); INSERT INTO Hospitals (Name, Location, Specialized) VALUES ('Hospital A', 'Urban', TRUE), ('Hospital B', 'Rural', FALSE), ('Hospital C', 'Urban', FALSE), ('Hospital D', 'Rural', TRUE);", "output": "SELECT Location, COUNT(*) FROM Hospitals WHERE Specialized = TRUE GROUP BY Location;"}
{"input": " 'GeneticResearch' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc608\uc0b0\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE SCHEMA GeneticResearch; CREATE TABLE project_budgets (project_name VARCHAR(50), budget DECIMAL(10, 2)); INSERT INTO project_budgets VALUES ('Project1', 600000), ('Project2', 900000);", "output": "SELECT MAX(budget) as max_budget, MIN(budget) as min_budget FROM GeneticResearch.project_budgets;"}
{"input": " \uc544\ud2f0\uc2a4\ud2b8 'Taylor Swift'\uc758 \uc74c\uc545\uc744 \uc2a4\ud2b8\ub9ac\ubc0d\ud558\uac70\ub098 \ub2e4\uc6b4\ub85c\ub4dc\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT, name TEXT); CREATE TABLE user_actions (id INT, user_id INT, action TEXT, album_id INT, platform TEXT); CREATE TABLE albums (id INT, title TEXT, artist_id INT, platform TEXT); CREATE TABLE artists (id INT, name TEXT); CREATE VIEW taylor_swift_users AS SELECT DISTINCT user_id FROM user_actions JOIN albums a ON user_actions.album_id = a.id JOIN artists ar ON a.artist_id = ar.id WHERE ar.name = 'Taylor Swift';", "output": "SELECT COUNT(DISTINCT user_id) FROM taylor_swift_users;"}
{"input": " \ubd80\uc11c\ubcc4 \uc9c1\uc6d0 \uc720\uc9c0\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE employees (id INT, name VARCHAR(255), department VARCHAR(255), hire_date DATE, termination_date DATE); INSERT INTO employees (id, name, department, hire_date, termination_date) VALUES (1, 'John Doe', 'HR', '2021-01-01', '2021-06-30'), (2, 'Jane Smith', 'Finance', '2021-02-15', NULL), (3, 'Alice Johnson', 'IT', '2021-03-01', '2021-12-31'), (4, 'Bob Brown', 'HR', '2021-04-01', NULL), (5, 'Charlie Davis', 'Finance', '2021-05-03', '2021-11-15');", "output": "SELECT department, COUNT(*) as num_employees, COUNT(termination_date) as num_terminated, ROUND(COUNT(*) - COUNT(termination_date)) / COUNT(*) * 100 as retention_rate FROM employees WHERE termination_date IS NULL GROUP BY department;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 'field7'\uc758 \ucd5c\uc800 \uc2b5\ub3c4 \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE field7 (date DATE, humidity FLOAT); INSERT INTO field7 (date, humidity) VALUES ('2021-11-01', 65.2), ('2021-11-02', 60.1), ('2021-11-03', 63.3);", "output": "SELECT MIN(humidity) FROM field7 WHERE date >= (CURRENT_DATE - INTERVAL '30 days');"}
{"input": " \uc0ac\ud5ec \uc9c0\uc5ed\uc5d0\uc11c \uc218\uc6a9 \uc778\uc6d0\uc774 500\uba85 \uc774\uc0c1\uc778 \ub09c\ubbfc \ucea0\ud504\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, name VARCHAR(255)); INSERT INTO region (region_id, name) VALUES (1, 'Sahel'); CREATE TABLE camp (camp_id INT, name VARCHAR(255), region_id INT, capacity INT); INSERT INTO camp (camp_id, name, region_id, capacity) VALUES (1, 'Camp1', 1, 500), (2, 'Camp2', 1, 700);", "output": "SELECT name FROM camp WHERE region_id = (SELECT region_id FROM region WHERE name = 'Sahel') AND capacity > 500;"}
{"input": " '\ub18d\uc5c5' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uc0dd\uc0b0\ub7c9 \uae30\uc900 \uc0c1\uc704 5\uac1c \uc625\uc218\uc218 \uc0dd\uc0b0\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE crop (id INT, type VARCHAR(255), yield FLOAT); INSERT INTO crop (id, type, yield) VALUES (1, 'corn', 150.3), (2, 'wheat', 120.5), (3, 'rice', 180.7), (4, 'corn', 165.2), (5, 'corn', 145.8);", "output": "SELECT type, yield FROM crop WHERE type = 'corn' ORDER BY yield DESC LIMIT 5;"}
{"input": " \uc778\ub825 \ub0b4 \uac01 \uc131\ubcc4\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE gender_distribution (id INT, gender VARCHAR(6), count INT);", "output": "SELECT gender, (count * 100.0 / (SELECT SUM(count) FROM gender_distribution)) as percentage FROM gender_distribution GROUP BY gender;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uaca9\uc774 '150'\ubcf4\ub2e4 \ud070 \uc758\ub958\uac00 \uba87 \ubc8c\uc774\ub098 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, salesperson_id INT, garment_id INT, region TEXT, price INT); INSERT INTO sales (id, salesperson_id, garment_id, region, price) VALUES (1, 1, 1, 'Paris', 150), (2, 1, 2, 'London', 120), (3, 2, 3, 'Paris', 180), (4, 2, 4, 'London', 110), (5, 3, 5, 'Berlin', 200), (6, 3, 6, 'Berlin', 160);", "output": "SELECT region, COUNT(*) AS garments_sold FROM sales WHERE price > 150 GROUP BY region;"}
{"input": " \ud604\uc874\ud558\ub294 \uac00\uc7a5 \ub098\uc774 \ub9ce\uc740 \uc608\uc220\uac00\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE living_artists (artist_id INT, artist_name VARCHAR(255), artist_country VARCHAR(255), artist_birth_date DATE, artist_status VARCHAR(255)); INSERT INTO living_artists (artist_id, artist_name, artist_country, artist_birth_date, artist_status) VALUES (1, 'Pablo Picasso', 'Spain', '1881-10-25', 'alive'); INSERT INTO living_artists (artist_id, artist_name, artist_country, artist_birth_date, artist_status) VALUES (2, 'Francis Bacon', 'Ireland', '1909-10-28', 'alive');", "output": "SELECT artist_id, artist_name, artist_country, artist_birth_date, artist_status, ROW_NUMBER() OVER (ORDER BY DATEDIFF(CURRENT_DATE, artist_birth_date) ASC) as rank FROM living_artists WHERE artist_status = 'alive';"}
{"input": " \ub274\uc695\uc5d0\uc11c \uac00\uc7a5 \ub0ae\uc740 \ud3c9\uac00\ub97c \ubc1b\uc740 \uce5c\ud658\uacbd \ud638\ud154\uc758 \uc774\ub984\uacfc \ub4f1\uae09\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eco_hotels (hotel_id INT, name TEXT, city TEXT, rating FLOAT); INSERT INTO eco_hotels (hotel_id, name, city, rating) VALUES (1, 'Eco Hotel New York', 'New York', 4.2), (2, 'Green Haven New York', 'New York', 3.9), (3, 'Eco Lodge New York', 'New York', 4.1);", "output": "SELECT name, rating FROM eco_hotels WHERE city = 'New York' ORDER BY rating LIMIT 1;"}
{"input": " \uac01 \uc6b4\ub3d9 \uc720\ud615\ubcc4\ub85c \ucd1d \uc6b4\ub3d9 \uc2dc\uac04\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uba85\uc758 \uc0ac\uc6a9\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_durations (user_id INT, workout_type VARCHAR(20), duration INT); INSERT INTO user_durations (user_id, workout_type, duration) VALUES (1, 'Running', 60), (1, 'Cycling', 90), (2, 'Running', 90), (2, 'Cycling', 75), (3, 'Running', 75), (3, 'Cycling', 60), (4, 'Running', 105), (4, 'Cycling', 90), (5, 'Running', 120), (5, 'Cycling', 105), (6, 'Running', 135), (6, 'Cycling', 120);", "output": "SELECT user_id, workout_type, SUM(duration) AS total_duration FROM user_durations GROUP BY user_id, workout_type ORDER BY total_duration DESC, workout_type; SELECT user_id, workout_type, total_duration FROM (SELECT user_id, workout_type, SUM(duration) AS total_duration, ROW_NUMBER() OVER (PARTITION BY workout_type ORDER BY SUM(duration) DESC) AS rank FROM user_durations GROUP BY user_id, workout_type) AS ranked_durations WHERE rank <= 3;"}
{"input": " \uac01\uad6d \uc120\ubc15\uc758 \ud3c9\uade0 \ucd1d \ud1a4\uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VesselCountry (VesselCountryID INT, VesselCountry VARCHAR(50)); INSERT INTO VesselCountry (VesselCountryID, VesselCountry) VALUES (1, 'USA'); INSERT INTO VesselCountry (VesselCountryID, VesselCountry) VALUES (2, 'Netherlands');", "output": "SELECT v.VesselCountry, AVG(v.GrossTonnage) as AverageGrossTonnage FROM Vessel v JOIN Port p ON v.PortID = p.PortID JOIN VesselCountry vc ON p.Country = vc.VesselCountry GROUP BY v.VesselCountry;"}
{"input": " \uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131 \ub4f1\uae09\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc0c1\uc704 2\uac1c \uad6d\uac00\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE fairness_ratings (country VARCHAR(255), rating FLOAT); INSERT INTO fairness_ratings (country, rating) VALUES ('Country4', 0.75); INSERT INTO fairness_ratings (country, rating) VALUES ('Country5', 0.62); INSERT INTO fairness_ratings (country, rating) VALUES ('Country6', 0.88);", "output": "SELECT country, rating, ROW_NUMBER() OVER (ORDER BY rating ASC) as rank FROM fairness_ratings WHERE rank <= 2;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \ud53c\uc2f1 \uacf5\uaca9\uacfc \uad00\ub828\ub41c \ubcf4\uc548 \uc0ac\uace0\uc758 \ube44\uc728\uc744 \uc6d4\ubcc4\ub85c \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE security_incidents (id INT, incident_type VARCHAR(255), timestamp TIMESTAMP);CREATE VIEW phishing_incidents AS SELECT EXTRACT(MONTH FROM timestamp) as month, COUNT(*) as phishing_count FROM security_incidents WHERE incident_type = 'phishing' GROUP BY month;", "output": "SELECT month, phishing_count, ROUND(phishing_count * 100.0 / total_incidents, 2) as phishing_percentage FROM phishing_incidents JOIN (SELECT EXTRACT(MONTH FROM timestamp) as month, COUNT(*) as total_incidents FROM security_incidents GROUP BY month) total_incidents ON phishing_incidents.month = total_incidents.month ORDER BY month;"}
{"input": "\uc720\ub7fd\uacfc \uc544\uc2dc\uc544 \ubaa8\ub450\uc5d0\uc11c \uac70\ub798\ud55c \uace0\uac1d\uc758 \ucd1d \uac70\ub798 \uae08\uc561\uacfc \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Transactions (id INT, customer_id INT, region VARCHAR(10)); INSERT INTO Transactions (id, customer_id, region) VALUES (1, 10, 'Europe'), (2, 10, 'Asia'), (3, 11, 'Asia'), (4, 12, 'Europe');", "output": "SELECT SUM(amount) as total_amount, COUNT(*) as transaction_count FROM Transactions t1 INNER JOIN (SELECT customer_id FROM Transactions WHERE region IN ('Europe', 'Asia') GROUP BY customer_id HAVING COUNT(DISTINCT region) = 2) t2 ON t1.customer_id = t2.customer_id;"}
{"input": " '\uc11c\ubd80' \uc9c0\uc5ed \ud68c\uc6d0\uc744 \uc81c\uc678\ud558\uace0 2021\ub144 \uc0c1\ubc18\uae30 \ub3d9\uc548 \uc8fc\ub2f9 \uc2e0\uaddc \ud68c\uc6d0 \ubaa8\uc9d1 \uc778\uc6d0\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE membership (member_id INT, join_date DATE, region VARCHAR(20), PRIMARY KEY (member_id)); INSERT INTO membership (member_id, join_date, region) VALUES (1, '2021-01-01', 'East'), (2, '2021-01-02', 'West'), (3, '2021-02-01', 'North');", "output": "SELECT DATE_FORMAT(join_date, '%Y-%u') as week, COUNT(*) as new_members FROM membership WHERE region != 'West' AND join_date >= '2021-01-01' AND join_date < '2021-07-01' GROUP BY week;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \uae30\ud6c4 \ubcc0\ud654 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (id INT, country VARCHAR(50), sector VARCHAR(50), amount FLOAT); INSERT INTO investments (id, country, sector, amount) VALUES (1, 'Canada', 'Climate Change', 500000), (2, 'Mexico', 'Renewable Energy', 750000), (3, 'Canada', 'Climate Change', 600000);", "output": "SELECT AVG(amount) as avg_investment FROM investments WHERE sector = 'Climate Change' AND country IN (SELECT country FROM (SELECT * FROM countries WHERE region = 'North America') as north_america);"}
{"input": " 2021\ub144 8\uc6d4 \uac01 \uc2dc\uc2a4\ud15c\uc758 \uace0\uc720\ud55c \ucc28\ub7c9 ID\uc640 \ubaa8\ub378\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE vehicles (vehicle_id INT, vehicle_model VARCHAR(20), system_name VARCHAR(20)); CREATE TABLE trips (trip_id INT, vehicle_id INT, trip_start_time DATETIME, trip_end_time DATETIME);", "output": "SELECT system_name, vehicle_id, vehicle_model FROM vehicles WHERE system_name IN ('Bus', 'Subway', 'Tram') AND trip_start_time BETWEEN '2021-08-01' AND '2021-08-31' GROUP BY system_name, vehicle_id, vehicle_model;"}
{"input": " '\ud31d' \uc7a5\ub974\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uace1\uc744 \ubcf4\uc720\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE artists (id INT, name VARCHAR(255), genre VARCHAR(255), number_of_songs INT); INSERT INTO artists (id, name, genre, number_of_songs) VALUES (1, 'Artist 1', 'Hip Hop', 15), (2, 'Artist 2', 'Pop', 20), (3, 'Artist 3', 'R&B', 10);", "output": "SELECT name AS artist_name, number_of_songs AS songs_count FROM artists WHERE genre = 'Pop' AND number_of_songs = (SELECT MAX(number_of_songs) FROM artists WHERE genre = 'Pop');"}
{"input": "los_angeles'\uc5d0\uc11c \uc885\uacb0\ub41c \uc0ac\ub840\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cases (case_id INT, case_closed BOOLEAN); CREATE TABLE office (office_id INT, office_name VARCHAR(20)); INSERT INTO office (office_id, office_name) VALUES (1, 'boston'), (2, 'new_york'), (3, 'los_angeles');", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cases JOIN attorney ON cases.attorney_id = attorney.attorney_id JOIN office ON attorney.office_id = office.office_id WHERE office.office_name = 'los_angeles') AS percentage_closed FROM cases JOIN attorney ON cases.attorney_id = attorney.attorney_id JOIN office ON attorney.office_id = office.office_id WHERE case_closed = TRUE AND office.office_name = 'los_angeles';"}
{"input": " \ub514\uc9c0\ud138 \ubc15\ubb3c\uad00 \ubc29\ubb38\uac1d \uc911 \uc720\ub7fd \ucd9c\uc2e0\uc740 \uba87 \ud37c\uc13c\ud2b8\uc778\uac00\uc694?", "context": "CREATE TABLE exhibitions (exhibition_id INT, name VARCHAR(255)); INSERT INTO exhibitions (exhibition_id, name) VALUES (1, 'Art of the Renaissance'), (2, 'Modern Art'), (3, 'Digital Museum'); CREATE TABLE visitors (visitor_id INT, exhibition_id INT, country VARCHAR(50)); INSERT INTO visitors (visitor_id, exhibition_id, country) VALUES (1, 1, 'USA'), (2, 1, 'USA'), (3, 2, 'Canada'), (4, 3, 'France'), (5, 3, 'Germany'), (6, 3, 'Spain');", "output": "SELECT (COUNT(visitors.visitor_id) * 100.0 / (SELECT COUNT(visitor_id) FROM visitors WHERE exhibition_id = 3)) as percentage FROM visitors WHERE exhibition_id = 3 AND country LIKE 'Europe%';"}
{"input": " \uc720\ud615\ubcc4, \uc5f0\ub3c4\ubcc4 \uac10\uc5fc\ubcd1 \ubc1c\uc0dd \uac74\uc218\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE outbreaks (id INT, year INT, type VARCHAR, location VARCHAR, cases INT);", "output": "SELECT o.type, o.year, COUNT(o.id) AS num_outbreaks FROM outbreaks o GROUP BY o.type, o.year;"}
{"input": " \uacb0\ud575 \uac10\uc5fc\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Infections (InfectionID INT, Age INT, Gender VARCHAR(10), City VARCHAR(20), Disease VARCHAR(20)); INSERT INTO Infections (InfectionID, Age, Gender, City, Disease) VALUES (1, 30, 'Male', 'Los Angeles', 'Tuberculosis');", "output": "SELECT City, COUNT(*) as InfectionCount, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Infections)) as Rate  FROM Infections WHERE Disease = 'Tuberculosis' GROUP BY City ORDER BY Rate DESC LIMIT 5;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0\uc11c 'Garcia'\ub77c\ub294 \uc131\uc758 \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc5d0 \ub300\ud55c \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT, LastName VARCHAR(255), State VARCHAR(255)); INSERT INTO Attorneys (AttorneyID, LastName, State) VALUES (1, 'Garcia', 'California'); CREATE TABLE Cases (CaseID INT, AttorneyID INT); CREATE TABLE Billing (BillingID INT, CaseID INT, Amount DECIMAL(10, 2));", "output": "SELECT SUM(Billing.Amount) FROM Billing INNER JOIN Cases ON Billing.CaseID = Cases.CaseID INNER JOIN Attorneys ON Cases.AttorneyID = Attorneys.AttorneyID WHERE Attorneys.LastName = 'Garcia' AND Attorneys.State = 'California';"}
{"input": " 'CityC'\uc758 '\ud3d0\uae30\ubb3c \uad00\ub9ac' \uc815\ucc45\uc5d0 \ub300\ud55c \ud53c\ub4dc\ubc31 \uc810\uc218\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE policies (id INT, name VARCHAR(50), department VARCHAR(50)); INSERT INTO policies (id, name, department) VALUES (1, 'Waste Management', 'Public Works'), (2, 'Healthcare Improvement', 'Health'); CREATE TABLE feedback (id INT, policy_id INT, city_id INT, score INT); INSERT INTO feedback (id, policy_id, city_id, score) VALUES (1, 1, 1, 8), (2, 1, 2, 7), (3, 1, 3, 9), (4, 2, 1, 6), (5, 2, 2, 5), (6, 2, 3, 4); CREATE TABLE cities (id INT, name VARCHAR(50)); INSERT INTO cities (id, name) VALUES (1, 'CityA'), (2, 'CityB'), (3, 'CityC');", "output": "SELECT score FROM feedback WHERE policy_id = (SELECT id FROM policies WHERE name = 'Waste Management') AND city_id = (SELECT id FROM cities WHERE name = 'CityC');"}
{"input": " 2019\ub144 \ub3c4\ucfc4 \ub300\uc911\uad50\ud1b5 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uc810\uc218\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Feedback (City VARCHAR(20), Year INT, Category VARCHAR(20), Score INT); INSERT INTO Feedback (City, Year, Category, Score) VALUES ('Tokyo', 2019, 'Public Transportation', 75);", "output": "SELECT Score FROM Feedback WHERE City = 'Tokyo' AND Year = 2019 AND Category = 'Public Transportation';"}
{"input": " \ub3c5\uc77c\uc758 \uce5c\ud658\uacbd \uc219\ubc15\uc2dc\uc124 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE accommodations (id INT, name TEXT, country TEXT, eco_friendly BOOLEAN); INSERT INTO accommodations (id, name, country, eco_friendly) VALUES (1, 'Eco Lodge', 'Germany', true), (2, 'Green Hotel', 'Germany', true), (3, 'Standard Hotel', 'Germany', false);", "output": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM accommodations WHERE country = 'Germany') AS percentage FROM accommodations WHERE country = 'Germany' AND eco_friendly = true;"}
{"input": " \uad6d\uac00\ubcc4 \uc724\ub9ac\uc801 \ub178\ub3d9\uad00\ud589\uc744 \uc900\uc218\ud558\ub294 \uacf5\uc7a5\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id int, factory_country varchar(50), is_ethical boolean);", "output": "SELECT factory_country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM factories) as percentage_ethical FROM factories WHERE is_ethical = true GROUP BY factory_country;"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed \ub300\ube44 \ub3c4\uc2dc \uc9c0\uc5ed \uac01 \uacf5\ub3d9\uccb4\uc758 \uc5b8\uc5b4 \ubcf4\uc874 \uc790\uae08 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE LanguagePreservationFunding (ID INT, Community VARCHAR(50), Location VARCHAR(50), Funding DECIMAL(10,2)); INSERT INTO LanguagePreservationFunding (ID, Community, Location, Funding) VALUES (1, 'Navajo Nation', 'Rural', 150000); INSERT INTO LanguagePreservationFunding (ID, Community, Location, Funding) VALUES (2, 'Ojibwe', 'Urban', 200000);", "output": "SELECT Location, Community, Funding, AVG(Funding) OVER (PARTITION BY Location) AS AvgFundingInLocation, Funding / AVG(Funding) OVER (PARTITION BY Location) AS FundingRatio FROM LanguagePreservationFunding;"}
{"input": " \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\ubcc4 \ucd1d \uc218\uc775\uacfc \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\ubcc4 \ucd1d \uace0\uac1d \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_plans (id INT, name VARCHAR(255), price DECIMAL(10,2), data_limit INT); INSERT INTO mobile_plans (id, name, price, data_limit) VALUES (1, 'Basic', 30.00, 2048), (2, 'Premium', 50.00, 10000); CREATE TABLE revenue (plan_id INT, timestamp DATETIME, amount DECIMAL(10,2)); CREATE TABLE customers (id INT, name VARCHAR(255), address VARCHAR(255), plan_id INT);", "output": "SELECT m.name, SUM(r.amount) as total_revenue, COUNT(c.id) as num_customers FROM mobile_plans m INNER JOIN revenue r ON m.id = r.plan_id INNER JOIN customers c ON m.id = c.plan_id GROUP BY m.id;"}
{"input": " \uac8c\uc784 \ud37c\ube14\ub9ac\uc154\ubcc4 \ucd1d \ud50c\ub808\uc774 \uc2dc\uac04\uacfc \ud3c9\uade0 \uc810\uc218\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE GamePublishers (GameID int, Publisher varchar(50), PlayTime int, Score int); INSERT INTO GamePublishers (GameID, Publisher, PlayTime, Score) VALUES (5, 'PublisherA', 300, 82); INSERT INTO GamePublishers (GameID, Publisher, PlayTime, Score) VALUES (6, 'PublisherB', 350, 87);", "output": "SELECT Publisher, SUM(PlayTime) as TotalPlayTime, AVG(Score) as AvgScore FROM GamePublishers GROUP BY Publisher;"}
{"input": " \uc77c\ubcf8 \uc18c\uc7ac \uc2a4\ud29c\ub514\uc624\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ud3c9\uc810\uc744 \ubc1b\uc740 \uc0c1\uc704 3\uac1c \uc601\ud654\uc758 \uc81c\ubaa9\uacfc \uc7a5\ub974\ub97c \ud3c9\uc810 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE movies (title VARCHAR(255), genre VARCHAR(255), studio VARCHAR(255), rating FLOAT); INSERT INTO movies (title, genre, studio, rating) VALUES ('Movie11', 'Action', 'Japan Studio1', 8.5), ('Movie12', 'Drama', 'Japan Studio2', 9.0);", "output": "SELECT title, genre FROM (SELECT title, genre, studio, rating, ROW_NUMBER() OVER (PARTITION BY studio ORDER BY rating DESC) as rank FROM movies WHERE studio LIKE '%Japan%') subquery WHERE rank <= 3 ORDER BY rating DESC;"}
{"input": " \uad6d\uac00\ubcc4 \uae30\uc5c5\ubcc4 \ucc44\uad74\ub41c \uad11\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uad6d\uac00\ubcc4 \uae30\uc5c5\ubcc4 \ucd1d \uc9c1\uc6d0 \ubc0f \uacc4\uc57d\uc790 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (id INT, name VARCHAR(50)); CREATE TABLE companies (id INT, name VARCHAR(50)); CREATE TABLE company_sites (id INT, company_id INT, site_id INT); CREATE TABLE mining_sites (id INT, name VARCHAR(50), location VARCHAR(50), country_id INT, company_id INT); CREATE TABLE employees (id INT, site_id INT, role VARCHAR(50), quantity INT); CREATE TABLE contractors (id INT, site_id INT, quantity INT); CREATE TABLE minerals_extracted (id INT, site_id INT, quantity INT);", "output": "SELECT co.name AS country, c.name AS company, SUM(me.quantity) AS total_minerals_extracted, SUM(e.quantity + c.quantity) AS total_workforce FROM countries co INNER JOIN mining_sites ms ON co.id = ms.country_id INNER JOIN companies c ON ms.company_id = c.id INNER JOIN company_sites cs ON c.id = cs.company_id INNER JOIN mining_sites ms2 ON cs.site_id = ms2.id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM employees GROUP BY site_id) e ON ms2.id = e.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM contractors GROUP BY site_id) c ON ms2.id = c.site_id INNER JOIN (SELECT site_id, SUM(quantity) AS quantity FROM minerals_extracted GROUP BY site_id) me ON ms2.id = me.site_id GROUP BY co.name, c.name;"}
{"input": " 'Smith'\ub77c\ub294 \uc131\uc758 \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\uae08\uc744 \ubc1b\uc740 \ub2e8\uccb4\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE donors (donor_id INT, first_name TEXT, last_name TEXT, donation_amount FLOAT); INSERT INTO donors (donor_id, first_name, last_name, donation_amount) VALUES (1, 'John', 'Doe', 500.00), (2, 'Jane', 'Smith', 350.00), (3, 'Mike', 'Johnson', 700.00); CREATE TABLE donations (donation_id INT, donor_id INT, organization_id INT, donation_amount FLOAT); INSERT INTO donations (donation_id, donor_id, organization_id, donation_amount) VALUES (1, 2, 101, 350.00), (2, 3, 102, 700.00); CREATE TABLE organizations (organization_id INT, organization_name TEXT); INSERT INTO organizations (organization_id, organization_name) VALUES (101, 'Effective Altruism'), (102, 'Impact Investing');", "output": "SELECT organizations.organization_name FROM organizations INNER JOIN donations ON organizations.organization_id = donations.organization_id INNER JOIN donors ON donations.donor_id = donors.donor_id WHERE donors.last_name = 'Smith';"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15 \uc218 \uae30\uc900 \uc0c1\uc704 3\uac1c \ud56d\uad6c\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE ports (id INT, name VARCHAR(50), country VARCHAR(50)); INSERT INTO ports (id, name, country) VALUES (1, 'Port of Los Angeles', 'USA'); INSERT INTO ports (id, name, country) VALUES (2, 'Port of Rotterdam', 'Netherlands'); INSERT INTO ports (id, name, country) VALUES (3, 'Port of Singapore', 'Singapore'); INSERT INTO vessel_port (vessel_id INT, port_id INT, arrival_date DATE); INSERT INTO vessel_port (vessel_id, port_id, arrival_date) VALUES (1, 1, '2022-01-02'); INSERT INTO vessel_port (vessel_id, port_id, arrival_date) VALUES (1, 2, '2022-02-15'); INSERT INTO vessel_port (vessel_id, port_id, arrival_date) VALUES (2, 3, '2022-03-20'); INSERT INTO vessel_port (vessel_id, port_id, arrival_date) VALUES (2, 1, '2022-01-10');", "output": "SELECT p.name, COUNT(v.vessel_id) as vessel_count FROM ports p JOIN vessel_port vp ON p.id = vp.port_id JOIN vessels v ON vp.vessel_id = v.id WHERE vp.arrival_date >= '2022-01-01' AND vp.arrival_date < '2022-04-01' GROUP BY p.id ORDER BY vessel_count DESC LIMIT 3;"}
{"input": " 2018\ub144\ubd80\ud130 2019\ub144\uae4c\uc9c0 \ud504\ub77c\uc138\uc624\ub514\ubbb4 \uc0dd\uc0b0\ub7c9\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Praseodymium_Production (year INT, production FLOAT); INSERT INTO Praseodymium_Production (year, production) VALUES (2015, 2000), (2016, 2100), (2017, 2300), (2018, 2500), (2019, 2700), (2020, 2900);", "output": "SELECT ((production[year=2019] - production[year=2018])/production[year=2018])*100 FROM Praseodymium_Production WHERE year IN (2018, 2019);"}
{"input": " '\uc81c\uc870\uacf5\uc7a5 A'\uc640 '\uc81c\uc870\uacf5\uc7a5 B'\uc5d0\uc11c\ub294 \uc0dd\uc0b0\ub418\uc9c0\ub9cc '\uc81c\uc870\uacf5\uc7a5 C'\uc5d0\uc11c\ub294 \uc0dd\uc0b0\ub418\uc9c0 \uc54a\ub294 \ud654\ud559\ubb3c\uc9c8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Manufacturing_Plant_B (Substance_Name VARCHAR(255), Quantity INT); INSERT INTO Manufacturing_Plant_B (Substance_Name, Quantity) VALUES ('Ethanol', 600), ('Isopropanol', 400); CREATE TABLE Manufacturing_Plant_C (Substance_Name VARCHAR(255), Quantity INT); INSERT INTO Manufacturing_Plant_C (Substance_Name, Quantity) VALUES ('Ethanol', 500), ('Methanol', 700), ('Propanol', 800);", "output": "(SELECT Substance_Name FROM Manufacturing_Plant_A) INTERSECT (SELECT Substance_Name FROM Manufacturing_Plant_B) EXCEPT (SELECT Substance_Name FROM Manufacturing_Plant_C);"}
{"input": " \uccab \ubc88\uc9f8 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc218\ud589\ud558\ub294 \ub3d9\uc548 \uc778\ub3c4 \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Astronauts (astronaut_name VARCHAR(30), age INT, first_mission_date DATE, nationality VARCHAR(20)); INSERT INTO Astronauts (astronaut_name, age, first_mission_date, nationality) VALUES ('Astronaut3', 45, '2005-01-01', 'India');", "output": "SELECT AVG(age) FROM Astronauts WHERE nationality = 'India' AND first_mission_date = (SELECT MIN(first_mission_date) FROM Astronauts WHERE nationality = 'India');"}
{"input": " \ubcf4\uc2b5\uacfc \uac00\ubcbc\uc6c0\uc744 \ub3d9\uc2dc\uc5d0 \uac16\ucd98 \ubbf8\uad6d\uc774\ub098 \uce90\ub098\ub2e4\uc0b0 \uc81c\ud488\uc758 ID\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE consumer_preferences (id INT, consumer_id INT, product_id INT, preference TEXT); INSERT INTO consumer_preferences (id, consumer_id, product_id, preference) VALUES (1, 1, 1, 'moisturizing'), (2, 1, 2, 'lightweight'), (3, 2, 1, 'organic'), (4, 2, 3, 'matte finish'); CREATE TABLE ingredient_sourcing (id INT, product_id INT, country TEXT); INSERT INTO ingredient_sourcing (id, product_id, country) VALUES (1, 1, 'USA'), (2, 2, 'Canada'), (3, 3, 'Mexico'), (4, 4, 'France');", "output": "SELECT product_id FROM consumer_preferences WHERE preference IN ('moisturizing', 'lightweight') INTERSECT SELECT product_id FROM ingredient_sourcing WHERE country IN ('USA', 'Canada');"}
{"input": " '\ud5e4\uc5b4\ucf00\uc5b4' \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc120\ud638\ub3c4\uac00 150\uc744 \ub118\uace0 \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\uac00 90 \uc774\uc0c1\uc778 \uacf5\uae09\uc5c5\uccb4\uac00 \ud310\ub9e4\ud558\ub294 \ubbf8\uc6a9 \uc81c\ud488\uc740 \ubb34\uc5c7\uc774\uba70, \uc774\ub7ec\ud55c \uc81c\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE consumer_preferences (id INT PRIMARY KEY, customer_id INT, product VARCHAR(100), preference INT, FOREIGN KEY (customer_id) REFERENCES customers(id)); CREATE TABLE beauty_products (id INT PRIMARY KEY, product VARCHAR(100), category VARCHAR(100), price FLOAT); CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(100), product VARCHAR(100), country VARCHAR(100), sustainability_score INT); CREATE TABLE cosmetics_sales (id INT PRIMARY KEY, product VARCHAR(100), quantity INT, revenue FLOAT, supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id));", "output": "SELECT cp.product, SUM(cs.revenue) as total_revenue FROM consumer_preferences cp JOIN beauty_products bp ON cp.product = bp.product JOIN cosmetics_sales cs ON cp.product = cs.product JOIN suppliers s ON cs.supplier_id = s.id WHERE bp.category = 'haircare' AND cp.preference > 150 AND s.sustainability_score >= 90 GROUP BY cp.product;"}
{"input": " 2017\ub144 \ub300\ube44 2019\ub144 \ud50c\ub77c\uc2a4\ud2f1 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates (id INT, material VARCHAR(20), year INT, recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates (id, material, year, recycling_rate) VALUES (1, 'plastic', 2017, 0.25), (2, 'plastic', 2018, 0.28), (3, 'plastic', 2019, 0.31), (4, 'paper', 2017, 0.60), (5, 'paper', 2018, 0.63), (6, 'paper', 2019, 0.66), (7, 'glass', 2017, 0.35), (8, 'glass', 2018, 0.37), (9, 'glass', 2019, 0.39);", "output": "SELECT (recycling_rate - (SELECT recycling_rate FROM recycling_rates r2 WHERE r2.material = 'plastic' AND r2.year = 2017)) FROM recycling_rates WHERE material = 'plastic' AND year = 2019;"}
{"input": " \uac01 VR \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \uace0\uc720 \ud50c\ub808\uc774\uc5b4 \uc218\uc640 \uc774\ub7ec\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10)); CREATE TABLE VR_Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20)); CREATE TABLE VR_PlayerGames (PlayerID INT, GameID INT);", "output": "SELECT VR_Games.GameName, COUNT(DISTINCT Players.PlayerID), AVG(Players.Age) FROM Players INNER JOIN VR_PlayerGames ON Players.PlayerID = VR_PlayerGames.PlayerID INNER JOIN VR_Games ON VR_PlayerGames.GameID = VR_Games.GameID GROUP BY VR_Games.GameName;"}
{"input": " \uac01 \ubcc0\ud638\uc0ac\uc5d0 \ub300\ud55c \ucd1d \uc0ac\uac74 \uc218\uc640 \uccad\uad6c \uae08\uc561\uc744 \uc81c\uc2dc\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE AttorneyInfo (AttorneyID INT, Cases INT, Amount DECIMAL(10,2)); INSERT INTO AttorneyInfo (AttorneyID, Cases, Amount) VALUES (1, 1000, 5000), (2, 1500, 7000);", "output": "SELECT a.Name, SUM(a.Cases) AS TotalCases, SUM(a.Amount) AS TotalBilling FROM AttorneyInfo a GROUP BY a.Name;"}
{"input": "\ub274\uc695\uacfc \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \uc2b9\uc18c\ud55c \ubcc0\ud638\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Attorneys (AttorneyID INT, Name TEXT, Wins INT); INSERT INTO Attorneys VALUES (1, 'Smith', 10), (2, 'Johnson', 5), (3, 'Williams', 15); CREATE TABLE NYCases (CaseID INT, AttorneyID INT, Outcome TEXT); INSERT INTO NYCases VALUES (1, 1, 'Won'), (2, 2, 'Lost'), (3, 3, 'Won'); CREATE TABLE CACases (CaseID INT, AttorneyID INT, Outcome TEXT); INSERT INTO CACases VALUES (1, 1, 'Won'), (2, 3, 'Won');", "output": "SELECT a.Name FROM Attorneys a INNER JOIN NYCases n ON a.AttorneyID = n.AttorneyID WHERE n.Outcome = 'Won' INTERSECT SELECT a.Name FROM Attorneys a INNER JOIN CACases c ON a.AttorneyID = c.AttorneyID WHERE c.Outcome = 'Won';"}
{"input": " \ubaa8\ub4e0 \uc720\ub85c\ud4f8 \uc0dd\uc0b0\ub7c9\uacfc \uad6d\uac00\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE europium_production (country VARCHAR(20), quantity INT); INSERT INTO europium_production (country, quantity) VALUES ('China', 1200), ('USA', 450), ('Australia', 180), ('Russia', 600);", "output": "SELECT DISTINCT country, quantity FROM europium_production;"}
{"input": " \uc9c0\ub09c \ud55c \uc8fc \ub3d9\uc548 \uae30\uacc4\ub2f9 \uc77c\uc77c \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc758 \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE EnergyConsumption (Machine VARCHAR(50), Energy INT, Timestamp DATETIME);", "output": "SELECT Machine, LAG(Energy) OVER (PARTITION BY Machine ORDER BY Timestamp) - Energy AS EnergyChange FROM EnergyConsumption WHERE Timestamp >= DATEADD(day, -7, CURRENT_TIMESTAMP)"}
{"input": " 2022-01-01 \ud604\uc7ac \ubbf8\uad6d \uace0\uac1d\uc758 \ucd1d \uc790\uc0b0 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer (customer_id INT, name VARCHAR(100), country VARCHAR(50), assets_value DECIMAL(18,2)); INSERT INTO customer (customer_id, name, country, assets_value) VALUES (1, 'John Doe', 'USA', 50000.00), (2, 'Jane Smith', 'Canada', 75000.00);", "output": "SELECT SUM(assets_value) FROM customer WHERE country = 'USA';"}
{"input": " \uad6d\uac00\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE donations (id INT, donation_amount DECIMAL, country TEXT); INSERT INTO donations (id, donation_amount, country) VALUES (1, 150.00, 'Germany'), (2, 250.00, 'Germany'), (3, 300.00, 'Canada'), (4, 50.00, 'USA'), (5, 100.00, 'USA');", "output": "SELECT country, AVG(donation_amount) FROM donations GROUP BY country;"}
{"input": " \uc5f0\uac04 \uba87 \uac1c\uc758 \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE InfrastructureProjects (Id INT, Name VARCHAR(255), Location VARCHAR(255), CompletionYear INT); INSERT INTO InfrastructureProjects (Id, Name, Location, CompletionYear) VALUES (1, 'Dam', 'City A', 2020), (2, 'Bridge', 'City B', 2019), (3, 'Road', 'City C', 2020), (4, 'Tunnel', 'City D', 2018), (5, 'Highway', 'City E', 2017);", "output": "SELECT CompletionYear, COUNT(*) as NumberOfProjects FROM InfrastructureProjects GROUP BY CompletionYear;"}
{"input": " \ub2ec\uc5d0 \ubc1c\uc744 \ub514\ub518 \ucd5c\ucd08\uc758 \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE Astronauts (id INT PRIMARY KEY, name VARCHAR(255), mission VARCHAR(255)); CREATE TABLE SpaceMissions (id INT PRIMARY KEY, name VARCHAR(255), moon_walk BOOLEAN); CREATE TABLE AstronautMissions (id INT PRIMARY KEY, astronaut_id INT, mission_id INT, FOREIGN KEY (astronaut_id) REFERENCES Astronauts(id), FOREIGN KEY (mission_id) REFERENCES SpaceMissions(id));", "output": "SELECT a.name FROM Astronauts a JOIN AstronautMissions am ON a.id = am.astronaut_id JOIN SpaceMissions m ON am.mission_id = m.id WHERE m.moon_walk = TRUE LIMIT 1;"}
{"input": " \ud14d\uc0ac\uc2a4 \ub610\ub294 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ud574\uacb0\ub41c \uc0ac\ub840\uc758 \uc0ac\ub840 ID \ubc0f \uacb0\uacfc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cases (case_id INT, case_outcome VARCHAR(10), case_state VARCHAR(10)); INSERT INTO cases (case_id, case_outcome, case_state) VALUES (1, 'Won', 'Texas'), (2, 'Lost', 'California'), (3, 'Pending', 'Texas');", "output": "SELECT case_id, case_outcome FROM cases WHERE case_state = 'Texas' UNION SELECT case_id, case_outcome FROM cases WHERE case_state = 'California';"}
{"input": " \uc870\ud569\uc6d0 \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \ub178\ub3d9\uc870\ud569\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE union_membership (id INT, union VARCHAR(20), member_count INT); INSERT INTO union_membership (id, union, member_count) VALUES (1, 'construction', 3500), (2, 'education', 8000), (3, 'manufacturing', 5000);", "output": "SELECT union FROM union_membership WHERE member_count = (SELECT MIN(member_count) FROM union_membership);"}
{"input": " \ubbf8\uad6d \uc9c0\uc5ed\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \ubaa8\ub4e0 \uc81c\ud488\uc758 \ud3c9\uade0 \uc131\ubd84 \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE product (product_id INT, product_name TEXT); CREATE TABLE ingredient (ingredient_id INT, product_id INT, weight FLOAT, country TEXT); CREATE TABLE purchase (purchase_id INT, product_id INT, purchase_date DATE, region TEXT); INSERT INTO product VALUES (1, 'Lipstick'), (2, 'Moisturizer'); INSERT INTO ingredient VALUES (1, 1, 50.0, 'CA'), (2, 1, 25.0, 'US'), (3, 2, 30.0, 'CA'); INSERT INTO purchase VALUES (1, 1, '2022-01-10', 'US'), (2, 2, '2022-01-15', 'CA');", "output": "SELECT AVG(weight) FROM ingredient i JOIN product p ON i.product_id = p.product_id JOIN purchase pu ON p.product_id = pu.product_id WHERE pu.region = 'US';"}
{"input": " 2021\ub144 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ud658\uc790 \uc218 \uae30\uc900 \uc0c1\uc704 3\uac00\uc9c0 \uc815\uc2e0 \uac74\uac15 \uc0c1\ud0dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE conditions (condition_id INT, condition_name VARCHAR(50), state VARCHAR(20), year INT, patient_count INT); INSERT INTO conditions VALUES (1, 'Depression', 'California', 2021, 1500), (2, 'Anxiety', 'California', 2021, 1200), (3, 'Bipolar', 'California', 2021, 800);", "output": "SELECT condition_name, patient_count FROM (SELECT condition_name, patient_count, ROW_NUMBER() OVER (ORDER BY patient_count DESC) AS rn FROM conditions WHERE state = 'California' AND year = 2021) t WHERE rn <= 3;"}
{"input": " 2021\ub144 4\uc6d4 \uad6d\uac00\ubcc4 \uae30\ubd80\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, country VARCHAR(50), donation_amount DECIMAL(10,2), donation_date DATE); INSERT INTO donations (id, country, donation_amount, donation_date) VALUES (1, 'USA', 500.00, '2021-04-01'), (2, 'Canada', 350.00, '2021-04-05'), (3, 'Mexico', 200.00, '2021-04-10');", "output": "SELECT country, SUM(donation_amount) as total_donations FROM donations WHERE donation_date BETWEEN '2021-04-01' AND '2021-04-30' GROUP BY country;"}
{"input": " \uad6d\uac00\ubcc4 \uce5c\ud658\uacbd \ud638\ud154\uc758 \ucd1d \uc218\uc775\uc744 \uc218\uc775\uc21c\uc73c\ub85c \uc0b4\ud3b4\ubcfc\uae4c\uc694?", "context": "CREATE TABLE eco_hotel_revenue (hotel_id INT, hotel_name TEXT, country TEXT, revenue FLOAT); INSERT INTO eco_hotel_revenue (hotel_id, hotel_name, country, revenue) VALUES (1, 'Eco-Friendly Hotel 1', 'France', 100000), (2, 'Eco-Friendly Hotel 2', 'France', 120000), (3, 'Eco-Friendly Hotel 3', 'Italy', 150000), (4, 'Eco-Friendly Hotel 4', 'Italy', 110000), (5, 'Eco-Friendly Hotel 5', 'Germany', 180000), (6, 'Eco-Friendly Hotel 6', 'Germany', 200000);", "output": "SELECT country, SUM(revenue) AS total_revenue, RANK() OVER (ORDER BY SUM(revenue) DESC) AS revenue_rank FROM eco_hotel_revenue GROUP BY country;"}
{"input": " \ub3d9\ubd80 \uc9c0\uc5ed \ud1b5\uc2e0\uc5c5\uccb4\uc758 \ud3c9\uade0 \ub124\ud2b8\uc6cc\ud06c \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE network_investments (investment FLOAT, region VARCHAR(20)); INSERT INTO network_investments (investment, region) VALUES (120000, 'Western'), (150000, 'Northern'), (180000, 'Western'), (200000, 'Northern'), (250000, 'Eastern'); CREATE TABLE average_investment (avg_investment FLOAT); INSERT INTO average_investment (avg_investment) VALUES (166666.66666666666);", "output": "SELECT AVG(investment) FROM network_investments WHERE region = 'Eastern';"}
{"input": " \ud14d\uc0ac\uc2a4 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ud3c9\uade0 \ubb38\ud654 \uc5ed\ub7c9 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(100), state VARCHAR(50), cultural_competency_score INT); INSERT INTO community_health_workers (id, name, state, cultural_competency_score) VALUES (1, 'John Doe', 'Texas', 85), (2, 'Jane Smith', 'California', 90), (3, 'Jose Garcia', 'Texas', 80);", "output": "SELECT AVG(cultural_competency_score) FROM community_health_workers WHERE state = 'Texas';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc9c0\uc5ed \ud589\uc0ac\uc758 1\ubc15\ub2f9 \ud3c9\uade0 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Events (id INT, name TEXT, location TEXT, type TEXT, start_date DATE, end_date DATE, co2_emission INT); INSERT INTO Events (id, name, location, type, start_date, end_date, co2_emission) VALUES (1, 'Local Festival', 'California', 'Local', '2022-03-01', '2022-03-05', 500);", "output": "SELECT AVG(co2_emission / DATEDIFF(end_date, start_date)) FROM Events WHERE location = 'California' AND type = 'Local';"}
{"input": " \ubaa8\ub4e0 \ucc28\ub7c9\uc758 \ud3c9\uade0 \uace0\uc7a5 \uac04\uaca9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vehicle_types (type_id INT, type_name TEXT); CREATE TABLE fleet (vehicle_id INT, vehicle_type_id INT, license_plate TEXT); CREATE TABLE failures (failure_id INT, vehicle_id INT, failure_time TIMESTAMP); INSERT INTO vehicle_types VALUES (1, 'Bus'), (2, 'Tram'), (3, 'Train'); INSERT INTO fleet VALUES (1, 1, 'ABC123'), (2, 1, 'DEF456'), (3, 2, 'GHI789'), (4, 3, 'JKL012'), (5, 3, 'MNO345'); INSERT INTO failures VALUES (1, 1, '2022-01-01 08:00:00'), (2, 1, '2022-01-01 12:00:00'), (3, 2, '2022-01-01 09:00:00'), (4, 3, '2022-01-01 10:00:00'), (5, 3, '2022-01-01 13:00:00');", "output": "SELECT AVG(TIMESTAMPDIFF(MINUTE, failures.failure_time, LEAD(failures.failure_time) OVER (ORDER BY failures.failure_time))) AS avg_time_between_failures FROM failures;"}
{"input": " \ud3c9\uade0\ubcf4\ub2e4 \uac00\uaca9\uc774 \ub192\uc740 \ud22c\uc5b4\uc5d0 \ub300\ud574 \ucd1d \uc218\uc775 \uae30\uc900 \uc0c1\uc704 5\uac1c \uac00\uc0c1 \ud22c\uc5b4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE VirtualTours (TourID int, TourName varchar(255), Price float, Revenue float); INSERT INTO VirtualTours (TourID, TourName, Price, Revenue) VALUES (1, 'Tour A', 10, 500), (2, 'Tour B', 15, 800), (3, 'Tour C', 20, 1200), (4, 'Tour D', 5, 300), (5, 'Tour E', 25, 1500);", "output": "SELECT TourName, Revenue FROM (SELECT TourName, Price, Revenue, AVG(Price) OVER () as AvgPrice, RANK() OVER (ORDER BY Revenue DESC) as RevenueRank FROM VirtualTours) as Subquery WHERE Subquery.Price > Subquery.AvgPrice AND Subquery.RevenueRank <= 5;"}
{"input": " \ud559\uad70\ub2f9 \ud559\uc0dd\uc758 \ud3c9\uade0 \uc815\uc2e0 \uac74\uac15 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_mental_health (student_id INT, district_id INT, mental_health_score INT); INSERT INTO student_mental_health (student_id, district_id, mental_health_score) VALUES (1, 101, 75), (2, 101, 80), (3, 102, 65), (4, 102, 70), (5, 103, 85);", "output": "SELECT district_id, AVG(mental_health_score) FROM student_mental_health GROUP BY district_id;"}
{"input": " 2022\ub144 \ud574\ub2f9 \uc8fc \ud3c9\uade0\ubcf4\ub2e4 \uc2b9\uac1d \uc218\uac00 \ub9ce\uc740 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc744 \ud30c\uc545\ud558\uc138\uc694.", "context": "CREATE TABLE public_transportation_3 (system_id INT, system_name VARCHAR(255), ridership INT, year INT, state VARCHAR(255));", "output": "SELECT system_name, ridership, year FROM public_transportation_3 WHERE year = 2022 AND ridership > (SELECT AVG(ridership) FROM public_transportation_3 WHERE year = 2022 AND state = state) ORDER BY ridership DESC;"}
{"input": " Warriors\uc758 \uacbd\uae30\ub2f9 \ud3c9\uade0 \ub9ac\ubc14\uc6b4\ub4dc \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); INSERT INTO teams (team_id, team_name) VALUES (1, 'Warriors'); CREATE TABLE games (game_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, home_team_rebounds INT, away_team_rebounds INT); INSERT INTO games (game_id, home_team_id, away_team_id, home_team_score, away_team_score, home_team_rebounds, away_team_rebounds) VALUES (1, 1, 2, 100, 90, 50, 40), (2, 2, 1, 80, 85, 45, 55), (3, 1, 3, 110, 105, 60, 50), (4, 4, 1, 70, 75, 30, 40);", "output": "SELECT AVG(home_team_rebounds + away_team_rebounds) as avg_rebounds FROM games WHERE home_team_id = (SELECT team_id FROM teams WHERE team_name = 'Warriors') OR away_team_id = (SELECT team_id FROM teams WHERE team_name = 'Warriors');"}
{"input": " \uac01 \uad6d\uac00\uc758 \uac01 \ub124\ud2b8\uc6cc\ud06c \uc720\ud615\uc5d0 \ub300\ud55c \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE network_type_broadband (network_type VARCHAR(20)); INSERT INTO network_type_broadband (network_type) VALUES ('Fiber'), ('Cable'), ('DSL'); CREATE TABLE mobile_subscribers (subscriber_id INT, name VARCHAR(50), country VARCHAR(50), network_type VARCHAR(20)); CREATE TABLE broadband_subscribers (subscriber_id INT, name VARCHAR(50), country VARCHAR(50), network_type VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, name, country, network_type) VALUES (1, 'John Doe', 'USA', '5G'); INSERT INTO broadband_subscribers (subscriber_id, name, country, network_type) VALUES (2, 'Jane Doe', 'Canada', 'Fiber');", "output": "SELECT mobile_subscribers.country, mobile_subscribers.network_type, COUNT(mobile_subscribers.subscriber_id) + COUNT(broadband_subscribers.subscriber_id) AS total_subscribers FROM mobile_subscribers JOIN broadband_subscribers ON mobile_subscribers.country = broadband_subscribers.country JOIN network_type_broadband ON mobile_subscribers.network_type = network_type_broadband.network_type WHERE mobile_subscribers.network_type = broadband_subscribers.network_type GROUP BY mobile_subscribers.country, mobile_subscribers.network_type;"}
{"input": "\ub274\uc695\uacfc \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \ubaa8\ub4e0 \uc790\uc6d0\ubd09\uc0ac\uc790\ub97c \uc5f0\ub77d\ucc98 \uc815\ubcf4\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Volunteers (VolunteerID INT, FirstName TEXT, LastName TEXT, Country TEXT); INSERT INTO Volunteers (VolunteerID, FirstName, LastName, Country) VALUES (1, 'Alice', 'Williams', 'USA'), (2, 'Bob', 'Jones', 'USA'), (3, 'Charlie', 'Brown', 'USA'); CREATE TABLE VolunteerPrograms (VolunteerID INT, ProgramID INT, Location TEXT); INSERT INTO VolunteerPrograms (VolunteerID, ProgramID, Location) VALUES (1, 101, 'NY'), (1, 102, 'CA'), (2, 101, 'NY'), (3, 102, 'CA');", "output": "SELECT V.FirstName, V.LastName, V.Country  FROM Volunteers V  INNER JOIN VolunteerPrograms VP1 ON V.VolunteerID = VP1.VolunteerID AND VP1.Location = 'NY'  INNER JOIN VolunteerPrograms VP2 ON V.VolunteerID = VP2.VolunteerID AND VP2.Location = 'CA';"}
{"input": " \uad6d\uac00\ubcc4, \uc5f0\ub3c4\ubcc4 \uad70\ube44 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_spending (id INT, country VARCHAR(255), amount FLOAT, year INT); INSERT INTO military_spending (id, country, amount, year) VALUES (1, 'Brazil', 25.6, 2018); INSERT INTO military_spending (id, country, amount, year) VALUES (2, 'South Africa', 30.8, 2019);", "output": "SELECT country, year, SUM(amount) as total_spending FROM military_spending GROUP BY country, year;"}
{"input": " \uac01 \ubc14\ub2e4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc218\uc911 \ucf00\uc774\ube14\uc758 \ucd1d \uae38\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE underwater_cables (cable_name TEXT, location TEXT, length FLOAT); INSERT INTO underwater_cables VALUES ('Trans-Atlantic Cable', 'Atlantic Ocean', 6600), ('Tasman Cable', 'Pacific Ocean', 2300);", "output": "SELECT location, SUM(length) FROM underwater_cables GROUP BY location;"}
{"input": " 2020\ub144 \uc6d4 \ud3c9\uade0 \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CybersecurityIncidents (Id INT, Month VARCHAR(50), Incidents INT, Year INT); INSERT INTO CybersecurityIncidents (Id, Month, Incidents, Year) VALUES (1, 'January', 25, 2020); INSERT INTO CybersecurityIncidents (Id, Month, Incidents, Year) VALUES (2, 'February', 30, 2020);", "output": "SELECT AVG(Incidents) FROM CybersecurityIncidents WHERE Year = 2020 GROUP BY Month;"}
{"input": " \ud638\ud154 \uc0b0\uc5c5\uc758 AI \ud22c\uc790 \ubd84\ud3ec\ub294 \uc9c0\uc5ed\ubcc4\ub85c \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE ai_investments (investment_id INT, investment_amount FLOAT, region TEXT, industry TEXT); INSERT INTO ai_investments (investment_id, investment_amount, region, industry) VALUES (1, 1000000, 'APAC', 'Hospitality'), (2, 1500000, 'North America', 'Hospitality');", "output": "SELECT region, AVG(investment_amount) FROM ai_investments WHERE industry = 'Hospitality' GROUP BY region;"}
{"input": " 2022\ub144 1\uc6d4 \uc694\ub9ac \uc720\ud615\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE restaurant_revenue (restaurant_id INT, cuisine_type VARCHAR(255), revenue DECIMAL(10,2), transaction_date DATE); INSERT INTO restaurant_revenue (restaurant_id, cuisine_type, revenue, transaction_date) VALUES (1, 'Italian', 5000, '2022-01-01'), (2, 'Mexican', 7000, '2022-01-02');", "output": "SELECT cuisine_type, SUM(revenue) as total_revenue FROM restaurant_revenue WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY cuisine_type;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \uac00\ub3cc\ub9ac\ub284 \uac70\ub798 \ucd5c\uace0 \uac00\uaca9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE gadolinium_transactions (country VARCHAR(20), element VARCHAR(20), price DECIMAL(5,2), transaction_date DATE); INSERT INTO gadolinium_transactions (country, element, price, transaction_date) VALUES ('South Africa', 'Gadolinium', 40, '2020-01-01'), ('Egypt', 'Gadolinium', 45, '2020-02-01'), ('South Africa', 'Gadolinium', 50, '2020-03-01');", "output": "SELECT MAX(price) FROM gadolinium_transactions WHERE country IN ('South Africa', 'Egypt') AND element = 'Gadolinium';"}
{"input": " \ud574\uc0c1 \uc720\uc815\uacfc \uc721\uc0c1 \uc720\uc815\uc758 \uc0dd\uc0b0 \ucd94\uc138 \ube44\uad50", "context": "CREATE TABLE if not exists fact_production (production_id INT PRIMARY KEY, well_id INT, date DATE, oil_volume DECIMAL(10,2), gas_volume DECIMAL(10,2)); CREATE TABLE if not exists dim_well (well_id INT PRIMARY KEY, well_name VARCHAR(255), location VARCHAR(255)); CREATE TABLE if not exists dim_date (date DATE PRIMARY KEY, year INT, month INT, day INT);", "output": "SELECT dim_well.location, AVG(fact_production.oil_volume) AS avg_oil_volume, AVG(fact_production.gas_volume) AS avg_gas_volume FROM fact_production INNER JOIN dim_well ON fact_production.well_id = dim_well.well_id INNER JOIN dim_date ON fact_production.date = dim_date.date GROUP BY dim_well.location WITH ROLLUP;"}
{"input": " 2021\ub144\uc5d0\ub294 \ud55c \ub2ec\uc5d0 \uba87 \uac1c\uc758 \ub274\uc2a4 \uae30\uc0ac\uac00 \uac8c\uc7ac\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE news (id INT, title VARCHAR(255), publication_date DATE); INSERT INTO news (id, title, publication_date) VALUES (1, 'Article1', '2021-01-01'), (2, 'Article2', '2021-02-15'), (3, 'Article3', '2021-03-05');", "output": "SELECT DATE_FORMAT(publication_date, '%Y-%m') as month, COUNT(*) as articles_count FROM news WHERE publication_date >= '2021-01-01' AND publication_date < '2022-01-01' GROUP BY month;"}
{"input": " \uac01 \ub098\ub77c\uc758 \uc804\ud1b5\uc608\uc220 \uc885\uc0ac\uc790 \uc218\ub294 \ucd5c\ub300 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE max_practitioners (id INT, country VARCHAR(50), art VARCHAR(50), practitioners INT); INSERT INTO max_practitioners (id, country, art, practitioners) VALUES (1, 'Canada', 'Inuit carving', 700); INSERT INTO max_practitioners (id, country, art, practitioners) VALUES (2, 'New Zealand', 'M\u0101ori tattooing', 300);", "output": "SELECT country, MAX(practitioners) FROM max_practitioners GROUP BY country;"}
{"input": " \ubc14\ub85c\ud06c \uc2dc\ub300 \ubbf8\uc220\ud488\uc758 \ud3c9\uade0 \ud310\ub9e4 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE art_history (id INT PRIMARY KEY, era VARCHAR(50), start_year INT, end_year INT); INSERT INTO art_history (id, era, start_year, end_year) VALUES (2, 'Baroque', 1600, 1750); CREATE TABLE auctions (id INT PRIMARY KEY, date DATE, art_piece_id INT, sold_price DECIMAL(5,2)); INSERT INTO auctions (id, date, art_piece_id, sold_price) VALUES (2, '2022-02-01', 2, 7000.00);", "output": "SELECT AVG(a.sold_price) as average_price FROM auctions a JOIN art_pieces ap ON a.art_piece_id = ap.id JOIN artists ar ON ap.artist_id = ar.id JOIN art_history ah ON ar.style = ah.era WHERE ah.era = 'Baroque';"}
{"input": " \uac01 \ud574\uc591 \uc11c\uc2dd\uc9c0\uc758 \uc885 \uc218\uc640 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_habitats (habitat_name TEXT, species TEXT, biomass FLOAT);", "output": "SELECT marine_habitats.habitat_name, COUNT(DISTINCT marine_habitats.species) AS num_species, SUM(marine_habitats.biomass) AS total_biomass FROM marine_habitats GROUP BY marine_habitats.habitat_name;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 10\uac1c \uc774\uc0c1\uc758 \uad11\uace0\uc5d0 \ucc38\uc5ec\ud55c \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \ud314\ub85c\uc5b4 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_ads (user_id INT, ad_date DATE); CREATE TABLE users (id INT, followers INT);", "output": "SELECT AVG(f.followers) FROM users f JOIN (SELECT user_id FROM user_ads WHERE ad_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY user_id HAVING COUNT(*) >= 10) t ON f.id = t.user_id;"}
{"input": " \ud559\uc2b5 \uc7a5\uc560\uc640 ADHD\uac00 \ubaa8\ub450 \uc788\ub294 \ud559\uc0dd\ub4e4\uc740 \uc5b4\ub5a4 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SupportPrograms (ProgramID INT, Name VARCHAR(50), Description TEXT, Coordinator VARCHAR(50)); CREATE TABLE StudentSupportPrograms (StudentID INT, ProgramID INT); CREATE TABLE Students (StudentID INT, Disability VARCHAR(50), Name VARCHAR(50));", "output": "SELECT sp.Name FROM SupportPrograms sp JOIN StudentSupportPrograms ssp ON sp.ProgramID = ssp.ProgramID JOIN Students s ON ssp.StudentID = s.StudentID WHERE s.Disability IN ('learning disabilities', 'ADHD') GROUP BY sp.Name HAVING COUNT(DISTINCT s.StudentID) > 1;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac01\uad6d\uc758 \uad70\uc0ac\ube44 \uc9c0\ucd9c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_expenditure (country VARCHAR(50), year INT, amount INT); INSERT INTO military_expenditure (country, year, amount) VALUES ('USA', 2020, 73200000000), ('China', 2020, 261000000000), ('India', 2020, 71400000000), ('USA', 2019, 71200000000), ('China', 2019, 258000000000);", "output": "SELECT country, SUM(amount) FROM military_expenditure WHERE year BETWEEN 2017 AND 2021 GROUP BY country;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uc77c\ubcf8\uacfc \ud55c\uad6d\uc5d0\uc11c \uc7a5\ub974\ubcc4\ub85c \uc81c\uc791\ub41c TV \ud504\ub85c\uadf8\ub7a8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE tv_shows (id INT, title VARCHAR(255), release_year INT, rating DECIMAL(3,2), genre VARCHAR(255), country VARCHAR(255)); INSERT INTO tv_shows (id, title, release_year, rating, genre, country) VALUES (1, 'TVShow1', 2018, 8.2, 'Drama', 'Japan'); INSERT INTO tv_shows (id, title, release_year, rating, genre, country) VALUES (2, 'TVShow2', 2019, 7.5, 'Comedy', 'Japan'); INSERT INTO tv_shows (id, title, release_year, rating, genre, country) VALUES (3, 'TVShow3', 2020, 8.8, 'Action', 'Japan'); INSERT INTO tv_shows (id, title, release_year, rating, genre, country) VALUES (4, 'TVShow4', 2021, 9.0, 'Thriller', 'Korea'); INSERT INTO tv_shows (id, title, release_year, rating, genre, country) VALUES (5, 'TVShow5', 2017, 7.0, 'Romance', 'Korea');", "output": "SELECT genre, country, 100.0 * COUNT(*) / (SELECT COUNT(*) FROM tv_shows WHERE release_year BETWEEN 2017 AND 2021 AND (country = 'Japan' OR country = 'Korea')) as percentage FROM tv_shows WHERE release_year BETWEEN 2017 AND 2021 AND (country = 'Japan' OR country = 'Korea') GROUP BY genre, country;"}
{"input": " \uc624\uc2a4\ud2f4 \uc2dc\uc5d0\uc11c \uae34\uae09 \uc804\ud654\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc751\ub2f5 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, city VARCHAR(50), response_time INT); INSERT INTO emergency_calls (id, city, response_time) VALUES (1, 'Austin', 8); INSERT INTO emergency_calls (id, city, response_time) VALUES (2, 'Austin', 10);", "output": "SELECT AVG(response_time) FROM emergency_calls WHERE city = 'Austin';"}
{"input": " '\ud604\ub300 \ubbf8\uc220' \uc804\uc2dc\ud68c \uc791\ud488\uc758 \uc544\ud2f0\uc2a4\ud2b8_ID \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE artworks (id INT, name VARCHAR(255), artist_id INT); CREATE TABLE exhibitions (id INT, name VARCHAR(255)); CREATE TABLE exhibition_artworks (exhibition_id INT, artwork_id INT); INSERT INTO artworks (id, name, artist_id) VALUES (1, 'The Persistence of Memory', 1); INSERT INTO exhibitions (id, name) VALUES (1, 'Contemporary Art'); INSERT INTO exhibition_artworks (exhibition_id, artwork_id) VALUES (1, 1);", "output": "WITH updated_artworks AS (UPDATE artworks SET artist_id = 2 WHERE id IN (SELECT artwork_id FROM exhibition_artworks WHERE exhibition_id = 1)) SELECT * FROM updated_artworks;"}
{"input": "\uad6d\uac00\ubcc4\ub85c \ubc1c\uc0ac\ub41c \uc704\uc131\uc758 \ucd1d \uac1c\uc218\ub294 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA aerospace; CREATE TABLE aerospace.satellites (satellite_id INT, country VARCHAR(50), launch_date DATE); INSERT INTO aerospace.satellites VALUES (1, 'USA', '2000-01-01'); INSERT INTO aerospace.satellites VALUES (2, 'Russia', '2001-02-01'); INSERT INTO aerospace.satellites VALUES (3, 'China', '2002-03-01');", "output": "SELECT country, COUNT(satellite_id) OVER (ORDER BY COUNT(satellite_id) DESC) as total_launched FROM aerospace.satellites GROUP BY country;"}
{"input": " '\ub17c\ubc14\uc774\ub108\ub9ac'\ub85c \uc2dd\ubcc4\ub41c \uc21c \ubc29\ubb38\uc790 \uc911 '\uc601\ud654' \uce74\ud14c\uace0\ub9ac\uc758 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uc11d\ud55c \uc21c \ubc29\ubb38\uc790 \uc218\ub294 \uba87 \uba85\uc774\uba70, \uc774\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Gender VARCHAR(20));CREATE TABLE Events (EventID INT, EventName VARCHAR(20), EventCategory VARCHAR(20));CREATE TABLE VisitorAttendance (VisitorID INT, EventID INT);", "output": "SELECT AVG(V.Age) AS Avg_Age, COUNT(DISTINCT VA.VisitorID) AS Num_Unique_Visitors FROM Visitors V INNER JOIN VisitorAttendance VA ON V.VisitorID = VA.VisitorID INNER JOIN Events E ON VA.EventID = E.EventID WHERE V.Gender = 'Non-binary' AND E.EventCategory = 'Film';"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 '\uc2a4\ud3ec\uce20' \uac8c\uc784\uc5d0 \ub4f1\ub85d\ud558\uace0 1\ud68c \uc774\uc0c1 \uac70\ub798\ub97c \ud55c \uc0ac\uc6a9\uc790\uc758 \ucd1d \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Registrations (RegistrationID INT, UserID INT, RegistrationDate DATETIME, Game VARCHAR(50)); CREATE TABLE Transactions (TransactionID INT, UserID INT, TransactionDate DATETIME, TransactionValue DECIMAL(10, 2), Game VARCHAR(50)); INSERT INTO Registrations (RegistrationID, UserID, RegistrationDate, Game) VALUES (1, 1, '2021-12-10', 'Sports'), (2, 2, '2022-02-25', 'Sports'); INSERT INTO Transactions (TransactionID, UserID, TransactionDate, TransactionValue, Game) VALUES (1, 1, '2022-01-01', 50.00, 'Sports');", "output": "SELECT SUM(t.TransactionValue) FROM Transactions t INNER JOIN Registrations r ON t.UserID = r.UserID WHERE r.Game = 'Sports' AND r.RegistrationDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND EXISTS (SELECT 1 FROM Transactions tx WHERE t.UserID = tx.UserID);"}
{"input": " 2021\ub144\uacfc 2022\ub144\uc5d0 \uae30\ub85d\ub41c \uae34\uae09 \uc0ac\uace0 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE emergency_incidents (id INT, year INT, type VARCHAR(255)); INSERT INTO emergency_incidents (id, year, type) VALUES (1, 2021, 'Medical Emergency'), (2, 2022, 'Fire');", "output": "SELECT SUM(year) FROM (SELECT year FROM emergency_incidents WHERE year IN (2021, 2022)) AS subquery;"}
{"input": " \uc791\ub144\uc5d0 \uc774\ub354\ub9ac\uc6c0 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc5ec\uc131 \uac1c\ubc1c\uc790\uac00 \uac1c\ubc1c\ud55c \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ucd1d \uac1c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE smart_contracts (contract_id INT, developer_name VARCHAR(255), network VARCHAR(50), contract_date DATE);", "output": "SELECT COUNT(*) FROM (SELECT * FROM smart_contracts WHERE network = 'Ethereum' AND developer_name IN (SELECT developer_name FROM developers WHERE gender = 'Female') AND contract_date >= NOW() - INTERVAL '1 year' ) subquery;"}
{"input": " \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc5f0\uac04 \ubaa9\uc7ac \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE timber_production(year INT, volume INT); INSERT INTO timber_production(year, volume) VALUES (2018, 5000), (2019, 5500), (2020, 6000);", "output": "SELECT year, SUM(volume) FROM timber_production GROUP BY year;"}
{"input": " \uc0dd\uc0b0\ub7c9\uc774 12,000\uac1c\ub97c \ucd08\uacfc\ud558\ub294 \ucc44\uad74 \uc791\uc5c5\uc758 \ucd1d \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mining_Operations (Operation_ID INT, Mine_Name VARCHAR(100), Production_Volume INT, Energy_Consumption FLOAT); INSERT INTO Mining_Operations (Operation_ID, Mine_Name, Production_Volume, Energy_Consumption) VALUES (1, 'Golden Mine', 15000, 2500000); INSERT INTO Mining_Operations (Operation_ID, Mine_Name, Production_Volume, Energy_Consumption) VALUES (2, 'Silver Ridge', 12000, 1800000);", "output": "SELECT SUM(Energy_Consumption) as 'Total Energy Consumption' FROM Mining_Operations WHERE Production_Volume > 12000;"}
{"input": " \uc77c\ubcf8 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc218\uc775\uc774 500 \ubbf8\ub9cc\uc778 \ucf58\uc11c\ud2b8 \uae30\ub85d\uc744 \ubaa8\ub450 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Concerts (id INT, artist VARCHAR(100), city VARCHAR(100), revenue DECIMAL(10,2)); CREATE TABLE Artists (id INT, name VARCHAR(100), country VARCHAR(100));", "output": "DELETE FROM Concerts c WHERE c.revenue < 500 AND c.artist IN (SELECT a.name FROM Artists a WHERE a.country = 'Japan');"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ud3c9\uade0 \uc6a9\uc874 \uc0b0\uc18c\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \uc0c1\uc704 2\uac1c\uc758 \uc0b0\uc18c \ubaa8\ub2c8\ud130\ub9c1 \uc2a4\ud14c\uc774\uc158\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE monitoring_stations (id INT, name TEXT, location TEXT); INSERT INTO monitoring_stations (id, name, location) VALUES (1, 'Station A', 'Coast of California'), (2, 'Station B', 'Seattle Coast'), (3, 'Station C', 'Florida Keys'); CREATE TABLE oxygen_readings (id INT, station_id INT, reading DATE, level DECIMAL(5,2)); INSERT INTO oxygen_readings (id, station_id, reading, level) VALUES (1, 1, '2022-06-01', 7.5), (2, 1, '2022-06-15', 7.3), (3, 2, '2022-06-05', 7.8), (4, 2, '2022-06-20', 7.6), (5, 3, '2022-06-02', 8.2), (6, 3, '2022-06-17', 8.0);", "output": "SELECT station_id, AVG(level) avg_oxygen FROM oxygen_readings WHERE reading >= DATEADD(month, -6, CURRENT_DATE) GROUP BY station_id ORDER BY avg_oxygen ASC FETCH FIRST 2 ROWS ONLY;"}
{"input": " \uc791\ub144\uc5d0 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ud559\uc0dd\ub4e4\uc5d0\uac8c \uba87 \uac1c\uc758 \uc7a5\uc560 \ud3b8\uc758 \uc2dc\uc124\uc774 \uc81c\uacf5\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE accommodations (id INT, student_id INT, accommodation_date DATE, accommodation_type TEXT); INSERT INTO accommodations (id, student_id, accommodation_date, accommodation_type) VALUES (1, 1, '2020-01-01', 'Assistive Technology'), (2, 1, '2020-02-01', 'Note Taker'), (3, 2, '2020-01-15', 'Extended Testing Time'), (4, 3, '2019-12-20', 'Assistive Technology');", "output": "SELECT COUNT(*) FROM accommodations WHERE accommodation_date BETWEEN '2020-01-01' AND '2020-12-31' AND student_id IN (SELECT student_id FROM students WHERE state = 'California');"}
{"input": " '\uc778\ub3c4'\uc758 \uacf5\uae09\uc790\uac00 \uacf5\uae09\ud55c \uc81c\ud488\uacfc \uad00\ub828\ub41c \ubaa8\ub4e0 \uac70\ub798\ub97c \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE suppliers (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), sustainability_score INT); INSERT INTO suppliers (id, name, country, sustainability_score) VALUES (1, 'Supplier A', 'USA', 85), (2, 'Supplier B', 'India', 70); CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(255), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES suppliers(id)); INSERT INTO products (id, name, supplier_id) VALUES (1, 'Product 1', 1), (2, 'Product 2', 2), (3, 'Product 3', 2); CREATE TABLE transactions (id INT PRIMARY KEY, product_id INT, quantity INT, FOREIGN KEY (product_id) REFERENCES products(id)); INSERT INTO transactions (id, product_id, quantity) VALUES (1, 1, 10), (2, 2, 5), (3, 3, 8);", "output": "SELECT t.id, t.product_id, t.quantity FROM transactions t INNER JOIN products p ON t.product_id = p.id INNER JOIN suppliers s ON p.supplier_id = s.id WHERE s.country = 'India';"}
{"input": " 2020\ub144 \uc911\uad6d\uacfc \ub274\uc695 \ud14c\ub9c8\ud30c\ud06c\ub97c \ubc29\ubb38\ud55c \uad00\uad11\uac1d \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE china_theme (year INT, visitors INT); INSERT INTO china_theme (year, visitors) VALUES (2020, 5000000), (2019, 6000000); CREATE TABLE new_york_theme (year INT, visitors INT); INSERT INTO new_york_theme (year, visitors) VALUES (2020, 3000000), (2019, 3500000);", "output": "SELECT SUM(visitors) FROM china_theme WHERE year = 2020 UNION ALL SELECT SUM(visitors) FROM new_york_theme WHERE year = 2020;"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donations (id INT, amount FLOAT, donation_date DATE, program_category TEXT); INSERT INTO Donations (id, amount, donation_date, program_category) VALUES (1, 100.5, '2021-01-01', 'Education'), (2, 200.0, '2021-04-01', 'Health'), (3, 150.25, '2021-07-01', 'Education');", "output": "SELECT program_category, SUM(amount) as total_donations FROM Donations GROUP BY program_category;"}
{"input": " \uac00\uc7a5 \uae4a\uc740 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed \uc0c1\uc704 3\uac1c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE marine_protected_areas (name TEXT, depth FLOAT); INSERT INTO marine_protected_areas (name, depth) VALUES ('Sala y Gomez Marine Park', 4000.0), ('Galapagos Marine Reserve', 2000.0), ('Great Barrier Reef', 500.0);", "output": "SELECT name, depth FROM (SELECT name, depth, RANK() OVER (ORDER BY depth DESC) as rank FROM marine_protected_areas) as ranked_areas WHERE rank <= 3;"}
{"input": " '\ub274\uc695'\uacfc '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4'\uc758 \ubb38\ud654 \ud589\uc0ac \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cultural_events (id INT, city VARCHAR(20), revenue INT); INSERT INTO cultural_events (id, city, revenue) VALUES (1, 'New York', 1000), (2, 'Los Angeles', 1500), (3, 'Chicago', 800);", "output": "SELECT SUM(revenue) FROM cultural_events WHERE city IN ('New York', 'Los Angeles');"}
{"input": " \"\uc720\ub7fd\"\uacfc \"\uc544\uc2dc\uc544\" \ucd9c\uc2e0\uc758 \uc120\uc218\ub85c \uad6c\uc131\ub41c e\uc2a4\ud3ec\uce20 \ud300 \ub098\uc5f4", "context": "CREATE TABLE teams (id INT, region VARCHAR(10)); INSERT INTO teams (id, region) VALUES (1, 'Europe'); INSERT INTO teams (id, region) VALUES (2, 'Asia');", "output": "SELECT id FROM teams WHERE region = 'Europe' INTERSECT SELECT id FROM teams WHERE region = 'Asia';"}
{"input": " \ucf58\uc11c\ud2b8 \ucd1d \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE concerts (city VARCHAR(50), revenue INT); INSERT INTO concerts (city, revenue) VALUES ('New York', 50000), ('Los Angeles', 75000), ('Chicago', 60000);", "output": "SELECT city, MAX(revenue) FROM concerts;"}
{"input": " \uae00\ub85c\ubc8c \ub9c8\uc774\ub2dd \uc791\uc5c5\uc5d0 \ub300\ud55c \uc77c\uc77c \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9 \ubcc0\ud654\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Mining_Operation (Operation_ID INT, Mine_Name VARCHAR(50), Location VARCHAR(50), Operation_Type VARCHAR(50), Start_Date DATE, End_Date DATE); CREATE TABLE Environmental_Impact (Impact_ID INT, Operation_ID INT, Date DATE, Carbon_Emissions INT, Water_Usage INT, Waste_Generation INT);", "output": "SELECT Operation_ID, Date, Waste_Generation, LAG(Waste_Generation, 1) OVER (PARTITION BY Operation_ID ORDER BY Date) AS Previous_Day_Waste, (Waste_Generation - LAG(Waste_Generation, 1) OVER (PARTITION BY Operation_ID ORDER BY Date)) AS Daily_Change_Waste FROM Environmental_Impact WHERE Operation_ID = 4;"}
{"input": " \uac01 \uc704\ud5d8 \ud3c9\uac00 \ubaa8\ub378 \uadf8\ub8f9\uc5d0\ub294 \uba87 \uba85\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE policyholders (id INT, policyholder_name VARCHAR(50), risk_assessment_model VARCHAR(20)); INSERT INTO policyholders (id, policyholder_name, risk_assessment_model) VALUES (1, 'John Doe', 'Model A'), (2, 'Jane Smith', 'Model B'), (3, 'Alice Johnson', 'Model A'), (4, 'Bob Brown', 'Model C'), (5, 'Charlie Davis', 'Model A');", "output": "SELECT risk_assessment_model, COUNT(*) as policyholder_count FROM policyholders GROUP BY risk_assessment_model;"}
{"input": " \uae08\uc18d \uc720\ubb3c\uacfc \ube44\uae08\uc18d \uc720\ubb3c\uc758 \ube44\uc728\uc774 \ub192\uc740 \ubc1c\uad74 \ud604\uc7a5\uc744 \ud655\uc778\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Sites (SiteID INT, SiteName TEXT); INSERT INTO Sites (SiteID, SiteName) VALUES (1, 'Site-A'), (2, 'Site-B'), (3, 'Site-C'); CREATE TABLE Artifacts (ArtifactID INT, ArtifactName TEXT, SiteID INT, ArtifactTypeID INT); INSERT INTO Artifacts (ArtifactID, ArtifactName, SiteID, ArtifactTypeID) VALUES (1, 'Pottery Shard', 1, 2), (2, 'Bronze Arrowhead', 2, 1), (3, 'Flint Tool', 3, 3), (4, 'Ancient Coin', 1, 1), (5, 'Stone Hammer', 2, 3); CREATE TABLE ArtifactTypes (ArtifactTypeID INT, ArtifactType TEXT); INSERT INTO ArtifactTypes (ArtifactTypeID, ArtifactType) VALUES (1, 'Metal'), (2, 'Ceramic'), (3, 'Stone');", "output": "SELECT Sites.SiteName, COUNT(CASE WHEN ArtifactTypes.ArtifactType = 'Metal' THEN 1 END) / COUNT(CASE WHEN ArtifactTypes.ArtifactType != 'Metal' THEN 1 END) AS Ratio FROM Artifacts INNER JOIN Sites ON Artifacts.SiteID = Sites.SiteID INNER JOIN ArtifactTypes ON Artifacts.ArtifactTypeID = ArtifactTypes.ArtifactTypeID GROUP BY Sites.SiteName HAVING Ratio > 0.5;"}
{"input": "\uc0dd\uc0b0\ub7c9\uc5d0 \ub530\ub77c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae34 \uc911\ub3d9\uc758 \uc720\ud734 \uc720\uc815\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(100), location VARCHAR(100), production FLOAT, operational_status VARCHAR(50)); INSERT INTO wells (well_id, well_name, location, production, operational_status) VALUES (7, 'Well E', 'Iran', 120.3, 'Idle'); INSERT INTO wells (well_id, well_name, location, production, operational_status) VALUES (8, 'Well F', 'Iraq', 95.5, 'Idle');", "output": "SELECT well_id, well_name, production, operational_status, ROW_NUMBER() OVER (PARTITION BY operational_status ORDER BY production ASC) as rank FROM wells WHERE location = 'Iran' AND operational_status = 'Idle';"}
{"input": "\uc911\uad6d\uc5d0\uc11c \uc18c\uc2f1\ub41c \uc81c\ud488\uc744 \uc81c\uc678\ud55c \uac01 \uad6d\uac00\uc5d0\uc11c \uc18c\uc2f1\ub41c \uc81c\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(50), source_country VARCHAR(50), price DECIMAL(5,2)); INSERT INTO products (product_id, product_name, source_country, price) VALUES (1, 'T-Shirt', 'USA', 20.99), (2, 'Pants', 'China', 15.99), (3, 'Jacket', 'India', 35.99), (4, 'Socks', 'Bangladesh', 7.99);", "output": "SELECT source_country, AVG(price) FROM products WHERE source_country <> 'China' GROUP BY source_country;"}
{"input": "\ubbf8\uad6d\uc774 \uc18c\uc720\ud55c \uc6b0\uc8fc\uc120\uc73c\ub85c \uc784\ubb34\ub97c \uc218\ud589\ud55c \uac00\uc7a5 \ub098\uc774 \ub9ce\uc740 \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE astronauts (id INT, name VARCHAR(50), age INT, spacecraft_id INT, missions INT); INSERT INTO astronauts (id, name, age, spacecraft_id, missions) VALUES (1, 'Neil Armstrong', 38, 1, 1); INSERT INTO astronauts (id, name, age, spacecraft_id, missions) VALUES (2, 'Buzz Aldrin', 36, 1, 1); INSERT INTO astronauts (id, name, age, spacecraft_id, missions) VALUES (3, 'Valentina Tereshkova', 26, 2, 1); INSERT INTO astronauts (id, name, age, spacecraft_id, missions) VALUES (4, 'Jake Garn', 56, 5, 1);", "output": "SELECT name, age FROM astronauts WHERE spacecraft_id IN (SELECT id FROM spacecraft WHERE country = 'USA') ORDER BY age DESC LIMIT 1;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc544\uc2dc\uc544\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubcf4\uc548 \uc0ac\uace0\uac00 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, region VARCHAR(255), incident_date DATE); INSERT INTO security_incidents (id, region, incident_date) VALUES (1, 'Asia', '2021-10-15'), (2, 'Europe', '2021-12-20'), (3, 'Asia', '2021-11-03');", "output": "SELECT COUNT(*) FROM security_incidents WHERE incident_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND region = 'Asia';"}
{"input": " 2021\ub144\uacfc 2022\ub144\uc5d0 '\uc608\uc220 \uc7ac\ub2e8'\uc774 \uc790\uae08\uc744 \uc9c0\uc6d0\ud558\ub294 \uc608\uc220 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE EducationPrograms (program_id INT, city VARCHAR(20), funding_source VARCHAR(20), year INT); INSERT INTO EducationPrograms (program_id, city, funding_source, year) VALUES (1, 'New York', 'Cultural Trust', 2021), (2, 'Miami', 'Cultural Trust', 2021), (3, 'Chicago', 'Cultural Trust', 2021), (4, 'New York', 'Arts Foundation', 2021), (5, 'Atlanta', 'City Grants', 2022), (6, 'New York', 'Arts Foundation', 2022);", "output": "SELECT city, COUNT(*) as program_count FROM EducationPrograms WHERE funding_source = 'Arts Foundation' AND year IN (2021, 2022) GROUP BY city ORDER BY program_count DESC LIMIT 2"}
{"input": " \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ud3c9\uade0 \ubb38\ud654 \uc5ed\ub7c9 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (worker_id INT, name VARCHAR(20), cultural_competency_score INT); INSERT INTO community_health_workers (worker_id, name, cultural_competency_score) VALUES (1, 'Amy', 85), (2, 'Jamal', 90), (3, 'Sofia', 80);", "output": "SELECT worker_id, AVG(cultural_competency_score) OVER (PARTITION BY 1) as avg_score FROM community_health_workers;"}
{"input": " \uce74\ud14c\uace0\ub9ac\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ub0a0\uc9dc\ubcc4\ub85c \uc815\ub82c\ud558\uc5ec \uac01 \uc758\ub958\uc758 \uccab \ud310\ub9e4 \ub0a0\uc9dc\uc640 \ub9c8\uc9c0\ub9c9 \ud310\ub9e4 \ub0a0\uc9dc\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE sales (garment VARCHAR(50), category VARCHAR(50), sale_date DATE); INSERT INTO sales (garment, category, sale_date) VALUES ('Shirt', 'Tops', '2021-01-05'), ('Pants', 'Bottoms', '2021-01-05'), ('Dress', 'Tops', '2021-01-10'), ('Shirt', 'Tops', '2022-01-05'), ('Pants', 'Bottoms', '2022-01-05'), ('Dress', 'Tops', '2022-01-10');", "output": "SELECT garment, category, MIN(sale_date) OVER (PARTITION BY garment) as first_sale_date, MAX(sale_date) OVER (PARTITION BY garment) as last_sale_date FROM sales;"}
{"input": " \uc9c0\ub09c\uc8fc \uce5c\ud658\uacbd \uc720\ud1b5\uc5c5\uccb4 \uc0c1\uc704 3\uacf3\uc758 \uc77c\uc77c \ub9e4\ucd9c \ucd94\uc774\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Retailer (id INT, name VARCHAR(255), eco_friendly BOOLEAN); CREATE TABLE Sales (id INT, retailer_id INT, sale_date DATE, revenue FLOAT);", "output": "SELECT r.name, sale_date, SUM(revenue) as daily_sales FROM Sales s JOIN Retailer r ON s.retailer_id = r.id WHERE retailer_id IN (SELECT id FROM Retailer WHERE eco_friendly = true ORDER BY SUM(revenue) DESC LIMIT 3) AND sale_date >= (CURRENT_DATE - INTERVAL '1 week') GROUP BY ROLLUP(r.name, sale_date) ORDER BY r.name, sale_date DESC;"}
{"input": " 2020\ub144\uc5d0 \uad00\uad11\uac1d \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE TourismData (Country VARCHAR(255), Year INT, Visitors INT);", "output": "SELECT Country, Visitors, ROW_NUMBER() OVER (ORDER BY Visitors DESC) AS Rank FROM TourismData WHERE Year = 2020 AND Visitors > 0 GROUP BY Country HAVING Rank <= 3;"}
{"input": " '2022\ub144 7\uc6d4'\uc5d0 \ucd1d \ucd9c\ud558\ub7c9\uc774 \uac00\uc7a5 \uc801\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (country varchar(20), shipment_date date); INSERT INTO Shipments (country, shipment_date) VALUES ('Country A', '2022-07-01'), ('Country B', '2022-07-02');", "output": "SELECT country, MIN(SUM(CASE WHEN EXTRACT(MONTH FROM shipment_date) = 7 AND EXTRACT(YEAR FROM shipment_date) = 2022 THEN 1 ELSE 0 END)) OVER () AS total_shipments_all_countries FROM (SELECT country, COUNT(*) AS total_shipments FROM Shipments GROUP BY country, EXTRACT(MONTH FROM shipment_date), EXTRACT(YEAR FROM shipment_date)) subquery WHERE EXTRACT(MONTH FROM shipment_date) = 7 AND EXTRACT(YEAR FROM shipment_date) = 2022 GROUP BY country ORDER BY total_shipments DESC LIMIT 1;"}
{"input": " 2022\ub144 1\ubd84\uae30 \ud2b9\uc815 \uc9c0\uc5ed\uc758 \uac01 \uc758\uc57d\ud488 \uc2dc\uc7a5 \uc810\uc720\uc728\uc744 \uc2dc\uc7a5 \uc810\uc720\uc728 \uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE drug_sales (id INT, drug_name VARCHAR(255), region VARCHAR(255), sale_date DATE, sales_volume INT);", "output": "SELECT drug_name, region, SUM(sales_volume) * 100.0 / (SELECT SUM(sales_volume) FROM drug_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31' AND region = 'North America') as market_share FROM drug_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31' AND region = 'North America' GROUP BY drug_name, region ORDER BY market_share DESC;"}
{"input": " \ubbf8\uad6d \ub0b4 \uad50\uc721 \ubd84\uc57c \ube44\uc601\ub9ac \ub2e8\uccb4\uc5d0 \ub300\ud55c \ucd1d \uae30\ubd80 \uae08\uc561 \uae30\uc900 \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name TEXT, total_donations DECIMAL(10,2)); CREATE TABLE nonprofits (nonprofit_id INT, nonprofit_name TEXT, sector TEXT); CREATE TABLE donations (donation_id INT, donor_id INT, nonprofit_id INT, donation_amount DECIMAL(10,2)); INSERT INTO donors VALUES (1, 'John Doe', 15000); INSERT INTO nonprofits VALUES (1, 'Education Alliance', 'education'); INSERT INTO donations VALUES (1, 1, 1, 5000);", "output": "SELECT d.donor_name, SUM(donation_amount) as total_donated FROM donors d JOIN donations don ON d.donor_id = don.donor_id JOIN nonprofits n ON don.nonprofit_id = n.nonprofit_id WHERE n.sector = 'education' GROUP BY d.donor_name ORDER BY total_donated DESC LIMIT 5;"}
{"input": " \ud658\uacbd \ubd80\ubb38\uc5d0\uc11c \uae30\ubd80 \ucd1d\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc774\uba70, \uac01 \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, Amount DECIMAL, DonationDate DATE, Country TEXT); INSERT INTO Donations (DonationID, DonorID, Amount, DonationDate, Country) VALUES (1, 1, 50, '2022-01-01', 'USA'), (2, 1, 75, '2022-01-01', 'USA'), (3, 2, 100, '2022-02-01', 'Canada'), (4, 3, 200, '2022-03-01', 'Mexico'), (5, 4, 150, '2022-03-01', 'Brazil'); CREATE TABLE ProgramCategories (CategoryID INT, Category TEXT); INSERT INTO ProgramCategories (CategoryID, Category) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'), (4, 'Other'); CREATE TABLE Programs (ProgramID INT, CategoryID INT); INSERT INTO Programs (ProgramID, CategoryID) VALUES (101, 1), (102, 2), (103, 3), (104, 4);", "output": "SELECT D.Country, SUM(D.Amount) AS TotalDonations  FROM Donations D  INNER JOIN Programs P ON D.ProgramID = P.ProgramID  INNER JOIN ProgramCategories PC ON P.CategoryID = PC.CategoryID  WHERE PC.Category = 'Environment'  GROUP BY D.Country  ORDER BY TotalDonations DESC LIMIT 2;"}
{"input": " 2021\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \ud504\ub85c\uadf8\ub7a8\uc744 \ucc3e\uc73c\uc2dc\ub098\uc694?", "context": "CREATE TABLE programs (program_id INT, program_name TEXT, program_revenue DECIMAL, program_year INT); INSERT INTO programs (program_id, program_name, program_revenue, program_year) VALUES (1, 'Healthcare', 50000.00, 2021);", "output": "SELECT program_name, program_revenue FROM programs WHERE program_year = 2021 AND program_revenue = (SELECT MAX(program_revenue) FROM programs WHERE program_year = 2021);"}
{"input": " \ub2e8\uc77c \uc0ac\uac74\uc5d0 \ub300\ud55c \ucd5c\ub300 \ubc95\uc6d0 \ucd9c\uc11d \ud69f\uc218\ub294 \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE appearances (id INT, case_id INT, appearance_date DATE); INSERT INTO appearances (id, case_id, appearance_date) VALUES (1, 1, '2021-01-01'), (2, 1, '2021-03-01'), (3, 1, '2021-05-01');", "output": "SELECT MAX(count) FROM (SELECT case_id, COUNT(*) as count FROM appearances GROUP BY case_id) as subquery;"}
{"input": " \ub274\uc695\uc5d0 \uc788\ub294 \uac24\ub7ec\ub9ac\uc5d0 \uc790\uc2e0\uc758 \uc791\ud488\uc774 \uc804\uc2dc\ub41c \uc544\uc2dc\uc544 \uc608\uc220\uac00\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (ArtistID INT, Name TEXT, Nationality TEXT);CREATE TABLE Artworks (ArtworkID INT, Title TEXT, ArtistID INT);CREATE TABLE GalleryLocations (GalleryID INT, Location TEXT);CREATE TABLE GalleryArtworks (GalleryID INT, ArtworkID INT);", "output": "SELECT Artists.Name FROM Artists INNER JOIN Artworks ON Artists.ArtistID = Artworks.ArtistID INNER JOIN GalleryArtworks ON Artworks.ArtworkID = GalleryArtworks.ArtworkID INNER JOIN GalleryLocations ON GalleryArtworks.GalleryID = GalleryLocations.GalleryID WHERE Artists.Nationality = 'Asia' AND GalleryLocations.Location = 'New York';"}
{"input": "\ud3c9\uade0 \ubd80\ub3d9\uc0b0 \uac00\uaca9\uc744 \uae30\uc900\uc73c\ub85c \uac00\uc7a5 \uc800\ub834\ud55c \uc0c1\uc704 3\uac1c \uc9c0\uc5ed\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ubd80\ub3d9\uc0b0\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE properties (id INT, neighborhood VARCHAR(20), price INT); INSERT INTO properties (id, neighborhood, price) VALUES (1, 'Neighborhood X', 200000), (2, 'Neighborhood Y', 150000), (3, 'Neighborhood X', 250000), (4, 'Neighborhood Z', 180000);", "output": "SELECT * FROM (SELECT neighborhood, price, ROW_NUMBER() OVER (ORDER BY price) AS rank FROM properties) AS subquery WHERE rank <= 3;"}
{"input": " NBA '\ud0dc\ud3c9\uc591' \ubd80\ubb38 \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \ub4dd\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE divisions (id INT, name VARCHAR(20), league VARCHAR(20)); INSERT INTO divisions (id, name, league) VALUES (1, 'Pacific', 'NBA'); CREATE TABLE stats (id INT, athlete INT, game INT, points INT, rebounds INT, assists INT); INSERT INTO stats (id, athlete, game, points, rebounds, assists) VALUES (1, 1, 1, 30, 5, 8); CREATE TABLE athletes (id INT, name VARCHAR(50), team INT, position VARCHAR(10)); INSERT INTO athletes (id, name, team, position) VALUES (1, 'Player A', 1, 'Guard'); CREATE TABLE teams (id INT, name VARCHAR(50), league VARCHAR(20)); INSERT INTO teams (id, name, league) VALUES (1, 'Team A', 'NBA');", "output": "SELECT AVG(s.points) FROM stats s INNER JOIN athletes a ON s.athlete = a.id INNER JOIN teams t ON a.team = t.id INNER JOIN divisions d ON t.league = d.league WHERE d.name = 'Pacific';"}
{"input": " \uad6d\uac00\ubcc4\ub85c \uac00\uc7a5 \ucd5c\uadfc\uc5d0 \ubc1c\uc0dd\ud55c \uc138 \uac00\uc9c0 \ubcf4\uc548 \uc0ac\uace0\uc640 \uadf8 \ucd1d \uc601\ud5a5 \uac00\uce58\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE security_incidents (id INT, country VARCHAR(50), incident_time TIMESTAMP, impact_value INT); INSERT INTO security_incidents (id, country, incident_time, impact_value) VALUES (1, 'USA', '2022-01-01 10:00:00', 5000), (2, 'Canada', '2022-01-02 15:30:00', 7000), (3, 'USA', '2022-01-03 08:45:00', 6000);", "output": "SELECT country, incident_time, impact_value, ROW_NUMBER() OVER (PARTITION BY country ORDER BY incident_time DESC) as rn FROM security_incidents WHERE rn <= 3;"}
{"input": "\uc9c0\ub09c 24\uac1c\uc6d4 \ub3d9\uc548 \uc911\ub3d9\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uad50\uc721 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Projects (ProjectID int, ProjectName varchar(50), ProjectType varchar(50), StartDate date, EndDate date); INSERT INTO Projects (ProjectID, ProjectName, ProjectType, StartDate, EndDate) VALUES (1, 'School Construction', 'Education', '2020-06-01', '2021-12-31'), (2, 'Library Renovation', 'Education', '2019-06-01', '2020-12-31');", "output": "SELECT COUNT(ProjectID) as CompletedProjects FROM Projects WHERE ProjectType = 'Education' AND EndDate >= DATE_SUB(CURRENT_DATE, INTERVAL 24 MONTH) AND EndDate IS NOT NULL;"}
{"input": " \ub0a8\ubbf8\uc758 \uc2a4\ub9c8\ud2b8\uc2dc\ud2f0 \uc774\ub2c8\uc154\ud2f0\ube0c \uc218\uc640 \uad50\ud1b5 \ubc0f \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc131\uacfc \uad00\ub828\ub41c \uc774\ub2c8\uc154\ud2f0\ube0c \uc218\ub97c \uc54c\ud30c\ubcb3\uc21c\uc73c\ub85c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE smart_city_initiatives (initiative_id INT, region VARCHAR(20), category VARCHAR(30), description TEXT); INSERT INTO smart_city_initiatives (initiative_id, region, category, description) VALUES (1, 'SA', 'Transportation', 'Bike-sharing in Buenos Aires'), (2, 'SA', 'Energy Efficiency', 'Smart lighting in Santiago'), (3, 'SA', 'Transportation', 'Bus rapid transit in Rio de Janeiro'), (4, 'SA', 'Waste Management', 'Recycling programs in Lima');", "output": "SELECT category AS initiative, COUNT(*) AS num_initiatives FROM smart_city_initiatives WHERE region = 'SA' AND category IN ('Transportation', 'Energy Efficiency') GROUP BY initiative ORDER BY initiative;"}
{"input": " \uac01 \uace0\uac1d\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc790\uae08\uc5d0 \ub300\ud55c \ucd1d \ud22c\uc790\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), region VARCHAR(50)); CREATE TABLE investments (investment_id INT, customer_id INT, fund_id INT, amount DECIMAL(10,2), investment_date DATE); CREATE TABLE funds (fund_id INT, fund_name VARCHAR(50), is_sustainable BOOLEAN);", "output": "SELECT c.customer_id, c.name, SUM(i.amount) as total_sustainable_investment FROM customers c INNER JOIN investments i ON c.customer_id = i.customer_id INNER JOIN funds f ON i.fund_id = f.fund_id WHERE f.is_sustainable = TRUE GROUP BY c.customer_id;"}
{"input": " \uac01 \uc885\uc5d0 \ub300\ud574 2019\ub144 \ub098\ubb34\ub2f9 \ud3c9\uade0 \ud0c4\uc18c \uaca9\ub9ac\ub97c \ucc3e\uc544 \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE species (species_id INT, species_name VARCHAR(50)); INSERT INTO species (species_id, species_name) VALUES (1, 'Oak'), (2, 'Pine'), (3, 'Maple'), (4, 'Birch'); CREATE TABLE carbon_sequestration (sequestration_id INT, species_id INT, year INT, carbon_per_tree INT); INSERT INTO carbon_sequestration (sequestration_id, species_id, year, carbon_per_tree) VALUES (1, 1, 2019, 40), (2, 2, 2019, 50), (3, 3, 2019, 60), (4, 4, 2019, 30), (5, 1, 2019, 45), (6, 2, 2019, 55);", "output": "SELECT species_id, AVG(carbon_per_tree) AS avg_carbon, RANK() OVER (ORDER BY AVG(carbon_per_tree)) AS carbon_rank FROM carbon_sequestration WHERE year = 2019 GROUP BY species_id ORDER BY carbon_rank ASC;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \uc54c\uc790\uc9c0\ub77c\uc5d0\ub294 \uba87 \uac1c\uc758 \ub274\uc2a4 \uae30\uc0ac\uac00 \uac8c\uc7ac\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE news (id INT, title TEXT, publisher TEXT, pub_date DATE); INSERT INTO news (id, title, publisher, pub_date) VALUES (1, 'Article1', 'Al-Jazeera', '2022-01-01'), (2, 'Article2', 'BBC', '2022-01-10');", "output": "SELECT COUNT(*) FROM news WHERE publisher = 'Al-Jazeera' AND pub_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"input": " '\ubb38\ud559' \uce74\ud14c\uace0\ub9ac\uc758 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud574 '\uc544\uc2dc\uc544' \ubc29\ubb38\uc790\uac00 \uc9c0\ucd9c\ud55c \ucd1d \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (VisitorID INT, Age INT, Country VARCHAR(20));CREATE TABLE Events (EventID INT, EventName VARCHAR(20), EventCategory VARCHAR(20));CREATE TABLE VisitorSpending (VisitorID INT, EventID INT, Spending INT);", "output": "SELECT SUM(VS.Spending) AS Total_Spending FROM Visitors V INNER JOIN VisitorSpending VS ON V.VisitorID = VS.VisitorID INNER JOIN Events E ON VS.EventID = E.EventID WHERE V.Country = 'Asia' AND E.EventCategory = 'Literature';"}
{"input": " 'SmartCities' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uac74\ubb3c\ub2f9 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\ubcf4\ub2e4 \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc774 \ub192\uc740 \uac74\ubb3c\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE SmartCities.Buildings (id INT, city VARCHAR(50), energy_consumption FLOAT); INSERT INTO SmartCities.Buildings (id, city, energy_consumption) VALUES (1, 'NYC', 1200.5), (2, 'LA', 800.2), (3, 'SF', 1000.7), (4, 'NYC', 900.3), (5, 'LA', 1100.0);", "output": "SELECT id, city, energy_consumption FROM SmartCities.Buildings WHERE energy_consumption > (SELECT AVG(energy_consumption) FROM SmartCities.Buildings);"}
{"input": " \uc9c0\ucd9c \ub300\ube44 \uadfc\ub85c\uc790 \ube44\uc728\ub85c \uacc4\uc0b0\ud558\uba74 \uac01 \uad11\uc0b0 \ud604\uc7a5\uc758 \uc0dd\uc0b0\uc131\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_sites (site_id INT, site_name TEXT, location TEXT); INSERT INTO mining_sites (site_id, site_name, location) VALUES (1, 'Site A', 'Country X'), (2, 'Site B', 'Country Y'); CREATE TABLE workers (worker_id INT, site_id INT, num_workers INT); INSERT INTO workers (worker_id, site_id, num_workers) VALUES (1, 1, 300), (2, 1, 200), (3, 2, 500), (4, 2, 250); CREATE TABLE expenditure (expenditure_id INT, site_id INT, amount FLOAT); INSERT INTO expenditure (expenditure_id, site_id, amount) VALUES (1, 1, 1000000), (2, 1, 1500000), (3, 2, 2000000), (4, 2, 2500000);", "output": "SELECT mining_sites.site_name, num_workers/amount AS productivity FROM mining_sites INNER JOIN (SELECT site_id, SUM(num_workers) AS num_workers, SUM(amount) AS amount FROM workers INNER JOIN expenditure ON workers.site_id = expenditure.site_id GROUP BY site_id) AS subquery ON mining_sites.site_id = subquery.site_id;"}
{"input": " \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc5d0 \ub300\ud574 \ub9e4\uc6d4 \uc2b9\uc778\ub418\ub294 \ubc95\ub960 \uc9c0\uc6d0 \uc2e0\uccad \uac74\uc218\ub294 \ud3c9\uade0 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE LegalAid (ApplicationID INT, Applicant VARCHAR(20), Community VARCHAR(20), Approval BOOLEAN, SubmissionDate DATE); INSERT INTO LegalAid (ApplicationID, Applicant, Community, Approval, SubmissionDate) VALUES (1, 'John Doe', 'Indigenous', TRUE, '2022-01-10'), (2, 'Jane Smith', 'African American', FALSE, '2022-02-15'), (3, 'Jim Brown', 'Asian', TRUE, '2022-03-05');", "output": "SELECT AVG(COUNT(CASE WHEN Approval THEN 1 END)) FROM LegalAid WHERE Community = 'Indigenous' GROUP BY EXTRACT(MONTH FROM SubmissionDate);"}
{"input": " \ub0a8\ubbf8 \uc9c0\uc5ed\uc5d0\uc11c \uaddc\uc81c \uc870\uce58\ub97c \ucde8\ud55c \ubaa8\ub4e0 \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uad00\ub828 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE decentralized_applications (dapp_id INT, dapp_name VARCHAR(50), region VARCHAR(50)); CREATE TABLE smart_contracts (contract_id INT, dapp_id INT, contract_name VARCHAR(50), region VARCHAR(50)); CREATE TABLE regulatory_actions (action_id INT, contract_id INT, action_date DATE);", "output": "SELECT d.dapp_name, s.contract_name FROM decentralized_applications d INNER JOIN smart_contracts s ON d.dapp_id = s.dapp_id INNER JOIN regulatory_actions r ON s.contract_id = r.contract_id WHERE d.region = 'South America';"}
{"input": " 2021\ub144\uc5d0 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc790\uc728\uc8fc\ud589 \uc5f0\uad6c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ResearchStudies (Study VARCHAR(50), Year INT, Funding VARCHAR(50)); INSERT INTO ResearchStudies (Study, Year, Funding) VALUES ('Autonomous Emergency Braking', 2021, 'Public'), ('Connected and Automated Vehicles', 2020, 'Private'), ('Vehicle-to-Everything Communication', 2021, 'Public'), ('Autonomous Driving Algorithms', 2019, 'Private'), ('Electric Autonomous Shuttle', 2021, 'Public');", "output": "SELECT Study FROM ResearchStudies WHERE Year = 2021 AND Funding = 'Public';"}
{"input": " '\ub9e8\ud574\ud2bc' \uc9c0\uc5ed\uc758 \uc704\ud5d8\ubb3c \uc0ac\uace0\uc5d0 \ub300\ud55c \ucd5c\uc18c \ub300\uc751 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hazmat_incidents (id INT, incident_time TIMESTAMP, district VARCHAR(20), duration INTEGER); INSERT INTO hazmat_incidents (id, incident_time, district, duration) VALUES (1, '2022-03-01 12:30:00', 'manhattan', 60), (2, '2022-03-01 15:10:00', 'brooklyn', 45), (3, '2022-03-02 09:45:00', 'manhattan', 75);", "output": "SELECT MIN(EXTRACT(EPOCH FROM incident_time - LAG(incident_time) OVER (PARTITION BY district ORDER BY incident_time))) AS min_response_time FROM hazmat_incidents WHERE district = 'manhattan';"}
{"input": " '\ub304\uc2a4' \ud504\ub85c\uadf8\ub7a8\uc5d0 \uce98\ub9ac\ud3ec\ub2c8\uc544 \ucd9c\uc2e0 \ucc38\uac00\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (program_id INT, program_name VARCHAR(255)); INSERT INTO programs (program_id, program_name) VALUES (1, 'Artistic Expression'), (2, 'Dance'); CREATE TABLE attendee_demographics (attendee_id INT, program_id INT, state VARCHAR(2)); INSERT INTO attendee_demographics (attendee_id, program_id, state) VALUES (1, 1, 'NY'), (2, 1, 'CA'), (3, 1, 'NY'), (4, 2, 'CA'), (5, 2, 'CA'), (6, 2, 'TX');", "output": "SELECT COUNT(*) as num_ca_attendees FROM attendee_demographics WHERE state = 'CA' AND program_id = (SELECT program_id FROM programs WHERE program_name = 'Dance');"}
{"input": " \uc9c0\ub09c\uc8fc\uc5d0 \uc704\ud611 \uc18c\uc2a4\ub85c \ud0d0\uc9c0\ub41c \uace0\uc720 IP \uc8fc\uc18c\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE threat_sources (id INT, ip_address VARCHAR(50), threat_count INT, threat_date DATE); INSERT INTO threat_sources (id, ip_address, threat_count, threat_date) VALUES (1, '192.168.0.1', 5, '2022-04-01'), (2, '192.168.0.2', 3, '2022-04-02'), (3, '2001:0db8:85a3:0000:0000:8a2e:0370:7334', 1, '2022-04-03');", "output": "SELECT DISTINCT ip_address FROM threat_sources WHERE threat_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"}
{"input": " 2022\ub144 \uac01 \uad6d\uac00\uc758 \ucd1d \uc5ed\ub7c9 \uad6c\ucd95\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE CapacityBuilding (CountryID int, CountryName varchar(50), CapacityValue int); INSERT INTO CapacityBuilding (CountryID, CountryName, CapacityValue) VALUES (1, 'Canada', 1500); INSERT INTO CapacityBuilding (CountryID, CountryName, CapacityValue) VALUES (2, 'Mexico', 2500);", "output": "SELECT CountryName, SUM(CapacityValue) as TotalCapacity FROM CapacityBuilding WHERE DonationDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY CountryName;"}
{"input": " \ub3c4\uc2dc\uc9c0\uc5ed \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c\uc758 \uc758\uc0ac \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT, num_beds INT, area TEXT); INSERT INTO hospitals (id, name, location, num_beds, area) VALUES (1, 'General Hospital', 'City A', 500, 'urban'), (2, 'Community Clinic', 'City B', 50, 'urban'); CREATE TABLE clinics (id INT, name TEXT, location TEXT, num_doctors INT, area TEXT); INSERT INTO clinics (id, name, location, num_doctors, area) VALUES (1, 'Downtown Clinic', 'City A', 10, 'urban'), (2, 'Rural Clinic', 'City C', 8, 'rural');", "output": "SELECT 'hospitals' AS facility, SUM(num_beds) AS total_doctors FROM hospitals WHERE area = 'urban' UNION SELECT 'clinics', SUM(num_doctors) FROM clinics WHERE area = 'urban';"}
{"input": " \uc5f0\uc18d\ud574\uc11c \uac19\uc740 \uad6d\uac00\uc758 \ub3c4\uc2dc\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc778\uad6c \ubcc0\ud654\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CityYearPopulation (CityId INT, Year INT, Population INT, PRIMARY KEY (CityId, Year)); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (1, 2019, 8400000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (1, 2020, 8600000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (2, 2019, 3900000); INSERT INTO CityYearPopulation (CityId, Year, Population) VALUES (2, 2020, 4100000);", "output": "SELECT CityId, AVG(PopulationChange) OVER (PARTITION BY CityId ORDER BY Year ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) as AvgPopulationChange FROM (SELECT CityId, Year, (LAG(Population, 1) OVER (PARTITION BY CityId ORDER BY Year) - Population) as PopulationChange FROM CityYearPopulation) AS PopulationChangePerYear;"}
{"input": " '\uc758\ub8cc' \ubd84\uc57c\uc5d0\uc11c \ube44\uc601\ub9ac\ub2e8\uccb4\uc758 \ud3c9\uade0 ESG \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists nonprofits (id INT PRIMARY KEY, name TEXT, field TEXT, location TEXT, annual_budget DECIMAL(10,2)); INSERT INTO nonprofits (id, name, field, location, annual_budget) VALUES (1, 'Health Hope', 'Healthcare', 'Chicago', 125000.00); CREATE TABLE if not exists esg_factors (id INT PRIMARY KEY, nonprofit_id INT, environmental_score DECIMAL(3,2), social_score DECIMAL(3,2), governance_score DECIMAL(3,2)); INSERT INTO esg_factors (id, nonprofit_id, environmental_score, social_score, governance_score) VALUES (1, 1, 4.2, 4.5, 4.8);", "output": "SELECT AVG(environmental_score) AS avg_environmental_score, AVG(social_score) AS avg_social_score, AVG(governance_score) AS avg_governance_score FROM esg_factors WHERE nonprofit_id IN (SELECT id FROM nonprofits WHERE field = 'Healthcare');"}
{"input": " \"\ud310\ub9e4\" \uc2a4\ud0a4\ub9c8\uc758 \"\ud14d\uc0ac\uc2a4\"\uc5d0\uc11c \ud310\ub9e4\ub41c \uc804\uae30 \uc790\ub3d9\ucc28\uc758 \ucd1d \ub300\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales_regions (id INT, name VARCHAR(50));   CREATE TABLE sales (id INT, region_id INT, vehicle_count INT);   CREATE TABLE vehicles (id INT, type VARCHAR(50));   INSERT INTO sales_regions VALUES (1, 'California'), (2, 'Texas');   INSERT INTO sales VALUES (1, 1, 5000), (2, 2, 6000);   INSERT INTO vehicles VALUES (1, 'sedan'), (2, 'electric vehicle');", "output": "SELECT SUM(sales.vehicle_count) FROM sales INNER JOIN sales_regions ON sales.region_id = sales_regions.id INNER JOIN vehicles ON sales.id = vehicles.id WHERE vehicles.type = 'electric vehicle' AND sales_regions.name = 'Texas';"}
{"input": " '\uc544\ud504\ub9ac\uce74' \uc9c0\uc5ed\uc758 \ubaa8\ub4e0 \ubaa8\ubc14\uc77c \uac00\uc785\uc790\uc640 \uc6d4\ubcc4 \uc0ac\uc6a9\ub7c9 \ubc0f \ub124\ud2b8\uc6cc\ud06c \ud22c\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE network_investments (id INT, country VARCHAR(50), region VARCHAR(20), investment FLOAT); INSERT INTO network_investments (id, country, region, investment) VALUES (1, 'South Africa', 'Africa', 2000000);", "output": "SELECT mobile_subscribers.name, customer_usage.usage, network_investments.investment FROM mobile_subscribers INNER JOIN customer_usage ON mobile_subscribers.id = customer_usage.subscriber_id INNER JOIN network_investments ON mobile_subscribers.country = network_investments.country WHERE network_investments.region = 'Africa';"}
{"input": " \ud504\ub85c\uadf8\ub7a8 \uce74\ud14c\uace0\ub9ac\ubcc4 \uae30\ubd80\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, DonorID INT, DonationDate DATE, DonationAmount FLOAT, ProgramCategory TEXT); INSERT INTO Donations (DonationID, DonorID, DonationDate, DonationAmount, ProgramCategory) VALUES (1, 1, '2022-01-01', 75.00, 'Education'), (2, 2, '2022-02-14', 125.00, 'Health'); CREATE TABLE Donors (DonorID INT, DonorName TEXT); INSERT INTO Donors (DonorID, DonorName) VALUES (1, 'John Smith'), (2, 'Jane Doe');", "output": "SELECT AVG(DonationAmount) AS AvgDonationPerDonor, ProgramCategory  FROM (SELECT DonorID, DonationAmount, ProgramCategory FROM Donations) AS DonationData INNER JOIN Donors ON DonationData.DonorID = Donors.DonorID GROUP BY ProgramCategory;"}
{"input": " EU\uc5d0\uc11c \uae30\uc220 \uc811\uadfc\uc131\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc5d0 \uae30\uc5ec\ud55c \uac1c\ubc1c\uc790\uc758 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE developers (developer_id INT, name VARCHAR(50), salary FLOAT, country VARCHAR(50), contribution_accessibility BOOLEAN); INSERT INTO developers (developer_id, name, salary, country, contribution_accessibility) VALUES (1, 'Alice', 75000.0, 'EU', true), (2, 'Bob', 80000.0, 'USA', false), (3, 'Charlie', 85000.0, 'EU', true);", "output": "SELECT AVG(salary) FROM developers WHERE country = 'EU' AND contribution_accessibility = true;"}
{"input": " '\ub124\ud2b8\uc6cc\ud06c \uce68\uc785' \ubc0f '\ub370\uc774\ud130 \uc720\ucd9c' \uc0ac\uace0\uc5d0 \uc5f0\ub8e8\ub41c \uace0\uc720\ud55c \uc704\ud611 \ud589\uc704\uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE incidents (id INT, threat_actor VARCHAR(255), incident_type VARCHAR(255)); INSERT INTO incidents (id, threat_actor, incident_type) VALUES (1, 'APT28', 'Network Intrusion'), (2, 'APT33', 'Data Exfiltration'), (3, 'APT34', 'Network Intrusion'), (4, 'APT29', 'Data Exfiltration'), (5, 'APT35', 'Network Intrusion'), (6, 'APT28', 'Data Exfiltration');", "output": "SELECT threat_actor FROM incidents WHERE incident_type = 'Network Intrusion' INTERSECT SELECT threat_actor FROM incidents WHERE incident_type = 'Data Exfiltration';"}
{"input": " \ub274\uc695 \uc0ac\ubb34\uc2e4\uc5d0\uc11c \ubcc0\ud638\uc0ac\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE offices (office_id INT, city VARCHAR(20), state VARCHAR(2)); CREATE TABLE attorneys (attorney_id INT, name VARCHAR(50), office_id INT); CREATE TABLE cases (case_id INT, attorney_id INT, outcome VARCHAR(10)); INSERT INTO offices (office_id, city, state) VALUES (1, 'New York', 'NY'); INSERT INTO attorneys (attorney_id, name, office_id) VALUES (1, 'Alice Johnson', 1), (2, 'Bob Smith', 1); INSERT INTO cases (case_id, attorney_id, outcome) VALUES (1, 1, 'Win'), (2, 1, 'Loss'), (3, 2, 'Win');", "output": "SELECT COUNT(*) FROM cases c JOIN attorneys a ON c.attorney_id = a.attorney_id JOIN offices o ON a.office_id = o.office_id WHERE o.city = 'New York';"}
{"input": " \uc544\ud2f0\uc2a4\ud2b8\ubcc4 \uc0c1\uc704 \uc568\ubc94\uacfc \ud558\uc704 \uc568\ubc94\uc758 \uc218\uc775 \ucc28\uc774\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE AlbumRevenue (AlbumID INT, ArtistID INT, Revenue DECIMAL(10,2)); INSERT INTO AlbumRevenue (AlbumID, ArtistID, Revenue) VALUES (1, 1, 150000.00), (2, 1, 125000.00), (3, 2, 150000.00), (4, 2, 100000.00), (5, 3, 100000.00); CREATE TABLE Artist (ArtistID INT, ArtistName VARCHAR(50)); INSERT INTO Artist (ArtistID, ArtistName) VALUES (1, 'Taylor Swift'), (2, 'BTS'), (3, 'Adele');", "output": "SELECT ArtistName, MAX(Revenue) - MIN(Revenue) AS RevenueDifference FROM (SELECT ArtistID, Revenue, ROW_NUMBER() OVER (PARTITION BY ArtistID ORDER BY Revenue DESC) AS Rank FROM AlbumRevenue) AS Subquery JOIN Artist ON Subquery.ArtistID = Artist.ArtistID GROUP BY ArtistName;"}
{"input": " \uc544\uc9c1 Exit \uc774\ubca4\ud2b8\uac00 \uc5c6\uc73c\uba70 Fintech \uc0b0\uc5c5\uc5d0 \uc885\uc0ac\ud558\ub294 \ubaa8\ub4e0 \ud68c\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE exit_strategies (company_id INT, exit_type TEXT, exit_year INT); INSERT INTO exit_strategies (company_id, exit_type, exit_year) VALUES (1, 'Acquisition', 2020); INSERT INTO exit_strategies (company_id, exit_type, exit_year) VALUES (2, NULL, NULL); CREATE TABLE industry (company_id INT, industry TEXT); INSERT INTO industry (company_id, industry) VALUES (1, 'Fintech'); INSERT INTO industry (company_id, industry) VALUES (2, 'Retail');", "output": "SELECT name FROM company WHERE id NOT IN (SELECT company_id FROM exit_strategies WHERE exit_type IS NOT NULL) AND id IN (SELECT company_id FROM industry WHERE industry = 'Fintech');"}
{"input": " '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \uc778\uc99d \ud654\uc7a5\ud488\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc18c\ube44\uc790 \ud3c9\uac00\uac00 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc774\uba70, \uac01 \uad6d\uac00\uc758 \ud3c9\uade0 \ud3c9\uac00\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CosmeticProducts (ProductID int, ProductName varchar(50), ConsumerRating int, CrueltyFreeCertified bit, Country varchar(50));", "output": "SELECT sub.Country, AVG(cp.ConsumerRating) as AvgRating FROM (SELECT Country FROM CosmeticProducts WHERE CrueltyFreeCertified = 1 AND Country LIKE 'Africa%' GROUP BY Country) sub INNER JOIN CosmeticProducts cp ON sub.Country = cp.Country AND cp.CrueltyFreeCertified = 1 GROUP BY sub.Country ORDER BY AvgRating DESC;"}
{"input": " 2019\ub144 \uac01 \uad6d\uac00\uac00 \uc81c\uacf5\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ube44\uc728\uc744 \uacc4\uc0b0\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE HumanitarianAssistance (Country VARCHAR(50), Assistance FLOAT); INSERT INTO HumanitarianAssistance (Country, Assistance) VALUES ('Brazil', 54.3), ('Colombia', 45.6), ('Costa Rica', 34.5), ('Cuba', 67.8);", "output": "SELECT Country, Assistance, Assistance/SUM(Assistance) OVER (PARTITION BY NULL) * 100 as Percentage FROM HumanitarianAssistance WHERE Year = 2019;"}
{"input": " \"\uc2dc\ubbac\ub808\uc774\uc158\" \uce74\ud14c\uace0\ub9ac\uc758 \uac01 \uac8c\uc784\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud50c\ub808\uc774 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE GameStats (GameID int, GameName varchar(50), Category varchar(50), Playtime decimal(10,2));", "output": "SELECT Category, AVG(Playtime) OVER(PARTITION BY Category) as AvgPlaytime FROM GameStats;"}
{"input": " \ubc34\ucfe0\ubc84 \uc2dc\ub0b4 \ub179\uc0c9\uac74\ucd95\ubb3c\uc758 \uc5f0\uba74\uc801\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE green_buildings_vancouver (building_name TEXT, city TEXT, floor_area INTEGER); INSERT INTO green_buildings_vancouver (building_name, city, floor_area) VALUES ('Green Office Building', 'Vancouver', 15000);", "output": "SELECT SUM(floor_area) FROM green_buildings_vancouver WHERE city = 'Vancouver';"}
{"input": " \ud14d\uc0ac\uc2a4 \uace0\uac1d\uc758 \uacbd\uc6b0 \ub9e4\ub2ec \uac1c\uc124\ub418\ub294 \uc0ac\ub840 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE clients (client_id INT, state TEXT); INSERT INTO clients (client_id, state) VALUES (1, 'Texas'), (2, 'Florida'), (3, 'Texas'); CREATE TABLE cases (case_id INT, client_id INT, opened_date DATE); INSERT INTO cases (case_id, client_id, opened_date) VALUES (1, 1, '2022-01-01'), (2, 1, '2022-02-15'), (3, 2, '2021-12-31');", "output": "SELECT MONTH(opened_date) AS month, COUNT(*) AS cases_opened FROM cases WHERE client_id IN (SELECT client_id FROM clients WHERE state = 'Texas') GROUP BY month"}
{"input": " \ub9e4\ub144 \uba87 \ub300\uc758 \uc6b0\uc8fc\uc120\uc774 \uc81c\uc870\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE spacecraft_manufacturing (id INT, spacecraft_name VARCHAR(255), manufacture_year INT, country VARCHAR(255)); INSERT INTO spacecraft_manufacturing (id, spacecraft_name, manufacture_year, country) VALUES (1, 'Voyager 1', 1977, 'USA'), (2, 'Voyager 2', 1977, 'USA'), (3, 'Cassini', 1997, 'Europe');", "output": "SELECT manufacture_year, COUNT(*) OVER (PARTITION BY manufacture_year) as TotalSpacecraft FROM spacecraft_manufacturing;"}
{"input": " \ucd1d \uc790\uc6d0\ubd09\uc0ac \ud65c\ub3d9 \uc2dc\uac04\uc774 \uac00\uc7a5 \ub192\uc740 \uc870\uc9c1\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc870\uc9c1\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolID INT, OrgID INT, VolName VARCHAR(255), Hours INT); INSERT INTO Volunteers (VolID, OrgID, VolName, Hours) VALUES (1, 1, 'Alice', 50), (2, 1, 'Bob', 75), (3, 2, 'Charlie', 100), (4, 3, 'David', 120), (5, 3, 'Eve', 150), (6, 4, 'Frank', 180), (7, 5, 'Grace', 200);", "output": "SELECT OrgID, SUM(Hours) as TotalHours FROM Volunteers GROUP BY OrgID ORDER BY TotalHours DESC, OrgID;"}
{"input": "\ub9ac\ub354\uc2ed \ud300\uc5d0\uc11c \uc5ec\uc131\uacfc \uc18c\uc218 \uc778\uc885 \ubc0f \ubbfc\uc871 \uc9d1\ub2e8\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID int, Department varchar(50), Gender varchar(50), Race varchar(50), Ethnicity varchar(50), Position varchar(50));", "output": "SELECT 'Percentage of Women in Leadership' as Metric, 100.0 * COUNT(DISTINCT CASE WHEN e.Gender = 'Female' AND e.Position IN ('Manager', 'Director', 'VP', 'CxO') THEN e.EmployeeID END) / COUNT(DISTINCT e.EmployeeID) as Percentage FROM Employees e UNION ALL SELECT 'Percentage of Underrepresented Racial and Ethnic Groups in Leadership' as Metric, 100.0 * COUNT(DISTINCT CASE WHEN e.Race IN ('African American', 'Hispanic', 'Native American') AND e.Position IN ('Manager', 'Director', 'VP', 'CxO') THEN e.EmployeeID END) / COUNT(DISTINCT e.EmployeeID) as Percentage FROM Employees e;"}
{"input": " \uac00\uc815\ubc95 \uc0ac\uac74\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE family_cases (case_id INT, billing_amount DECIMAL(10,2)); INSERT INTO family_cases (case_id, billing_amount) VALUES (1, 4000.00), (2, 2500.00), (3, 1800.50);", "output": "SELECT SUM(billing_amount) FROM family_cases WHERE case_id IN (SELECT case_id FROM case_outcomes WHERE case_type = 'Family Law');"}
{"input": " 'projects' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c 'total_cost'\uac00 \uac00\uc7a5 \ub192\uc740 \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uacfc 'total_cost'\ub294 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE projects (id INT, name VARCHAR(50), total_cost FLOAT, start_date DATE); INSERT INTO projects (id, name, total_cost, start_date) VALUES (1, 'Big Dig', 14800000000, '1982-01-01');", "output": "SELECT name, total_cost FROM projects WHERE total_cost = (SELECT MAX(total_cost) FROM projects);"}
{"input": " \ub3c4\uc2ec\uc9c0\uc5ed \uae34\uae09\uc804\ud654 \ubc0f \ud654\uc7ac\ubc1c\uc0dd\uc2dc \ud3c9\uade0 \ub300\uc751\uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE emergency_calls (id INT, location VARCHAR(20), response_time INT); INSERT INTO emergency_calls (id, location, response_time) VALUES (1, 'downtown', 10); CREATE TABLE fire_incidents (id INT, location VARCHAR(20), response_time INT); INSERT INTO fire_incidents (id, location, response_time) VALUES (1, 'downtown', 15);", "output": "SELECT AVG(response_time) FROM emergency_calls WHERE location = 'downtown' UNION ALL SELECT AVG(response_time) FROM fire_incidents WHERE location = 'downtown';"}
{"input": " \ub2e8\ubc31\uc9c8 \ud568\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uc694\ub9ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cuisine (id INT, type VARCHAR(50), protein INT, calories INT); INSERT INTO cuisine (id, type, protein, calories) VALUES (1, 'Greek', 30, 600), (2, 'Middle Eastern', 25, 700), (3, 'Indian Vegetarian', 20, 500), (4, 'Mexican', 15, 800), (5, 'Japanese', 12, 400);", "output": "SELECT type, protein, RANK() OVER (ORDER BY protein DESC) as rank FROM cuisine WHERE rank <= 5;"}
{"input": " \uc5f0\ubd09\uc774 \uac00\uc7a5 \ub192\uc740 \ubc14\uc774\uc624\ud504\ub85c\uc138\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4 3\uc778\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bioprocess_engineers (name TEXT, salary FLOAT); INSERT INTO bioprocess_engineers (name, salary) VALUES ('EngrA', 80000); INSERT INTO bioprocess_engineers (name, salary) VALUES ('EngrB', 90000); INSERT INTO bioprocess_engineers (name, salary) VALUES ('EngrC', 85000);", "output": "SELECT name, salary FROM bioprocess_engineers ORDER BY salary DESC LIMIT 3;"}
{"input": " \ub2e8\uc77c \uad11\uc0b0\uc758 \ucd5c\ub300 \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mine_staff (id INT, mine_id INT, employees INT); INSERT INTO mine_staff (id, mine_id, employees) VALUES (1, 101, 50), (2, 101, 55), (3, 102, 75), (4, 103, 80), (5, 104, 100);", "output": "SELECT mine_id, MAX(employees) as max_employees FROM mine_staff GROUP BY mine_id;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c \ud3c9\uade0 \uc0ac\uc6a9\uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE usage (id INT, subscriber_id INT, plan_id INT, usage_time DECIMAL(10,2)); CREATE TABLE mobile_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2)); CREATE TABLE regions (id INT, name VARCHAR(255));", "output": "SELECT regions.name AS region, AVG(usage_time) FROM usage JOIN mobile_plans ON usage.plan_id = mobile_plans.id JOIN regions ON subscribers.region = regions.id GROUP BY regions.name;"}
{"input": " \uc9c0\uc5ed\ubcc4\ub85c \uad6c\ubd84\ub41c \uac01 \uc11c\uc2dd\uc9c0 \uc720\ud615\uc758 \ud574\uc591 \uc0dd\ubb3c\uc5d0 \ub300\ud55c \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE life_habitat (region VARCHAR(50), habitat VARCHAR(50), biomass FLOAT); INSERT INTO life_habitat VALUES ('Region A', 'Habitat 1', 123.4), ('Region A', 'Habitat 2', 234.5), ('Region B', 'Habitat 1', 345.6);", "output": "SELECT region, habitat, SUM(biomass) OVER (PARTITION BY region, habitat) as total_biomass FROM life_habitat;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \ud30c\ub9ac\uc5d0\uc11c \uc9c4\ud589\ub41c \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c\ub294 \ucd1d \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE circular_economy_paris (city VARCHAR(50), initiative_count INT, year INT); INSERT INTO circular_economy_paris (city, initiative_count, year) VALUES ('Paris', 200, 2019), ('Paris', 250, 2020), ('Paris', 300, 2021);", "output": "SELECT SUM(initiative_count) FROM circular_economy_paris WHERE city = 'Paris' AND year >= 2019;"}
{"input": " 50\uac1c \uc774\uc0c1\uc758 \uc791\ud488\uc744 \ub9cc\ub4e0 \uc608\uc220\uac00\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, ArtistName VARCHAR(255), ArtistBirthYear INT); INSERT INTO Artists (ArtistID, ArtistName, ArtistBirthYear) VALUES (1, 'Vincent Van Gogh', 1853), (2, 'Pablo Picasso', 1881), (3, 'Claude Monet', 1840), (4, 'Francisco Goya', 1746); CREATE TABLE Artworks (ArtworkID INT PRIMARY KEY, ArtistID INT, ArtworkTitle VARCHAR(255)); INSERT INTO Artworks (ArtworkID, ArtistID, ArtworkTitle) VALUES (1, 1, 'Starry Night'), (2, 1, 'Sunflowers'), (3, 2, 'Guernica'), (4, 2, 'The Weeping Woman'), (5, 3, 'Water Lilies'), (6, 3, 'Impression Sunrise'), (7, 4, 'The Third of May 1808'), (8, 4, 'Saturn Devouring His Son');", "output": "SELECT AVG(YEAR(CURRENT_DATE) - ArtistBirthYear) AS AverageAge FROM Artists WHERE ArtistID IN (SELECT ArtistID FROM Artworks GROUP BY ArtistID HAVING COUNT(ArtworkID) > 50);"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc784\ubb34\ub97c \uc218\ud589\ud55c \uc6b0\uc8fc\uc120\uc744 \ube44\ud589\ud55c \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \uc784\ubb34 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Spacecraft_Missions_Count (id INT, spacecraft_id INT, astronaut_id INT, mission_name VARCHAR(100), mission_date DATE); INSERT INTO Spacecraft_Missions_Count (id, spacecraft_id, astronaut_id, mission_name, mission_date) VALUES (1, 1, 1, 'Apollo 11', '1969-07-16');", "output": "SELECT astronaut_id, COUNT(*) as mission_count FROM Spacecraft_Missions_Count GROUP BY astronaut_id ORDER BY mission_count DESC LIMIT 1"}
{"input": " \ud68c\uc6d0\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc6e8\uc5b4\ub7ec\ube14 \uae30\uc220 \uae30\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE member_wearables (member_id INT, device_id INT, device_name VARCHAR(25)); INSERT INTO member_wearables (member_id, device_id, device_name) VALUES (1, 1, 'Fitbit Charge 4'), (2, 2, 'Garmin Venu'), (3, 1, 'Fitbit Charge 4'), (4, 3, 'Apple Watch'), (5, 2, 'Garmin Venu');", "output": "SELECT device_name, COUNT(*) FROM member_wearables GROUP BY device_name ORDER BY COUNT(*) DESC;"}
{"input": " \uce90\ub098\ub2e4\uc5d0\uc11c \ucd1d \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ud654\ud559 \uc81c\ud488\uc744 \ucd1d \ud310\ub9e4\ub7c9 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE products (product_id INT, product_name TEXT, country TEXT, total_sales FLOAT); INSERT INTO products (product_id, product_name, country, total_sales) VALUES (1, 'Product A', 'Canada', 50000), (2, 'Product B', 'Canada', 75000), (3, 'Product C', 'Canada', 40000), (4, 'Product D', 'Canada', 60000);", "output": "SELECT product_name, total_sales, RANK() OVER (ORDER BY total_sales DESC) as rank FROM products WHERE country = 'Canada' GROUP BY product_name HAVING rank <= 3;"}
{"input": " \uc6b0\uc8fc \uc720\uc601 \ud69f\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uba85\uc758 \uc6b0\uc8fc \ube44\ud589\uc0ac\ub97c \ud45c\uc2dc\ud558\uace0 \uc6b0\uc8fc \ube44\ud589\uc0ac \uc774\ub984\uacfc \uc6b0\uc8fc \uc720\uc601 \ud69f\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Astronauts (Name VARCHAR(50), Spacewalks INT); INSERT INTO Astronauts (Name, Spacewalks) VALUES ('Astronaut1', 10), ('Astronaut2', 20), ('Astronaut3', 15), ('Astronaut4', 30), ('Astronaut5', 25), ('Astronaut6', 5);", "output": "SELECT Name, Spacewalks FROM (SELECT Name, Spacewalks, RANK() OVER (ORDER BY Spacewalks DESC) as Ranking FROM Astronauts) as SubQuery WHERE Ranking <= 5;"}
{"input": " \ubd81\ubd80 \uc9c0\uc5ed\uc758 \uad11\ub300\uc5ed \uc11c\ube44\uc2a4\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uace0\uac1d \ubd88\ub9cc \uc0ac\ud56d\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE complaints (complaint_id INT, subscriber_type VARCHAR(10), region VARCHAR(10), complaint VARCHAR(50)); INSERT INTO complaints (complaint_id, subscriber_type, region, complaint) VALUES (1, 'broadband', 'North', 'slow internet speed');", "output": "SELECT complaint FROM complaints WHERE subscriber_type = 'broadband' AND region = 'North';"}
{"input": " \ub18d\uc7a5\uc758 \ub300\ub959\ubcc4\ub85c \ubd84\ub958\ub41c \uac01 \uc885\uc5d0 \ub300\ud55c \ucd1d \uc5b4\ub958 \ubc14\uc774\uc624\ub9e4\uc2a4\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Continent (id INT, name VARCHAR(50)); CREATE TABLE Farm (id INT, name VARCHAR(50), country VARCHAR(50), continent_id INT); CREATE TABLE Species (id INT, name VARCHAR(50), scientific_name VARCHAR(50)); CREATE TABLE FarmSpecies (farm_id INT, species_id INT, biomass INT);", "output": "SELECT c.name, s.name, SUM(fs.biomass) FROM Species s JOIN FarmSpecies fs ON s.id = fs.species_id JOIN Farm f ON fs.farm_id = f.id JOIN Continent c ON f.continent_id = c.id GROUP BY c.name, s.name;"}
{"input": " \ub3c5\uc77c\uc758 \uc5b4\ub290 \uc0b0\ub9bc\uc5d0\uc11c 5\ub144 \uc774\uc0c1\uc758 \ubaa9\uc7ac \uc0dd\uc0b0 \ub370\uc774\ud130\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Forests (id INT, name VARCHAR(50), hectares FLOAT, country VARCHAR(50)); INSERT INTO Forests (id, name, hectares, country) VALUES (1, 'Black Forest', 150000.0, 'Germany'); CREATE TABLE Timber_Production (id INT, forest_id INT, year INT, production_cubic_meters INT); INSERT INTO Timber_Production (id, forest_id, year, production_cubic_meters) VALUES (1, 1, 2000, 12000);", "output": "SELECT forest_id FROM Timber_Production WHERE forest_id IN (SELECT id FROM Forests WHERE country = 'Germany') GROUP BY forest_id HAVING COUNT(DISTINCT year) > 5;"}
{"input": " \uc5f0\ub839\ub300\ubcc4 \uace0\uac1d\uc758 \ucd1d \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ClientDemographics ( ClientID INT, ClientName VARCHAR(50), Age INT, Gender VARCHAR(50), Race VARCHAR(50), BillingAmount DECIMAL(10,2) ); INSERT INTO ClientDemographics (ClientID, ClientName, Age, Gender, Race, BillingAmount) VALUES (1, 'John Doe', 35, 'Male', 'White', 5000.00), (2, 'Jane Doe', 45, 'Female', 'Asian', 7000.00), (3, 'Bob Smith', 50, 'Male', 'Black', 6000.00), (4, 'Alice Johnson', 40, 'Female', 'Hispanic', 8000.00), (5, 'David Williams', 55, 'Male', 'White', 9000.00);", "output": "SELECT CASE WHEN Age < 35 THEN 'Under 35' WHEN Age < 50 THEN '35-49' ELSE '50 and Above' END AS AgeGroup, SUM(BillingAmount) AS TotalBillingAmount FROM ClientDemographics GROUP BY AgeGroup;"}
{"input": " \uce90\ub098\ub2e4 \uc18c\uc7ac \uc2a4\ud29c\ub514\uc624\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \ud3c9\uc810\uc744 \ubc1b\uc740 \uc0c1\uc704 3\uac1c \uc601\ud654\uc758 \uc81c\ubaa9\uacfc \uc7a5\ub974\ub97c \ud3c9\uc810 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE movies (title VARCHAR(255), genre VARCHAR(255), studio VARCHAR(255), rating FLOAT); INSERT INTO movies (title, genre, studio, rating) VALUES ('Movie3', 'Action', 'Canada Studio1', 8.5), ('Movie4', 'Drama', 'Canada Studio2', 9.0);", "output": "SELECT title, genre FROM (SELECT title, genre, studio, rating, ROW_NUMBER() OVER (PARTITION BY studio ORDER BY rating DESC) as rank FROM movies WHERE studio LIKE '%Canada%') subquery WHERE rank <= 3 ORDER BY rating DESC;"}
{"input": "ManufacturerD\uc758 \uac01 \ubd80\uc11c \uc9c1\uc6d0 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Departments (department_id INT, department_name VARCHAR(50), manufacturer_id INT); INSERT INTO Departments (department_id, department_name, manufacturer_id) VALUES (1, 'Department1', 4), (2, 'Department2', 4); CREATE TABLE Employees (employee_id INT, employee_name VARCHAR(50), department_id INT); INSERT INTO Employees (employee_id, employee_name, department_id) VALUES (1, 'Employee1', 1), (2, 'Employee2', 1), (3, 'Employee3', 2); CREATE TABLE Manufacturers (manufacturer_id INT, manufacturer_name VARCHAR(50), region VARCHAR(50)); INSERT INTO Manufacturers (manufacturer_id, manufacturer_name, region) VALUES (4, 'ManufacturerD', 'North America');", "output": "SELECT d.department_name, COUNT(e.employee_id) AS num_employees FROM Departments d INNER JOIN Employees e ON d.department_id = e.department_id WHERE d.manufacturer_id = (SELECT manufacturer_id FROM Manufacturers WHERE manufacturer_name = 'ManufacturerD') GROUP BY d.department_name;"}
{"input": " \ubbf8\uad6d \uc5ec\uc131 \uc791\uac00 \uc791\ud488\uc758 \ucd1d \ud310\ub9e4 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, Name VARCHAR(255), Gender VARCHAR(255), Nationality VARCHAR(255)); CREATE TABLE Artworks (ArtworkID INT PRIMARY KEY, Title VARCHAR(255), ArtistID INT, Year INT, SalePrice DECIMAL(10,2)); CREATE TABLE Sales (SaleID INT PRIMARY KEY, SaleDate DATE);", "output": "SELECT SUM(Artworks.SalePrice) AS TotalSalePrice FROM Artists INNER JOIN Artworks ON Artists.ArtistID = Artworks.ArtistID INNER JOIN Sales ON Artworks.ArtworkID = Sales.ArtworkID WHERE Artists.Gender = 'Female' AND Artists.Nationality = 'American';"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ube0c\ub79c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ucd1d\ub7c9\uacfc \ube44\uad50\ud558\uc5ec \uc9c0\ub09c \ub2ec \uac01 \ube0c\ub79c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud55c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc18c\uc7ac\uc758 \ube44\uc728\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Brand_Sustainable_Material_Monthly(Brand_ID INT, Month DATE, Quantity INT); INSERT INTO Brand_Sustainable_Material_Monthly(Brand_ID, Month, Quantity) VALUES (1, '2022-01-01', 500), (1, '2022-01-02', 500), (1, '2022-02-01', 600), (2, '2022-01-01', 600), (2, '2022-01-02', 600), (2, '2022-02-01', 700);", "output": "SELECT Brand_ID, (SUM(CASE WHEN Month >= DATEADD(MONTH, -1, GETDATE()) THEN Quantity ELSE 0 END) * 100.0 / SUM(Quantity) OVER (PARTITION BY Brand_ID)) as Percentage FROM Brand_Sustainable_Material_Monthly;"}
{"input": " \uc77c\ubcf8 \uc81c\uc870\uc5c5\uccb4\uac00 \uce90\ub098\ub2e4\uc5d0\uc11c \ud310\ub9e4\ud55c \ucc28\ub7c9\uc758 \ucd1d \ub300\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VehicleSales (Make VARCHAR(50), Country VARCHAR(50), Sales INT); INSERT INTO VehicleSales (Make, Country, Sales) VALUES ('Toyota', 'Canada', 150000), ('Honda', 'Canada', 100000), ('Nissan', 'Canada', 75000), ('Subaru', 'Canada', 50000), ('Mazda', 'Canada', 25000);", "output": "SELECT SUM(Sales) FROM VehicleSales WHERE Make IN ('Toyota', 'Honda', 'Nissan', 'Subaru', 'Mazda') AND Country = 'Canada';"}
{"input": " \uc5ec\uc131 \ubc30\uc6b0\uc640 \ud568\uaed8 \uc77c\ud574 \ubcf8 \uc801\uc774 \uc5c6\ub294 \uac10\ub3c5\uc740 \ub204\uad6c\uc778\uac00?", "context": "CREATE TABLE directors (id INT, name VARCHAR(255), gender VARCHAR(10)); CREATE TABLE movies_directors (movie_id INT, director_id INT); CREATE TABLE actors (id INT, name VARCHAR(255), gender VARCHAR(10)); CREATE TABLE movies_actors (movie_id INT, actor_id INT); INSERT INTO directors (id, name, gender) VALUES (1, 'Director1', 'Male'), (2, 'Director2', 'Female'), (3, 'Director3', 'Male'); INSERT INTO movies_directors (movie_id, director_id) VALUES (1, 1), (2, 2), (3, 3); INSERT INTO actors (id, name, gender) VALUES (1, 'Actor1', 'Male'), (2, 'Actor2', 'Female'), (3, 'Actor3', 'Male'), (4, 'Actor4', 'Male'); INSERT INTO movies_actors (movie_id, actor_id) VALUES (1, 1), (1, 2), (2, 3), (2, 4), (3, 1), (3, 4);", "output": "SELECT d.name FROM directors d LEFT JOIN (SELECT movie_id FROM movies_actors ma JOIN actors a ON ma.actor_id = a.id WHERE a.gender = 'Female') fem_actors ON d.id = (SELECT movie_id FROM movies_directors md WHERE md.director_id = d.id) WHERE fem_actors.movie_id IS NULL;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\ub294 \uba87 \uba85\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \uc788\uc73c\uba70, \uadf8\ub4e4\uc740 \uc5b4\ub5a4 \uac8c\uc784\uc744 \ud558\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE Players (PlayerID INT, City VARCHAR(50)); INSERT INTO Players (PlayerID, City) VALUES (1, 'Los Angeles'), (2, 'Paris'), (3, 'Tokyo'), (4, 'Sydney'); CREATE TABLE GameSessions (PlayerID INT, GameID INT); INSERT INTO GameSessions (PlayerID, GameID) VALUES (1, 1), (1, 2), (2, 2), (2, 3), (3, 3), (4, 4); CREATE TABLE GameDesign (GameID INT, GameName VARCHAR(50)); INSERT INTO GameDesign (GameID, GameName) VALUES (1, 'Space Explorer'), (2, 'Racing Fever'), (3, 'VR Puzzle'), (4, 'Underwater Adventure');", "output": "SELECT Players.City, COUNT(Players.PlayerID) AS Players_in_City, GameDesign.GameName FROM Players INNER JOIN GameSessions ON Players.PlayerID = GameSessions.PlayerID INNER JOIN GameDesign ON GameSessions.GameID = GameDesign.GameID GROUP BY Players.City, GameDesign.GameName;"}
{"input": " \ucd1d \uad11\ub300\uc5ed \uac00\uc785\uc790\uac00 500\uba85 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_subscribers (region VARCHAR(50), subscriber_id INT); INSERT INTO broadband_subscribers VALUES ('Region A', 100); INSERT INTO broadband_subscribers VALUES ('Region A', 200); INSERT INTO broadband_subscribers VALUES ('Region B', 300); INSERT INTO broadband_subscribers VALUES ('Region C', 400); INSERT INTO broadband_subscribers VALUES ('Region D', 50);", "output": "SELECT region FROM broadband_subscribers GROUP BY region HAVING COUNT(subscriber_id) > 500;"}
{"input": " \ubc95\ud559\ubd80\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \uc81c\uc678\ud558\uace0 \uad50\uc721\ud559\ubd80\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uace0\uc720\ud55c \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE EducationPrograms (ProgramID INT, ProgramName VARCHAR(50)); CREATE TABLE LawPrograms (ProgramID INT, ProgramName VARCHAR(50)); INSERT INTO EducationPrograms VALUES (1, 'Tutoring Program'), (2, 'Mentoring Program'), (3, 'Accessible Learning Resources'), (4, 'Diversity Workshops'); INSERT INTO LawPrograms VALUES (2, 'Mentoring Program'), (3, 'Accessible Learning Resources'), (5, 'Legal Clinics');", "output": "SELECT ProgramName FROM EducationPrograms WHERE ProgramName NOT IN (SELECT ProgramName FROM LawPrograms);"}
{"input": " \ubc18\ud488 \ud69f\uc218\uac00 \uac00\uc7a5 \uc801\uc740 \ub274\uc695 \ucc3d\uace0\uc758 \uac00\uc7a5 \uae34 \uacbd\ub85c 3\uac1c\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Routes (RouteID INT, OriginWarehouse INT, DestinationWarehouse INT, Distance FLOAT); INSERT INTO Routes (RouteID, OriginWarehouse, DestinationWarehouse, Distance) VALUES (1, 1, 2, 120.5), (2, 1, 3, 180.7), (3, 1, 4, 100.9); CREATE TABLE Returns (ReturnID INT, RouteID INT, ReturnDate DATETIME); INSERT INTO Returns (ReturnID, RouteID, ReturnDate) VALUES (1, 1, '2022-01-01 12:00:00'), (2, 2, '2022-01-03 10:00:00'), (3, 1, '2022-01-05 09:00:00'); CREATE TABLE Warehouses (WarehouseID INT, State VARCHAR(2)); INSERT INTO Warehouses (WarehouseID, State) VALUES (1, 'NY'), (2, 'NJ'), (3, 'PA'), (4, 'OH');", "output": "SELECT r.RouteID, r.Distance FROM Routes r JOIN Warehouses w ON r.OriginWarehouse = w.WarehouseID WHERE w.State = 'NY' AND r.RouteID NOT IN (SELECT r2.RouteID FROM Returns r2 JOIN Warehouses w2 ON r2.RouteID = w2.WarehouseID WHERE w2.State = 'NY') ORDER BY Distance DESC LIMIT 3;"}
{"input": " \ud751\ud574\uc758 \ubaa8\ub4e0 \uc5b4\uc885\uacfc \uc131\uc7a5\ub960\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE black_sea (region VARCHAR(255), id INTEGER); INSERT INTO black_sea (region, id) VALUES ('Black Sea', 1); CREATE TABLE fish_species_black (id INTEGER, species VARCHAR(255)); INSERT INTO fish_species_black (id, species) VALUES (1, 'Anchovy'), (2, 'Sprat'); CREATE TABLE black_sea_growth (species_id INTEGER, region_id INTEGER, rate FLOAT);", "output": "SELECT fs.species, bsg.rate FROM black_sea_growth bsg JOIN fish_species_black fs ON bsg.species_id = fs.id JOIN black_sea bs ON bsg.region_id = bs.id WHERE bs.region = 'Black Sea';"}
{"input": "\ubaa8\ub4e0 \ub18d\uc7a5\uacfc \uc9c0\uc5ed\uc5d0\uc11c \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc774 \uac00\uc7a5 \ub0ae\uc740 \ud558\uc704 2\uac1c \uc791\ubb3c\uc758 \uc774\ub984\uacfc \uc5d0\uc774\ucee4\ub2f9 \uc218\ud655\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Farm (id INT, name TEXT, crop TEXT, yield_per_acre FLOAT, region TEXT); INSERT INTO Farm (id, name, crop, yield_per_acre, region) VALUES (1, 'Smith Farm', 'Corn', 150, 'Northern'), (2, 'Jones Farm', 'Soybeans', 80, 'Northern'), (3, 'Brown Farm', 'Cotton', 200, 'Southern');", "output": "SELECT crop, yield_per_acre, RANK() OVER (ORDER BY yield_per_acre ASC) as rn FROM Farm WHERE rn <= 2;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc758 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HealthEquity (id INT, metric_name TEXT, state TEXT); INSERT INTO HealthEquity (id, metric_name, state) VALUES (1, 'Access Index 2020', 'Colorado'); INSERT INTO HealthEquity (id, metric_name, state) VALUES (2, 'Quality Index 2018', 'Colorado');", "output": "SELECT * FROM HealthEquity WHERE state = 'Colorado';"}
{"input": " \uc77c\ubcf8\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11\uc758 \ucd1d \uc218\uc775\uc744 \uad6c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE tourism_revenue (region TEXT, revenue FLOAT); INSERT INTO tourism_revenue (region, revenue) VALUES ('Japan', 2000000), ('USA', 3000000);", "output": "SELECT SUM(revenue) FROM tourism_revenue WHERE region = 'Japan';"}
{"input": " \uc720\uae30\ub18d \uc81c\ud488\uacfc \ube44\uc720\uae30\ub18d \uc81c\ud488\uc744 \ubaa8\ub450 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uacf5\uae09\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Suppliers (supplier_id INT, supplier_name VARCHAR(50), product_type VARCHAR(50)); INSERT INTO Suppliers (supplier_id, supplier_name, product_type) VALUES (1, 'Organic Valley', 'Organic'), (2, 'Tyson Foods', 'Non-organic'), (3, 'Earthbound Farms', 'Organic'), (4, 'Smithfield Foods', 'Non-organic');", "output": "SELECT supplier_name FROM Suppliers WHERE product_type = 'Organic' INTERSECT SELECT supplier_name FROM Suppliers WHERE product_type = 'Non-organic';"}
{"input": " 'GrassFedCattleCo'\uc5d0\uc11c \uacf5\uae09\ub41c \uc1e0\uace0\uae30\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Orders (id INT, supplier_id INT, item VARCHAR(255), weight INT); INSERT INTO Orders (id, supplier_id, item, weight) VALUES (1, 1, 'Beef', 150), (2, 1, 'Chicken', 80), (3, 2, 'Beef', 200), (4, 2, 'Turkey', 120); CREATE TABLE Suppliers (id INT, name VARCHAR(255)); INSERT INTO Suppliers (id, name) VALUES (1, 'GrassFedCattleCo'), (2, 'PoultryPlace');", "output": "SELECT SUM(weight) FROM Orders WHERE item = 'Beef' AND supplier_id IN (SELECT id FROM Suppliers WHERE name = 'GrassFedCattleCo');"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\ubd80\ud55c \uace0\uc720 \uae30\ubd80\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(255)); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Education'), (2, 'Health'), (3, 'Environment'); CREATE TABLE DonorsPrograms (DonorID INT, ProgramID INT); INSERT INTO DonorsPrograms (DonorID, ProgramID) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 3), (6, 1); CREATE TABLE Donations (DonationID INT, DonorID INT, DonationAmount DECIMAL(10, 2)); INSERT INTO Donations (DonationID, DonorID, DonationAmount) VALUES (1, 1, 100), (2, 1, 200), (3, 2, 50), (4, 3, 75), (5, 4, 300), (6, 6, 50);", "output": "SELECT Programs.ProgramName, COUNT(DISTINCT DonorsPrograms.DonorID) AS UniqueDonors FROM Programs INNER JOIN DonorsPrograms ON Programs.ProgramID = DonorsPrograms.ProgramID INNER JOIN Donations ON DonorsPrograms.DonorID = Donations.DonorID GROUP BY Programs.ProgramName;"}
{"input": " Molniya \uada4\ub3c4\uc5d0\ub294 \uba87 \uac1c\uc758 \uc704\uc131\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE satellite_orbits (id INT, name VARCHAR(255), orbit_type VARCHAR(255)); CREATE VIEW molniya_satellites AS SELECT * FROM satellite_orbits WHERE orbit_type = 'Molniya';", "output": "SELECT COUNT(*) FROM molniya_satellites;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ub18d\uc0dd\ud0dc\ud559 \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc608\uc0b0\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc608\uc0b0\uc744 \uac16\uace0 \uc788\ub294 \uc544\ud504\ub9ac\uce74\uc758 \ubaa8\ub4e0 \ub18d\uc0dd\ud0dc\ud559 \ud504\ub85c\uc81d\ud2b8\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE AgroecologyProject (id INT, location VARCHAR(50), budget DECIMAL(10,2)); INSERT INTO AgroecologyProject (id, location, budget) VALUES (1, 'Kenya', 50000.0); INSERT INTO AgroecologyProject (id, location, budget) VALUES (2, 'Nigeria', 75000.0);", "output": "SELECT * FROM AgroecologyProject WHERE budget > (SELECT AVG(budget) FROM AgroecologyProject WHERE location = 'Africa');"}
{"input": " 2020\ub144 \ud55c\uad6d \uc804\uae30\ucc28 \uc2dc\uc7a5\uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub420\uae4c\uc694?", "context": "CREATE TABLE Market_Share (id INT, vehicle_type VARCHAR(255), market_share DECIMAL(4,2), country VARCHAR(50), year INT); INSERT INTO Market_Share (id, vehicle_type, market_share, country, year) VALUES (1, 'Electric Vehicles', 25.5, 'South Korea', 2020); INSERT INTO Market_Share (id, vehicle_type, market_share, country, year) VALUES (2, 'Hybrid Vehicles', 45.2, 'South Korea', 2020);", "output": "SELECT market_share FROM Market_Share WHERE country = 'South Korea' AND year = 2020 AND vehicle_type = 'Electric Vehicles';"}
{"input": " \uac19\uc740 \uc7a5\uc18c\uc5d0\uc11c \ub450 \ubc88 \uc774\uc0c1 \uacf5\uc5f0\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100));", "output": "SELECT venue FROM (SELECT venue, artist_id, COUNT(*) AS concert_count FROM concert_ticket_sales GROUP BY venue, artist_id) AS subquery WHERE concert_count > 1;"}
{"input": " \uc7ac\uc0dd\uc5d0\ub108\uc9c0 \ubd80\ubb38 \uacf5\uc7a5\uc744 \ubcf4\uc720\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE IF NOT EXISTS factories (id INT PRIMARY KEY, country VARCHAR(255), sector VARCHAR(255)); INSERT INTO factories (id, country, sector) VALUES (1, 'Germany', 'automotive'), (2, 'China', 'renewable energy'), (3, 'USA', 'aerospace');", "output": "SELECT DISTINCT country FROM factories WHERE sector = 'renewable energy';"}
{"input": " '\uc544\ub974\ub370\ucf54' \uc804\uc2dc\ud68c \ud2f0\ucf13 \uac00\uaca9 10% \uc778\uc0c1", "context": "CREATE TABLE exhibitions (id INT, name VARCHAR(255), price DECIMAL(5,2)); INSERT INTO exhibitions (id, name, price) VALUES (1, 'Art Deco', 15.99);", "output": "WITH updated AS (UPDATE exhibitions SET price = price * 1.10 WHERE name = 'Art Deco') SELECT * FROM updated;"}
{"input": " \uce90\ub098\ub2e4\uc758 \ubaa8\ub4e0 \ub18d\uc0dd\ud0dc\ud559 \ucee8\ud37c\ub7f0\uc2a4\uc640 \ucc38\uc11d\uc790 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE agroecology_conferences (conference_name VARCHAR(255), location VARCHAR(255), attendees INT);", "output": "SELECT location, conference_name, SUM(attendees) as total_attendees FROM agroecology_conferences WHERE location = 'Canada' GROUP BY conference_name;"}
{"input": " \uac01 \uc5d0\ub108\uc9c0 \uc800\uc7a5 \uae30\uc220\uc758 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE energy_storage_capacity (tech VARCHAR(50), capacity FLOAT); INSERT INTO energy_storage_capacity (tech, capacity) VALUES ('Batteries', 2345.6), ('Flywheels', 1234.5), ('Pumped Hydro', 5678.9), ('Batteries', 3456.7);", "output": "SELECT tech, SUM(capacity) FROM energy_storage_capacity GROUP BY tech;"}
{"input": " '\uce74\ud14c\uace0\ub9ac 1'\uc5d0 \uc788\ub294 \ucd5c\uc18c 2\uac1c \uc81c\ud488\uc5d0 \uc790\uc7ac\ub97c \uc81c\uacf5\ud558\ub294 \uacf5\uae09\uc5c5\uccb4\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud558\uc138\uc694.", "context": "CREATE TABLE products (product_id INT, product_category TEXT); CREATE TABLE materials (material_id INT, material_name TEXT, product_id INT, supplier_id INT); INSERT INTO products (product_id, product_category) VALUES (1, 'Category 1'), (2, 'Category 2'), (3, 'Category 1'), (4, 'Category 3'), (5, 'Category 1'); INSERT INTO materials (material_id, material_name, product_id, supplier_id) VALUES (1, 'Material 1', 1, 101), (2, 'Material 2', 1, 102), (3, 'Material 3', 2, 103), (4, 'Material 4', 3, 101), (5, 'Material 5', 3, 102), (6, 'Material 6', 4, 103), (7, 'Material 7', 5, 101), (8, 'Material 8', 5, 102), (9, 'Material 9', 5, 103);", "output": "SELECT supplier_id FROM materials WHERE product_id IN (SELECT product_id FROM products WHERE product_category = 'Category 1') GROUP BY supplier_id HAVING COUNT(DISTINCT product_id) >= 2;"}
{"input": " 2022\ub144 3\ubd84\uae30\uc5d0 AI \ucee8\uc2dc\uc5b4\uc9c0 \uc11c\ube44\uc2a4\ub97c \ucc44\ud0dd\ud55c \ubbf8\uc8fc \uc9c0\uc5ed \ud638\ud154\uc5d0\uc11c \ucc3d\ucd9c\ub41c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotel_services (hotel_id INT, hotel_name TEXT, country TEXT, revenue FLOAT, ai_concierge INT); INSERT INTO hotel_services (hotel_id, hotel_name, country, revenue, ai_concierge) VALUES (1, 'Hotel F', 'USA', 500000, 1), (2, 'Hotel G', 'Brazil', 600000, 1), (3, 'Hotel H', 'Mexico', 400000, 0), (4, 'Hotel I', 'Canada', 700000, 1), (5, 'Hotel J', 'USA', 800000, 0);", "output": "SELECT SUM(revenue) FROM hotel_services WHERE country IN ('USA', 'Canada', 'Brazil', 'Mexico') AND ai_concierge = 1 AND quarter = 3 AND year = 2022;"}
{"input": " \uc778\ub514\uce74\uc640 \uc0ac\ud2f0\ubc14 \uade0\uc8fc\ub97c \ubaa8\ub450 \ud310\ub9e4\ud558\ub294 \uc6cc\uc2f1\ud134 DC\uc758 \uc57d\uad6d\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE DispensarySales (dispensary_id INT, strain VARCHAR(20), quantity INT); INSERT INTO DispensarySales (dispensary_id, strain, quantity) VALUES (1, 'Sour Diesel', 50), (1, 'Blue Dream', 75), (2, 'Green Crack', 60), (2, 'Jack Herer', 80); CREATE TABLE DCDispensaries (dispensary_id INT, location VARCHAR(20)); INSERT INTO DCDispensaries (dispensary_id, location) VALUES (1, 'Washington D.C.'), (2, 'Washington D.C.');", "output": "SELECT ds.dispensary_id FROM DispensarySales ds JOIN DCDispensaries dcd ON ds.dispensary_id = dcd.dispensary_id WHERE strain LIKE '%Indica%' INTERSECT SELECT ds.dispensary_id FROM DispensarySales ds JOIN DCDispensaries dcd ON ds.dispensary_id = dcd.dispensary_id WHERE strain LIKE '%Sativa%';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uacf5\uc7a5\uc5d0\uc11c\ub294 \uc5b4\ub5a4 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc7ac\ub8cc\ub97c \uc0ac\uc6a9\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Factories (factory_id INT, factory_name VARCHAR(50), country VARCHAR(50), certification VARCHAR(50)); CREATE TABLE Factory_Materials (factory_id INT, material_id INT); CREATE TABLE Materials (material_id INT, material_name VARCHAR(50), is_sustainable BOOLEAN); INSERT INTO Factories (factory_id, factory_name, country, certification) VALUES (1, 'GreenAfrica', 'Kenya'), (2, 'EcoTech', 'South Africa'), (3, 'SustainableWest', 'Nigeria'); INSERT INTO Materials (material_id, material_name, is_sustainable) VALUES (1, 'Organic Cotton', true), (2, 'Synthetic Fiber', false), (3, 'Recycled Plastic', true); INSERT INTO Factory_Materials (factory_id, material_id) VALUES (1, 1), (1, 3), (2, 1), (2, 3), (3, 3);", "output": "SELECT m.material_name FROM Factories f INNER JOIN Factory_Materials fm ON f.factory_id = fm.factory_id INNER JOIN Materials m ON fm.material_id = m.material_id WHERE f.country IN ('Kenya', 'South Africa', 'Nigeria') AND m.is_sustainable = true;"}
{"input": " 2022\ub144 MLB \uc2dc\uc98c \ud648\ub7f0\ud0c0\uc790 \uc0c1\uc704 3\uba85\uc758 \ud3c9\uade0 \ud648\ub7f0 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE mlb_homeruns (player_id INT, player_name TEXT, team_id INT, league TEXT, homeruns INT); INSERT INTO mlb_homeruns (player_id, player_name, team_id, league, homeruns) VALUES (1, 'Aaron Judge', 19, 'MLB', 62), (2, 'Paul Goldschmidt', 14, 'MLB', 35);", "output": "SELECT AVG(homeruns) AS avg_homeruns FROM (SELECT homeruns FROM mlb_homeruns ORDER BY homeruns DESC LIMIT 3) AS top_3_hitters;"}
{"input": " \uc9c0\ub09c \uc8fc 'guest' \uacc4\uc815\uc5d0 \ub300\ud574 \ud558\ub8e8 \ucd5c\ub300 \ub85c\uadf8\uc778 \uc2dc\ub3c4 \uc2e4\ud328 \ud69f\uc218\ub294 \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE LoginAttempts (id INT, username VARCHAR(255), date DATE, success BOOLEAN); INSERT INTO LoginAttempts (id, username, date, success) VALUES (7, 'guest', '2022-02-15', FALSE);", "output": "SELECT MAX(failed_attempts) FROM (SELECT COUNT(*) AS failed_attempts FROM LoginAttempts WHERE username = 'guest' AND success = FALSE AND date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY date) AS subquery;"}
{"input": " '\ub514\ub809\ud130\uc6d0' \uac10\ub3c5\uc758 \uc601\ud654\uc5d0 \ucd9c\uc5f0\ud55c \ubc30\uc6b0\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE movies (id INT, title TEXT, actor TEXT, director TEXT); INSERT INTO movies (id, title, actor, director) VALUES (1, 'Movie1', 'Actor1', 'Director1'), (2, 'Movie2', 'Actor2', 'Director2'), (3, 'Movie3', 'Actor1', 'Director1'), (4, 'Movie4', 'Actor3', 'Director3');", "output": "SELECT DISTINCT actor FROM movies WHERE director = 'Director1';"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uadfc\ub85c\uc790\ub97c \ubcf4\uc720\ud55c \uad11\ubd80\uc758 \ub9e4\ub9bd \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE reclamation_expenses (miner_name VARCHAR(50), country VARCHAR(50), reclamation_costs DECIMAL(10,2), year INT, PRIMARY KEY (miner_name, year));INSERT INTO reclamation_expenses (miner_name, country, reclamation_costs, year) VALUES ('Emma White', 'Germany', 120000.00, 2020), ('Oliver Black', 'France', 180000.00, 2020), ('Jessica Green', 'Italy', 90000.00, 2020);CREATE VIEW miner_year_worker_count AS SELECT miner_name, country, ROW_NUMBER() OVER(PARTITION BY miner_name ORDER BY worker_count DESC) as worker_rank FROM labor_force;", "output": "SELECT context.miner_name, sql.reclamation_costs FROM reclamation_expenses sql JOIN (SELECT miner_name, worker_count, worker_rank FROM labor_force, miner_year_worker_count WHERE labor_force.miner_name = miner_year_worker_count.miner_name AND worker_rank = 1 AND country = 'Europe') context ON sql.miner_name = context.miner_name"}
{"input": " '\uae40\ub9ac\uc0ac' \ubcc0\ud638\uc0ac\uac00 \uc2b9\uc18c\ud55c \uc0ac\uac74\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE case_outcomes (case_id INT, attorney_name VARCHAR(50), case_won BOOLEAN); INSERT INTO case_outcomes (case_id, attorney_name, case_won) VALUES (1, 'Lisa Kim', true), (2, 'Mike Johnson', false), (3, 'Lisa Kim', true);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM case_outcomes WHERE attorney_name = 'Lisa Kim')) AS percentage_won FROM case_outcomes WHERE case_won = true AND attorney_name = 'Lisa Kim';"}
{"input": " \uac01 \uc885\ubaa9\uc758 \uc804\uc77c \uc885\uac00\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE stocks (stock_symbol TEXT, date DATE, open_price FLOAT, close_price FLOAT); INSERT INTO stocks (stock_symbol, date, open_price, close_price) VALUES ('AAPL', '2022-01-01', 150.00, 155.00), ('AAPL', '2022-01-02', 155.00, 160.00);", "output": "SELECT stock_symbol, date, close_price, LAG(close_price) OVER (PARTITION BY stock_symbol ORDER BY date) as previous_day_close FROM stocks;"}
{"input": " '\uce90\ub098\ub2e4'\ub85c \ubc30\uc1a1\ub418\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \ud654\ubb3c \uc911\ub7c9\uc744 \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE countries (country_id INT, country_name VARCHAR(50)); INSERT INTO countries (country_id, country_name) VALUES (1, 'Canada'), (2, 'USA'); CREATE TABLE containers (container_id INT, cargo_weight INT, country_id INT); INSERT INTO containers (container_id, cargo_weight, country_id) VALUES (1, 1000, 1), (2, 2000, 1), (3, 1500, 2);", "output": "SELECT SUM(cargo_weight) FROM containers WHERE country_id = (SELECT country_id FROM countries WHERE country_name = 'Canada');"}
{"input": " \ub274\uc2a4 \ud5e4\ub4dc\ub77c\uc778\uc5d0 \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \ub2e8\uc5b4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE news_articles (id INT, title VARCHAR(100), content TEXT, publication_date DATE); INSERT INTO news_articles (id, title, content, publication_date) VALUES (1, 'News Article 1', 'Content of News Article 1', '2021-01-01'); INSERT INTO news_articles (id, title, content, publication_date) VALUES (2, 'News Article 2', 'Content of News Article 2', '2021-02-01'); INSERT INTO news_articles (id, title, content, publication_date) VALUES (3, 'The News Article', 'Content of News Article 3', '2022-01-01');", "output": "SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(title, ' ', n.n), ' ', -1) AS word FROM news_articles, (SELECT a.N + b.N * 10 + 1 n FROM (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a CROSS JOIN (SELECT 0 AS N UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b ORDER BY n) n WHERE n.n <= 1 + (LENGTH(title) - LENGTH(REPLACE(title, ' ', ''))) AND title LIKE CONCAT('% ', SUBSTRING_INDEX(SUBSTRING_INDEX(title, ' ', n.n), ' ', -1), ' %') GROUP BY word ORDER BY COUNT(*) DESC LIMIT 1;"}
{"input": " 2022\ub144 '\uc544\ud504\ub9ac\uce74' \uc9c0\uc5ed\uc5d0\uc11c \uc548\uc804 \uc704\ubc18\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc9c1\uc6d0 \uc0c1\uc704 3\uba85\uc740 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE employee_safety (employee_id int, name varchar(20), plant varchar(10), region varchar(20), violation_date date); INSERT INTO employee_safety (employee_id, name, plant, region, violation_date) VALUES (1, 'John Doe', 'North Plant', 'Africa', '2022-01-01'), (2, 'Jane Smith', 'East Plant', 'Africa', '2022-02-01'), (3, 'Bob Johnson', 'East Plant', 'Africa', '2022-03-01'), (4, 'Alice Williams', 'North Plant', 'Africa', '2022-04-01');", "output": "SELECT e.name, COUNT(*) as total_violations FROM employee_safety e JOIN (SELECT employee_id, region FROM employee_safety WHERE region = 'Africa' GROUP BY employee_id, region HAVING COUNT(*) >= 3) f ON e.employee_id = f.employee_id AND e.region = f.region GROUP BY e.name ORDER BY total_violations DESC LIMIT 3;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uac70\ub798\uae08\uc561\uc774 \uac00\uc7a5 \ub192\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 client_id\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE clients (client_id INT, name TEXT, region TEXT, transaction_amount DECIMAL); INSERT INTO clients (client_id, name, region, transaction_amount) VALUES (1, 'John Doe', 'Asia', 500.00); INSERT INTO clients (client_id, name, region, transaction_amount) VALUES (2, 'Jane Smith', 'Europe', 600.00); INSERT INTO clients (client_id, name, region, transaction_amount) VALUES (3, 'Mike Johnson', 'Asia', 800.00); INSERT INTO clients (client_id, name, region, transaction_amount) VALUES (4, 'Sara Doe', 'Europe', 700.00); INSERT INTO clients (client_id, name, region, transaction_amount) VALUES (5, 'Ali Doe', 'Asia', 900.00);", "output": "SELECT client_id, region FROM (SELECT client_id, region, transaction_amount, ROW_NUMBER() OVER (PARTITION BY region ORDER BY transaction_amount DESC) AS rank FROM clients) AS ranked_clients WHERE rank = 1;"}
{"input": " \ubaa8\ub4e0 \uacf5\uc7a5\uc5d0\uc11c \uc758\ub958 \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uce5c\ud658\uacbd \uc18c\uc7ac\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Clothing (id INT, factory_id INT, material VARCHAR(255), price DECIMAL(5,2)); INSERT INTO Clothing (id, factory_id, material, price) VALUES (1, 1001, 'Organic Cotton', 3.50), (2, 1002, 'Recycled Polyester', 4.25), (3, 1001, 'Hemp', 2.75);", "output": "SELECT AVG(price) FROM Clothing WHERE material IN ('Organic Cotton', 'Recycled Polyester', 'Hemp');"}
{"input": " \ub3d9\uc2dc\uc5d0 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud50c\ub808\uc774\uc5b4 \uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE PlayerSession (SessionID INT, PlayerID INT, GameID INT, StartTime TIMESTAMP, EndTime TIMESTAMP); INSERT INTO PlayerSession (SessionID, PlayerID, GameID, StartTime, EndTime) VALUES (1, 1, 1, '2022-01-01 10:00:00', '2022-01-01 11:00:00'), (2, 2, 1, '2022-01-01 10:15:00', '2022-01-01 12:00:00'), (3, 3, 2, '2022-01-02 14:00:00', '2022-01-02 16:00:00'), (4, 4, 3, '2022-01-03 18:00:00', '2022-01-03 19:00:00');", "output": "SELECT GameID, MAX(COUNT(*)) FROM PlayerSession GROUP BY GameID HAVING COUNT(DISTINCT StartTime) > 1;"}
{"input": " \uc544\uc2dc\uc544 AI \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ai_projects (region VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO ai_projects (region, budget) VALUES ('Asia', 500000.00), ('North America', 700000.00), ('Europe', 600000.00);", "output": "SELECT AVG(budget) as avg_budget FROM ai_projects WHERE region = 'Asia';"}
{"input": " \ud30c\ub9ac \ud638\ud154\uc758 \uac01 OTA\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE otas (ota_id INT, ota_name TEXT, bookings INT, revenue INT); INSERT INTO otas (ota_id, ota_name, bookings, revenue) VALUES (1, 'Booking.com', 200, 30000), (2, 'Expedia', 150, 22000), (3, 'Agoda', 100, 15000); CREATE TABLE bookings (booking_id INT, ota_id INT, hotel_id INT, bookings INT, revenue INT); INSERT INTO bookings (booking_id, ota_id, hotel_id, bookings, revenue) VALUES (1, 1, 1, 30, 450), (2, 1, 2, 20, 300), (3, 2, 3, 15, 225), (4, 2, 4, 10, 150), (5, 3, 5, 5, 75), (6, 3, 6, 2, 30); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT); INSERT INTO hotels (hotel_id, hotel_name, city) VALUES (1, 'The Ritz Paris', 'Paris'), (2, 'The George V Paris', 'Paris'), (3, 'Le Bristol Paris', 'Paris'), (4, 'The Shangri-La Hotel Paris', 'Paris'), (5, 'The Four Seasons Hotel George V Paris', 'Paris'), (6, 'The Park Hyatt Paris-Vendome', 'Paris');", "output": "SELECT ota_name, SUM(revenue) as total_revenue FROM otas JOIN bookings ON otas.ota_id = bookings.ota_id JOIN hotels ON bookings.hotel_id = hotels.hotel_id WHERE hotels.city = 'Paris' GROUP BY ota_name;"}
{"input": "\uce98\ub9ac\ud3ec\ub2c8\uc544 \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \ub3c4\uc2dc\ubcc4 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, name VARCHAR(255), location VARCHAR(255), num_beds INT, is_urban BOOLEAN);CREATE TABLE clinics (id INT, name VARCHAR(255), location VARCHAR(255), is_urban BOOLEAN);", "output": "SELECT c.city, COUNT(h.name) AS num_hospitals, COUNT(cl.name) AS num_clinics FROM (SELECT location AS city FROM hospitals WHERE is_urban = TRUE UNION SELECT location AS city FROM clinics WHERE is_urban = TRUE) AS c LEFT JOIN hospitals h ON c.city = h.location AND h.is_urban = TRUE LEFT JOIN clinics cl ON c.city = cl.location AND cl.is_urban = TRUE GROUP BY c.city;"}
{"input": " \uc18c\ub9d0\ub9ac\uc544\uc758 \uc8fc\ub2f9 \uc124\uce58\ub41c \ud3c9\uade0 \uc815\uc218 \uc2dc\uc2a4\ud15c \uc218\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE water_purification (id INT, province VARCHAR(255), system_count INT); INSERT INTO water_purification (id, province, system_count) VALUES (1, 'Province 1', 2), (2, 'Province 2', 3), (3, 'Province 1', 4);", "output": "SELECT province, AVG(system_count) FROM water_purification GROUP BY province;"}
{"input": " \uc6d4\ubcc4 \ucd1d \uc5c5\ubb34 \uad00\ub828 \ubd80\uc0c1\uc774 \uac00\uc7a5 \ub9ce\uc740 \uad11\uc0b0 \uc791\uc5c5\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE work_injuries (injury_date DATE, mine_id INT, injury_type TEXT); INSERT INTO work_injuries (injury_date, mine_id, injury_type) VALUES ('2021-01-15', 1, 'Fracture'), ('2021-02-03', 1, 'Burn'), ('2021-03-12', 2, 'Electrocution'), ('2021-04-20', 3, 'Fracture'), ('2021-05-05', 1, 'Burn'), ('2021-06-18', 2, 'Electrocution'), ('2021-07-02', 3, 'Fracture'), ('2021-08-16', 1, 'Burn'), ('2021-09-01', 2, 'Electrocution'), ('2021-10-14', 3, 'Fracture'), ('2021-11-29', 1, 'Burn'), ('2021-12-15', 2, 'Electrocution'), ('2021-01-05', 4, 'Fracture'); CREATE TABLE mine_info (mine_id INT, mine_name TEXT); INSERT INTO mine_info (mine_id, mine_name) VALUES (1, 'Golden Mine'), (2, 'Silver Mine'), (3, 'Bronze Mine'), (4, 'Platinum Mine');", "output": "SELECT mine_id, EXTRACT(MONTH FROM injury_date) AS month, SUM(1) OVER (PARTITION BY mine_id ORDER BY EXTRACT(MONTH FROM injury_date)) AS total_injuries FROM work_injuries JOIN mine_info ON work_injuries.mine_id = mine_info.mine_id ORDER BY total_injuries DESC LIMIT 1;"}
{"input": "\ub3d9\ub0a8\uc544\uc2dc\uc544\uc758 \uae30\ud6c4 \uc644\ud654 \uacc4\ud68d\uc744 \ud1b5\ud574 \ub2ec\uc131\ub41c \uc5f0\ud3c9\uade0 CO2 \ubc30\ucd9c \uac10\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emissions_reduction (initiative_id INT, initiative_name VARCHAR(50), region VARCHAR(50), year_started INT, co2_emissions_reduction DECIMAL(5, 2)); INSERT INTO co2_emissions_reduction (initiative_id, initiative_name, region, year_started, co2_emissions_reduction) VALUES (1, 'Green Energy Transition', 'Southeast Asia', 2015, 7.50), (2, 'Energy Efficiency', 'Southeast Asia', 2016, 8.25), (3, 'Carbon Pricing', 'Southeast Asia', 2017, 9.00);", "output": "SELECT AVG(co2_emissions_reduction) FROM co2_emissions_reduction WHERE region = 'Southeast Asia';"}
{"input": " \uac01 \uc774\ubca4\ud2b8 \uc720\ud615\uc5d0 \ub300\ud55c \uc5f0\uc18d \uc774\ubca4\ud2b8 \uac04\uc758 \ucc38\uc11d\uc790 \uc218 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Events (ID INT, City VARCHAR(50), EventType VARCHAR(50), AttendeeCount INT, EventDate DATE);", "output": "SELECT City, EventType, AttendeeCount, LEAD(AttendeeCount) OVER(PARTITION BY EventType ORDER BY EventDate) - AttendeeCount AS Difference FROM Events;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548\uc758 \ud3c9\uade0 \ubc29\uc0b0 \uacc4\uc57d \ube44\uc6a9\uc744 \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE defense_contracts (contract_id INT, contract_name VARCHAR(100), contract_date DATE, cost INT);", "output": "SELECT AVG(cost) FROM defense_contracts WHERE contract_date >= DATE(NOW()) - INTERVAL 3 MONTH;"}
{"input": " \ub2e8\uc77c \ucc3d\uace0\uc5d0\uc11c \ud558\ub8e8\uc5d0 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud314\ub808\ud2b8 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE warehouse_stats (id INT, warehouse_state VARCHAR(20), pallets INT, handling_date DATE); INSERT INTO warehouse_stats (id, warehouse_state, pallets, handling_date) VALUES (1, 'California', 45, '2022-01-03'), (2, 'Texas', 52, '2022-01-07');", "output": "SELECT MAX(pallets) FROM warehouse_stats;"}
{"input": " \ub274\uc695\uacfc \ud14d\uc0ac\uc2a4\uc758 \uacf5\ub9bd \ub300\ud559 \uc218\uc758 \ucc28\uc774\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE universities (name VARCHAR(255), state VARCHAR(255)); INSERT INTO universities (name, state) VALUES ('University1', 'New York'), ('University2', 'New York'), ('University3', 'Texas');", "output": "SELECT (SELECT COUNT(*) FROM universities WHERE state = 'New York') - (SELECT COUNT(*) FROM universities WHERE state = 'Texas');"}
{"input": " 8\uc6d4 \ub9c8\uc9c0\ub9c9 \uc8fc\uc5d0 \uc5b4\ub5a4 \uc120\ubc15\uc774 \ubc34\ucfe0\ubc84 \ud56d\uad6c\ub97c \ubc29\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ports (id INT, name VARCHAR(255)); CREATE TABLE vessel_movements (id INT, vessel_id INT, departure_port_id INT, arrival_port_id INT, speed DECIMAL(5,2), date DATE); INSERT INTO ports (id, name) VALUES (1, 'Vancouver'); INSERT INTO vessel_movements (id, vessel_id, departure_port_id, arrival_port_id, speed, date) VALUES (1, 101, 1, 2, 15.2, '2022-08-22'), (2, 102, 1, 2, 17.3, '2022-08-25'), (3, 103, 1, 2, 14.8, '2022-08-30'), (4, 104, 3, 1, 18.5, '2022-07-05');", "output": "SELECT DISTINCT vessel_id FROM vessel_movements WHERE arrival_port_id = (SELECT id FROM ports WHERE name = 'Vancouver') AND date BETWEEN '2022-08-22' AND '2022-08-30';"}
{"input": " '\uc544\ud504\ub9ac\uce74'\uc5d0\uc11c '\uc218\uc218'\uc758 \ucd1d '\uc218\ud655\ub7c9'\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crops (id INT PRIMARY KEY, name VARCHAR(50), yield INT, country VARCHAR(50)); INSERT INTO crops (id, name, yield, country) VALUES (1, 'Sorghum', 1500, 'Nigeria'), (2, 'Cassava', 2800, 'DRC'), (3, 'Millet', 900, 'Mali'); CREATE TABLE land (id INT PRIMARY KEY, farm_id INT, acres FLOAT, country VARCHAR(50)); INSERT INTO land (id, farm_id, acres, country) VALUES (1, 1, 120.5, 'Nigeria'), (2, 2, 200.2, 'DRC'), (3, 3, 180.8, 'Mali'); CREATE TABLE production (id INT PRIMARY KEY, land_id INT, crop VARCHAR(50), yield INT); INSERT INTO production (id, land_id, crop, yield) VALUES (1, 1, 'Sorghum', 900), (2, 2, 'Sorghum', 600), (3, 3, 'Sorghum', 750), (4, 1, 'Millet', 400);", "output": "SELECT SUM(p.yield) as total_yield FROM crops c JOIN production p ON c.name = p.crop JOIN land l ON p.land_id = l.id WHERE c.name = 'Sorghum' AND l.country = 'Africa';"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uc0dd\uc0b0\ub41c \ud654\ud559\ubb3c\uc9c8 'A'\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemical_production (date DATE, chemical VARCHAR(10), quantity INT); INSERT INTO chemical_production VALUES ('2021-01-01', 'A', 500), ('2021-01-05', 'A', 600), ('2021-02-10', 'A', 700), ('2021-03-20', 'A', 800);", "output": "SELECT SUM(quantity) FROM chemical_production WHERE chemical = 'A' AND date BETWEEN '2021-01-01' AND '2021-03-31';"}
{"input": " \uc778\ub3c4 \uc18c\uc7ac \uc2a4\ud29c\ub514\uc624\uc5d0\uc11c \uc81c\uc791\ud55c \uc601\ud654\ub97c \uc81c\uc791 \uc5f0\ub3c4\ubcc4\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (title VARCHAR(255), studio VARCHAR(255), production_year INT, rating FLOAT); INSERT INTO movies (title, studio, production_year, rating) VALUES ('Movie13', 'India Studio1', 2018, 7.5), ('Movie14', 'India Studio2', 2019, 8.0);", "output": "SELECT AVG(rating) FROM movies WHERE studio LIKE '%India%' GROUP BY production_year ORDER BY production_year ASC;"}
{"input": " Cardano \ub124\ud2b8\uc6cc\ud06c\uc758 \uac01 \ub514\uc9c0\ud138 \uc790\uc0b0\uc5d0 \ub300\ud55c \ucd1d \uac70\ub798\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists cardano_assets (asset_id INT, asset_name VARCHAR(255), total_txn_volume DECIMAL(18,2)); INSERT INTO cardano_assets (asset_id, asset_name, total_txn_volume) VALUES (1, 'ADA', 150000000), (2, 'USDt', 120000000), (3, 'wADA', 90000000), (4, 'USDC', 80000000), (5, 'BSV', 70000000), (6, 'DOT', 60000000), (7, 'LINK', 50000000), (8, 'BCH', 40000000), (9, 'EOS', 30000000), (10, 'XLM', 20000000);", "output": "SELECT asset_name, SUM(total_txn_volume) as total_volume FROM cardano_assets GROUP BY asset_name;"}
{"input": " \ucd5c\uc18c 2\uac1c\uc6d4 \uc5f0\uc18d \uc608\uc0b0\uc774 \uac10\uc18c\ud55c \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE programs (program_id INT, program_name VARCHAR(50), budget DECIMAL(10, 2), category VARCHAR(50), budget_date DATE);", "output": "SELECT program_id, program_name, budget_date FROM (SELECT program_id, program_name, budget, category, budget_date, COUNT(CASE WHEN budget < LAG(budget) OVER (PARTITION BY program_id ORDER BY budget_date) THEN 1 END) OVER (PARTITION BY program_id ORDER BY budget_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as consecutive_decreases FROM programs) t WHERE consecutive_decreases >= 2;"}
{"input": " \ub274\uc695\uc2dc\uc5d0\uc11c \uc5f0\uac04 \ud3c9\uade0 \uc0b4\uc778 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CrimeStats (city VARCHAR(255), year INT, crimeType VARCHAR(255), totalCrimes INT); INSERT INTO CrimeStats (city, year, crimeType, totalCrimes) VALUES ('New York City', 2019, 'Homicide', 300), ('New York City', 2020, 'Homicide', 350);", "output": "SELECT AVG(totalCrimes) AS avg_homicides FROM CrimeStats WHERE city = 'New York City' AND crimeType = 'Homicide';"}
{"input": " \uac01 \uc8fc\uc758 \ud3c9\uade0 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_health_equity (state VARCHAR(20), metric_score INT); INSERT INTO state_health_equity (state, metric_score) VALUES ('California', 82), ('Texas', 88), ('New York', 85);", "output": "SELECT state, AVG(metric_score) FROM state_health_equity GROUP BY state;"}
{"input": " \ubc30\uc1a1\uc774 2\uac1c \uc774\uc0c1\uc778 \uacbd\uc6b0 Warehouse_id\ubcc4 \ubc30\uc1a1 \uac74\uc218\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (id INT, warehouse_id INT, status VARCHAR(255), shipped_date DATE); INSERT INTO Shipments (id, warehouse_id, status, shipped_date) VALUES (1, 1, 'Shipped', '2022-01-01'); INSERT INTO Shipments (id, warehouse_id, status, shipped_date) VALUES (2, 2, 'Delivered', '2022-01-02'); INSERT INTO Shipments (id, warehouse_id, status, shipped_date) VALUES (3, 1, 'Shipped', '2022-01-03');", "output": "SELECT warehouse_id, COUNT(id) FROM Shipments WHERE status = 'Shipped' GROUP BY warehouse_id HAVING COUNT(id) > 2;"}
{"input": " 2019\ub144 \ud558\ubc18\uae30 \uc2e0\uaddc \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID int, DonationDate date, DonationAmount numeric);", "output": "SELECT SUM(DonationAmount) FROM (SELECT DonationAmount FROM Donors WHERE DonationDate BETWEEN '2019-07-01' AND '2019-12-31' AND DonorID NOT IN (SELECT DonorID FROM Donors WHERE DonationDate < '2019-07-01')) AS NewDonors;"}
{"input": " \uae30\ubd80\ucd1d\uc561 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc0c1\uc704 2\uba85\uc758 \uae30\ubd80\uc790 \uc774\ub984\uacfc \uae30\ubd80\ucd1d\uc561\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(50), total_donation FLOAT); INSERT INTO donors (id, name, total_donation) VALUES (1, 'John Doe', 500.00), (2, 'Jane Smith', 350.00), (3, 'Mike Johnson', 200.00);", "output": "SELECT name, total_donation FROM (SELECT name, total_donation, ROW_NUMBER() OVER (ORDER BY total_donation DESC) as rank FROM donors) as subquery WHERE rank <= 2;"}
{"input": " '\uac74\ubb3c' \uce74\ud14c\uace0\ub9ac\uc5d0 \uc18d\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd5c\ub300 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE InfrastructureProjects (id INT, category VARCHAR(20), cost FLOAT); INSERT INTO InfrastructureProjects (id, category, cost) VALUES (1, 'Roads', 500000), (2, 'Bridges', 750000), (3, 'Buildings', 900000);", "output": "SELECT MAX(cost) FROM InfrastructureProjects WHERE category = 'Buildings';"}
{"input": " '\ubd81\ub3d9\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \ud50c\ub77c\uc2a4\ud2f1\uacfc \uc885\uc774 \uc911 \uc5b4\ub290 \uc7ac\ud65c\uc6a9\ub960\uc774 \ub354 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE recycling_rates (region VARCHAR(255), material VARCHAR(255), recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates (region, material, recycling_rate) VALUES ('North East', 'plastic', 0.35), ('North East', 'paper', 0.45);", "output": "SELECT material, recycling_rate FROM recycling_rates WHERE region = 'North East' AND material IN ('plastic', 'paper') INTERSECT SELECT 'paper' AS material, MAX(recycling_rate) FROM recycling_rates WHERE region = 'North East' UNION ALL SELECT 'plastic' AS material, MAX(recycling_rate) FROM recycling_rates WHERE region = 'North East';"}
{"input": " \ubd81\ud574 \uc0c1\uc704 5\uac1c \uc720\uc815\uc758 \uc77c\uc77c \uc11d\uc720 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_name VARCHAR(50), location VARCHAR(50), oil_production NUMERIC(10,2)); INSERT INTO wells (well_name, location, oil_production) VALUES ('Well A', 'North Sea', 200.5), ('Well B', 'North Sea', 250.3), ('Well C', 'North Sea', 180.9), ('Well D', 'North Sea', 300.1), ('Well E', 'North Sea', 220.7);", "output": "SELECT well_name, oil_production FROM (SELECT well_name, oil_production, ROW_NUMBER() OVER (ORDER BY oil_production DESC) as rank FROM wells WHERE location = 'North Sea') sub WHERE rank <= 5;"}
{"input": " \uac01 \uc8fc\ubcc4 \ud1f4\uc5ed \uad70\uc778\uc758 \ud3c9\uade0 \uace0\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Veterans (State VARCHAR(255), Employment_Rate FLOAT); INSERT INTO Veterans (State, Employment_Rate) VALUES ('California', 65.2), ('Texas', 70.5), ('New York', 68.7), ('Florida', 72.1), ('Illinois', 66.9);", "output": "SELECT State, AVG(Employment_Rate) FROM Veterans GROUP BY State;"}
{"input": " \uc791\ub144\uc5d0 5\ud68c \uc774\uc0c1\uc758 \ub18d\uad6c \uacbd\uae30 \ud2f0\ucf13\uc744 \uad6c\ub9e4\ud55c \ud32c\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE fans (id INT, name VARCHAR(100), gender VARCHAR(10), city VARCHAR(50)); CREATE TABLE tickets (id INT, fan_id INT, game_id INT, purchase_date DATE); CREATE TABLE games (id INT, sport VARCHAR(50), team VARCHAR(50), date DATE);", "output": "SELECT f.name FROM fans f INNER JOIN tickets t ON f.id = t.fan_id INNER JOIN games g ON t.game_id = g.id WHERE g.sport = 'Basketball' AND g.date > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY f.id HAVING COUNT(t.id) > 5;"}
{"input": " \ub9ac\uadf8\uc5d0\uc11c \uac00\uc7a5 \uae34 \uacbd\ub825\uc744 \uac00\uc9c4 \uc120\uc218\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE players (id INT, name TEXT, career_length INT); INSERT INTO players (id, name, career_length) VALUES (1, 'John Doe', 12), (2, 'Jane Smith', 8);", "output": "SELECT name FROM (SELECT name, RANK() OVER (ORDER BY career_length DESC) as rank FROM players) subquery WHERE rank = 1;"}
{"input": " 'Van Gogh Alive' \uc804\uc2dc\ud68c\uc758 \uc628\ub77c\uc778 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ticket_sales (id INT, exhibition_name VARCHAR(50), ticket_price DECIMAL(5,2), sale_date DATE); INSERT INTO ticket_sales (id, exhibition_name, ticket_price, sale_date) VALUES (1, 'Van Gogh Alive', 25.00, '2022-03-01'); INSERT INTO ticket_sales (id, exhibition_name, ticket_price, sale_date) VALUES (2, 'Van Gogh Alive', 22.00, '2022-03-15');", "output": "SELECT SUM(ticket_price) FROM ticket_sales WHERE exhibition_name = 'Van Gogh Alive';"}
{"input": " 2020\ub144\ubd80\ud130 2021\ub144\uae4c\uc9c0 \ud638\ud154 \uc810\uc720\uc728\uc758 \ubc31\ubd84\uc728 \ubcc0\ud654\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotel_occupancy(occupancy_id INT, year INT, occupancy DECIMAL);", "output": "SELECT (occupancy_2021 - occupancy_2020) / occupancy_2020 * 100 AS pct_change FROM (SELECT occupancy AS occupancy_2020 FROM hotel_occupancy WHERE year = 2020) subquery1 CROSS JOIN (SELECT occupancy AS occupancy_2021 FROM hotel_occupancy WHERE year = 2021) subquery2;"}
{"input": " 2015\ub144 \uc774\uc804\uc5d0 \ubd81\ubbf8\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uae30\ud6c4 \uc644\ud654 \ud504\ub85c\uc81d\ud2b8\uac00 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE climate_project (project_id INT, project_name TEXT, project_type TEXT, start_date DATE); INSERT INTO climate_project (project_id, project_name, project_type, start_date) VALUES (1, 'North American Wind Farm', 'Mitigation', '2012-01-01');", "output": "SELECT COUNT(*) FROM climate_project WHERE project_type = 'Mitigation' AND start_date < DATEADD(year, -3, '2015-01-01');"}
{"input": "\ubaa8\ub4e0 \uae30\ud6c4 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8\uc640 \ud574\ub2f9 \uc644\ub8cc \uc5f0\ub3c4\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE climate_adaptation_projects (project_id INT, project_name TEXT, completion_year INT, project_type TEXT); INSERT INTO climate_adaptation_projects (project_id, project_name, completion_year, project_type) VALUES (16, 'Coastal Erosion Protection P', 2018, 'adaptation'), (17, 'Water Management Q', 2019, 'adaptation'), (18, 'Disaster Risk Reduction R', 2020, 'adaptation'), (19, 'Climate Resilient Agriculture S', 2021, 'adaptation');", "output": "SELECT project_name, completion_year FROM climate_adaptation_projects WHERE project_type = 'adaptation';"}
{"input": " '\uae08\uc735' \uc2a4\ud0a4\ub9c8\uc758 \uac01 \uc81c\ud488 \ub77c\uc778\uc5d0 \ub300\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE finance.revenue (product_line VARCHAR(50), month INT, year INT, revenue DECIMAL(10,2)); INSERT INTO finance.revenue (product_line, month, year, revenue) VALUES ('Product Line A', 1, 2022, 12000.00), ('Product Line A', 2, 2022, 24000.00), ('Product Line B', 1, 2022, 18000.00), ('Product Line B', 2, 2022, 30000.00);", "output": "SELECT product_line, SUM(revenue) as total_revenue FROM finance.revenue GROUP BY product_line;"}
{"input": " \ubb38\ud654 \uc5ed\ub7c9 \ud6c8\ub828\uc744 \ubc1b\uc740 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uac00 10\uba85 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE cultural_competency_trainings (id INT, worker_id INT, type VARCHAR(50), date DATE); INSERT INTO cultural_competency_trainings (id, worker_id, type, date) VALUES (1, 1, 'Cultural Sensitivity', '2022-01-01'), (2, 3, 'Language Access', '2022-02-15'); CREATE TABLE community_health_workers (id INT, name VARCHAR(50), ethnicity VARCHAR(50), certification BOOLEAN); INSERT INTO community_health_workers (id, name, ethnicity, certification) VALUES (1, 'Charlene', 'Hispanic', true), (2, 'Derek', 'Asian', false), (3, 'Fiona', 'Native American', true), (4, 'George', 'African', true), (5, 'Hannah', 'Caucasian', true);", "output": "SELECT region, COUNT(*) FROM (SELECT community_health_workers.id AS worker_id, 'Region1' AS region FROM community_health_workers INNER JOIN cultural_competency_trainings ON community_health_workers.id = cultural_competency_trainings.worker_id WHERE cultural_competency_trainings.type = 'Cultural Sensitivity' UNION ALL SELECT community_health_workers.id AS worker_id, 'Region2' AS region FROM community_health_workers INNER JOIN cultural_competency_trainings ON community_health_workers.id = cultural_competency_trainings.worker_id WHERE cultural_competency_trainings.type = 'Language Access') tmp_table GROUP BY region HAVING COUNT(*) > 10;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc640 \ub0a8\ubbf8\uc5d0\uc11c\ub294 \uba87 \uba85\uc758 \ud50c\ub808\uc774\uc5b4\uac00 VR \uae30\uc220\uc744 \ucc44\ud0dd\ud588\ub098\uc694?", "context": "CREATE TABLE players (player_id INT, age INT, platform VARCHAR(20), region VARCHAR(50)); INSERT INTO players (player_id, age, platform, region) VALUES (1, 25, 'PC', 'North America'), (2, 30, 'PSVR', 'Europe'), (3, 22, 'Oculus', 'Asia'), (4, 28, 'PC', 'Asia'), (5, 34, 'PSVR', 'South America'), (6, 32, 'Oculus', 'Africa'); CREATE TABLE vr_tech (player_id INT, vr_platform VARCHAR(20)); INSERT INTO vr_tech (player_id, vr_platform) VALUES (1, 'Oculus'), (3, 'PSVR'), (5, 'PSVR'), (6, 'Oculus');", "output": "SELECT 'Africa' AS continent, COUNT(DISTINCT p.player_id) AS num_players FROM players p JOIN vr_tech v ON p.player_id = v.player_id WHERE p.region = 'Africa' UNION ALL SELECT 'South America' AS continent, COUNT(DISTINCT p.player_id) AS num_players FROM players p JOIN vr_tech v ON p.player_id = v.player_id WHERE p.region = 'South America';"}
{"input": "\ub3c5\uc77c \ub0b4 \ud654\ud559 \uc81c\ud488\uc758 \ud3c9\uade0 \ucd1d \ud310\ub9e4\ub7c9\uc744 \ubd84\uae30\ubcc4\ub85c \uc624\ub984\ucc28\uc21c\uc73c\ub85c \ub098\ub204\uc5b4 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE product_sales (product_id INT, product_name TEXT, country TEXT, total_sales FLOAT, sale_quarter INT); INSERT INTO product_sales (product_id, product_name, country, total_sales, sale_quarter) VALUES (1, 'Product I', 'Germany', 25000, 1), (2, 'Product J', 'Germany', 30000, 2), (3, 'Product K', 'Germany', 20000, 3), (4, 'Product L', 'Germany', 28000, 4);", "output": "SELECT sale_quarter, AVG(total_sales) as avg_total_sales, RANK() OVER (PARTITION BY country ORDER BY AVG(total_sales)) as rank FROM product_sales WHERE country = 'Germany' GROUP BY sale_quarter ORDER BY rank;"}
{"input": " \uc544\ud2f0\uc2a4\ud2b8 '\uc624\ud0a4\ud504'\uc758 \uc774\ubca4\ud2b8 \ucc38\uc11d\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, ArtistName VARCHAR(255)); INSERT INTO Artists (ArtistID, ArtistName) VALUES (1, 'O''Keeffe'); CREATE TABLE Events (EventID INT PRIMARY KEY, EventName VARCHAR(255), Attendance INT, ArtistID INT, FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID)); INSERT INTO Events (EventID, EventName, Attendance, ArtistID) VALUES (1, 'Flowers Exhibit', 600, 1);", "output": "SELECT AVG(Audience.Age) FROM Audience INNER JOIN Events ON Audience.EventID = Events.EventID INNER JOIN Artists ON Events.ArtistID = Artists.ArtistID WHERE Artists.ArtistName = 'O''Keeffe';"}
{"input": " \ucd5c\uadfc \uc0dd\uc0b0\ub41c 5\uac1c \uc81c\ud488\uc758 \ud658\uacbd \uc601\ud5a5 \uc810\uc218 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (product_id INT, environmental_impact_score FLOAT, production_date DATE); INSERT INTO environmental_impact (product_id, environmental_impact_score, production_date) VALUES (1, 5.2, '2023-03-01'), (2, 6.1, '2023-03-02'), (3, 4.9, '2023-03-03');", "output": "SELECT environmental_impact_score, LAG(environmental_impact_score, 1) OVER (ORDER BY production_date) AS prev_impact_score FROM environmental_impact WHERE product_id >= 4;"}
{"input": " \uc778\ub3c4 \uc0ac\uc6a9\uc790\ub4e4 \uc0ac\uc774\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc7a5\ub974\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (id INT, name TEXT, country TEXT);CREATE TABLE user_genre_preferences (user_id INT, genre_id INT);CREATE TABLE genres (id INT, name TEXT); INSERT INTO users (id, name, country) VALUES (1, 'User C', 'India'), (2, 'User D', 'Australia'); INSERT INTO user_genre_preferences (user_id, genre_id) VALUES (1, 4), (1, 5), (2, 6); INSERT INTO genres (id, name) VALUES (4, 'Folk'), (5, 'Classical'), (6, 'Country');", "output": "SELECT genres.name, COUNT(user_genre_preferences.user_id) AS popularity FROM genres JOIN user_genre_preferences ON genres.id = user_genre_preferences.genre_id JOIN users ON user_genre_preferences.user_id = users.id WHERE users.country = 'India' GROUP BY genres.name ORDER BY popularity DESC LIMIT 1;"}
{"input": " \ub3d9\ub0a8\uc544\uc2dc\uc544\uc758 \ub9f9\uadf8\ub85c\ube0c \uc232\uc5d0\uc11c \uc218\ud655\ub41c \ubaa9\uc7ac\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mangrove_forests (id INT, name VARCHAR(255), country VARCHAR(255), volume DECIMAL(10,2)); INSERT INTO mangrove_forests (id, name, country, volume) VALUES (1, 'Mangrove Forest 1', 'Indonesia', 2000), (2, 'Mangrove Forest 2', 'Indonesia', 3000), (3, 'Mangrove Forest 3', 'Thailand', 1000);", "output": "SELECT SUM(volume) FROM mangrove_forests WHERE country = 'Indonesia';"}
{"input": " 2025\ub144 \uc774\ud6c4 \ud2b9\ud5c8\uac00 \ub9cc\ub8cc\ub418\ub294 \uc57d\ud488\uc744 \ubcf4\uc720\ud55c \uae30\uc5c5\uc758 \ucd1d R&D \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc778\uac00?", "context": "CREATE TABLE company_drugs (id INT PRIMARY KEY, company VARCHAR(50), drug_name VARCHAR(50), launch_date DATE); CREATE TABLE rd_expenditures (id INT PRIMARY KEY, company VARCHAR(50), year INT, amount DECIMAL(10,2)); CREATE TABLE drug_patents (id INT PRIMARY KEY, drug_name VARCHAR(50), patent_expiration_date DATE);", "output": "SELECT SUM(re.amount) FROM rd_expenditures re JOIN company_drugs cd ON re.company = cd.company JOIN drug_patents dp ON cd.drug_name = dp.drug_name WHERE dp.patent_expiration_date >= '2025-01-01';"}
{"input": "\uc2a4\ub9c8\ud2b8\uc2dc\ud2f0\ubcc4 \uc6d4\ubcc4 \ucd1d \ud0c4\uc18c \ubc30\ucd9c\ub7c9\uacfc \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE city_data (id INT, city VARCHAR(255), type VARCHAR(255), value FLOAT, timestamp TIMESTAMP); INSERT INTO city_data (id, city, type, value, timestamp) VALUES (1, 'EcoCity', 'Carbon Emissions', 15000, '2022-04-01 10:00:00'), (2, 'EcoCity', 'Energy Consumption', 1000000, '2022-04-01 10:00:00');", "output": "SELECT city, type, SUM(value) as total, DATE_FORMAT(timestamp, '%%Y-%%m') as month FROM city_data GROUP BY city, type, month;"}
{"input": " \ubca0\ud2b8\ub0a8 \uac00\ub3cc\ub9ac\ub284 \uacf5\uae09\ub9dd\uc5d0 \ub300\ud55c rare_earth_supply_chain \uae30\ub85d \uc0ad\uc81c", "context": "CREATE TABLE rare_earth_supply_chain ( id INT PRIMARY KEY, year INT, country VARCHAR(255), element VARCHAR(255), supplier_name VARCHAR(255), transparency_score INT);", "output": "WITH removed_record AS (DELETE FROM rare_earth_supply_chain WHERE year = 2020 AND country = 'Vietnam' AND element = 'Gadolinium') SELECT * FROM rare_earth_supply_chain WHERE year = 2020 AND country = 'Vietnam' AND element = 'Gadolinium';"}
{"input": " \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100), country VARCHAR(50), total_sales BIGINT);", "output": "SELECT country, SUM(total_sales) AS total_sales FROM concert_ticket_sales GROUP BY country ORDER BY total_sales DESC LIMIT 3;"}
{"input": " '\uc54c\ub798\uc2a4\uce74 \ub18d\ucd0c'\uc758 \ube44\uc6a9 \uc0ac\ubd84\uc704\uc218\ub2f9 \ub18d\uc5c5 \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE AgriculturalProjects (id INT, name VARCHAR(50), cost FLOAT, start_date DATE, end_date DATE, region VARCHAR(50)); INSERT INTO AgriculturalProjects (id, name, cost, start_date, end_date, region) VALUES (1, 'Irrigation System', 50000, '2021-01-01', '2021-12-31', 'Rural Alabama'); INSERT INTO AgriculturalProjects (id, name, cost, start_date, end_date, region) VALUES (2, 'Greenhouse Construction', 80000, '2021-04-01', '2021-12-31', 'Rural Alaska');", "output": "SELECT NTILE(4) OVER (ORDER BY cost) as Quartile, COUNT(name) as Count, MIN(name) as Name FROM AgriculturalProjects WHERE region = 'Rural Alaska' GROUP BY Quartile;"}
{"input": "\uc804\uccb4 \uc720\ubb3c\uacfc \ube44\uad50\ud558\uc5ec '\ub3c4\uc790\uae30' \uce74\ud14c\uace0\ub9ac\uc758 \uc720\ubb3c\uc774 \ucc28\uc9c0\ud558\ub294 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE artifacts_categories_count (artifact_name VARCHAR(255), category VARCHAR(255), artifact_count INT); INSERT INTO artifacts_categories_count (artifact_name, category, artifact_count) VALUES ('Pottery', 'Ceramics', 20), ('Bronze Sword', 'Metalwork', 15), ('Clay Figurine', 'Ceramics', 12), ('Copper Pendant', 'Metalwork', 35);", "output": "SELECT 100.0 * SUM(CASE WHEN category = 'Ceramics' THEN artifact_count ELSE 0 END) / SUM(artifact_count) OVER () AS ceramics_percentage FROM artifacts_categories_count;"}
{"input": "\ub300\uc11c\uc591\uacfc \ud0dc\ud3c9\uc591\uc5d0 \uc788\ub294 \ud574\uc591\uc0dd\ubb3c \uc5f0\uad6c \uae30\uc9c0\uc758 \ucd1d \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE atlantic_ocean (id INT, station TEXT); CREATE TABLE pacific_ocean (id INT, station TEXT); INSERT INTO atlantic_ocean (id, station) VALUES (1, 'Research Station A'), (2, 'Research Station B'); INSERT INTO pacific_ocean (id, station) VALUES (1, 'Research Station C'), (2, 'Research Station D');", "output": "SELECT COUNT(*) FROM (SELECT * FROM atlantic_ocean UNION ALL SELECT * FROM pacific_ocean) AS ocean_stations;"}
{"input": "\ud2b9\uc815 \uad6d\uac00\uc758 \uac01 \uc6b0\ubb3c\uc5d0 \ub300\ud55c \ucd1d \uc0dd\uc0b0\ub7c9\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE wells (well_id INT, country VARCHAR(50), production INT); INSERT INTO wells (well_id, country, production) VALUES (1, 'USA', 1000000), (2, 'USA', 2000000), (3, 'Canada', 1500000);", "output": "SELECT well_id, country, production, ROUND(100.0 * production / (SELECT SUM(production) FROM wells w2 WHERE w2.country = w.country) , 2) as pct_of_total FROM wells w;"}
{"input": " 'EU' \uc9c0\uc5ed\uc5d0\uc11c '#music' \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uc5d0 \ucc38\uc5ec\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub294 \ucd1d \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE comments (id INT, post_id INT, user_id INT, text VARCHAR(100)); CREATE TABLE users (id INT, region VARCHAR(10)); INSERT INTO comments (id, post_id, user_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3); INSERT INTO users (id, region) VALUES (1, 'EU'), (2, 'EU'), (3, 'APAC'); INSERT INTO hashtags (id, post_id, tag) VALUES (1, 1, '#music'), (2, 2, '#music');", "output": "SELECT COUNT(DISTINCT comments.user_id) FROM comments JOIN hashtags ON hashtags.post_id = comments.post_id JOIN users ON comments.user_id = users.id WHERE users.region = 'EU' AND hashtags.tag = '#music';"}
{"input": " 2020\ub144 '2\uc6d4'\uc5d0 \uc9c0\uc5ed \uc0ac\ud68c \uce58\uc548 \ud589\uc0ac\uac00 5\uac1c \ubbf8\ub9cc\uc778 \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE community_policing_events (id INT, city VARCHAR(20), event_date DATE); INSERT INTO community_policing_events (id, city, event_date) VALUES (1, 'Chicago', '2020-01-05'), (2, 'Chicago', '2020-01-10'), (3, 'New York', '2020-02-15'), (4, 'New York', '2020-02-16'), (5, 'New York', '2020-02-17'), (6, 'Los Angeles', '2020-02-18');", "output": "SELECT city FROM community_policing_events WHERE MONTH(event_date) = 2 AND YEAR(event_date) = 2020 GROUP BY city HAVING COUNT(*) < 5;"}
{"input": "\ubd81\uadf9\uc758 \ubaa8\ub4e0 \ud574\uc591 \uc5f0\uad6c \uae30\uc9c0\ub97c \uad00\ub828 \uad6d\uac00 \ubc0f \uad00\ucc30\ub41c \uc885\uc758 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Arctic_Stations (station_name text, country text); CREATE TABLE Species_Observations (station_name text, species_id integer); CREATE TABLE Species (species_id integer, species_name text); INSERT INTO Arctic_Stations (station_name, country) VALUES ('Station A', 'Canada'), ('Station B', 'Greenland'), ('Station C', 'Norway'); INSERT INTO Species_Observations (station_name, species_id) VALUES ('Station A', 101), ('Station A', 102), ('Station B', 103), ('Station C', 101), ('Station C', 104); INSERT INTO Species (species_id, species_name) VALUES (101, 'Polar Bear'), (102, 'Narwhal'), (103, 'Greenland Shark'), (104, 'Arctic Fox');", "output": "SELECT Arctic_Stations.station_name, Arctic_Stations.country, COUNT(DISTINCT Species.species_id) AS number_of_species FROM Arctic_Stations LEFT JOIN Species_Observations ON Arctic_Stations.station_name = Species_Observations.station_name LEFT JOIN Species ON Species_Observations.species_id = Species.species_id WHERE Arctic_Stations.station_name IN ('Station A', 'Station B', 'Station C') GROUP BY Arctic_Stations.station_name, Arctic_Stations.country;"}
{"input": " '\ud799\ud569' \uc7a5\ub974\uc5d0\uc11c \uc2a4\ud2b8\ub9bc\ub2f9 \ud3c9\uade0 \uc218\uc775\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uc2a4\ud2b8\ub9ac\ubc0d \ud50c\ub7ab\ud3fc\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Platforms (PlatformId INT, PlatformName VARCHAR(255), Genre VARCHAR(255), AvgRevenuePerStream DECIMAL(10,2)); INSERT INTO Platforms (PlatformId, PlatformName, Genre, AvgRevenuePerStream) VALUES (1, 'Spotify', 'Hip Hop', 0.005), (2, 'Apple Music', 'Hip Hop', 0.007), (3, 'Tidal', 'Hip Hop', 0.01), (4, 'Deezer', 'Hip Hop', 0.006), (5, 'Pandora', 'Hip Hop', 0.004);", "output": "SELECT PlatformName, AvgRevenuePerStream FROM Platforms WHERE Genre = 'Hip Hop' ORDER BY AvgRevenuePerStream DESC LIMIT 5;"}
{"input": " \uc815\uc2e0 \uac74\uac15 \uc639\ud638\uc5d0 \ub300\ud55c \uacc4\uc815\uc744 \ud314\ub85c\uc6b0\ud588\uc9c0\ub9cc \ub9c8\uc74c\ucc59\uae40\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uc5d0\ub294 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc758 \ub3c5\ud2b9\ud55c \ucde8\ubbf8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_activity (user_id INT, activity_type VARCHAR(50), hobby VARCHAR(50)); INSERT INTO user_activity (user_id, activity_type, hobby) VALUES (1, 'followed_account', 'yoga'), (2, 'engaged_post', 'cooking'), (3, 'followed_account', 'hiking'), (4, 'engaged_post', 'painting'), (5, 'followed_account', 'meditation'), (6, 'engaged_post', 'gardening');", "output": "SELECT hobby FROM user_activity WHERE activity_type = 'followed_account' AND user_id NOT IN (SELECT user_id FROM user_activity WHERE activity_type = 'engaged_post' AND post_topic = 'mindfulness');"}
{"input": "\ud2b9\uc815 \uae30\uac04 \ub3d9\uc548 \uac01 \ubc30\uc1a1 \ubc29\ubc95\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uacfc \uac01 \ubc29\ubc95\ubcc4 \ubc30\uc1a1 \uac74\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE shipments (id INT, shipping_method TEXT, shipped_date DATE, revenue FLOAT);", "output": "SELECT shipping_method, SUM(revenue) as total_revenue, COUNT(*) as total_shipments FROM shipments WHERE shipped_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY shipping_method;"}
{"input": " \uc8fc\uac70\uc6a9 \ubc0f \uc0c1\uc5c5\uc6a9 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ubaa8\ub450 \ucc38\uc5ec\ud55c \uac74\uc124 \ub178\ub3d9\uc790\uc758 \uc774\ub984\uacfc \ucd1d \ub178\ub3d9 \uc2dc\uac04\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE construction_workers (worker_id INT, name TEXT); CREATE TABLE project_types (project_id INT, project_type TEXT); CREATE TABLE worker_projects (worker_id INT, project_id INT, total_labor_hours INT); INSERT INTO construction_workers (worker_id, name) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Maria Garcia'); INSERT INTO project_types (project_id, project_type) VALUES (1, 'Residential'), (2, 'Commercial'), (3, 'Sustainable'); INSERT INTO worker_projects (worker_id, project_id, total_labor_hours) VALUES (1, 1, 500), (1, 2, 300), (2, 2, 600), (2, 3, 400), (3, 1, 700), (3, 3, 500);", "output": "SELECT construction_workers.name, SUM(worker_projects.total_labor_hours) FROM construction_workers INNER JOIN worker_projects ON construction_workers.worker_id = worker_projects.worker_id INNER JOIN project_types ON worker_projects.project_id = project_types.project_id WHERE project_types.project_type IN ('Residential', 'Commercial') GROUP BY construction_workers.name HAVING COUNT(DISTINCT project_types.project_type) = 2;"}
{"input": "\uae68\ub057\ud55c \ubb3c' \uce74\ud14c\uace0\ub9ac\uc758 \uacc4\ud68d\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc704\ud5d8 \ud3c9\uac00 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE initiatives (id INT, category VARCHAR(50), risk_assessment FLOAT); INSERT INTO initiatives (id, category, risk_assessment) VALUES (1, 'clean water', 65.0), (2, 'gender equality', 72.5), (3, 'clean water', 70.0), (4, 'affordable housing', 75.2);", "output": "SELECT AVG(risk_assessment) FROM initiatives WHERE category = 'clean water';"}
{"input": " \uc62c\ud574 '\ubbf8\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c \uc2e4\uc2dc\ub41c \uc0ac\uc774\ubc84\ubcf4\uc548 \uad50\uc721\uc758 \ud3c9\uade0 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE trainings (region TEXT, training_date DATE); INSERT INTO trainings (region, training_date) VALUES ('Europe', '2023-01-01'); INSERT INTO trainings (region, training_date) VALUES ('Americas', '2023-02-01');", "output": "SELECT AVG(training_count) FROM (SELECT COUNT(*) AS training_count FROM trainings WHERE region = 'Americas' AND EXTRACT(YEAR FROM training_date) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY region) subquery;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ubc1b\uc740 \ud587\ube5b\uc758 \ucd1d\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uc791\ubb3c\uc758 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE crop_sunlight (crop_id INT, crop_type VARCHAR(50), timestamp TIMESTAMP, sunlight INT);", "output": "SELECT crop_type, SUM(sunlight) AS total_sunlight, RANK() OVER (ORDER BY SUM(sunlight) DESC) AS crop_rank FROM crop_sunlight WHERE timestamp >= NOW() - INTERVAL '1 month' GROUP BY crop_type;"}
{"input": " \uc9c0\ub09c 3\ub144\uac04 \uad6d\uac00 \uc548\ubcf4 \uc608\uc0b0\uc744 \ucd5c\uace0\ubd80\ud130 \ucd5c\uc800\uae4c\uc9c0 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE budgets (budget_id INT, year INT, region_id INT, amount INT); INSERT INTO budgets (budget_id, year, region_id, amount) VALUES (1, 2019, 1, 500), (2, 2020, 1, 600), (3, 2021, 1, 700), (4, 2019, 2, 400), (5, 2020, 2, 450), (6, 2021, 2, 500);", "output": "SELECT year, region_id, amount, RANK() OVER (PARTITION BY year ORDER BY amount DESC) as ranking FROM budgets ORDER BY year, ranking;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uac01 \uad11\uc0b0\uc758 CO2 \ubc30\ucd9c\ub7c9 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (id INT, mine_id INT, impact_type VARCHAR(50), value INT, PRIMARY KEY (id), FOREIGN KEY (mine_id) REFERENCES mines(id)); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (1, 1, 'CO2 Emissions', 1200); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (2, 1, 'CO2 Emissions', 1250); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (3, 2, 'CO2 Emissions', 2000); INSERT INTO environmental_impact (id, mine_id, impact_type, value) VALUES (4, 2, 'CO2 Emissions', 2100); CREATE TABLE mines (id INT, name VARCHAR(50), location VARCHAR(50), annual_production INT, PRIMARY KEY (id)); INSERT INTO mines (id, name, location, annual_production) VALUES (1, 'Golden Mine', 'California', 15000); INSERT INTO mines (id, name, location, annual_production) VALUES (2, 'Silver Mine', 'Nevada', 22000);", "output": "SELECT mine_id, impact_type, value, LAG(value) OVER (PARTITION BY mine_id ORDER BY id) as previous_value FROM environmental_impact;"}
{"input": " 2020\ub144 \ub274\uc695\uc2dc \ub300\uc911\uad50\ud1b5 \uc774\uc6a9 \ud69f\uc218\ub294 \ucd1d \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE public_trips (trip_id INT, trip_date DATE, trip_city VARCHAR(50)); INSERT INTO public_trips (trip_id, trip_date, trip_city) VALUES (1, '2020-01-01', 'New York City'), (2, '2020-01-02', 'New York City');", "output": "SELECT SUM(trips) FROM (SELECT COUNT(*) AS trips FROM public_trips WHERE trip_city = 'New York City' AND trip_date BETWEEN '2020-01-01' AND '2020-12-31' GROUP BY EXTRACT(MONTH FROM trip_date)) AS subquery;"}
{"input": " \uc9c8\uc0b0\uc5fc\uc5d0 \ub300\ud55c \uc77c\uc77c \ud3c9\uade0 \uc624\uc5fc\ubb3c\uc9c8 \uc81c\uac70\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \ubbf8\uad6d \ub0b4 \uc0c1\uc704 5\uac1c \ud3d0\uc218 \ucc98\ub9ac\uc7a5\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE wastewater_plants (plant_id INT, plant_name VARCHAR(50), location VARCHAR(50), pollutant_nitrate FLOAT, daily_avg FLOAT); INSERT INTO wastewater_plants (plant_id, plant_name, location, pollutant_nitrate, daily_avg) VALUES (1, 'Plant A', 'NY', 80, 1000), (2, 'Plant B', 'CA', 60, 1200);", "output": "SELECT plant_name, daily_avg FROM (SELECT plant_name, daily_avg, RANK() OVER (PARTITION BY plant_name ORDER BY pollutant_nitrate DESC) rnk FROM wastewater_plants) t WHERE rnk = 1;"}
{"input": " \uac01 \ub3c4\uc2dc\ubcc4 \uc791\uc5c5\uc7a5\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \uc548\uc804 \ubb38\uc81c\uc758 \ucd5c\ub300 \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workplaces (id INT, city VARCHAR(10), safety_issues INT); INSERT INTO workplaces (id, city, safety_issues) VALUES (1, 'New York', 10), (2, 'Los Angeles', 5), (3, 'Houston', 15), (4, 'Miami', 8); CREATE TABLE cities (id INT, city VARCHAR(10)); INSERT INTO cities (id, city) VALUES (1, 'New York'), (2, 'Los Angeles'), (3, 'Houston'), (4, 'Miami');", "output": "SELECT w.city, MAX(w.safety_issues) OVER (PARTITION BY w.city) AS max_safety_issues FROM workplaces w INNER JOIN cities c ON w.city = c.city;"}
{"input": "2022\ub144 \uc624\uc138\uc544\ub2c8\uc544\uc640 \ub0a8\ubbf8\uc5d0\uc11c \uc720\uae30\ub18d\ubc95\uc744 \uc2e4\ucc9c\ud558\ub294 \ub18d\ubbfc\uc758 \uc218\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Organic_Farming (Farmer_ID INT, Region VARCHAR(20), Farming_Method VARCHAR(20), Year INT); INSERT INTO Organic_Farming (Farmer_ID, Region, Farming_Method, Year) VALUES (901, 'Oceania', 'Organic', 2022), (902, 'South America', 'Organic', 2022);", "output": "SELECT COUNT(DISTINCT Farmer_ID) FROM Organic_Farming WHERE Region IN ('Oceania', 'South America') AND Year = 2022 AND Farming_Method = 'Organic';"}
{"input": " \uc6b0\uc8fc \uc784\ubb34 \uc218\ud589 \uae30\uac04\uc774 \uac00\uc7a5 \uae34 \uc6b0\uc8fc\uc120\uc740 \uc5b4\ub290 \uac83\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft (SpacecraftID INT, Name VARCHAR(50), Manufacturer VARCHAR(50), Duration INT); INSERT INTO Spacecraft (SpacecraftID, Name, Manufacturer, Duration) VALUES (1, 'Voyager 1', 'NASA', 43559), (2, 'Voyager 2', 'NASA', 42087), (3, 'ISS', 'NASA', 960839);", "output": "SELECT s.Name FROM Spacecraft s WHERE s.Duration = (SELECT MAX(Duration) FROM Spacecraft);"}
{"input": " \ud544\ub9ac\ud540 \ub0b4 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donation_amount DECIMAL(10,2), donation_date DATE, program VARCHAR(50), country VARCHAR(50)); CREATE TABLE Volunteers (id INT, volunteer_name VARCHAR(50), program VARCHAR(50), country VARCHAR(50)); INSERT INTO Donations (id, donation_amount, donation_date, program, country) VALUES (1, 100.00, '2021-04-01', 'Disaster Relief', 'Philippines'); INSERT INTO Donations (id, donation_amount, donation_date, program, country) VALUES (2, 200.00, '2021-04-02', 'Environment', 'Philippines'); INSERT INTO Volunteers (id, volunteer_name, program, country) VALUES (1, 'Jose Santos', 'Disaster Relief', 'Philippines'); INSERT INTO Volunteers (id, volunteer_name, program, country) VALUES (2, 'Maria Gonzales', 'Environment', 'Philippines');", "output": "SELECT p.program, COUNT(DISTINCT v.volunteer_name) as num_volunteers, SUM(d.donation_amount) as total_donations FROM Donations d INNER JOIN Volunteers v ON d.program = v.program INNER JOIN Programs p ON d.program = p.program WHERE d.country = 'Philippines' GROUP BY p.program;"}
{"input": " \uae4a\uc740 \uc6b0\uc8fc\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc6b0\uc8fc\uc120\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \uc6b0\uc8fc \uae30\uad00\uc744 \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE Spacecrafts (Id INT, Agency VARCHAR(50), Mission VARCHAR(50), LaunchYear INT, Status VARCHAR(10)); INSERT INTO Spacecrafts (Id, Agency, Mission, LaunchYear, Status) VALUES (1, 'NASA', 'Voyager 1', 1977, 'Active'), (2, 'NASA', 'Voyager 2', 1977, 'Active'), (3, 'NASA', 'New Horizons', 2006, 'Active'), (4, 'ESA', 'Cassini-Huygens', 1997, 'Inactive'), (5, 'JAXA', 'Hayabusa', 2003, 'Inactive'), (6, 'JAXA', 'Hayabusa2', 2014, 'Active');", "output": "SELECT Agency, COUNT(*) as DeepSpaceMissions FROM Spacecrafts WHERE Status = 'Active' GROUP BY Agency ORDER BY DeepSpaceMissions DESC;"}
{"input": " '\uc11c\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uc778\uad6c\uac00 500,000\uba85 \uc774\uc0c1\uc778 \uac00\ubb44 \uc601\ud5a5 \uc9c0\uc5ed\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE drought_impact (area VARCHAR(255), region VARCHAR(255), population INT); INSERT INTO drought_impact (area, region, population) VALUES ('City A', 'West', 700000), ('City B', 'West', 600000), ('City C', 'West', 550000), ('County X', 'West', 900000), ('County Y', 'West', 850000), ('County Z', 'West', 750000);", "output": "SELECT area FROM drought_impact WHERE region = 'West' AND population > 500000;"}
{"input": " \ub9e4\uc6d4 '\ud0dc\ud3c9\uc591'\uc758 \ucd5c\uace0 \uae30\uc628\uacfc \ucd5c\uc800 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pacific_ocean_temperature (date DATE, temperature FLOAT, ocean VARCHAR(50));", "output": "SELECT DATE_FORMAT(date, '%Y-%m') AS month, MAX(temperature), MIN(temperature) FROM pacific_ocean_temperature WHERE ocean = 'Pacific Ocean' GROUP BY month;"}
{"input": " \ubb38\ud654\uc801 \uc5ed\ub7c9 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc8fc\uc640 \uac00\uc7a5 \ub0ae\uc740 \uc8fc\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_cultural_competency (state VARCHAR(2), score INT); INSERT INTO state_cultural_competency (state, score) VALUES ('CA', 95), ('NY', 85), ('TX', 90);", "output": "SELECT state, MAX(score) AS highest_score, MIN(score) AS lowest_score FROM state_cultural_competency GROUP BY state;"}
{"input": " \uac01 \uc9c0\uc5ed\ubcc4 \ucd1d \ubc94\uc8c4 \uc0ac\uac74 \uc218 \ubc0f \uae34\uae09 \uc804\ud654 \uac74\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE districts (did INT, district_name VARCHAR(255)); INSERT INTO districts (did, district_name) VALUES (1, 'Downtown'), (2, 'Uptown'), (3, 'Harbor'); CREATE TABLE crime_incidents (incident_id INT, did INT, incident_type VARCHAR(255), incident_date DATE); INSERT INTO crime_incidents (incident_id, did, incident_type, incident_date) VALUES (1, 1, 'Theft', '2022-01-01'), (2, 2, 'Vandalism', '2022-01-02'), (3, 3, 'Assault', '2022-01-03'); CREATE TABLE emergency_calls (call_id INT, did INT, response_time INT); INSERT INTO emergency_calls (call_id, did, response_time) VALUES (1, 1, 45), (2, 2, 62), (3, 3, 55);", "output": "SELECT d.district_name, COUNT(ci.incident_id) as total_incidents, COUNT(ec.call_id) as total_calls FROM districts d LEFT JOIN crime_incidents ci ON d.did = ci.did LEFT JOIN emergency_calls ec ON d.did = ec.did GROUP BY d.district_name;"}
{"input": " \uad6d\uac00\ubcc4 \ub18d\uc5c5\ud601\uc2e0\uc0ac\uc5c5 \uc131\uacf5\ub960\uc740 \uc5b4\ub290 \uc815\ub3c4\uc778\uac00?", "context": "CREATE TABLE project (project_id INT, name VARCHAR(50), location VARCHAR(50), success_rate FLOAT); CREATE TABLE country (country_id INT, name VARCHAR(50), description TEXT); CREATE TABLE location (location_id INT, name VARCHAR(50), country_id INT);", "output": "SELECT l.name, AVG(p.success_rate) FROM project p JOIN location l ON p.location = l.name JOIN country c ON l.country_id = c.country_id GROUP BY l.name;"}
{"input": " \uad50\uc721\uae30\uc220 \ubd80\ubb38\uc5d0\uc11c \ub0a8\ubbf8 \ucd9c\uc2e0 \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ucd5c\ub300 \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups (id INT, name TEXT, industry TEXT, founders TEXT, funding FLOAT); INSERT INTO startups (id, name, industry, founders, funding) VALUES (1, 'SAMEdTech', 'Edtech', 'South America', 9000000);", "output": "SELECT MAX(funding) FROM startups WHERE industry = 'Edtech' AND founders = 'South America';"}
{"input": " \ud2b9\uc815 \uc81c\uc870 \uacf5\uc7a5\uc758 \uc0dd\uc0b0 \uacf5\uc815\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ubaa8\ub4e0 \ud654\ud559 \ubb3c\uc9c8\uc744 \uc218\ub7c9 \ubc0f \ud574\ub2f9 \uc0dd\uc0b0 \ub2e8\uacc4\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemical_compounds (id INT, name VARCHAR(50), quantity INT);CREATE TABLE production_stages (id INT, name VARCHAR(50));CREATE TABLE plant_chemical_usage (plant_id INT, compound_id INT, stage_id INT, quantity INT); INSERT INTO manufacturing_plants (id, name) VALUES (1, 'Plant A'), (2, 'Plant B'); INSERT INTO chemical_compounds (id, name, quantity) VALUES (1, 'Compound X', 10), (2, 'Compound Y', 20), (3, 'Compound Z', 30); INSERT INTO production_stages (id, name) VALUES (1, 'Stage 1'), (2, 'Stage 2'), (3, 'Stage 3'); INSERT INTO plant_chemical_usage (plant_id, compound_id, stage_id, quantity) VALUES (1, 1, 1, 5), (1, 2, 2, 10), (1, 3, 3, 15), (2, 1, 1, 7), (2, 2, 2, 14), (2, 3, 3, 21);", "output": "SELECT c.name, pc.quantity, p.name AS stage_name FROM chemical_compounds c INNER JOIN plant_chemical_usage pc ON c.id = pc.compound_id INNER JOIN production_stages p ON pc.stage_id = p.id WHERE pc.plant_id = 1;"}
{"input": " \uc870\uc9c1\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc21c\ud658 \uacbd\uc81c \uc774\ub2c8\uc154\ud2f0\ube0c\ub97c \uc2dc\uc791\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE circular_economy_initiatives (id INT, organization VARCHAR(255), initiative VARCHAR(255), launch_date DATE);", "output": "SELECT organization, COUNT(*) as total_initiatives FROM circular_economy_initiatives GROUP BY organization HAVING total_initiatives > 1;"}
{"input": "\uc0e4\ub9ac\uc544\ub97c \uc900\uc218\ud558\ub294 \uac1c\uc778 \ub300\ucd9c\uc774\ub098 \uc0ac\ud68c\uc801\uc73c\ub85c \ucc45\uc784 \uc788\ub294 \uc790\ub3d9\ucc28 \ub300\ucd9c\uc744 \ubc1b\uc740 \uace0\uac1d\uc744 \ubaa8\ub450 \ub098\uc5f4\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE client_loans (client_id INT, loan_type VARCHAR(20)); INSERT INTO client_loans (client_id, loan_type) VALUES (1, 'Shariah-compliant personal loan'), (2, 'Socially responsible auto loan'), (3, 'Shariah-compliant mortgage');", "output": "SELECT client_id FROM client_loans WHERE loan_type IN ('Shariah-compliant personal loan', 'Socially responsible auto loan');"}
{"input": " 2022\ub144\uc5d0 \ucd9c\uc2dc\ub41c \uc568\ubc94\uc774 3\uac1c \uc774\uc0c1\uc778 \uc7a5\ub974\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Genres (Genre VARCHAR(20)); CREATE TABLE Albums (AlbumID INT, Genre VARCHAR(20), ReleaseYear INT); INSERT INTO Genres VALUES ('Rock'), ('Pop'), ('Jazz'), ('Blues'), ('Folk'); INSERT INTO Albums VALUES (1, 'Rock', 2022), (2, 'Jazz', 2020), (3, 'Blues', 2022), (4, 'Folk', 2022), (5, 'Pop', 2022), (6, 'Rock', 2022), (7, 'Jazz', 2021), (8, 'Blues', 2022), (9, 'Folk', 2022), (10, 'Pop', 2022), (11, 'Rock', 2022);", "output": "SELECT Genre FROM Albums WHERE ReleaseYear = 2022 GROUP BY Genre HAVING COUNT(*) >= 3;"}
{"input": " \uc624\uc5fc\ub3c4\uac00 \uac00\uc7a5 \ub0ae\uc740 \ubc14\ub2e4\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE OceanPollution (id INT, ocean VARCHAR(255), pollution_level FLOAT); INSERT INTO OceanPollution (id, ocean, pollution_level) VALUES (1, 'Pacific Ocean', 3.1); INSERT INTO OceanPollution (id, ocean, pollution_level) VALUES (2, 'Atlantic Ocean', 2.8);", "output": "SELECT ocean FROM OceanPollution WHERE pollution_level = (SELECT MIN(pollution_level) FROM OceanPollution);"}
{"input": " \ube44\uac74 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uacfc \ub3d9\ubb3c\uc2e4\ud5d8\uc744 \uac70\uce58\uc9c0 \uc54a\uc740 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(100), product_type VARCHAR(50), vegan BOOLEAN, cruelty_free BOOLEAN, rating FLOAT);", "output": "SELECT AVG(rating) FROM products WHERE product_type = 'skincare' AND vegan = TRUE AND cruelty_free = TRUE;"}
{"input": " \uc774\ub3d9 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\ub4e4\uc774 \ud65c\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SupportPrograms (ProgramID INT, ProgramName VARCHAR(50), ProgramType VARCHAR(50)); INSERT INTO SupportPrograms VALUES (1, 'Adaptive Physical Education', 'Physical Education'); CREATE TABLE StudentDisabilities (StudentID INT, DisabilityType VARCHAR(50)); INSERT INTO StudentDisabilities VALUES (1, 'Mobility Impairment'); CREATE TABLE StudentPrograms (StudentID INT, ProgramID INT);", "output": "SELECT sp.ProgramName, sp.ProgramType FROM SupportPrograms sp LEFT JOIN StudentPrograms spj ON sp.ProgramID = spj.ProgramID LEFT JOIN StudentDisabilities sd ON spj.StudentID = sd.StudentID WHERE sd.DisabilityType IS NULL AND sp.ProgramType = 'Physical Education';"}
{"input": " 2015\ub144 \uc774\ud6c4 \uc774\uc2a4\ub77c\uc5d8\uacfc \uad70\uc0ac \ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_innovation (innovation_id INT, country1 TEXT, country2 TEXT, project TEXT, start_date DATE, end_date DATE); INSERT INTO military_innovation (innovation_id, country1, country2, project, start_date, end_date) VALUES (1, 'Israel', 'USA', 'Iron Dome', '2015-01-01', '2018-12-31'), (2, 'Israel', 'Germany', 'Trophy Active Protection System', '2016-01-01', '2019-12-31');", "output": "SELECT military_innovation.country1 FROM military_innovation WHERE military_innovation.country2 = 'Israel' AND military_innovation.start_date >= '2015-01-01' GROUP BY military_innovation.country1 HAVING COUNT(*) = 0;"}
{"input": " \ubb38\ud654\uc801 \uc5ed\ub7c9 \ub370\uc774\ud130\uac00 \uc788\ub294 \uc804\uccb4 \uc758\ub8cc \uc81c\uacf5\uc790 \uc218 \ud45c\uc2dc", "context": "CREATE TABLE healthcare.CulturalCompetency( cc_id INT PRIMARY KEY, healthcare_provider VARCHAR(100), cultural_competency_score FLOAT); INSERT INTO healthcare.CulturalCompetency (cc_id, healthcare_provider, cultural_competency_score) VALUES (1, 'Dr. Ravi Shankar', 0.88), (2, 'Dr. Chen Wei', 0.91), (3, 'Dr. Souad Haddad', 0.93), (4, 'Dr. Abdullahi Yusuf', 0.85);", "output": "SELECT COUNT(*) FROM healthcare.CulturalCompetency;"}
{"input": " 'factory2'\uc5d0 \uc788\ub294 '\uae30\uacc4'\uc758 '\uc774\ub984'\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE machines (location VARCHAR(50), machine_name VARCHAR(100)); INSERT INTO machines (location, machine_name) VALUES ('factory1', 'machine1'), ('factory2', 'machine2'), ('factory3', 'machine3');", "output": "SELECT machine_name FROM machines WHERE location = 'factory2';"}
{"input": " MENA \uc9c0\uc5ed\uc5d0\uc11c \uc5f0\uac04 \ucd9c\ud310\ub418\ub294 \uc724\ub9ac\uc801 AI \uc5f0\uad6c \ub17c\ubb38\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai_research_mena (publication_year INT, num_papers INT, region VARCHAR(255)); INSERT INTO ethical_ai_research_mena (publication_year, num_papers, region) VALUES (2018, 150, 'MENA'), (2019, 200, 'MENA'), (2020, 250, 'MENA'), (2021, 300, 'MENA');", "output": "SELECT publication_year, num_papers, (num_papers / SUM(num_papers) OVER (PARTITION BY region)) * 100.0 AS pct_per_year FROM ethical_ai_research_mena WHERE region = 'MENA';"}
{"input": " 2021\ub144\uc5d0 \ucc44\uc6a9\ub41c \uc9c1\uc6d0\uc758 \ucd5c\uc800 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE EmployeeHires (EmployeeID INT, HireDate DATE, Salary DECIMAL(10,2)); INSERT INTO EmployeeHires (EmployeeID, HireDate, Salary) VALUES (1, '2021-01-01', 80000.00), (2, '2021-02-14', 85000.00), (3, '2020-12-25', 90000.00), (4, '2021-03-03', 95000.00);", "output": "SELECT MIN(Salary) FROM EmployeeHires WHERE YEAR(HireDate) = 2021;"}
{"input": " '\uc544\uc2dc\uc544' \uc9c0\uc5ed\uc758 \ud638\ud154\uc5d0 \ucc38\uc5ec\ud558\ub294 \uac00\uc0c1 \ud22c\uc5b4 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE virtualtours (id INT, hotel_id INT, views INT); INSERT INTO virtualtours (id, hotel_id, views) VALUES (1, 5, 120); INSERT INTO virtualtours (id, hotel_id, views) VALUES (2, 6, 150);", "output": "SELECT COUNT(*) FROM virtualtours WHERE hotel_id IN (SELECT id FROM hotels WHERE region = 'Asia');"}
{"input": "2021\ub144 \ub274\uc695\uc8fc\uc758 \uad50\uc721 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 5\ub4f1\uae09\uc758 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uae30\ub85d \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE CitizenFeedback (state VARCHAR(20), year INT, service VARCHAR(30), rating INT); INSERT INTO CitizenFeedback (state, year, service, rating) VALUES ('New York', 2021, 'Education', 5), ('New York', 2021, 'Education', 4), ('New York', 2021, 'Education', 5), ('New York', 2021, 'Education', 3), ('New York', 2021, 'Education', 5), ('New York', 2021, 'Education', 2);", "output": "SELECT COUNT(*) FROM CitizenFeedback WHERE state = 'New York' AND year = 2021 AND service = 'Education' AND rating = 5;"}
{"input": " 2021\ub144 \uc601\uad6d\uc5d0\uc11c \ud310\ub9e4\ub41c \uc720\uae30\ub18d \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cosmetics_sales (product VARCHAR(255), country VARCHAR(255), sale_date DATE, revenue DECIMAL(10,2)); CREATE TABLE cosmetics (product VARCHAR(255), product_category VARCHAR(255), organic BOOLEAN); CREATE TABLE countries (country VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (country, continent) VALUES ('UK', 'Europe');", "output": "SELECT SUM(revenue) FROM cosmetics_sales JOIN cosmetics ON cosmetics_sales.product = cosmetics.product JOIN countries ON cosmetics_sales.country = countries.country WHERE cosmetics.product_category = 'Skincare' AND cosmetics.organic = true AND countries.country = 'UK' AND YEAR(sale_date) = 2021;"}
{"input": " \ucd1d \uc0dd\uc0b0\ub7c9\uc744 \uae30\uc900\uc73c\ub85c 2021\ub144 \ub124\uc624\ub514\ubbb4\uc758 \uc0c1\uc704 3\uac1c \uc0dd\uc0b0\uc5c5\uccb4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE producers (id INT, name VARCHAR(255), element VARCHAR(10), country VARCHAR(100), quantity FLOAT); INSERT INTO producers (id, name, element, country, quantity) VALUES (1, 'Company A', 'Nd', 'China', 500.0), (2, 'Company B', 'Nd', 'Australia', 350.0), (3, 'Company C', 'Nd', 'Malaysia', 200.0);", "output": "SELECT * FROM (SELECT *, RANK() OVER (PARTITION BY element ORDER BY country, quantity DESC) as rank FROM producers WHERE element = 'Nd' AND YEAR(production_date) = 2021) sub WHERE rank <= 3;"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \uc2a4\ud3f0\uc11c \ucf58\ud150\uce20\uc5d0 \ucc38\uc5ec\ud55c \uce90\ub098\ub2e4 \uc0ac\uc6a9\uc790\ub85c\ubd80\ud130 \ucc3d\ucd9c\ub41c \ucd1d \uad11\uace0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (user_id INT, country VARCHAR(50));CREATE TABLE sponsored_content (content_id INT, user_id INT, engagement INT);CREATE TABLE ad_revenue (content_id INT, revenue DECIMAL(10,2));", "output": "SELECT SUM(ad_revenue.revenue) FROM users INNER JOIN sponsored_content ON users.user_id = sponsored_content.user_id INNER JOIN ad_revenue ON sponsored_content.content_id = ad_revenue.content_id WHERE users.country = 'Canada' AND QUARTER(sponsored_content.engagement_date) = QUARTER(NOW());"}
{"input": " 30~40\uc138 \uc0ac\uc6a9\uc790\uac00 \uc218\ud589\ud55c \ub3c5\ud2b9\ud55c \uc6b4\ub3d9 \ud65c\ub3d9\uc744 \ubaa8\ub450 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_workouts (id INT, user_id INT, activity VARCHAR(50), duration INT, timestamp TIMESTAMP); INSERT INTO user_workouts (id, user_id, activity, duration, timestamp) VALUES (1, 1001, 'running', 30, '2022-03-01 10:00:00'); INSERT INTO user_workouts (id, user_id, activity, duration, timestamp) VALUES (2, 1002, 'swimming', 45, '2022-03-01 11:30:00'); INSERT INTO user_workouts (id, user_id, activity, duration, timestamp) VALUES (3, 1003, 'yoga', 60, '2022-03-02 09:00:00');", "output": "SELECT DISTINCT activity FROM user_workouts WHERE user_id IN (SELECT user_id FROM (SELECT user_id, EXTRACT(YEAR FROM timestamp) as birth_year FROM user_workouts) subquery WHERE subquery.birth_year BETWEEN EXTRACT(YEAR FROM timestamp) - 40 AND EXTRACT(YEAR FROM timestamp) - 30);"}
{"input": " \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\ub2f9 \ucd1d \ud380\ub529 \uae08\uc561\uacfc \ud574\ub2f9 \uc21c\uc704\ub97c \ucd1d \ud380\ub529 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA if not exists funding_data;CREATE TABLE if not exists funding_data.startups (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), year INT, funding DECIMAL(10, 2)); INSERT INTO funding_data.startups (id, name, country, year, funding) VALUES (1, 'StartupA', 'USA', 2018, 5000000.00), (2, 'StartupB', 'Canada', 2020, 3000000.00), (3, 'StartupC', 'USA', 2019, 7000000.00), (4, 'StartupD', 'Germany', 2021, 4000000.00);", "output": "SELECT name, funding, ROW_NUMBER() OVER (ORDER BY funding DESC) AS rank FROM funding_data.startups;"}
{"input": " \ud638\uc8fc \uc624\ud504\ub77c\uc778 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uc5ec\ud55c \ubc29\ubb38\uac1d\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE EventParticipants (event_id INT, country VARCHAR(20), participant_age INT, event_type VARCHAR(10)); INSERT INTO EventParticipants (event_id, country, participant_age, event_type) VALUES (1, 'Australia', 25, 'Offline'), (2, 'Australia', 30, 'Online'), (3, 'New Zealand', 35, 'Offline');", "output": "SELECT AVG(participant_age) FROM EventParticipants WHERE country = 'Australia' AND event_type = 'Offline';"}
{"input": " \uac01 \ub3c4\uc2dc\uc758 \uc804\ub144\ub3c4 \ub300\ube44 \uc804\uc2dc\ud68c \ucc38\uc11d\ub960 \ubcc0\ud654\uc728\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Attendance (id INT, city VARCHAR(20), year INT, visitors INT); INSERT INTO Attendance (id, city, year, visitors) VALUES (1, 'Paris', 2020, 600), (2, 'Paris', 2019, 500), (3, 'London', 2020, 700), (4, 'London', 2019, 800);", "output": "SELECT city, ((visitors - LAG(visitors) OVER (PARTITION BY city ORDER BY year))*100.0 / LAG(visitors) OVER (PARTITION BY city ORDER BY year)) AS pct_change FROM Attendance ORDER BY city, year;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ud65c\ub3d9 \uc218\uc900\uc744 \ub192\uc778 \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE activity_level (id INT, user_id INT, activity_level INT, activity_date DATE);", "output": "SELECT user_id, AVG(activity_level) as avg_activity_level FROM activity_level WHERE activity_date >= (CURRENT_DATE - INTERVAL '1 month') GROUP BY user_id HAVING AVG(activity_level) > (SELECT AVG(activity_level) FROM activity_level WHERE user_id = a.user_id);"}
{"input": "\ud788\uc2a4\ud328\ub2c9 \ub610\ub294 \ub77c\ud2f4\uacc4\ub85c \uc2dd\ubcc4\ub418\ub294 \uac00\uc7a5 \uace0\uc720\ud55c \ud658\uc790\ub97c \ubcf4\uc720\ud55c \uc0c1\uc704 2\uba85\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uc758\ub8cc \uc885\uc0ac\uc790\ub97c \uc2dd\ubcc4\ud558\uace0 \uc774\ub4e4\uc774 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud55c \ud658\uc790 \uc218\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE CommunityHealthWorker (ID INT, Name TEXT); INSERT INTO CommunityHealthWorker (ID, Name) VALUES (1, 'Maria Rodriguez'); INSERT INTO CommunityHealthWorker (ID, Name) VALUES (2, 'Jose Hernandez'); INSERT INTO CommunityHealthWorker (ID, Name) VALUES (3, 'Fatima Khan'); CREATE TABLE PatientCommunityHealthWorker (PatientID INT, CommunityHealthWorkerID INT, Ethnicity TEXT);", "output": "SELECT CommunityHealthWorkerID, COUNT(DISTINCT PatientID) as PatientsServed FROM PatientCommunityHealthWorker WHERE Ethnicity = 'Hispanic or Latino' GROUP BY CommunityHealthWorkerID ORDER BY PatientsServed DESC LIMIT 2;"}
{"input": " '\uad50\uc721' \uce74\ud14c\uace0\ub9ac\uc758 \ub2e8\uccb4\uc5d0 \uae30\ubd80\ud55c \uae30\ubd80\uc790\ub85c\ubd80\ud130 \uae30\ubd80\ub97c \ubc1b\uc740 \ub2e8\uccb4\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(50)); CREATE TABLE donations (id INT, donor_id INT, organization_id INT, amount DECIMAL(10, 2)); CREATE TABLE organizations (id INT, name VARCHAR(50), category VARCHAR(20)); INSERT INTO donors (id, name) VALUES (1, 'Donor1'), (2, 'Donor2'), (3, 'Donor3'), (4, 'Donor4'), (5, 'Donor5'); INSERT INTO donations (id, donor_id, organization_id, amount) VALUES (1, 1, 1, 500), (2, 2, 1, 700), (3, 3, 2, 1000), (4, 4, 2, 1200), (5, 5, 3, 800); INSERT INTO organizations (id, name, category) VALUES (1, 'Org1', 'Environment'), (2, 'Org2', 'Environment'), (3, 'Org3', 'Education'), (4, 'Org4', 'Arts & Culture');", "output": "SELECT organizations.name FROM donations d1 JOIN donations d2 ON d1.donor_id = d2.donor_id JOIN organizations o1 ON d1.organization_id = o1.id JOIN organizations o2 ON d2.organization_id = o2.id WHERE o1.category = 'Environment' AND o2.category = 'Education' GROUP BY organizations.name;"}
{"input": " e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uc5ec\ud558\uc9c0 \uc54a\uc740 \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE players (id INT, name VARCHAR(255), age INT, country VARCHAR(255)); CREATE TABLE esports_events (id INT, player_id INT, event_date DATE, game_type VARCHAR(255)); INSERT INTO players (id, name, age, country) VALUES (1, 'John Doe', 25, 'USA'), (2, 'Jane Doe', 30, 'Canada'), (3, 'Jim Brown', 30, 'Canada'), (4, 'Jamie Smith', 28, 'USA'); INSERT INTO esports_events (id, player_id, event_date, game_type) VALUES (1, 1, '2022-01-01', 'FPS'), (2, 1, '2022-02-01', 'RPG'), (3, 2, '2021-12-01', 'FPS'), (4, 2, '2022-01-01', 'FPS');", "output": "DELETE FROM players WHERE id NOT IN (SELECT player_id FROM esports_events);"}
{"input": " GMO\uac00 \uc544\ub2cc \uc81c\ud488\uc774 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE inventory (product_id INT, product_name VARCHAR(30), is_non_gmo BOOLEAN); INSERT INTO inventory (product_id, product_name, is_non_gmo) VALUES (1, 'Quinoa Salad', true), (2, 'Chicken Stir Fry', false);", "output": "SELECT COUNT(*) FROM inventory WHERE is_non_gmo = true;"}
{"input": " \uc77c\uc77c \uc218\uc775\uc744 \uae30\uc900\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uce98\ub9ac\ud3ec\ub2c8\uc544 \ub808\uc2a4\ud1a0\ub791\uc758 \uc77c\uc77c \ud3c9\uade0 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (RestaurantID INT, RestaurantName VARCHAR(255), City VARCHAR(255), State VARCHAR(255), DailyRevenue DECIMAL(10,2), Date DATE);", "output": "SELECT State, AVG(DailyRevenue) OVER (PARTITION BY State ORDER BY State) as AvgDailyRevenue, Date FROM Restaurants WHERE State = 'California';"}
{"input": " \uc2dc\uac01\uc7a5\uc560\ud559\uc0dd\uc774 \ud65c\uc6a9\ud558\uc9c0 \uc54a\ub294 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SupportPrograms (ProgramID INT, ProgramName VARCHAR(50), ProgramType VARCHAR(50)); INSERT INTO SupportPrograms VALUES (1, 'Assistive Technology', 'Training'); CREATE TABLE StudentDisabilities (StudentID INT, DisabilityType VARCHAR(50)); INSERT INTO StudentDisabilities VALUES (1, 'Visual Impairment'); CREATE TABLE StudentPrograms (StudentID INT, ProgramID INT); INSERT INTO StudentPrograms VALUES (1, 1);", "output": "SELECT sp.ProgramName, sp.ProgramType FROM SupportPrograms sp LEFT JOIN StudentPrograms spj ON sp.ProgramID = spj.ProgramID LEFT JOIN StudentDisabilities sd ON spj.StudentID = sd.StudentID WHERE sd.DisabilityType IS NULL;"}
{"input": " 2021\ub144 1\ubd84\uae30\ubd80\ud130 2021\ub144 2\ubd84\uae30\uae4c\uc9c0 \uc2dc\uce74\uace0 \uac01 \uc9c0\uc5ed\uc758 \uc911\uac04 \ub9e4\ubb3c \uac00\uaca9 \ubcc0\ud654\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE neighborhoods (name VARCHAR(255), city VARCHAR(255), state VARCHAR(255), country VARCHAR(255), PRIMARY KEY (name)); INSERT INTO neighborhoods (name, city, state, country) VALUES ('Lincoln Park', 'Chicago', 'IL', 'USA');", "output": "SELECT a.name, (b.median_price - a.median_price) as price_change FROM (SELECT name, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY listing_price) as median_price, DATE_TRUNC('quarter', date_posted) as quarter FROM real_estate_listings WHERE city = 'Chicago' AND date_posted < '2021-04-01' GROUP BY name, quarter) a JOIN (SELECT name, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY listing_price) as median_price, DATE_TRUNC('quarter', date_posted) as quarter FROM real_estate_listings WHERE city = 'Chicago' AND date_posted < '2021-07-01' GROUP BY name, quarter) b ON a.name = b.name AND a.quarter = b.quarter - INTERVAL '3 months';"}
{"input": " 'community_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 'refugee_support' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ucd1d \uae30\ubd80 \uae08\uc561 \uae30\uc900 \uc0c1\uc704 3\uba85\uc758 \uae30\ubd80\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donors (id INT, name VARCHAR(255), organization VARCHAR(255), total_donation DECIMAL(10, 2)); INSERT INTO donors (id, name, organization, total_donation) VALUES (1, 'John Doe', 'Donor Organization A', 5000.00), (2, 'Jane Smith', 'Donor Organization B', 7000.00), (3, 'Robert Johnson', 'Donor Organization C', 6000.00);", "output": "SELECT name, organization, total_donation FROM (SELECT name, organization, total_donation, ROW_NUMBER() OVER (ORDER BY total_donation DESC) AS rank FROM donors WHERE program = 'refugee_support') subquery WHERE rank <= 3;"}
{"input": "\ud0dc\ud3c9\uc591 \uc2ec\ud574 \uc7a0\uc218\uc815\uc774 \ub3c4\ub2ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc218\uc2ec\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE submersible_dives (id INT, location VARCHAR(255), depth INT); INSERT INTO submersible_dives (id, location, depth) VALUES (1, 'Mariana Trench', 10994), (2, 'Challenger Deep', 10972), (3, 'Tonga Trench', 10823), (4, 'Java Trench', 8040), (5, 'Sirena Deep', 7493);", "output": "SELECT MAX(depth) FROM submersible_dives WHERE location = 'Mariana Trench';"}
{"input": "2022\ub144 1\ubd84\uae30\uc5d0 \ubbf8\uad6d\uc5d0\uc11c \ud310\ub9e4\ub41c \ub9bd\uc2a4\ud2f1\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE cosmetics_sales (product VARCHAR(255), country VARCHAR(255), revenue DECIMAL(10,2)); CREATE VIEW q1_sales AS SELECT * FROM cosmetics_sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31'; CREATE TABLE countries (country VARCHAR(255), continent VARCHAR(255)); INSERT INTO countries (country, continent) VALUES ('USA', 'North America');", "output": "SELECT SUM(revenue) FROM q1_sales JOIN cosmetics ON q1_sales.product = cosmetics.product JOIN countries ON q1_sales.country = countries.country WHERE cosmetics.product_category = 'Lipsticks' AND countries.country = 'USA';"}
{"input": " \uce5c\ud658\uacbd \uc219\ubc15 \uc2dc\uc124\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc5ec\ud589\uc9c0\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE destinations (destination_id INT, name TEXT); CREATE TABLE accommodations (accommodation_id INT, destination_id INT, name TEXT, is_eco BOOLEAN); INSERT INTO destinations (destination_id, name) VALUES (1, 'Bali'), (2, 'Phuket'), (3, 'Mauritius'), (4, 'Maldives'); INSERT INTO accommodations (accommodation_id, destination_id, name, is_eco) VALUES (1, 1, 'Hotel Ubud', true), (2, 1, 'Hotel Jimbaran', false), (3, 2, 'Hotel Patong', false), (4, 2, 'Hotel Karon', true), (5, 3, 'Hotel Grand Baie', true), (6, 3, 'Hotel Flic en Flac', false), (7, 4, 'Hotel Male', false), (8, 4, 'Hotel Ari', true);", "output": "SELECT name FROM destinations INNER JOIN (SELECT destination_id, COUNT(*) as eco_count FROM accommodations WHERE is_eco = true GROUP BY destination_id) AS subquery ON destinations.destination_id = subquery.destination_id ORDER BY eco_count DESC LIMIT 1;"}
{"input": " \uc0c1\uc704, \ud558\uc704 5%\ub97c \uc81c\uc678\ud55c \uae30\ubd80\uc790 \uc720\ud615\ubcc4 \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists arts_culture;CREATE TABLE if not exists arts_culture.donors (donor_id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), donation DECIMAL(10,2));INSERT INTO arts_culture.donors (donor_id, name, type, donation) VALUES (1, 'John Doe', 'Individual', 50.00), (2, 'Jane Smith', 'Individual', 100.00), (3, 'Google Inc.', 'Corporation', 5000.00);", "output": "SELECT type, AVG(donation) as avg_donation FROM (SELECT donation, type, NTILE(100) OVER (ORDER BY donation) as percentile FROM arts_culture.donors) d WHERE percentile NOT IN (1, 2, 99, 100) GROUP BY type;"}
{"input": " \uc778\uc885\ubcc4\ub85c \ub098\ub208 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \ud3c9\uade0 \ubb38\ud654 \uc5ed\ub7c9 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityHealthWorker (WorkerID int, Race varchar(25), CulturalCompetencyScore int); INSERT INTO CommunityHealthWorker (WorkerID, Race, CulturalCompetencyScore) VALUES (1, 'Asian', 85), (2, 'Black', 90), (3, 'Hispanic', 80), (4, 'White', 95);", "output": "SELECT Race, AVG(CulturalCompetencyScore) OVER (PARTITION BY Race) AS AvgScore FROM CommunityHealthWorker;"}
{"input": " VR \uae30\uc220\uc744 \ub3c4\uc785\ud558\uace0 e\uc2a4\ud3ec\uce20\ub97c \uc990\uae30\ub294 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Gender VARCHAR(10), Country VARCHAR(50)); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (1, 25, 'Male', 'Germany'); INSERT INTO Players (PlayerID, Age, Gender, Country) VALUES (2, 30, 'Female', 'France'); CREATE TABLE EsportsEvents (EventID INT, PlayerID INT, EventName VARCHAR(50)); CREATE TABLE VRAdoption (PlayerID INT, VRPurchaseDate DATE); INSERT INTO EsportsEvents (EventID, PlayerID, EventName) VALUES (1, 1, 'GameX Championship'); INSERT INTO VRAdoption (PlayerID, VRPurchaseDate) VALUES (1, '2022-01-01'); INSERT INTO VRAdoption (PlayerID, VRPurchaseDate) VALUES (2, '2022-02-01');", "output": "SELECT AVG(Players.Age) FROM Players INNER JOIN EsportsEvents ON Players.PlayerID = EsportsEvents.PlayerID INNER JOIN VRAdoption ON Players.PlayerID = VRAdoption.PlayerID;"}
{"input": " \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc9c0\uc5ed \uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\ub4e4\uc774 Two-Spirit \ub610\ub294 \ud558\uc640\uc774 \uc6d0\uc8fc\ubbfc\uc73c\ub85c \ud655\uc778\ub429\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (worker_id INT, name TEXT, identity TEXT); INSERT INTO community_health_workers (worker_id, name, identity) VALUES (1, 'John Doe', 'Straight'), (2, 'Jane Smith', 'Two-Spirit'), (3, 'Maria Garcia', 'Native Hawaiian');", "output": "SELECT COUNT(*) FROM community_health_workers WHERE identity IN ('Two-Spirit', 'Native Hawaiian');"}
{"input": "\uc544\ud504\ub9ac\uce74' \uc9c0\uc5ed\uc758 \ucd1d \ub300\ud53c\uc18c \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (region_id INT, region_name VARCHAR(20)); INSERT INTO regions (region_id, region_name) VALUES (1, 'americas'), (2, 'europe'), (3, 'asia'), (4, 'africa'); CREATE TABLE shelters (shelter_id INT, shelter_name VARCHAR(30), region_id INT); INSERT INTO shelters (shelter_id, shelter_name, region_id) VALUES (1, 'Emergency Shelter 1', 4), (2, 'Temporary Home', 4), (3, 'Relief House', 1);", "output": "SELECT COUNT(*) FROM shelters WHERE region_id = (SELECT region_id FROM regions WHERE region_name = 'africa');"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc568\ubc84\ud0c0\uc640 \ub9e4\ub2c8\ud1a0\ubc14\uc5d0\uc11c \ubc95\ub960\uad6c\uc870\uac00 \uc81c\uacf5\ub418\uc5c8\ub358 \uace0\uc720\ud55c \ubc95\uc6d0 \uc704\uce58\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE legal_aid_alberta (court_location VARCHAR(50), date DATE); INSERT INTO legal_aid_alberta VALUES ('Edmonton', '2022-02-01'), ('Calgary', '2021-06-15'), ('Red Deer', '2020-09-03'); CREATE TABLE legal_aid_manitoba (court_location VARCHAR(50), date DATE); INSERT INTO legal_aid_manitoba VALUES ('Winnipeg', '2022-03-10'), ('Brandon', '2021-12-20'), ('Thompson', '2020-07-25');", "output": "SELECT DISTINCT court_location FROM legal_aid_alberta WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) UNION ALL SELECT DISTINCT court_location FROM legal_aid_manitoba WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR);"}
{"input": " 2024\ub144 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub450 \ubc88\uc9f8\ub85c \ubcf5\uadc0\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\uc758 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ubc31\ubd84\uc728\ub85c \ud45c\uc2dc\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName VARCHAR(50), StartDate DATE); CREATE TABLE Volunteers (VolunteerID INT, ProgramID INT, SignUpDate DATE, Returned BOOLEAN); INSERT INTO Programs (ProgramID, ProgramName, StartDate) VALUES (1, 'ProgramA', '2024-01-01'), (2, 'ProgramB', '2024-01-01'), (3, 'ProgramC', '2024-01-01'); INSERT INTO Volunteers (VolunteerID, ProgramID, SignUpDate, Returned) VALUES (1, 1, '2024-01-01', TRUE), (2, 1, '2024-01-02', FALSE), (3, 2, '2024-01-01', TRUE), (4, NULL, '2024-01-01', FALSE);", "output": "SELECT p.ProgramName, COUNT(v.VolunteerID) * 100.0 / SUM(COUNT(v.VolunteerID)) OVER (PARTITION BY p.ProgramID) AS PercentageReturned FROM Programs p JOIN Volunteers v ON p.ProgramID = v.ProgramID WHERE YEAR(v.SignUpDate) = 2024 GROUP BY p.ProgramName, v.ProgramID, v.Returned ORDER BY PercentageReturned DESC;"}
{"input": " 2022\ub144 8\uc6d4 \uc778\ub3c4\ub85c \uac00\uc7a5 \ub9ce\uc774 \uc9c0\uc5f0\ub41c \ubc30\uc1a1 \uc0c1\uc704 2\uac1c\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE Shipments (id INT, source VARCHAR(50), destination VARCHAR(50), weight FLOAT, ship_date DATE, delivery_date DATE); INSERT INTO Shipments (id, source, destination, weight, ship_date, delivery_date) VALUES (21, 'USA', 'India', 300, '2022-08-01', '2022-08-06'); INSERT INTO Shipments (id, source, destination, weight, ship_date, delivery_date) VALUES (22, 'USA', 'India', 400, '2022-08-10', '2022-08-15'); INSERT INTO Shipments (id, source, destination, weight, ship_date, delivery_date) VALUES (23, 'USA', 'India', 500, '2022-08-20', '2022-08-25');", "output": "SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY DATEDIFF(day, ship_date, delivery_date) DESC) as rn FROM Shipments WHERE destination = 'India' AND ship_date BETWEEN '2022-08-01' AND '2022-08-31') t WHERE rn <= 2;"}
{"input": " \ubca4\ucc98 \uce90\ud53c\ud138\uacfc \uc5d4\uc824 \ud22c\uc790\uc790 \ubaa8\ub450\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \ud68c\uc0ac\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE funds (company_id INT, funding_amount DECIMAL(10, 2), funding_type VARCHAR(20), investor_type VARCHAR(20)); INSERT INTO funds VALUES (1, 500000, 10000, 'Venture Capital'); INSERT INTO funds VALUES (2, 300000, 20000, 'Angel Investor');", "output": "SELECT company_name FROM companies INNER JOIN (SELECT company_id FROM funds WHERE investor_type IN ('Venture Capital', 'Angel Investor') GROUP BY company_id HAVING COUNT(DISTINCT investor_type) = 2) as subquery ON companies.company_id = subquery.company_id;"}
{"input": " NBA \uac01 \ud300\uc758 \ucd5c\uace0 \ub4dd\uc810 \uacbd\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); CREATE TABLE games (game_id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT);", "output": "SELECT home_team_id, MAX(home_team_score) AS high_score FROM games GROUP BY home_team_id; SELECT away_team_id, MAX(away_team_score) AS high_score FROM games GROUP BY away_team_id;"}
{"input": " 2022 FIFA \uc6d4\ub4dc\ucef5 \uc870\ubcc4 \uc608\uc120\uc5d0\uc11c \uac01 \ud300\uc774 \uace8\uc744 \ub123\ub294 \ub370 \uac78\ub9ac\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fifa_group_stage_goals (goal_id INT, team_id INT, match_id INT, time_taken INT); INSERT INTO fifa_group_stage_goals VALUES (1, 1, 1, 25), (2, 1, 3, 43), (3, 2, 1, 12), (4, 2, 4, 37), (5, 3, 2, 56), (6, 3, 4, 72);", "output": "SELECT t.team_name, AVG(g.time_taken) AS avg_time_to_score FROM fifa_group_stage_goals g JOIN (SELECT team_id, match_id FROM fifa_group_stage_goals GROUP BY team_id, match_id) g_unique ON g.team_id = g_unique.team_id AND g.match_id = g_unique.match_id JOIN fifa_teams t ON t.team_id = g.team_id GROUP BY t.team_id;"}
{"input": " \ubb38\ud654\uc801 \uc5ed\ub7c9 \uad50\uc721, \uae30\uac04 \ubc0f \uae30\uac04\uc5d0 \ub530\ub978 \uc21c\uc704\ub97c Worker_id\ub85c \uad6c\ubd84\ud558\uc5ec \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cultural_competency_trainings (worker_id INT, training VARCHAR(255), date DATE, duration INT); INSERT INTO cultural_competency_trainings (worker_id, training, date, duration) VALUES (1, 'Language Access', '2022-06-01', 3), (1, 'Cultural Sensitivity', '2022-07-01', 5), (2, 'Language Access', '2022-06-05', 4), (2, 'Cultural Sensitivity', '2022-07-05', 2), (3, 'Language Access', '2022-06-10', 5), (3, 'Cultural Sensitivity', '2022-07-10', 4);", "output": "SELECT worker_id, training, duration, RANK() OVER(PARTITION BY worker_id ORDER BY duration DESC) as rank FROM cultural_competency_trainings;"}
{"input": " \ud658\uacbd\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uad6d\uac00\uc5d0\uc11c \uc6b4\uc601\ub418\ub294 \uad11\uc0b0 \ud68c\uc0ac\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Companies (CompanyID INT, CompanyName VARCHAR(50), Country VARCHAR(50)); INSERT INTO Companies (CompanyID, CompanyName, Country) VALUES (1, 'ABC Mining', 'Canada'), (2, 'XYZ Excavations', 'USA'), (3, 'MNO Drilling', 'Mexico'), (4, 'PQR Quarrying', 'Australia'), (5, 'RST Mining', 'Russia'); CREATE TABLE EnvironmentalImpact (Country VARCHAR(50), ImpactScore INT); INSERT INTO EnvironmentalImpact (Country, ImpactScore) VALUES ('Canada', 60), ('USA', 70), ('Mexico', 50), ('Australia', 80), ('Russia', 90);", "output": "SELECT CompanyName FROM Companies JOIN EnvironmentalImpact ON Companies.Country = EnvironmentalImpact.Country WHERE ImpactScore IN (SELECT MAX(ImpactScore) FROM EnvironmentalImpact);"}
{"input": " \uac01 \uc5b8\uc5b4\uac00 \uc18d\ud55c \uc9c0\uc5ed\uc758 \uc804\ud1b5 \uc608\uc220 \uc791\ud488\uc740 \ucd1d \uba87 \uc810\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TraditionalArtForms (id INT, name VARCHAR(50), language VARCHAR(50), region VARCHAR(50)); CREATE TABLE ArtPieces (id INT, art_form_id INT, site_id INT); CREATE TABLE HeritageSites (id INT, name VARCHAR(50), site_id INT, region VARCHAR(50));", "output": "SELECT TAF.language, TAF.region, SUM(AP.id) as total_art_pieces FROM TraditionalArtForms TAF INNER JOIN ArtPieces AP ON TAF.id = AP.art_form_id INNER JOIN HeritageSites HS ON AP.site_id = HS.id WHERE TAF.region = HS.region GROUP BY TAF.language, TAF.region;"}
{"input": " \ub0a8\uc131 \ud658\uc790\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uace8 \uc804\ubb38\uc758\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE physician (physician_id INT, name VARCHAR(50), specialty VARCHAR(30), gender VARCHAR(10)); CREATE TABLE visit (visit_id INT, physician_id INT, rural BOOLEAN);", "output": "SELECT physician.name FROM physician JOIN (SELECT physician_id FROM visit JOIN patient ON visit.patient_id = patient.patient_id WHERE visit.rural = TRUE AND patient.gender = 'male' GROUP BY physician_id ORDER BY COUNT(*) DESC LIMIT 1) AS subquery ON physician.physician_id = subquery.physician_id;"}
{"input": " \ub3c5\uc77c\uacfc \ud3ec\ub974\ud22c\uac08\uc758 \uce5c\ud658\uacbd \ud638\ud154\uc758 \uc77c\uc77c \ud3c9\uade0 \uc218\uc775\uacfc \uc774 \ub450 \uad6d\uac00\uc758 \ubc15\ubb3c\uad00 \uc77c\uc77c \ud3c9\uade0 \ubc29\ubb38\uc790 \uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE hotel_revenue (hotel_id INT, country VARCHAR(20), daily_revenue FLOAT); INSERT INTO hotel_revenue (hotel_id, country, daily_revenue) VALUES (1, 'Germany', 110), (2, 'Germany', 130), (3, 'Portugal', 160), (4, 'Portugal', 150); CREATE TABLE museum_visitors (visit_id INT, country VARCHAR(20), daily_visitors INT); INSERT INTO museum_visitors (visit_id, country, daily_visitors) VALUES (1, 'Germany', 60), (2, 'Germany', 70), (3, 'Portugal', 80), (4, 'Portugal', 90);", "output": "SELECT AVG(daily_revenue) FROM hotel_revenue WHERE country = 'Germany' UNION ALL SELECT AVG(daily_visitors) FROM museum_visitors WHERE country = 'Germany' UNION ALL SELECT AVG(daily_revenue) FROM hotel_revenue WHERE country = 'Portugal' UNION ALL SELECT AVG(daily_visitors) FROM museum_visitors WHERE country = 'Portugal';"}
{"input": " VR \uae30\uc220 \uc0ac\uc6a9\uc744 \uc120\ud638\ud558\ub294 \ud50c\ub808\uc774\uc5b4\uc640 \uadf8\ub807\uc9c0 \uc54a\uc740 \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE PlayerAges (PlayerID INT, Age INT); INSERT INTO PlayerAges (PlayerID, Age) VALUES (1, 25), (2, 28), (3, 30), (4, 32), (5, 27); CREATE TABLE PlayerPreferences (PlayerID INT, Preference VARCHAR(50)); INSERT INTO PlayerPreferences (PlayerID, Preference) VALUES (1, 'VR'), (2, 'Non-VR'), (3, 'VR'), (4, 'Non-VR'), (5, 'Non-VR');", "output": "(SELECT AVG(PlayerAges.Age) FROM PlayerAges JOIN PlayerPreferences ON PlayerAges.PlayerID = PlayerPreferences.PlayerID WHERE PlayerPreferences.Preference = 'VR' EXCEPT SELECT AVG(PlayerAges.Age) FROM PlayerAges JOIN PlayerPreferences ON PlayerAges.PlayerID = PlayerPreferences.PlayerID WHERE PlayerPreferences.Preference = 'Non-VR')"}
{"input": " \uacb9\uce58\ub294 \uc2dc\uac04 \ub3d9\uc548 Field1\uacfc Field5\uc758 \uacf5\ud1b5 \uc628\ub3c4 \uac12\uc744 \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE weather_data (id INT, location VARCHAR(50), temperature DECIMAL(5,2), humidity DECIMAL(5,2), timestamp TIMESTAMP); INSERT INTO weather_data (id, location, temperature, humidity, timestamp) VALUES (1, 'Field1', 22.5, 60.3, '2022-03-01 10:00:00'), (2, 'Field5', 20.0, 65.0, '2022-03-01 14:00:00');", "output": "SELECT temperature FROM weather_data WHERE location = 'Field1' AND timestamp BETWEEN '2022-03-01 10:00:00' AND '2022-03-01 14:00:00' INTERSECT SELECT temperature FROM weather_data WHERE location = 'Field5' AND timestamp BETWEEN '2022-03-01 10:00:00' AND '2022-03-01 14:00:00';"}
{"input": " \ud654\uc7a5\ud488 \uc911 \ube44\uac74 \uc81c\ud488\uacfc \ube44\uac74 \uc81c\ud488 \uc778\uc99d \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE product_certifications (id INT, product_id INT, certification_type VARCHAR(255)); INSERT INTO product_certifications (id, product_id, certification_type) VALUES (1, 1, 'Vegan');", "output": "SELECT certification_type, COUNT(*) FROM product_certifications GROUP BY certification_type;"}
{"input": " Location1\uacfc Location2\uc5d0\uc11c\ub294 \ubaa8\ub450 \uc81c\uacf5\ub418\uc9c0\ub9cc Location3\uc5d0\uc11c\ub294 \uc81c\uacf5\ub418\uc9c0 \uc54a\ub294 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items(menu_item VARCHAR(255), location VARCHAR(255)); INSERT INTO menu_items(menu_item, location) VALUES ('Burger', 'Location1'), ('Pizza', 'Location2'), ('Pasta', 'Location1'), ('Salad', 'Location2'), ('Burger', 'Location3');", "output": "SELECT menu_item FROM menu_items WHERE location = 'Location1' INTERSECT SELECT menu_item FROM menu_items WHERE location = 'Location2' EXCEPT SELECT menu_item FROM menu_items WHERE location = 'Location3';"}
{"input": " '\ub3d9\ud574\uc548' \uc9c0\uc5ed\uc5d0\ub294 '\uae30\ubcf8' \uba64\ubc84\uc2ed \uc720\ud615\uc744 \ubcf4\uc720\ud55c \uc0ac\uc6a9\uc790\uac00 \uba87 \uba85\uc774\ub098 \ub418\ub098\uc694?", "context": "CREATE SCHEMA fitness; CREATE TABLE memberships (id INT, member_name VARCHAR(50), region VARCHAR(50), membership_type VARCHAR(50), price DECIMAL(5,2), start_date DATE, end_date DATE); INSERT INTO memberships (id, member_name, region, membership_type, price, start_date, end_date) VALUES (1, 'Jane Doe', 'East Coast', 'Basic', 39.99, '2022-01-01', '2022-12-31'); INSERT INTO memberships (id, member_name, region, membership_type, price, start_date, end_date) VALUES (2, 'Bob Smith', 'East Coast', 'Premium', 79.99, '2022-01-01', '2022-12-31');", "output": "SELECT COUNT(*) FROM fitness.memberships WHERE region = 'East Coast' AND membership_type = 'Basic';"}
{"input": " 2020\ub144 \uc911\ub0a8\ubbf8 \uad50\uc721\ubd84\uc57c\uc5d0 \uac01 \uae30\uad00\uc774 \uae30\ubd80\ud55c \uae30\uae08\uc758 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (donor_id INT, donor_name TEXT, donation_amount DECIMAL, donation_date DATE, sector TEXT, country TEXT); INSERT INTO donors (donor_id, donor_name, donation_amount, donation_date, sector, country) VALUES (1, 'Save the Children', 75000, '2020-01-01', 'education', 'Latin America');", "output": "SELECT donor_name, SUM(donation_amount) as total_donation FROM donors WHERE country = 'Latin America' AND sector = 'education' GROUP BY donor_name;"}
{"input": " '\ubcf4\uc789'\uacfc '\uc5d0\uc5b4\ubc84\uc2a4'\uac00 \uc81c\uc791\ud55c \ud56d\uacf5\uae30\uc758 \ucd1d \ub300\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE AircraftManufacturers (Company VARCHAR(50), Model VARCHAR(50)); INSERT INTO AircraftManufacturers (Company, Model) VALUES ('Boeing', '747'), ('Boeing', '787 Dreamliner'), ('Airbus', 'A320'), ('Airbus', 'A380'), ('Bombardier', 'CRJ700');", "output": "SELECT SUM(CASE WHEN Company IN ('Boeing', 'Airbus') THEN 1 ELSE 0 END) FROM AircraftManufacturers;"}
{"input": " \uc778\uad6c \uaddc\ubaa8\uc5d0 \ub530\ub77c \ub18d\ucd0c \uc9c0\uc5ed \uc0ac\ud68c\uc758 \uc21c\uc704\ub97c \ub9e4\uae30\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE communities (community_id INT, community_name VARCHAR(255), location_id INT, population INT); INSERT INTO communities (community_id, community_name, location_id, population) VALUES (1, 'Rural Community 1', 1, 500), (2, 'Rural Community 2', 1, 700), (3, 'Rural Community 3', 1, 300), (4, 'Rural Community 4', 1, 900);", "output": "SELECT community_name, RANK() OVER (ORDER BY population DESC) AS population_rank FROM communities WHERE location_id = 1;"}
{"input": " 2021\ub144\uc5d0 \ub274\uc695, \ud50c\ub85c\ub9ac\ub2e4, \uc870\uc9c0\uc544\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18\uc774 \ubcf4\uace0\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE MentalHealthParityViolations (Id INT, State VARCHAR(2), Year INT, ViolationCount INT); INSERT INTO MentalHealthParityViolations (Id, State, Year, ViolationCount) VALUES (1, 'NY', 2021, 135), (2, 'FL', 2021, 140), (3, 'GA', 2021, 160), (4, 'CA', 2020, 120), (5, 'TX', 2020, 150);", "output": "SELECT State, SUM(ViolationCount) as TotalViolations FROM MentalHealthParityViolations WHERE State IN ('NY', 'FL', 'GA') AND Year = 2021 GROUP BY State;"}
{"input": "\uc54c\uace0\ub9ac\uc998\ub2f9 \uc804\uccb4 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc218 \uc911 \uacf5\uc815\ud55c AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ai_applications (app_id INT, app_name VARCHAR(255), algorithm_id INT, is_fair BOOLEAN); INSERT INTO ai_applications (app_id, app_name, algorithm_id, is_fair) VALUES (1, 'App1', 1, true), (2, 'App2', 1, false), (3, 'App3', 2, true), (4, 'App4', 2, true), (5, 'App5', 3, false);", "output": "SELECT algorithm_id, AVG(CASE WHEN is_fair THEN 1.0 ELSE 0.0 END) * 100.0 AS fairness_percentage FROM ai_applications GROUP BY algorithm_id;"}
{"input": " \uc9c0\ub09c\ud574 \uac01 \uc0ac\uace0 \uc720\ud615\ubcc4\ub85c \ubcf4\uace0\ub41c \uc548\uc804 \uc0ac\uace0 \uac74\uc218\ub97c \ud655\uc778\ud558\uace0 \uc624\ub984\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Safety_Incidents (Incident_Type VARCHAR(255), Incident_Date DATE); INSERT INTO Safety_Incidents (Incident_Type, Incident_Date) VALUES ('Incident1', '2022-01-01'), ('Incident2', '2022-01-02'), ('Incident1', '2022-02-01'), ('Incident3', '2022-02-02');", "output": "SELECT Incident_Type, COUNT(*) AS Incident_Count, RANK() OVER (ORDER BY COUNT(*) ASC) AS Rank FROM Safety_Incidents WHERE Incident_Date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY Incident_Type;"}
{"input": " \uc560\ud2c0\ub79c\ud0c0 \uc9c0\uc810\uc758 \ucd5c\uc18c \ub2f9\uc88c \uc608\uae08 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), branch VARCHAR(20), balance DECIMAL(10,2)); INSERT INTO accounts (customer_id, account_type, branch, balance) VALUES (1, 'Savings', 'New York', 5000.00), (2, 'Checking', 'New York', 7000.00), (3, 'Checking', 'Atlanta', 2000.00), (4, 'Savings', 'Atlanta', 4000.00);", "output": "SELECT MIN(balance) FROM accounts WHERE account_type = 'Checking' AND branch = 'Atlanta';"}
{"input": " 2019\ub144 \ud3c9\uade0\ubcf4\ub2e4 \uc2a4\ud2b8\ub9ac\ubc0d \uc218\uac00 \ub354 \ub9ce\uc740 \ubaa8\ub4e0 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE artists (id INT PRIMARY KEY, name TEXT); CREATE TABLE songs (id INT PRIMARY KEY, title TEXT, year INT, artist_id INT, genre TEXT, streams INT); INSERT INTO artists (id, name) VALUES (1, 'BTS'), (2, 'Blackpink'), (3, 'TWICE'), (4, 'Taylor Swift'), (5, 'Ariana Grande'); INSERT INTO songs (id, title, year, artist_id, genre, streams) VALUES (1, 'Dynamite', 2020, 1, 'Pop', 800000000), (2, 'How You Like That', 2020, 2, 'Hip-Hop', 500000000), (3, 'Love Shot', 2018, 3, 'Pop', 400000000), (4, 'Tum Hi Ho', 2013, 4, 'Bollywood', 200000000), (5, 'Dil Se Re', 1998, 5, 'Bollywood', 100000000), (6, 'ME!', 2019, 4, 'Pop', 700000000), (7, '7 Rings', 2019, 5, 'Pop', 600000000);", "output": "SELECT a.name FROM artists a JOIN (SELECT artist_id, AVG(streams) as avg_streams FROM songs WHERE year = 2019 GROUP BY artist_id) b ON a.id = b.artist_id WHERE b.avg_streams < (SELECT streams FROM songs s WHERE s.artist_id = b.artist_id AND s.year = 2019 ORDER BY streams DESC LIMIT 1);"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uad6d\ub9bd\uacf5\uc6d0\uc5d0\uc11c \uac01 \uc885\uc5d0 \ub300\ud574 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc57c\uc0dd\ub3d9\ubb3c \ubaa9\uaca9\uc774 \uae30\ub85d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE WildlifeSightings (ID INT, SightingDate DATE, Species VARCHAR(100), NationalPark VARCHAR(100), Observations INT); INSERT INTO WildlifeSightings (ID, SightingDate, Species, NationalPark, Observations) VALUES (1, '2022-01-01', 'Polar Bear', 'Ellesmere Island National Park', 20); INSERT INTO WildlifeSightings (ID, SightingDate, Species, NationalPark, Observations) VALUES (2, '2022-01-05', 'Arctic Fox', 'Torngat Mountains National Park', 15);", "output": "SELECT Species, NationalPark, COUNT(Observations) OVER (PARTITION BY Species, NationalPark ORDER BY Species, NationalPark ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS SightingsCount FROM WildlifeSightings WHERE SightingDate >= DATEADD(month, -1, GETDATE());"}
{"input": " \ud558\ub8e8 \ud3c9\uade0 \uc6b4\ub3d9 \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE members (member_id INT, age INT); CREATE TABLE workouts (workout_id INT, member_id INT, date DATE); INSERT INTO members VALUES (1,25),(2,30),(3,22); INSERT INTO workouts VALUES (1,1,'2022-01-01'),(2,1,'2022-01-01'),(3,2,'2022-01-02'),(4,3,'2022-01-03'),(5,3,'2022-01-03');", "output": "SELECT AVG(num_workouts_per_day) FROM (SELECT date, COUNT(*) AS num_workouts_per_day FROM workouts JOIN members ON workouts.member_id = members.member_id GROUP BY date) AS subquery;"}
{"input": " \uac01 \uc870\uc9c1\uc5d0\uc11c \uba87 \uac1c\uc758 \uc6b0\uc8fc\uc120\uc744 \uc81c\uc870\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Spacecraft (id INT, name VARCHAR(50), manufacturer VARCHAR(50), mass FLOAT); INSERT INTO Spacecraft (id, name, manufacturer, mass) VALUES (1, 'Voyager 1', 'SpaceCorp', 770.0), (2, 'Cassini', 'NASA', 5650.0), (3, 'InSight', 'JPL', 358.0), (4, 'Perseverance', 'NASA', 1025.0), (5, 'Curiosity', 'JPL', 899.0), (6, 'Galileo', 'NASA', 2223.0), (7, 'Mars Global Surveyor', 'JPL', 1130.0);", "output": "SELECT Spacecraft.manufacturer, COUNT(DISTINCT Spacecraft.id) FROM Spacecraft GROUP BY Spacecraft.manufacturer;"}
{"input": " 2021\ub144\uc5d0 \ub274\uc695\uc8fc \uc758\ub8cc \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd5c\ub300 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE service_budget (state VARCHAR(50), service VARCHAR(50), budget INT, budget_year INT); INSERT INTO service_budget (state, service, budget, budget_year) VALUES ('New York', 'Healthcare', 15000000, 2021), ('New York', 'Transportation', 10000000, 2021);", "output": "SELECT MAX(budget) FROM service_budget WHERE state = 'New York' AND service = 'Healthcare' AND budget_year = 2021;"}
{"input": " \uc6b4\uc1a1 \ubd80\ubb38\uc758 \ubaa8\ub4e0 \ud0c4\uc18c \uc0c1\uc1c4 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub300\ud55c \ud3c9\uade0 CO2 \ubc30\ucd9c \uac10\uc18c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_emission_reduction (id INT, sector VARCHAR(50), co2_emission_reduction_tonnes INT); INSERT INTO co2_emission_reduction (id, sector, co2_emission_reduction_tonnes) VALUES (1, 'Transportation', 1200), (2, 'Energy', 1500), (3, 'Industry', 1000), (4, 'Transportation', 1800), (5, 'Transportation', 1300);", "output": "SELECT AVG(co2_emission_reduction_tonnes) FROM co2_emission_reduction WHERE sector = 'Transportation';"}
{"input": " \ud68c\uc6d0 \uce74\ud14c\uace0\ub9ac\ubcc4 \ucd5c\ub300\uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE member_hr_categories (member_category VARCHAR(20), member_id INT, max_heart_rate INT); INSERT INTO member_hr_categories (member_category, member_id, max_heart_rate) VALUES ('Gold', 1, 170), ('Gold', 2, 180), ('Silver', 3, 165), ('Bronze', 4, 172), ('Bronze', 5, 175);", "output": "SELECT pivot_col, MAX(max_heart_rate) as max_heart_rate FROM (SELECT member_category AS pivot_col, max_heart_rate FROM member_hr_categories) GROUP BY pivot_col;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac8c\uc2dc\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790 \uc218\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), gender VARCHAR(10));CREATE TABLE posts (id INT PRIMARY KEY, user_id INT, content TEXT, created_at TIMESTAMP);", "output": "SELECT COUNT(DISTINCT user_id) FROM posts WHERE created_at >= NOW() - INTERVAL '30 days';"}
{"input": " \uc5f0\uad6c\uc790\ub2f9 \uc720\uc804 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uac1c\uc218\uc640 \ud574\ub2f9 \uc9c1\uae09\uc744 \uc804\uccb4 \ud504\ub85c\uc81d\ud2b8\ubcc4\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.research_projects (id INT PRIMARY KEY, researcher_id INT, name VARCHAR(255)); INSERT INTO genetics.research_projects (id, researcher_id, name) VALUES (1, 1, 'ProjectA'), (2, 2, 'ProjectB'), (3, 1, 'ProjectC'), (4, 3, 'ProjectD'), (5, 1, 'ProjectE'), (6, 4, 'ProjectF');", "output": "SELECT researcher_id, COUNT(*) AS total_projects, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank FROM genetics.research_projects WINDOW W AS (PARTITION BY researcher_id ORDER BY researcher_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) GROUP BY researcher_id, W.researcher_id ORDER BY rank;"}
{"input": " \uac01 \ubd80\uc11c\uc758 \uacbd\ucc30\uad00\uacfc \uc18c\ubc29\uad00\uc758 \ucd1d \uc218\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE divisions (did INT, name VARCHAR(255)); CREATE TABLE police_staff (sid INT, division_id INT, officer_count INT); CREATE TABLE fire_staff (sid INT, division_id INT, firefighter_count INT);", "output": "SELECT d.name, SUM(p.officer_count) AS total_officers, SUM(f.firefighter_count) AS total_firefighters FROM divisions d LEFT JOIN police_staff p ON d.did = p.division_id LEFT JOIN fire_staff f ON d.did = f.division_id GROUP BY d.name;"}
{"input": " \ud5a5\ud6c4 3\uac1c\uc6d4 \ub3d9\uc548 \uc720\uc9c0\ubcf4\uc218\uac00 \ud544\uc694\ud55c \uad70 \uc7a5\ube44 \uc720\ub2db\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uadf8\uc911 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc7a5\ube44 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_equipment (equipment_id INT, equipment_type VARCHAR(255), last_maintenance_date DATE, next_maintenance_date DATE, unit_id INT); CREATE TABLE unit (unit_id INT, unit_name VARCHAR(255));", "output": "SELECT e.equipment_type, COUNT(*) AS equipment_count FROM military_equipment e JOIN unit u ON e.unit_id = u.unit_id WHERE e.next_maintenance_date BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 MONTH) GROUP BY e.equipment_type ORDER BY equipment_count DESC LIMIT 1; SELECT COUNT(*) FROM military_equipment e JOIN unit u ON e.unit_id = u.unit_id WHERE e.next_maintenance_date BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 MONTH);"}
{"input": "ID\uac00 4\uc778 \ub18d\uc5c5\ud601\uc2e0 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ad\uc81c\ud558\uace0 \ub098\uba38\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 ID\uac00 \uc5f0\uc18d\ub418\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE agri_innovation_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), description VARCHAR(255), cost FLOAT); INSERT INTO agri_innovation_projects (id, project_name, location, description, cost) VALUES (1, 'Precision Agriculture', 'Village X', 'Implementing precision agriculture techniques', 35000.00), (2, 'Drip Irrigation', 'Village Y', 'Introducing drip irrigation systems', 28000.00), (3, 'Solar Powered Cold Storage', 'Village Z', 'Establishing solar powered cold storage units', 52000.00), (4, 'Organic Farming Training', 'Village W', 'Training farmers in organic farming practices', 22000.00);", "output": "WITH cte AS (DELETE FROM agri_innovation_projects WHERE id = 4) SELECT ROW_NUMBER() OVER (ORDER BY id) AS new_id, project_name, location, description, cost FROM agri_innovation_projects;"}
{"input": "\ub300\uc11c\uc591\uc758 \ucd5c\ub300 \ud574\uc591 \uc0b0\uc131\ud654 \uc218\uc900\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ocean_acidification (region TEXT, level REAL); INSERT INTO ocean_acidification (region, level) VALUES ('Atlantic Ocean', 8.2), ('Pacific Ocean', 8.1), ('Indian Ocean', 8.0);", "output": "SELECT MAX(level) FROM ocean_acidification WHERE region = 'Atlantic Ocean';"}
{"input": " \ud3c9\uade0 \uc608\uc0b0\ubcf4\ub2e4 \uc608\uc0b0\uc774 \ub354 \ub9ce\uc740 \ubd80\uc11c\uc758 \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Departments (DepartmentID INT, Name TEXT, Budget DECIMAL(10,2)); INSERT INTO Departments VALUES (1, 'Marketing', 50000.00), (2, 'Operations', 70000.00), (3, 'Research', 40000.00);", "output": "SELECT SUM(Budget) FROM Departments WHERE Budget > (SELECT AVG(Budget) FROM Departments);"}
{"input": " \ub2e8\uc77c \ucc44\uad74 \uc791\uc5c5\uc758 \ucd5c\uc18c \uc9c1\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (id INT PRIMARY KEY, operation_name VARCHAR(50), location VARCHAR(50), num_employees INT);", "output": "SELECT MIN(num_employees) FROM mining_operations;"}
{"input": " \ub18d\ucd0c \ubcf4\uac74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ubcd1\uc6d0\uacfc \uc9c4\ub8cc\uc18c \uc218\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE hospitals (id INT, name TEXT, location TEXT); INSERT INTO hospitals VALUES (1, 'Rural Hospital A', 'Rural Town A'); INSERT INTO hospitals VALUES (2, 'Rural Hospital B', 'Rural Town B'); CREATE TABLE clinics (id INT, name TEXT, location TEXT); INSERT INTO clinics VALUES (1, 'Rural Clinic A', 'Rural Town A'); INSERT INTO clinics VALUES (2, 'Rural Clinic B', 'Rural Town C');", "output": "SELECT COUNT(*) FROM hospitals EXCEPT SELECT COUNT(*) FROM clinics;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ud504\ub85c\uadf8\ub7a8\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, DonationDate DATE, DonationAmount DECIMAL(10,2), ProgramID INT); INSERT INTO Donations (DonationID, DonationDate, DonationAmount, ProgramID) VALUES (10, '2022-05-01', 550.00, 1), (11, '2022-05-15', 650.00, 1), (12, '2022-05-01', 750.00, 2), (13, '2022-05-15', 850.00, 2), (14, '2022-06-01', 950.00, 3);", "output": "SELECT ProgramID, SUM(DonationAmount) OVER (PARTITION BY ProgramID ORDER BY DonationDate ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) AS TotalDonationInLast3Months FROM Donations;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \uc804\uae30 \uc790\ub3d9\ucc28\ub97c \uc120\ubcf4\uc778 \uc790\ub3d9\ucc28 \uc1fc\ub294 \uba87 \ubc88\uc774\ub098 \ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE AutoShows (id INT, event_name VARCHAR(50), event_date DATE); INSERT INTO AutoShows (id, event_name, event_date) VALUES (1, 'Auto Show A', '2021-01-01');", "output": "SELECT COUNT(*) FROM AutoShows WHERE event_date >= DATEADD(year, -2, GETDATE()) AND event_name LIKE '%Electric%';"}
{"input": " \"\ubd81\uadf9\" \uc9c0\uc5ed\uc5d0\ub294 \uba87 \uac1c\uc758 3G \uae30\uc9c0\uad6d\uc774 \uc788\uc73c\uba70, \ucd1d \uc804\ub825 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE infrastructure (id INT, technology VARCHAR(10), region VARCHAR(10), state VARCHAR(10), power_consumption INT); INSERT INTO infrastructure (id, technology, region, state, power_consumption) VALUES (1, '3G', 'arctic', 'AK', 100), (2, '3G', 'arctic', 'AL', 120), (3, '4G', 'arctic', 'MT', 150);", "output": "SELECT technology, COUNT(*), SUM(power_consumption) FROM infrastructure WHERE technology = '3G' AND region = 'arctic' GROUP BY technology;"}
{"input": " \uac01 \uc8fc\uc5d0\uc11c \ubcd1\uc0c1\uc774 50\uac1c \ubbf8\ub9cc\uc778 \uc2dc\uace8 \ubcd1\uc6d0\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE hospitals (id INT, state CHAR(2), num_beds INT, rural BOOLEAN); INSERT INTO hospitals (id, state, num_beds, rural) VALUES (1, 'IL', 50, true), (2, 'CA', 100, false);", "output": "SELECT state, ROUND(100.0 * COUNT(*) / SUM(COUNT(*)) OVER (), 2) as pct FROM hospitals WHERE rural = true AND num_beds < 50 GROUP BY state;"}
{"input": " \ucd5c\ucd08 \uc608\uc0b0\uacfc \uac1c\uc815 \uc608\uc0b0\uc744 \ubaa8\ub450 \uace0\ub824\ud558\uc5ec 2022 \ud68c\uacc4\uc5f0\ub3c4\uc5d0 \ub85c\uc2a4\uc564\uc824\ub808\uc2a4 \uc2dc\uc758 \uad50\uc721 \ubc0f \uc758\ub8cc \uc11c\ube44\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE budget_allocation (city VARCHAR(255), service VARCHAR(255), fiscal_year INT, initial_budget DECIMAL(10,2), revised_budget DECIMAL(10,2)); INSERT INTO budget_allocation (city, service, fiscal_year, initial_budget, revised_budget) VALUES ('Los Angeles', 'Education', 2022, 5000000.00, 5500000.00), ('Los Angeles', 'Healthcare', 2022, 7000000.00, 7500000.00);", "output": "SELECT city, service, initial_budget + revised_budget as total_budget FROM budget_allocation WHERE city = 'Los Angeles' AND fiscal_year = 2022 AND service IN ('Education', 'Healthcare')"}
{"input": " 2022\ub144\uc5d0 '\ub274\uc695'\uc5d0\uc11c\ub294 \uba87 \uac1c\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uce58\uc548 \ud65c\ub3d9\uc774 \uc2e4\uc2dc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE community_policing (id INT, city VARCHAR(20), year INT, initiatives INT);", "output": "SELECT SUM(initiatives) FROM community_policing WHERE city = 'New York' AND year = 2022;"}
{"input": " '\uc2dc\uc560\ud2c0' \uc9c0\uc5ed\uc758 \uacf5\uae09\uc5c5\uccb4 '\uacf5\uc815 \ubb34\uc5ed \uacf5\uae09\uc5c5\uccb4'\uc5d0 \ub300\ud55c \uc0c8 \uae30\ub85d \uc0bd\uc785", "context": "CREATE TABLE Suppliers (id INT, name TEXT, region TEXT);", "output": "INSERT INTO Suppliers (id, name, region) VALUES ((SELECT COALESCE(MAX(id), 0) + 1 FROM Suppliers), 'Fair Trade Supplier', 'Seattle');"}
{"input": " \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54 \ubca0\uc774 \uc9c0\uc5ed\uc5d0\uc11c \uac00\uc7a5 \uc800\ub834\ud55c \uacf5\ub3d9 \uc18c\uc720 \ubd80\ub3d9\uc0b0 \uc0c1\uc704 3\uac1c\ub97c \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE co_owned_properties (property_id INT, price DECIMAL(10,2), size INT, city VARCHAR(50), num_owners INT); INSERT INTO co_owned_properties (property_id, price, size, city, num_owners) VALUES (1, 700000, 1500, 'San Francisco', 2), (2, 800000, 2000, 'San Francisco', 4), (3, 450000, 1000, 'Oakland', 3);", "output": "SELECT * FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY price/size) rn FROM co_owned_properties WHERE city = 'San Francisco') t WHERE rn <= 3;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 '\uc804\uc790\uc81c\ud488' \uc81c\ud488 \uce74\ud14c\uace0\ub9ac\uc5d0 \ub300\ud574 \ud504\ub791\uc2a4\uc640 \ub3c5\uc77c \uc0ac\uc6a9\uc790\ub85c\ubd80\ud130 \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(255), category VARCHAR(255)); INSERT INTO products (product_id, product_name, category) VALUES (1, 'Laptop 1', 'electronics'), (2, 'Phone 1', 'electronics'); CREATE TABLE users (user_id INT, user_country VARCHAR(255)); INSERT INTO users (user_id, user_country) VALUES (1, 'France'), (2, 'Germany'); CREATE TABLE orders (order_id INT, user_id INT, product_id INT, order_date DATE, revenue DECIMAL(10, 2)); INSERT INTO orders (order_id, user_id, product_id, order_date, revenue) VALUES (1, 1, 1, '2022-04-01', 800), (2, 2, 1, '2022-04-05', 900);", "output": "SELECT SUM(revenue) FROM orders o JOIN products p ON o.product_id = p.product_id JOIN users u ON o.user_id = u.user_id WHERE u.user_country IN ('France', 'Germany') AND p.category = 'electronics' AND o.order_date BETWEEN '2022-04-01' AND '2022-06-30';"}
{"input": " 2022\ub144 2\uc6d4 \uc2dc\ub4dc\ub2c8\uc758 \ud3c9\uade0 \ud48d\uc18d\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weather (id INT, city VARCHAR(50), temperature FLOAT, wind_speed FLOAT, timestamp TIMESTAMP); INSERT INTO weather (id, city, temperature, wind_speed, timestamp) VALUES (1, 'Sydney', 70.2, 12.5, '2022-02-01 10:00:00'); INSERT INTO weather (id, city, temperature, wind_speed, timestamp) VALUES (2, 'Sydney', 72.1, 14.3, '2022-02-02 10:00:00');", "output": "SELECT AVG(wind_speed) as avg_wind_speed FROM weather WHERE city = 'Sydney' AND timestamp BETWEEN '2022-02-01 00:00:00' AND '2022-02-28 23:59:59';"}
{"input": "\ubca0\ub97c\ub9b0\uc5d0\uc11c \ud720\uccb4\uc5b4\ub85c \uc774\uc6a9 \uac00\ub2a5\ud55c \ud2b8\ub7a8\uc5d0 \ub300\ud574 \ud2b8\ub7a8 \ub178\uc120\ubcc4\ub85c \uc9d5\uc218\ub418\ub294 \ucd1d \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE tram_trips (trip_id INT, start_time TIMESTAMP, end_time TIMESTAMP, trip_distance FLOAT, fare FLOAT, wheelchair_accessible BOOLEAN, tram_line INT);", "output": "SELECT tram_line, SUM(fare) FROM tram_trips WHERE wheelchair_accessible = TRUE GROUP BY tram_line;"}
{"input": " \ud558\ub8e8 \ud3c9\uade0 \ud55c \ubc88 \uc774\uc0c1 \uac8c\uc2dc\ubb3c\uc744 \uc62c\ub9b0 \uc0ac\uc6a9\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, user_name VARCHAR(50)); INSERT INTO users (user_id, user_name) VALUES (1001, 'user1'), (1002, 'user2'), (1003, 'user3'), (1004, 'user4');", "output": "SELECT user_id, user_name, AVG(post_count) as avg_posts_per_day FROM (SELECT user_id, user_name, post_date, COUNT(*) as post_count FROM posts JOIN users ON posts.user_id = users.user_id GROUP BY post_date, user_id) as subquery GROUP BY user_id, user_name HAVING AVG(post_count) > 1;"}
{"input": " \uae30\ubd80\ub97c \ubc1b\uc9c0 \ubabb\ud55c \uc9c0\uc5ed\uc0ac\ud68c \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE if NOT EXISTS community_education (program_id INT, program_name VARCHAR(50), donation_count INT); INSERT INTO community_education (program_id, program_name, donation_count) VALUES (1, 'Wildlife Conservation 101', 500); INSERT INTO community_education (program_id, program_name, donation_count) VALUES (2, 'Endangered Species Awareness', 300); INSERT INTO community_education (program_id, program_name, donation_count) VALUES (3, 'Habitat Protection Techniques', 0);", "output": "SELECT program_name FROM community_education WHERE donation_count = 0;"}
{"input": " \uace0\uac1d \uc778\uad6c\ud1b5\uacc4\uc758 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Clients (ClientID int, Age int, Gender varchar(10), Income decimal(10,2)); INSERT INTO Clients VALUES (1, 30, 'Male', 50000.00), (2, 45, 'Female', 75000.00), (3, 60, 'Non-binary', 60000.00);", "output": "SELECT Gender, COUNT(*) as Count, AVG(Age) as AverageAge, AVG(Income) as AverageIncome FROM Clients GROUP BY Gender;"}
{"input": " '\ubc14\uc774\ub0b8\uc2a4' \ub124\ud2b8\uc6cc\ud06c\uc758 \ucd1d NFT \uac70\ub798 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE blockchain (id INT, network VARCHAR(20), tx_type VARCHAR(20), tx_count INT); INSERT INTO blockchain (id, network, tx_type, tx_count) VALUES (1, 'binance', 'NFT', 1000);", "output": "SELECT SUM(tx_count) FROM blockchain WHERE network = 'binance' AND tx_type = 'NFT';"}
{"input": " \ubcc0\ud638\uc0ac\ubcc4\ub85c \uad6c\ubd84\ub41c \uc0ac\uac74\ub2f9 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CaseBilling (CaseID int, AttorneyID int, BillingAmount decimal(10,2)); INSERT INTO CaseBilling (CaseID, AttorneyID, BillingAmount) VALUES (1, 1, 1000.00), (2, 1, 2000.00), (3, 2, 3000.00);", "output": "SELECT AttorneyID, AVG(BillingAmount) OVER (PARTITION BY AttorneyID) AS AvgBillingPerCase FROM CaseBilling;"}
{"input": "\ub9e4\ub144 \uc232\uc5d0\uc11c \uc218\ud655\ub418\ub294 \ubaa9\uc7ac\uc758 \ucd5c\ub300\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE forests (id INT, year INT, volume FLOAT); INSERT INTO forests (id, year, volume) VALUES (1, 2010, 1200.5), (2, 2011, 1500.3), (3, 2010, 800.2), (4, 2011, 900.1);", "output": "SELECT year, MAX(volume) FROM forests GROUP BY year;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ubcc0\ud638\uc0ac\ubcc4 \uc2b9\uc18c\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Wins ( CaseID INT, AttorneyID INT, Region VARCHAR(50), CaseOutcome VARCHAR(50) ); INSERT INTO Wins (CaseID, AttorneyID, Region, CaseOutcome) VALUES (1, 1, 'Northeast', 'Won'), (2, 1, 'Northeast', 'Lost'), (3, 2, 'Northeast', 'Won'), (4, 2, 'Northeast', 'Won'), (5, 3, 'Midwest', 'Won'), (6, 3, 'Midwest', 'Lost'), (7, 4, 'Southwest', 'Won'), (8, 4, 'Southwest', 'Won'), (9, 5, 'West', 'Lost'), (10, 5, 'West', 'Lost');", "output": "SELECT a.Name AS AttorneyName, a.Region AS Region, COUNT(w.CaseID) * 100.0 / SUM(COUNT(w.CaseID)) OVER (PARTITION BY a.Region) AS WinRate FROM Attorneys a JOIN Wins w ON a.AttorneyID = w.AttorneyID GROUP BY a.Name, a.Region;"}
{"input": " \uc720\ub7fd \uc5f0\ud569 \uac00\uc804\uc81c\ud488\uc758 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE eu_appliances (id INT, country VARCHAR(255), name VARCHAR(255), energy_efficiency_rating FLOAT); INSERT INTO eu_appliances (id, country, name, energy_efficiency_rating) VALUES (1, 'France', 'Appliance A', 3.5), (2, 'Germany', 'Appliance B', 4.2), (3, 'Italy', 'Appliance C', 3.9);", "output": "SELECT AVG(energy_efficiency_rating) FROM eu_appliances WHERE country IN (SELECT name FROM countries WHERE region = 'European Union');"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548\uc758 \uc77c\uc77c \ucd1d \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (transaction_date DATE, transaction_value DECIMAL(10, 2)); INSERT INTO transactions (transaction_date, transaction_value) VALUES ('2022-01-01', 500.00), ('2022-01-02', 750.00), ('2022-01-03', 3000.00), ('2022-01-04', 15000.00), ('2022-01-05', 200.00), ('2022-01-06', 1200.00), ('2022-01-07', 800.00);", "output": "SELECT transaction_date, SUM(transaction_value) as total_transaction_value FROM transactions WHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY transaction_date;"}
{"input": " \uac01 \uc704\uce58\uc758 \ud3c9\uade0 \ud3c9\uc810\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE location_ratings (location_name VARCHAR(50), rating NUMERIC(3, 2)); INSERT INTO location_ratings (location_name, rating) VALUES ('San Francisco', 4.2), ('New York', 3.9), ('Los Angeles', 4.5);", "output": "SELECT location_name, AVG(rating) AS avg_rating FROM location_ratings GROUP BY location_name;"}
{"input": " \uad6d\uac00\ubcc4, \uc5f0\ub3c4\ubcc4 \ud574\uc800 \ub9e4\ud551 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.", "context": "CREATE SCHEMA oceans;CREATE TABLE oceans.mapping_projects_by_year (id INT PRIMARY KEY, country VARCHAR(50), year INT, num_projects INT); INSERT INTO oceans.mapping_projects_by_year (id, country, year, num_projects) VALUES (1, 'Canada', 2020, 2), (2, 'Mexico', 2020, 1);", "output": "SELECT context.country, context.year, SUM(context.num_projects) FROM oceans.mapping_projects_by_year AS context GROUP BY context.country, context.year;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uac01 \uae30\ubd80\uc790\uc758 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donors (DonorID INT, Name TEXT, TotalDonation DECIMAL(10,2)); INSERT INTO Donors (DonorID, Name, TotalDonation) VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 3500.00);", "output": "SELECT Name, SUM(TotalDonation) FROM Donors WHERE DonationDate >= DATEADD(year, -1, GETDATE()) GROUP BY Name;"}
{"input": "\uce98\ub9ac\ud3ec\ub2c8\uc544, \ud14d\uc0ac\uc2a4, \ub274\uc695\uc5d0\uc11c 1\uc5b5 \ub2ec\ub7ec \uc774\uc0c1 \ud22c\uc790\ud55c \ud0dc\uc591\uad11 \ubc1c\uc804 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE solar_power_projects (id INT, name TEXT, state TEXT, investment_usd FLOAT); INSERT INTO solar_power_projects (id, name, state, investment_usd) VALUES (1, 'Solar Star', 'California', 2560.0);", "output": "SELECT COUNT(*) FROM solar_power_projects WHERE state IN ('California', 'Texas', 'New York') AND investment_usd > 100000000.0;"}
{"input": " \uc720\ub7fd\uc5d0\uc11c \uc0ac\ud68c \ubcf5\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucc38\uc5ec\ud558\ub294 \uc870\uc9c1\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE org_social (org_id INT, org_name TEXT, initiative TEXT); INSERT INTO org_social (org_id, org_name, initiative) VALUES (1, 'OrgG', 'social good'), (2, 'OrgH', 'ethical AI'), (3, 'OrgI', 'social good');", "output": "SELECT org_name FROM org_social WHERE initiative = 'social good' AND region = 'Europe';"}
{"input": " \uc720\uae30\ub18d \uc778\uc99d\uacfc \ud560\ub784 \uc778\uc99d\uc744 \ubaa8\ub450 \ubc1b\uc740 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488\uc758 \uc218\ub97c \ud45c\uc2dc\ud558\uc138\uc694.", "context": "CREATE TABLE products (product_id INT, product_name VARCHAR(50), product_type VARCHAR(20), halal_certified BOOLEAN); INSERT INTO products (product_id, product_name, product_type, halal_certified) VALUES (1, 'moisturizer', 'skincare', true), (2, 'cleanser', 'skincare', false), (3, 'sunscreen', 'skincare', true), (4, 'toner', 'skincare', false); INSERT INTO products (product_id, product_name, product_type, halal_certified) VALUES (5, 'organic moisturizer', 'skincare', true), (6, 'organic cleanser', 'skincare', false), (7, 'organic sunscreen', 'skincare', true), (8, 'organic toner', 'skincare', false);", "output": "SELECT COUNT(*) FROM products WHERE product_type = 'skincare' AND halal_certified = true AND product_name LIKE 'organic%';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc5d0\uc11c \ud314\ub85c\uc6cc \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 5\uba85\uc758 \ucf58\ud150\uce20 \ud06c\ub9ac\uc5d0\uc774\ud130\ub294 \ub204\uad6c\uc774\uba70, \ud314\ub85c\uc6cc \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE content_creators (id INT, name VARCHAR(255), country VARCHAR(255), followers INT);", "output": "SELECT name, followers FROM (SELECT name, followers, ROW_NUMBER() OVER (ORDER BY followers DESC) as rank FROM content_creators WHERE country IN ('Nigeria', 'South Africa', 'Egypt', 'Kenya', 'Ghana') ) subquery WHERE rank <= 5;"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc8fc\ubcc4 \uc815\uc2e0 \uac74\uac15 \ud3c9\ub4f1 \uc704\ubc18 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_parity (state VARCHAR(2), violations INT, date DATE); INSERT INTO mental_health_parity (state, violations, date) VALUES ('CA', 25, '2021-01-01'), ('NY', 30, '2021-01-01'), ('TX', 15, '2021-01-01'), ('CA', 24, '2021-02-01'), ('NY', 31, '2021-02-01'), ('TX', 16, '2021-02-01');", "output": "SELECT state, violations, date, AVG(violations) OVER (PARTITION BY state ORDER BY date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as running_avg FROM mental_health_parity;"}
{"input": "\uc544\ud504\ub9ac\uce74\uc758 \uac1c\uc778\uacfc \ub2e8\uccb4\uac00 \uae30\uc99d\ud55c \uc804\ud1b5 \uc608\uc220 \uc791\ud488\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donor VARCHAR(50), item VARCHAR(50), location VARCHAR(50), quantity INT); INSERT INTO Donations (id, donor, item, location, quantity) VALUES (1, 'John Doe', 'Painting', 'Nigeria', 3), (2, 'Jane Smith', 'Sculpture', 'Kenya', 5), (3, 'ABC Corp', 'Ceramics', 'Egypt', 7);", "output": "SELECT SUM(quantity) FROM Donations WHERE location LIKE 'Africa%';"}
{"input": " \uc9c0\ub09c 3\ubc88\uc758 \uc5f0\uc18d \uac70\ub798\uc5d0\uc11c \uc794\uc561\uc774 \uc99d\uac00\ud55c \uace0\uac1d\uc744 \uacc4\uc815 \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2), transaction_date DATE);", "output": "SELECT customer_id, account_type, balance FROM (SELECT customer_id, account_type, balance, transaction_date, LAG(balance, 2) OVER (PARTITION BY customer_id, account_type ORDER BY transaction_date) AS lag_balance_2 FROM accounts) AS lagged_accounts WHERE balance > lag_balance_2;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID int, VolunteerName varchar(50), Region varchar(50), SignUpDate date);", "output": "SELECT Region, COUNT(*) AS NumberOfVolunteers, DATE_TRUNC('month', SignUpDate) AS Month FROM Volunteers WHERE SignUpDate >= CURRENT_DATE - INTERVAL '6 months' GROUP BY Region, Month ORDER BY Month;"}
{"input": " \uac01 'building_type'\uc5d0 \ub300\ud55c green_buildings\uc758 \ud3c9\uade0 'construction_year'\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE green_buildings (property_id INT, building_type TEXT, construction_year INT); INSERT INTO green_buildings VALUES (1, 'Apartment', 2010), (2, 'House', 2005), (3, 'Townhouse', 2015)", "output": "SELECT building_type, AVG(construction_year) AS avg_construction_year FROM green_buildings GROUP BY building_type;"}
{"input": " 2020\ub144 \uc0c1\ud30c\uc6b8\ub8e8\uc758 \ubb3c\uc9c8 \uc720\ud615\ubcc4 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE waste_generation(city VARCHAR(20), material VARCHAR(20), quantity INT); INSERT INTO waste_generation VALUES('Sao Paulo', 'Plastic', 12000), ('Sao Paulo', 'Paper', 18000), ('Sao Paulo', 'Glass', 8000);", "output": "SELECT material, SUM(quantity) as total_waste FROM waste_generation WHERE city = 'Sao Paulo' AND YEAR(event_date) = 2020 GROUP BY material;"}
{"input": " ID\uac00 2\uc778 \uad11\uc0b0\uc5d0 \ube44\ud574 \ucd1d \uc0dd\uc0b0\ub7c9\uc774 \ub354 \ub192\uc740 \uad11\uc0b0\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mining_operations (id INT, mine_name VARCHAR(255), location VARCHAR(255), extraction_type VARCHAR(255), production INT); INSERT INTO mining_operations (id, mine_name, location, extraction_type, production) VALUES (1, 'Copper Mine', 'Arizona, USA', 'Open Pit', 12000), (2, 'Gold Mine', 'Ontario, Canada', 'Underground', 5000), (3, 'Iron Mine', 'Minnesota, USA', 'Open Pit', 32000), (4, 'Gold Mine 2', 'Quebec, Canada', 'Underground', 6000), (5, 'Emerald Mine', 'Boyaca, Colombia', 'Open Pit', 3000);", "output": "SELECT mine_name, SUM(production) as total_production FROM mining_operations WHERE SUM(production) > (SELECT SUM(production) FROM mining_operations WHERE id = 2) GROUP BY mine_name;"}
{"input": " '\ub0a8\ubbf8'\uc758 '\uacbd\uc81c \ub2e4\uac01\ud654' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud558\ub294 \ub18d\ubd80\ub4e4\uc774 \uc18c\uc720\ud55c \ud1a0\uc9c0\uc758 \ucd5c\uc18c, \ucd5c\ub300, \ud3c9\uade0 \uc5d0\uc774\ucee4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Economic_Diversification(farmer_id INT, farmer_name VARCHAR(50), country VARCHAR(50), acres_owned FLOAT); INSERT INTO Economic_Diversification(farmer_id, farmer_name, country, acres_owned) VALUES (1, 'Pedro Alvarez', 'Brazil', 500), (2, 'Mariana Gonzales', 'Colombia', 750);", "output": "SELECT MIN(acres_owned) as min_acres_owned, MAX(acres_owned) as max_acres_owned, AVG(acres_owned) as avg_acres_owned FROM Economic_Diversification WHERE country = 'South America';"}
{"input": " \ub274\uc695\uacfc \ub7f0\ub358\uc5d0\uc11c \uacf5\uc5f0\ud55c \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE concerts (id INT, country VARCHAR(255), city VARCHAR(255), artist_name VARCHAR(255), tier VARCHAR(255), price DECIMAL(10,2), num_tickets INT); CREATE VIEW artist_cities AS SELECT artist_name, city FROM concerts;", "output": "SELECT artist_name FROM artist_cities WHERE city IN ('New York', 'London') GROUP BY artist_name HAVING COUNT(DISTINCT city) = 2;"}
{"input": " Parcel_id 15\uc5d0 \ub300\ud574 \ud1a0\uc591 \uc218\ubd84 \ud310\ub3c5\uac12\uc744 3% \ub298\ub9bd\ub2c8\ub2e4.", "context": "CREATE TABLE soil_moisture_data (parcel_id INT, moisture FLOAT, timestamp TIMESTAMP); INSERT INTO soil_moisture_data (parcel_id, moisture, timestamp) VALUES (15, 48.2, '2022-05-22 10:00:00');", "output": "WITH updated_data AS (UPDATE soil_moisture_data SET moisture = moisture + (moisture * 0.03) WHERE parcel_id = 15 RETURNING *) SELECT * FROM updated_data;"}
{"input": " \ud2b9\uc815 \uc704\uce58\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uace0\uac1d\uc758 \ucd1d \ubb3c \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE total_consumption (consumption_id INT, customer_id INT, location VARCHAR(255), consumption_amount FLOAT); INSERT INTO total_consumption (consumption_id, customer_id, location, consumption_amount) VALUES (1, 1, 'New York', 100), (2, 2, 'New York', 120), (3, 3, 'Los Angeles', 150);", "output": "SELECT location, SUM(consumption_amount) FROM total_consumption GROUP BY location;"}
{"input": " \ub3d9\ubd80 \uc9c0\uc5ed\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uba54\ub274 \ud56d\ubaa9\uc5d0 \ub300\ud55c \ud310\ub9e4 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE orders (order_id INT, order_date DATE, region VARCHAR(50)); CREATE TABLE order_details (order_id INT, menu_id INT, quantity_sold INT); CREATE TABLE menu (menu_id INT, menu_name VARCHAR(255), is_sustainable BOOLEAN, price DECIMAL(5,2)); INSERT INTO orders (order_id, order_date, region) VALUES (1, '2022-01-01', 'East'), (2, '2022-01-02', 'West'), (3, '2022-01-03', 'East'); INSERT INTO order_details (order_id, menu_id, quantity_sold) VALUES (1, 1, 10), (1, 2, 5), (2, 2, 8), (2, 3, 12), (3, 4, 20); INSERT INTO menu (menu_id, menu_name, is_sustainable, price) VALUES (1, 'Quinoa Salad', TRUE, 10.50), (2, 'Margherita Pizza', FALSE, 12.00), (3, 'Vegetable Curry', TRUE, 11.25), (4, 'Beef Burger', FALSE, 13.50);", "output": "SELECT (SUM(od.quantity_sold * m.price) / (SELECT SUM(od.quantity_sold * m.price) FROM order_details od JOIN menu m ON od.menu_id = m.menu_id WHERE od.order_id = orders.order_id)) * 100.0 AS percentage_sales FROM orders JOIN order_details od ON orders.order_id = od.order_id JOIN menu m ON od.menu_id = m.menu_id WHERE is_sustainable = TRUE AND region = 'East';"}
{"input": " \ud2b9\uc815 \uc0c1\ud488\uc5d0 \ub300\ud574 \uac00\uc7a5 \ub9ce\uc740 \ub9e4\ucd9c\uc744 \uc62c\ub9b0 \uc601\uc5c5\uc0ac\uc6d0\uc744 \uc2dd\ubcc4\ud558\uc5ec \uc601\uc5c5\uc0ac\uc6d0, \uc0c1\ud488, \ud310\ub9e4\uae08\uc561\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales_person_data (salesperson VARCHAR(20), product VARCHAR(20), sales_amount DECIMAL(10,2)); INSERT INTO sales_person_data VALUES ('John', 'Laptop', 1200.00), ('John', 'Phone', 500.00), ('Jane', 'Phone', 300.00), ('Jane', 'Tablet', 800.00), ('John', 'Tablet', 600.00);", "output": "SELECT salesperson, product, MAX(sales_amount) AS max_sales FROM sales_person_data GROUP BY product;"}
{"input": "\uc9c0\ub09c \ub2ec\uc5d0 \ub871\ube44\uce58 \ub610\ub294 \uc2dc\uc560\ud2c0 \ud56d\uad6c\uc5d0 \ub3c4\ucc29\ud55c \uc120\ubc15\uc744 \ub3c4\ucc29 \ub0a0\uc9dc \ubc0f \uc6b4\ubc18\ud55c \ucee8\ud14c\uc774\ub108 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE ports (id INT, name VARCHAR(50)); INSERT INTO ports (id, name) VALUES (1, 'Oakland'), (2, 'Long Beach'), (3, 'Los Angeles'), (4, 'Seattle'); CREATE TABLE vessels (id INT, name VARCHAR(50), port_id INT, arrival_date DATE, num_containers INT); INSERT INTO vessels (id, name, port_id, arrival_date, num_containers) VALUES (1, 'Vessel1', 1, '2021-08-01', 1000), (2, 'Vessel2', 2, '2021-08-03', 1200), (3, 'Vessel3', 4, '2021-08-05', 1500), (4, 'Vessel4', 3, '2021-08-07', 1800);", "output": "SELECT name, arrival_date, num_containers FROM vessels WHERE port_id IN (2, 4) AND arrival_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc \ubd84\uae30\uc758 \uc9c0\uc5ed\ubcc4 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE regions (region_id INT, region_name VARCHAR(50)); INSERT INTO regions (region_id, region_name) VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West'); CREATE TABLE mobile_subscribers (subscriber_id INT, region_id INT, join_date DATE); INSERT INTO mobile_subscribers (subscriber_id, region_id, join_date) VALUES (1, 1, '2021-01-01'), (2, 2, '2021-03-01'), (3, 3, '2021-02-01'), (4, 4, '2021-04-01'); CREATE TABLE broadband_subscribers (subscriber_id INT, region_id INT, join_date DATE); INSERT INTO broadband_subscribers (subscriber_id, region_id, join_date) VALUES (5, 1, '2021-01-15'), (6, 2, '2021-03-15'), (7, 3, '2021-02-15'), (8, 4, '2021-04-15');", "output": "SELECT r.region_name, COUNT(m.subscriber_id) AS mobile_count, COUNT(b.subscriber_id) AS broadband_count FROM regions r LEFT JOIN mobile_subscribers m ON r.region_id = m.region_id LEFT JOIN broadband_subscribers b ON r.region_id = b.region_id WHERE QUARTER(m.join_date) = QUARTER(CURRENT_DATE()) AND YEAR(m.join_date) = YEAR(CURRENT_DATE()) GROUP BY r.region_id;"}
{"input": " \uc608\uc0b0\uc744 \ucd08\uacfc\ud558\ub294 \uae30\ubd80\uae08\uc774 \ubc1c\uc0dd\ud55c \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (DonationID INT, ProgramID INT, DonationAmount DECIMAL(5,2)); INSERT INTO Donations (DonationID, ProgramID, DonationAmount) VALUES (1, 1, 5500.00), (2, 2, 6000.00), (3, 3, 7000.00);", "output": "SELECT p.ProgramName, (p.Budget - d.TotalDonations) as Difference FROM Programs p JOIN (SELECT ProgramID, SUM(DonationAmount) as TotalDonations FROM Donations GROUP BY ProgramID) d ON p.ProgramID = d.ProgramID WHERE Difference < 0;"}
{"input": "\uc791\ub144\uc5d0 \uc6b0\ub9ac \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc18c\uc678\ub41c \uc9c0\uc5ed\uc0ac\ud68c\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (id INT, volunteer_name TEXT, community TEXT, participation_date DATE); INSERT INTO Volunteers (id, volunteer_name, community, participation_date) VALUES (1, 'Jamila Green', 'African American', '2022-02-05');", "output": "SELECT community, COUNT(*) as num_volunteers FROM Volunteers WHERE participation_date >= DATEADD(year, -1, GETDATE()) AND community IN ('African American', 'Hispanic', 'Indigenous', 'LGBTQ+', 'Persons with Disabilities') GROUP BY community;"}
{"input": " \ube0c\ub79c\ub4dc\ubcc4\ub85c \ud310\ub9e4\ub41c \ud558\uc774\ube0c\ub9ac\ub4dc \ucc28\ub7c9\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE vehicles_sold (vehicle_id INT, vehicle_type VARCHAR(20), brand VARCHAR(20), num_sold INT); INSERT INTO vehicles_sold VALUES (1, 'Hybrid', 'Toyota', 10000), (2, 'Electric', 'Tesla', 12000), (3, 'Hybrid', 'Honda', 8000), (4, 'Gasoline', 'Ford', 9000), (5, 'Hybrid', 'Hyundai', 7000);", "output": "SELECT brand, (COUNT(*) FILTER (WHERE vehicle_type = 'Hybrid')::FLOAT / COUNT(*)) * 100 FROM vehicles_sold GROUP BY brand;"}
{"input": " \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud504\ub85c\uadf8\ub7a8 \ubc94\uc8fc\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Program TEXT); CREATE TABLE VolunteerHours (VolunteerID INT, Hours INT); CREATE TABLE Programs (Program TEXT, Category TEXT);", "output": "SELECT P.Category, COUNT(V.VolunteerID) as NumVolunteers, SUM(VH.Hours) as TotalHours  FROM Volunteers V JOIN VolunteerHours VH ON V.VolunteerID = VH.VolunteerID JOIN Programs P ON V.Program = P.Program GROUP BY P.Category ORDER BY NumVolunteers DESC;"}
{"input": " 3\uc0c1 \uc784\uc0c1 \uc2dc\ud5d8\uc5d0\uc11c \ud14c\uc2a4\ud2b8\ub418\uc5c8\uc9c0\ub9cc \uc544\uc9c1 \uc5b4\ub290 \uad6d\uac00\uc5d0\uc11c\ub3c4 \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \uc57d\ubb3c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE drugs (id INT PRIMARY KEY, name VARCHAR(255), manufacturer VARCHAR(255), category VARCHAR(255)); INSERT INTO drugs (id, name, manufacturer, category) VALUES (1, 'DrugA', 'Manufacturer1', 'Cardiovascular'); CREATE TABLE clinical_trials (id INT PRIMARY KEY, name VARCHAR(255), drug_id INT, phase VARCHAR(10), start_date DATE, end_date DATE, FOREIGN KEY (drug_id) REFERENCES drugs(id)); INSERT INTO clinical_trials (id, name, drug_id, phase, start_date, end_date) VALUES (1, 'TrialA', 1, 'Phase III', '2020-01-01', '2020-12-31'); CREATE TABLE market_access (id INT PRIMARY KEY, drug_id INT, country VARCHAR(255), approval_date DATE, FOREIGN KEY (drug_id) REFERENCES drugs(id));", "output": "SELECT drugs.name FROM drugs LEFT JOIN market_access ON drugs.id = market_access.drug_id WHERE drugs.id IN (SELECT clinical_trials.drug_id FROM clinical_trials WHERE clinical_trials.phase = 'Phase III') AND market_access.id IS NULL;"}
{"input": " \ud638\uc8fc\uc640 \ub274\uc9c8\ub79c\ub4dc \ucc3d\uace0\uc5d0 \uc788\ub294 \ubb3c\ud488\uc740 \ubaa8\ub450 \ud569\uce58\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Warehouse (id INT, country VARCHAR(255), items_quantity INT); INSERT INTO Warehouse (id, country, items_quantity) VALUES (1, 'Australia', 300), (2, 'New Zealand', 200), (3, 'USA', 400);", "output": "SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'Australia' INTERSECT SELECT SUM(items_quantity) FROM Warehouse WHERE country = 'New Zealand';"}
{"input": " '\uc2dc\uce74\uace0' \uc0ac\ubb34\uc2e4\uc758 \uac01 \ubcc0\ud638\uc0ac\uac00 \ub300\ud45c\ud558\ub294 \uace0\uc720 \uace0\uac1d \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE attorneys (attorney_id INT, attorney_name VARCHAR(20), office_id INT); INSERT INTO attorneys (attorney_id, attorney_name, office_id) VALUES (101, 'Smith', 1), (102, 'Johnson', 1), (103, 'Williams', 2); CREATE TABLE cases (case_id INT, client_id INT, attorney_id INT, office_id INT); INSERT INTO cases (case_id, client_id, attorney_id, office_id) VALUES (1, 1000, 101, 1), (2, 1001, 101, 1), (3, 1002, 102, 1);", "output": "SELECT a.attorney_name, COUNT(DISTINCT c.client_id) FROM attorneys a JOIN cases c ON a.attorney_id = c.attorney_id JOIN offices o ON a.office_id = o.office_id WHERE o.office_name = 'Chicago' GROUP BY a.attorney_name;"}
{"input": "\uc9c0\ub09c 1\ub144\uac04 \uc774\ub3d9\ud1b5\uc2e0\uc0ac\ubcc4 \ub85c\ubc0d\uc694\uae08\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE roaming_fees (fee_id INT, fee_amount NUMERIC, operator_name VARCHAR(50), fee_date DATE); INSERT INTO roaming_fees (fee_id, fee_amount, operator_name, fee_date) VALUES (1, 50, 'AT&T', '2023-02-01'), (2, 75, 'Verizon', '2023-02-01'), (3, 100, 'T-Mobile', '2023-02-01'), (4, 125, 'Sprint', '2023-02-01');", "output": "SELECT operator_name, SUM(fee_amount) as total_roaming_fees, ROW_NUMBER() OVER (ORDER BY SUM(fee_amount) DESC) as roaming_fees_rank FROM roaming_fees WHERE fee_date >= CURRENT_DATE - INTERVAL '1 year' GROUP BY operator_name;"}
{"input": " \uac01 \ub808\uc2a4\ud1a0\ub791\uc758 \uc77c\uc77c \ud3c9\uade0 \uc218\uc775\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Restaurants (RestaurantID int, RestaurantName varchar(255)); INSERT INTO Restaurants (RestaurantID, RestaurantName) VALUES (1, 'Mama Mia'), (2, 'Taqueria Los Compadres'), (3, 'Wok Express'); CREATE TABLE Sales (SaleID int, RestaurantID int, Revenue decimal(10,2), SaleDate date); INSERT INTO Sales (SaleID, RestaurantID, Revenue, SaleDate) VALUES (1, 1, 500.00, '2022-01-01'), (2, 2, 750.00, '2022-01-02'), (3, 3, 300.00, '2022-01-03');", "output": "SELECT R.RestaurantName, AVG(S.Revenue/DATEDIFF('day',S.SaleDate,LEAD(S.SaleDate) OVER (PARTITION BY R.RestaurantID ORDER BY S.SaleDate))) as AvgRevenuePerDay FROM Restaurants R INNER JOIN Sales S ON R.RestaurantID = S.RestaurantID GROUP BY R.RestaurantID;"}
{"input": " 2022\ub144 '\uc0ac\uc6b0\uc2a4\uc0ac\uc774\ub4dc'\uc640 '\ub2e4\uc6b4\ud0c0\uc6b4' \uc9c0\uc5ed\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uc548\uc804 \ucc38\uc5ec\uc790 \ud3c9\uade0\uc740 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE Community_Safety (id INT PRIMARY KEY, safety_initiative VARCHAR(50), neighborhood VARCHAR(50), date DATE, participants INT);", "output": "SELECT neighborhood, AVG(participants) as avg_participants FROM Community_Safety WHERE neighborhood IN ('Southside', 'Downtown') AND date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY neighborhood;"}
{"input": "\ud2b9\uc815 \ub0a0\uc9dc \ubc94\uc704\uc5d0 \ub300\ud55c \uc9c0\uc5ed\ubcc4 \ubc94\uc8c4 \uc0ac\uac74 \ubc0f \uae34\uae09 \ud1b5\ud654 \uac74\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE districts (did INT, district_name VARCHAR(255)); INSERT INTO districts (did, district_name) VALUES (1, 'Downtown'), (2, 'Uptown'), (3, 'Harbor'); CREATE TABLE crime_incidents (incident_id INT, did INT, incident_type VARCHAR(255), incident_date DATE); INSERT INTO crime_incidents (incident_id, did, incident_type, incident_date) VALUES (1, 1, 'Theft', '2022-01-01'), (2, 2, 'Vandalism', '2022-01-02'), (3, 3, 'Assault', '2022-01-03'); CREATE TABLE emergency_calls (call_id INT, did INT, response_time INT, call_date DATE); INSERT INTO emergency_calls (call_id, did, response_time, call_date) VALUES (1, 1, 45, '2022-01-01'), (2, 2, 62, '2022-01-02'), (3, 3, 55, '2022-01-03');", "output": "SELECT d.district_name, COUNT(ci.incident_id) as total_incidents, COUNT(ec.call_id) as total_calls FROM districts d LEFT JOIN crime_incidents ci ON d.did = ci.did LEFT JOIN emergency_calls ec ON d.did = ec.did WHERE ci.incident_date BETWEEN '2022-01-01' AND '2022-01-03' AND ec.call_date BETWEEN '2022-01-01' AND '2022-01-03' GROUP BY d.district_name;"}
{"input": " \uc5ec\ub7ec NASA \uc784\ubb34\ub97c \uc218\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE astronauts (id INT, name VARCHAR(50), organization VARCHAR(50), mission VARCHAR(50)); INSERT INTO astronauts VALUES (1, 'Neil Armstrong', 'NASA', 'Apollo 11'), (2, 'Buzz Aldrin', 'NASA', 'Apollo 11'), (3, 'Pete Conrad', 'NASA', 'Gemini 5'), (4, 'Pete Conrad', 'NASA', 'Apollo 12');", "output": "SELECT name, organization, mission FROM astronauts WHERE name IN (SELECT name FROM astronauts GROUP BY name HAVING COUNT(*) > 1) ORDER BY organization;"}
{"input": " \uc11c\ubd80 \uc9c0\uc5ed\uacfc \ub3d9\ubd80 \uc9c0\uc5ed\uc758 \uac01 \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \ubaa8\ubc14\uc77c \uac00\uc785\uc790 \uc218\ub97c \ube44\uad50\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, technology VARCHAR(20), region VARCHAR(50)); INSERT INTO mobile_subscribers (subscriber_id, technology, region) VALUES (1, '4G', 'North'), (2, '5G', 'North'), (3, '3G', 'South'), (4, '5G', 'East'), (5, '5G', 'North'), (6, '3G', 'South'), (7, '4G', 'West'), (8, '4G', 'East'), (9, '5G', 'East');", "output": "SELECT technology, region, COUNT(*) AS subscribers FROM mobile_subscribers GROUP BY technology, region HAVING region IN ('West', 'East') ORDER BY region, technology;"}
{"input": "\uc9c1\uc704\ubcc4\ub85c \uc9c1\uc6d0\uc758 \uc0c1\uc704 \uc0ac\ubd84\uc704\uc218\uc640 \ud558\uc704 \uc0ac\ubd84\uc704\uc218 \uc0ac\uc774\uc758 \ud3c9\uade0 \uae09\uc5ec \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Gender VARCHAR(10), JobTitle VARCHAR(50), Salary INT); INSERT INTO Employees (EmployeeID, Gender, JobTitle, Salary) VALUES (1, 'Male', 'Manager', 70000), (2, 'Female', 'Manager', 65000), (3, 'Male', 'Developer', 60000), (4, 'Female', 'Developer', 62000);", "output": "SELECT JobTitle, AVG(CASE WHEN PERCENT_RANK() OVER (PARTITION BY JobTitle ORDER BY Salary) BETWEEN 0 AND 0.25 THEN Salary ELSE NULL END) - AVG(CASE WHEN PERCENT_RANK() OVER (PARTITION BY JobTitle ORDER BY Salary) BETWEEN 0.75 AND 1 THEN Salary ELSE NULL END) AS Salary_Difference FROM Employees GROUP BY JobTitle;"}
{"input": " 2000\ub144 \uc774\ud6c4 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\ub4e4\uc774 \uc8fc\ub3c4\ud558\ub294 \ud3c9\ud654\uc720\uc9c0\ud65c\ub3d9\uc740 \uc5b4\ub5a4 \uac83\ub4e4\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE Peacekeeping_Operations (Operation_ID INT PRIMARY KEY, Operation_Name VARCHAR(255), Location VARCHAR(255), Leader VARCHAR(255), Start_Date DATE, End_Date DATE); INSERT INTO Peacekeeping_Operations (Operation_ID, Operation_Name, Location, Leader, Start_Date, End_Date) VALUES (1, 'MINUSTAH', 'Haiti', 'UN', '2004-06-01', '2017-10-15');", "output": "SELECT Operation_Name FROM Peacekeeping_Operations WHERE Leader IN (SELECT Name FROM Countries WHERE Continent = 'Africa') AND Start_Date >= '2000-01-01';"}
{"input": " UNION\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc804 \uc9c0\uc5ed\uc758 \ubd80\ubb38\ubcc4 \ucd1d \ubb3c \uc0ac\uc6a9\ub7c9\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE water_usage_north (sector VARCHAR(20), usage INT); INSERT INTO water_usage_north (sector, usage) VALUES ('Agriculture', 300), ('Domestic', 200), ('Industrial', 500); CREATE TABLE water_usage_south (sector VARCHAR(20), usage INT); INSERT INTO water_usage_south (sector, usage) VALUES ('Agriculture', 400), ('Domestic', 250), ('Industrial', 600);", "output": "(SELECT sector, SUM(usage) FROM water_usage_north GROUP BY sector) UNION (SELECT sector, SUM(usage) FROM water_usage_south GROUP BY sector)"}
{"input": " \ucc3d \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucc28\uc774\ub97c \uacc4\uc0b0\ud558\uba74 \ucd5c\uadfc \uc5f0\ub3c4\uc640 \uc804\ub144\ub3c4 \uc0ac\uc774\uc5d0 \uac01 \uac74\ubb3c\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \uc810\uc218 \ubcc0\ud654\uac00 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Building_Scores (id INT, building_id INT, year INT, efficiency_score INT); INSERT INTO Building_Scores VALUES (1, 1, 2020, 75), (2, 1, 2021, 80), (3, 2, 2020, 60), (4, 2, 2021, 65), (5, 3, 2020, 80), (6, 3, 2021, 85), (7, 4, 2020, 85), (8, 4, 2021, 90), (9, 5, 2020, 65), (10, 5, 2021, 70);", "output": "SELECT building_id, year, efficiency_score, LAG(efficiency_score) OVER (PARTITION BY building_id ORDER BY year) as previous_efficiency_score, efficiency_score - LAG(efficiency_score) OVER (PARTITION BY building_id ORDER BY year) as difference FROM Building_Scores;"}
{"input": " \uc2dc\uce74\uace0\uc5d0\uc11c HIV \uc591\uc131 \ubc18\uc751\uc744 \ubcf4\uc778 50\uc138 \uc774\uc0c1\uc758 \ud658\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, age INT, hiv TEXT, city TEXT, date DATE); INSERT INTO patients (id, age, hiv, city, date) VALUES (1, 55, 'Positive', 'Chicago', '2021-01-15'); INSERT INTO patients (id, age, hiv, city, date) VALUES (2, 48, 'Negative', 'Chicago', '2021-02-02');", "output": "SELECT COUNT(*) FROM patients WHERE hiv = 'Positive' AND age > 50 AND city = 'Chicago';"}
{"input": " \ub85d \uace1\uc744 \uad6c\ub9e4\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Users (user_id INT, username TEXT); CREATE TABLE Songs (song_id INT, title TEXT, genre TEXT, release_date DATE, price DECIMAL(5,2)); CREATE TABLE Purchases (purchase_id INT, user_id INT, song_id INT, purchase_date DATE);", "output": "SELECT COUNT(DISTINCT Users.user_id) FROM Users INNER JOIN Purchases ON Users.user_id = Purchases.user_id INNER JOIN Songs ON Purchases.song_id = Songs.song_id WHERE Songs.genre = 'rock';"}
{"input": " \uac01 \uacfc\uc815\uc5d0\uc11c \uc815\uc2e0 \uac74\uac15 \uc790\uc6d0\uc744 \ud65c\uc6a9\ud55c \ud559\uc0dd \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE student_courses (student_id INT, course_id INT, mental_health_resource_access INT); INSERT INTO student_courses (student_id, course_id, mental_health_resource_access) VALUES (1, 1, 1), (2, 1, 0), (3, 2, 1), (4, 2, 1), (5, 3, 0), (6, 3, 0);", "output": "SELECT course_id, SUM(mental_health_resource_access) FROM student_courses GROUP BY course_id;"}
{"input": " \uae30\ubd80 \ucd1d\uc561\uacfc \uc6d0\uc778\ubcc4\ub85c \uc0c1\uc704 5\uba85\uc758 \uae30\ubd80\uc790\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE donors (id INT, name VARCHAR(255), country VARCHAR(255));CREATE TABLE donations (id INT, donor_id INT, cause_id INT, amount DECIMAL(10, 2));CREATE TABLE causes (id INT, name VARCHAR(255));", "output": "SELECT dn.name, c.name, SUM(d.amount) FROM donors dn INNER JOIN donations d ON dn.id = d.donor_id INNER JOIN causes c ON d.cause_id = c.id GROUP BY d.donor_id, c.name ORDER BY SUM(d.amount) DESC LIMIT 5;"}
{"input": " \ubbf8\uc220\ud488 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uba85\uc758 \uc608\uc220\uac00\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artist (ArtistID INT, ArtistName VARCHAR(50), TotalSales DECIMAL(10,2)); INSERT INTO Artist (ArtistID, ArtistName, TotalSales) VALUES (1, 'ArtistA', 5000), (2, 'ArtistB', 7000), (3, 'ArtistC', 6000), (4, 'ArtistD', 8000), (5, 'ArtistE', 4000);", "output": "SELECT ArtistName, TotalSales FROM (SELECT ArtistName, TotalSales, ROW_NUMBER() OVER (ORDER BY TotalSales DESC) as Rank FROM Artist) AS Subquery WHERE Rank <= 3;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc0ac\uc774\uc988 16 \uc774\uc0c1\uc758 \uace0\uac1d \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, country VARCHAR(20), size INT); INSERT INTO customers (id, country, size) VALUES (1, 'USA', 14), (2, 'USA', 12), (3, 'Canada', 16), (4, 'USA', 20), (5, 'Mexico', 8);", "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE country = 'USA')) FROM customers WHERE size >= 16 AND country = 'USA';"}
{"input": " '\uacfc\ud559' \uce74\ud14c\uace0\ub9ac\uc758 \ud558\ub8e8 \ucd9c\ud310 \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE articles_by_day (day DATE, category TEXT, article_count INT); INSERT INTO articles_by_day (day, category, article_count) VALUES ('2022-02-01', 'Science', 2), ('2022-02-02', 'News', 3), ('2022-02-01', 'Science', 1);", "output": "SELECT day, category, SUM(article_count) as total FROM articles_by_day WHERE category = 'Science' GROUP BY day;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \ud638\ud154\uc740 \ucd1d \uba87 \uac1c\uc774\uba70, \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc0c1\uc744 \ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE hotels (id INT, country VARCHAR(50), sustainable BOOLEAN); INSERT INTO hotels (id, country, sustainable) VALUES (1, 'Egypt', TRUE), (2, 'Kenya', FALSE), (3, 'Morocco', TRUE); CREATE TABLE hotel_awards (id INT, hotel_id INT, award VARCHAR(50)); INSERT INTO hotel_awards (id, hotel_id, award) VALUES (1, 1, 'Green Flag'), (2, 1, 'Eco Certificate'), (3, 3, 'Green Globe');", "output": "SELECT COUNT(DISTINCT hotels.id), SUM(hotel_awards.count) FROM hotels LEFT JOIN (SELECT hotel_id, COUNT(*) AS count FROM hotel_awards GROUP BY hotel_id) AS hotel_awards ON hotels.id = hotel_awards.hotel_id WHERE hotels.country IN ('Africa') AND hotels.sustainable = TRUE;"}
{"input": " 2022\ub144 \ub274\uc695\uc8fc\uc5d0\uc11c \ucf54\ub85c\ub09819 \ubc31\uc2e0\uc744 \uc811\uc885\ubc1b\uc740 \ud658\uc790\uc758 \ucd5c\uc18c \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE covid_vaccines (patient_id INT, age INT, gender TEXT, state TEXT, date DATE); INSERT INTO covid_vaccines (patient_id, age, gender, state, date) VALUES (1, 25, 'Male', 'New York', '2022-01-01');", "output": "SELECT MIN(age) FROM covid_vaccines WHERE state = 'New York' AND date LIKE '2022-%' AND vaccine = 'COVID-19';"}
{"input": " \uc774\ub354\ub9ac\uc6c0 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac8c\uc784 dapp \uc218\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dapps (dapp_id INT PRIMARY KEY, name VARCHAR(50), category VARCHAR(50), smart_contract_id INT, FOREIGN KEY (smart_contract_id) REFERENCES smart_contracts(contract_id)); INSERT INTO dapps (dapp_id, name, category, smart_contract_id) VALUES (1, 'CryptoKitties', 'Gaming', 1), (2, 'Uniswap', 'Exchange', 2), (3, 'Golem', 'Computation', 3); CREATE TABLE blockchain_networks (network_id INT PRIMARY KEY, name VARCHAR(50), type VARCHAR(50)); INSERT INTO blockchain_networks (network_id, name, type) VALUES (1, 'Ethereum', 'Public'), (2, 'Hyperledger', 'Private'), (3, 'Corda', 'Permissioned');", "output": "SELECT COUNT(dapp_id) AS gaming_dapps_count FROM dapps WHERE category = 'Gaming' AND smart_contract_id IN (SELECT contract_id FROM smart_contracts WHERE language = 'Solidity') AND name IN (SELECT name FROM blockchain_networks WHERE name = 'Ethereum');"}
{"input": " \ubd84\uae30\ubcc4 \uc2a4\ud2b8\ub9ac\ubc0d \uc11c\ube44\uc2a4 \uac00\uc785\uc790 \uc218\uc758 \ubcc0\ud654\uc728\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE subscribers (service VARCHAR(50), subscriber_count INT, quarter VARCHAR(10), year INT); INSERT INTO subscribers (service, subscriber_count, quarter, year) VALUES ('Netflix', 200000000, 'Q1', 2020), ('Netflix', 208000000, 'Q2', 2020), ('Netflix', 215000000, 'Q3', 2020);", "output": "SELECT service, quarter, year, LAG(subscriber_count) OVER(PARTITION BY service ORDER BY year, quarter) as prev_subscriber_count, (subscriber_count - COALESCE(prev_subscriber_count, subscriber_count)) * 100.0 / subscriber_count as pct_change FROM subscribers;"}
{"input": " \uc9c0\uc5ed\ubcc4 \ucd1d \ucc44\uc6a9\uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (id INT, name VARCHAR(50), department VARCHAR(50), hire_date DATE, region VARCHAR(50)); INSERT INTO Employees (id, name, department, hire_date, region) VALUES (1, 'Jamal Thompson', 'Engineering', '2022-01-15', 'North America'); INSERT INTO Employees (id, name, department, hire_date, region) VALUES (2, 'Sophia Garcia', 'HR', '2022-03-20', 'South America'); INSERT INTO Employees (id, name, department, hire_date, region) VALUES (3, 'Hassan Patel', 'Engineering', '2022-06-10', 'Asia');", "output": "SELECT region, COUNT(*) AS total_hired FROM Employees GROUP BY region;"}
{"input": " 2021\ub144 3\ubd84\uae30 \uce90\ub098\ub2e4 \uc6d0\uc8fc\ubbfc \uacf5\ub3d9\uccb4\uc758 \ud3c9\uade0 \uc7ac\ud65c\uc6a9\ub960\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE RecyclingRates (rate_id INT, community_type VARCHAR(255), quarter DATE, recycling_rate DECIMAL(5,2)); INSERT INTO RecyclingRates (rate_id, community_type, quarter, recycling_rate) VALUES (1, 'Urban', '2021-07-01', 0.42), (2, 'Rural', '2021-07-01', 0.38), (3, 'Indigenous', '2021-07-01', 0.35);", "output": "SELECT AVG(recycling_rate) FROM RecyclingRates WHERE community_type = 'Indigenous' AND quarter = '2021-07-01';"}
{"input": " \uac01 \ucc44\uad74 \uc791\uc5c5\uc73c\ub85c \uc778\ud574 \uc0dd\uc131\ub41c \ud3d0\uae30\ubb3c\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MiningOperations (OperationID INT, MineName VARCHAR(100), OperationType VARCHAR(50), StartDate DATE, EndDate DATE); INSERT INTO MiningOperations (OperationID, MineName, OperationType, StartDate, EndDate) VALUES (1, 'Golden Mine', 'Exploration', '2015-01-01', '2015-12-31'), (2, 'Silver Ridge', 'Extraction', '2016-01-01', '2016-12-31'); CREATE TABLE EnvironmentalImpact (OperationID INT, CO2Emissions INT, WaterUsage INT, WasteGeneration INT); INSERT INTO EnvironmentalImpact (OperationID, CO2Emissions, WaterUsage, WasteGeneration) VALUES (1, 5000, 10000, 2000), (2, 7000, 12000, 2500);", "output": "SELECT ei.OperationID, ei.WasteGeneration, (ei.WasteGeneration / SUM(ei.WasteGeneration) OVER ()) * 100 as WastePercentage FROM EnvironmentalImpact ei;"}
{"input": " \ud574\ub2f9 \ud3b8\uc758 \uc2dc\uc124\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ud3ec\ud568\ud558\uc5ec \uc9c0\ub09c 12\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uc9c0\uc5ed\uc5d0\uc11c \uba87 \uba85\uc758 \uc7a5\uc560\uc778\uc774 \ud3b8\uc758 \uc2dc\uc124\uc744 \ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Disability_Accommodations (id INT, region VARCHAR(50), individual_count INT, budget DECIMAL(10,2), accommodation_date DATE);", "output": "SELECT region, COUNT(individual_count) as individual_count, SUM(budget) as total_budget FROM Disability_Accommodations WHERE accommodation_date >= DATEADD(month, -12, GETDATE()) GROUP BY region;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 '\uc2a4\ubbf8\uc2a4 \ud0c0\uc784\uc988'\uc640 '\ubc00\ub7ec \ud3ec\uc2a4\ud2b8'\uac00 \uac8c\uc7ac\ud55c \uae30\uc0ac\uc640 \uc870\uc0ac \ubcf4\uace0\uc11c\uc758 \uc218\ub294 \uc624\ud53c\ub2c8\uc5b8\uc744 \uc81c\uc678\ud558\uace0 \ucd1d \uba87 \uad8c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE the_smith_times (title TEXT, type TEXT, publication_date DATE);CREATE TABLE miller_post (title TEXT, type TEXT, publication_date DATE);", "output": "SELECT COUNT(*) FROM (SELECT title FROM the_smith_times WHERE type != 'Opinion' AND publication_date > DATE('now','-6 months') UNION ALL SELECT title FROM miller_post WHERE type != 'Opinion' AND publication_date > DATE('now','-6 months'))"}
{"input": " \uc791\ub144\uc5d0 \uac01 \uc9c0\uc5ed\uc5d0 \uba87 \uba85\uc758 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc778\ub825\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE WorkforceHistory (WorkerID INT, Region VARCHAR(255), HireDate DATE); INSERT INTO WorkforceHistory (WorkerID, Region, HireDate) VALUES (1, 'Northeast', '2020-02-01'); INSERT INTO WorkforceHistory (WorkerID, Region, HireDate) VALUES (2, 'Southeast', '2021-01-10'); INSERT INTO WorkforceHistory (WorkerID, Region, HireDate) VALUES (3, 'Northeast', '2020-07-15');", "output": "SELECT Region, COUNT(*) as NewWorkers FROM WorkforceHistory WHERE HireDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY Region;"}
{"input": " \uac00\uc7a5 \ub9ce\uc774 \uc77d\ud78c \ub274\uc2a4 \uae30\uc0ac \uc0c1\uc704 5\uac1c\ub97c \uc870\ud68c\uc218 \uae30\uc900 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE articles (id INT, title VARCHAR(100), content TEXT, views INT);", "output": "SELECT title FROM (SELECT title, ROW_NUMBER() OVER (ORDER BY views DESC) as rn FROM articles) tmp WHERE rn <= 5;"}
{"input": " \uc0ac\uace0\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\uc640 \uac00\uc7a5 \ub0ae\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Country (ID INT, Name VARCHAR(50)); CREATE TABLE Accidents (CountryID INT, AccidentDate DATE);", "output": "SELECT c.Name, COUNT(a.CountryID) * 1.0 / (SELECT COUNT(*) FROM FlightData WHERE FlightData.CountryID = c.ID) AS AccidentRate FROM Accidents a JOIN Country c ON a.CountryID = c.ID GROUP BY c.Name ORDER BY AccidentRate DESC;"}
{"input": " \uc774\ubca4\ud2b8 \uc720\ud615 \ubc0f \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uac00\uc0c1\uc73c\ub85c \uac1c\ucd5c\ub41c \ud3ec\ud568 \uc774\ubca4\ud2b8\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Event (EventID INT, EventType VARCHAR(50), Year INT, EventDate DATE, Virtual BOOLEAN); INSERT INTO Event (EventID, EventType, Year, EventDate, Virtual) VALUES (1, 'Conference', 2019, '2019-10-01', FALSE); INSERT INTO Event (EventID, EventType, Year, EventDate, Virtual) VALUES (2, 'Webinar', 2020, '2020-04-15', TRUE); INSERT INTO Event (EventID, EventType, Year, EventDate, Virtual) VALUES (3, 'Workshop', 2021, '2021-06-01', FALSE);", "output": "SELECT EventType, Year, (COUNT(*) * 100.0 / NULLIF(SUM(CASE WHEN Virtual THEN 1 END) OVER (PARTITION BY Year), 0)) AS Percentage FROM Event WHERE Virtual = TRUE GROUP BY EventType, Year;"}
{"input": " \ud14d\uc0ac\uc2a4\uc758 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc5d0 \ub300\ud574 \ucc98\ub9ac\ub41c \uc9c0 1\ub144\uc774 \ub118\uc740 \uccad\uad6c\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE policyholders (id INT, name TEXT, state TEXT); INSERT INTO policyholders (id, name, state) VALUES (4, 'John Doe', 'Texas'), (5, 'Jane Smith', 'California'), (6, 'Michael Davis', 'Texas'); CREATE TABLE claims (id INT, policyholder_id INT, claim_amount FLOAT, claim_date DATE); INSERT INTO claims (id, policyholder_id, claim_amount, claim_date) VALUES (1, 4, 500.00, '2021-01-01'), (2, 4, 700.00, '2022-01-01'), (3, 5, 1000.00, '2022-02-01');", "output": "DELETE FROM claims WHERE claims.id IN (SELECT claims.id FROM claims JOIN policyholders ON claims.policyholder_id = policyholders.id WHERE policyholders.state = 'Texas' AND claims.claim_date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR));"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \ud310\ub9e4\ub418\uc9c0 \uc54a\uc740 \uba54\ub274\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE time (time_id INT, sales_time DATE); INSERT INTO time VALUES (1, '2023-02-01'), (2, '2023-02-02'), (3, '2023-02-03'), (4, '2023-02-04'), (5, '2023-02-05'); CREATE TABLE sales_by_time (time_id INT, item_id INT, sales_amount DECIMAL(5,2)); INSERT INTO sales_by_time VALUES (1, 1, 50.00), (2, 1, 75.00), (3, 2, 100.00), (4, 3, 125.00), (5, 1, 150.00);", "output": "SELECT menu.item_name FROM menu LEFT JOIN (sales_by_time JOIN time ON sales_by_time.time_id = time.time_id AND time.sales_time >= DATEADD(month, -1, CURRENT_DATE)) ON menu.item_id = sales_by_time.item_id WHERE sales_by_time.item_id IS NULL;"}
{"input": "\ub18d\uc5c5 \ubd80\ubb38\uc5d0\uc11c \ud3c9\uade0 \ud22c\uc790\uac00 \uac00\uc7a5 \ub192\uc740 ESG \uc694\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments_esg (id INT, sector VARCHAR(255), esg_factor VARCHAR(255), investment_amount INT); INSERT INTO investments_esg (id, sector, esg_factor, investment_amount) VALUES (1, 'Agriculture', 'E', 300000), (2, 'Agriculture', 'S', 350000), (3, 'Agriculture', 'G', 400000);", "output": "SELECT esg_factor, AVG(investment_amount) FROM investments_esg WHERE sector = 'Agriculture' GROUP BY esg_factor ORDER BY AVG(investment_amount) DESC;"}
{"input": " '\uc74c\ubc18 A' \ubc0f '\uc74c\ubc18 B' \ud50c\ub7ab\ud3fc \ubaa8\ub450\uc5d0\uc11c \uc74c\uc545\uc744 \ubc1c\ud45c\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Artist (ArtistID INT, ArtistName VARCHAR(255)); CREATE TABLE Label (LabelID INT, LabelName VARCHAR(255)); CREATE TABLE Releases (ReleaseID INT, ArtistID INT, LabelID INT); INSERT INTO Artist VALUES (1, 'Artist A'); INSERT INTO Artist VALUES (2, 'Artist B'); INSERT INTO Label VALUES (1, 'Record Label A'); INSERT INTO Label VALUES (2, 'Record Label B'); INSERT INTO Releases VALUES (1, 1, 1); INSERT INTO Releases VALUES (2, 1, 2); INSERT INTO Releases VALUES (3, 2, 2);", "output": "SELECT ArtistName FROM Artist a JOIN Releases r1 ON a.ArtistID = r1.ArtistID JOIN Label l1 ON r1.LabelID = l1.LabelID JOIN Releases r2 ON a.ArtistID = r2.ArtistID JOIN Label l2 ON r2.LabelID = l2.LabelID WHERE l1.LabelName = 'Record Label A' AND l2.LabelName = 'Record Label B';"}
{"input": " 20\uc138\uae30 \ub7f0\ub358\uc5d0 \uc804\uc2dc\ub41c \uc785\uccb4\ud30c \uc870\uac01\ud488\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artworks (artwork_id INT, name VARCHAR(255), artist_id INT, date_sold DATE, price DECIMAL(10,2), exhibition_id INT, art_movement VARCHAR(255)); CREATE TABLE Artists (artist_id INT, name VARCHAR(255), nationality VARCHAR(255)); CREATE TABLE Exhibitions (exhibition_id INT, city VARCHAR(255), start_date DATE, end_date DATE);", "output": "SELECT AVG(Artworks.price) FROM Artworks INNER JOIN Exhibitions ON Artworks.exhibition_id = Exhibitions.exhibition_id INNER JOIN Artists ON Artworks.artist_id = Artists.artist_id WHERE Artworks.art_movement = 'Cubist' AND Exhibitions.city = 'London' AND Exhibitions.start_date < '1901-01-01' AND Exhibitions.end_date > '1900-01-01' AND Artworks.art_movement IS NOT NULL;"}
{"input": " \ub18d\ucd0c\uacfc \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \ud3c9\uade0 \uad11\ub300\uc5ed \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE broadband_speeds (speed_id INT, area VARCHAR(255), speed DECIMAL(10,2)); INSERT INTO broadband_speeds (speed_id, area, speed) VALUES (1, 'Rural USA', 50.00), (2, 'Urban USA', 120.00), (3, 'Rural Canada', 35.00), (4, 'Urban Canada', 180.00);", "output": "SELECT area, AVG(speed) AS avg_speed FROM broadband_speeds GROUP BY area;"}
{"input": " 2021\ub144 \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE Volunteer_Hours (id INT, volunteer VARCHAR(50), program VARCHAR(50), hours FLOAT, hours_date DATE); INSERT INTO Volunteer_Hours (id, volunteer, program, hours, hours_date) VALUES (1, 'Alice', 'Education', 10, '2021-01-01'); INSERT INTO Volunteer_Hours (id, volunteer, program, hours, hours_date) VALUES (2, 'Bob', 'Environment', 15, '2021-02-01');", "output": "SELECT program, AVG(hours) as avg_hours_per_volunteer FROM Volunteer_Hours WHERE YEAR(hours_date) = 2021 AND program = 'Education' GROUP BY program;"}
{"input": " \ub178\ub3d9\uad8c\uc744 \uc639\ud638\ud558\ub294 \uc758\ub8cc \ubd80\ubb38 \ub178\ub3d9\uc870\ud569 \uadfc\ub85c\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE labor_rights_advocacy (id INT, sector_id INT, union_status_id INT, advocates_for_labor_rights BOOLEAN); INSERT INTO labor_rights_advocacy (id, sector_id, union_status_id, advocates_for_labor_rights) VALUES (1, 1, 1, TRUE), (2, 2, 2, FALSE), (3, 1, 1, TRUE), (4, 2, 2, FALSE);", "output": "SELECT u.union_status, c.sector_name, 100.0 * AVG(CASE WHEN l.advocates_for_labor_rights THEN 1.0 ELSE 0.0 END) AS percentage FROM labor_rights_advocacy l  JOIN union_status u ON l.union_status_id = u.id JOIN healthcare_sectors c ON l.sector_id = c.sector_id GROUP BY u.union_status, c.sector_name;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \uac01 \uc74c\uc2dd\uc810\ubcc4 \uc2dd\ud488 \uc548\uc804 \uc704\ubc18 \uac70\ub798 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE SCHEMA FoodService;CREATE TABLE Inspections (inspection_id INT, restaurant_id INT, inspection_date DATE, violations INT); INSERT INTO Inspections (inspection_id, restaurant_id, inspection_date, violations) VALUES (1, 1, '2021-01-01', 3), (2, 1, '2021-04-01', 0), (3, 2, '2021-02-01', 2), (4, 2, '2021-05-01', 1);CREATE SCHEMA FoodService;CREATE TABLE Restaurants (restaurant_id INT, name VARCHAR(50), category VARCHAR(50)); INSERT INTO Restaurants (restaurant_id, name, category) VALUES (1, 'Cafe Azure', 'dining'), (2, 'Bistro Blanc', 'takeout');", "output": "SELECT restaurant_id, (COUNT(violations) * 100.00 / (SELECT COUNT(*) FROM Inspections WHERE inspection_date >= '2021-01-01')) as violation_percentage FROM Inspections WHERE inspection_date >= '2021-01-01' GROUP BY restaurant_id;"}
{"input": "\ucd1d \uac70\ub798 \uc218\uc5d0 \ub530\ub77c \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc21c\uc704\ub97c \uc9c0\uc815\ud558\uace0, \uac70\ub798 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \ubd84\uc0b0\ud615 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc21c\uc704 1\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE decentralized_applications (id INT, name VARCHAR, number_of_transactions INT); INSERT INTO decentralized_applications (id, name, number_of_transactions) VALUES (1, 'DA1', 1000), (2, 'DA2', 2000), (3, 'DA3', 1500), (4, 'DA4', 2500), (5, 'DA5', 500), (6, 'DA6', 3000);", "output": "SELECT *, RANK() OVER (ORDER BY number_of_transactions DESC) as rank FROM decentralized_applications;"}
{"input": " \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \ub9e4\ub144 \ucd1d \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_sales (id INT, year INT, region VARCHAR(20), equipment_type VARCHAR(30), revenue DECIMAL(10,2));", "output": "SELECT year, SUM(revenue) as total_revenue FROM military_sales WHERE region = 'Asia-Pacific' GROUP BY year ORDER BY year;"}
{"input": " \ud654\ubb3c \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud558\uc5ec \uac01 \ud56d\uad6c\uc5d0\uc11c \ucc98\ub9ac\ud558\ub294 \ucd1d \ud654\ubb3c \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ports (port_id INT, port_name VARCHAR(50), country VARCHAR(50)); CREATE TABLE cargo_types (cargo_type_id INT, cargo_type VARCHAR(50)); CREATE TABLE cargo_handling (id INT, port_id INT, cargo_type_id INT, weight FLOAT);", "output": "SELECT p.port_name, ct.cargo_type, SUM(ch.weight) as total_weight FROM cargo_handling ch JOIN ports p ON ch.port_id = p.port_id JOIN cargo_types ct ON ch.cargo_type_id = ct.cargo_type_id GROUP BY p.port_name, ct.cargo_type;"}
{"input": "2017~2019\ub144 \uce90\ub098\ub2e4, \uba55\uc2dc\ucf54, \ube0c\ub77c\uc9c8\uc758 \uc811\uadfc\uc131 \uae30\uc220 \uc5f0\uad6c\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc5f0\uac04 \uc608\uc0b0\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE at_budget_canada(budget INT, year INT, country VARCHAR(10)); INSERT INTO at_budget_canada VALUES (3000000, 2017, 'Canada'), (3200000, 2018, 'Canada'), (3400000, 2019, 'Canada'); CREATE TABLE at_budget_mexico(budget INT, year INT, country VARCHAR(10)); INSERT INTO at_budget_mexico VALUES (2500000, 2017, 'Mexico'), (2600000, 2018, 'Mexico'), (2700000, 2019, 'Mexico'); CREATE TABLE at_budget_brazil(budget INT, year INT, country VARCHAR(10)); INSERT INTO at_budget_brazil VALUES (2000000, 2017, 'Brazil'), (2100000, 2018, 'Brazil'), (2200000, 2019, 'Brazil');", "output": "SELECT AVG(budget) FROM (SELECT budget FROM at_budget_canada WHERE year BETWEEN 2017 AND 2019 UNION ALL SELECT budget FROM at_budget_mexico WHERE year BETWEEN 2017 AND 2019 UNION ALL SELECT budget FROM at_budget_brazil WHERE year BETWEEN 2017 AND 2019) AS combined;"}
{"input": " \uc544\uc2dc\uc544 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\ubcc4 \ub370\uc774\ud130 \ubcf4\uc720\uc728\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE mobile_plans (id INT, name VARCHAR(255), type VARCHAR(255), price DECIMAL(10,2), region VARCHAR(255)); CREATE TABLE subscribers (id INT, name VARCHAR(255), plan_id INT, retention_rate DECIMAL(10,2)); CREATE TABLE regions (id INT, name VARCHAR(255));", "output": "SELECT mobile_plans.name AS mobile_plan, AVG(subscribers.retention_rate) FROM subscribers JOIN mobile_plans ON subscribers.plan_id = mobile_plans.id JOIN regions ON mobile_plans.region = regions.name WHERE regions.name = 'Asia' GROUP BY mobile_plans.name;"}
{"input": " \ud314\ub85c\uc5b4\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uba85\uc758 \uc0ac\uc6a9\uc790\uc640 \uac8c\uc2dc\ubb3c, \ub313\uae00, \ubc18\uc751\uc758 \ucd1d \uac1c\uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE users (user_id INT, username VARCHAR(20), email VARCHAR(50), follower_count INT); CREATE TABLE posts (post_id INT, user_id INT, content TEXT, post_time TIMESTAMP); CREATE TABLE comments (comment_id INT, post_id INT, user_id INT, comment TEXT, comment_time TIMESTAMP); CREATE TABLE reactions (reaction_id INT, post_id INT, user_id INT, reaction VARCHAR(10), reaction_time TIMESTAMP);", "output": "SELECT u.username, SUM(p.post_id) AS posts, SUM(c.comment_id) AS comments, SUM(r.reaction_id) AS reactions, u.follower_count FROM users u LEFT JOIN posts p ON u.user_id = p.user_id LEFT JOIN comments c ON p.post_id = c.post_id LEFT JOIN reactions r ON p.post_id = r.post_id GROUP BY u.username ORDER BY u.follower_count DESC LIMIT 3;"}
{"input": "\ub2e8\uc77c \ucf54\uc154 \uc131\ubd84\uc758 \ucd5c\ub300 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ingredients (ingredient_id INT, ingredient_name VARCHAR(50), is_kosher BOOLEAN, quantity INT); INSERT INTO ingredients (ingredient_id, ingredient_name, is_kosher, quantity) VALUES (1, 'Quinoa', TRUE, 50), (2, 'Tomatoes', TRUE, 200), (3, 'Chickpeas', FALSE, 100), (4, 'Beef', FALSE, 30), (5, 'Vegan Cheese', TRUE, 80), (6, 'Wheat Flour', FALSE, 70), (7, 'Gluten-Free Flour', TRUE, 60), (8, 'Kosher Salt', TRUE, 1000);", "output": "SELECT MAX(quantity) FROM ingredients WHERE is_kosher = TRUE;"}
{"input": " 2021\ub144 \uad70\uc0ac\ube44 \uc9c0\ucd9c\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uad6d\uac00\uc758 \ucd1d \uad6d\ubc29\ube44 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE DefenseSpending (CountryName VARCHAR(50), Year INT, Spending DECIMAL(18,2)); INSERT INTO DefenseSpending (CountryName, Year, Spending) VALUES ('USA', 2021, 740000000000), ('China', 2021, 252000000000), ('Russia', 2021, 62000000000), ('India', 2021, 72000000000), ('Saudi Arabia', 2021, 68000000000);", "output": "SELECT SUM(Spending) FROM DefenseSpending WHERE Year = 2021 QUALIFY ROW_NUMBER() OVER (ORDER BY Spending DESC) <= 5;"}
{"input": " '\ud504\ub85c' \uc0c1\ud0dc\ub97c \ub2ec\uc131\ud55c \ud50c\ub808\uc774\uc5b4 \uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \uac8c\uc784\uc744 \ud50c\ub808\uc774\uc5b4 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE PlayerStatus (PlayerID INT, PlayerStatus VARCHAR(255), GameName VARCHAR(255)); INSERT INTO PlayerStatus (PlayerID, PlayerStatus, GameName) VALUES (1, 'Pro', 'Starship Commanders'); INSERT INTO PlayerStatus (PlayerID, PlayerStatus, GameName) VALUES (2, 'Novice', 'Starship Commanders'); CREATE TABLE PlayerStatus2 (PlayerID INT, PlayerStatus VARCHAR(255), GameName VARCHAR(255)); INSERT INTO PlayerStatus2 (PlayerID, PlayerStatus, GameName) VALUES (1, 'Pro', 'Cybernetic Warriors'); INSERT INTO PlayerStatus2 (PlayerID, PlayerStatus, GameName) VALUES (2, 'Novice', 'Cybernetic Warriors');", "output": "SELECT GameName, COUNT(*) as PlayerCount, RANK() OVER (ORDER BY COUNT(*) DESC) as Rank FROM (SELECT GameName FROM PlayerStatus WHERE PlayerStatus = 'Pro' GROUP BY GameName) AS Subquery GROUP BY GameName;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc6d4\ubcc4 \ubcf4\uc548 \uc0ac\uace0 \ub3d9\ud5a5\uc740 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE incident_timestamps (id INT, incidents INT, timestamp TIMESTAMP); INSERT INTO incident_timestamps (id, incidents, timestamp) VALUES (1, 100, '2022-01-01 10:00:00'), (2, 120, '2022-02-01 12:00:00');", "output": "SELECT EXTRACT(MONTH FROM timestamp) as month, SUM(incidents) as total_incidents FROM incident_timestamps WHERE timestamp >= '2021-01-01' GROUP BY month;"}
{"input": " \ud504\ub791\uc2a4\uc640 \uc77c\ubcf8\uc758 \ucd1d \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Visitors (id INT, name TEXT, country TEXT); INSERT INTO Visitors (id, name, country) VALUES (1, 'Marie Dupont', 'France'), (2, 'Hiroshi Tanaka', 'Japan'), (3, 'Mark Johnson', 'USA');", "output": "SELECT SUM(country = 'France' OR country = 'Japan') FROM Visitors;"}
{"input": "\uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \ud310\ub9e4\ub41c \ubcf4\ud5d8 \uc0c1\ud488\uc758 \ud3c9\uade0 \uccad\uad6c \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Claims (PolicyID int, ClaimAmount int, SaleDate date); INSERT INTO Claims (PolicyID, ClaimAmount, SaleDate) VALUES (1, 500, '2022-08-05'), (2, 2000, '2022-05-10'), (3, 800, '2022-09-15'); CREATE TABLE Policies (PolicyID int, SaleDate date); INSERT INTO Policies (PolicyID, SaleDate) VALUES (1, '2022-08-05'), (2, '2022-05-10'), (3, '2022-09-15');", "output": "SELECT AVG(ClaimAmount) OVER (ORDER BY ROW_NUMBER() OVER (ORDER BY SaleDate DESC)) as AvgClaimAmount FROM Claims JOIN Policies ON Claims.PolicyID = Policies.PolicyID WHERE SaleDate >= DATEADD(month, -3, GETDATE());"}
{"input": " \uad6d\uac00\ubcc4 \ubb3c \uc808\uc57d \ud65c\ub3d9 \ud45c\uc2dc", "context": "CREATE TABLE water_conservation (id INT PRIMARY KEY, country VARCHAR(50), initiative TEXT);", "output": "SELECT country, initiative FROM water_conservation;"}
{"input": "\uc9c0\ub09c \ud574 \ud559\uc2b5 \uc7a5\uc560\uac00 \uc788\ub294 \ud559\uc0dd\uc5d0\uac8c \uc6d4 \ud3c9\uade0 \uc81c\uacf5\ub418\ub294 \ud3b8\uc758 \uc2dc\uc124 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accommodations (id INT, student_id INT, type TEXT, cost INT, date DATE);   INSERT INTO accommodations (id, student_id, type, cost, date) VALUES (1, 1, 'extended time', 200, '2022-01-01');   INSERT INTO accommodations (id, student_id, type, cost, date) VALUES (2, 2, 'note taker', 500, '2022-02-01');", "output": "SELECT AVG(COUNT(*)) FROM accommodations WHERE student_id IN (SELECT id FROM students WHERE disability = 'learning disability') AND date >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY MONTH(date);"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0 \ub18d\ubbfc\uc740 \uba87 \uba85\uc774\uba70, \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name VARCHAR(50), age INT, region VARCHAR(50));", "output": "SELECT region, COUNT(*) as num_farmers, AVG(age) as avg_age FROM farmers GROUP BY region;"}
{"input": " \ucc44\uc2dd \uba54\ub274\uc640 \ube44\ucc44\uc2dd \uba54\ub274 \ud56d\ubaa9\uc758 \ucd1d \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_sales(menu_item VARCHAR(50), sales INT, type VARCHAR(10)); INSERT INTO menu_sales VALUES ('Burger', 300, 'non-veg'), ('Pizza', 200, 'veg'), ('Salad', 150, 'veg'), ('Steak', 400, 'non-veg');", "output": "SELECT type, SUM(sales) AS total_sales FROM menu_sales GROUP BY type;"}
{"input": " \ub274\uc695 \uc9c0\uc5ed \ucc44\uc2dd \uc694\ub9ac\uc758 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Dishes (dish_id INT, dish_name VARCHAR(50), is_vegetarian BOOLEAN, price DECIMAL(5,2)); INSERT INTO Dishes (dish_id, dish_name, is_vegetarian, price) VALUES (1, 'Quinoa Salad', true, 12.99), (2, 'Cheeseburger', false, 9.99), (3, 'Veggie Burger', true, 10.99), (4, 'BBQ Ribs', false, 14.99), (5, 'Tofu Stir Fry', true, 11.99);", "output": "SELECT AVG(price) FROM Dishes WHERE is_vegetarian = true AND region = 'NY';"}
{"input": " 30\uc138 \uc774\uc0c1\uc758 \ud50c\ub808\uc774\uc5b4\uac00 \ub514\uc790\uc778\ud558\uace0 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uc5ec\ud55c VR \uac8c\uc784\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vr_games (game_id INT, genre VARCHAR(10), vr BOOLEAN);", "output": "SELECT COUNT(*) FROM vr_games INNER JOIN (SELECT player_id FROM players INNER JOIN esports_participants ON players.player_id = esports_participants.player_id WHERE players.age > 30) AS older_players ON vr_games.game_id = older_players.player_id WHERE vr_games.vr = TRUE;"}
{"input": "\uc5b4\ub5a4 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uac00 \uac74\uac15 \ud615\ud3c9\uc131 \uc9c0\ud45c \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE community_health_workers (id INT, name VARCHAR(50), health_equity_metrics_score INT); INSERT INTO community_health_workers (id, name, health_equity_metrics_score) VALUES (1, 'John Doe', 90), (2, 'Jane Smith', 85);", "output": "SELECT name, health_equity_metrics_score, RANK() OVER (ORDER BY health_equity_metrics_score DESC) as rank FROM community_health_workers;"}
{"input": " 2022\ub144 1\ubd84\uae30 \uc11c\ubd80 \uc9c0\uc5ed \uace0\uac1d\uc758 \ud3c9\uade0 \uac70\ub798 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE transactions (transaction_id INT, customer_id INT, transaction_date DATE, transaction_amount DECIMAL(10,2)); INSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (11, 2, '2022-03-05', 350.00), (12, 1, '2022-03-10', 500.00), (13, 4, '2022-03-15', 600.00), (14, 4, '2022-03-30', 800.00), (15, 6, '2022-01-20', 900.00), (16, 6, '2022-02-20', 1000.00);  CREATE TABLE customers (customer_id INT, name VARCHAR(100), region VARCHAR(50)); INSERT INTO customers (customer_id, name, region) VALUES (1, 'John Doe', 'Southeast'), (2, 'Jane Smith', 'Northeast'), (4, 'Bob Brown', 'West'), (6, 'Ali Khan', 'West');", "output": "SELECT AVG(transaction_amount) FROM transactions WHERE customer_id IN (SELECT customer_id FROM customers WHERE region = 'West') AND transaction_date BETWEEN '2022-01-01' AND '2022-03-31';"}
{"input": " \ud14d\uc0ac\uc2a4 \uc8fc\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uac74\ucd95 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud504\ub85c\uc81d\ud2b8 \uc77c\uc815\uc740 \ub3c4\uc2dc\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE project (id INT, name VARCHAR(255), city VARCHAR(255), timeline FLOAT);CREATE TABLE sustainable_building (id INT, project_id INT, sustainable_practice VARCHAR(255));CREATE TABLE city (id INT, name VARCHAR(255), state VARCHAR(255));", "output": "SELECT AVG(project.timeline), city.name FROM project INNER JOIN sustainable_building ON project.id = sustainable_building.project_id INNER JOIN city ON project.city = city.name WHERE city.state = 'Texas' GROUP BY city.name;"}
{"input": " NHL \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE nhl_players (player_id INT, name VARCHAR(50), team VARCHAR(50), position VARCHAR(20), salary FLOAT); INSERT INTO nhl_players (player_id, name, team, position, salary) VALUES (1, 'Connor McDavid', 'Edmonton Oilers', 'Center', 12.5); INSERT INTO nhl_players (player_id, name, team, position, salary) VALUES (2, 'Auston Matthews', 'Toronto Maple Leafs', 'Center', 11.6);", "output": "SELECT AVG(salary) FROM nhl_players;"}
{"input": " 'european_mines'\uc758 \ucd5c\ub300 \uc0dd\uc0b0 \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists europe_schema;CREATE TABLE europe_schema.european_mines (id INT, name VARCHAR, production_value DECIMAL);INSERT INTO europe_schema.european_mines (id, name, production_value) VALUES (1, 'N mining', 1200000.00), (2, 'B mining', 1800000.00);", "output": "SELECT MAX(production_value) FROM europe_schema.european_mines;"}
{"input": " \uac01 \ud68c\uc0ac\uc5d0\uc11c \uc0dd\uc0b0\ud55c \ud56d\uacf5\uae30 \uc911 \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud55c \ud56d\uacf5\uae30\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accidents_Manufacturers (Id INT, Accident_Id INT, Manufacturer VARCHAR(50)); INSERT INTO Accidents_Manufacturers (Id, Accident_Id, Manufacturer) VALUES (1, 1, 'Airbus'), (2, 2, 'Boeing'), (3, 3, 'Airbus');", "output": "SELECT m.Name AS Manufacturer, COUNT(am.Manufacturer) AS Accidents_Involved FROM Manufacturers m JOIN Accidents_Manufacturers am ON m.Id = (SELECT m2.Id FROM Manufacturers m2 WHERE m2.Name = m.Name) GROUP BY m.Name;"}
{"input": " \uac01\uad6d\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\uc740 \uc790\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biotech;USE biotech;CREATE TABLE if not exists startups (name VARCHAR(255), country VARCHAR(255), funding FLOAT);INSERT INTO startups (name, country, funding) VALUES ('Startup1', 'USA', 5000000), ('Startup2', 'Canada', 7000000), ('Startup3', 'USA', 3000000), ('Startup4', 'UK', 8000000);", "output": "SELECT country, SUM(funding) FROM startups GROUP BY country;"}
{"input": " \uc131\ubcc4\uc5d0 \ub530\ub77c \uc9c0\uc6d0\ub418\ub294 \uc5f0\uad6c\ube44 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE research_grants (id INT, year INT, amount DECIMAL(10,2), grantor_gender VARCHAR(10)); INSERT INTO research_grants (id, year, amount, grantor_gender) VALUES (1, 2020, 50000, 'Female'), (2, 2020, 75000, 'Male'), (3, 2021, 30000, 'Non-binary'), (4, 2021, 100000, 'Female');", "output": "SELECT grantor_gender, COUNT(*)  FROM research_grants GROUP BY grantor_gender;"}
{"input": " \uc704\ud5d8 \ud3c9\uac00 \uc810\uc218\uac00 80\uc810 \uc774\uc0c1\uc774\uace0 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc8fc\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uc758 \ucd1d \ubcf4\ud5d8\ub8cc \uae08\uc561\uacfc \ubcf4\ud5d8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholders (Id INT PRIMARY KEY, FirstName VARCHAR(50), LastName VARCHAR(50), Age INT, Gender VARCHAR(10), State VARCHAR(50)); CREATE TABLE Policies (Id INT PRIMARY KEY, PolicyholderId INT, PolicyType VARCHAR(50), CoverageAmount DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id)); CREATE TABLE Underwriting (Id INT PRIMARY KEY, PolicyholderId INT, RiskAssessmentScore INT, Premium DECIMAL(10,2), FOREIGN KEY (PolicyholderId) REFERENCES Policyholders(Id));", "output": "SELECT P.State, U.RiskAssessmentScore, SUM(U.Premium) as TotalPremiumAmount, COUNT(P.Id) as NumberOfPolicies FROM Policyholders P JOIN Policies PL ON P.Id = PL.PolicyholderId JOIN Underwriting U ON P.Id = U.PolicyholderId WHERE P.State = 'California' AND U.RiskAssessmentScore > 80 GROUP BY P.State ORDER BY TotalPremiumAmount DESC;"}
{"input": " \ubd81\ubbf8 \uc870\uc9c1\ub2f9 \ud3c9\uade0 AI \uc724\ub9ac \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE org_ai_ethics_budget (org_name VARCHAR(255), budget NUMERIC(10,2)); INSERT INTO org_ai_ethics_budget (org_name, budget) VALUES ('OrgA', 50000), ('OrgB', 75000), ('OrgC', 60000);", "output": "SELECT AVG(budget) OVER (PARTITION BY CASE WHEN org_name LIKE 'North%' THEN 1 ELSE 0 END) as avg_budget FROM org_ai_ethics_budget;"}
{"input": " \ub7ec\uc2dc\uc544\uc758 \uac01 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac\uc5d0 \ub300\ud55c \uc774\uc804 \uad6d\ubc29\uc678\uad50 \ud589\uc0ac \ub0a0\uc9dc\ub97c \uac80\uc0c9\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE defense_diplomacy (id INT, event VARCHAR, country VARCHAR, partner VARCHAR, date DATE, PRIMARY KEY (id)); INSERT INTO defense_diplomacy (id, event, country, partner, date) VALUES (1, 'Joint Military Exercise', 'Russia', 'China', '2020-09-01'), (2, 'Military Agreement', 'Russia', 'India', '2021-02-15');", "output": "SELECT event, country, partner, date, LAG(date) OVER (PARTITION BY country ORDER BY date) as previous_event_date FROM defense_diplomacy WHERE country = 'Russia';"}
{"input": " \uc9c0\ub09c \ub2ec \uac01 \uc885\uc758 \ud3c9\uade0 \uc218\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish (id INT, species VARCHAR(255), water_temp FLOAT, date DATE);", "output": "SELECT species, AVG(water_temp) OVER (PARTITION BY species ORDER BY date RANGE BETWEEN INTERVAL '1 month' PRECEDING AND CURRENT ROW) as avg_temp FROM fish;"}
{"input": " \uac01 \uc9c0\uc5ed\ubcc4 \uae34\uae09\uc804\ud654 \ubc0f \ubc94\uc8c4\uc2e0\uace0 \uac74\uc218\ub294 \ucd1d \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE districts (did INT, name VARCHAR(50), PRIMARY KEY(did)); CREATE TABLE emergencies (eid INT, did INT, PRIMARY KEY(eid), FOREIGN KEY (did) REFERENCES districts(did)); CREATE TABLE crimes (cid INT, did INT, PRIMARY KEY(cid), FOREIGN KEY (did) REFERENCES districts(did));", "output": "SELECT d.name, COUNT(e.eid) as num_emergencies, COUNT(c.cid) as num_crimes FROM districts d LEFT JOIN emergencies e ON d.did = e.did LEFT JOIN crimes c ON d.did = c.did GROUP BY d.name;"}
{"input": " \ub9e4\ub144 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc744 \uc785\ubc29\ubbf8\ud130 \ub2e8\uc704\ub85c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE water_usage (year INT, usage FLOAT); INSERT INTO water_usage (year, usage) VALUES (2018, 1234.56), (2019, 2345.67), (2020, 3456.78), (2021, 4567.89);", "output": "SELECT year, AVG(usage) FROM water_usage GROUP BY year;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \uc608\uc220 \ub9e4\uccb4 \uc0c1\uc704 3\uac1c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE artists (id INT, name TEXT, city TEXT, country TEXT);CREATE TABLE art_pieces (id INT, title TEXT, medium TEXT, artist_id INT);", "output": "SELECT a.city, ap.medium, COUNT(ap.id) as num_pieces, RANK() OVER (PARTITION BY a.city ORDER BY COUNT(ap.id) DESC) as rank FROM artists a JOIN art_pieces ap ON a.id = ap.artist_id GROUP BY a.city, ap.medium HAVING rank <= 3;"}
{"input": "\uc5ec\uc131\uc774 \ucc3d\uc5c5\ud55c \uae30\uc5c5\uc758 AI \uc0b0\uc5c5 \ud3c9\uade0 \ud22c\uc790\uae08\uc561\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE Companies (CompanyID INT, CompanyName VARCHAR(50), Industry VARCHAR(30), CompanyFoundingYear INT); CREATE TABLE Investments (InvestmentID INT, InvestorID INT, CompanyID INT, InvestmentAmount DECIMAL(10, 2)); CREATE TABLE Founders (FounderID INT, FounderName VARCHAR(50), Gender VARCHAR(10), CompanyID INT);", "output": "SELECT C.Industry, AVG(I.InvestmentAmount) AS AvgInvestmentAmount FROM Companies C JOIN Investments I ON C.CompanyID = I.CompanyID JOIN Founders F ON C.CompanyID = F.CompanyID WHERE C.Industry = 'AI' AND F.Gender = 'Female' GROUP BY C.Industry;"}
{"input": " \ud540\ud14c\ud06c \ubd84\uc57c\uc5d0\uc11c \uc5ec\uc131 \ucc3d\uc5c5\uc790\uac00 1\uba85 \uc774\uc0c1\uc778 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \uc870\ub2ec\ud55c \ucd1d \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE startups(id INT, name TEXT, industry TEXT, founder_gender TEXT, funding FLOAT); INSERT INTO startups(id, name, industry, founder_gender, funding) VALUES (1, 'WomenInFinance', 'Fintech', 'Female', 5000000);", "output": "SELECT SUM(funding) FROM startups WHERE industry = 'Fintech' AND founder_gender = 'Female';"}
{"input": "\uc2dc\uce74\uace0\uc5d0 \uc704\uce58\ud55c \ubc95\uc6d0\uc758 \uacbd\uc6b0 \uac01 \ubc95\uc6d0\uc758 \uc0ac\uac74 \uc218\ub294 \uc0ac\uac74 \uc720\ud615, \uc0ac\uac74 \uc0c1\ud0dc, \uc5f0\ub3c4\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE CourtCases (CourtName text, City text, CaseType text, CaseStatus text, Year int, NumCases int); INSERT INTO CourtCases VALUES ('Court1', 'Chicago', 'Assault', 'Open', 2022, 30, '2022-01-01'), ('Court1', 'Chicago', 'Theft', 'Closed', 2022, 25, '2022-01-01'), ('Court2', 'NYC', 'Assault', 'Open', 2022, 28, '2022-01-01'), ('Court2', 'NYC', 'Theft', 'Closed', 2022, 22, '2022-01-01');", "output": "SELECT CourtName, CaseType, CaseStatus, Year, SUM(NumCases) FROM CourtCases WHERE City = 'Chicago' GROUP BY CourtName, CaseType, CaseStatus, Year;"}
{"input": " \ubbf8\uad6d \ud56d\uad6c\uc758 \ubaa8\ub4e0 \ud654\ubb3c \uc911\ub7c9\uc744 5% \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Port (id INT, name VARCHAR(50), city VARCHAR(50), country VARCHAR(50)); CREATE TABLE Ship (id INT, name VARCHAR(50), type VARCHAR(50), length FLOAT); CREATE TABLE Cargo (id INT, name VARCHAR(50), weight FLOAT, PortId INT, ShipId INT);", "output": "UPDATE Cargo SET weight = Cargo.weight * 1.05 WHERE PortId IN (SELECT id FROM Port WHERE country = 'USA');"}
{"input": " \ucd5c\uadfc 3\ub144 \uc774\ub0b4\uc5d0 \uc124\ub9bd\ub41c \ud68c\uc0ac\uc758 \ub77c\uc6b4\ub4dc\ub2f9 \ud3c9\uade0 \ud22c\uc790 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE investments (company_id INT, round_type TEXT, raised_amount INT); INSERT INTO investments (company_id, round_type, raised_amount) VALUES (1, 'Series A', 5000000); INSERT INTO investments (company_id, round_type, raised_amount) VALUES (2, 'Seed', 1000000); CREATE TABLE companies (id INT, name TEXT, founding_year INT); INSERT INTO companies (id, name, founding_year) VALUES (1, 'Acme Inc', 2020); INSERT INTO companies (id, name, founding_year) VALUES (2, 'Bravo Corp', 2018);", "output": "SELECT AVG(raised_amount) as median_investment_per_round FROM (SELECT raised_amount FROM investments JOIN companies ON investments.company_id = companies.id WHERE companies.founding_year >= YEAR(CURRENT_DATE) - 3 ORDER BY raised_amount) AS subquery WHERE ROW_NUMBER() OVER (ORDER BY raised_amount) IN ( (SELECT CEIL(COUNT(*)/2) FROM investments JOIN companies ON investments.company_id = companies.id WHERE companies.founding_year >= YEAR(CURRENT_DATE) - 3) , (SELECT FLOOR(COUNT(*)/2) FROM investments JOIN companies ON investments.company_id = companies.id WHERE companies.founding_year >= YEAR(CURRENT_DATE) - 3) );"}
{"input": " \ud55c \ub2ec\uc5d0 \ub274\uc9c8\ub79c\ub4dc\ub97c \ubc29\ubb38\ud558\ub294 \ucd5c\ub300 \ud574\uc678 \ubc29\ubb38\uac1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE international_visitors (id INT, country VARCHAR(50), visit_month DATE); INSERT INTO international_visitors (id, country, visit_month) VALUES (1, 'New Zealand', '2022-01-01'), (2, 'New Zealand', '2022-02-01'), (3, 'New Zealand', '2022-02-15');", "output": "SELECT MAX(MONTH(visit_month)) as max_month, COUNT(*) as max_visitors FROM international_visitors WHERE country = 'New Zealand' GROUP BY max_month;"}
{"input": " \ub2e8\uc77c \ubc95\uc6d0 \uc704\uce58\uc5d0\uc11c \ub2e8\uc77c \ud310\uc0ac\uac00 \ucc98\ub9ac\ud558\ub294 \ucd5c\ub300 \uc0ac\uac74 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Courts (Location VARCHAR(255), JudgeID INT); CREATE TABLE Cases (CaseID INT, JudgeID INT);", "output": "SELECT MAX(Cases.CaseID) OVER(PARTITION BY Courts.Location) FROM Courts JOIN Cases ON Courts.JudgeID = Cases.JudgeID;"}
{"input": " \ucf5c\ub85c\ub77c\ub3c4\uc8fc\uc758 \uacbd\ucc30\uad00 \uc218\uc640 \uc8fc\uc5d0\uc11c \uc2e0\uace0\ub41c \ubc94\uc8c4 \uac74\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE states (id INT, name VARCHAR(255)); INSERT INTO states (id, name) VALUES (1, 'Colorado'); CREATE TABLE police_departments (id INT, state_id INT, officers INT); INSERT INTO police_departments (id, state_id, officers) VALUES (1, 1, 5000), (2, 1, 6000), (3, 1, 7000), (4, 1, 8000); CREATE TABLE crimes (id INT, state_id INT, reported INT); INSERT INTO crimes (id, state_id, reported) VALUES (1, 1, 50000), (2, 1, 60000), (3, 1, 70000), (4, 1, 80000);", "output": "SELECT SUM(police_departments.officers) AS total_officers, SUM(crimes.reported) AS total_crimes FROM police_departments INNER JOIN states ON police_departments.state_id = states.id INNER JOIN crimes ON states.id = crimes.state_id WHERE states.name = 'Colorado';"}
{"input": "\uc0c1\ud0dc\uc640 \uc131\ubcc4\uc5d0 \ub530\ub77c \ubd84\ub958\ub41c \ucd1d \ud658\uc790 \uc218\uc640 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE patients (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), condition VARCHAR(50)); INSERT INTO patients (id, name, age, gender, condition) VALUES (3, 'Maria Garcia', 42, 'Female', 'Bipolar Disorder'); INSERT INTO patients (id, name, age, gender, condition) VALUES (4, 'Ahmed Khan', 30, 'Male', 'PTSD'); INSERT INTO patients (id, name, age, gender, condition) VALUES (5, 'Li Wang', 50, 'Female', 'Depression');", "output": "SELECT condition, gender, COUNT(*) as num_patients, AVG(age) as avg_age FROM patients GROUP BY condition, gender;"}
{"input": " \uc77c\ubcf8\uc758 \uac8c\uc2dc\ubb3c\uc774 \ud558\ub8e8\uc5d0 \ubc1b\ub294 \uc88b\uc544\uc694 \uc218\ub294 \ucd5c\ub300 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE posts (id INT, user_id INT, post_date DATE, likes INT); INSERT INTO posts (id, user_id, post_date, likes) VALUES (1, 1, '2022-01-01', 100), (2, 1, '2022-01-02', 120), (3, 2, '2022-01-01', 50), (4, 3, '2022-01-01', 150), (5, 3, '2022-01-02', 180), (6, 3, '2022-01-03', 200), (7, 4, '2022-01-01', 75), (8, 4, '2022-01-02', 90), (9, 4, '2022-01-03', 110), (10, 4, '2022-01-04', 130), (11, 4, '2022-01-05', 150), (12, 5, '2022-01-01', 20);", "output": "SELECT MAX(likes) FROM posts WHERE post_date IN (SELECT post_date FROM posts WHERE country = 'Japan' GROUP BY post_date);"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \ubc29\uc704 \uc0b0\uc5c5 \uacc4\uc57d\uc5c5\uccb4\uac00 \ubcf4\uace0\ud55c \uc0ac\uc774\ubc84 \ubcf4\uc548 \uc0ac\uace0 \uc218\ub97c \uc2ec\uac01\ub3c4\ubcc4\ub85c \uc815\ub82c\ud558\uc5ec \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE cybersecurity_incidents(id INT, contractor VARCHAR(255), severity INT, date DATE);", "output": "SELECT contractor, severity, COUNT(*) as count FROM cybersecurity_incidents WHERE date > DATE_SUB(NOW(), INTERVAL 6 MONTH) GROUP BY contractor, severity ORDER BY severity DESC;"}
{"input": " \uc9c0\ub09c 5\ub144 \ub3d9\uc548 \uc2a4\ud3ec\uce20\uce74\uc5d0 \ub300\ud55c \uc548\uc804 \ud14c\uc2a4\ud2b8\uac00 \uba87 \ubc88\uc774\ub098 \uc2e4\uc2dc\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE SafetyTests (Vehicle VARCHAR(50), Year INT); INSERT INTO SafetyTests (Vehicle, Year) VALUES ('Corvette', 2018), ('Corvette', 2019), ('Corvette', 2020), ('Corvette', 2021), ('Corvette', 2022), ('Mustang', 2018), ('Mustang', 2019), ('Mustang', 2020), ('Mustang', 2021), ('Mustang', 2022), ('Camaro', 2018), ('Camaro', 2019), ('Camaro', 2020), ('Camaro', 2021), ('Camaro', 2022);", "output": "SELECT COUNT(*) FROM SafetyTests WHERE Vehicle LIKE '%Corvette%' OR Vehicle LIKE '%Mustang%' OR Vehicle LIKE '%Camaro%' AND Year >= YEAR(CURRENT_DATE) - 5;"}
{"input": " \uac01 \uc7a5\ub974\uc758 VR \uac8c\uc784 \uc218\uc640 \ud574\ub2f9 \ub514\uc790\uc774\ub108\uac00 VR \uac8c\uc784 \uac1c\ubc1c\uc5d0\uc11c \ubcf4\uc720\ud55c \ucd1d \uacbd\ud5d8 \uc5f0\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE VR_Games (GameID INT, GameName VARCHAR(50), Genre VARCHAR(20)); CREATE TABLE Designers (DesignerID INT, DesignerName VARCHAR(50), YearsOfExperience INT); CREATE TABLE VR_GameDesign (GameID INT, DesignerID INT);", "output": "SELECT VR_Games.Genre, SUM(Designers.YearsOfExperience) FROM VR_Games INNER JOIN VR_GameDesign ON VR_Games.GameID = VR_GameDesign.GameID INNER JOIN Designers ON VR_GameDesign.DesignerID = Designers.DesignerID GROUP BY VR_Games.Genre;"}
{"input": " 2021\ub144 \uc544\ud504\ub9ac\uce74\uc5f0\ud569\uc774 \uc81c\uacf5\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0\uc758 \ucd1d \uaddc\ubaa8\ub97c \uad6d\uac00\ubcc4\ub85c \ubcf4\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE HumanitarianAssistance (id INT, year INT, country VARCHAR(255), assistance VARCHAR(255));", "output": "SELECT country, SUM(1) as total_assistance FROM HumanitarianAssistance WHERE year = 2021 AND country IN ('African Union member countries') GROUP BY country;"}
{"input": " \ub9e4\ub144 \ub300\uc11c\uc591\uc5d0\uc11c \ud574\uc591 \uc5f0\uad6c \ud0d0\uc0ac\ub97c \ud558\ub294 \ucd1d \ud69f\uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE research_expeditions (expedition_date DATE, location TEXT, expedition_type TEXT); INSERT INTO research_expeditions VALUES ('2019-02-01', 'Atlantic Ocean', 'Biological'), ('2020-06-15', 'Atlantic Ocean', 'Geological'), ('2019-11-30', 'Atlantic Ocean', 'Chemical');", "output": "SELECT EXTRACT(YEAR FROM expedition_date) AS year, COUNT(*) AS num_expeditions FROM research_expeditions WHERE location = 'Atlantic Ocean' GROUP BY year ORDER BY year;"}
{"input": " \uc9c0\ub09c \ubd84\uae30 \uc804\uc2dc\ud68c \ubc29\ubb38 \uce21\uba74\uc5d0\uc11c \uac00\uc7a5 \ud65c\ubc1c\ud55c \uc0c1\uc704 5\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Exhibition (id INT, name VARCHAR(100), Visitor_id INT, country VARCHAR(50)); INSERT INTO Exhibition (id, name, Visitor_id, country) VALUES (1, 'Ancient Civilizations', 1, 'USA'), (2, 'Modern Art', 2, 'Canada'), (3, 'Nature Photography', 3, 'Mexico'), (4, 'Wildlife', 4, 'Brazil'), (5, 'Robotics', 5, 'USA');", "output": "SELECT Exhibition.country, COUNT(DISTINCT Exhibition.Visitor_id) as visit_count FROM Exhibition WHERE Exhibition.interaction_date >= CURDATE() - INTERVAL 3 MONTH GROUP BY Exhibition.country ORDER BY visit_count DESC LIMIT 5;"}
{"input": " 1\ub144 \uc774\ub0b4\uc5d0 \uc5ec\ub7ec \uac74\uc758 \uccad\uad6c\ub97c \ubc1b\uc740 \ubcf4\ud5d8 \uacc4\uc57d\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Policyholder (PolicyholderID INT, Name VARCHAR(50), PolicyType VARCHAR(20)); CREATE TABLE Claim (ClaimID INT, PolicyholderID INT, ClaimDate DATE);", "output": "SELECT PolicyholderID, Name, PolicyType, COUNT(*) OVER (PARTITION BY PolicyholderID) AS ClaimCount FROM (SELECT PolicyholderID, Name, PolicyType, YEAR(ClaimDate) AS ClaimYear, ROW_NUMBER() OVER (PARTITION BY PolicyholderID, YEAR(ClaimDate) ORDER BY ClaimDate DESC) AS RankClaimDate FROM Policyholder JOIN Claim ON Policyholder.PolicyholderID = Claim.PolicyholderID) AS Subquery WHERE RankClaimDate = 1;"}
{"input": " \ub274\uc695\uacfc \ud50c\ub85c\ub9ac\ub2e4\uc758 \ubaa8\ub4e0 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uaddc\uc815\uacfc \ud574\ub2f9 \ubc1c\ud6a8\uc77c\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE mental_health_parity (id INT, regulation VARCHAR(100), effective_date DATE); INSERT INTO mental_health_parity (id, regulation, effective_date) VALUES (1, 'Regulation 1', '2010-01-01'), (2, 'Regulation 2', '2015-01-01');", "output": "SELECT regulation, effective_date FROM mental_health_parity WHERE state IN ('New York', 'Florida');"}
{"input": " 'site_t'\uc640 'site_u'\uc5d0 \uacf5\uacf5 \ubd09\uc0ac \ud65c\ub3d9 \uae30\ub85d\uc774 \uc5c6\ub294 \ubc1c\uad74 \ud604\uc7a5\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE site_t (site_id INT); INSERT INTO site_t (site_id) VALUES (1), (2), (3); CREATE TABLE site_u (site_id INT); INSERT INTO site_u (site_id) VALUES (4), (5), (6); CREATE TABLE public_outreach (site_id INT, outreach_type VARCHAR(255)); INSERT INTO public_outreach (site_id, outreach_type) VALUES (1, 'Exhibition'), (2, 'Lecture'), (3, 'Workshop'), (7, 'Tour'), (8, 'Film');", "output": "SELECT context FROM (SELECT 'site_t' AS context EXCEPT SELECT site_id FROM public_outreach WHERE site_id IN (SELECT * FROM site_t) UNION SELECT 'site_u' AS context EXCEPT SELECT site_id FROM public_outreach WHERE site_id IN (SELECT * FROM site_u)) AS subquery;"}
{"input": " \uc624\uc138\uc544\ub2c8\uc544\uc758 \uad70\uc0ac \uae30\uc9c0\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_bases(base_id INT, country VARCHAR(255), region VARCHAR(255)); INSERT INTO military_bases(base_id, country, region) VALUES (1, 'Australia', 'Oceania'), (2, 'New Zealand', 'Oceania'), (3, 'Papua New Guinea', 'Oceania'), (4, 'Fiji', 'Oceania'), (5, 'United States', 'Oceania'), (6, 'France', 'Oceania'), (7, 'United Kingdom', 'Oceania');", "output": "SELECT COUNT(*) FROM military_bases WHERE region = 'Oceania';"}
{"input": " 2021\ub144 3\ubd84\uae30\uc5d0 \uac00\uc785\ud55c \ud68c\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?'", "context": "CREATE SCHEMA demographics; CREATE TABLE member_demographics (member_id INT, member_name VARCHAR(50), age INT, join_date DATE); INSERT INTO member_demographics VALUES (1, 'John Doe', 30, '2021-07-15'), (2, 'Jane Smith', 25, '2021-08-30'), (3, 'Alice Johnson', 35, '2021-09-10');", "output": "SELECT AVG(age) FROM fitness.member_demographics WHERE join_date >= '2021-07-01' AND join_date <= '2021-09-30';"}
{"input": "\uc2e4\ud328\ud55c \uc2dc\ub3c4\ub9cc \uc788\ub294 IP \uc8fc\uc18c\ub97c \uc81c\uc678\ud558\uace0 \uc2e4\ud328\ud55c SSH \ub85c\uadf8\uc778\uacfc \uc131\uacf5\ud55c SSH \ub85c\uadf8\uc778\uc744 \ubaa8\ub450 \uc2dc\ub3c4\ud55c \uace0\uc720 IP \uc8fc\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE login_attempts (ip_address VARCHAR(15), login_status VARCHAR(10)); INSERT INTO login_attempts (ip_address, login_status) VALUES ('192.168.1.1', 'successful'), ('192.168.1.2', 'unsuccessful'), ('192.168.1.3', 'successful'), ('192.168.1.2', 'successful'), ('10.0.0.1', 'unsuccessful');", "output": "SELECT ip_address FROM login_attempts WHERE login_status = 'successful' INTERSECT SELECT ip_address FROM login_attempts WHERE login_status = 'unsuccessful';"}
{"input": " \ub3d9\uc77c\ud55c \uc6b0\uc8fc\uad6d \ub0b4\uc5d0\uc11c \uc774\uc804 \ub3d9\ub8cc\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \uc784\ubb34\ub97c \uc218\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Astronauts (AstronautID INT, Name VARCHAR(50), Spaceflights INT, Agency VARCHAR(50), PreviousSpaceflights INT); INSERT INTO Astronauts (AstronautID, Name, Spaceflights, Agency, PreviousSpaceflights) VALUES (1, 'Neil Armstrong', 2, 'NASA', NULL); INSERT INTO Astronauts (AstronautID, Name, Spaceflights, Agency, PreviousSpaceflights) VALUES (2, 'Buzz Aldrin', 2, 'NASA', 2); INSERT INTO Astronauts (AstronautID, Name, Spaceflights, Agency, PreviousSpaceflights) VALUES (3, 'Yuri Gagarin', 1, 'Roscosmos', NULL); INSERT INTO Astronauts (AstronautID, Name, Spaceflights, Agency, PreviousSpaceflights) VALUES (4, 'Valentina Tereshkova', 1, 'Roscosmos', 1);", "output": "SELECT Name, Spaceflights, Agency, PreviousSpaceflights, Spaceflights - LAG(Spaceflights) OVER (PARTITION BY Agency ORDER BY Spaceflights) AS Spaceflight_Difference FROM Astronauts WHERE Spaceflights - LAG(Spaceflights) OVER (PARTITION BY Agency ORDER BY Spaceflights) > 0;"}
{"input": " \uc9c0\ub09c \ub2ec \uc120\ubc15 \uc720\ud615\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Vessel_Performance(Vessel_ID INT, Vessel_Type VARCHAR(50), Docking_Date DATE, Average_Speed DECIMAL(5,2)); INSERT INTO Vessel_Performance VALUES (1, 'Tanker', '2022-03-15', 15.5), (2, 'Container Ship', '2022-03-18', 18.3), (3, 'Tanker', '2022-03-22', 14.9), (4, 'Bulk Carrier', '2022-03-19', 16.5);", "output": "SELECT Vessel_Type, AVG(Average_Speed) FROM Vessel_Performance WHERE Docking_Date >= DATEADD(MONTH, -1, GETDATE()) GROUP BY Vessel_Type;"}
{"input": " \ucd5c\uc18c \ud55c \uba85\uc758 \uc5ec\uc131 \uc544\ud2f0\uc2a4\ud2b8\uc640 \ud55c \uba85\uc758 \ub0a8\uc131 \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc74c\uc545\uc744 \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uace0\uc720 \uc0ac\uc6a9\uc790\uc758 \ucd1d \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Streams (user_id INTEGER, artist_gender TEXT); INSERT INTO Streams (user_id, artist_gender) VALUES (1, 'Female'), (1, 'Male'), (2, 'Female'), (3, 'Male'), (4, 'Female'), (4, 'Male'), (5, 'Female'), (5, 'Male');", "output": "SELECT COUNT(DISTINCT user_id) as unique_users FROM Streams WHERE artist_gender = 'Female' INTERSECT SELECT COUNT(DISTINCT user_id) as unique_users FROM Streams WHERE artist_gender = 'Male';"}
{"input": " 2020\ub144 \uc544\ud504\ub9ac\uce74 \uac01 \uad6d\uac00\uc758 \uc778\ud130\ub137 \uc0ac\uc6a9\uc790 \ube44\uc728.", "context": "CREATE TABLE internet_users (id INT, country VARCHAR(50), users INT, year INT); INSERT INTO internet_users (id, country, users, year) VALUES (1, 'Nigeria', 100000000, 2020), (2, 'Egypt', 49000000, 2020), (3, 'South Africa', 32000000, 2020), (4, 'Kenya', 20000000, 2020), (5, 'Morocco', 22000000, 2020);", "output": "SELECT country, 100.0 * COUNT(*) / (SELECT SUM(users) FROM internet_users WHERE year = 2020) AS percentage FROM internet_users WHERE year = 2020 GROUP BY country;"}
{"input": "FL'\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 \ud55c \uba85 \uc774\uc0c1\uc778 \ubcf4\ud5d8 \uc720\ud615\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE policyholders (id INT, name TEXT, state TEXT, policy_type TEXT, premium FLOAT); INSERT INTO policyholders (id, name, state, policy_type, premium) VALUES (1, 'John Doe', 'FL', 'Auto', 1200.00), (2, 'Jane Smith', 'FL', 'Auto', 1200.00), (3, 'Jim Brown', 'CA', 'Home', 2500.00);", "output": "SELECT policy_type, COUNT(DISTINCT name) as num_policyholders FROM policyholders WHERE state = 'FL' GROUP BY policy_type HAVING num_policyholders > 1;"}
{"input": " \ud604\ub300\ubbf8\uc220\uacc4\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc791\ud488\uc744 \ub0a8\uae34 \uc791\uac00\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE ArtistWorks (id INT, artist VARCHAR(50), domain VARCHAR(50), quantity INT); INSERT INTO ArtistWorks (id, artist, domain, quantity) VALUES (1, 'Banksy', 'Contemporary', 30), (2, 'Shepard Fairey', 'Contemporary', 40), (3, 'Yayoi Kusama', 'Contemporary', 50);", "output": "SELECT artist, MAX(quantity) FROM ArtistWorks WHERE domain = 'Contemporary';"}
{"input": " 2015\ub144 \uc774\ud6c4 \uac00\ubb44 \uad00\ub828 \ubb38\uc81c\uac00 \uc788\uc5c8\ub358 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc758 \ubaa8\ub4e0 \ud3d0\uc218 \ucc98\ub9ac\uc7a5\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Wastewater_Treatment_Plants (Plant_ID INT, State VARCHAR(20), Year INT, Drought_Issues BOOLEAN); INSERT INTO Wastewater_Treatment_Plants (Plant_ID, State, Year, Drought_Issues) VALUES (1, 'California', 2015, true), (2, 'California', 2016, false);", "output": "SELECT * FROM Wastewater_Treatment_Plants WHERE State = 'California' AND Drought_Issues = true AND Year >= 2015;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uc0e4\ub9ac\uc544 \uc900\uc218 \uae08\uc735 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uace0\uac1d\uc774 \uc9c0\ubd88\ud55c \uc6d0\uae08 \ucd1d\uc561\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE shariah_financing (transaction_id INT, client_id INT, transaction_date DATE, principal DECIMAL(10,2)); INSERT INTO shariah_financing (transaction_id, client_id, transaction_date, principal) VALUES (1, 201, '2022-01-05', 100.00), (2, 202, '2022-02-15', 200.00), (3, 203, '2022-03-30', 50.00);", "output": "SELECT SUM(principal) FROM shariah_financing WHERE transaction_date BETWEEN '2022-01-01' AND '2022-03-31' AND client_id IN (SELECT client_id FROM microfinance_program WHERE program_name = 'Shariah-compliant financing');"}
{"input": " 'WiMax' \uae30\uc220\uc744 \uc0ac\uc6a9\ud558\ub294 \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218\ub294 \uac00\uc785 \uc2dc\uc791 \ub0a0\uc9dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE subscriber_tech (subscriber_id INT, subscription_start_date DATE, technology VARCHAR(50), subscription_fee DECIMAL(10, 2)); INSERT INTO subscriber_tech (subscriber_id, subscription_start_date, technology, subscription_fee) VALUES (1, '2020-01-01', 'Fiber', 50.00), (2, '2019-06-15', 'Cable', 40.00), (4, '2021-02-20', 'WiMax', 45.00);", "output": "SELECT subscription_start_date, COUNT(*) as total_subscribers FROM subscriber_tech WHERE technology = 'WiMax' GROUP BY subscription_start_date;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uad50\uc0ac\ub4e4\uc774 \uba87 \uac1c\uc758 \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE teachers (id INT, country TEXT);CREATE TABLE courses (id INT, teacher_id INT);CREATE TABLE course_completions (course_id INT, completion_date DATE);", "output": "SELECT teachers.country, COUNT(DISTINCT courses.id) as courses_completed FROM teachers INNER JOIN courses ON teachers.id = courses.teacher_id INNER JOIN course_completions ON courses.id = course_completions.course_id GROUP BY teachers.country;"}
{"input": " \uac01 \ubd80\uc11c \uc9c1\uc6d0\uc758 \uc131\ubcc4 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE employee (id INT, department VARCHAR(255), gender VARCHAR(10), salary FLOAT); INSERT INTO employee (id, department, gender, salary) VALUES (1, 'IT', 'M', 80000), (2, 'HR', 'F', 70000), (3, 'Finance', 'M', 90000), (4, 'Marketing', 'F', 75000), (5, 'IT', 'F', 75000), (6, 'HR', 'M', 72000);", "output": "SELECT department, gender, AVG(salary) FROM employee GROUP BY department, gender;"}
{"input": " \ucd9c\uc6d0\ub41c \ud2b9\ud5c8 \uc218\uc5d0 \ub530\ub77c \uc5f0\ub3c4\ubcc4\ub85c \ucd9c\uc6d0\ub41c \uc0c1\uc704 5\uac1c \ubc95\ub960 \uae30\uc220 \ud2b9\ud5c8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE legaltech_patents (patent_id INT, filing_year INT, company VARCHAR(50)); INSERT INTO legaltech_patents (patent_id, filing_year, company) VALUES (1, 2019, 'TechCorp'), (2, 2020, 'LegalLabs'), (3, 2019, 'JusticeTech'), (4, 2018, 'TechCorp'), (5, 2020, 'JusticeTech');", "output": "SELECT filing_year, COUNT(*) AS num_patents FROM legaltech_patents GROUP BY filing_year ORDER BY num_patents DESC LIMIT 5;"}
{"input": " 2020\ub144 \uc720\ub7fd \uc5f0\ud569 \ub3c4\uc2dc \uc9c0\uc5ed\uc758 \ucd1d \ud3d0\uae30\ubb3c \ubc1c\uc0dd\ub7c9\uc744 \uad6d\uac00\ubcc4\ub85c \ubd84\ub958\ud558\uba74 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generation (id INT, country VARCHAR(255), urban VARCHAR(255), amount INT); INSERT INTO waste_generation (id, country, urban, amount) VALUES (1, 'Germany', 'Urban', 12000), (2, 'France', 'Urban', 9000), (3, 'Italy', 'Urban', 8000), (4, 'Spain', 'Urban', 7000);", "output": "SELECT country, SUM(amount) as total_waste FROM waste_generation WHERE urban = 'Urban' AND YEAR(timestamp) = 2020 GROUP BY country;"}
{"input": " \uac01 \uc694\ub9ac\uc758 \ud3c9\uade0 \ud310\ub9e4 \uac00\uaca9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE sales (sale_id INT, dish_id INT, sale_price DECIMAL(5,2), country VARCHAR(255)); INSERT INTO sales (sale_id, dish_id, sale_price, country) VALUES (1, 1, 9.99, 'USA'), (2, 3, 7.99, 'Mexico'), (3, 2, 12.99, 'USA'), (4, 3, 11.99, 'Mexico'), (5, 1, 10.99, 'USA'); CREATE TABLE dishes (dish_id INT, dish_name VARCHAR(255), cuisine VARCHAR(255)); INSERT INTO dishes (dish_id, dish_name, cuisine) VALUES (1, 'Quinoa Salad', 'Mediterranean'), (2, 'Chicken Caesar Wrap', 'Mediterranean'), (3, 'Tacos', 'Mexican');", "output": "SELECT c.cuisine, AVG(s.sale_price) as avg_sale_price FROM sales s INNER JOIN dishes d ON s.dish_id = d.dish_id INNER JOIN (SELECT cuisine FROM dishes GROUP BY cuisine) c ON d.cuisine = c.cuisine GROUP BY c.cuisine;"}
{"input": " '\uae08\uc18d' \uacf5\uc7a5\uc758 \ucd1d '\uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9'\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE factories (id INT, name TEXT, type TEXT, energy_consumption FLOAT); INSERT INTO factories (id, name, type, energy_consumption) VALUES (1, 'metal factory', 'metal', 1000.0), (2, 'chemical factory', 'chemical', 2000.0), (3, 'metal factory', 'metal', 1500.0);", "output": "SELECT SUM(energy_consumption) FROM factories WHERE type = 'metal';"}
{"input": " \uac00\uc7a5 \ube60\ub978 \ubc1c\uc0ac \ub0a0\uc9dc\ub97c \uae30\uc900\uc73c\ub85c \ub3d9\uc810\uc744 \ucc98\ub9ac\ud558\uc5ec \uc218\ud589\ud55c \uc784\ubb34 \uc218\uc5d0 \ub530\ub77c \uc6b0\uc8fc\uc120\uc758 \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecraft_Mission_Ranks (id INT, spacecraft_id INT, mission_name VARCHAR(100), mission_date DATE, launch_order INT); INSERT INTO Spacecraft_Mission_Ranks (id, spacecraft_id, mission_name, mission_date, launch_order) VALUES (1, 1, 'Apollo 11', '1969-07-16', 1);", "output": "SELECT spacecraft_id, DENSE_RANK() OVER (ORDER BY COUNT(*) DESC, MIN(mission_date) ASC) as mission_rank FROM Spacecraft_Mission_Ranks GROUP BY spacecraft_id"}
{"input": " \ucd5c\uc18c 2\ubc88\uc758 \ud22c\uc790 \ub77c\uc6b4\ub4dc\ub97c \uac70\uce5c \ud68c\uc0ac\ub97c \uc124\ub9bd\ud55c \uace0\uc720\ud55c \ucc3d\uc5c5\uc790\uc758 \uc218\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE company (id INT, name TEXT, founder_id INT); INSERT INTO company (id, name, founder_id) VALUES (1, 'Acme Inc', 101), (2, 'Beta Corp', 102), (3, 'Gamma PLC', 103), (4, 'Delta Co', 104); CREATE TABLE investment (id INT, company_id INT, round INT); INSERT INTO investment (id, company_id, round) VALUES (1, 1, 1), (2, 1, 2), (3, 2, 1), (4, 3, 1), (5, 3, 2), (6, 4, 1);", "output": "SELECT COUNT(DISTINCT founder_id) FROM company WHERE id IN (SELECT company_id FROM investment GROUP BY company_id HAVING COUNT(DISTINCT round) >= 2)"}
{"input": " '\uc194\ub77c\ub098' \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uac70\ub798 \uc218\uc218\ub8cc\ub97c \ubc1b\ub294 \uc2a4\ub9c8\ud2b8 \uacc4\uc57d\uc758 \ucc3d\uc2dc\uc790\ub294 \ub204\uad6c\uc77c\uae4c\uc694?", "context": "CREATE TABLE smart_contracts (contract_id INT, contract_name VARCHAR(50), network VARCHAR(20), contract_language VARCHAR(20), contract_creator VARCHAR(50), contract_timestamp TIMESTAMP, total_fees INT); INSERT INTO smart_contracts (contract_id, contract_name, network, contract_language, contract_creator, contract_timestamp, total_fees) VALUES (1, 'SmartContractSolana', 'Solana', 'Rust', 'Anatoly', '2022-03-21 09:45:00', 8000), (2, 'AnotherSolanaContract', 'Solana', 'Rust', 'Raj Gokal', '2022-03-22 11:30:00', 6000);", "output": "SELECT contract_creator, total_fees FROM smart_contracts WHERE network = 'Solana' ORDER BY total_fees DESC LIMIT 1;"}
{"input": " 2021\ub144\uc5d0 \ube44\ud574 2022\ub144\uc5d0 \ub354 \ub9ce\uc740 \uc591\uc774 \uc0dd\uc0b0\ub41c \ud76c\ud1a0\ub958 \uc6d0\uc18c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE production (year INT, element TEXT, volume INT); INSERT INTO production (year, element, volume) VALUES (2021, 'neodymium', 15000), (2022, 'neodymium', 18000), (2021, 'dysprosium', 8000), (2022, 'dysprosium', 10000); CREATE TABLE elements (element TEXT); INSERT INTO elements (element) VALUES ('neodymium'), ('dysprosium');", "output": "SELECT e.element, p2.volume - p1.volume AS volume_difference FROM elements e JOIN production p1 ON e.element = p1.element AND p1.year = 2021 JOIN production p2 ON e.element = p2.element AND p2.year = 2022 WHERE p2.volume > p1.volume;"}
{"input": " VC1\uacfc VC2 \ubaa8\ub450\ub85c\ubd80\ud130 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biotech; CREATE TABLE if not exists biotech.startups (name VARCHAR(255), location VARCHAR(255)); CREATE TABLE if not exists biotech.funding (startup_name VARCHAR(255), vc_name VARCHAR(255)); INSERT INTO biotech.startups (name, location) VALUES ('Startup1', 'City1'), ('Startup2', 'City2'); INSERT INTO biotech.funding (startup_name, vc_name) VALUES ('Startup1', 'VC1'), ('Startup1', 'VC2'), ('Startup2', 'VC1');", "output": "SELECT s.name FROM biotech.startups s JOIN biotech.funding f1 ON s.name = f1.startup_name JOIN biotech.funding f2 ON s.name = f2.startup_name WHERE f1.vc_name = 'VC1' AND f2.vc_name = 'VC2';"}
{"input": " \ud30c\ub9ac\uc640 \ub274\uc695\uc5d0\uc11c \uc804\uc2dc\ub41c \uc791\ud488\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT PRIMARY KEY, Name VARCHAR(255), Nationality VARCHAR(255)); CREATE TABLE Artworks (ArtworkID INT PRIMARY KEY, Title VARCHAR(255), ArtistID INT, Year INT); CREATE TABLE Exhibitions (ExhibitionID INT PRIMARY KEY, Name VARCHAR(255), StartDate DATE, EndDate DATE, City VARCHAR(255)); CREATE TABLE ExhibitionArtworks (ExhibitionID INT, ArtworkID INT);", "output": "SELECT Artworks.Title FROM Artworks INNER JOIN ExhibitionArtworks ON Artworks.ArtworkID = ExhibitionArtworks.ArtworkID INNER JOIN Exhibitions ON ExhibitionArtworks.ExhibitionID = Exhibitions.ExhibitionID WHERE Exhibitions.City IN ('Paris', 'New York') GROUP BY Artworks.Title HAVING COUNT(DISTINCT Exhibitions.City) = 2;"}
{"input": " \uc77c\ubcf8\uc774\ub098 \ud638\uc8fc \ud50c\ub808\uc774\uc5b4\ub294 \uc5b4\ub5a4 \uc5b4\ub4dc\ubca4\ucc98 \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud588\ub098\uc694?", "context": "CREATE TABLE Games (GameID INT PRIMARY KEY, Name VARCHAR(50), Genre VARCHAR(50), ReleaseDate DATE); INSERT INTO Games (GameID, Name, Genre, ReleaseDate) VALUES (1, 'Game A', 'Action', '2020-01-01'); INSERT INTO Games (GameID, Name, Genre, ReleaseDate) VALUES (2, 'Game B', 'Adventure', '2019-05-15'); INSERT INTO Games (GameID, Name, Genre, ReleaseDate) VALUES (3, 'Game C', 'Simulation', '2021-03-20');   CREATE TABLE PlayerGameStats (PlayerID INT, GameID INT, Score INT, PRIMARY KEY (PlayerID, GameID)); INSERT INTO PlayerGameStats (PlayerID, GameID, Score) VALUES (1, 1, 100); INSERT INTO PlayerGameStats (PlayerID, GameID, Score) VALUES (2, 2, 200); INSERT INTO PlayerGameStats (PlayerID, GameID, Score) VALUES (3, 3, 150);   CREATE TABLE Players (PlayerID INT PRIMARY KEY, Name VARCHAR(50), Age INT, Country VARCHAR(50)); INSERT INTO Players (PlayerID, Name, Age, Country) VALUES (1, 'John Smith', 25, 'USA'); INSERT INTO Players (PlayerID, Name, Age, Country) VALUES (2, 'Susan Johnson', 30, 'Japan'); INSERT INTO Players (PlayerID, Name, Age, Country) VALUES (3, 'Mark Brown', 22, 'Australia');", "output": "SELECT Games.Name FROM Players JOIN PlayerGameStats ON Players.PlayerID = PlayerGameStats.PlayerID JOIN Games ON PlayerGameStats.GameID = Games.GameID WHERE Players.Country = 'Japan' OR Players.Country = 'Australia' AND Games.Genre = 'Adventure';"}
{"input": " \uc758\ub8cc \uc808\ucc28 'Y'\ub97c \ud3ec\ud568\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac \uae30\ub85d\uc744 'Z' \uc808\ucc28\ub85c \uc5c5\ub370\uc774\ud2b8", "context": "CREATE TABLE Astronauts (Name TEXT, Medical_Procedures TEXT); INSERT INTO Astronauts (Name, Medical_Procedures) VALUES ('John Glenn', 'Y'), ('Valentina Tereshkova', 'Y'), ('Neil Armstrong', 'checkup');", "output": "WITH updated_procedures AS (UPDATE Astronauts SET Medical_Procedures = 'Z' WHERE Medical_Procedures = 'Y') SELECT * FROM updated_procedures;"}
{"input": "\ub17c\ubc14\uc774\ub108\ub9ac\ub85c \ud655\uc778\ub418\uace0 HR \ubd80\uc11c\uc5d0\uc11c \uadfc\ubb34\ud558\ub294 \uc9c1\uc6d0\uc758 \ucd5c\uc800 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(20), GenderIdentity VARCHAR(20), Salary DECIMAL(10,2)); INSERT INTO Employees (EmployeeID, Department, GenderIdentity, Salary) VALUES (1, 'IT', 'Male', 70000.00), (2, 'IT', 'Female', 75000.00), (3, 'HR', 'Non-binary', 60000.00), (4, 'IT', 'Non-binary', 70000.00), (5, 'HR', 'Transgender', 75000.00), (6, 'HR', 'Non-binary', 62000.00);", "output": "SELECT MIN(Salary) FROM Employees WHERE Department = 'HR' AND GenderIdentity = 'Non-binary';"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uace0\uac1d\uc774 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mobile_customers (customer_id INT, region VARCHAR(20)); CREATE TABLE broadband_customers (customer_id INT, region VARCHAR(20)); INSERT INTO mobile_customers (customer_id, region) VALUES (1, 'NE'), (2, 'SE'), (3, 'NW'); INSERT INTO broadband_customers (customer_id, region) VALUES (4, 'NE'), (5, 'SW'), (6, 'NE');", "output": "SELECT 'mobile' as service, region, COUNT(*) as num_customers FROM mobile_customers GROUP BY region UNION ALL SELECT 'broadband', region, COUNT(*) FROM broadband_customers GROUP BY region;"}
{"input": " \uadf8\ub79c\ub4dc \uc2ac\ub7a8 \ud1a0\ub108\uba3c\ud2b8\uc5d0\uc11c \uc6b0\uc2b9\ud55c \ubaa8\ub4e0 \ud14c\ub2c8\uc2a4 \uc120\uc218\uc758 \uc774\ub984\uc744 \ud1a0\ub108\uba3c\ud2b8 \uc774\ub984 \ubc0f \uc6b0\uc2b9 \uc5f0\ub3c4\uc640 \ud568\uaed8 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE tennis_players (id INT, name VARCHAR(100), country VARCHAR(50)); CREATE TABLE tennis_tournaments (id INT, name VARCHAR(50), year INT, surface VARCHAR(50)); CREATE TABLE tennis_winners (player_id INT, tournament_id INT, year INT, result VARCHAR(50));", "output": "SELECT p.name, t.name as tournament, w.year FROM tennis_players p JOIN tennis_winners w ON p.id = w.player_id JOIN tennis_tournaments t ON w.tournament_id = t.id WHERE w.result = 'Winner';"}
{"input": " \ud638\uc8fc\uc5d0\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubb38\ud654\uc720\uc0b0\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE HeritageSites (id INT, site_name VARCHAR(100), country VARCHAR(50), site_type VARCHAR(50)); INSERT INTO HeritageSites (id, site_name, country, site_type) VALUES (1, 'Sydney Opera House', 'Australia', 'Cultural');", "output": "SELECT COUNT(*) FROM HeritageSites WHERE country = 'Australia';"}
{"input": " \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc758 \uc5f0\uac04 \ucd1d \uad70\uc0ac\uc7a5\ube44 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE equipment_sales (id INT, region VARCHAR(20), equipment_type VARCHAR(20), year INT, sales INT); INSERT INTO equipment_sales (id, region, equipment_type, year, sales) VALUES (1, 'Asia-Pacific', 'Tanks', 2018, 5000000), (2, 'Asia-Pacific', 'Tanks', 2019, 5500000), (3, 'Asia-Pacific', 'Aircraft', 2018, 12000000), (4, 'Asia-Pacific', 'Aircraft', 2019, 13000000);", "output": "SELECT year, SUM(sales) as total_sales FROM equipment_sales WHERE region = 'Asia-Pacific' GROUP BY year ORDER BY year;"}
{"input": " \uc774\uc9d1\ud2b8 \ud654\ud559\ubb3c\uc9c8 \uc800\uc7a5 \uc2dc\uc124\uc758 \ucd5c\uace0 \uc628\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE chemical_storages (id INT, facility_name VARCHAR(100), country VARCHAR(50), temperature FLOAT); INSERT INTO chemical_storages (id, facility_name, country, temperature) VALUES (1, 'Egypt Storage 1', 'Egypt', 35.5), (2, 'Egypt Storage 2', 'Egypt', 37.3);", "output": "SELECT MAX(temperature) FROM chemical_storages WHERE country = 'Egypt';"}
{"input": " \ud3c9\uc810 9\uc810 \uc774\uc0c1\uc778 \uac8c\uc784\uc5d0\ub294 \uba87 \uac1c\uc758 \ub3c5\ud2b9\ud55c \uac8c\uc784 \ub514\uc790\uc778 \uc694\uc18c\uac00 \uc874\uc7ac\ud569\ub2c8\uae4c?", "context": "CREATE TABLE games (game_id INT, game_name VARCHAR(50), rating INT, design_elements VARCHAR(100)); INSERT INTO games (game_id, game_name, rating, design_elements) VALUES (1, 'GameA', 9, 'action, RPG, puzzle'), (2, 'GameB', 10, 'RPG, adventure, simulation'), (3, 'GameC', 9, 'strategy, simulation, FPS'), (4, 'GameD', 8, 'racing, simulation');", "output": "SELECT COUNT(DISTINCT trimmed_design_elements) FROM (SELECT REGEXP_SPLIT_TO_TABLE(design_elements, ',') AS trimmed_design_elements FROM games WHERE rating >= 9) AS split_design_elements;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac8c\uc2dc\ub41c \ubbf8\ub514\uc5b4 \ub9ac\ud130\ub7ec\uc2dc \uad00\ub828 \ub3d9\uc601\uc0c1\uc758 \ud3c9\uade0 \uc870\ud68c\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE videos (id INT, title VARCHAR(255), views INT, publish_date DATE, topic VARCHAR(255));", "output": "SELECT AVG(views) FROM videos WHERE topic = 'media literacy' AND publish_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uc9c0\ucd9c\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE budgets (program_id VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO budgets (program_id, budget) VALUES ('Education', 5000.00), ('Health', 7000.00); CREATE TABLE expenses (expense_id INT, program_id VARCHAR(20), amount DECIMAL(10,2)); INSERT INTO expenses (expense_id, program_id, amount) VALUES (1, 'Education', 500.00), (2, 'Health', 300.00), (3, 'Education', 250.00);", "output": "SELECT program_id, SUM(amount) AS total_budget_spent FROM expenses GROUP BY program_id;"}
{"input": " \uc644\uc804 \ucc44\uc2dd \uc778\uc99d\uc744 \ubc1b\uc740 \uc81c\ud488\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE products (product_id INT, certified_vegan BOOLEAN); INSERT INTO products VALUES (1, true), (2, false), (3, false), (4, true), (5, true), (6, false), (7, true), (8, false), (9, true), (10, false);", "output": "SELECT (COUNT(p.certified_vegan) * 100.0 / (SELECT COUNT(*) FROM products)) AS vegan_percentage FROM products p WHERE p.certified_vegan = true;"}
{"input": " \ucd5c\uc885 \uc5c5\ub370\uc774\ud2b8 \ub0a0\uc9dc\uc21c\uc73c\ub85c \ubc94\uc8fc\ubcc4\ub85c \uad70\uc0ac \uae30\uc220\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE military_tech (id INT, tech_name VARCHAR(50), category VARCHAR(30), last_update DATE); INSERT INTO military_tech (id, tech_name, category, last_update) VALUES (1, 'Fighter Jet', 'Aircraft', '2022-01-01'); INSERT INTO military_tech (id, tech_name, category, last_update) VALUES (2, 'Submarine', 'Naval', '2021-05-15');", "output": "SELECT category, tech_name, last_update FROM military_tech ORDER BY last_update DESC;"}
{"input": " e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \ucc38\uac00\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc744 \uadf8\ub4e4\uc774 \uac70\uc8fc\ud558\ub294 \ub300\ub959\ubcc4\ub85c \ubd84\ub958\ud558\uc5ec \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, Name VARCHAR(100), Age INT, Country VARCHAR(50)); INSERT INTO Players VALUES (1, 'John Doe', 25, 'USA'); INSERT INTO Players VALUES (2, 'Jane Smith', 28, 'Canada'); CREATE TABLE Countries (Country VARCHAR(50), Continent VARCHAR(50)); INSERT INTO Countries VALUES ('USA', 'North America'); INSERT INTO Countries VALUES ('Canada', 'North America'); CREATE TABLE EsportsEvents (PlayerID INT, EventName VARCHAR(100)); INSERT INTO EsportsEvents VALUES (1, 'GameX Championship'); INSERT INTO EsportsEvents VALUES (2, 'TournamentY');", "output": "SELECT C.Continent, AVG(P.Age) as AvgAge FROM Players P JOIN Countries C ON P.Country = C.Country JOIN EsportsEvents E ON P.PlayerID = E.PlayerID GROUP BY C.Continent;"}
{"input": " \uc0c1\uc704 2\uac1c \ud22c\uc790 \uad6d\uac00\uc758 \ubd84\uae30\ub2f9 \uae30\ud6c4 \uc801\uc751\uc5d0 \ub300\ud55c \ud3c9\uade0 \ud22c\uc790\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE country_investments (country VARCHAR(255), sector VARCHAR(255), investment_amount NUMERIC, quarter VARCHAR(255));", "output": "SELECT country, AVG(investment_amount) FROM (SELECT country, sector, investment_amount, quarter FROM country_investments WHERE sector = 'climate adaptation' ORDER BY investment_amount DESC LIMIT 2) subquery GROUP BY country;"}
{"input": " \uae30\ubd80\uae08 \ucd1d\uc561\uc744 \uae30\uc900\uc73c\ub85c \uc6d0\uc778\ubcc4 \uae30\ubd80\uae08\uc561 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE donations (donor_id INT, donation_amount DECIMAL(10, 2), cause_category VARCHAR(255)); INSERT INTO donations (donor_id, donation_amount, cause_category) VALUES (1, 5000.00, 'Education'), (2, 3000.00, 'Health'), (3, 7000.00, 'Environment');", "output": "SELECT cause_category, SUM(donation_amount) AS total_donation, ROW_NUMBER() OVER (ORDER BY SUM(donation_amount) DESC) AS rank FROM donations GROUP BY cause_category;"}
{"input": " \uc778\ub3c4\uc591\uc758 \ud574\uc591 \uc0dd\ubb3c\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ucd5c\ub300 \uae4a\uc774\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (name TEXT, max_depth FLOAT, ocean TEXT);   CREATE TABLE ocean_regions (name TEXT, area FLOAT);", "output": "SELECT MAX(max_depth)   FROM marine_species   WHERE ocean = (SELECT name FROM ocean_regions WHERE area = 'Indian Ocean');"}
{"input": " \uc774\ubc88 \ub2ec \uac01 \uc57d\uad6d\uc758 \ub204\uc801 \ud310\ub9e4\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Dispensaries (DispensaryID INT, DispensaryName VARCHAR(50)); CREATE TABLE Sales (SaleID INT, DispensaryID INT, QuantitySold INT, SaleDate DATE);", "output": "SELECT DispensaryID, SaleDate, QuantitySold, SUM(QuantitySold) OVER (PARTITION BY DispensaryID ORDER BY SaleDate) AS RunningTotal FROM Sales WHERE SaleDate >= DATEADD(month, 0, GETDATE());"}
{"input": "\uc804\ubb38 \uac1c\ubc1c \uc2dc\uac04 \uce21\uba74\uc5d0\uc11c \uc0c1\uc704 3\uba85\uc758 \ud559\uc0dd\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teacher_professional_development (student_id INT, hours INT); INSERT INTO teacher_professional_development (student_id, hours) VALUES (1, 20), (2, 30), (3, 40), (4, 50), (5, 60), (6, 70);", "output": "SELECT student_id, hours, ROW_NUMBER() OVER (ORDER BY hours DESC) as rank FROM teacher_professional_development WHERE rank <= 3;"}
{"input": "\uac01 \uc800\uc790\uac00 \uc4f4 \ucd1d \ub17c\ubb38 \uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uadf8 \uc911 '\uce74\ud14c\uace0\ub9ac3'\uc5d0 \uac8c\uc7ac\ub41c \ub17c\ubb38\uc740 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE articles (id INT, title VARCHAR(50), author_id INT); CREATE TABLE authors (id INT, name VARCHAR(50)); INSERT INTO articles (id, title, author_id) VALUES (1, 'Article1', 1), (2, 'Article2', 1), (3, 'Article3', 2); INSERT INTO authors (id, name) VALUES (1, 'John Smith'), (2, 'Jane Doe'); CREATE TABLE category_assignments (article_id INT, category VARCHAR(20)); INSERT INTO category_assignments (article_id, category) VALUES (1, 'category1'), (1, 'category2'), (2, 'category3'), (3, 'category1');", "output": "SELECT a.name, COUNT(*) as total_articles, SUM(CASE WHEN ca.category = 'category3' THEN 1 ELSE 0 END) as articles_in_category3 FROM articles a JOIN authors au ON a.author_id = au.id LEFT JOIN category_assignments ca ON a.id = ca.article_id GROUP BY a.name"}
{"input": " 2021\ub144 1\ubd84\uae30\uc5d0 \uac01 \uc6d0\uc778\uc744 \uc9c0\uc6d0\ud55c \uace0\uc720 \uae30\ubd80\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, donor_name VARCHAR(255)); INSERT INTO donors (id, donor_name) VALUES (1, 'Alice'), (2, 'Bob'), (3, 'Charlie'); CREATE TABLE causes (id INT, cause_name VARCHAR(255)); INSERT INTO causes (id, cause_name) VALUES (1, 'Poverty Reduction'), (2, 'Disaster Relief'); CREATE TABLE donations (id INT, donor_id INT, cause_id INT, donation_date DATE); INSERT INTO donations (id, donor_id, cause_id, donation_date) VALUES (1, 1, 1, '2021-01-01'), (2, 2, 1, '2021-01-02'), (3, 3, 2, '2021-01-03');", "output": "SELECT d.cause_id, COUNT(DISTINCT d.donor_id) as unique_donors FROM donations d WHERE QUARTER(d.donation_date) = 1 AND YEAR(d.donation_date) = 2021 GROUP BY d.cause_id;"}
{"input": " \uc9c0\ub09c 9\uac1c\uc6d4 \ub3d9\uc548 \uc704\ud611 \uc778\ud154\ub9ac\uc804\uc2a4\uc758 \uc0ac\uc774\ubc84 \ubcf4\uc548 \ubc0f \ubb3c\ub9ac\uc801 \ubcf4\uc548\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE threat_intelligence_budget (category TEXT, allocation_date DATE, budget_amount NUMERIC); INSERT INTO threat_intelligence_budget (category, allocation_date, budget_amount) VALUES ('Cybersecurity', '2022-03-01', 65000), ('Physical Security', '2022-03-01', 35000), ('Personnel Security', '2022-03-01', 25000), ('Cybersecurity', '2022-04-01', 70000), ('Physical Security', '2022-04-01', 40000), ('Personnel Security', '2022-04-01', 30000);", "output": "SELECT SUM(budget_amount) FROM threat_intelligence_budget WHERE (category IN ('Cybersecurity', 'Physical Security')) AND allocation_date >= (SELECT CURRENT_DATE - INTERVAL '9 months');"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \uac00\uc7a5 \uad11\ubc94\uc704\ud55c \uc778\uc0c1\ud30c \ubbf8\uc220 \uceec\ub809\uc158\uc744 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ubc15\ubb3c\uad00\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Museums (MuseumID int, MuseumName varchar(50), CountryID int); CREATE TABLE Art (ArtID int, ArtName varchar(50), MuseumID int, ArtType varchar(50));", "output": "SELECT Museums.MuseumName, COUNT(Art.ArtID) as TotalImpressionistArt FROM Museums INNER JOIN Art ON Museums.MuseumID = Art.MuseumID WHERE Art.ArtType = 'Impressionist' GROUP BY Museums.MuseumName HAVING Museums.CountryID = (SELECT CountryID FROM Countries WHERE Continent = 'Asia') ORDER BY TotalImpressionistArt DESC;"}
{"input": " \ud558\ub8e8\uc5d0 \ud310\ub9e4\ub418\ub294 \uc637\uc758 \ucd5c\ub300 \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (id INT, product_id INT, size TEXT, quantity INT, sale_date DATE); INSERT INTO sales (id, product_id, size, quantity, sale_date) VALUES (1, 1001, 'XS', 25, '2021-09-01'), (2, 1002, 'XXL', 30, '2021-09-15'), (3, 1003, 'M', 40, '2021-09-20'), (4, 1004, 'L', 50, '2021-09-25');", "output": "SELECT MAX(quantity) FROM sales;"}
{"input": " 2020\ub144 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \ucd1d \uad70\uc0ac\ube44 \uc9c0\ucd9c\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE military_spending (country VARCHAR(50), continent VARCHAR(50), year INT, amount FLOAT); INSERT INTO military_spending (country, continent, year, amount) VALUES ('Nigeria', 'Africa', 2020, 2.5), ('Algeria', 'Africa', 2020, 10.3), ('South Africa', 'Africa', 2020, 6.7);", "output": "SELECT SUM(amount) FROM military_spending WHERE continent = 'Africa' AND year = 2020;"}
{"input": " \uc9c0\ub09c \ud574 \uac01 \uc790\uce58\uad6c\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud55c \ubc94\uc8c4 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crimes (id INT, date DATE, borough VARCHAR(50), type VARCHAR(50));", "output": "SELECT borough, type, COUNT(*) as count FROM crimes WHERE date >= DATEADD(YEAR, -1, GETDATE()) GROUP BY borough, type ORDER BY borough, count DESC;"}
{"input": " \uc724\ub9ac\uc801\uc778 \ub9e4\uc7a5\uacfc \ube44\uc724\ub9ac\uc801\uc778 \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uac01 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales (product_id INT, store_type VARCHAR(255), quantity INT); INSERT INTO sales (product_id, store_type, quantity) VALUES (1, 'Ethical', 100), (1, 'Non-Ethical', 150), (2, 'Ethical', 200), (3, 'Non-Ethical', 50);", "output": "SELECT product_id, store_type, SUM(quantity) AS total_quantity FROM sales GROUP BY product_id, store_type;"}
{"input": " \uc778\uad6c 500\ub9cc \uba85\uc774 \ub118\ub294 \uc544\uc2dc\uc544 \ub3c4\uc2dc\uc758 \ud3c9\uade0 \uc7ac\ud65c\uc6a9\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RecyclingRates (city VARCHAR(255), continent VARCHAR(255), population INT, recycling_rate FLOAT); INSERT INTO RecyclingRates (city, continent, population, recycling_rate) VALUES ('Tokyo', 'Asia', 9000000, 40), ('Mumbai', 'Asia', 20000000, 25), ('Seoul', 'Asia', 10000000, 55);", "output": "SELECT AVG(recycling_rate) FROM RecyclingRates WHERE continent = 'Asia' AND population > 5000000;"}
{"input": " \uc9c0\ub09c \ub2ec \ubb34\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \ud1b5\ud574 \uc2dc\ubcc4\ub85c \ubc1b\uc740 \uc9c0\uc6d0\uae08 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dance_programs (program_id INT, program_name VARCHAR(50)); CREATE TABLE program_funding (program_id INT, source_id INT, amount DECIMAL(5,2)); CREATE TABLE funding_sources (source_id INT, source_name VARCHAR(50)); CREATE TABLE dance_events (event_id INT, program_id INT, city VARCHAR(50), event_date DATE); INSERT INTO dance_programs (program_id, program_name) VALUES (1, 'Ballet'), (2, 'Modern Dance'), (3, 'Hip Hop'); INSERT INTO funding_sources (source_id, source_name) VALUES (1, 'Government Grants'), (2, 'Private Donors'), (3, 'Corporate Sponsors'); INSERT INTO dance_events (event_id, program_id, city, event_date) VALUES (1, 1, 'New York', '2022-01-01'), (2, 2, 'Los Angeles', '2022-02-10'), (3, 3, 'Chicago', '2022-05-15'); INSERT INTO program_funding (program_id, source_id, amount) VALUES (1, 1, 10000), (1, 2, 5000), (2, 1, 7000), (2, 3, 15000), (3, 2, 8000), (3, 3, 12000);", "output": "SELECT e.city, SUM(p.amount) as total_funding FROM dance_programs p INNER JOIN program_funding f ON p.program_id = f.program_id INNER JOIN dance_events e ON p.program_id = e.program_id INNER JOIN funding_sources fs ON f.source_id = fs.source_id WHERE e.event_date >= DATEADD(month, -1, GETDATE()) GROUP BY e.city;"}
{"input": " \uac70\ub9ac\uac00 600km\uc774\uace0 \uc694\uae08\uc774 $100\uc778 '\uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54'\uc5d0\uc11c '\ub85c\uc2a4\uc564\uc824\ub808\uc2a4'\uae4c\uc9c0\uc758 \uc0c8 \uae30\ucc28 \uacbd\ub85c\ub97c \uc0bd\uc785\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stations (station_id INT, station_name TEXT); INSERT INTO stations (station_id, station_name) VALUES (1, 'San Francisco'), (2, 'Los Angeles'); CREATE TABLE train_routes (route_id INT, start_station INT, end_station INT, distance INT, fare DECIMAL);", "output": "INSERT INTO train_routes (route_id, start_station, end_station, distance, fare) VALUES (1, (SELECT station_id FROM stations WHERE station_name = 'San Francisco'), (SELECT station_id FROM stations WHERE station_name = 'Los Angeles'), 600, 100);"}
{"input": " \uac74\uc124\ub178\uc870\uc640 \uad50\uc721\ub178\uc870\uc758 \ucd1d \uc870\ud569\uc6d0 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE construction_union (id INT, name VARCHAR, dob DATE); INSERT INTO construction_union (id, name, dob) VALUES (1, 'Alice', '1985-05-01'); CREATE TABLE education_union (id INT, name VARCHAR, dob DATE); INSERT INTO education_union (id, name, dob) VALUES (1, 'Bob', '1990-08-15');", "output": "SELECT COUNT(*) FROM ( (SELECT * FROM construction_union) UNION (SELECT * FROM education_union) ) AS all_unions;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uace0\uac1d\uc5d0\uac8c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \uc0c1\uc704 10\uba85\uc758 \uc9c0\uc5ed\uc0ac\ud68c \uc758\ub8cc \uc885\uc0ac\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE clients_served (worker_id INT, clients_served INT);", "output": "SELECT worker_id, clients_served FROM (SELECT worker_id, clients_served, ROW_NUMBER() OVER (ORDER BY clients_served DESC) as rn FROM clients_served) x WHERE rn <= 10;"}
{"input": " \uc5f0\uad6c\uc790\ubcc4 \uc720\uc804\uc790 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \ud574\ub2f9 \uc2dc\uc791 \ub0a0\uc9dc\ub97c \uc2dc\uc791 \ub0a0\uc9dc\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA if not exists genetics;CREATE TABLE if not exists genetics.research_projects (id INT PRIMARY KEY, researcher_id INT, name VARCHAR(255), start_date DATE); INSERT INTO genetics.research_projects (id, researcher_id, name, start_date) VALUES (1, 1, 'ProjectA', '2022-01-01'), (2, 2, 'ProjectB', '2021-06-15'), (3, 1, 'ProjectC', '2022-03-05'), (4, 3, 'ProjectD', '2021-12-20');", "output": "SELECT researcher_id, COUNT(*) AS num_projects, MIN(start_date) AS start_date FROM genetics.research_projects WINDOW W AS (PARTITION BY researcher_id ORDER BY start_date ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) GROUP BY researcher_id, W.start_date ORDER BY start_date;"}
{"input": " \uc5f0\uac04 \ucd1d \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donors (id INT, name VARCHAR(255), country VARCHAR(255));CREATE TABLE donations (id INT, donor_id INT, cause_id INT, amount DECIMAL(10, 2), donation_date DATE);", "output": "SELECT YEAR(donation_date), COUNT(*) FROM donations GROUP BY YEAR(donation_date);"}
{"input": " \uc804\uc2dc \ubd80\ubb38\uc5d0\uc11c \uac00\uc7a5 \ud65c\ubc1c\ud55c \ud65c\ub3d9\uc744 \ud3bc\uce58\ub294 \uc5ec\uc131 \uc791\uac00\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE female_artists (artist_id INT, artist_name VARCHAR(255), artist_country VARCHAR(255), artist_birth_date DATE, artist_exhibition_count INT); INSERT INTO female_artists (artist_id, artist_name, artist_country, artist_birth_date, artist_exhibition_count) VALUES (1, 'Yayoi Kusama', 'Japan', '1929-03-22', 50); INSERT INTO female_artists (artist_id, artist_name, artist_country, artist_birth_date, artist_exhibition_count) VALUES (2, 'Brigit Riley', 'United Kingdom', '1931-04-22', 45);", "output": "SELECT artist_id, artist_name, artist_country, artist_birth_date, artist_exhibition_count, RANK() OVER (ORDER BY artist_exhibition_count DESC) as rank FROM female_artists;"}
{"input": " \uba55\uc2dc\ucf54\uc758 \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \ucd1d \uae30\ubd80 \uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donation_amount DECIMAL(10,2), donation_date DATE, program VARCHAR(50), country VARCHAR(50)); CREATE TABLE Volunteers (id INT, volunteer_name VARCHAR(50), program VARCHAR(50), country VARCHAR(50)); INSERT INTO Donations (id, donation_amount, donation_date, program, country) VALUES (1, 150.00, '2021-01-01', 'Environment', 'Mexico'); INSERT INTO Donations (id, donation_amount, donation_date, program, country) VALUES (2, 250.00, '2021-01-02', 'Health', 'Mexico'); INSERT INTO Volunteers (id, volunteer_name, program, country) VALUES (1, 'Maria Lopez', 'Environment', 'Mexico'); INSERT INTO Volunteers (id, volunteer_name, program, country) VALUES (2, 'Pedro Hernandez', 'Health', 'Mexico');", "output": "SELECT p.program, COUNT(DISTINCT v.volunteer_name) as num_volunteers, SUM(d.donation_amount) as total_donations FROM Donations d INNER JOIN Volunteers v ON d.program = v.program INNER JOIN Programs p ON d.program = p.program WHERE d.country = 'Mexico' GROUP BY p.program;"}
{"input": " '\ub179\uc0c9' \ub178\uc120 \uc2b9\uac1d\uc758 \ud3c9\uade0 \uc694\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fares (line VARCHAR(10), passenger_type VARCHAR(10), fare FLOAT); INSERT INTO fares (line, passenger_type, fare) VALUES ('red', 'adult', 2.50), ('red', 'child', 1.50), ('blue', 'adult', 3.00), ('blue', 'child', 2.00), ('green', 'adult', 3.50), ('green', 'child', 2.50);", "output": "SELECT AVG(fare) FROM fares WHERE line = 'green';"}
{"input": " \uc608\uc0b0\uc774 \ud3c9\uade0 \uc608\uc0b0\ubcf4\ub2e4 \ub9ce\uace0 \ud604\uc7ac \ud65c\uc131\ud654\ub41c \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT PRIMARY KEY, ProgramName VARCHAR(30), ProgramCost DECIMAL(5,2), ProgramStartDate DATE, ProgramEndDate DATE); INSERT INTO Programs (ProgramID, ProgramName, ProgramCost, ProgramStartDate, ProgramEndDate) VALUES (27, 'Education Program', 12000.00, '2021-07-01', '2023-06-30'), (28, 'Healthcare Program', 15000.00, '2020-04-01', '2022-03-31'), (29, 'Disaster Relief Program', 20000.00, '2022-01-01', '2024-12-31'), (30, 'Food Security Program', 10000.00, '2022-06-01', '2024-05-31');", "output": "SELECT ProgramName, ProgramCost FROM Programs WHERE ProgramCost > (SELECT AVG(ProgramCost) FROM Programs) AND ProgramStartDate <= CURDATE() AND ProgramEndDate >= CURDATE();"}
{"input": " 2021\ub144\uc5d0 \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc2dc\ubbfc\uc774 \uc694\uccad\ud558\ub294 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uacf5\uacf5 \uc11c\ube44\uc2a4 \uc720\ud615 3\uac00\uc9c0\ub97c \uc2dd\ubcc4\ud558\uc138\uc694.", "context": "CREATE TABLE PublicServiceRequests (state VARCHAR(20), year INT, service_type VARCHAR(30), requests INT); INSERT INTO PublicServiceRequests (state, year, service_type, requests) VALUES ('California', 2021, 'Parks and Recreation', 1200), ('California', 2021, 'Waste Management', 2000), ('California', 2021, 'Transportation', 1800), ('California', 2021, 'Education', 2500), ('California', 2021, 'Healthcare', 3000);", "output": "SELECT service_type, requests FROM (SELECT service_type, requests, ROW_NUMBER() OVER (ORDER BY requests DESC) AS rank FROM PublicServiceRequests WHERE state = 'California' AND year = 2021) AS subquery WHERE rank <= 3;"}
{"input": "\uc21c\ud658\uacbd\uc81c \uc804\ub7b5\uc744 \uc801\uc6a9\ud55c \uacf5\uc7a5\uc758 \uc9c0\uc5ed\ubcc4 \uadfc\ub85c\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE factories (factory_id INT, name TEXT, location TEXT, region TEXT, num_workers INT, circular_economy BOOLEAN);", "output": "SELECT region, SUM(num_workers) as total_workers FROM factories WHERE circular_economy = true GROUP BY region;"}
{"input": " \"\uc778\uc0c1\ud30c\" \uc804\uc2dc\ud68c\uc758 \ud558\ub8e8 \ucd5c\ub300 \uad00\ub78c\uac1d \uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE daily_visitor_count (date DATE, exhibition_id INT, visitor_count INT); INSERT INTO daily_visitor_count (date, exhibition_id, visitor_count) VALUES ('2022-01-01', 3, 500);", "output": "SELECT MAX(visitor_count) FROM daily_visitor_count WHERE exhibition_id = 3;"}
{"input": " \uac01 \uc6b4\uc1a1\uc218\ub2e8\uc758 \ucd1d CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE if not exists transportation (transport_id INT, transport VARCHAR(20), co2_emission INT); INSERT INTO transportation (transport_id, transport, co2_emission) VALUES (1, 'Airplane', 445), (2, 'Train', 14), (3, 'Car', 185), (4, 'Bus', 80), (5, 'Bicycle', 0);", "output": "SELECT transport, SUM(co2_emission) as total_emission FROM transportation GROUP BY transport;"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc758\ub8cc \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud55c \uc6b0\uc8fc \uc784\ubb34\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (id INT PRIMARY KEY, mission_name VARCHAR(50), num_of_medical_incidents INT);", "output": "SELECT mission_name, RANK() OVER (ORDER BY num_of_medical_incidents DESC) as mission_rank FROM space_missions WHERE num_of_medical_incidents > 0;"}
{"input": " \uc794\uc561\uc774 $5000\ub97c \ucd08\uacfc\ud558\ub294 \ub458 \uc774\uc0c1\uc758 \uacc4\uc88c\ub97c \ubcf4\uc720\ud55c \uace0\uac1d\uc758 \uc774\ub984\uacfc \uacc4\uc88c \uc794\uc561\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accounts_2 (id INT, customer_id INT, type VARCHAR(255), balance DECIMAL(10,2)); INSERT INTO accounts_2 (id, customer_id, type, balance) VALUES (1, 1, 'Checking', 5000.00), (2, 1, 'Savings', 10000.00), (3, 2, 'Checking', 2000.00), (4, 3, 'Savings', 8000.00), (5, 4, 'Checking', 7000.00), (6, 4, 'Savings', 3000.00), (7, 5, 'Checking', 4000.00);", "output": "SELECT DISTINCT a.customer_id, a.balance FROM accounts_2 a INNER JOIN (SELECT customer_id FROM accounts_2 WHERE balance > 5000 GROUP BY customer_id HAVING COUNT(*) > 1) b ON a.customer_id = b.customer_id;"}
{"input": " \uc758\ub8cc \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uc758 \uc804\ubb38 \ubd84\uc57c\ubcc4\ub85c \uad6c\ubd84\ub41c \ub18d\ucd0c \ubc0f \ub3c4\uc2dc \uc758\ub8cc \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uc758 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE rural_clinics (clinic_id INT, provider_name TEXT, provider_specialty TEXT); INSERT INTO rural_clinics (clinic_id, provider_name, provider_specialty) VALUES (1, 'Dr. Smith', 'General Practitioner'), (2, 'Dr. Johnson', 'Pediatrician'); CREATE TABLE urban_clinics (clinic_id INT, provider_name TEXT, provider_specialty TEXT); INSERT INTO urban_clinics (clinic_id, provider_name, provider_specialty) VALUES (1, 'Dr. Lee', 'Cardiologist'), (2, 'Dr. Garcia', 'Dermatologist');", "output": "SELECT 'Rural' AS location, provider_specialty, COUNT(*) AS provider_count FROM rural_clinics GROUP BY provider_specialty UNION SELECT 'Urban', provider_specialty, COUNT(*) FROM urban_clinics GROUP BY provider_specialty;"}
{"input": " \uc778\ub3c4\uc591\uc5d0\uc11c\ub294 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud574\uc591 \uc5f0\uad6c \ud504\ub85c\uc81d\ud2b8\uac00 \uc9c4\ud589\ub418\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE research_projects (id INT, project_name VARCHAR(50), location_latitude FLOAT, location_longitude FLOAT, ocean VARCHAR(50)); INSERT INTO research_projects (id, project_name, location_latitude, location_longitude, ocean) VALUES (1, 'Deep-Sea Coral Study', 12.9716, 77.5946, 'Indian Ocean'), (2, 'Marine Mammal Research', -26.8406, 28.1774, 'Indian Ocean');", "output": "SELECT COUNT(*) FROM research_projects WHERE ocean = 'Indian Ocean';"}
{"input": " \ud638\uc8fc\uc640 \ube0c\ub77c\uc9c8\uc758 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\ub294 \ucd5c\ub300 \ubc0f \ucd5c\uc18c \uc790\uae08\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biotech;USE biotech;CREATE TABLE if not exists startups (name VARCHAR(255), country VARCHAR(255), funding FLOAT);INSERT INTO startups (name, country, funding) VALUES ('Startup1', 'Australia', 6000000), ('Startup2', 'Brazil', 9000000), ('Startup3', 'USA', 3000000), ('Startup4', 'Australia', 7000000), ('Startup5', 'Brazil', 4000000);", "output": "SELECT country, MAX(funding) as max_funding, MIN(funding) as min_funding FROM startups GROUP BY country;"}
{"input": " \uace0\uc720 \uc544\ud2f0\uc2a4\ud2b8 \uc218\uac00 \uac00\uc7a5 \uc801\uc740 \uc74c\uc545 \uc7a5\ub974\uc640 \ucd1d \uc568\ubc94 \ud310\ub9e4\ub7c9\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(255), Genre VARCHAR(50)); CREATE TABLE Albums (AlbumID INT, AlbumName VARCHAR(255), Sales INT, ArtistID INT);", "output": "SELECT A.Genre, COUNT(DISTINCT A.ArtistName) AS Artists_Count, SUM(Albums.Sales) AS Total_Sales FROM Artists A INNER JOIN (SELECT ArtistID, COUNT(DISTINCT ArtistID) FROM Artists GROUP BY Genre HAVING COUNT(DISTINCT ArtistID) = (SELECT MIN(ArtistCount) FROM (SELECT COUNT(DISTINCT ArtistID) AS ArtistCount FROM Artists GROUP BY Genre) T1)) B ON A.ArtistID = B.ArtistID INNER JOIN Albums ON A.ArtistID = Albums.ArtistID GROUP BY A.Genre;"}
{"input": " \ud2b9\uc815 \ucc44\ub110\uc758 \uac01 \ub3d9\uc601\uc0c1\uc5d0 \ub300\ud55c \uc870\ud68c\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE video_views (video VARCHAR(255), channel VARCHAR(255), views INT); INSERT INTO video_views (video, channel, views) VALUES ('Video1', 'Channel1', 10000), ('Video2', 'Channel1', 12000), ('Video3', 'Channel2', 15000), ('Video4', 'Channel1', 11000);", "output": "SELECT channel, video, ROW_NUMBER() OVER (PARTITION BY channel ORDER BY views DESC) as rank FROM video_views;"}
{"input": " \ubc1c\uc0ac \ub0a0\uc9dc\uac00 2010\ub144 1\uc6d4 1\uc77c \uc774\uc804\uc778 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc0ad\uc81c\ud558\uace0 \ub098\uba38\uc9c0 \uc784\ubb34\uc758 \uc0c1\ud0dc\ub97c '\ud65c\uc131'\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE SpaceMissions (ID INT, Name VARCHAR(50), LaunchDate DATE, Status VARCHAR(20)); INSERT INTO SpaceMissions VALUES (1, 'Mission A', '2008-03-12', 'inactive'), (2, 'Mission B', '2012-06-18', 'active'), (3, 'Mission C', '2005-02-03', 'inactive');", "output": "WITH cte AS (DELETE FROM SpaceMissions WHERE LaunchDate < '2010-01-01' RETURNING ID, Status), upd AS (UPDATE SpaceMissions SET Status = 'active' WHERE ID IN (SELECT ID FROM cte)) SELECT * FROM SpaceMissions WHERE Status = 'active';"}
{"input": " \ub300\uc11c\uc591, \ud0dc\ud3c9\uc591, \uc778\ub3c4\uc591\uc758 \ud574\uc591\uc0dd\ubb3c \uc5f0\uad6c \uae30\uc9c0\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE atlantic_ocean (id INT, station TEXT); CREATE TABLE pacific_ocean (id INT, station TEXT); CREATE TABLE indian_ocean (id INT, station TEXT); INSERT INTO atlantic_ocean (id, station) VALUES (1, 'Research Station A'), (2, 'Research Station B'); INSERT INTO pacific_ocean (id, station) VALUES (1, 'Research Station C'), (2, 'Research Station D'); INSERT INTO indian_ocean (id, station) VALUES (1, 'Research Station E'), (2, 'Research Station F');", "output": "SELECT COUNT(*) FROM (SELECT * FROM atlantic_ocean UNION ALL SELECT * FROM pacific_ocean UNION ALL SELECT * FROM indian_ocean) AS ocean_stations;"}
{"input": " \uac01 \uacf5\uc5f0\uc7a5\ubcc4 \ucd1d \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE venues (id INT, name VARCHAR(255), capacity INT); INSERT INTO venues (id, name, capacity) VALUES (1, 'Venue1', 20000); INSERT INTO venues (id, name, capacity) VALUES (2, 'Venue2', 15000);", "output": "SELECT v.name, COUNT(t.id) AS tickets_sold FROM tickets t JOIN games g ON t.game_id = g.id JOIN venues v ON g.venue_id = v.id GROUP BY v.name;"}
{"input": " 1\ub144\uc5d0 \uc778\uc99d\ubc1b\uc740 \ub179\uc0c9\uac74\ucd95\ubb3c\uc740 \ucd5c\ub300 \uba87 \uac1c\uc778\uac00\uc694?", "context": "CREATE TABLE green_buildings (building_id INT, certification_year INT); INSERT INTO green_buildings (building_id, certification_year) VALUES (1, 2016);", "output": "SELECT MAX(certification_year) as max_certification_year FROM green_buildings;"}
{"input": " \uad50\uc721 \ubc0f \ubcf4\uac74 \ubd80\ubb38 \ubaa8\ub450\uc5d0\uc11c \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud55c \uc870\uc9c1\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE organizations (id INT, name TEXT, sector TEXT); INSERT INTO organizations (id, name, sector) VALUES (1, 'UNICEF', 'Education'), (2, 'World Food Programme', 'Disaster Response'), (3, 'Save the Children', 'Health'), (4, 'International Red Cross', 'Health, Education');", "output": "SELECT name FROM organizations WHERE sector = 'Education' INTERSECT SELECT name FROM organizations WHERE sector = 'Health';"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \ub3c4\uc2dc \uc9c0\uc5ed\uc5d0\uc11c \ub2f9\ub1e8\ubcd1 \uc9c4\ub8cc\ub97c \ubc1b\uc740 \ucd1d \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diabetes_consultations (id INT, consult_date DATE, location TEXT, consultation BOOLEAN); INSERT INTO diabetes_consultations (id, consult_date, location, consultation) VALUES (1, '2022-02-15', 'Urban', true); INSERT INTO diabetes_consultations (id, consult_date, location, consultation) VALUES (2, '2022-03-03', 'Urban', true);", "output": "SELECT SUM(CASE WHEN location = 'Urban' THEN 1 ELSE 0 END) FROM diabetes_consultations WHERE consult_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"input": " \uc9c0\ub09c \ub2ec \uae30\ud6c4\ubcc0\ud654 \uad00\ub828 \uae30\uc0ac\ub97c \uc88b\uc544\uc694\ud55c \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE articles (id INT, title TEXT, category TEXT, likes INT, created_at DATETIME);", "output": "SELECT AVG(age) FROM (SELECT user_age AS age FROM users JOIN likes ON users.id = likes.user_id JOIN articles ON likes.article_id = articles.id WHERE articles.category = 'climate change' AND articles.created_at > DATE_SUB(NOW(), INTERVAL 1 MONTH)) AS subquery;"}
{"input": "\ud2b9\uc815 \ucc44\uad8c\uc758 90\uc77c \ud6c4\ud589 \uc218\uc775\ub960\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE bonds (bond_id INT, bond_symbol VARCHAR(10)); CREATE TABLE bond_prices (price_id INT, bond_id INT, price_date DATE, price DECIMAL(10,2), yield DECIMAL(10,4)); INSERT INTO bonds (bond_id, bond_symbol) VALUES (1, 'TLT'), (2, 'IEF'), (3, 'SHY'); INSERT INTO bond_prices (price_id, bond_id, price_date, price, yield) VALUES (1, 1, '2022-01-01', 120.00, 1.5000), (2, 1, '2022-01-02', 121.00, 1.5100), (3, 1, '2022-01-03', 122.00, 1.5200), (4, 1, '2022-01-04', 123.00, 1.5300), (5, 1, '2022-01-05', 124.00, 1.5400), (6, 2, '2022-01-01', 100.00, 0.7500), (7, 2, '2022-01-02', 101.00, 0.7600), (8, 2, '2022-01-03', 102.00, 0.7700), (9, 2, '2022-01-04', 103.00, 0.7800), (10, 2, '2022-01-05', 104.00, 0.7900), (11, 3, '2022-01-01', 90.00, 0.5000), (12, 3, '2022-01-02', 91.00, 0.5100), (13, 3, '2022-01-03', 92.00, 0.5200), (14, 3, '2022-01-04', 93.00, 0.5300), (15, 3, '2022-01-05', 94.00, 0.5400);", "output": "SELECT bond_id, AVG(yield) OVER (PARTITION BY bond_id ORDER BY price_date ROWS BETWEEN 89 PRECEDING AND CURRENT ROW) AS trailing_yield FROM bond_prices WHERE bond_id = 1;"}
{"input": " \uacf5\uac1c \uad50\uc721\ud559 \ubc0f \ud3c9\uc0dd \ud559\uc2b5 \uc6cc\ud06c\uc20d\uc5d0 \ucc38\uc5ec\ud55c \uad50\uc0ac\uc758 \uc774\ub984\uacfc \uc804\ubb38\uc131 \uac1c\ubc1c \uc2dc\uac04\uc744 \uc54c\ud30c\ubcb3\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Teachers (teacher_id INT, name VARCHAR(255), professional_development_hours INT); CREATE TABLE Workshops (workshop_id INT, name VARCHAR(255), topic VARCHAR(255)); INSERT INTO Workshops (workshop_id, name, topic) VALUES (1, 'Open Pedagogy Workshop', 'open pedagogy'), (2, 'Lifelong Learning Seminar', 'lifelong learning'); CREATE TABLE TeacherWorkshops (teacher_id INT, workshop_id INT);", "output": "SELECT Teachers.name, Teachers.professional_development_hours FROM Teachers INNER JOIN TeacherWorkshops ON Teachers.teacher_id = TeacherWorkshops.teacher_id INNER JOIN Workshops ON TeacherWorkshops.workshop_id = Workshops.workshop_id WHERE Workshops.topic IN ('open pedagogy', 'lifelong learning') ORDER BY Teachers.name ASC;"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\ubcc4 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\uc640 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE programs (id INT, name TEXT, volunteers_count INT, total_donation FLOAT);", "output": "SELECT p.name, SUM(d.total_donation) as total_donation, COUNT(v.id) as volunteers_count FROM programs p LEFT JOIN volunteers v ON p.id = v.program_id LEFT JOIN donors d ON v.id = d.volunteer_id GROUP BY p.name;"}
{"input": " \ub9c8\ucf00\ud305 \ubd80\uc11c\uc5d0\ub294 \uc131\ubcc4\uc5d0 \ub530\ub77c \uba87 \uba85\uc758 \uc9c1\uc6d0\uc774 \uc788\ub098\uc694?", "context": "CREATE TABLE Employees (id INT, name VARCHAR(50), gender VARCHAR(10), department VARCHAR(50)); INSERT INTO Employees (id, name, gender, department) VALUES (1, 'John Doe', 'Male', 'Marketing'); INSERT INTO Employees (id, name, gender, department) VALUES (2, 'Jane Smith', 'Female', 'Marketing'); INSERT INTO Employees (id, name, gender, department) VALUES (3, 'Alice Johnson', 'Female', 'IT');", "output": "SELECT department, gender, COUNT(*) AS total  FROM Employees  WHERE department = 'Marketing'  GROUP BY department, gender;"}
{"input": " \ub4f1\ub85d\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Support_Programs (program_name TEXT, enrollment INT); CREATE VIEW Max_Enrollment AS SELECT program_name, enrollment FROM Support_Programs WHERE enrollment = (SELECT MAX(enrollment) FROM Support_Programs); CREATE VIEW Min_Enrollment AS SELECT program_name, enrollment FROM Support_Programs WHERE enrollment = (SELECT MIN(enrollment) FROM Support_Programs);", "output": "SELECT * FROM Max_Enrollment UNION SELECT * FROM Min_Enrollment;"}
{"input": " \uc7ac\uace0 \uc218\uc900\uc774 \uac00\uc7a5 \ub192\uc740 \uc81c\ud488\uacfc \uac00\uc7a5 \ub0ae\uc740 \uc81c\ud488\uc740 \ubb34\uc5c7\uc774\uba70 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE inventory (product_id INT, product_name VARCHAR(255), quantity INT, price DECIMAL(10,2)); INSERT INTO inventory (product_id, product_name, quantity, price) VALUES (1, 'Product X', 100, 50.00), (2, 'Product Y', 50, 75.00), (3, 'Product Z', 200, 25.00);", "output": "SELECT product_name, quantity, price, NTILE(2) OVER (ORDER BY quantity DESC) as tier FROM inventory;"}
{"input": " \uac01 \ubd80\uc11c\uac00 \uc815\ucc45 \uc218\ub9bd\uc744 \uc704\ud574 \uc99d\uac70\ub97c \uc81c\ucd9c\ud55c \uac00\uc7a5 \ube60\ub978 \ub0a0\uc9dc\ub294 \uc5b8\uc81c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE PolicyEvidence (department VARCHAR(50), evidence_date DATE); INSERT INTO PolicyEvidence (department, evidence_date) VALUES ('Health', '2022-02-01'), ('Education', '2022-03-01'), ('Transportation', '2022-01-01'), ('Health', '2022-02-15');", "output": "SELECT department, MIN(evidence_date) AS earliest_date FROM PolicyEvidence GROUP BY department;"}
{"input": " '\uc74c\uc545' \ubd84\uc57c\uc5d0\ub294 \ucc3d\uc758\uc801\uc778 AI \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uba87 \uac1c\ub098 \uc788\ub098\uc694?", "context": "CREATE TABLE creative_ai_applications (id INTEGER, sector TEXT, application_type TEXT); INSERT INTO creative_ai_applications (id, sector, application_type) VALUES (1, 'Music', 'Composition'), (2, 'Art', 'Image Generation'), (3, 'Music', 'Sound Design');", "output": "SELECT COUNT(*) FROM creative_ai_applications WHERE sector = 'Music';"}
{"input": " \uc9c0\ub09c \uc8fc\uc5d0 \uac00\uc7a5 \ub192\uc740 \uc218\uc775\uc744 \uc62c\ub9b0 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE menu_engineering(menu_item VARCHAR(255), revenue DECIMAL(10,2)); INSERT INTO menu_engineering VALUES ('Pizza', 2500.00), ('Burrito', 3000.00), ('Pasta', 2000.00), ('Taco', 2800.00);", "output": "SELECT menu_item, revenue FROM (SELECT menu_item, revenue, ROW_NUMBER() OVER (ORDER BY revenue DESC) AS rn FROM menu_engineering WHERE date BETWEEN CURRENT_DATE - INTERVAL '7 days' AND CURRENT_DATE) WHERE rn <= 3;"}
{"input": "\ub274\uc695\uc5d0\uc11c \uc5f4\ub9b0 \ucd1d \uc804\uc2dc \ud69f\uc218\uc640 \uac01 \uc791\uac00\uc758 \uc791\ud488\uc5d0 \ub300\ud55c \ud3c9\uade0 \uad00\ub78c\uac1d \ud3c9\uc810\uc744 \uad6c\ud558\uace0, \ucd1d \uc804\uc2dc \ud69f\uc218\uac00 \ub192\uc740 \uc21c\uc11c\ub300\ub85c \uc21c\uc704\ub97c \ub9e4\uae41\ub2c8\ub2e4.", "context": "CREATE TABLE Artists (id INT, name VARCHAR(30)); CREATE TABLE Works (id INT, artist_id INT, title VARCHAR(50)); CREATE TABLE Exhibitions (id INT, work_id INT, gallery_id INT, city VARCHAR(20), guest_rating FLOAT, revenue FLOAT); INSERT INTO Exhibitions (id, work_id, gallery_id, city, guest_rating, revenue) VALUES (1, 1, 1, 'New York', 4.5, 6000), (2, 2, 2, 'New York', 4.2, 7000), (3, 3, 3, 'New York', 4.7, 5000);", "output": "SELECT a.name, COUNT(e.id) as total_exhibitions, AVG(e.guest_rating) as avg_guest_rating, RANK() OVER (PARTITION BY a.name ORDER BY COUNT(e.id) DESC) as rank FROM Artists a JOIN Works w ON a.id = w.artist_id JOIN Exhibitions e ON w.id = e.work_id WHERE e.city = 'New York' GROUP BY a.name, rank ORDER BY total_exhibitions DESC;"}
{"input": " \uc9c0\ub09c 2\ub144 \ub3d9\uc548 \ubcf4\ud5d8\uae08\uc744 \uccad\uad6c\ud558\uc9c0 \uc54a\uc740 \ubcf4\ud5d8 \uacc4\uc57d\uc790 \ubc0f \ud574\ub2f9 \ubcf4\ud5d8 \uc99d\uad8c\uc744 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Policyholders (PolicyholderID INT, LastClaimDate DATE); INSERT INTO Policyholders VALUES (1, '2020-01-01'); INSERT INTO Policyholders VALUES (2, '2021-05-05'); INSERT INTO Policyholders VALUES (3, '2019-12-31');", "output": "DELETE FROM Policyholders WHERE LastClaimDate < NOW() - INTERVAL '2 years'; DELETE FROM HomeInsurance WHERE PolicyholderID IN (SELECT PolicyholderID FROM Policyholders WHERE LastClaimDate < NOW() - INTERVAL '2 years'); DELETE FROM AutoInsurance WHERE PolicyholderID IN (SELECT PolicyholderID FROM Policyholders WHERE LastClaimDate < NOW() - INTERVAL '2 years');"}
{"input": " \uac00\uc7a5 \ub9ce\uc740 \uc6b0\uc8fc \uc784\ubb34\ub97c \uc218\ud589\ud55c \uc6b0\uc8fc\ube44\ud589\uc0ac\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AstronautMissions (Id INT, Astronaut VARCHAR(50), Mission VARCHAR(50)); INSERT INTO AstronautMissions (Id, Astronaut, Mission) VALUES (1, 'John Glenn', 'Apollo 11'), (2, 'Neil Armstrong', 'Apollo 11'), (3, 'Sally Ride', 'Ares 3'), (4, 'Mark Watney', 'Ares 3');", "output": "SELECT Astronaut FROM (SELECT Astronaut, ROW_NUMBER() OVER (PARTITION BY Astronaut ORDER BY COUNT(*) DESC) AS Rank FROM AstronautMissions GROUP BY Astronaut) AS Subquery WHERE Rank = 1"}
{"input": " \uc608\uc0b0\uc774 0\uc778 \ud504\ub85c\uadf8\ub7a8\uc744 \uc81c\uc678\ud558\uace0 2020\ub144 1\ubd84\uae30\uc5d0 \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ud560\ub2f9\ub41c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Programs (ProgramID INT, ProgramName TEXT, Budget DECIMAL(10,2)); INSERT INTO Programs VALUES (1, 'Education', 1000.00), (2, 'Environment', 2000.00), (3, 'Health', 0.00);", "output": "SELECT ProgramName, AVG(Budget) as AvgBudget FROM Programs WHERE QUARTER(BudgetDate) = 1 AND Budget > 0 GROUP BY ProgramName;"}
{"input": " 2020\ub144 LGBTQ+ \ucee4\ubba4\ub2c8\ud2f0 \ubc29\ubb38\uac1d\uc774 \uac00\uc7a5 \ub9ce\uc558\ub358 \uc804\uc2dc\ud68c\uc758 \uc774\ub984\uacfc \uc218\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExhibitNames (exhibition_id INT, name VARCHAR(50)); INSERT INTO ExhibitNames (exhibition_id, name) VALUES (1, 'Art of the 80s'), (2, 'Nature Unleashed'); CREATE TABLE ExhibitVisitors (exhibition_id INT, visitor_id INT, community_id INT); INSERT INTO ExhibitVisitors (exhibition_id, visitor_id, community_id) VALUES (1, 101, 3), (1, 102, 3), (2, 103, 2);", "output": "SELECT ExhibitNames.name, COUNT(DISTINCT ExhibitVisitors.visitor_id) as visitor_count FROM ExhibitVisitors INNER JOIN ExhibitNames ON ExhibitVisitors.exhibition_id = ExhibitNames.exhibition_id INNER JOIN Communities ON ExhibitVisitors.community_id = Communities.id WHERE Communities.community_type = 'LGBTQ+' AND ExhibitVisitors.exhibition_id IN (SELECT exhibition_id FROM ExhibitVisitors GROUP BY exhibition_id HAVING COUNT(DISTINCT visitor_id) = (SELECT MAX(visitor_count) FROM (SELECT exhibition_id, COUNT(DISTINCT visitor_id) as visitor_count FROM ExhibitVisitors INNER JOIN Communities ON ExhibitVisitors.community_id = Communities.id WHERE Communities.community_type = 'LGBTQ+' GROUP BY exhibition_id) as max_visitor_count)) GROUP BY ExhibitNames.name;"}
{"input": " '2021\ub144' '\uc5ec\uc131 \uc5ed\ub7c9\uac15\ud654' \ud504\ub85c\uadf8\ub7a8\uc5d0 \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\ub098\uc694?", "context": "CREATE TABLE volunteer_signups (id INT, signup_date DATE, program TEXT); INSERT INTO volunteer_signups (id, signup_date, program) VALUES (1, '2021-01-01', 'Women Empowerment'); INSERT INTO volunteer_signups (id, signup_date, program) VALUES (2, '2021-03-12', 'Women Empowerment'); INSERT INTO volunteer_signups (id, signup_date, program) VALUES (3, '2020-05-25', 'Women Empowerment');", "output": "SELECT COUNT(*) FROM volunteer_signups WHERE program = 'Women Empowerment' AND YEAR(signup_date) = 2021;"}
{"input": " '\ud658\uacbd' \ud504\ub85c\uadf8\ub7a8\uc5d0 \ucc38\uc5ec\ud55c \uc790\uc6d0\ubd09\uc0ac\uc790\ub294 \ucd1d \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE Volunteers (VolunteerID INT, VolunteerName TEXT, Country TEXT); INSERT INTO Volunteers (VolunteerID, VolunteerName, Country) VALUES (1, 'Amina', 'Nigeria'); INSERT INTO Volunteers (VolunteerID, VolunteerName, Country) VALUES (2, 'Boris', 'Russia'); CREATE TABLE VolunteerPrograms (ProgramID INT, ProgramName TEXT); INSERT INTO VolunteerPrograms (ProgramID, ProgramName) VALUES (1, 'Environment'); INSERT INTO VolunteerPrograms (ProgramID, ProgramName) VALUES (2, 'Culture'); CREATE TABLE VolunteerEvents (EventID INT, ProgramID INT, VolunteerID INT, EventDate DATE); INSERT INTO VolunteerEvents (EventID, ProgramID, VolunteerID, EventDate) VALUES (1, 1, 1, '2021-01-01'); INSERT INTO VolunteerEvents (EventID, ProgramID, VolunteerID, EventDate) VALUES (2, 2, 2, '2021-02-01'); INSERT INTO VolunteerEvents (EventID, ProgramID, VolunteerID, EventDate) VALUES (3, 1, 2, '2021-05-01');", "output": "SELECT COUNT(DISTINCT Volunteers.VolunteerID) AS TotalVolunteers FROM Volunteers INNER JOIN VolunteerEvents ON Volunteers.VolunteerID = VolunteerEvents.VolunteerID INNER JOIN VolunteerPrograms ON VolunteerEvents.ProgramID = VolunteerPrograms.ProgramID WHERE VolunteerPrograms.ProgramName = 'Environment';"}
{"input": " \uc544\uba54\ub9ac\uce74 \ub300\ub959\uc5d0 \uc704\uce58\ud55c \ub18d\uc7a5\uc758 \uc5b4\uc885\ubcc4 \ucd1d \uc5b4\ub958 \uc591\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE fish_farms (id INT, name TEXT, location TEXT, water_type TEXT); INSERT INTO fish_farms (id, name, location, water_type) VALUES (1, 'Farm E', 'Miami', 'Saltwater'); INSERT INTO fish_farms (id, name, location, water_type) VALUES (2, 'Farm F', 'Montreal', 'Freshwater'); CREATE TABLE fish_species (id INT, name TEXT); INSERT INTO fish_species (id, name) VALUES (1, 'Tilapia'); INSERT INTO fish_species (id, name) VALUES (2, 'Catfish'); CREATE TABLE fish_inventory (fish_farm_id INT, fish_species_id INT, quantity INT); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 1, 500); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (1, 2, 300); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 1, 400); INSERT INTO fish_inventory (fish_farm_id, fish_species_id, quantity) VALUES (2, 2, 600);", "output": "SELECT fs.name AS species_name, SUM(fi.quantity) AS total_quantity FROM fish_farms ff JOIN fish_inventory fi ON ff.id = fi.fish_farm_id JOIN fish_species fs ON fi.fish_species_id = fs.id WHERE ff.location LIKE 'America%' GROUP BY fs.name;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc5ec\ud589 \uc8fc\uc758\ubcf4\uac00 \ubc1c\ub839\ub41c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \uc774\uc720\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE TravelAdvisoryReasons (AdvisoryID INT, Reason VARCHAR(255), IssueDate DATE);", "output": "SELECT Reason, COUNT(Reason) OVER (PARTITION BY Reason) AS NumAdvisories, ROW_NUMBER() OVER (ORDER BY COUNT(Reason) DESC) AS Rank FROM TravelAdvisoryReasons WHERE IssueDate >= ADD_MONTHS(CURRENT_DATE, -6) GROUP BY Reason HAVING Rank <= 5;"}
{"input": " \ubaa8\ub378\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \uc544\ud504\ub9ac\uce74\uc758 \uc124\uba85 \uac00\ub2a5\ud55c AI \ubaa8\ub378\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ub3c4 \uc810\uc218 \ubd84\ud3ec\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ExplainableAI (model_name TEXT, confidence FLOAT, country TEXT); INSERT INTO ExplainableAI (model_name, confidence, country) VALUES ('ModelA', 0.85, 'Africa'), ('ModelB', 0.92, 'Africa'), ('ModelC', 0.78, 'Africa');", "output": "SELECT model_name, COUNT(*) FROM ExplainableAI WHERE country = 'Africa' GROUP BY model_name;"}
{"input": " \uac01 \uad6d\uac00\uc758 \uc0dd\uc0b0\uc5d0 \uc0ac\uc6a9\ub41c \uc790\uc7ac\uc758 \ucd1d \uc911\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE MaterialProduction (item_id INT, country VARCHAR(255), material VARCHAR(255), weight DECIMAL(5,2)); INSERT INTO MaterialProduction (item_id, country, material, weight) VALUES (1, 'Spain', 'Cotton', 2.5), (1, 'Italy', 'Polyester', 1.5), (2, 'France', 'Wool', 3.0), (3, 'Spain', 'Silk', 4.0), (4, 'Italy', 'Cotton', 2.0);", "output": "SELECT country, SUM(weight) FROM MaterialProduction GROUP BY country;"}
{"input": " \uc9c1\ubb3c\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc9c0\uc18d \uac00\ub2a5\uc131 \uc810\uc218\uac00 \uac00\uc7a5 \ub0ae\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc774\uba70 \ud574\ub2f9 \uc81c\uc870 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fabrics (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), sustainability_score INT); INSERT INTO fabrics (id, name, country, sustainability_score) VALUES (1, 'Fabric A', 'Country C', 60); INSERT INTO fabrics (id, name, country, sustainability_score) VALUES (2, 'Fabric B', 'Country D', 65); CREATE TABLE manufacturing (id INT PRIMARY KEY, date DATE, fabric_id INT, cost INT); INSERT INTO manufacturing (id, date, fabric_id, cost) VALUES (1, '2022-01-01', 1, 110); INSERT INTO manufacturing (id, date, fabric_id, cost) VALUES (2, '2022-01-01', 2, 130);", "output": "SELECT f.country, AVG(f.sustainability_score) AS avg_sustainability_score, m.manufacturing_cost FROM fabrics f CROSS JOIN (SELECT '2022-01-01' AS date, SUM(cost) AS manufacturing_cost FROM manufacturing WHERE fabric_id = f.id) m GROUP BY f.country HAVING AVG(f.sustainability_score) = (SELECT MIN(avg_sustainability_score) FROM (SELECT AVG(sustainability_score) AS avg_sustainability_score FROM fabrics GROUP BY country) t);"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uc7ac\uace0 \ud68c\uc804\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uba54\ub274 \ud56d\ubaa9\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE inventory (inventory_id INT, menu_item_id INT, quantity INT, reorder_date DATE); INSERT INTO inventory VALUES (1, 1, 50, '2022-01-01'), (2, 2, 75, '2022-02-01'), (3, 3, 60, '2022-03-01'), (4, 1, 100, '2022-04-01'); CREATE TABLE sales (sale_id INT, menu_item_id INT, sale_amount DECIMAL(10, 2), sale_date DATE); INSERT INTO sales VALUES (1, 1, 50.00, '2022-02-01'), (2, 2, 75.00, '2022-03-01'), (3, 3, 60.00, '2022-04-01'), (4, 1, 100.00, '2022-05-01'); CREATE TABLE menu_items (menu_item_id INT, menu_item_name VARCHAR(255), category VARCHAR(255)); INSERT INTO menu_items VALUES (1, 'Veggie Burger', 'Entrees'), (2, 'Tomato Soup', 'Soups'), (3, 'Caesar Salad', 'Salads');", "output": "SELECT i1.menu_item_id, m1.menu_item_name, c1.category, AVG(i1.quantity / (DATEDIFF(day, i1.reorder_date, s1.sale_date) * AVG(i1.quantity))) AS inventory_turnover_ratio FROM inventory i1 INNER JOIN menu_items m1 ON i1.menu_item_id = m1.menu_item_id INNER JOIN (SELECT menu_item_id, category FROM menu_items EXCEPT SELECT menu_item_id, category FROM menu_items WHERE menu_item_id NOT IN (SELECT menu_item_id FROM sales)) c1 ON m1.menu_item_id = c1.menu_item_id INNER JOIN sales s1 ON i1.menu_item_id = s1.menu_item_id WHERE s1.sale_date > DATEADD(month, -6, GETDATE()) GROUP BY i1.menu_item_id, m1.menu_item_name, c1.category ORDER BY inventory_turnover_ratio DESC LIMIT 3;"}
{"input": " 'HealthInnovate'\uc5d0\uc11c 2022\ub144\uc5d0 \uac00\uc7a5 \ub0ae\uc740 \ud310\ub9e4\ub7c9\uc744 \ubcf4\uc778 \uc57d\ubb3c\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HealthInnovate_DrugSales(drug VARCHAR(20), year INT, sales DECIMAL(10,2)); INSERT INTO HealthInnovate_DrugSales VALUES('DrugA', 2022, 2500000.00); INSERT INTO HealthInnovate_DrugSales VALUES('DrugB', 2022, 2000000.00);", "output": "SELECT drug, MIN(sales) FROM HealthInnovate_DrugSales WHERE year = 2022 GROUP BY drug ORDER BY sales ASC LIMIT 1;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4\uac04 \ud0c4\uc18c\uac00\uaca9\uc758 \uc774\ub3d9\ud3c9\uade0\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE carbon_prices (date DATE, price FLOAT); INSERT INTO carbon_prices (date, price) VALUES ('2021-01-01', 25), ('2021-01-02', 26), ('2021-01-03', 27), ('2021-02-01', 28), ('2021-02-02', 29), ('2021-02-03', 30), ('2021-03-01', 31), ('2021-03-02', 32), ('2021-03-03', 33);", "output": "SELECT date, AVG(price) OVER (ORDER BY date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as moving_avg FROM carbon_prices;"}
{"input": " \uc810\uc801 \uad00\uac1c \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub18d\uc7a5\uc758 \uc804\uccb4 \uba74\uc801\uacfc \ud3c9\uade0 \uc778\uc744 \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE farm (id INT, name VARCHAR(50), size FLOAT, irrigation_system VARCHAR(20), fertilizer VARCHAR(50), PRIMARY KEY(id)); INSERT INTO farm (id, name, size, irrigation_system, fertilizer) VALUES (1, 'Farm A', 50.3, 'drip', 'Fertilizer X'); INSERT INTO farm (id, name, size, irrigation_system, fertilizer) VALUES (2, 'Farm B', 75.8, 'sprinkler', 'Fertilizer Y'); INSERT INTO farm (id, name, size, irrigation_system, fertilizer) VALUES (3, 'Farm C', 35.1, 'drip', 'Fertilizer Z'); CREATE TABLE phosphorus (id INT, farm_id INT, phosphorus FLOAT, PRIMARY KEY(id)); INSERT INTO phosphorus (id, farm_id, phosphorus) VALUES (1, 1, 23.5); INSERT INTO phosphorus (id, farm_id, phosphorus) VALUES (2, 1, 24.2); INSERT INTO phosphorus (id, farm_id, phosphorus) VALUES (3, 3, 20.8); CREATE TABLE fertilizer_application (id INT, farm_id INT, application_date DATE, PRIMARY KEY(id)); INSERT INTO fertilizer_application (id, farm_id, application_date) VALUES (1, 1, '2022-01-01'); INSERT INTO fertilizer_application (id, farm_id, application_date) VALUES (2, 2, '2022-02-01'); INSERT INTO fertilizer_application (id, farm_id, application_date) VALUES (3, 3, '2022-03-01');", "output": "SELECT f.irrigation_system, SUM(f.size) AS total_area, AVG(p.phosphorus) AS avg_phosphorus FROM farm f INNER JOIN phosphorus p ON f.id = p.farm_id INNER JOIN fertilizer_application a ON f.id = a.farm_id WHERE f.irrigation_system = 'drip' GROUP BY f.irrigation_system;"}
{"input": " \uc544\ub9c8\uc874 \ubd84\uc9c0\uc758 \uc6b0\ubb3c \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(50), location VARCHAR(50), production_rate FLOAT); INSERT INTO wells (well_id, well_name, location, production_rate) VALUES (6, 'Well D', 'Amazon Basin', 2200), (7, 'Well E', 'Amazon Basin', 2300), (8, 'Well F', 'Brazil Coast', 2100);", "output": "SELECT AVG(production_rate) FROM wells WHERE location = 'Amazon Basin';"}
{"input": " 2019\ub144 \uc774\uc804\uc5d0 \uc2dc\uc791\ub41c \uc724\ub9ac\uc801 AI \ud504\ub85c\uc81d\ud2b8\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ProjectTimeline (ProjectID INT, ProjectName VARCHAR(50), LaunchDate DATE); INSERT INTO ProjectTimeline (ProjectID, ProjectName, LaunchDate) VALUES (1, 'Ethical AI 1.0', '2018-01-01'); INSERT INTO ProjectTimeline (ProjectID, ProjectName, LaunchDate) VALUES (2, 'Ethical AI 2.0', '2019-01-01');", "output": "SELECT ProjectName FROM ProjectTimeline WHERE YEAR(LaunchDate) <= 2019 AND ProjectName LIKE '%Ethical AI%';"}
{"input": " \uac01 \uc804\uc2dc\ud68c\uc5d0 \ub300\ud55c \ub514\uc9c0\ud138 \uc0c1\ud638\uc791\uc6a9\uc758 \uc5f0\uc18d \uc77c\uc218\ub97c \uacc4\uc0b0\ud558\uace0 \uac00\uc7a5 \uc5f0\uc18d\uc801\uc778 \uc804\uc2dc\ud68c\ub97c \ucc3e\uc73c\uc138\uc694.", "context": "CREATE TABLE Exhibition (Id INT, Name VARCHAR(100)); CREATE TABLE DigitalInteraction (Id INT, ExhibitionId INT, InteractionDate DATE);", "output": "SELECT ExhibitionId, Name, DENSE_RANK() OVER (PARTITION BY ExhibitionId ORDER BY InteractionDate DESC) - DENSE_RANK() OVER (PARTITION BY ExhibitionId ORDER BY InteractionDate ASC) as ConsecutiveDays, COUNT(*) as LongestStreak FROM Exhibition e JOIN DigitalInteraction di ON e.Id = di.ExhibitionId GROUP BY ExhibitionId, Name HAVING COUNT(*) > 1 ORDER BY ConsecutiveDays DESC, LongestStreak DESC;"}
{"input": " '\uc544\ud2b8 \uc778 \ub354 \ud30c\ud06c' \ud589\uc0ac\uc758 \uc5f0\ub839\ubcc4 \ucc38\uc11d\uc790 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE event_attendance (attendee_id INT, event_id INT, age_group VARCHAR(20)); INSERT INTO event_attendance (attendee_id, event_id, age_group) VALUES (1, 1, '5-17'), (2, 1, '18-34'), (3, 1, '35-54'), (4, 1, '55+');", "output": "SELECT age_group, COUNT(*) AS attendee_count FROM event_attendance WHERE event_id = 1 GROUP BY age_group;"}
{"input": " 2021\ub144 \ubd84\uae30\ubcc4\ub85c \ubc1c\ud589\ub41c \uc0e4\ub9ac\uc544 \uc900\uc218 \ub300\ucd9c \uac74\uc218\ub97c \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE loans (loan_id INT, is_shariah_compliant BOOLEAN, issue_date DATE); INSERT INTO loans (loan_id, is_shariah_compliant, issue_date) VALUES (1, true, '2021-01-01'), (2, false, '2021-02-15'), (3, true, '2021-04-30'), (4, false, '2021-06-22'), (5, true, '2021-07-01'), (6, true, '2021-10-01');", "output": "SELECT DATE_PART('quarter', issue_date) AS quarter, COUNT(*) FROM loans WHERE is_shariah_compliant = true GROUP BY quarter;"}
{"input": " 2021\ub144 '\ub0a8\ub3d9\ubd80' \uc9c0\uc5ed\uc5d0\uc11c \uc720\uc9c0\uad00\ub9ac \ube44\uc6a9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ud130\ub110\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Tunnels (    TunnelID INT,    Name VARCHAR(255),    Region VARCHAR(255),    MaintenanceCost DECIMAL(10, 2),    Year INT);", "output": "SELECT * FROM (    SELECT *,    ROW_NUMBER() OVER (PARTITION BY Region ORDER BY MaintenanceCost DESC) as rank    FROM Tunnels    WHERE Year = 2021 AND Region = 'Southeast') sub WHERE rank <= 2;"}
{"input": "\uc2dc\ub4dc\ub2c8 \ubc15\ubb3c\uad00\uc758 \ud3c9\uade0 \ubc29\ubb38\uac1d \uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Visitors (VisitorID INT, Country VARCHAR(255)); CREATE TABLE Visits (VisitID INT, VisitorID INT, MuseumID INT); CREATE TABLE Museums (MuseumID INT, Name VARCHAR(255), City VARCHAR(255));", "output": "SELECT v.Country, AVG(COUNT(vi.VisitorID)) OVER(PARTITION BY v.Country) as AvgVisitorsPerMuseum FROM Visitors v JOIN Visits vi ON v.VisitorID = vi.VisitorID JOIN Museums m ON vi.MuseumID = m.MuseumID WHERE m.City = 'Sydney' GROUP BY v.Country ORDER BY AvgVisitorsPerMuseum DESC LIMIT 3;"}
{"input": " \ucd5c\uadfc 5\ub144\uac04 \uad6d\ubc29\uc678\uad50\ud589\uc0ac\uc5d0 \ucc38\uc5ec\ud55c \uad6d\uac00\uba85\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE defense_diplomacy (id INT, country VARCHAR(255), event_name VARCHAR(255), year INT);", "output": "SELECT country FROM defense_diplomacy WHERE year BETWEEN (YEAR(CURRENT_DATE) - 5) AND YEAR(CURRENT_DATE) GROUP BY country;"}
{"input": " 2019\ub144\uacfc 2020\ub144 \ub3d9\uc548 \ubd84\uae30\ubcc4\ub85c \uadf8\ub8f9\ud654\ud55c \ubd81\ud574 \uc720\uc815\uc758 \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc600\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, well_name VARCHAR(255), location VARCHAR(255), production_figures DECIMAL(10,2)); INSERT INTO wells (well_id, well_name, location, production_figures) VALUES (1, 'Well A', 'North Sea', 12000.50), (2, 'Well B', 'North Sea', 15000.25), (3, 'Well C', 'Gulf of Mexico', 20000.00);", "output": "SELECT EXTRACT(QUARTER FROM date) AS quarter, AVG(production_figures) AS avg_production FROM wells WHERE location = 'North Sea' AND EXTRACT(YEAR FROM date) IN (2019, 2020) GROUP BY quarter;"}
{"input": " \uad70\uc0ac \uc791\uc804\uacfc \uad50\ucc28\ud558\ub294 \ub2e4\uc591\ud55c \uc720\ud615\uc758 \uc815\ubcf4 \uc791\uc804\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE IntelligenceOperations (Operation VARCHAR(50), Type VARCHAR(50)); INSERT INTO IntelligenceOperations (Operation, Type) VALUES ('Operation Red Sparrow', 'Military'), ('Operation Moonlight', 'Cybersecurity'), ('Operation Glowing Symphony', 'Cybersecurity'), ('Operation Olympic Games', 'Cybersecurity'), ('Operation Desert Storm', 'Military'), ('Operation Iraqi Freedom', 'Military');", "output": "SELECT Operation FROM IntelligenceOperations WHERE Type = 'Military' INTERSECT SELECT Operation FROM IntelligenceOperations WHERE Type = 'Cybersecurity';"}
{"input": " 5\uc6d4 \ud55c \ub2ec \ub3d9\uc548 \uc544\uce68 \uc2dd\uc0ac \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE orders (order_id INT, order_date DATE); CREATE TABLE order_items (order_id INT, item_id INT, quantity INT, price FLOAT); CREATE TABLE menu (item_id INT, name TEXT, category TEXT, is_vegetarian BOOLEAN, price FLOAT); INSERT INTO menu (item_id, name, category, is_vegetarian, price) VALUES (1, 'Chickpea Curry', 'Lunch', true, 10.5), (2, 'Chicken Tikka Masala', 'Lunch', false, 13.0), (3, 'Quinoa Salad', 'Starters', true, 7.5), (4, 'Scrambled Tofu', 'Breakfast', true, 8.0); INSERT INTO orders (order_id, order_date) VALUES (1, '2022-05-01'), (2, '2022-05-05'), (3, '2022-05-10'); INSERT INTO order_items (order_id, item_id, quantity, price) VALUES (1, 4, 2, 8.0), (2, 4, 1, 8.0), (3, 1, 1, 10.5);", "output": "SELECT SUM(oi.quantity * m.price) as revenue FROM orders o JOIN order_items oi ON o.order_id = oi.order_id JOIN menu m ON oi.item_id = m.item_id WHERE o.order_date BETWEEN '2022-05-01' AND '2022-05-31' AND m.category = 'Breakfast';"}
{"input": " \uba39\uc774 \uc720\ud615\ubcc4\ub85c \ubd84\ub958\ub41c \uc544\ub77c\ube44\uc544\ud574 \uc5b4\ub958\uc758 \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fish_data (fish_name VARCHAR(50), biomass FLOAT, feeding_type VARCHAR(50)); INSERT INTO fish_data (fish_name, biomass, feeding_type) VALUES ('Sardine', 1800, 'Planktivore'), ('Herring', 2000, 'Planktivore'), ('Tuna', 3500, 'Carnivore'), ('Shark', 4000, 'Carnivore');", "output": "SELECT feeding_type, SUM(biomass) AS total_biomass FROM fish_data WHERE fish_name IN (SELECT fish_name FROM arabian_sea) GROUP BY feeding_type;"}
{"input": " \uc9c0\ub09c 3\uac1c\uc6d4 \ub3d9\uc548 \uc544\uc2dc\uc544 \uc9c0\uc5ed\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ud3d0\uae30\ubb3c\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE waste_generated (id INT, generation_date DATE, region VARCHAR(255), waste_amount INT); INSERT INTO waste_generated (id, generation_date, region, waste_amount) VALUES (1, '2022-04-01', 'Asia', 120), (2, '2022-05-15', 'Asia', 150);", "output": "SELECT SUM(waste_amount) FROM waste_generated WHERE region = 'Asia' AND generation_date >= '2022-03-01' AND generation_date < '2022-06-01';"}
{"input": " \uc720\ud615\ubcc4, \uc6d4\ubcc4\ub85c \uac00\uc7a5 \ub9ce\uc774 \uc694\uccad\ub418\ub294 \uc7a5\uc560\uc778 \ud3b8\uc758 \uc2dc\uc124\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Accommodation_Data (Request_ID INT, Request_Date DATE, Accommodation_Type VARCHAR(50), Request_Status VARCHAR(10));", "output": "SELECT DATE_PART('month', Request_Date) as Month, Accommodation_Type, COUNT(*) as Total_Requests FROM Accommodation_Data WHERE Request_Status = 'Approved' GROUP BY Month, Accommodation_Type ORDER BY Total_Requests DESC;"}
{"input": " \ud0dc\ud3c9\uc591\uacfc \ub300\uc11c\uc591\uc5d0 \uae30\ub85d\ub41c \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE oceans (id INT, name TEXT, area FLOAT); INSERT INTO oceans (id, name, area) VALUES (1, 'Pacific Ocean', 165200000); INSERT INTO oceans (id, name, area) VALUES (2, 'Atlantic Ocean', 82300000); CREATE TABLE marine_species (id INT, species TEXT, ocean_id INT); INSERT INTO marine_species (id, species, ocean_id) VALUES (1, 'Clownfish', 1); INSERT INTO marine_species (id, species, ocean_id) VALUES (2, 'Dolphin', 1); INSERT INTO marine_species (id, species, ocean_id) VALUES (3, 'Shark', 1); INSERT INTO marine_species (id, species, ocean_id) VALUES (4, 'Blue Whale', 2); INSERT INTO marine_species (id, species, ocean_id) VALUES (5, 'Sea Turtle', 2);", "output": "SELECT SUM(counts) FROM (SELECT COUNT(*) AS counts FROM marine_species WHERE ocean_id = 1 UNION ALL SELECT COUNT(*) AS counts FROM marine_species WHERE ocean_id = 2) AS subquery;"}
{"input": " \uc720\ub7fd\uc758 \ub3c5\ud2b9\ud55c \uae30\ud6c4 \uc801\uc751 \uc774\ub2c8\uc154\ud2f0\ube0c\uc640 \uac01\uac01\uc758 \uc790\uae08 \uc9c0\uc6d0 \uae08\uc561\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE climate_adaptation (initiative VARCHAR(50), funding DECIMAL(10,2)); INSERT INTO climate_adaptation (initiative, funding) VALUES ('Coastal Flood Protection', 3000000), ('Drought Resistant Agriculture', 2500000), ('Heat Resilient Infrastructure', 4000000);", "output": "SELECT DISTINCT initiative, funding FROM climate_adaptation WHERE initiative IN ('Coastal Flood Protection', 'Drought Resistant Agriculture', 'Heat Resilient Infrastructure', 'Urban Green Spaces', 'Climate Migration Support');"}
{"input": " 2019\ub144 \uac01 \ubd84\uae30\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uc758\ub8cc \ubd84\uc57c \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE company (id INT, name TEXT, industry TEXT, funding_quarter INT, funding_year INT); INSERT INTO company (id, name, industry, funding_quarter, funding_year) VALUES (1, 'HealPro', 'Healthcare', 3, 2019), (2, 'CareEasy', 'Healthcare', 1, 2019);", "output": "SELECT funding_quarter, COUNT(*) FROM company WHERE industry = 'Healthcare' AND funding_year = 2019 GROUP BY funding_quarter;"}
{"input": " \ubd81\ub3d9\ubd80 \uc9c0\uc5ed \ube44\uac74 \ud5e4\uc5b4\ucf00\uc5b4 \ube0c\ub79c\ub4dc\uc758 \uc2dc\uc7a5 \uc810\uc720\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE haircare_brands(brand VARCHAR(255), type VARCHAR(255), region VARCHAR(255)); INSERT INTO haircare_brands(brand, type, region) VALUES('Brand X', 'vegan', 'Northeast'), ('Brand Y', 'vegan', 'Southeast'), ('Brand Z', 'cruelty-free', 'Northeast');", "output": "SELECT brand, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM haircare_brands WHERE region = 'Northeast')) AS market_share FROM haircare_brands WHERE type = 'vegan' AND region = 'Northeast' GROUP BY brand;"}
{"input": " \uac01 \ubd81\uadf9 \uc5f0\uad6c \uae30\uc9c0\uc5d0\uc11c \uae30\ub85d\ub41c \ud3c9\uade0 \uae30\uc628\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ResearchStations (StationName VARCHAR(50), Temperature DECIMAL(5,2)); INSERT INTO ResearchStations (StationName, Temperature) VALUES ('Station A', -15.3), ('Station B', -20.8), ('Station C', -12.1), ('Station D', -18.5), ('Station E', -10.9);", "output": "SELECT StationName, AVG(Temperature) FROM ResearchStations GROUP BY StationName;"}
{"input": " R&B\uc640 \uc7ac\uc988 \uc7a5\ub974 \ubaa8\ub450\uc5d0\uc11c \uc74c\uc545\uc744 \ubc1c\ud45c\ud55c \uc544\ud2f0\uc2a4\ud2b8\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE ArtistGenre3 (ArtistID INT, Genre VARCHAR(20)); INSERT INTO ArtistGenre3 (ArtistID, Genre) VALUES (1, 'Pop'), (2, 'Rock'), (3, 'Jazz'), (4, 'R&B'), (4, 'Hip Hop'), (5, 'Pop'), (6, 'Jazz'), (7, 'R&B');", "output": "SELECT ArtistID FROM ArtistGenre3 WHERE Genre = 'Jazz' INTERSECT SELECT ArtistID FROM ArtistGenre3 WHERE Genre = 'R&B';"}
{"input": " \uc704\ud611\ubc1b\uace0 \uc788\ub294 \ud0dc\ud3c9\uc591, \ub300\uc11c\uc591, \uc778\ub3c4\uc591\uc758 \uc0b0\ud638\ucd08 \ube44\uc728\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE CORAL_REEFS (REGION TEXT, THREAT_LEVEL TEXT); INSERT INTO CORAL_REEFS (REGION, THREAT_LEVEL) VALUES ('Pacific Ocean', 'Threatened'), ('Atlantic Ocean', 'Threatened'), ('Indian Ocean', 'Not Threatened'), ('Southern Ocean', 'Not Threatened'), ('Arctic Ocean', 'Not Threatened');", "output": "SELECT REGION, THREAT_LEVEL, COUNT(*) OVER (PARTITION BY THREAT_LEVEL) * 100.0 / SUM(COUNT(*)) OVER () AS PERCENTAGE FROM CORAL_REEFS WHERE THREAT_LEVEL <> 'Not Threatened' ORDER BY REGION;"}
{"input": " \uc804\uad6d \ud3c9\uade0 48.9\uc138\uc5d0 \ube44\ud574 \uc758\ub8cc \uc885\uc0ac\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc774 \ub354 \ub192\uc740 \ub18d\ucd0c \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rural_areas (id INT, name TEXT, avg_age_hw FLOAT, population INT); INSERT INTO rural_areas (id, name, avg_age_hw, population) VALUES (1, 'Rural Area 1', 49.5, 5000), (2, 'Rural Area 2', 47.8, 6000); CREATE TABLE rural_clinics (id INT, name TEXT, location TEXT, num_workers INT, avg_age FLOAT, gender TEXT); INSERT INTO rural_clinics (id, name, location, num_workers, avg_age, gender) VALUES (1, 'Rural Clinic A', 'Rural Area 1', 10, 45.3, 'Male'), (2, 'Rural Clinic B', 'Rural Area 2', 15, 42.8, 'Female'), (3, 'Rural Clinic C', 'Rural Area 1', 8, 50.1, 'Male'), (4, 'Rural Clinic D', 'Rural Area 2', 12, 48.5, 'Female');", "output": "SELECT name FROM rural_areas WHERE avg_age_hw > (SELECT 48.9);"}
{"input": " \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ud68c\uc0ac\ubcc4\ub85c \uad6c\ubd84\ub41c \uc790\uae08 \uc870\ub2ec \uae08\uc561\uc758 \ucd94\uc138\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE funding_time (funding_time_id INT, company_id INT, funding_amount INT, funding_date DATE);", "output": "SELECT company_id, funding_date, funding_amount, LAG(funding_amount, 1) OVER (PARTITION BY company_id ORDER BY funding_date) AS previous_funding_amount FROM funding_time ORDER BY company_id, funding_date;"}
{"input": " \ubcf5\uc871\ub958 \uac15\uc5d0 \uc18d\ud558\ub294 \ud574\uc591 \uc0dd\ubb3c\uc758 \ubaa9\uc744 \uc21c\uc11c\uc5d0 \ub530\ub77c \uadf8\ub8f9\ud654\ud558\uba74 \ud3c9\uade0 \uc218\uc2ec\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (species_id INT, species_name VARCHAR(100), max_depth FLOAT, class VARCHAR(50), order_name VARCHAR(50));", "output": "SELECT order_name, AVG(max_depth) FROM marine_species WHERE class = 'Gastropoda' GROUP BY order_name;"}
{"input": " SpaceX\ub294 \ucd1d \uba87 \uac1c\uc758 \uc704\uc131\uc744 \ubc30\uce58\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE space_company (name TEXT, satellites_deployed INTEGER); INSERT INTO space_company (name, satellites_deployed) VALUES ('SpaceX', 2000); CREATE TABLE spacex_satellites (id INTEGER, name TEXT, launch_year INTEGER); INSERT INTO spacex_satellites (id, name, launch_year) VALUES (1, 'Starlink 1', 2019), (2, 'Starlink 2', 2019), (3, 'Starlink 3', 2020);", "output": "SELECT SUM(satellites_deployed) FROM space_company WHERE name = 'SpaceX';"}
{"input": " \uc608\uc0b0\uc774 500\ub9cc \ub2ec\ub7ec\uac00 \ub118\ub294 \uc2a4\ud398\uc778\uc5d0\uc11c \uc81c\uc791\ub41c \uc601\ud654\uc758 \ucd1d \uc218\ub294 \uba87 \ud3b8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE movies (id INT, title VARCHAR(100), release_year INT, budget INT, production_country VARCHAR(50)); INSERT INTO movies (id, title, release_year, budget, production_country) VALUES (1, 'Movie1', 2010, 7000000, 'Spain'), (2, 'Movie2', 2015, 3000000, 'France'), (3, 'Movie3', 2020, 8000000, 'Spain');", "output": "SELECT COUNT(*) FROM movies WHERE production_country = 'Spain' AND budget > 5000000;"}
{"input": " \uc77c\ubcf8\uc758 \ud638\ud154\uacfc \uba85\uc18c\ub294 \ubaa8\ub450 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE hotels (id INT, city VARCHAR(20)); INSERT INTO hotels (id, city) VALUES (1, 'Tokyo'), (2, 'Osaka'), (3, 'Kyoto'); CREATE TABLE attractions (id INT, name VARCHAR(50), city VARCHAR(20)); INSERT INTO attractions (id, name, city) VALUES (1, 'Palace', 'Tokyo'), (2, 'Castle', 'Osaka'), (3, 'Shrine', 'Kyoto');", "output": "SELECT COUNT(*) FROM hotels UNION ALL SELECT COUNT(*) FROM attractions;"}
{"input": "\ubd81\uadf9 \uc9c0\uc5ed\uc5d0 \uc788\ub294 \uac01 \ud3ec\uc720\ub958 \uc885\uc758 \ucd1d \ubc14\uc774\uc624\ub9e4\uc2a4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Mammals (species VARCHAR(255), region VARCHAR(255), biomass FLOAT); INSERT INTO Mammals (species, region, biomass) VALUES ('Polar Bear', 'Arctic Ocean', 500), ('Reindeer', 'Greenland', 200), ('Polar Fox', 'Norway', 10), ('Musk Ox', 'Canada', 300), ('Walrus', 'Russia', 2000);", "output": "SELECT region, species, SUM(biomass) as total_biomass FROM Mammals GROUP BY region, species;"}
{"input": " \"\uc774\ud0c8\ub9ac\uc544\" \uc694\ub9ac \uc720\ud615\uc758 \uba54\ub274 \ud56d\ubaa9 \ud3c9\uade0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menu_items (menu_item_id INT, name VARCHAR(255), cuisine_type VARCHAR(255), price DECIMAL(10,2), sales INT); INSERT INTO menu_items (menu_item_id, name, cuisine_type, price, sales) VALUES (1, 'Spaghetti Bolognese', 'Italian', 15.99, 50), (2, 'Margherita Pizza', 'Italian', 12.99, 30), (3, 'Tiramisu', 'Italian', 6.99, 40);", "output": "SELECT AVG(price) FROM menu_items WHERE cuisine_type = 'Italian';"}
{"input": " \uc704\uc131 \uc784\ubb34\uc758 \ucd5c\ub300 \ubc1c\uc0ac \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE satellite_missions_large (id INT, name VARCHAR(255), launch_cost FLOAT); INSERT INTO satellite_missions_large (id, name, launch_cost) VALUES (1, 'Mission 1', 500000000), (2, 'Mission 2', 600000000), (3, 'Mission 3', 700000000), (4, 'Mission 4', 800000000), (5, 'Mission 5', 900000000);", "output": "SELECT MAX(launch_cost) FROM satellite_missions_large;"}
{"input": " '2022-01-01' \uc774\uc804\uc5d0 '\ud30c\ub9ac' \ucc3d\uace0\uc5d0\uc11c '\uc2a4\ud398\uc778'\uc73c\ub85c \ubc30\uc1a1\ub41c \ubaa8\ub4e0 \ubc30\uc1a1\uc744 \uc0ad\uc81c\ud558\uc138\uc694.", "context": "CREATE TABLE warehouse (id INT PRIMARY KEY, name VARCHAR(50), city VARCHAR(50));CREATE TABLE carrier (id INT PRIMARY KEY, name VARCHAR(50));CREATE TABLE shipment (id INT PRIMARY KEY, warehouse_id INT, carrier_id INT, package_count INT, shipped_date DATE);", "output": "DELETE FROM shipment WHERE warehouse_id = (SELECT id FROM warehouse WHERE city = 'Paris') AND (SELECT name FROM carrier WHERE id = shipment.carrier_id) = 'Spain' AND shipped_date < '2022-01-01';"}
{"input": " \ub7f0\ub358 \ud638\ud154\uc5d0 \ub300\ud55c \uac01 OTA\uc758 \uc608\uc57d \uac74\uc218\uc640 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE otas (ota_id INT, ota_name TEXT, bookings INT, revenue INT); INSERT INTO otas (ota_id, ota_name, bookings, revenue) VALUES (1, 'Booking.com', 300, 45000), (2, 'Expedia', 250, 30000), (3, 'Agoda', 200, 22000); CREATE TABLE bookings (booking_id INT, ota_id INT, hotel_id INT, bookings INT, revenue INT); INSERT INTO bookings (booking_id, ota_id, hotel_id, bookings, revenue) VALUES (1, 1, 1, 50, 750), (2, 1, 2, 40, 600), (3, 2, 3, 30, 450), (4, 2, 4, 20, 300), (5, 3, 5, 15, 275), (6, 3, 6, 10, 200); CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT); INSERT INTO hotels (hotel_id, hotel_name, city) VALUES (1, 'The Ritz London', 'London'), (2, 'The Savoy London', 'London'), (3, 'The Dorchester London', 'London'), (4, 'The Lanesborough London', 'London'), (5, 'The Goring London', 'London'), (6, 'The Connaught London', 'London');", "output": "SELECT ota_name, SUM(bookings) as total_bookings, SUM(revenue) as total_revenue FROM otas JOIN bookings ON otas.ota_id = bookings.ota_id JOIN hotels ON bookings.hotel_id = hotels.hotel_id WHERE hotels.city = 'London' GROUP BY ota_name;"}
{"input": "\uc62c\ud574 \uac01 \uae30\uad00\uc774 \uc81c\uacf5\ud55c \uc778\ub3c4\uc801 \uc9c0\uc6d0 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE HumanitarianAssistance (Organization VARCHAR(50), Year INT, Amount DECIMAL(10,2)); INSERT INTO HumanitarianAssistance (Organization, Year, Amount) VALUES ('UNHCR', 2021, 500000), ('WFP', 2021, 700000), ('Red Cross', 2021, 600000), ('CARE', 2021, 800000), ('Oxfam', 2021, 900000), ('Doctors Without Borders', 2021, 1000000), ('Save the Children', 2021, 1100000), ('International Rescue Committee', 2021, 1200000), ('Mercy Corps', 2021, 1300000), ('World Vision', 2021, 1400000);", "output": "SELECT Organization, SUM(Amount) AS TotalAssistance FROM HumanitarianAssistance WHERE Year = 2021 GROUP BY Organization;"}
{"input": " \uac01 \uacfc\ubaa9 \uc601\uc5ed\uc5d0\uc11c \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815\uc744 \uc774\uc218\ud55c \uad50\uc0ac\ub294 \uba87 \uba85\uc774\uba70, \uc774\uc218\ud55c \ucd1d \uacfc\uc815 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE subjects (subject_id INT, subject_name TEXT); CREATE TABLE teachers (teacher_id INT, subject_id INT); CREATE TABLE courses (course_id INT, subject_id INT, teacher_id INT); INSERT INTO subjects VALUES (1, 'Math'), (2, 'Science'), (3, 'English'); INSERT INTO teachers VALUES (1, 1), (2, 2), (3, 3); INSERT INTO courses VALUES (1, 1, 1), (2, 1, 1), (3, 2, 2), (4, 3, 3);", "output": "SELECT s.subject_name, COUNT(DISTINCT t.teacher_id) as num_teachers, COUNT(c.course_id) as total_courses_completed FROM subjects s LEFT JOIN teachers t ON s.subject_id = t.subject_id LEFT JOIN courses c ON t.teacher_id = c.teacher_id GROUP BY s.subject_id;"}
{"input": " \ub3c5\uc77c \ud48d\ub825\ubc1c\uc804\ub2e8\uc9c0\uc758 \ud3c9\uade0 \uc5d0\ub108\uc9c0 \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wind_farms (id INT, name TEXT, country TEXT, energy_production FLOAT); INSERT INTO wind_farms (id, name, country, energy_production) VALUES (1, 'Windpark Nordsee', 'Germany', 250.5), (2, ' alpha ventus', 'Germany', 236.8);", "output": "SELECT AVG(energy_production) FROM wind_farms WHERE country = 'Germany';"}
{"input": " \uac01 \ud50c\ub7ab\ud3fc\uc758 \uace1\ubcc4 \ud50c\ub808\uc774 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Platforms (platform_id INT, platform_name VARCHAR(255)); INSERT INTO Platforms (platform_id, platform_name) VALUES (1, 'Spotify'), (2, 'Apple Music'), (3, 'YouTube'); CREATE TABLE Plays (play_id INT, platform_id INT, song_id INT, plays INT); INSERT INTO Plays (play_id, platform_id, song_id, plays) VALUES (1, 1, 1, 1000), (2, 2, 2, 2000), (3, 3, 3, 3000);", "output": "SELECT p.platform_name, s.song_id, SUM(pl.plays) AS total_plays FROM Platforms p JOIN Plays pl ON p.platform_id = pl.platform_id JOIN Songs s ON pl.song_id = s.song_id GROUP BY p.platform_name, s.song_id;"}
{"input": " \uce90\ub098\ub2e4\uc758 \uc2a4\ud0a8\ucf00\uc5b4 \uc81c\ud488 \uc911 \uba87 \ud37c\uc13c\ud2b8\uac00 \ucc9c\uc5f0 \uc131\ubd84\uc744 \ud568\uc720\ud558\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE product_ingredients(product_id INT, product_type VARCHAR(255), contains_natural_ingredients BOOLEAN); CREATE TABLE cosmetics_sales(product_id INT, country VARCHAR(255), sales_quantity INT, sales_revenue DECIMAL(10,2));", "output": "SELECT 100.0 * COUNT(product_id) / (SELECT COUNT(*) FROM cosmetics_sales WHERE country = 'Canada' AND product_type = 'skincare') AS pct_natural_ingredients FROM product_ingredients WHERE product_type = 'skincare' AND contains_natural_ingredients = TRUE AND product_id IN (SELECT product_id FROM cosmetics_sales WHERE country = 'Canada' AND product_type = 'skincare');"}
{"input": "\uac01 \ud300\uc758 \ud2f0\ucf13 \uad6c\ub9e4\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \ube44\uc6a9\uc744 \uc9c0\ucd9c\ud55c \ud32c\uc740 \ub204\uad6c\uc774\uba70, \uc774\ub4e4\uc774 \uc9c0\ucd9c\ud55c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Tickets (TicketID INT, GameID INT, FanID INT, Price DECIMAL(5,2), Team VARCHAR(50)); INSERT INTO Tickets VALUES (1, 1, 1, 100, 'Lakers'); INSERT INTO Tickets VALUES (2, 1, 2, 120, 'Lakers'); INSERT INTO Tickets VALUES (3, 2, 3, 110, 'Celtics'); INSERT INTO Tickets VALUES (4, 2, 4, 105, 'Celtics'); INSERT INTO Tickets VALUES (5, 3, 5, 130, 'Celtics');", "output": "SELECT TicketID, GameID, FanID, Price, Team, RANK() OVER (PARTITION BY Team ORDER BY Price DESC) AS SpendingRank FROM Tickets WHERE SpendingRank = 1;"}
{"input": " \uc9c0\ub09c \ud55c \ub2ec \ub3d9\uc548 \uac01 \uc704\ud611 \ud589\uc704\uc790\ub85c \uc778\ud574 \ubc1c\uc0dd\ud55c \ubcf4\uc548 \uc0ac\uace0\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (id INT, actor VARCHAR(255), incident_count INT); CREATE VIEW incident_view AS SELECT actor, COUNT(*) as incident_count FROM security_incidents GROUP BY actor;", "output": "SELECT actor, incident_count FROM incident_view WHERE incident_count >= (SELECT AVG(incident_count) FROM incident_view) AND incident_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"}
{"input": " \uc0b0\ud638\uc0bc\uac01\uc9c0\ub300\uc5d0 \uc11c\uc2dd\ud558\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \ucd1d \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species (species_name TEXT, region TEXT); INSERT INTO marine_species (species_name, region) VALUES ('Clownfish', 'Coral Triangle'), ('Whale Shark', 'Coral Triangle');", "output": "SELECT COUNT(*) FROM marine_species WHERE region = 'Coral Triangle';"}
{"input": " Teacher_id \uae30\uc900\uc73c\ub85c \uac01 \uad50\uc0ac\uac00 \ubd84\uae30\ubcc4\ub85c \uc774\uc218\ud55c \uc804\ubb38\uc131 \uac1c\ubc1c \uacfc\uc815 \uc218\uc758 \ubcc0\ud654\uc640 \uacfc\uc815\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE teacher_pd (teacher_id INT, course_id INT, course_date DATE); INSERT INTO teacher_pd (teacher_id, course_id, course_date) VALUES (1, 1001, '2022-01-01'), (1, 1002, '2022-04-15'), (2, 1003, '2022-03-01'), (2, 1004, '2022-06-30'), (3, 1005, '2022-02-14'), (3, 1006, '2022-05-05');", "output": "SELECT teacher_id, DATEDIFF(quarter, LAG(course_date) OVER (PARTITION BY teacher_id ORDER BY course_date), course_date) as quarters_between, COUNT(course_id) - COALESCE(LAG(COUNT(course_id)) OVER (PARTITION BY teacher_id ORDER BY course_date), 0) as courses_diff FROM teacher_pd GROUP BY teacher_id, DATEDIFF(quarter, LAG(course_date) OVER (PARTITION BY teacher_id ORDER BY course_date), course_date) ORDER BY teacher_id, quarters_between, courses_diff;"}
{"input": " \uc801\uc5b4\ub3c4 \ud558\ub098\uc758 \ucd9c\uad6c \uc804\ub7b5\uc744 \uac16\uace0 \uc788\ub294 Fintech \ubd80\ubb38\uc758 Latinx \uac1c\uc778\uc774 \uc124\ub9bd\ud55c \ud68c\uc0ac\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE Companies (id INT, name TEXT, industry TEXT); INSERT INTO Companies VALUES (1, 'Fintech Company', 'Fintech'); CREATE TABLE Exits (company_id INT, exit_type TEXT); INSERT INTO Exits VALUES (1, 'Acquisition');", "output": "SELECT Companies.name FROM Companies JOIN Founders ON Companies.id = Founders.company_id JOIN Exits ON Companies.id = Exits.company_id WHERE Founders.ethnicity = 'Latinx' AND Companies.industry = 'Fintech';"}
{"input": " \uc774\ubc88 \ud68c\uacc4\uc5f0\ub3c4\uc758 \uad6d\uac00\ubcc4 \ucd1d \uad70\uc0ac \uc7a5\ube44 \ud310\ub9e4 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE SalesReps (SalesRepID INT, SalesRepName VARCHAR(50), FiscalYear INT, Revenue DECIMAL(10,2), Country VARCHAR(50)); INSERT INTO SalesReps (SalesRepID, SalesRepName, FiscalYear, Revenue, Country) VALUES (1, 'John Doe', 2022, 150000.00, 'USA'), (2, 'Jane Smith', 2022, 200000.00, 'Canada'), (3, 'Marie Johnson', 2022, 180000.00, 'UK'), (4, 'Pedro Rodriguez', 2022, 250000.00, 'Mexico');", "output": "SELECT Country, SUM(Revenue) OVER (PARTITION BY Country ORDER BY Country) AS TotalRevenue FROM SalesReps WHERE FiscalYear = YEAR(GETDATE());"}
{"input": " 'Action'\uacfc 'GameE'\ub97c \uc81c\uc678\ud558\uace0 'GameF'\uc640 \uac19\uc740 \uc7a5\ub974\uc5d0 \uc18d\ud558\ub294 \uac8c\uc784\uc740 \ubb34\uc5c7\uc778\uac00\uc694?", "context": "CREATE TABLE GameGenres (GameID int, GameName varchar(100), Genre varchar(50)); INSERT INTO GameGenres VALUES (6, 'GameF', 'Action'), (8, 'GameH', 'RPG'), (9, 'GameI', 'Simulation'), (10, 'GameJ', 'Strategy');", "output": "SELECT GameName, Genre FROM GameGenres WHERE Genre IN (SELECT Genre FROM GameGenres WHERE GameName = 'GameF') EXCEPT (SELECT GameName, 'Action' FROM GameGenres WHERE GameName = 'GameF' UNION SELECT 'GameE', Genre FROM GameGenres WHERE GameName = 'GameE');"}
{"input": " 'E' \ub178\uc870\uc640 'F' \ub178\uc870\uc758 \uc870\ud569\uc6d0 \uc218\uc5d0\ub294 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\ub098\uc694?", "context": "CREATE TABLE UnionE(member_id INT); INSERT INTO UnionE(member_id) VALUES(5001), (5002), (5003); CREATE TABLE UnionF(member_id INT); INSERT INTO UnionF(member_id) VALUES(6001), (6002);", "output": "SELECT COUNT(*) FROM UnionE EXCEPT SELECT COUNT(*) FROM UnionF;"}
{"input": " \uac01 \uacfc\ubaa9 \ubd84\uc57c\uc5d0\uc11c \uc804\ubb38\uc131 \uac1c\ubc1c\uc744 \uc774\uc218\ud55c \uad50\uc0ac\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE teacher_training (teacher_id INT, teacher_name TEXT, subject TEXT, completed_training BOOLEAN);", "output": "SELECT subject, AVG(CAST(completed_training AS FLOAT))*100 as percentage FROM teacher_training WHERE completed_training = TRUE GROUP BY subject;"}
{"input": " 40\uc138 \ubbf8\ub9cc\uc774\uace0 0.5\uc5d0\uc774\ucee4\ubcf4\ub2e4 \uc791\uc740 \ud1a0\uc9c0\ub97c \uc18c\uc720\ud55c \ub18d\ubd80\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farmers (id INT PRIMARY KEY, name VARCHAR(100), age INT, location VARCHAR(100)); INSERT INTO Farmers (id, name, age, location) VALUES (1, 'Olga Ivanova', 35, 'Russia'); INSERT INTO Farmers (id, name, age, location) VALUES (2, 'Ahmed Hussein', 42, 'Egypt'); CREATE TABLE Plots (id INT PRIMARY KEY, farmer_id INT, size FLOAT, crop VARCHAR(50)); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (1, 1, 0.4, 'Potatoes'); INSERT INTO Plots (id, farmer_id, size, crop) VALUES (2, 2, 0.6, 'Corn'); CREATE TABLE Currencies (id INT PRIMARY KEY, country VARCHAR(50), currency VARCHAR(50)); INSERT INTO Currencies (id, country, currency) VALUES (1, 'Russia', 'Ruble'); INSERT INTO Currencies (id, country, currency) VALUES (2, 'Egypt', 'Pound');", "output": "SELECT f.name FROM Farmers f INNER JOIN Plots p ON f.id = p.farmer_id INNER JOIN Currencies c ON f.location = c.country WHERE f.age < 40 AND p.size < 0.5;"}
{"input": " Farm 3\uc758 \ud3c9\uade0 \uae30\uc628\uacfc \uc2b5\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weather_data (id INT, location VARCHAR(50), temperature FLOAT, humidity FLOAT, time TIMESTAMP); INSERT INTO weather_data (id, location, temperature, humidity, time) VALUES (1, 'Farm 3', 25.0, 60.0, '2021-01-01 10:00:00');", "output": "SELECT AVG(temperature), AVG(humidity) FROM weather_data WHERE location = 'Farm 3';"}
{"input": " \ud2b9\uc815 \uc5b8\uc5b4\ub85c \uac8c\uc2dc\ub41c \uae30\uc0ac\uc758 \ub0a0\uc9dc\ubcc4\ub85c \uadf8\ub8f9\ud654\ub41c \ud3c9\uade0 \uac10\uc815 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Sentiments (id INT PRIMARY KEY, sentiment FLOAT); INSERT INTO Sentiments (id, sentiment) VALUES (1, 0.5), (2, 0.7), (3, 0.6); CREATE TABLE Articles (id INT PRIMARY KEY, title TEXT, language_id INT, sentiment_id INT, FOREIGN KEY (language_id) REFERENCES Languages(id), FOREIGN KEY (sentiment_id) REFERENCES Sentiments(id)); INSERT INTO Articles (id, title, language_id, sentiment_id) VALUES (1, 'Article 1', 1, 1), (2, 'Article 2', 2, 2), (3, 'Article 3', 1, 3);", "output": "SELECT l.language, DATE_FORMAT(a.date, '%Y-%m-%d') as date, AVG(s.sentiment) as avg_sentiment FROM Articles a JOIN Languages l ON a.language_id = l.id JOIN Sentiments s ON a.sentiment_id = s.id GROUP BY l.language, date;"}
{"input": " \ud559\uc0dd \ucc38\uc5ec\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uacf5\uac1c \uad50\uc721\ud559 \ud504\ub85c\uc81d\ud2b8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students_projects (student_id INT, project_id INT); INSERT INTO students_projects (student_id, project_id) VALUES (1, 201), (2, 201), (3, 202), (4, 202), (5, 203), (6, 203), (7, 203); CREATE TABLE projects (project_id INT, project_name VARCHAR(50)); INSERT INTO projects (project_id, project_name) VALUES (201, 'Math Olympiad'), (202, 'Science Fair'), (203, 'History Day'); CREATE TABLE students (student_id INT, student_name VARCHAR(50)); INSERT INTO students (student_id, student_name) VALUES (1, 'John Doe'), (2, 'Jane Doe'), (3, 'Maria Garcia'), (4, 'Jose Hernandez'), (5, 'Ali Ahmed'), (6, 'Fatima Khan'), (7, 'Park Soo-jin');", "output": "SELECT projects.project_name, COUNT(DISTINCT students_projects.student_id) / COUNT(DISTINCT students.student_id) as participation_rate FROM students_projects JOIN students ON students_projects.student_id = students.student_id JOIN projects ON students_projects.project_id = projects.project_id GROUP BY projects.project_name ORDER BY participation_rate DESC;"}
{"input": " 'RegionD'\uc758 \uad50\ud1b5\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE regions (id INT, name VARCHAR(50)); INSERT INTO regions (id, name) VALUES (1, 'RegionA'), (2, 'RegionB'), (3, 'RegionC'), (4, 'RegionD'); CREATE TABLE budget (id INT, region_id INT, department VARCHAR(50), amount INT); INSERT INTO budget (id, region_id, department, amount) VALUES (1, 1, 'Education', 500000), (2, 1, 'Health', 700000), (3, 2, 'Education', 300000), (4, 2, 'Health', 600000), (5, 3, 'Transportation', 900000), (6, 4, 'Transportation', 1200000);", "output": "SELECT SUM(amount) FROM budget WHERE department = 'Transportation' AND region_id IN (SELECT id FROM regions WHERE name = 'RegionD');"}
{"input": " \uac00\uc785\uc790\uac00 500\uba85 \uc774\uc0c1\uc778 \ubaa8\ubc14\uc77c \uc694\uae08\uc81c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscriber_data (subscriber_id INT, plan_id INT, age INT); INSERT INTO subscriber_data (subscriber_id, plan_id, age) VALUES (1, 1, 25), (2, 2, 35), (3, 3, 45), (4, 1, 30), (5, 2, 40), (6, 3, 50);", "output": "SELECT plan_id, COUNT(*) AS subscriber_count FROM subscriber_data GROUP BY plan_id HAVING subscriber_count > 500;"}
{"input": " 2022\ub144 5\uc6d4\uc758 \ub124\ud2b8\uc6cc\ud06c \uc778\ud504\ub77c \ud22c\uc790\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.", "context": "CREATE TABLE network_investments_2022 (investment_id INT, investment_date DATE, investment_amount FLOAT); INSERT INTO network_investments_2022 (investment_id, investment_date, investment_amount) VALUES (15, '2022-05-03', 80000); INSERT INTO network_investments_2022 (investment_id, investment_date, investment_amount) VALUES (16, '2022-05-18', 95000);", "output": "SELECT * FROM network_investments_2022 WHERE investment_date BETWEEN '2022-05-01' AND '2022-05-31';"}
{"input": " \ub3d9\ubb3c \uac1c\uccb4\uc218 \ub370\uc774\ud130\uc758 \ub3d9\ubb3c \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE animal_population (id INT, animal_species VARCHAR(255), animal_age VARCHAR(255)); INSERT INTO animal_population (id, animal_species, animal_age) VALUES (1, 'Giraffe', 'Juvenile'), (2, 'Giraffe', 'Adult'), (3, 'Giraffe', 'Adult'), (4, 'Zebra', 'Juvenile'), (5, 'Zebra', 'Adult'), (6, 'Lion', 'Senior'), (7, 'Lion', 'Adult'), (8, 'Elephant', 'Juvenile'), (9, 'Elephant', 'Adult'), (10, 'Elephant', 'Senior');", "output": "SELECT animal_species, COUNT(*) AS animal_count, ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rank FROM animal_population GROUP BY animal_species;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\ub294 \ucda9\uc804\uc18c\uac00 \uba87 \uac1c \uc788\ub098\uc694?", "context": "CREATE TABLE Charging_Stations (id INT, station_name VARCHAR(30), location VARCHAR(50), num_chargers INT, last_inspection_date DATE); INSERT INTO Charging_Stations (id, station_name, location, num_chargers, last_inspection_date) VALUES (3, 'California Station', 'Los Angeles, CA', 10, '2021-12-20'), (4, 'Oregon Plaza', 'Portland, OR', 7, '2021-12-22');", "output": "SELECT COUNT(*) as total_stations FROM Charging_Stations WHERE location LIKE '%CA%';"}
{"input": " \ucc3d \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3c4\uc2dc \uc21c\uc704\ub97c \uc9c0\uc815\ud558\uc5ec '\ubbf8\uc8fc' \uc9c0\uc5ed\uc5d0\uc11c \uc5d0\ub108\uc9c0 \ud6a8\uc728 \uc810\uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \ub3c4\uc2dc\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Cities (id INT, city VARCHAR(50), region VARCHAR(50), efficiency_score INT); INSERT INTO Cities VALUES (1, 'NYC', 'Americas', 75), (2, 'LA', 'Americas', 60), (3, 'Toronto', 'Americas', 80), (4, 'Vancouver', 'Americas', 85), (5, 'Mexico City', 'Americas', 65), (6, 'Bogota', 'Americas', 70), (7, 'Santiago', 'Americas', 78), (8, 'Buenos Aires', 'Americas', 72);", "output": "SELECT city, region, efficiency_score, RANK() OVER (PARTITION BY region ORDER BY efficiency_score DESC) as rank FROM Cities WHERE region = 'Americas' ORDER BY region, rank;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \ub370\uc774\ud130 \uc81c\ud55c\uacfc \uad00\ub828\ud558\uc5ec \uace0\uac1d \ubd88\ub9cc\uc774 \uc5bc\ub9c8\ub098 \ub9ce\uc558\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE complaints (complaint_id INT, complaint_type VARCHAR(20), complaint_date DATE, resolved BOOLEAN); INSERT INTO complaints (complaint_id, complaint_type, complaint_date, resolved) VALUES (1, 'data throttling', '2022-04-15', FALSE), (2, 'billing issue', '2022-06-01', TRUE);", "output": "SELECT COUNT(*) FROM complaints WHERE complaint_type = 'data throttling' AND complaint_date >= '2022-04-01' AND complaint_date < '2022-07-01' AND resolved = FALSE;"}
{"input": " \uc8fc\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \ucd1d \uc9c1\uc6d0 \uc218\ub97c \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud55c \ucd1d \uc9c1\uc6d0 \uae30\uc900 \uc0c1\uc704 3\uac1c \uac74\uc124 \ub178\ub3d9 \ud1b5\uacc4\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE LaborStatistics (State VARCHAR(2), Job VARCHAR(50), Employees INT); INSERT INTO LaborStatistics (State, Job, Employees) VALUES ('CA', 'Carpenters', 5000), ('CA', 'Electricians', 7000), ('CA', 'Plumbers', 6000), ('NY', 'Carpenters', 3000), ('NY', 'Electricians', 4000), ('NY', 'Plumbers', 3500);", "output": "SELECT State, Job, Employees FROM (SELECT State, Job, Employees, ROW_NUMBER() OVER(PARTITION BY State ORDER BY Employees DESC) as rn FROM LaborStatistics) t WHERE rn <= 3;"}
{"input": " \ub274\uc695\uc2dc\ub97c \ubc29\ubb38\ud558\ub294 \uad6d\uac00\ubcc4 \ubc29\ubb38\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE if not exists VisitorsByCity (City VARCHAR(50), Country VARCHAR(50), Visitors INT); INSERT INTO VisitorsByCity (City, Country, Visitors) VALUES ('New York City', 'Canada', 12000), ('New York City', 'Mexico', 15000), ('New York City', 'Brazil', 10000), ('New York City', 'United Kingdom', 18000), ('New York City', 'Germany', 14000);", "output": "SELECT a.Country, (a.Visitors::FLOAT / SUM(a.Visitors) OVER (PARTITION BY a.City) * 100) AS Percentage FROM VisitorsByCity a WHERE a.City = 'New York City';"}
{"input": " \ubbf8\uc2dd\uac00 \uc0c1\uc778\uc774 \uc81c\uacf5\ud558\ub294 \ube44\uac74 \uc694\ub9ac\uc758 \ucd5c\uace0 \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VendorType (VendorID INT, VendorType VARCHAR(50)); INSERT INTO VendorType (VendorID, VendorType) VALUES (1, 'Gourmet'), (2, 'Standard'); CREATE TABLE VeganDishes (MenuID INT, VendorID INT, DishName VARCHAR(50), DishType VARCHAR(50), Price DECIMAL(5,2)); INSERT INTO VeganDishes (MenuID, VendorID, DishName, DishType, Price) VALUES (1, 1, 'Tofu Stir Fry', 'Vegan', 14.99), (2, 1, 'Vegan Sushi', 'Vegan', 12.99), (3, 2, 'Vegan Burger', 'Vegan', 9.99);", "output": "SELECT MAX(Price) FROM VeganDishes WHERE VendorID IN (SELECT VendorID FROM VendorType WHERE VendorType = 'Gourmet') AND DishType = 'Vegan';"}
{"input": " 2010\ub144 \uc774\uc804\uc5d0 \ubc1c\uc0ac\ub41c \uc6b0\uc8fc \uc784\ubb34\ub97c \ubaa8\ub450 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE space_missions (id INT PRIMARY KEY, mission_name VARCHAR(255), country VARCHAR(255), launch_date DATE, mission_type VARCHAR(255));", "output": "SELECT * FROM space_missions WHERE launch_date < '2010-01-01';"}
{"input": "\uc9c0\ub09c 10\ub144\uac04 \uac00\uc7a5 \ub192\uc740 \uac00\uaca9\uacfc \uac00\uc7a5 \ub0ae\uc740 \uac00\uaca9\uc73c\ub85c \ud310\ub9e4\ub41c \uc608\uc220\ud488\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE art_sales (id INT, year INT, art_name VARCHAR(50), art_type VARCHAR(50), sale_price INT);", "output": "SELECT art_name, year, sale_price FROM (SELECT art_name, year, sale_price, DENSE_RANK() OVER (ORDER BY sale_price DESC) as rank FROM art_sales WHERE year >= 2012) a WHERE rank <= 1 OR rank >= 11;"}
{"input": "\uc9c0\ub09c \ub2ec\uc5d0 \ubcf4\uace0\ub41c \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 AI \uc548\uc804 \ubb38\uc81c 3\uac00\uc9c0\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE ai_safety_reports (id INT, concern VARCHAR(255), date DATE);", "output": "SELECT concern, COUNT(*) OVER (PARTITION BY concern ORDER BY COUNT(*) DESC) as rank FROM ai_safety_reports WHERE date >= DATEADD(month, -1, GETDATE()) GROUP BY concern;"}
{"input": " '\uc7ac\uc0dd\uc5d0\ub108\uc9c0' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \ud48d\ub825 \uc5d0\ub108\uc9c0 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc124\uce58 \uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists renewables; CREATE TABLE if not exists renewables.wind_projects (project_id int, name varchar(255), location varchar(255), installed_capacity float); INSERT INTO renewables.wind_projects (project_id, name, location, installed_capacity) VALUES (1, 'Wind Farm 1', 'Country A', 100.0), (2, 'Wind Farm 2', 'Country B', 150.0);", "output": "SELECT SUM(installed_capacity) FROM renewables.wind_projects;"}
{"input": " VR \uac8c\uc784\uc5d0\uc11c \uc77c\ubcf8 \ucd5c\uace0 \uc218\uc775\uc744 \uc62c\ub9b0 \ud50c\ub808\uc774\uc5b4\uc758 \uc774\uba54\uc77c\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE Players (PlayerID INT PRIMARY KEY, PlayerName VARCHAR(100), Country VARCHAR(50), Email VARCHAR(100)); INSERT INTO Players VALUES (1, 'Kenji', 'Japan', 'kenji@example.com');", "output": "UPDATE Players SET Email = 'kenji.topplayer@example.com' WHERE PlayerID = (SELECT PlayerID FROM (SELECT PlayerID, SUM(VirtualCurrency) as TotalCurrencyEarned FROM Players JOIN VR_Games ON Players.PlayerID = VR_Games.PlayerID WHERE Country = 'Japan' GROUP BY PlayerID ORDER BY TotalCurrencyEarned DESC LIMIT 1));"}
{"input": " \uc778\ub3c4\uc591\uc5d0 \uc218\uc2ec\uc774 100\ubbf8\ud130 \uc774\uc0c1\uc778 \ud574\uc591 \ubcf4\ud638 \uad6c\uc5ed\uc740 \ucd1d \uba87 \uad70\ub370\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_protected_areas (name TEXT, location TEXT, min_depth INTEGER, max_depth INTEGER); INSERT INTO marine_protected_areas (name, location, min_depth, max_depth) VALUES ('Area A', 'Indian', 50, 120), ('Area B', 'Indian', 100, 250), ('Area C', 'Indian', 75, 175), ('Area D', 'Indian', 150, 300);", "output": "SELECT COUNT(*) FROM marine_protected_areas WHERE location = 'Indian' AND min_depth > 100;"}
{"input": " 'MI'\uc5d0 \uac70\uc8fc\ud558\ub294 \ubcf4\ud5d8 \uacc4\uc57d\uc790\uac00 2\uba85 \uc774\uc0c1\uc778 \ubcf4\ud5d8 \uc720\ud615\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE policyholders (id INT, name TEXT, state TEXT, policy_type TEXT, premium FLOAT); INSERT INTO policyholders (id, name, state, policy_type, premium) VALUES (1, 'John Doe', 'MI', 'Auto', 1200.00), (2, 'Jane Smith', 'MI', 'Auto', 1200.00), (3, 'Jim Brown', 'MI', 'Health', 2500.00), (4, 'Karen Green', 'MI', 'Health', 2500.00), (5, 'Mark Red', 'CA', 'Home', 3000.00);", "output": "SELECT policy_type, COUNT(DISTINCT name) as num_policyholders FROM policyholders WHERE state = 'MI' GROUP BY policy_type HAVING num_policyholders > 2;"}
{"input": " 2024\ub144 \ud0d1\uc2b9\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uacfc \uac00\uc7a5 \ub0ae\uc740 \ub300\uc911\uad50\ud1b5 \uc2dc\uc2a4\ud15c\uc744 \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE Public_Transportation (Id INT, System VARCHAR(50), Ridership INT, Year INT); INSERT INTO Public_Transportation (Id, System, Ridership, Year) VALUES (1, 'Tokyo Metro', 6000000, 2024); INSERT INTO Public_Transportation (Id, System, Ridership, Year) VALUES (2, 'Paris Metro', 5000000, 2024); INSERT INTO Public_Transportation (Id, System, Ridership, Year) VALUES (3, 'London Tube', 4000000, 2024);", "output": "SELECT System, Ridership FROM (SELECT System, Ridership, ROW_NUMBER() OVER (ORDER BY Ridership DESC) AS Rank, COUNT(*) OVER () AS Total FROM Public_Transportation WHERE Year = 2024) AS Subquery WHERE Rank = 1 OR Rank = Total;"}
{"input": " \uac01 \uc2a4\ud3ec\uce20\ubcc4\ub85c \ud2f0\ucf13 \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 2\uac1c \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE ticket_sales(ticket_id INT, sport VARCHAR(10), city VARCHAR(20), tickets INT); INSERT INTO ticket_sales(ticket_id, sport, city, tickets) VALUES (1, 'baseball', 'Toronto', 1000), (2, 'hockey', 'Montreal', 800), (3, 'baseball', 'Vancouver', 1500), (4, 'hockey', 'Toronto', 1100), (5, 'baseball', 'Montreal', 1200), (6, 'hockey', 'Vancouver', 1300), (7, 'baseball', 'Ottawa', 800), (8, 'hockey', 'Ottawa', 700);", "output": "SELECT sport, city, SUM(tickets) AS total_tickets FROM ticket_sales GROUP BY sport, city HAVING COUNT(*) > 1 ORDER BY sport, SUM(tickets) DESC;"}
{"input": " \uc9c0\ub09c \ub2ec \ud3c9\uc0dd\ud559\uc2b5 \ud504\ub85c\uadf8\ub7a8\uc5d0 \ub4f1\ub85d\ud55c \ud559\uc0dd\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE students_enrollment (id INT, student_id INT, country VARCHAR(255), enrollment_date DATE); INSERT INTO students_enrollment (id, student_id, country, enrollment_date) VALUES (1, 1, 'USA', '2021-08-01'), (2, 2, 'Canada', '2021-07-15'), (3, 3, 'USA', '2021-01-01');", "output": "SELECT COUNT(DISTINCT student_id) FROM students_enrollment WHERE enrollment_date >= DATEADD(month, -1, GETDATE());"}
{"input": " 2020\ub144\uacfc 2021\ub144\uc5d0 \uae30\ub85d\ub41c \uac10\uc5fc\ubcd1 \ucd1d \uac74\uc218\ub97c \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Infectious_Diseases (ID INT, Year INT, Type TEXT, Cases INT); INSERT INTO Infectious_Diseases (ID, Year, Type, Cases) VALUES (1, 2020, 'Flu', 500); INSERT INTO Infectious_Diseases (ID, Year, Type, Cases) VALUES (2, 2021, 'COVID-19', 1000);", "output": "SELECT Type, SUM(Cases) FROM Infectious_Diseases WHERE Year = 2020 GROUP BY Type UNION SELECT Type, SUM(Cases) FROM Infectious_Diseases WHERE Year = 2021 GROUP BY Type;"}
{"input": " \uc9c0\uc911\ud574\uc758 \ubaa8\ub4e0 \ud574\uc591 \ubcf4\ud638 \uc9c0\uc5ed\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marine_protected_areas (id INT, name VARCHAR(255), location VARCHAR(255), size_km FLOAT); INSERT INTO marine_protected_areas (id, name, location, size_km) VALUES (1, 'Bouillante Underwater Nature Reserve', 'Guadeloupe, Caribbean', 18.0), (2, 'Medes Islands', 'Mediterranean Sea', 80.0);", "output": "SELECT name FROM marine_protected_areas WHERE location = 'Mediterranean Sea';"}
{"input": " \ud574\ub2f9 \uc2dc\uc758 \uac01 \uc790\uce58\uad6c\uc5d0\uc11c \uac1c\ucd5c\ub418\ub294 \uacf5\uccad\ud68c \ud69f\uc218\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE public_hearings (hearing_id INT, topic VARCHAR(255), district VARCHAR(255)); INSERT INTO public_hearings (hearing_id, topic, district) VALUES (1, 'Transportation', 'Downtown'); INSERT INTO public_hearings (hearing_id, topic, district) VALUES (2, 'Education', 'Uptown');", "output": "SELECT district, COUNT(*) FROM public_hearings GROUP BY district;"}
{"input": " \uad11\uace0\uc8fc\ubcc4 \ucd1d \uad11\uace0 \ub178\ucd9c\uc218\uc640 \ud074\ub9ad\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uadf8 \ucc28\uc774\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE advertisers (id INT, name VARCHAR(50)); CREATE TABLE ad_impressions (advertiser_id INT, impression_time TIMESTAMP); CREATE TABLE ad_clicks (advertiser_id INT, click_time TIMESTAMP);", "output": "SELECT advertisers.name, COUNT(ad_impressions.advertiser_id) as total_impressions, COUNT(ad_clicks.advertiser_id) as total_clicks, COUNT(ad_impressions.advertiser_id) - COUNT(ad_clicks.advertiser_id) as difference FROM advertisers LEFT JOIN ad_impressions ON advertisers.id = ad_impressions.advertiser_id LEFT JOIN ad_clicks ON advertisers.id = ad_clicks.advertiser_id GROUP BY advertisers.name;"}
{"input": " SIGINT \uae30\uad00\uc758 \uac01 \uc720\ud615\ubcc4 \uc9c1\uc6d0 \uc218\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE SCHEMA if not exists sigint_personnel AUTHORIZATION defsec;CREATE TABLE if not exists sigint_personnel.info (id INT, name VARCHAR(100), type VARCHAR(50), personnel INT);INSERT INTO sigint_personnel.info (id, name, type, personnel) VALUES (1, 'NSA', 'SIGINT', 25000);INSERT INTO sigint_personnel.info (id, name, type, personnel) VALUES (2, 'GCHQ', 'SIGINT', 10000);INSERT INTO sigint_personnel.info (id, name, type, personnel) VALUES (3, 'DGSE', 'SIGINT', 12000);", "output": "SELECT type, SUM(personnel) as total_personnel FROM sigint_personnel.info WHERE name LIKE '%SIGINT%' GROUP BY type;"}
{"input": "\uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \ucd1d \uc790\uc6d0\ubd09\uc0ac\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteers (id INT, name TEXT, country TEXT, hours_volunteered INT);", "output": "SELECT SUM(hours_volunteered) FROM volunteers WHERE country IN (SELECT name FROM countries WHERE continent = 'Africa');"}
{"input": " 2030\ub144 \uc544\ud55c\ub300 \uc0b0\ub9bc\uc758 \ud3c9\uade0 CO2 \uaca9\ub9ac \uc7a0\uc7ac\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE co2_sequestration_boreal (id INT, year INT, sequestration FLOAT);", "output": "SELECT AVG(sequestration) FROM co2_sequestration_boreal WHERE year = 2030 AND id = (SELECT MAX(id) FROM co2_sequestration_boreal WHERE year < 2030);"}
{"input": " 'SouthWest' \uc9c0\uc5ed\uc758 \uc5d4\uc9c0\ub2c8\uc5b4\ub97c \ubcf4\uc720\ud55c \ud504\ub85c\uc81d\ud2b8 \uc218\uc5d0 \ub530\ub77c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc21c\uc704\ub97c \uc9c0\uc815\ud558\uace0 \ud504\ub85c\uc81d\ud2b8\uac00 5\uac1c \uc774\uc0c1\uc778 \uc5d4\uc9c0\ub2c8\uc5b4\ub9cc \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Engineers (ID INT, Name VARCHAR(255), Region VARCHAR(255), Projects INT, Cost DECIMAL(10,2)); INSERT INTO Engineers VALUES (1, 'John Doe', 'WestCoast', 5, 15000.00), (2, 'Jane Smith', 'EastCoast', 3, 12000.00), (3, 'Mike Johnson', 'SouthWest', 7, 20000.00), (4, 'Sara Connor', 'SouthWest', 6, 18000.00);", "output": "SELECT ID, Name, Region, Projects, RANK() OVER (PARTITION BY Region ORDER BY Projects DESC) AS Rank FROM Engineers WHERE Region = 'SouthWest' AND Projects > 5 ORDER BY Region, Rank;"}
{"input": " \uc9c0\uc5ed D\uc758 \uac01 \uc720\uc815\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc0dd\uc0b0\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE production (id INT, well_name VARCHAR(50), year INT, production_volume INT, region VARCHAR(50)); INSERT INTO production (id, well_name, year, production_volume, region) VALUES (1, 'Well X', 2019, 1000, 'Region D'); INSERT INTO production (id, well_name, year, production_volume, region) VALUES (2, 'Well Y', 2020, 1500, 'Region E'); INSERT INTO production (id, well_name, year, production_volume, region) VALUES (3, 'Well X', 2020, 1200, 'Region D');", "output": "SELECT well_name, AVG(production_volume) FROM production WHERE region = 'Region D' GROUP BY well_name;"}
{"input": " \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc9c0 \ubabb\ud55c \uc544\ud2f0\uc2a4\ud2b8\uc758 \uc774\ub984\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE artists (id INT, name VARCHAR(255)); INSERT INTO artists (id, name) VALUES (1, 'Picasso'), (2, 'Van Gogh'), (3, 'Monet'), (4, 'Dali'); CREATE TABLE funding (artist_id INT, source VARCHAR(255), amount FLOAT); INSERT INTO funding (artist_id, source, amount) VALUES (1, 'Private Donor', 10000), (1, 'Corporation', 20000), (2, 'Government', 15000), (2, 'Private Donor', 5000);", "output": "SELECT name FROM artists WHERE id NOT IN (SELECT artist_id FROM funding);"}
{"input": " \uc5ec\uc131\uc73c\ub85c \ud655\uc778\ub41c \uc9c1\uc6d0\uc758 \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uae09\uc5ec\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(50), LastName VARCHAR(50), Department VARCHAR(50), Salary DECIMAL(10,2), Gender VARCHAR(10));", "output": "SELECT Department, AVG(Salary) as Avg_Salary FROM Employees WHERE Gender = 'Female' GROUP BY Department;"}
{"input": " \uc778\uad6c\uac00 500,000\uba85 \uc774\uc0c1\uc778 \uc9c0\uc5ed\uc5d0\uc11c \uc2dc\ud589\ub418\ub294 \ud0c4\uc18c \uc0c1\uc1c4 \uacc4\ud68d\uc758 \uc774\ub984\uacfc \uc9c0\uc5ed\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Carbon_Offset_Initiatives (id INT, initiative_name VARCHAR(50), district VARCHAR(50), population INT); INSERT INTO Carbon_Offset_Initiatives (id, initiative_name, district, population) VALUES (1, 'Tree Planting', 'Downtown', 800000), (2, 'Recycling Program', 'Uptown', 600000), (3, 'Solar Panels', 'Suburbs', 400000);", "output": "SELECT initiative_name, district FROM Carbon_Offset_Initiatives WHERE district IN (SELECT district FROM Cities WHERE population > 500000);"}
{"input": " \uc218\uc628\uc774 \uc12d\uc528 10\ub3c4\uc5d0\uc11c 25\ub3c4 \uc0ac\uc774\uc778 \uc591\uc2dd\uc7a5\uc5d0\uc11c \uc1a1\uc5b4\uc758 \ud3c9\uade0 \uba39\uc774 \ube44\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Farm (FarmID int, FarmName varchar(50), WaterTemperature numeric); INSERT INTO Farm (FarmID, FarmName, WaterTemperature) VALUES (1, 'Farm A', 22); INSERT INTO Farm (FarmID, FarmName, WaterTemperature) VALUES (2, 'Farm B', 18); INSERT INTO Farm (FarmID, FarmName, WaterTemperature) VALUES (3, 'Farm C', 15); INSERT INTO Farm (FarmID, FarmName, WaterTemperature) VALUES (4, 'Farm D', 23); CREATE TABLE FishStock (FishStockID int, FishSpecies varchar(50), FarmID int, FeedingRate numeric); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, FeedingRate) VALUES (1, 'Cod', 1, 3); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, FeedingRate) VALUES (2, 'Cod', 2, 2); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, FeedingRate) VALUES (3, 'Trout', 3, 1); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, FeedingRate) VALUES (4, 'Trout', 4, 4); INSERT INTO FishStock (FishStockID, FishSpecies, FarmID, FeedingRate) VALUES (5, 'Trout', 3, 2);", "output": "SELECT AVG(FeedingRate) FROM FishStock fs WHERE FishSpecies = 'Trout' AND fs.FarmID IN (SELECT FarmID FROM Farm WHERE WaterTemperature BETWEEN 10 AND 25);"}
{"input": " 2021\ub144 \uc0dd\uba85\uacf5\ud559 \uc2a4\ud0c0\ud2b8\uc5c5\uc774 \ubc1b\uc740 \ucd5c\ub300 \uc790\uae08\uc740 \uc5bc\ub9c8\uc600\ub098\uc694?", "context": "CREATE TABLE biotech_startups (name TEXT, funding FLOAT, date DATE); INSERT INTO biotech_startups (name, funding, date) VALUES ('StartupA', 5000000, '2021-02-03'); INSERT INTO biotech_startups (name, funding, date) VALUES ('StartupB', 7000000, '2021-12-17');", "output": "SELECT MAX(funding) FROM biotech_startups WHERE date BETWEEN '2021-01-01' AND '2021-12-31';"}
{"input": " \uc801\uc5b4\ub3c4 \ud55c \ubc88\uc758 \ucf58\uc11c\ud2b8\uac00 \uc788\ub294 \uad6d\uac00\ubcc4 \ub3c5\ud2b9\ud55c \uc7a5\ub974\uc758 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE CountryConcerts (Country VARCHAR(50), ConcertID INT);   INSERT INTO CountryConcerts (Country, ConcertID) VALUES ('USA', 1);   INSERT INTO CountryConcerts (Country, ConcertID) VALUES ('Canada', 2);   INSERT INTO CountryConcerts (Country, ConcertID) VALUES ('Mexico', 3);", "output": "SELECT Country, COUNT(DISTINCT Genre) AS UniqueGenres FROM CountryConcerts JOIN Concerts ON CountryConcerts.ConcertID = Concerts.ConcertID JOIN Songs ON Concerts.ConcertID = Songs.ConcertID GROUP BY Country HAVING COUNT(DISTINCT Concerts.ConcertID) > 0;"}
{"input": " 2020\ub144 \uc778\ub3c4\uc640 \uc911\uad6d\uc5d0\uc11c \ubd80\uc5ec\ub41c \uc0ac\ud68c\ubcf5\uc9c0 \uae30\uc220 \ud2b9\ud5c8 \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE tech_patents_india(patent_id INT, country VARCHAR(10), grant_year INT); INSERT INTO tech_patents_india VALUES (1, 'India', 2020), (2, 'India', 2019); CREATE TABLE tech_patents_china(patent_id INT, country VARCHAR(10), grant_year INT); INSERT INTO tech_patents_china VALUES (1, 'China', 2020), (2, 'China', 2018);", "output": "SELECT SUM(grant_year = 2020) FROM tech_patents_india WHERE country = 'India' UNION ALL SELECT SUM(grant_year = 2020) FROM tech_patents_china WHERE country = 'China';"}
{"input": "\uc9c0\ub09c 10\ub144\uac04 \ubd81\uadf9\ud574\uc758 \ud3c9\uade0 \ud574\uc218\uba74 \uc628\ub3c4\ub97c \uad6c\ud558\uc138\uc694.", "context": "CREATE TABLE sea_surface_temperature (year INTEGER, region TEXT, temperature REAL); INSERT INTO sea_surface_temperature (year, region, temperature) VALUES (2012, 'Arctic Ocean', 2.0), (2013, 'Arctic Ocean', 1.5), (2014, 'Arctic Ocean', 2.5); INSERT INTO sea_surface_temperature (year, region, temperature) VALUES (2015, 'Arctic Ocean', 3.0), (2016, 'Arctic Ocean', 1.0), (2017, 'Arctic Ocean', 2.0); INSERT INTO sea_surface_temperature (year, region, temperature) VALUES (2018, 'Arctic Ocean', 1.5), (2019, 'Arctic Ocean', 3.5), (2020, 'Arctic Ocean', 2.5);", "output": "SELECT AVG(temperature) FROM sea_surface_temperature WHERE region = 'Arctic Ocean' AND year BETWEEN 2011 AND 2020;"}
{"input": " \ub3c4\uc2dc\uc640 \ub18d\ucd0c \uc9c0\uc5ed\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uac01 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc2dc\ubbfc \ud53c\ub4dc\ubc31 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CitizenFeedback (AreaType VARCHAR(50), Service VARCHAR(50), Score INT); INSERT INTO CitizenFeedback (AreaType, Service, Score) VALUES ('Urban', 'Waste Collection', 8), ('Urban', 'Street Lighting', 9), ('Rural', 'Water Supply', 7), ('Rural', 'Road Maintenance', 6);", "output": "SELECT AreaType, Service, AVG(Score) OVER(PARTITION BY AreaType, Service) as AvgScore FROM CitizenFeedback;"}
{"input": " \uc624\ud508 \ub370\uc774\ud130 \uc774\ub2c8\uc154\ud2f0\ube0c \uc218\uac00 \uac00\uc7a5 \ub9ce\uace0 \uac00\uc7a5 \uc801\uc740 \ubd80\uc11c\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE dept_open_data (dept_name TEXT, initiative_count INT);", "output": "SELECT dept_name, initiative_count FROM (SELECT dept_name, initiative_count, ROW_NUMBER() OVER (ORDER BY initiative_count DESC) AS high_dept, ROW_NUMBER() OVER (ORDER BY initiative_count ASC) AS low_dept FROM dept_open_data) subquery WHERE high_dept = 1 OR low_dept = 1;"}
{"input": " \uac00\uc7a5 \uc77c\ubc18\uc801\uc774\uace0 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc9c1\ubb3c \uc720\ud615 \uc0c1\uc704 3\uac1c \ud45c\uc2dc", "context": "CREATE TABLE fabrics (id SERIAL PRIMARY KEY, product_id INTEGER, fabric_type VARCHAR(20), is_sustainable BOOLEAN); INSERT INTO fabrics (product_id, fabric_type, is_sustainable) VALUES (1, 'cotton', true), (2, 'polyester', false), (3, 'recycled_polyester', true), (4, 'cotton', true), (5, 'silk', false), (6, 'recycled_cotton', true);", "output": "SELECT fabric_type, COUNT(*) as count FROM fabrics WHERE is_sustainable = true GROUP BY fabric_type ORDER BY count DESC LIMIT 3;"}
{"input": "\uc544\uc2dc\uc544 \uc9c0\uc5ed \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud574 \uc9c0\uc815\ud559\uc801 \uc704\ud5d8 \uc810\uc218\uac00 6 \uc774\uc0c1\uc778 \ubc29\uc0b0 \ud504\ub85c\uc81d\ud2b8\uc640 \ud574\ub2f9 \uc2dc\uc791 \ubc0f \uc885\ub8cc \ub0a0\uc9dc\ub97c \uacc4\uc57d \ud611\uc0c1 \uc0c1\ud0dc\uc640 \ud568\uaed8 \uc9c0\uc815\ud559\uc801 \uc704\ud5d8 \uc810\uc218 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE DefenseProjects (project_id INT, project_name VARCHAR(50), start_date DATE, end_date DATE, negotiation_status VARCHAR(50), geopolitical_risk_score INT, project_region VARCHAR(50)); INSERT INTO DefenseProjects (project_id, project_name, start_date, end_date, negotiation_status, geopolitical_risk_score, project_region) VALUES (5, 'Project D', '2022-02-01', '2024-12-31', 'Negotiating', 8, 'Asia'), (6, 'Project E', '2021-06-15', '2023-05-01', 'Completed', 5, 'Asia'), (7, 'Project F', '2022-07-22', '2027-06-30', 'Planning', 7, 'Europe');", "output": "SELECT project_name, start_date, end_date, negotiation_status, geopolitical_risk_score FROM DefenseProjects WHERE geopolitical_risk_score > 6 AND project_region = 'Asia' ORDER BY geopolitical_risk_score DESC;"}
{"input": " \ubaa8\ub4e0 \ub3c4\uc2dc\ub97c \ud574\ub2f9 \uae30\uc874 \ucc28\ub7c9 \uc218\uc640 \ud568\uaed8 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE public.vehicles (id INT, type VARCHAR(20), city VARCHAR(20)); INSERT INTO public.vehicles (id, type, city) VALUES (1, 'electric_car', 'Paris'), (2, 'conventional_car', 'Paris'), (3, 'autonomous_bus', 'Paris'), (4, 'conventional_car', 'Berlin'), (5, 'electric_bus', 'Berlin');", "output": "SELECT city, COUNT(*) FROM public.vehicles WHERE type NOT LIKE 'electric%' AND type NOT LIKE 'autonomous%' GROUP BY city;"}
{"input": " \uac00\uc7a5 \ucd5c\uadfc \uc5f0\ub3c4\uc758 \ud3c9\uade0\ubcf4\ub2e4 CO2 \ubc30\ucd9c\ub7c9\uc774 \ub9ce\uc740 \uad11\uc0b0 \uae30\ub85d\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Emission_Statistics (Mine_Name VARCHAR(50), CO2_Emissions FLOAT, Year INT); INSERT INTO Emission_Statistics (Mine_Name, CO2_Emissions, Year) VALUES ('Emerald Peaks', 1250.0, 2019), ('Ruby Ridge', 1100.5, 2019), ('Sapphire Summit', 1320.2, 2019);", "output": "DELETE FROM Emission_Statistics WHERE CO2_Emissions > (SELECT AVG(CO2_Emissions) FROM Emission_Statistics) AND Year = (SELECT MAX(Year) FROM Emission_Statistics);"}
{"input": " \uc9c0\ub09c 3\uc77c \ub3d9\uc548 \uc77c\ubcf8\uc5d0 \uc788\ub294 \uacc4\uc815\uc5d0\uc11c #animalrights \ud574\uc2dc\ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE accounts (id INT, name VARCHAR(255), location VARCHAR(255)); CREATE TABLE posts (id INT, account_id INT, content TEXT, timestamp TIMESTAMP); CREATE TABLE interactions (id INT, post_id INT, user_id INT); INSERT INTO accounts (id, name, location) VALUES (1, 'animal_rights_user', 'Japan'); INSERT INTO posts (id, account_id, content, timestamp) VALUES (1, 1, 'post1 #animalrights', '2022-05-03 12:00:00'); INSERT INTO interactions (id, post_id, user_id) VALUES (1, 1, 100);", "output": "SELECT COUNT(DISTINCT interactions.user_id) FROM interactions JOIN posts ON interactions.post_id = posts.id JOIN accounts ON posts.account_id = accounts.id WHERE posts.timestamp >= NOW() - INTERVAL '3 days' AND posts.content LIKE '%#animalrights%' AND accounts.location = 'Japan';"}
{"input": " \uc8fc\ubcc4 \ucd5c\ub300 \ub300\uc911 \ucc38\uc5ec \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE state_data (state VARCHAR(255), participations INT); INSERT INTO state_data VALUES ('California', 500), ('Texas', 400), ('Florida', 300);", "output": "SELECT state, MAX(participations) FROM state_data GROUP BY state;"}
{"input": " \uc9c0\ub09c \ud55c \ud574 \ub3d9\uc548 \uad6d\uac00\ubcc4 \ud654\uc7a5\ud488\uc5d0 \ub300\ud55c \uc18c\ube44\uc790 \uc9c0\ucd9c \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sales(sale_id INT, product_id INT, quantity INT, sale_price DECIMAL(10, 2), sale_date DATE);  CREATE TABLE ingredient_sourcing(ingredient_id INT, product_id INT, country VARCHAR(50));  CREATE TABLE cosmetics_products(product_id INT, product_name VARCHAR(100), category VARCHAR(50));", "output": "SELECT ingredient_sourcing.country, SUM(sales.quantity * sales.sale_price) as total_spending FROM sales JOIN ingredient_sourcing ON sales.product_id = ingredient_sourcing.product_id JOIN cosmetics_products ON ingredient_sourcing.product_id = cosmetics_products.product_id WHERE sales.sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY ingredient_sourcing.country;"}
{"input": " \uad6d\uac00\ubcc4 \uc77c\uc77c \ud3c9\uade0 \uae30\ubd80\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_donations (country TEXT, donation_date DATE, donation FLOAT); INSERT INTO daily_donations (country, donation_date, donation) VALUES ('Haiti', '2021-01-01', 50.00), ('Haiti', '2021-01-02', 50.00), ('Pakistan', '2021-01-01', 100.00), ('Pakistan', '2021-01-02', 100.00), ('Syria', '2021-01-01', 150.00), ('Syria', '2021-01-02', 150.00), ('Afghanistan', '2021-01-01', 200.00), ('Afghanistan', '2021-01-02', 200.00);", "output": "SELECT country, AVG(donation) OVER (PARTITION BY country) AS avg_donation_per_day FROM daily_donations;"}
{"input": " \ub2e4\uc591\ud55c \ucc3d\ub9bd \ud300\uc774 \uc788\ub294 \ud68c\uc0ac\uc5d0 \ud22c\uc790\ud55c \uc801\uc774 \uc5c6\ub294 Tier 1 \ud22c\uc790\uc790\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Investors (id INT, tier TEXT, name TEXT); INSERT INTO Investors (id, tier, name) VALUES (1, 'Tier 1', 'Seed Capital'), (2, 'Tier 1', 'Venture Partners'), (3, 'Tier 2', 'Early Growth'); CREATE TABLE Investments (investor_id INT, company_id INT); INSERT INTO Investments (investor_id, company_id) VALUES (1, 1), (1, 2), (2, 3); CREATE TABLE Companies (id INT, name TEXT, diversity_score FLOAT); INSERT INTO Companies (id, name, diversity_score) VALUES (1, 'Inclusive Future', 0.9), (2, 'Green Growth', 0.5), (3, 'Tech Titans', 0.2);", "output": "SELECT Investors.name FROM Investors JOIN Investments ON Investors.id = Investments.investor_id LEFT JOIN Companies ON Investments.company_id = Companies.id WHERE Investors.tier = 'Tier 1' AND Companies.diversity_score IS NULL;"}
{"input": " 2015\ub144 \uc774\ud6c4 \uc644\ub8cc\ub41c \ub274\uc695\uc2dc \ubaa8\ub4e0 \ub300\uc911\uad50\ud1b5 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uae30\uac04\uacfc \uc774\ub7ec\ud55c \ud504\ub85c\uc81d\ud2b8\uc758 \ud3c9\uade0 \uc644\ub8cc \uc2dc\uac04\uc744 \uc644\ub8cc \uc2dc\uac04\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE transport_projects (id INT, project_name VARCHAR(255), location VARCHAR(255), length FLOAT, completion_time INT); INSERT INTO transport_projects (id, project_name, location, length, completion_time) VALUES (1, 'Subway Extension', 'New York City', 5.6, 48), (2, 'Bus Rapid Transit', 'New York City', 12.4, 36), (3, 'Light Rail', 'New York City', 8.2, 60);", "output": "SELECT SUM(length), AVG(completion_time) FROM transport_projects WHERE location = 'New York City' AND completion_time >= 2015 GROUP BY completion_time ORDER BY completion_time;"}
{"input": " \uc138 \ubc88\uc9f8 \ud589\uc5d0 \uc788\ub294 \uace0\uac1d\uc758 \uc794\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customers (id INT, name VARCHAR(255), country VARCHAR(255), balance DECIMAL(10, 2)); INSERT INTO customers (id, name, country, balance) VALUES (1, 'John Doe', 'USA', 5000.00), (2, 'Jane Smith', 'Canada', 7000.00), (3, 'Alice Johnson', 'UK', 8000.00);", "output": "SELECT balance FROM customers WHERE ROW_NUMBER() OVER (ORDER BY id) = 3;"}
{"input": " \uc724\ub9ac\uc801\uc778 \uc758\ub958 \uc0b0\uc5c5\uc5d0\uc11c \uacf5\uae09\ub9dd\uc758 \ud22c\uba85\uc131\uc774 \uac00\uc7a5 \ub0ae\uc740 \uad6d\uac00\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE countries (country_code VARCHAR(3), country_name VARCHAR(50)); INSERT INTO countries (country_code, country_name) VALUES ('USA', 'United States'), ('CAN', 'Canada'), ('IND', 'India'); CREATE TABLE manufacturers (manufacturer_id INT, manufacturer_name VARCHAR(50), country_code VARCHAR(3)); INSERT INTO manufacturers (manufacturer_id, manufacturer_name, country_code) VALUES (1, 'Manufacturer A', 'USA'), (2, 'Manufacturer B', 'CAN'), (3, 'Manufacturer C', 'IND'); CREATE TABLE supply_chains (supply_chain_id INT, manufacturer_id INT, transparency_score INT); INSERT INTO supply_chains (supply_chain_id, manufacturer_id, transparency_score) VALUES (1, 1, 60), (2, 2, 90), (3, 3, 40);", "output": "SELECT c.country_name, AVG(sc.transparency_score) as avg_transparency_score FROM countries c JOIN manufacturers m ON c.country_code = m.country_code JOIN supply_chains sc ON m.manufacturer_id = sc.manufacturer_id GROUP BY c.country_name ORDER BY avg_transparency_score ASC;"}
{"input": " 500\uac1c \uc774\uc0c1\uc758 \uc800\ub834\ud55c \uc8fc\ud0dd\uc774 \uc788\ub294 \uce98\ub9ac\ud3ec\ub2c8\uc544\uc8fc \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54\uc758 \ub3c5\ud2b9\ud55c \ub3d9\ub124 \uc774\ub984\uc744 \ub098\uc5f4\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE affordable_housing (id INT, city VARCHAR(255), neighborhood VARCHAR(255), units INT); INSERT INTO affordable_housing (id, city, neighborhood, units) VALUES (1, 'San Francisco', 'Mission', 600), (2, 'San Francisco', 'SoMa', 700), (3, 'San Francisco', 'Richmond', 400);", "output": "SELECT DISTINCT neighborhood FROM affordable_housing WHERE city = 'San Francisco' AND units > 500;"}
{"input": " 2022\ub144 \ud654\ud559 \ubd84\uc57c\uc5d0\uc11c \uc0dd\uc0b0\ub41c \ud654\ud559 \ubb3c\uc9c8\uc758 \ucd1d \uc911\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \uc81c\uc870\uc5c5\uccb4\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE chemicals_by_year (manufacturer_id INT, manufacturer_name VARCHAR(50), year INT, weight FLOAT); INSERT INTO chemicals_by_year (manufacturer_id, manufacturer_name, year, weight) VALUES (1, 'ChemCo Mexico', 2022, 450.5), (2, 'Canadian Chemicals', 2022, 500.3), (3, 'Brazilian BioChem', 2022, 300.7), (4, 'Indian Innovative Chemicals', 2022, 600.5), (5, 'Chinese Chemicals Corp', 2022, 400.9);", "output": "SELECT manufacturer_id, manufacturer_name, SUM(weight) as total_weight FROM chemicals_by_year WHERE year = 2022 GROUP BY manufacturer_id, manufacturer_name ORDER BY total_weight DESC LIMIT 2;"}
{"input": " \uad11\ubb3c\ub2f9 \ud3c9\uade0 \ud658\uacbd \uc601\ud5a5 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE environmental_impact (mineral TEXT, impact_score DECIMAL); INSERT INTO environmental_impact (mineral, impact_score) VALUES ('Coal', 19.5), ('Uranium', 21.3), ('Lithium', 15.9), ('Nickel', 13.1), ('Cobalt', 17.8);", "output": "SELECT mineral, AVG(impact_score) FROM environmental_impact GROUP BY mineral;"}
{"input": " \uc544\uc2dc\uc544\uc5d0\uc11c \ud3c9\ud654\uc720\uc9c0 \ud65c\ub3d9\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc608\uc0b0\uc744 \ud560\ub2f9\ud55c \uc0c1\uc704 3\uac1c \uad6d\uac00\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE peacekeeping_operations (country VARCHAR(50), budget INT); INSERT INTO peacekeeping_operations (country, budget) VALUES ('China', 5000000), ('India', 4000000), ('Japan', 3500000), ('Indonesia', 2000000), ('Pakistan', 2500000);", "output": "SELECT ROW_NUMBER() OVER (ORDER BY budget DESC) AS rank, country, budget FROM peacekeeping_operations WHERE country IN ('China', 'India', 'Japan', 'Indonesia', 'Pakistan') GROUP BY country HAVING rank <= 3;"}
{"input": " \uad6d\uac00\ubcc4 \ubcf4\uc548 \uc0ac\uace0 \ud574\uacb0\uc5d0 \uc18c\uc694\ub418\ub294 \ud3c9\uade0 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE incident_resolution (id INT, country VARCHAR(50), resolution_time INT); INSERT INTO incident_resolution (id, country, resolution_time) VALUES (1, 'USA', 120), (2, 'Canada', 150), (3, 'Mexico', 180);", "output": "SELECT country, AVG(resolution_time) as avg_resolution_time FROM incident_resolution GROUP BY country;"}
{"input": "\uc0c8\ub85c\uc6b4 \uc885\uc758 \ubc1c\uacac\uc73c\ub85c \uc774\uc5b4\uc9c4 \ubaa8\ub4e0 \uc2ec\ud574 \ud0d0\ud5d8\uacfc \ud574\ub2f9 \ud0d0\ud5d8 \ub0a0\uc9dc\ub97c \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE deep_sea_expeditions (expedition_name VARCHAR(255), discovered_species INT, expedition_date DATE); INSERT INTO deep_sea_expeditions (expedition_name, discovered_species, expedition_date) VALUES ('Challenger Expedition', 471, '1872-12-07'), ('Galathea Expedition', 1300, '1845-07-24'), ('HMS Challenger Expedition', 4500, '1873-12-23');", "output": "SELECT expedition_name, discovered_species, expedition_date FROM deep_sea_expeditions WHERE discovered_species > 0;"}
{"input": "\uc9c0\ub09c 5\ub144\uac04 \uc81c\uc870\ub41c \uad70\uc6a9 \ucc28\ub7c9\uc758 \ucd1d \ub300\uc218\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE military_vehicles (id INT, manufacturer VARCHAR(50), year INT, quantity INT); INSERT INTO military_vehicles (id, manufacturer, year, quantity) VALUES (1, 'ABC Corp', 2015, 500); INSERT INTO military_vehicles (id, manufacturer, year, quantity) VALUES (2, 'XYZ Inc', 2018, 800);", "output": "SELECT SUM(quantity) FROM military_vehicles WHERE year >= (SELECT YEAR(CURRENT_DATE) - 5);"}
{"input": " \ud658\uc790\ub2f9 \uc815\uc2e0 \uac74\uac15 \ubc29\ubb38 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE MentalHealthParity (PatientID int, MentalHealthVisits int); INSERT INTO MentalHealthParity (PatientID, MentalHealthVisits) VALUES (1, 5), (2, 3), (3, 6), (4, 4), (5, 8), (6, 7), (7, 6);", "output": "SELECT PatientID, MentalHealthVisits, 100.0 * MentalHealthVisits / SUM(MentalHealthVisits) OVER () AS Percentage, ROW_NUMBER() OVER (ORDER BY 100.0 * MentalHealthVisits / SUM(MentalHealthVisits) OVER () DESC) AS Rank FROM MentalHealthParity;"}
{"input": " \ud68c\uc6d0 \uc218\uac00 300\uba85 \ubbf8\ub9cc\uc778 \ub178\ub3d9\uc870\ud569\uc744 \uc81c\uc678\ud558\uace0 \ud14d\uc0ac\uc2a4\uc758 \ubaa8\ub4e0 \ub178\ub3d9\uc870\ud569\uacfc \uadf8 \uc870\ud569\uc6d0\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE union_details_tx (id INT, union_name TEXT, members INT); INSERT INTO union_details_tx (id, union_name, members) VALUES (1, 'Union A', 400), (2, 'Union B', 200), (3, 'Union C', 350);", "output": "SELECT union_name, members FROM union_details_tx WHERE members >= 300 AND state = 'Texas';"}
{"input": " \uac01 \uac8c\uc784\uc5d0\uc11c \ub192\uc740 \uc810\uc218\ub97c \ub2ec\uc131\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \uc218\uc640 \ub192\uc740 \uc810\uc218\ub97c \ub2ec\uc131\ud55c \ud50c\ub808\uc774\uc5b4\uc758 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uc5ec \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE player_scores (player_id INT, game_id INT, score INT); INSERT INTO player_scores (player_id, game_id, score) VALUES (1, 1, 1000), (2, 1, 1000), (3, 1, 500), (4, 2, 200), (5, 2, 200), (6, 2, 150); CREATE TABLE games (id INT, name VARCHAR(255)); INSERT INTO games (id, name) VALUES (1, 'Game1'), (2, 'Game2');", "output": "SELECT g.name, COUNT(DISTINCT player_id) as num_players, COUNT(DISTINCT player_id) * 100.0 / (SELECT COUNT(DISTINCT player_id) FROM player_scores) as percentage FROM player_scores ps JOIN games g ON ps.game_id = g.id GROUP BY ps.game_id HAVING ps.score = (SELECT MAX(score) FROM player_scores ps2 WHERE ps2.game_id = ps.game_id) ORDER BY percentage DESC;"}
{"input": " \uac01 \ub514\uc9c0\ud138 \uc790\uc0b0\uc758 \uac00\uc7a5 \ucd5c\uadfc \uac70\ub798 \ub0a0\uc9dc\ub97c \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE transactions (tx_id INT, asset_id INT, transaction_date DATE); CREATE TABLE digital_assets (asset_id INT, name VARCHAR(255));", "output": "SELECT asset_id, name, MAX(transaction_date) OVER (PARTITION BY asset_id) as recent_transaction_date FROM transactions t JOIN digital_assets d ON t.asset_id = d.asset_id;"}
{"input": " \uc5b4\uc120\uacfc \ud654\ubb3c\uc120\uc758 \ud3c9\uade0 \ud56d\ud574 \uae30\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE FishingVessels (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), length FLOAT, weight INT); CREATE TABLE CargoShips (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), length FLOAT, weight INT); CREATE TABLE Voyages (id INT PRIMARY KEY, vessel_id INT, departure_port VARCHAR(255), arrival_port VARCHAR(255), departure_date DATE, arrival_date DATE);", "output": "SELECT v.type, AVG(DATEDIFF(voyages.arrival_date, voyages.departure_date)) as avg_duration FROM (SELECT * FROM FishingVessels UNION ALL SELECT * FROM CargoShips) as v INNER JOIN Voyages ON v.id = Voyages.vessel_id WHERE v.type IN ('Fishing Vessel', 'Cargo Ship') GROUP BY v.type;"}
{"input": " \uac01 \uc9c0\uc5ed\uc5d0\uc11c \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE mobile_subscribers (subscriber_id INT, name VARCHAR(50), data_usage_gb FLOAT, region VARCHAR(50)); INSERT INTO mobile_subscribers (subscriber_id, name, data_usage_gb, region) VALUES (1, 'John Doe', 25.6, 'San Francisco'), (2, 'Jane Smith', 30.9, 'San Francisco'), (3, 'Alice Johnson', 40.5, 'New York'), (4, 'Bob Brown', 35.7, 'New York');", "output": "SELECT region, subscriber_id, name, data_usage_gb, NTILE(5) OVER (PARTITION BY region ORDER BY data_usage_gb DESC) as tier FROM mobile_subscribers ORDER BY region, tier;"}
{"input": " \uc5d1\uc2a8\ubaa8\ube4c\uc774 \ubd81\ud574\uc5d0 \uc2dc\ucd94\ud55c \uc720\uc815\uc758 \ucd1d \uac1c\uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE wells (well_id INT, company VARCHAR(255), region VARCHAR(255)); INSERT INTO wells (well_id, company, region) VALUES (1, 'ExxonMobil', 'North Sea'); INSERT INTO wells (well_id, company, region) VALUES (2, 'ExxonMobil', 'Gulf of Mexico');", "output": "SELECT COUNT(*) FROM wells WHERE company = 'ExxonMobil' AND region = 'North Sea';"}
{"input": " \uc608\uc0b0\uc774 $3,000,000 \ubbf8\ub9cc\uc778 \ud504\ub85c\uc81d\ud2b8\ub97c \uc81c\uc678\ud558\uace0 \uac1c\ubc1c\ub3c4\uc0c1\uad6d\uc73c\ub85c\ubd80\ud130 \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 2021\ub144 \uc801\uc751 \ud504\ub85c\uc81d\ud2b8 \uc0c1\uc704 2\uac1c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE climate_adaptation (year INT, project VARCHAR(20), donor VARCHAR(20), budget FLOAT); INSERT INTO climate_adaptation (year, project, donor, budget) VALUES (2021, 'ProjectA', 'Brazil', 4000000), (2021, 'ProjectB', 'India', 5000000), (2021, 'ProjectC', 'South Africa', 2500000), (2021, 'ProjectD', 'China', 3500000), (2021, 'ProjectE', 'Indonesia', 6000000), (2021, 'ProjectF', 'Mexico', 2000000), (2021, 'ProjectG', 'Argentina', 3000000);", "output": "SELECT project, budget FROM climate_adaptation WHERE year = 2021 AND donor NOT IN ('USA', 'Germany', 'France', 'UK', 'Japan') AND budget >= 3000000 GROUP BY project ORDER BY budget DESC LIMIT 2;"}
{"input": " \ub808\ub4dc \ub77c\uc778\uc758 \uac01 \uc5ed\uc5d0\uc11c \uc2dc\uc791\ud558\uace0 \uc885\ub8cc\ub41c \uc774\ub3d9 \ud69f\uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE stations (station_id INT, station_name VARCHAR(255), line VARCHAR(255));CREATE TABLE trips (trip_id INT, start_station_id INT, end_station_id INT); INSERT INTO stations (station_id, station_name, line) VALUES (1, 'Alewife', 'Red Line'), (2, 'Porter', 'Red Line'), (3, 'Downtown Crossing', 'Red Line'); INSERT INTO trips (trip_id, start_station_id, end_station_id) VALUES (1, 1, 3), (2, 2, 1), (3, 3, 2);", "output": "SELECT s.station_name, COUNT(t.trip_id) as trips FROM trips t JOIN stations s ON t.start_station_id = s.station_id JOIN stations s2 ON t.end_station_id = s2.station_id WHERE s.line = 'Red Line' AND s2.line = 'Red Line' GROUP BY s.station_name;"}
{"input": " \uac01 \uc8fc\uc758 \ub18d\ucd0c \uc9c0\uc5ed\uc5d0\uc11c \uc554 \uc9c4\ub2e8\uc744 \ubc1b\uc740 \ud658\uc790\uc758 \ucd1d \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE patient (patient_id INT, age INT, gender TEXT, diagnosis TEXT, state TEXT, location TEXT);", "output": "SELECT state, SUM(CASE WHEN diagnosis = 'Cancer' THEN 1 ELSE 0 END) FROM patient WHERE location LIKE '%rural%' GROUP BY state;"}
{"input": " \uc601\uad6d\uc758 \uc804\uae30 \uc790\ub3d9\ucc28 \ucda9\uc804\uc18c \ud3c9\uade0 \uc124\uce58 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ev_charging_stations (id INT, station_type VARCHAR(50), installation_cost FLOAT, country VARCHAR(50)); INSERT INTO ev_charging_stations (id, station_type, installation_cost, country) VALUES (1, 'Level 1', 1200, 'USA'), (2, 'Level 2', 2500, 'UK'), (3, 'DC Fast Charger', 40000, 'Japan'), (4, 'Tesla Supercharger', 50000, 'USA');", "output": "SELECT AVG(installation_cost) FROM ev_charging_stations WHERE country = 'UK';"}
{"input": " \uad6d\uac00\ubcc4\ub85c \ubc1c\ub839\ub41c \uc5ec\ud589 \uc8fc\uc758\ubcf4\uc758 \ube44\uc728\uc744 \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE travel_advisories (country VARCHAR(50), advisory_type VARCHAR(50)); INSERT INTO travel_advisories (country, advisory_type) VALUES ('Mexico', 'Caution'), ('Brazil', 'Caution'), ('Egypt', 'Avoid'), ('India', 'Caution'), ('Thailand', 'Caution'), ('Colombia', 'Avoid');", "output": "SELECT country, PERCENT_RANK() OVER (ORDER BY COUNT(*) DESC) as pct FROM travel_advisories WHERE advisory_type = 'Caution' GROUP BY country;"}
{"input": " \uc790\ud3d0\ud559\uc0dd\ub4e4\uc740 \uc5b4\ub5a4 \uc9c0\uc6d0 \ud504\ub85c\uadf8\ub7a8\uc744 \ud65c\uc6a9\ud558\uace0 \uc788\ub098\uc694?", "context": "CREATE TABLE SupportPrograms (ProgramID INT, ProgramName VARCHAR(50), ProgramType VARCHAR(50)); INSERT INTO SupportPrograms VALUES (1, 'Social Skills Group', 'Social Skills'); CREATE TABLE StudentDisabilities (StudentID INT, DisabilityType VARCHAR(50)); INSERT INTO StudentDisabilities VALUES (1, 'Autism'); CREATE TABLE StudentPrograms (StudentID INT, ProgramID INT); INSERT INTO StudentPrograms VALUES (1, 1);", "output": "SELECT sp.ProgramName, sp.ProgramType FROM SupportPrograms sp INNER JOIN StudentPrograms spj ON sp.ProgramID = spj.ProgramID INNER JOIN StudentDisabilities sd ON spj.StudentID = sd.StudentID WHERE sd.DisabilityType = 'Autism';"}
{"input": " \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc758 \ubaa8\ubc14\uc77c \ubc0f \uad11\ub300\uc5ed \uac00\uc785\uc790 \uc218 \ud45c\uc2dc", "context": "CREATE TABLE africa_subscribers (subscriber_id INT, subscriber_type VARCHAR(10), country VARCHAR(10));", "output": "SELECT subscriber_type, COUNT(*), country FROM africa_subscribers GROUP BY subscriber_type, country;"}
{"input": " \uc544\ud504\ub9ac\uce74 \ubb38\ud654\uc720\uc0b0 \ud22c\uc5b4\uc758 \uc77c\uc77c \uc218\uc775 \ucd94\uc138\ub294 \uc5b4\ub5bb\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE revenue_trend (date TEXT, region TEXT, revenue FLOAT); INSERT INTO revenue_trend (date, region, revenue) VALUES ('2021-01-01', 'Africa', 1000), ('2021-01-02', 'Africa', 1500), ('2021-01-03', 'Africa', 1200), ('2021-01-04', 'Africa', 1700), ('2021-01-05', 'Africa', 2000);", "output": "SELECT date, revenue, LAG(revenue, 1) OVER (ORDER BY date) AS previous_day_revenue FROM revenue_trend WHERE region = 'Africa';"}
{"input": " \uc9c0\ub09c 7\uc77c\uac04 \uc77c\uc77c \uc218\uc775\uc758 \uc774\ub3d9 \ud3c9\uade0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE daily_revenue(date DATE, revenue INT); INSERT INTO daily_revenue VALUES ('2022-01-01', 1000), ('2022-01-02', 1200), ('2022-01-03', 1100), ('2022-01-04', 1300), ('2022-01-05', 1500), ('2022-01-06', 1600), ('2022-01-07', 1700);", "output": "SELECT date, AVG(revenue) OVER (ORDER BY date ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS moving_avg FROM daily_revenue WHERE date >= CURRENT_DATE - INTERVAL '7 days' ORDER BY date;"}
{"input": " \uc9c0\ub09c 1\ub144 \ub3d9\uc548 \uc5f0\uadf9 \ud589\uc0ac\uc5d0 \ucc38\uac00\ud55c \uac1c\ubcc4 \uad6d\uac00\uc758 \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE theater_events (id INT, event_id INT, participant_id INT, country VARCHAR(50));", "output": "SELECT COUNT(DISTINCT country) FROM theater_events WHERE event_date >= '2021-01-01';"}
{"input": " \uac01 \uad11\uc0b0\ubcc4\ub85c \ucc44\uad74\ub41c \uc11d\ud0c4\uacfc \ucca0\uc758 \ucd1d\ub7c9\uc758 \ucc28\uc774\ub97c \uad6c\ud574 \ubcf4\uc138\uc694.", "context": "CREATE TABLE mine (id INT, name VARCHAR(50), location VARCHAR(50));CREATE TABLE coal_mine (mine_id INT, amount INT);CREATE TABLE iron_mine (mine_id INT, amount INT);", "output": "SELECT m.name, m.location, SUM(c.amount) - SUM(i.amount) AS difference FROM mine m LEFT JOIN coal_mine c ON m.id = c.mine_id LEFT JOIN iron_mine i ON m.id = i.mine_id GROUP BY m.id, m.name, m.location;"}
{"input": " \ub300\uc11c\uc591\uc774\ub098 \uc778\ub3c4\uc591 \uc911 \ud558\ub098\uc5d0\uc11c \ubc1c\uacac\ub418\uc9c0\ub9cc \ub458 \ub2e4\uc5d0\uc11c\ub294 \ubc1c\uacac\ub418\uc9c0 \uc54a\ub294 \ud574\uc591 \uc0dd\ubb3c\uc885\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE marine_species (id INT, name VARCHAR(50), Atlantic BOOLEAN, Indian BOOLEAN, Arctic BOOLEAN); INSERT INTO marine_species (id, name, Atlantic, Indian, Arctic) VALUES (1, 'Species1', TRUE, TRUE, FALSE), (2, 'Species2', TRUE, FALSE, TRUE), (3, 'Species3', FALSE, TRUE, FALSE);", "output": "SELECT name FROM marine_species WHERE Atlantic = TRUE AND Indian = FALSE UNION SELECT name FROM marine_species WHERE Atlantic = FALSE AND Indian = TRUE;"}
{"input": " \uc9c0\ub09c \uc8fc \uc544\uce68 \uc6b4\ub3d9 \uc911 \uc0ac\uc6a9\uc790\uc758 \ud3c9\uade0 \uc2ec\ubc15\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workouts (id INT, user_id INT, workout_time TIMESTAMP, heart_rate INT); INSERT INTO workouts (id, user_id, workout_time, heart_rate) VALUES (1, 1, '2022-01-01 06:00:00', 120), (2, 2, '2022-01-02 07:30:00', 115);", "output": "SELECT AVG(heart_rate) FROM (SELECT heart_rate FROM workouts WHERE DATE(workout_time) BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) AND CURRENT_DATE() AND HOUR(workout_time) BETWEEN 6 AND 11) AS subquery;"}
{"input": " 'RPG' \uac8c\uc784 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uc5f0\uc18d \ud50c\ub808\uc774\uc5b4 \uac04 \uc810\uc218 \ucc28\uc774\ub97c \uc810\uc218\uc21c\uc73c\ub85c \ub098\uc5f4\ud558\uba74 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE RPGScores (PlayerID int, PlayerName varchar(50), Game varchar(50), Score int); INSERT INTO RPGScores (PlayerID, PlayerName, Game, Score) VALUES (1, 'Player1', 'Game2', 1000), (2, 'Player2', 'Game2', 1200), (3, 'Player3', 'Game2', 1400), (4, 'Player4', 'Game2', 1600);", "output": "SELECT Game, Score, LEAD(Score) OVER (PARTITION BY Game ORDER BY Score) as NextScore, LEAD(Score) OVER (PARTITION BY Game ORDER BY Score) - Score as ScoreDifference FROM RPGScores WHERE Game = 'Game2' ORDER BY Score;"}
{"input": " \ud2b9\uc815 \uc81c\uc870\uc5c5\uccb4\ub97c \uc81c\uc678\ud558\uace0 \ub2e8\uc885\ub41c \uc758\ub958\uc640 \ucc45\uc784 \uc81c\uc870\uc5c5\uccb4\ub97c \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Garments (GarmentID INT, GarmentName VARCHAR(50));CREATE TABLE Manufacturers (ManufacturerID INT, ManufacturerName VARCHAR(50));CREATE TABLE DiscontinuedGarments (GarmentID INT, ManufacturerID INT, DiscontinuedDate DATE);", "output": "SELECT G.GarmentName, M.ManufacturerName FROM Garments G JOIN DiscontinuedGarments DG ON G.GarmentID = DG.GarmentID JOIN Manufacturers M ON DG.ManufacturerID = M.ManufacturerID WHERE M.ManufacturerName != 'GreenThreads';"}
{"input": " \uc5f0\ub3c4\ubcc4\ub85c \uad6c\ubd84\ud558\uace0 \uc81c\ud488\uba85\ubcc4\ub85c \uc815\ub82c\ud55c \uacf5\uc815\ubb34\uc5ed \uc81c\ud488\uc758 \uc81c\ud488\ub2f9 \ud3c9\uade0 \uc218\uc775\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE Sales (SaleID INT, ProductID INT, ProductName VARCHAR(50), ProductCategory VARCHAR(50), IsFairTrade INT, Year INT, Revenue INT); INSERT INTO Sales VALUES (1, 1, 'ProductA', 'CategoryA', 1, 2020, 1000), (2, 2, 'ProductB', 'CategoryB', 0, 2021, 1500);", "output": "SELECT ProductName, SUM(Revenue) / SUM(CASE WHEN IsFairTrade = 1 THEN 1 ELSE 0 END) OVER (PARTITION BY Year ORDER BY ProductName) AS AvgRevenuePerProduct FROM Sales WHERE IsFairTrade = 1;"}
{"input": "\uc804\uad6d \ud3c9\uade0\uacfc \ube44\uad50\ud558\uc5ec \ud14d\uc0ac\uc2a4\uc5d0\uc11c HPV \ubc31\uc2e0\uc744 \uc811\uc885\ud55c \uc5ec\uc131\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE vaccine_administration (patient_id INT, vaccine TEXT, gender TEXT, state TEXT); INSERT INTO vaccine_administration (patient_id, vaccine, gender, state) VALUES (1, 'HPV', 'Female', 'Texas'); INSERT INTO vaccine_administration (patient_id, vaccine, gender, state) VALUES (2, 'HPV', 'Male', 'California');", "output": "SELECT (COUNT(*) FILTER (WHERE state = 'Texas')) * 100.0 / (SELECT COUNT(*) FROM vaccine_administration WHERE vaccine = 'HPV' AND gender = 'Female') AS percentage FROM vaccine_administration WHERE vaccine = 'HPV' AND gender = 'Female';"}
{"input": " \uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uc5d0\ub108\uc9c0 \uc18c\ube44\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 3\uac1c \uacf5\uc7a5\uc758 \ud654\ud559\uc81c\ud488 \uc81c\uc870\uc5d0 \ub300\ud55c \ucd1d \uc5d0\ub108\uc9c0 \uc18c\ube44\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE plants (id INT, name VARCHAR(255), region VARCHAR(255), energy_consumption FLOAT);", "output": "SELECT SUM(energy_consumption) as total_energy FROM (SELECT plants.name as plant, SUM(energy_consumption) as energy_consumption FROM plants WHERE region = 'Asia Pacific' GROUP BY plants.name ORDER BY energy_consumption DESC LIMIT 3) as subquery;"}
{"input": " 2021\ub144 \uc790\uc6d0\ubd09\uc0ac\uc790 1\uc778\ub2f9 \ud3c9\uade0 \uc790\uc6d0\ubd09\uc0ac \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VolunteerHours (VolunteerID INT, Hours INT, VolunteerDate DATE); INSERT INTO VolunteerHours VALUES (1, 4, '2021-01-01'), (1, 6, '2021-02-01'), (2, 8, '2021-03-01');", "output": "SELECT AVG(Hours) FROM VolunteerHours WHERE YEAR(VolunteerDate) = 2021;"}
{"input": " Spotify\uc5d0\uc11c \uc77c\ubcf8 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ub178\ub798 \uc2a4\ud2b8\ub9ac\ubc0d \uc218\ub294 \ucd1d \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Artists (ArtistID INT, ArtistName VARCHAR(100), Country VARCHAR(50)); INSERT INTO Artists (ArtistID, ArtistName, Country) VALUES (3, 'Utada Hikaru', 'Japan'); CREATE TABLE StreamingPlatforms (PlatformID INT, PlatformName VARCHAR(50)); INSERT INTO StreamingPlatforms (PlatformID, PlatformName) VALUES (1, 'Spotify'), (2, 'Apple Music'); CREATE TABLE SongsStreams (SongID INT, ArtistID INT, PlatformID INT, StreamCount INT); INSERT INTO SongsStreams (SongID, ArtistID, PlatformID, StreamCount) VALUES (4, 3, 1, 5000000);", "output": "SELECT SUM(StreamCount) FROM SongsStreams ss JOIN Artists a ON ss.ArtistID = a.ArtistID JOIN StreamingPlatforms sp ON ss.PlatformID = sp.PlatformID WHERE a.Country = 'Japan' AND sp.PlatformName = 'Spotify';"}
{"input": " \uac01 \uad6d\uac00\uc5d0\uc11c \uba87 \uba85\uc758 \uad00\uad11\uac1d\uc774 \uc9c0\uc18d \uac00\ub2a5\ud55c \ubaa9\uc801\uc9c0\ub97c \ubc29\ubb38\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Sustainable_Destinations (id INT, destination_name VARCHAR(50), sustainable BOOLEAN); CREATE TABLE Tourists_Destinations (tourist_id INT, destination_id INT, visit_date DATE); INSERT INTO Sustainable_Destinations VALUES (1, 'Eco Village', true); INSERT INTO Sustainable_Destinations VALUES (2, 'Green City', true); INSERT INTO Tourists_Destinations VALUES (1, 1, '2022-01-01'); INSERT INTO Tourists_Destinations VALUES (2, 2, '2022-01-02'); INSERT INTO Tourists_Destinations VALUES (3, 1, '2022-01-03');", "output": "SELECT Tourists.nationality, COUNT(DISTINCT Tourists_Destinations.tourist_id) AS num_tourists FROM Tourists_Destinations INNER JOIN Tourists ON Tourists_Destinations.tourist_id = Tourists.id INNER JOIN Sustainable_Destinations ON Tourists_Destinations.destination_id = Sustainable_Destinations.id WHERE Sustainable_Destinations.sustainable = true GROUP BY Tourists.nationality;"}
{"input": " \uc9c0\ub09c 30\uc77c \ub3d9\uc548 \uac00\uc7a5 \ub192\uc740 \uac70\ub798\ub97c \ud55c \uace0\uac1d\uc758 client_id\uc640 \uc774\ub984\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE transactions (transaction_id INT, client_id INT, transaction_amount DECIMAL(10,2), transaction_date DATE); INSERT INTO transactions VALUES (1, 1, 50000.00, '2022-01-01'), (2, 2, 70000.00, '2022-02-10'), (3, 3, 30000.00, '2022-03-05'), (4, 1, 100000.00, '2022-04-15');", "output": "SELECT client_id, name, transaction_amount FROM (SELECT client_id, name, transaction_amount, ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY transaction_amount DESC) as rn FROM transactions t JOIN clients c ON t.client_id = c.client_id WHERE transaction_date >= CURDATE() - INTERVAL 30 DAY) t WHERE rn = 1;"}
{"input": " \ucc44\uc6a9 \uad00\ub9ac\uc790\uac00 \uc18c\uc218 \uc778\uc885 \ub610\ub294 \ubbfc\uc871 \uadf8\ub8f9\uc758 \uad6c\uc131\uc6d0\uc73c\ub85c \ud655\uc778\ub41c \ud6c4\ubcf4\uc790\uc5d0\uac8c \ucc44\uc6a9 \uc81c\uc548\uc744 \ud55c \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE JobOffers2 (OfferID INT, HiringManager VARCHAR(50), CandidateRaceEthnicity VARCHAR(50), DateOffered DATE);", "output": "SELECT HiringManager, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM JobOffers2 WHERE CandidateRaceEthnicity NOT IN ('White', 'Asian')) as Percentage_Underrepresented FROM JobOffers2 WHERE CandidateRaceEthnicity NOT IN ('White', 'Asian') GROUP BY HiringManager;"}
{"input": " \ud2b9\uc815 \uc11c\ubc84\uc5d0 \ub300\ud574 \ub2e8\uc77c \uc2dc\uac04\uc5d0 \uc804\uc1a1\ub418\ub294 \ucd5c\ub300 \ubc14\uc774\ud2b8 \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE network_traffic (id INT, time TIME, server VARCHAR(255), bytes INT); INSERT INTO network_traffic (id, time, server, bytes) VALUES (1, '01:00:00', 'ServerA', 1000), (2, '02:00:00', 'ServerB', 2000), (3, '03:00:00', 'ServerA', 1500), (4, '04:00:00', 'ServerC', 500), (5, '05:00:00', 'ServerB', 2500), (6, '06:00:00', 'ServerA', 3000);", "output": "SELECT server, MAX(hourly_bytes) as max_hourly_bytes FROM (SELECT server, TIME_FORMAT(time, '%H') as hour, SUM(bytes) as hourly_bytes FROM network_traffic GROUP BY server, hour) as subquery GROUP BY server;"}
{"input": " \ubbf8\uad6d\uc758 \uc791\ubb3c \uc720\ud615\ubcc4 \ud3c9\uade0 \ubb3c \uc0ac\uc6a9\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE crops (id INT, name TEXT, water_requirement INT); INSERT INTO crops (id, name, water_requirement) VALUES (1, 'Corn', 500), (2, 'Soybeans', 300);", "output": "SELECT crops.name, AVG(irrigation.irrigation_amount) FROM crops JOIN irrigation ON crops.id = irrigation.farm_id JOIN farms ON irrigation.farm_id = farms.id JOIN provinces ON farms.id = provinces.id WHERE provinces.country = 'United States' GROUP BY crops.name;"}
{"input": " \uc778\uad6c 500,000\uba85 \uc774\uc0c1\uc774\uba70 \uc7ac\ud65c\uc6a9\ub960\uc774 \uc804\uad6d \ud3c9\uade0\ubcf4\ub2e4 \ub192\uc740 \ubaa8\ub4e0 \ub3c4\uc2dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE cities (name VARCHAR(255), state VARCHAR(255), population DECIMAL(10,2), recycling_rate DECIMAL(5,2)); INSERT INTO cities (name, state, population, recycling_rate) VALUES ('Los Angeles', 'California', 3971883, 76.9), ('New York', 'New York', 8550405, 21.1), ('Chicago', 'Illinois', 2693976, 9.5);", "output": "SELECT name FROM cities WHERE population > 500000 AND recycling_rate > (SELECT AVG(recycling_rate) FROM cities);"}
{"input": " \ub274\uc9c8\ub79c\ub4dc\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uc219\uc18c\ub97c \uc120\ud638\ud558\ub294 \uc624\uc138\uc544\ub2c8\uc544 \ubaa8\ud5d8 \uad00\uad11\uac1d\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE NZAdventureTourists (visitor INT, region VARCHAR(255), eco_friendly_accommodation BOOLEAN); INSERT INTO NZAdventureTourists (visitor, region, eco_friendly_accommodation) VALUES (900000, 'Oceania', true), (1000000, 'Oceania', false);", "output": "SELECT (SUM(eco_friendly_accommodation) * 100.0 / COUNT(*)) AS pct_eco_friendly FROM NZAdventureTourists WHERE region = 'Oceania';"}
{"input": " \uc911\ub3d9 \ubc0f \ubd81\uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed \uc870\uc9c1\uc774 \uc811\uc218\ud55c AI \uc724\ub9ac \ubd88\ub9cc \uc0ac\ud56d\uc758 \ucd5c\ub300 \uac74\uc218\ub294 \uc5bc\ub9c8\uc774\uba70, \uc5b4\ub5a4 \uc870\uc9c1\uc774 \uc811\uc218\ud588\ub098\uc694?", "context": "CREATE TABLE ai_ethics_complaints (organization VARCHAR(255), region VARCHAR(255), year INT, num_complaints INT); INSERT INTO ai_ethics_complaints (organization, region, year, num_complaints) VALUES ('Organization A', 'Saudi Arabia', 2018, 20), ('Organization B', 'United Arab Emirates', 2019, 25), ('Organization C', 'Egypt', 2020, 30);", "output": "SELECT MAX(num_complaints) as max_complaints, organization FROM ai_ethics_complaints WHERE region = 'Middle East and North Africa' GROUP BY organization HAVING max_complaints = (SELECT MAX(num_complaints) FROM ai_ethics_complaints WHERE region = 'Middle East and North Africa');"}
{"input": " 'rural_development' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \ub18d\ubbfc, \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8, \uc9c0\uc5ed\uc0ac\ud68c \uac1c\ubc1c \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \uc218\ub294 \uc9c0\uc5ed\ubcc4, \uc5f0\ub3c4\ubcc4\ub85c \uadf8\ub8f9\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE farmers (id INT, name TEXT, region TEXT, year INT);CREATE TABLE infrastructure (id INT, name TEXT, region TEXT, year INT);CREATE TABLE projects (id INT, name TEXT, region TEXT, year INT);", "output": "SELECT region, year, COUNT(DISTINCT farmers.id) + COUNT(DISTINCT infrastructure.id) + COUNT(DISTINCT projects.id) FROM farmers FULL OUTER JOIN infrastructure ON farmers.region = infrastructure.region AND farmers.year = infrastructure.year FULL OUTER JOIN projects ON farmers.region = projects.region AND farmers.year = projects.year GROUP BY region, year;"}
{"input": " \uac01 \ub3c4\uc2dc\uc5d0\uc11c \uc6d4\ud3c9\uade0 \ub370\uc774\ud130 \uc0ac\uc6a9\ub7c9\ubcf4\ub2e4 \ub354 \ub9ce\uc774 \uc0ac\uc6a9\ud55c \ubaa8\ubc14\uc77c \uac00\uc785\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE subscribers(id INT, city VARCHAR(20), monthly_data_usage DECIMAL(5,2)); INSERT INTO subscribers(id, city, monthly_data_usage) VALUES (1, 'New York', 3.5), (2, 'New York', 4.2), (3, 'Chicago', 3.8), (4, 'Chicago', 2.5);", "output": "SELECT id, city, monthly_data_usage FROM (SELECT id, city, monthly_data_usage, AVG(monthly_data_usage) OVER(PARTITION BY city) AS avg_city_data_usage FROM subscribers) t WHERE monthly_data_usage > avg_city_data_usage;"}
{"input": "\ub3d9\ubd80' \uc9c0\uc5ed '\uae08\uc735' \uc5c5\uc885 \uadfc\ub85c\uc790\uc758 \ucd5c\uc800\uc784\uae08\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE regions (region_id INT, region_name TEXT);   CREATE TABLE workers (worker_id INT, worker_name TEXT, salary INT, region_id INT, industry_id INT);   CREATE TABLE industries (industry_id INT, industry_name TEXT);   INSERT INTO regions VALUES (1, 'North'), (2, 'South'), (3, 'East'), (4, 'West');   INSERT INTO workers VALUES (1, 'John', 50000, 1, 4), (2, 'Jane', 55000, 1, 4), (3, 'Bob', 60000, 2, 3), (4, 'Alice', 58000, 3, 3);   INSERT INTO industries VALUES (1, 'manufacturing'), (2, 'technology'), (3, 'finance'), (4, 'retail');", "output": "SELECT MIN(salary) FROM workers INNER JOIN regions ON workers.region_id = regions.region_id INNER JOIN industries ON workers.industry_id = industries.industry_id WHERE regions.region_name = 'East' AND industries.industry_name = 'finance';"}
{"input": " \uac8c\uc2dc\ubb3c\uc774 10\uac1c \ubbf8\ub9cc\uc778 \uc0ac\uc6a9\uc790\ub97c \uc81c\uc678\ud558\uace0 'social_media' \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uc0ac\uc6a9\uc790\ub2f9 \ud3c9\uade0 \uac8c\uc2dc\ubb3c \uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE users (user_id INT, num_posts INT); INSERT INTO users (user_id, num_posts) VALUES (1, 15), (2, 8), (3, 22), (4, 3);", "output": "SELECT AVG(num_posts) FROM users WHERE num_posts >= 10;"}
{"input": " 2019\ub144 \uc544\uc2dc\uc544\ud0dc\ud3c9\uc591 \uc9c0\uc5ed\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uad6d\ubc29 \ud504\ub85c\uc81d\ud2b8\uac00 \uc9c0\uc5f0\ub410\ub098\uc694?", "context": "CREATE TABLE defense_projects (id INT, year INT, region VARCHAR(20), project_name VARCHAR(30), delayed BOOLEAN); INSERT INTO defense_projects (id, year, region, project_name, delayed) VALUES (1, 2019, 'Asia-Pacific', 'Project A', true); INSERT INTO defense_projects (id, year, region, project_name, delayed) VALUES (2, 2019, 'Asia-Pacific', 'Project B', false);", "output": "SELECT COUNT(*) FROM defense_projects WHERE year = 2019 AND region = 'Asia-Pacific' AND delayed = true;"}
{"input": " 2021\ub144 3\uc6d4 \ubb3c \uc18c\ube44\ub7c9\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc0c1\uc704 3\uac1c \uc8fc\uc758 \ud3c9\uade0 \ubb3c \uc18c\ube44\ub7c9\uc744 \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE water_usage (id INT, state VARCHAR(50), consumption FLOAT, date DATE); INSERT INTO water_usage (id, state, consumption, date) VALUES (1, 'California', 15000, '2021-03-01'); INSERT INTO water_usage (id, state, consumption, date) VALUES (2, 'Texas', 12000, '2021-03-02');", "output": "SELECT AVG(consumption) FROM (SELECT state, SUM(consumption) AS consumption FROM water_usage WHERE date >= '2021-03-01' AND date <= '2021-03-31' GROUP BY state ORDER BY consumption DESC LIMIT 3) AS top_states;"}
{"input": " \uad6d\uac00\ubcc4 \uc6b0\uc8fc\uc784\ubb34 \uc131\uacf5\ub960\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE SpaceMissions (id INT, country VARCHAR, mission_status VARCHAR);", "output": "SELECT country, PERCENTAGE(COUNT(*)) OVER (PARTITION BY mission_status) FROM SpaceMissions WHERE mission_status = 'successful' GROUP BY country;"}
{"input": " \uc7ac\ud65c\uc13c\ud130\uc5d0 2\ud68c \uc774\uc0c1 \uc785\uc6d0\ud55c \ub3d9\ubb3c\uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE rehabilitation_center (animal_id INT, species_id INT, admission_date DATE); INSERT INTO rehabilitation_center (animal_id, species_id, admission_date) VALUES (1, 1, '2021-01-05'), (2, 2, '2021-01-12'), (3, 3, '2021-02-18'), (4, 1, '2021-01-15');", "output": "SELECT species_id, COUNT(*) FROM rehabilitation_center GROUP BY species_id HAVING COUNT(*) > 1;"}
{"input": " \uc791\ub144\uc5d0 \uac00\uc7a5 \ub192\uc740 \ub9e4\ucd9c \uc131\uc7a5\uc744 \ubcf4\uc778 \uc724\ub9ac\uc801 \ud328\uc158 \ube0c\ub79c\ub4dc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE brand_sales (brand VARCHAR(255), year INT, revenue FLOAT); INSERT INTO brand_sales (brand, year, revenue) VALUES ('Brand A', 2019, 20000), ('Brand A', 2020, 25000), ('Brand B', 2019, 18000), ('Brand B', 2020, 23000), ('Brand C', 2019, 16000), ('Brand C', 2020, 21000);", "output": "SELECT brand, (revenue - LAG(revenue) OVER (PARTITION BY brand ORDER BY year))/ABS(LAG(revenue) OVER (PARTITION BY brand ORDER BY year)) as revenue_growth FROM brand_sales WHERE year = 2020 ORDER BY revenue_growth DESC LIMIT 3;"}
{"input": " \uc544\ub77c\ube44\uc544\ud574\uc5d0\uc11c \ud558\ub8e8\uc5d0 \uad00\ucc30\ub418\ub294 \ud574\uc591 \uc0dd\ubb3c\uc758 \ucd5c\ub300 \uc218\ub294 \uba87 \ub9c8\ub9ac\uc785\ub2c8\uae4c?", "context": "CREATE TABLE marine_species_observations (observation_id INTEGER, observation_date DATE, species_name TEXT, ocean TEXT, number_of_observations INTEGER);", "output": "SELECT MAX(number_of_observations) FROM marine_species_observations WHERE ocean = 'Arabian Sea' AND observation_date BETWEEN '2000-01-01' AND '2022-12-31' GROUP BY ocean, DATE_TRUNC('day', observation_date);"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544 \uc57d\uad6d\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc0c1\uc704 5\uac1c \ud488\uc885\uacfc \ud3c9\uade0 \uac00\uaca9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Dispensaries (id INT, name TEXT, state TEXT); INSERT INTO Dispensaries (id, name, state) VALUES (1, 'Sunset Buds', 'California'); CREATE TABLE Strains (id INT, name TEXT, price DECIMAL); INSERT INTO Strains (id, name, price) VALUES (1, 'Purple Haze', 12.50), (2, 'Blue Dream', 14.25), (3, 'Girl Scout Cookies', 15.00), (4, 'OG Kush', 16.00), (5, 'Sour Diesel', 13.75); CREATE TABLE Sales (dispensary_id INT, strain_id INT, quantity INT); INSERT INTO Sales (dispensary_id, strain_id, quantity) VALUES (1, 1, 50), (1, 2, 75), (1, 3, 60), (1, 4, 40), (1, 5, 80);", "output": "SELECT Strains.name, AVG(Strains.price) as avg_price FROM Strains JOIN Sales ON Strains.id = Sales.strain_id JOIN Dispensaries ON Sales.dispensary_id = Dispensaries.id WHERE Dispensaries.state = 'California' GROUP BY Strains.name LIMIT 5;"}
{"input": " 2016\ub144\ubd80\ud130 2018\ub144\uae4c\uc9c0 \uac00\ub098\uc640 \ub9d0\ub9ac\uc758 \ucd1d \uae08 \uc218\ucd9c\ub7c9\uacfc \uc218\uc740 \ubc30\ucd9c\ub7c9\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE ghana_gold_export (year INT, export_amount FLOAT); INSERT INTO ghana_gold_export (year, export_amount) VALUES (2016, 2000.0), (2017, 2100.0), (2018, 2200.0); CREATE TABLE mali_gold_export (year INT, export_amount FLOAT); INSERT INTO mali_gold_export (year, export_amount) VALUES (2016, 1500.0), (2017, 1600.0), (2018, 1700.0); CREATE TABLE ghana_mercury_emission (year INT, emission FLOAT); INSERT INTO ghana_mercury_emission (year, emission) VALUES (2016, 10.0), (2017, 11.0), (2018, 12.0); CREATE TABLE mali_mercury_emission (year INT, emission FLOAT); INSERT INTO mali_mercury_emission (year, emission) VALUES (2016, 8.0), (2017, 9.0), (2018, 10.0);", "output": "SELECT 'Ghana' AS country, SUM(ghana_gold_export.export_amount) AS gold_export, SUM(ghana_mercury_emission.emission) AS mercury_emission FROM ghana_gold_export INNER JOIN ghana_mercury_emission ON ghana_gold_export.year = ghana_mercury_emission.year WHERE ghana_gold_export.year BETWEEN 2016 AND 2018 UNION ALL SELECT 'Mali', SUM(mali_gold_export.export_amount), SUM(mali_mercury_emission.emission) FROM mali_gold_export INNER JOIN mali_mercury_emission ON mali_gold_export.year = mali_mercury_emission.year WHERE mali_gold_export.year BETWEEN 2016 AND 2018;"}
{"input": " \uc5f0\ucd08\ubd80\ud130 \uc5f0\ub9d0\uae4c\uc9c0 \uac01 \uc9c0\uc5ed\uc0ac\ud68c \ubcf4\uac74 \uc885\uc0ac\uc790\uc758 \uc815\uc2e0 \uac74\uac15 \ud3c9\uac00 \uc810\uc218\uc5d0 \uc5b4\ub5a4 \ubcc0\ud654\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE mental_health_parity_history (worker_id INT, score_date DATE, mental_health_parity_score INT); INSERT INTO mental_health_parity_history (worker_id, score_date, mental_health_parity_score) VALUES (1, '2022-01-01', 90), (1, '2022-12-31', 95), (2, '2022-01-01', 85), (2, '2022-12-31', 90), (3, '2022-01-01', 80), (3, '2022-12-31', 85);", "output": "SELECT worker_id, mental_health_parity_score - LAG(mental_health_parity_score) OVER (PARTITION BY worker_id ORDER BY score_date) as score_change  FROM mental_health_parity_history;"}
{"input": " \uc11d\ud0c4\uacfc \ucc9c\uc5f0\uac00\uc2a4\ub97c \uc5f0\ub8cc\uc6d0\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \ubbf8\uad6d\uc758 \ubc1c\uc804\uc18c\ub97c \ud655\uc778\ud558\uc138\uc694.", "context": "CREATE TABLE power_plant (id INT, name VARCHAR(50), fuel VARCHAR(20)); INSERT INTO power_plant (id, name, fuel) VALUES (1, 'Power Plant 1', 'Coal'), (2, 'Power Plant 2', 'Natural Gas'), (3, 'Power Plant 3', 'Coal, Natural Gas');", "output": "SELECT name FROM power_plant WHERE fuel = 'Coal' INTERSECT SELECT name FROM power_plant WHERE fuel = 'Natural Gas';"}
{"input": " \ud2b9\uc815 \uad6d\uac00\uc5d0 \uc704\uce58\ud55c \uacf5\uc7a5\uc758 \uce5c\ud658\uacbd \uc18c\uc7ac \ucd1d \uc0dd\uc0b0\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Country_Production (id INT, country VARCHAR(255), material VARCHAR(255), production_usage INT); INSERT INTO Country_Production (id, country, material, production_usage) VALUES (1, 'USA', 'Organic Cotton', 1000), (2, 'China', 'Recycled Polyester', 1500);", "output": "SELECT country, SUM(production_usage) FROM Country_Production WHERE material IN ('Organic Cotton', 'Recycled Polyester') GROUP BY country;"}
{"input": " \uad50\uc721 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\uc5ec\ud55c \uace0\uc720 \uae30\ubd80\uc790\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Donations (id INT, donor_name VARCHAR(255), contact_info VARCHAR(255), program VARCHAR(255), hours INT); INSERT INTO Donations (id, donor_name, contact_info, program, hours) VALUES (1, 'Daniel Kim', 'danielkim@example.com', 'Environmental', 20), (2, 'Elena Thompson', 'elenathompson@example.com', 'Environmental', 15), (3, 'Felipe Rodriguez', 'feliperodriguez@example.com', 'Education', 30), (4, 'Grace Lee', 'gracelee@example.com', 'Health', 20), (5, 'Hector Martinez', 'hectormartinez@example.com', 'Arts and Culture', 10), (6, 'Irene Chen', 'irenechen@example.com', 'Education', 10), (7, 'Juan Garcia', 'juangarcia@example.com', 'Education', 15);", "output": "SELECT COUNT(DISTINCT donor_name) as num_unique_donors FROM Donations WHERE program = 'Education';"}
{"input": " \uce74\uc2a4\ud53c\ud574 \uc720\uc815\uc758 \ucd5c\uc2e0 \uc2dc\ucd94 \ubcf4\uace0\uc11c \ub0a0\uc9dc, \uc720\uc815 \uc774\ub984, \uc0c1\ud0dc\ub97c \ubcf4\uace0\uc11c \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE caspian_drilling (report_id INT, well_id INT, report_date DATE, report_type VARCHAR(50), status VARCHAR(50)); INSERT INTO caspian_drilling (report_id, well_id, report_date, report_type, status) VALUES (5, 7, '2021-05-01', 'Daily', 'Completed'), (6, 7, '2021-05-02', 'Daily', 'Completed'), (7, 8, '2021-04-01', 'Monthly', 'In Progress'), (8, 8, '2021-04-30', 'Monthly', 'In Progress');", "output": "SELECT caspian_drilling.report_type, caspian_drilling.report_date, wells.well_name, caspian_drilling.status, ROW_NUMBER() OVER (PARTITION BY caspian_drilling.report_type ORDER BY caspian_drilling.report_date DESC) as row_num FROM caspian_drilling JOIN wells ON caspian_drilling.well_id = wells.well_id WHERE wells.location = 'Caspian Sea';"}
{"input": " 2018\ub144\uacfc 2019\ub144\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ub18d\ucd0c \uc778\ud504\ub77c \ud504\ub85c\uc81d\ud2b8\uac00 \uacc4\ud68d\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE rural_infrastructure (id INT, year INT, project VARCHAR(50), status VARCHAR(20)); INSERT INTO rural_infrastructure (id, year, project, status) VALUES (1, 2018, 'Road Construction', 'Planned'), (2, 2019, 'Water Supply', 'In Progress'), (3, 2020, 'Electrification', 'Completed');", "output": "SELECT COUNT(*) FROM rural_infrastructure WHERE year IN (2018, 2019) AND status = 'Planned';"}
{"input": " \ub179\uc9c0 \ube44\uc728\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 5\uac1c \uc9c0\uc5ed\uc744 \ucc3e\uc73c\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE neighborhoods (neighborhood_id INT, name VARCHAR(255), green_space_percentage FLOAT);", "output": "SELECT neighborhood_id, name, green_space_percentage FROM (SELECT neighborhood_id, name, green_space_percentage, NTILE(5) OVER (ORDER BY green_space_percentage DESC) as tile FROM neighborhoods) t WHERE tile <= 5;"}
{"input": " \ud504\ub791\uc2a4\uc640 \uc601\uad6d\uc758 \uc5d0\ub108\uc9c0 \ud6a8\uc728 \ub4f1\uae09 \ube44\uad50", "context": "CREATE TABLE country_energy_efficiency (country VARCHAR(50), rating FLOAT); INSERT INTO country_energy_efficiency (country, rating) VALUES ('Germany', 85.3), ('Sweden', 91.5), ('Norway', 94.1), ('France', 80.7), ('United Kingdom', 87.8);", "output": "SELECT country, rating FROM country_energy_efficiency WHERE country IN ('France', 'United Kingdom');"}
{"input": " 20\ud68c \uc774\uc0c1\uc758 \uc5ec\ud589\uc744 \ud1b5\ud574 \uba55\uc2dc\ucf54\uc2dc\ud2f0\uc640 \uc0c1\ud30c\uc6b8\ub8e8\uc758 \uc790\uc728\uc8fc\ud589\ucc28 \uc720\ud615\uc744 \uc54c\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE mexico_autonomous_vehicles (vehicle_id INT, type VARCHAR(20), trips INT); CREATE TABLE sao_paulo_autonomous_vehicles (vehicle_id INT, type VARCHAR(20), trips INT); INSERT INTO mexico_autonomous_vehicles (vehicle_id, type, trips) VALUES (1, 'Car', 30), (2, 'Bus', 25), (3, 'Truck', 15); INSERT INTO sao_paulo_autonomous_vehicles (vehicle_id, type, trips) VALUES (4, 'Car', 22), (5, 'Bus', 18), (6, 'Van', 28);", "output": "SELECT DISTINCT type FROM mexico_autonomous_vehicles WHERE trips > 20 UNION SELECT DISTINCT type FROM sao_paulo_autonomous_vehicles WHERE trips > 20;"}
{"input": " \uac01 \uac8c\uc784\uc5d0 \uc544\uc2dc\uc544 \uc120\uc218\ub294 \uba87 \uba85\uc778\uac00\uc694?", "context": "CREATE TABLE GamePlayers (PlayerID INT, GameID INT, PlayerCountry VARCHAR(50)); INSERT INTO GamePlayers (PlayerID, GameID, PlayerCountry) VALUES (1, 1, 'China'), (2, 2, 'Japan'), (3, 1, 'Korea');", "output": "SELECT GameID, COUNT(DISTINCT PlayerID) as PlayerCount FROM GamePlayers WHERE PlayerCountry LIKE 'Asia%' GROUP BY GameID;"}
{"input": " '\uac74\uac15' \ubd80\ubb38 \ucd5c\uace0\uc758 \uae30\ubd80\uc790\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE Donors (DonorID INT, DonorName TEXT); CREATE TABLE Donations (DonationID INT, DonorID INT, Category TEXT, Amount DECIMAL); INSERT INTO Donors (DonorID, DonorName) VALUES (1, 'John Doe'), (2, 'Jane Smith'), (3, 'Alice'); INSERT INTO Donations (DonationID, DonorID, Category, Amount) VALUES (1, 1, 'Health', 500), (2, 1, 'Education', 200), (3, 2, 'Health', 300), (4, 3, 'Arts', 100);", "output": "SELECT DonorName FROM Donors D JOIN (SELECT DonorID, SUM(Amount) AS TotalAmount FROM Donations WHERE Category = 'Health' GROUP BY DonorID) T ON D.DonorID = T.DonorID ORDER BY TotalAmount DESC LIMIT 1;"}
{"input": " \ub2e8\uc77c \ud50c\ub7ab\ud3fc\uc5d0\uc11c 15\uc2dc\uac04 \uc774\uc0c1 \ud50c\ub808\uc774\ud55c \ud50c\ub808\uc774\uc5b4\ub97c \uc2dd\ubcc4\ud558\uace0 \ucd1d \uac8c\uc784 \uc2dc\uac04\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Players (PlayerID INT, GameDuration FLOAT, Platform VARCHAR(50)); INSERT INTO Players (PlayerID, GameDuration, Platform) VALUES (1, 567.8, 'PC'), (2, 678.9, 'Console'), (3, 345.1, 'Mobile'), (4, 890.1, 'PC');", "output": "SELECT * FROM (SELECT PlayerID, Platform, SUM(GameDuration) AS TotalGameDuration, RANK() OVER (ORDER BY SUM(GameDuration) DESC) AS PlayerRank FROM Players GROUP BY PlayerID, Platform) AS PlayerGameTime WHERE PlayerRank <= 2;"}
{"input": " CBT\uc640 \uc57d\ubb3c\uc744 \ubcd1\uc6a9\ud558\uc5ec \uce58\ub8cc\ubc1b\uc740 \ucd1d \ud658\uc790 \uc218\ub97c \uad6c\ud558\uc2ed\uc2dc\uc624.", "context": "CREATE TABLE patients (id INT, name VARCHAR(50), treatment VARCHAR(50)); CREATE TABLE treatments (treatment VARCHAR(50), cost INT);", "output": "SELECT COUNT(*) FROM (SELECT p.name FROM patients p JOIN treatments t ON p.treatment = t.treatment WHERE t.treatment IN ('CBT', 'medication') GROUP BY p.name) AS combined_treatments;"}
{"input": " 2021\ub144 1\uc6d4 \uc774\ud6c4\uc5d0 \ub450\ubc14\uc774\ub97c \ubc29\ubb38\ud55c \uc120\ubc15\uc758 \uc120\ubc15 \uc774\ub984\uacfc \ucd1d \ud654\ubb3c \uc911\ub7c9\uc744 \ub098\uc5f4\ud569\ub2c8\uae4c?", "context": "CREATE TABLE Vessel (vessel_id INT PRIMARY KEY, vessel_name VARCHAR(255)); CREATE TABLE Cargo (cargo_id INT, vessel_id INT, cargo_weight INT, PRIMARY KEY (cargo_id, vessel_id)); CREATE TABLE Vessel_Movement (vessel_id INT, movement_date DATE, PRIMARY KEY (vessel_id, movement_date));", "output": "SELECT V.vessel_name, SUM(C.cargo_weight) FROM Vessel V JOIN Cargo C ON V.vessel_id = C.vessel_id JOIN Vessel_Movement VM ON V.vessel_id = VM.vessel_id WHERE VM.movement_date >= '2021-01-01' AND VM.port_id IN (SELECT port_id FROM Port WHERE port_name = 'Dubai') GROUP BY V.vessel_name;"}
{"input": " \ub0a8\uc131 \ud68c\uc6d0\uacfc \uc5ec\uc131 \ud68c\uc6d0\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Members (MemberID INT, FirstName VARCHAR(50), LastName VARCHAR(50), DateJoined DATE, Age INT, Gender VARCHAR(10)); INSERT INTO Members (MemberID, FirstName, LastName, DateJoined, Age, Gender) VALUES (1, 'John', 'Doe', '2021-01-01', 25, 'Male'), (2, 'Jane', 'Doe', '2021-01-01', 28, 'Female');", "output": "SELECT AVG(Age) FROM Members;"}
{"input": " X \uad6d\uac00\uc758 \uc18c\uc561 \uae08\uc735 \uace0\uac1d\uc5d0\uac8c \uc9c0\uae09\ub41c \ucd1d \ub300\ucd9c \uae08\uc561\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE microfinance_clients (id INT PRIMARY KEY, client_name VARCHAR(100), country VARCHAR(50), loan_amount DECIMAL(10, 2)); INSERT INTO microfinance_clients (id, client_name, country, loan_amount) VALUES (1, 'Client A', 'Country X', 500.00), (2, 'Client B', 'Country Y', 700.00);", "output": "SELECT SUM(loan_amount) FROM microfinance_clients WHERE country = 'Country X';"}
{"input": " \uac01 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uba87 \uba85\uc758 \uc790\uc6d0\ubd09\uc0ac\uc790\uac00 \ub4f1\ub85d\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (VolunteerID INT, Name TEXT, Program TEXT);", "output": "SELECT Program, COUNT(*) FROM Volunteers GROUP BY Program;"}
{"input": " \uac01 \uac8c\uc784\ubcc4\ub85c \ud310\ub9e4\ub41c \ud2f0\ucf13\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE game_ticket_sales_by_team (id INT, game_id INT, team VARCHAR(50), revenue INT); INSERT INTO game_ticket_sales_by_team (id, game_id, team, revenue) VALUES (1, 1, 'TeamA', 3000), (2, 1, 'TeamA', 2000), (3, 2, 'TeamB', 4000), (4, 2, 'TeamB', 3000);", "output": "SELECT game_id, team, SUM(revenue) as total_revenue FROM game_ticket_sales_by_team GROUP BY game_id, team;"}
{"input": " \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc5d0\uc11c \uacf5\uae09\ub418\ub294 \uc7ac\ub8cc\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ingredient_sources (id INT, product VARCHAR(50), ingredient VARCHAR(50), country VARCHAR(50), quantity INT); INSERT INTO ingredient_sources (id, product, ingredient, country, quantity) VALUES (1, 'Lipstick', 'Wax', 'Brazil', 25); INSERT INTO ingredient_sources (id, product, ingredient, country, quantity) VALUES (2, 'Lipstick', 'Oil', 'Mexico', 10);", "output": "SELECT SUM(quantity) as total_quantity FROM ingredient_sources WHERE country IN (SELECT name FROM countries WHERE region = 'Africa');"}
{"input": " \uc720\ub7fd\uc5f0\ud569 \ubc30\ucd9c\uad8c\uac70\ub798\uc81c\uc758 \ud0c4\uc18c \uac00\uaca9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE carbon_prices (region TEXT, price FLOAT); INSERT INTO carbon_prices (region, price) VALUES ('European Union Emissions Trading System', 25.0);", "output": "SELECT price FROM carbon_prices WHERE region = 'European Union Emissions Trading System';"}
{"input": " \ucc38\uc5ec\ud55c \uc6b0\uc8fc \uc784\ubb34\uc758 \uc218\uc5d0 \ub530\ub77c \uad6d\uac00\uc758 \uc21c\uc704\ub97c \ub9e4\uae30\uc2ed\ub2c8\uae4c?", "context": "CREATE TABLE space_missions (id INT, mission_name VARCHAR(50), country VARCHAR(50));", "output": "SELECT country, COUNT(*) AS num_missions, RANK() OVER (ORDER BY COUNT(*) DESC) AS country_rank FROM space_missions GROUP BY country;"}
{"input": " 2022\ub144 \uc0c1\ubc18\uae30, \uc694\ub9ac \uc885\ub958\ubcc4 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE restaurant_revenue (restaurant_id INT, cuisine_type VARCHAR(255), revenue DECIMAL(10,2), transaction_date DATE); INSERT INTO restaurant_revenue (restaurant_id, cuisine_type, revenue, transaction_date) VALUES (1, 'Chinese', 5000, '2022-01-01'), (2, 'Italian', 6000, '2022-01-02');", "output": "SELECT cuisine_type, SUM(revenue) as total_revenue FROM restaurant_revenue WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY cuisine_type;"}
{"input": " \ud0dc\ud3c9\uc591\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc120\ubc15\uc758 \ud3c9\uade0 \uc18d\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vessels (id INT, name TEXT, speed FLOAT, longitude FLOAT, latitude FLOAT); INSERT INTO vessels (id, name, speed, longitude, latitude) VALUES (5, 'VesselE', 20.5, -130.00, 38.00);", "output": "SELECT AVG(speed) FROM vessels WHERE longitude >= -170 AND longitude <= -120 AND latitude >= 0 AND latitude <= 60;"}
{"input": " \ud2b9\uc815 \uc9c0\uc5ed, \ud2b9\uc815 \uc544\ud2f0\uc2a4\ud2b8\uc758 \ucf58\uc11c\ud2b8 \ud2f0\ucf13 \ud310\ub9e4\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE ConcertData (TicketID INT, UserID INT, ConcertID INT, TicketPrice DECIMAL(10,2)); INSERT INTO ConcertData VALUES (1, 1, 1001, 50.00), (2, 2, 1002, 75.00); CREATE TABLE Concerts (ConcertID INT, ConcertName VARCHAR(100), ArtistID INT, VenueID INT); INSERT INTO Concerts VALUES (1001, 'Taylor Swift Concert', 1, 100), (1002, 'BTS Concert', 2, 200); CREATE TABLE Venues (VenueID INT, VenueName VARCHAR(100), Region VARCHAR(50)); INSERT INTO Venues VALUES (100, 'Staples Center', 'Los Angeles'), (200, 'Madison Square Garden', 'New York');", "output": "SELECT SUM(TicketPrice) FROM ConcertData JOIN Concerts ON ConcertData.ConcertID = Concerts.ConcertID JOIN Venues ON Concerts.VenueID = Venues.VenueID WHERE Concerts.ArtistID = 1 AND Venues.Region = 'New York';"}
{"input": " \ub9c8\uc9c0\ub9c9 \ub4f1\ub85d\uc77c\uc744 \uae30\uc900\uc73c\ub85c \uac01 \uc8fc\uc5d0 \ub4f1\ub85d\ub41c \uc804\uae30 \uc790\ub3d9\ucc28\ub294 \uba87 \ub300\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VehicleRegistrations (vehicle_id INT, vehicle_type TEXT, registration_date DATE, state TEXT); CREATE TABLE ElectricVehicles (vehicle_id INT, vehicle_model TEXT);", "output": "SELECT state, COUNT(DISTINCT vehicle_id) AS electric_vehicle_count FROM VehicleRegistrations vr INNER JOIN ElectricVehicles ev ON vr.vehicle_id = ev.vehicle_id WHERE registration_date = (SELECT MAX(registration_date) FROM VehicleRegistrations) GROUP BY state;"}
{"input": " \uc804\ub144\ub3c4 \uac19\uc740 \uc8fc\uc640 \ube44\uad50\ud558\uc5ec \uc9c0\uc5ed\ubcc4 \ud3c9\uade0 \uae30\uc628\uc758 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE weekly_temp_data (region VARCHAR(255), temperature INT, week INT, year INT); INSERT INTO weekly_temp_data (region, temperature, week, year) VALUES ('North', 25, 1, 2021), ('South', 30, 1, 2021), ('East', 28, 1, 2021), ('West', 22, 1, 2021), ('North', 27, 1, 2022), ('South', 29, 1, 2022), ('East', 31, 1, 2022), ('West', 24, 1, 2022);", "output": "SELECT region, ((current_temp - prev_temp) * 100.0 / prev_temp) as pct_change FROM (SELECT region, AVG(temperature) as current_temp, LAG(AVG(temperature)) OVER (PARTITION BY region ORDER BY year) as prev_temp FROM weekly_temp_data WHERE week = 1 GROUP BY region, year) subquery;"}
{"input": " \uc544\ud504\ub9ac\uce74\uc758 \ud0c4\uc18c \uc0c1\uc1c4 \ud504\ub85c\uc81d\ud2b8 \uc218\uc640 \ubd84\uc57c\ubcc4 \ud504\ub85c\uc81d\ud2b8 \uc218\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE carbon_offset_projects (project_id INT, region VARCHAR(10), sector VARCHAR(20), description TEXT); INSERT INTO carbon_offset_projects (project_id, region, sector, description) VALUES (1, 'AF', 'Forestry', 'Tree planting in Kenya'), (2, 'AF', 'Renewable Energy', 'Solar farm in South Africa'), (3, 'AF', 'Forestry', 'Reforestation in Tanzania'), (4, 'AF', 'Energy Efficiency', 'Efficient cookstoves in Uganda'), (5, 'AF', 'Waste Management', 'Landfill gas capture in Nigeria');", "output": "SELECT 'AF' AS region, COUNT(*) AS num_projects FROM carbon_offset_projects WHERE region = 'AF' UNION ALL SELECT sector AS region, COUNT(*) AS num_projects FROM carbon_offset_projects WHERE region = 'AF' GROUP BY sector ORDER BY num_projects DESC;"}
{"input": " \ubaa8\ub4e0 \ubc1c\uad74 \ud604\uc7a5\uacfc \uac01 \ud604\uc7a5\uc5d0\uc11c \ubc1c\uacac\ub41c \uc720\ubb3c \uc218\ub97c \uc720\ubb3c \uc218 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE ExcavationSites (SiteID INT, SiteName VARCHAR(100), ArtifactID INT); INSERT INTO ExcavationSites (SiteID, SiteName, ArtifactID) VALUES (1, 'Site A', 1), (1, 'Site A', 2), (2, 'Site B', 3), (3, 'Site C', NULL);", "output": "SELECT SiteName, COUNT(ArtifactID) as ArtifactCount FROM ExcavationSites GROUP BY SiteName ORDER BY ArtifactCount DESC;"}
{"input": " \uc9c0\ub09c 1\ub144\uac04 \ud654\ud559\uc81c\ud488\uc758 \ud658\uacbd\uc601\ud5a5 \ud3c9\uade0 \uc810\uc218\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ChemicalProducts (ProductID INT, Chemical TEXT, ManufacturerID INT, EnvironmentalImpactScore DECIMAL(3,2)); INSERT INTO ChemicalProducts (ProductID, Chemical, ManufacturerID, EnvironmentalImpactScore) VALUES (1, 'Acetone', 1, 3.2), (2, 'Ethanol', 1, 4.5), (3, 'Methanol', 2, 5.0);", "output": "SELECT AVG(CP.EnvironmentalImpactScore) AS AverageScore FROM ChemicalProducts CP WHERE CP.EnvironmentalImpactScore IS NOT NULL AND YEAR(CP.ProductLaunchDate) = YEAR(CURDATE()) - 1;"}
{"input": " \ubcc0\ud638\uc0ac '\uc54c\ubca0\ub974\ud1a0 \ub85c\ub4dc\ub9ac\uac8c\uc2a4'\uac00 \ucc98\ub9ac\ud55c \uc0ac\uac74 \uc218\ub294 \ucd1d \uba87 \uac74\uc778\uac00\uc694?", "context": "CREATE TABLE Attorneys (AttorneyID int, Name varchar(50), Specialty varchar(50)); INSERT INTO Attorneys (AttorneyID, Name, Specialty) VALUES (3, 'Alberto Rodriguez', 'Immigration'); CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50), AttorneyID int); INSERT INTO Cases (CaseID, ClientID, Category, AttorneyID) VALUES (501, 5, 'Immigration', 3);", "output": "SELECT COUNT(*) as TotalCases FROM Cases WHERE AttorneyID = (SELECT AttorneyID FROM Attorneys WHERE Name = 'Alberto Rodriguez');"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uc758\ub8cc\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd98 \ube44\uc601\ub9ac \ub2e8\uccb4\uc758 \ud3c9\uade0 \uc5ed\ub7c9 \ud65c\uc6a9\ub3c4\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE facilities (facility_id INT, facility_name TEXT, capacity INT, location TEXT); CREATE TABLE nonprofits (nonprofit_id INT, nonprofit_name TEXT, sector TEXT); CREATE TABLE nonprofit_facilities (nonprofit_id INT, facility_id INT); INSERT INTO facilities VALUES (1, 'Community Clinic', 50, 'New York'); INSERT INTO nonprofits VALUES (1, 'HealthCare NY', 'health'); INSERT INTO nonprofit_facilities VALUES (1, 1);", "output": "SELECT AVG(f.capacity / count(*)) as avg_capacity_utilization FROM facilities f JOIN nonprofit_facilities nf ON f.facility_id = nf.facility_id JOIN nonprofits n ON nf.nonprofit_id = n.nonprofit_id WHERE n.sector = 'health';"}
{"input": " 'RegionZ' \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \ubc29\ubb38\uac1d \uc5f0\ub839 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE TABLE Visitors (visitor_id INT, name VARCHAR(255), birthdate DATE, city VARCHAR(255)); CREATE TABLE Visits (visit_id INT, visitor_id INT, event_id INT, visit_date DATE); CREATE TABLE Events (event_id INT, name VARCHAR(255), date DATE, region VARCHAR(255));", "output": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(birthdate)) AS avg_age FROM Visitors V JOIN Visits IV ON V.visitor_id = IV.visitor_id JOIN Events E ON IV.event_id = E.event_id WHERE E.region = 'RegionZ';"}
{"input": " \uc601\ud5a5 \ub0a0\uc9dc\uac00 \uc5ec\ub7ec \uac1c\uc778 \uc544\ud504\ub9ac\uce74 \uad6d\uac00\uc758 \uc9c0\uc18d \uac00\ub2a5\ud55c \uad00\uad11 \uc774\ub2c8\uc154\ud2f0\ube0c\ub85c \ucc3d\ucd9c\ub41c \ucd1d \ud604\uc9c0 \uc77c\uc790\ub9ac \uc218\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.", "context": "CREATE TABLE SustainableTourism (tour_id INT, tour_date DATE, country VARCHAR(20), local_jobs INT); INSERT INTO SustainableTourism (tour_id, tour_date, country, local_jobs) VALUES (25, '2022-03-01', 'Africa', 50), (25, '2022-03-02', 'Africa', 40), (26, '2022-03-03', 'Asia', 30);", "output": "SELECT country, SUM(local_jobs) as total_local_jobs FROM SustainableTourism WHERE country = 'Africa' GROUP BY country HAVING COUNT(tour_date) > 1;"}
{"input": " \ubaa8\ub4e0 \uacc4\uc815\uc758 \uc911\uac04 \uc794\uc561\ubcf4\ub2e4 \ud070 \uacc4\uc815 \uc794\uc561\uc744 \uac00\uc9c4 \uace0\uac1d \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE accounts (customer_id INT, account_type VARCHAR(20), balance DECIMAL(10, 2));", "output": "SELECT COUNT(DISTINCT customer_id) FROM accounts WHERE balance > PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY balance) OVER ();"}
{"input": " \uc9c0\ub09c \ub2ec \ud53c\uc2f1 \uc2dc\ub3c4 \ubc0f \uc545\uc131 \ucf54\ub4dc \ubc30\ud3ec\uc640 \uad00\ub828\ub41c \uace0\uc720 IP \uc8fc\uc18c\ub97c \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE phishing (id INT, ip_address VARCHAR(15), attack_time TIMESTAMP);CREATE TABLE malware (id INT, ip_address VARCHAR(15), attack_time TIMESTAMP);", "output": "SELECT DISTINCT ip_address FROM phishing WHERE attack_time >= NOW() - INTERVAL 1 MONTH UNION SELECT DISTINCT ip_address FROM malware WHERE attack_time >= NOW() - INTERVAL 1 MONTH;"}
{"input": " \ucd5c\uc18c 3\uc8fc \uc5f0\uc18d\uc73c\ub85c \uc8fc\uac04 \uac78\uc74c \uc218 \ubaa9\ud45c\ub97c \ub2ec\uc131\ud55c \ucd1d \uc0ac\uc6a9\uc790 \uc218\ub97c \uad6c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE user_steps (user_id INT, date DATE, steps INT, weekly_goal INT); INSERT INTO user_steps (user_id, date, steps, weekly_goal) VALUES (1, '2022-01-01', 8000, 10000), (1, '2022-01-02', 9000, 10000), (2, '2022-01-01', 7000, 8000), (2, '2022-01-02', 8500, 8000), (1, '2022-01-03', 11000, 10000), (1, '2022-01-04', 10500, 10000), (1, '2022-01-05', 9500, 10000);", "output": "SELECT COUNT(DISTINCT user_id) FROM (SELECT user_id, date FROM user_steps WHERE steps >= weekly_goal GROUP BY user_id, WEEK(date, 1) HAVING COUNT(*) >= 3) AS temp;"}
{"input": " \uac8c\uc784 \uc7a5\ub974\ubcc4 e\uc2a4\ud3ec\uce20 \uc774\ubca4\ud2b8\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ud50c\ub808\uc774\uc5b4\uac00 \ucc38\uc5ec\ud588\ub098\uc694?", "context": "CREATE TABLE Players (PlayerID INT, Age INT, Country VARCHAR(20), GamePreference VARCHAR(20), ParticipatedInEsports BOOLEAN); INSERT INTO Players (PlayerID, Age, Country, GamePreference, ParticipatedInEsports) VALUES (1, 25, 'USA', 'Strategy', TRUE);", "output": "SELECT GamePreference, SUM(ParticipatedInEsports) FROM Players GROUP BY GamePreference;"}
{"input": " \uc778\uad6c \ubc00\ub3c4\uac00 \ud3c9\ubc29 \ub9c8\uc77c\ub2f9 1000\uba85\uc744 \ub118\ub294 \uac01 \uce74\uc6b4\ud2f0\uc758 \uacf5\ub9bd\ud559\uad50\uc5d0 \ud560\ub2f9\ub41c \ucd1d \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA Government;CREATE TABLE Government.County (name VARCHAR(255), population INT, area FLOAT);CREATE TABLE Government.School (name VARCHAR(255), county VARCHAR(255), budget INT);", "output": "SELECT county, SUM(budget) FROM Government.School WHERE county IN (SELECT name FROM Government.County WHERE (population / area) > 1000) GROUP BY county;"}
{"input": " 2022\ub144 2\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub192\uc740 \ud3c9\uac00\uc640 \uac00\uc7a5 \ub0ae\uc740 \ud3c9\uac00\ub97c \ubc1b\uc740 \ucee4\ubba4\ub2c8\ud2f0 \uc13c\ud130\ub294 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CommunityRatings (Center text, Rating int, RatingDate date); INSERT INTO CommunityRatings (Center, Rating, RatingDate) VALUES ('CenterA', 8, '2022-04-01'), ('CenterB', 6, '2022-04-02');", "output": "SELECT Center, Rating FROM (SELECT Center, Rating, ROW_NUMBER() OVER (ORDER BY Rating) as Rank FROM CommunityRatings WHERE RatingDate >= '2022-04-01' AND RatingDate < '2022-07-01') as Subquery WHERE Rank IN (1, (SELECT COUNT(*) FROM CommunityRatings WHERE RatingDate >= '2022-04-01' AND RatingDate < '2022-07-01') * 0.01);"}
{"input": " \ud3c9\uade0 \uc784\uae08\uc774 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 2\uac1c \ub178\ub3d9 \ubc94\uc8fc\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE labor_statistics (labor_category VARCHAR(50), average_wage NUMERIC(10,2)); INSERT INTO labor_statistics (labor_category, average_wage) VALUES ('Carpenters', '35.56'), ('Electricians', '38.42'), ('Plumbers', '42.15');", "output": "SELECT labor_category, AVG(average_wage) FROM labor_statistics GROUP BY labor_category ORDER BY AVG(average_wage) DESC LIMIT 2;"}
{"input": " '\uc544\uc2dc\uc544 \ud0dc\ud3c9\uc591' \uc2a4\ud0a4\ub9c8\uc758 \ucd1d \ud574\uad70 \uae30\uc9c0 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA AsiaPacific; CREATE TABLE NavalBases (id INT, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255)); INSERT INTO NavalBases (id, name, type, location) VALUES (1, 'Yokosuka', 'Naval Base', 'Japan'); INSERT INTO NavalBases (id, name, type, location) VALUES (2, 'Singapore', 'Naval Base', 'Singapore');", "output": "SELECT COUNT(*) FROM AsiaPacific.NavalBases;"}
{"input": "\uc804\uc6d4 \ub300\ube44 \uc9c0\uc5ed\ubcc4 \ud3c9\uade0\uae30\uc628 \ubcc0\ud654\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE monthly_temp (region VARCHAR(255), temperature INT, month INT); INSERT INTO monthly_temp (region, temperature, month) VALUES ('North', 25, 1), ('South', 30, 1), ('East', 28, 1), ('West', 22, 1), ('North', 27, 2), ('South', 29, 2), ('East', 31, 2), ('West', 24, 2);", "output": "SELECT region, ((current_temp - prev_temp) * 100.0 / prev_temp) as pct_change FROM (SELECT region, temperature as current_temp, LAG(temperature) OVER (PARTITION BY region ORDER BY month) as prev_temp FROM monthly_temp) subquery;"}
{"input": " \ud638\uc8fc\uc5d0 \ube44\ud574 \ud0dc\ud3c9\uc591 \uc12c \uad6d\uac00\uc758 \ubc95\ub960 \uc9c0\uc6d0 \uc13c\ud130 \uc218\ub294 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE pacific_islands_legal_aid (id INT, country VARCHAR(255), num_centers INT); INSERT INTO pacific_islands_legal_aid (id, country, num_centers) VALUES (1, 'Fiji', 3), (2, 'Papua New Guinea', 4), (3, 'Samoa', 2);CREATE TABLE australia_legal_aid (id INT, country VARCHAR(255), num_centers INT); INSERT INTO australia_legal_aid (id, country, num_centers) VALUES (1, 'Australia', 15);", "output": "SELECT 'Pacific Islands' AS region, country, SUM(num_centers) AS total_centers FROM pacific_islands_legal_aid GROUP BY country UNION ALL SELECT 'Australia' AS region, country, SUM(num_centers) AS total_centers FROM australia_legal_aid GROUP BY country;"}
{"input": "\uc720\ub7fd\uc758 \uc804\uccb4 \uc720\uc801\uc9c0 \uc218\uc5d0 \ub300\ud55c \uac01 \uad6d\uac00\uc758 \ube44\uc728\uacfc \ud568\uaed8 \uc720\ub7fd \ub0b4 \uac01 \uad6d\uac00\uc758 \uc720\uc801\uc9c0 \uc218\ub97c \uac00\uc7a5 \ub9ce\uc740 \uac83\ubd80\ud130 \uc801\uc740 \uac83\uae4c\uc9c0 \uc21c\uc11c\ub300\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE UNESCO_Heritage_Sites (id INT, country VARCHAR(50), site VARCHAR(100)); INSERT INTO UNESCO_Heritage_Sites (id, country, site) VALUES (1, 'Italy', 'Colosseum'), (2, 'France', 'Eiffel Tower'), (3, 'Spain', 'Alhambra');", "output": "SELECT country, COUNT(site) as num_sites, ROUND(COUNT(site) * 100.0 / (SELECT COUNT(*) FROM UNESCO_Heritage_Sites WHERE country = 'Europe'), 2) as percentage FROM UNESCO_Heritage_Sites WHERE country = 'Europe' GROUP BY country ORDER BY num_sites DESC;"}
{"input": " 2020\ub144 3\ubd84\uae30\uc5d0 \uac00\uc7a5 \ub9ce\uc740 \uc790\uae08\uc744 \uc9c0\uc6d0\ubc1b\uc740 \uc870\uc9c1\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?", "context": "CREATE TABLE funding (org_id INT, amount DECIMAL(10,2), funding_date DATE); INSERT INTO funding (org_id, amount, funding_date) VALUES (1, 5000.00, '2020-07-01'), (2, 7000.00, '2020-08-15'), (1, 3000.00, '2020-10-05');", "output": "SELECT org_id, SUM(amount) AS total_funding FROM funding WHERE QUARTER(funding_date) = 3 AND YEAR(funding_date) = 2020 GROUP BY org_id ORDER BY total_funding DESC;"}
{"input": " \uc601\uad6d\uc5d0\uc11c \ucd1d \uc778\uc6a9 \ud69f\uc218 \uae30\uc900 \uc0c1\uc704 3\uac1c \ubc14\uc774\uc624\uc13c\uc11c \uae30\uc220 \ud2b9\ud5c8\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE SCHEMA if not exists biosensor;CREATE TABLE if not exists biosensor.patents (id INT PRIMARY KEY, name VARCHAR(100), location VARCHAR(50), total_citations INT);INSERT INTO biosensor.patents (id, name, location, total_citations) VALUES (1, 'PatentX', 'UK', 150), (2, 'PatentY', 'USA', 200), (3, 'PatentZ', 'Canada', 120), (4, 'PatentW', 'UK', 170), (5, 'PatentV', 'France', 180), (6, 'PatentU', 'UK', 200);", "output": "SELECT name, total_citations FROM biosensor.patents WHERE location = 'UK' GROUP BY name ORDER BY total_citations DESC LIMIT 3;"}
{"input": " 5\ud68c \uc774\uc0c1\uc758 \uc784\uc0c1\uc2dc\ud5d8\uc744 \uc9c4\ud589\ud55c \uc758\uc57d\ud488\uacfc \ud3c9\uade0 \uc2dc\ud5d8\uacb0\uacfc \uc131\uacf5\ub960, \ud310\ub9e4\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \uc9c0\uc5ed\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE clinical_trials (id INT PRIMARY KEY, trial_name VARCHAR(50), drug_name VARCHAR(50), trial_status VARCHAR(20), start_date DATE, region VARCHAR(50)); CREATE TABLE trial_results (result_id INT PRIMARY KEY, trial_id INT, result VARCHAR(50)); CREATE TABLE drug_sales (id INT PRIMARY KEY, drug_name VARCHAR(50), manufacturer VARCHAR(50), sales_qty INT, sales_amount DECIMAL(10,2), sale_year INT, region VARCHAR(50));", "output": "SELECT ct.drug_name, COUNT(tr.trial_id) as total_trials, AVG(CASE WHEN tr.result = 'Success' THEN 1 ELSE 0 END) as success_rate, MAX(ds.region) as highest_sales_region FROM clinical_trials ct JOIN trial_results tr ON ct.id = tr.trial_id JOIN drug_sales ds ON ct.drug_name = ds.drug_name GROUP BY ct.drug_name HAVING total_trials > 5;"}
{"input": " 2022\ub144 2\ubd84\uae30 \uc6d0\uc778\ubcc4 \uae30\ubd80 \ucd1d\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE donations (id INT, donor VARCHAR(50), cause VARCHAR(50), amount DECIMAL(10, 2), donation_date DATE); INSERT INTO donations (id, donor, cause, amount, donation_date) VALUES (1, 'John Doe', 'Education', 500, '2022-04-01'), (2, 'Jane Smith', 'Health', 300, '2022-04-15'), (3, 'Alice Johnson', 'Environment', 700, '2022-05-05');", "output": "SELECT cause, SUM(amount) as total_donation FROM donations WHERE donation_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY cause;"}
{"input": " \ubc29\uae00\ub77c\ub370\uc2dc \uacf5\uc815\ubb34\uc5ed \uc778\uc99d \uacf5\uc7a5\uc758 \ucd5c\ub300 CO2 \ubc30\ucd9c\ub7c9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE CO2Emissions (factory VARCHAR(50), certification VARCHAR(50), CO2_emission INT); INSERT INTO CO2Emissions VALUES ('Factory1', 'Fair Trade', 500), ('Factory2', 'Not Certified', 600), ('Factory3', 'Fair Trade', 450), ('Factory4', 'Not Certified', 700);", "output": "SELECT MAX(CO2_emission) FROM CO2Emissions WHERE certification = 'Fair Trade' AND country = 'Bangladesh';"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \uac1c\uccb4\uc218\uac00 \uac10\uc18c\ud558\ub294 \ucd94\uc138\ub97c \ubcf4\uc774\ub294 \ud574\uc591\uc0dd\ubb3c \ud30c\uc545", "context": "CREATE TABLE marine_species_population (id INT, species VARCHAR(255), year INT, population_size INT); INSERT INTO marine_species_population (id, species, year, population_size) VALUES (1, 'Clownfish', 2016, 9000), (2, 'Clownfish', 2017, 8500), (3, 'Clownfish', 2018, 8000), (4, 'Clownfish', 2019, 7500), (5, 'Clownfish', 2020, 7000), (6, 'Sea Turtle', 2016, 5500), (7, 'Sea Turtle', 2017, 5600), (8, 'Sea Turtle', 2018, 5700), (9, 'Sea Turtle', 2019, 5800), (10, 'Sea Turtle', 2020, 5900);", "output": "SELECT species, population_size, (LAG(population_size) OVER (PARTITION BY species ORDER BY year) - population_size) population_trend FROM marine_species_population WHERE year = 2020;"}
{"input": " \ubd81\uadf9 \uc9c0\uc5ed\uc5d0\uc11c \uc9c0\uc5ed\uc0ac\ud68c \ud504\ub85c\uadf8\ub7a8\uc744 \ud1b5\ud574 \uc11c\ube44\uc2a4\ub97c \ubc1b\uc744 \uc218 \uc788\ub294 \ucd5c\ub300 \uc778\uc6d0\uc740 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE region (region_id INT, name VARCHAR(255)); INSERT INTO region (region_id, name) VALUES (1, 'Arctic'); CREATE TABLE community_program (program_id INT, name VARCHAR(255), region_id INT, people_served INT); INSERT INTO community_program (program_id, name, region_id, people_served) VALUES (1, 'Program1', 1, 200), (2, 'Program2', 1, 300);", "output": "SELECT MAX(people_served) FROM community_program WHERE region_id = (SELECT region_id FROM region WHERE name = 'Arctic');"}
{"input": " 'Tesla' \ud68c\uc0ac\uc5d0\uc11c \uc81c\uc870\ud55c \ucc28\ub7c9\uc758 \ud3c9\uade0 \uc548\uc804 \ub4f1\uae09\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE VehicleManufacturers (Manufacturer VARCHAR(255), SafetyRating FLOAT); INSERT INTO VehicleManufacturers (Manufacturer, SafetyRating) VALUES ('Tesla', 5.1), ('Toyota', 4.8), ('Honda', 4.7);", "output": "SELECT AVG(SafetyRating) FROM VehicleManufacturers WHERE Manufacturer = 'Tesla';"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0\uc11c \ud654\uc774\uc790 \ubc31\uc2e0\uc744 \uc811\uc885\ud55c \ud658\uc790\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc785\ub2c8\uae4c?", "context": "CREATE TABLE vaccine_administered (patient_id INT, vaccine_name VARCHAR(10), administered_date DATE); INSERT INTO vaccine_administered (patient_id, vaccine_name, administered_date) VALUES (1, 'Pfizer', '2021-03-01');", "output": "SELECT AVG(YEAR(administered_date) - YEAR('1900-01-01') + (DAYOFYEAR(administered_date) < DAYOFYEAR('1900-01-01'))) AS avg_age FROM vaccine_administered WHERE vaccine_name = 'Pfizer';"}
{"input": " \uc694\uac00\uc640 \ud544\ub77c\ud14c\uc2a4 \uc218\uc5c5\uc744 \ubaa8\ub450 \uc218\uac15\ud55c \uba64\ubc84\ub294 \ub204\uad6c\uc778\uac00\uc694?", "context": "CREATE TABLE attendance(member_id INT, class_type VARCHAR(20), attendance_date DATE); INSERT INTO attendance(member_id, class_type, attendance_date) VALUES (1, 'Yoga', '2022-01-01'); INSERT INTO attendance(member_id, class_type, attendance_date) VALUES (1, 'Pilates', '2022-01-03'); INSERT INTO attendance(member_id, class_type, attendance_date) VALUES (2, 'Yoga', '2022-01-02'); INSERT INTO attendance(member_id, class_type, attendance_date) VALUES (3, 'Pilates', '2022-01-01');", "output": "SELECT a.member_id FROM attendance a WHERE a.class_type IN ('Yoga', 'Pilates') GROUP BY a.member_id HAVING COUNT(DISTINCT a.class_type) = 2;"}
{"input": " \uc774\uc804 \ubd84\uae30\uc5d0 \ube44\ud574 \uc7ac\uc815\uc801 \uc6f0\ube59 \uc810\uc218\uac00 \ud5a5\uc0c1\ub41c \uace0\uac1d\uc758 \ube44\uc728\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE financial_wellbeing(customer_id INT, score DECIMAL(3, 1), measure_date DATE); INSERT INTO financial_wellbeing VALUES (1, 75, '2022-01-15'), (2, 80, '2022-04-01'), (3, 70, '2022-03-05'), (4, 85, '2022-05-12');", "output": "SELECT COUNT(*) * 100.0 / SUM(COUNT(*)) OVER () AS pct FROM (SELECT customer_id, score, measure_date, LAG(score) OVER (PARTITION BY customer_id ORDER BY measure_date) AS prev_score FROM financial_wellbeing) t WHERE prev_score IS NOT NULL AND score > prev_score;"}
{"input": "\uc800\uc18c\ub4dd \uad6d\uac00\uc5d0\uc11c\ub294 \uad50\ud1b5 \ubd80\ubb38\uc758 \uc5b4\ub5a4 \uae30\ud6c4 \uae08\uc735 \ud504\ub85c\uc81d\ud2b8\uac00 \uc2dc\ud589\ub418\uc5c8\uc73c\uba70, \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc758 \ucd1d \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE projects (country VARCHAR(255), sector VARCHAR(255), cost INT); INSERT INTO projects (country, sector, cost) VALUES ('Bangladesh', 'Transportation', 1000000); INSERT INTO projects (country, sector, cost) VALUES ('Ethiopia', 'Transportation', 1200000);", "output": "SELECT country, sector, SUM(cost) FROM projects WHERE sector = 'Transportation' AND country IN (SELECT code FROM low_income_countries) GROUP BY country, sector;"}
{"input": " 2020\ub144 \uac74\ubb3c \uc720\ud615\ubcc4 \uc5d0\ub108\uc9c0 \ud6a8\uc728\uc740 \uc5b4\ub5a0\ud588\ub098\uc694?", "context": "CREATE TABLE building_efficiency (building_type VARCHAR(255), year INT, efficiency FLOAT); INSERT INTO building_efficiency (building_type, year, efficiency) VALUES ('Residential', 2020, 0.7), ('Residential', 2020, 0.75), ('Commercial', 2020, 0.6), ('Commercial', 2020, 0.65);", "output": "SELECT building_type, AVG(efficiency) as avg_efficiency FROM building_efficiency WHERE year = 2020 GROUP BY building_type;"}
{"input": " \uae30\uc220 \ubd80\ubb38\uc5d0 \ud22c\uc790\ud588\uc9c0\ub9cc \uc758\ub8cc \ubd80\ubb38\uc5d0\ub294 \ud22c\uc790\ud558\uc9c0 \uc54a\uc740 \uace0\uac1d\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Customers (CustomerID INT, Name VARCHAR(50));CREATE TABLE Investments (CustomerID INT, InvestmentType VARCHAR(10), Sector VARCHAR(10));INSERT INTO Customers VALUES (1,'John Doe'),(2,'Jane Smith'),(3,'Bob Johnson');INSERT INTO Investments VALUES (1,'Stocks','Technology'),(1,'Stocks','Healthcare'),(2,'Stocks','Technology'),(3,'Stocks','Healthcare');", "output": "SELECT DISTINCT c.Name FROM Customers c INNER JOIN Investments i ON c.CustomerID = i.CustomerID WHERE i.Sector = 'Technology' AND c.CustomerID NOT IN (SELECT CustomerID FROM Investments WHERE Sector = 'Healthcare');"}
{"input": " '\ub192\uc740 \uac00\uce58' \ubc0f '\ud504\ub9ac\ubbf8\uc5c4' \uce74\ud14c\uace0\ub9ac \ubaa8\ub450\uc5d0 \uacc4\uc815\uc744 \ubcf4\uc720\ud55c \uace0\uac1d\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE customer_accounts (customer_id INT, account_id INT, account_type TEXT); INSERT INTO customer_accounts (customer_id, account_id, account_type) VALUES (1, 1, 'High Value'); INSERT INTO customer_accounts (customer_id, account_id, account_type) VALUES (1, 2, 'Premium'); INSERT INTO customer_accounts (customer_id, account_id, account_type) VALUES (2, 3, 'Standard');", "output": "SELECT customer_id FROM customer_accounts WHERE account_type = 'High Value' INTERSECT SELECT customer_id FROM customer_accounts WHERE account_type = 'Premium';"}
{"input": " \uc9c0\ub09c \ubd84\uae30\uc5d0 \ud310\ub9e4\ub41c \uc720\uae30\ub18d \uc81c\ud488\uc758 \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE OrganicSales (product_id INT, sale_date DATE, revenue DECIMAL(10,2)); INSERT INTO OrganicSales (product_id, sale_date, revenue) VALUES (1, '2021-01-01', 50.00), (2, '2021-01-15', 120.00);", "output": "SELECT SUM(revenue) FROM OrganicSales WHERE sale_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE AND product_id IN (SELECT product_id FROM OrganicProducts);"}
{"input": " 2018\ub144\uc5d0 \ubbf8\uc220 \uc804\uc2dc\ud68c\uac00 \uac00\uc7a5 \ub9ce\uc774 \uc5f4\ub9b0 \ub3c4\uc2dc\ub294 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE Exhibitions (id INT, city VARCHAR(50), year INT);INSERT INTO Exhibitions (id, city, year) VALUES (1, 'New York', 2018), (2, 'London', 2018), (3, 'London', 2018), (4, 'Paris', 2017);", "output": "SELECT city, COUNT(*) AS exhibition_count FROM Exhibitions WHERE year = 2018 GROUP BY city ORDER BY exhibition_count DESC LIMIT 1;"}
{"input": " \uc720\uae30\ub18d \uc7ac\ub8cc\uc5d0 \ub300\ud574\uc11c\ub9cc \ucd1d \uc7ac\uace0 \ube44\uc6a9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Ingredients (IngredientID INT, Name TEXT, IsOrganic BOOLEAN, Cost FLOAT);", "output": "SELECT SUM(Cost) FROM Ingredients WHERE IsOrganic = TRUE;"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uac00\uc7a5 \ud6a8\uc728\uc801\uc778 \uc758\ub958 \uc81c\uc870 \uad6d\uac00\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE garment_manufacturing (id INT, garment_id INT, country VARCHAR(20), manufacturing_date DATE, workers INT, efficiency DECIMAL(4,2));CREATE VIEW efficient_manufacturers_q1_2022 AS SELECT country, AVG(efficiency) as avg_efficiency FROM garment_manufacturing WHERE manufacturing_date >= '2022-01-01' AND manufacturing_date < '2022-04-01' AND workers > 50 GROUP BY country;", "output": "SELECT country, avg_efficiency, RANK() OVER (ORDER BY avg_efficiency DESC) as efficiency_rank FROM efficient_manufacturers_q1_2022;"}
{"input": "\uad11\uc0b0 \uc6b4\uc601 \ubd80\uc11c\uc758 \uc5ec\uc131 \uc9c1\uc6d0 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Employees (EmployeeID INT, Department VARCHAR(255), Gender VARCHAR(255)); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (1, 'Mining Operations', 'Female'), (2, 'Mining Operations', 'Male'), (3, 'Mining Operations', 'Female');", "output": "SELECT Department, Gender, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Employees WHERE Department = 'Mining Operations') AS Percentage FROM Employees WHERE Department = 'Mining Operations' GROUP BY Department, Gender HAVING Gender = 'Female';"}
{"input": "\uc544\uc9c1 \uc790\uae08\uc744 \ubc1b\uc9c0 \ubabb\ud55c \ub2e4\uc591\ud55c \ucc3d\uc5c5\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE diversity_metrics(id INT, company_id INT, founder_gender TEXT, founder_race TEXT); INSERT INTO diversity_metrics (id, company_id, founder_gender, founder_race) VALUES (1, 3, 'Female', 'African American'); INSERT INTO diversity_metrics (id, company_id, founder_gender, founder_race) VALUES (2, 4, 'Male', 'Latinx');", "output": "SELECT companies.name FROM companies LEFT JOIN diversity_metrics ON companies.id = diversity_metrics.company_id LEFT JOIN funding_records ON companies.id = funding_records.company_id WHERE diversity_metrics.founder_gender IS NOT NULL AND diversity_metrics.founder_race IS NOT NULL AND funding_records.funding IS NULL"}
{"input": " \uc62c\ud574 EMEA \uc9c0\uc5ed\uc758 \uac01 \ub300\uc751\ud300\uc774 \ucc98\ub9ac\ud55c \ucd5c\ub300 \ubcf4\uc548 \uc0ac\uace0 \uac74\uc218\ub294 \uba87 \uac74\uc785\ub2c8\uae4c?", "context": "CREATE TABLE security_incidents (incident_id INT, incident_date DATE, mitigation_team VARCHAR(255), region VARCHAR(255), response_time INT); INSERT INTO security_incidents (incident_id, incident_date, mitigation_team, region, response_time) VALUES (1, '2022-02-14', 'Team Alpha', 'EMEA', 300), (2, '2022-03-05', 'Team Bravo', 'APAC', 420), (3, '2022-04-18', 'Team Alpha', 'EMEA', 560), (4, '2022-06-11', 'Team Charlie', 'AMER', 240), (5, '2022-07-23', 'Team Alpha', 'EMEA', 700), (6, '2022-08-09', 'Team Bravo', 'APAC', 380), (7, '2022-09-15', 'Team Charlie', 'AMER', 520);", "output": "SELECT mitigation_team, MAX(response_time) AS max_response_time FROM security_incidents WHERE region = 'EMEA' AND incident_date >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY mitigation_team;"}
{"input": " '\ubbf8\uad6d'\uc5d0 \ud310\ub9e4\ub418\ub294 \ucd5c\uc18c \uc758\ub958 \uc0ac\uc774\uc988\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE us_sales (id INT, garment_size INT);INSERT INTO us_sales (id, garment_size) VALUES (1, 6), (2, 8), (3, 10);", "output": "SELECT MIN(garment_size) FROM us_sales;"}
{"input": " \ub18d\ucd0c \uc9c0\uc5ed\uc758 \uc778\uad6c \ubc00\ub3c4\uc640 1\uc778\ub2f9 \uac00\uc6a9 \ubcd1\uc0c1 \uc218 \uc0ac\uc774\uc5d0\ub294 \uc5b4\ub5a4 \uc0c1\uad00 \uad00\uacc4\uac00 \uc788\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE regions (region_id INT, name VARCHAR(20), population INT, population_density FLOAT); INSERT INTO regions (region_id, name, population, population_density) VALUES (1, 'Rural', 10000, 25.0), (2, 'Urban', 50000, 200.0); CREATE TABLE hospitals (hospital_id INT, region_id INT, beds INT); INSERT INTO hospitals (hospital_id, region_id, beds) VALUES (1, 1, 200), (2, 2, 1000); CREATE TABLE clinics (clinic_id INT, region_id INT, beds INT); INSERT INTO clinics (clinic_id, region_id, beds) VALUES (1, 1, 50), (2, 2, 250); CREATE TABLE resources (resource_id INT, hospital_id INT, clinic_id INT, beds INT); INSERT INTO resources (resource_id, hospital_id, clinic_id, beds) VALUES (1, 1, 1, 100), (2, 2, 2, 200);", "output": "SELECT correlation(r.population_density, (h.beds + c.beds) / r.population) FROM regions r JOIN hospitals h ON r.region_id = h.region_id JOIN clinics c ON r.region_id = c.region_id;"}
{"input": " \uc9c0\ub09c \ub2ec '\uae08\uc735' \ubd80\ubb38\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \ubc1c\uc0dd\ud55c \ubcf4\uc548 \uc0ac\uace0 \uc720\ud615\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE sector_incidents (id INT, sector VARCHAR(255), incident_time TIMESTAMP, incident_type VARCHAR(255));", "output": "SELECT incident_type, COUNT(*) as incident_count FROM sector_incidents WHERE sector = 'finance' AND incident_time >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 MONTH) GROUP BY incident_type ORDER BY incident_count DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 6\uac1c\uc6d4 \ub3d9\uc548 \uac01 \uad6d\uac00\uc5d0\uc11c \ub2f9\uc0ac\uc758 \ub370\uc774\ud130 \uac1c\uc778\uc815\ubcf4 \ubcf4\ud638\uc815\ucc45\uc744 \uc218\ub77d\ud55c \uc0ac\uc6a9\uc790\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE users (user_id INT, first_name VARCHAR(50), last_name VARCHAR(50), age INT, gender VARCHAR(10), country VARCHAR(50), accepted_privacy_policy BOOLEAN);", "output": "SELECT country, ROUND(100.0 * SUM(CASE WHEN accepted_privacy_policy THEN 1 ELSE 0 END) / COUNT(user_id) OVER (PARTITION BY country), 2) AS acceptance_percentage FROM users WHERE accepted_privacy_policy IS NOT NULL AND post_date >= (CURRENT_DATE - INTERVAL '6 months') GROUP BY country;"}
{"input": " NY Knicks\uc758 \ud648 \uacbd\uae30\ub97c \ud55c \ubc88 \uc774\uc0c1 \uad00\ub78c\ud558\uace0 \ub274\uc695\uc5d0 \uac70\uc8fc\ud558\ub294 \ud32c\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc138\uc785\ub2c8\uae4c?", "context": "CREATE TABLE fans (fan_id INT, age INT, city VARCHAR(20)); CREATE TABLE tickets (ticket_id INT, fan_id INT, team_id INT); CREATE TABLE teams (team_id INT, team_name VARCHAR(20)); INSERT INTO teams (team_id, team_name) VALUES (1, 'NY Knicks'); INSERT INTO fans (fan_id, age, city) VALUES (1, 30, 'New York'); INSERT INTO tickets (ticket_id, fan_id, team_id) VALUES (1, 1, 1);", "output": "SELECT AVG(fans.age) FROM fans INNER JOIN tickets ON fans.fan_id = tickets.fan_id INNER JOIN teams ON tickets.team_id = teams.team_id WHERE teams.team_name = 'NY Knicks' AND fans.city = 'New York' GROUP BY fans.age HAVING COUNT(fans.fan_id) >= 1;"}
{"input": " \ud654\uc7a5\ud488 \ube0c\ub79c\ub4dc\uc758 \ud3c9\uade0 \ud06c\ub8e8\uc5bc\ud2f0 \ud504\ub9ac \ub4f1\uae09\uc740 \uc5b4\ub290 \uc815\ub3c4\uc778\uac00\uc694?", "context": "CREATE TABLE brand_cruelty_rating (brand_name VARCHAR(100), cruelty_free_rating DECIMAL(3,2)); INSERT INTO brand_cruelty_rating (brand_name, cruelty_free_rating) VALUES ('Lush', 4.8), ('The Body Shop', 4.6), ('Pacifica', 4.9), ('Kat Von D', 5.0), ('Cover FX', 4.5);", "output": "SELECT AVG(cruelty_free_rating) FROM brand_cruelty_rating WHERE is_cruelty_free = true;"}
{"input": " CO2 \ubc30\ucd9c\ub7c9\uc774 \uac00\uc7a5 \ub192\uc740 \ucc44\uad74 \uc791\uc5c5\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE mining_operations (operation_id INT, operation_name VARCHAR(50), location VARCHAR(50)); CREATE TABLE co2_emissions (operation_id INT, co2_emissions_tonnes INT); INSERT INTO mining_operations (operation_id, operation_name, location) VALUES (1, 'Operation A', 'USA'), (2, 'Operation B', 'Canada'), (3, 'Operation C', 'Mexico'); INSERT INTO co2_emissions (operation_id, co2_emissions_tonnes) VALUES (1, 1000), (2, 1500), (3, 500);", "output": "DELETE FROM mining_operations WHERE operation_id = (SELECT operation_id FROM co2_emissions ORDER BY co2_emissions_tonnes DESC LIMIT 1); DELETE FROM co2_emissions WHERE operation_id = (SELECT operation_id FROM co2_emissions ORDER BY co2_emissions_tonnes DESC LIMIT 1);"}
{"input": " 'NYC'\uc640 'San Francisco' \ub808\uc2a4\ud1a0\ub791\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uba54\ub274 \ud56d\ubaa9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Restaurants (RestaurantID INT, Name VARCHAR(50), Location VARCHAR(50)); CREATE TABLE MenuItems (MenuItemID INT, RestaurantID INT, Name VARCHAR(50), Price DECIMAL(5,2));", "output": "SELECT MenuItems.Name FROM MenuItems JOIN Restaurants ON MenuItems.RestaurantID = Restaurants.RestaurantID WHERE Restaurants.Location = 'NYC' INTERSECT SELECT MenuItems.Name FROM MenuItems JOIN Restaurants ON MenuItems.RestaurantID = Restaurants.RestaurantID WHERE Restaurants.Location = 'San Francisco';"}
{"input": " \uc811\uadfc\uc131 \uae30\ub2a5\uc744 \uac16\ucd98 \uae30\ucc28\uc5ed\uc740 \uc5b4\ub514\uc778\uac00\uc694?", "context": "CREATE TABLE train_stations (station_id INT, station_name TEXT, is_accessible BOOLEAN);  INSERT INTO train_stations (station_id, station_name, is_accessible) VALUES (1, 'Union Station', true), (2, 'City Hall', false), (3, 'Downtown Crossing', true);", "output": "SELECT station_id, station_name, is_accessible   FROM train_stations   WHERE is_accessible = true;"}
{"input": " \uae30\uacc4\ub098 \ud654\ud559\ubb3c\uc9c8\uc774 \uc5c6\ub294 \ubd80\uc11c\uc640 \ud574\ub2f9 \ubd80\uc11c\uc5d0\uc11c \uc77c\ud558\ub294 \uc9c1\uc6d0\uc744 \uc2dd\ubcc4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Departments (DepartmentID INT, DepartmentName VARCHAR(20)); INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (5, 'Quality Control'), (6, 'Regulatory Affairs'), (7, 'Product Innovation'); CREATE TABLE Employees (EmployeeID INT, FirstName VARCHAR(20), LastName VARCHAR(20), Department VARCHAR(20)); INSERT INTO Employees (EmployeeID, FirstName, LastName, Department) VALUES (5, 'Alex', 'Lee', 'Quality Control'), (6, 'Clara', 'Martinez', 'Regulatory Affairs'), (7, 'David', 'Gonzalez', 'Product Innovation');", "output": "SELECT D.DepartmentName, Employees.FirstName, Employees.LastName FROM Departments D LEFT JOIN (Chemicals RIGHT JOIN Employees ON Chemicals.Department = Employees.Department) ON D.DepartmentName = Employees.Department WHERE Chemicals.Department IS NULL;"}
{"input": " W\uc9c0\uc5ed \uad6d\ubc29\uc0ac\uc5c5\uc758 \uac00\uc7a5 \ube60\ub978 \uc2dc\uc791\uc77c\uacfc \uac00\uc7a5 \ub2a6\uc740 \uc2dc\uc791\uc77c\uc740 \uc5b8\uc81c\uc778\uac00\uc694?", "context": "CREATE TABLE DefenseProjects (project_id INT, region VARCHAR(50), start_date DATE); INSERT INTO DefenseProjects (project_id, region, start_date) VALUES (1, 'W', '2020-01-01'); INSERT INTO DefenseProjects (project_id, region, start_date) VALUES (2, 'W', '2021-01-01');", "output": "SELECT region, MIN(start_date) as earliest_start_date, MAX(start_date) as latest_start_date FROM DefenseProjects WHERE region = 'W' GROUP BY region;"}
{"input": " \ubbf8\uad6d\uc5d0\uc11c \uacf5\uacf5\ub3c4\uc11c\uad00\uc774 \uac00\uc7a5 \ub9ce\uc740 \uc8fc\uc758 \uc778\uad6c \uc21c\uc704\ub294 \uba87 \uc704\uc785\ub2c8\uae4c?", "context": "CREATE TABLE State (StateName VARCHAR(50), Country VARCHAR(50), NumberOfPublicLibraries INT, Population INT); INSERT INTO State (StateName, Country, NumberOfPublicLibraries, Population) VALUES ('California', 'United States', 1500, 39500000), ('Texas', 'United States', 500, 29500000), ('New York', 'United States', 1000, 20000000);", "output": "SELECT ROW_NUMBER() OVER (ORDER BY NumberOfPublicLibraries DESC) AS PopulationRank, StateName FROM State WHERE Country = 'United States';"}
{"input": " \ucd5c\uadfc \uc774\uba54\uc77c\uc744 \ubcc0\uacbd\ud55c \uc7ac\ubb34 \uc0c1\ub2f4\uc0ac\uc758 \uc5f0\ub77d\ucc98 \uc815\ubcf4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc138\uc694.", "context": "CREATE TABLE financial_advisors (advisor_id INT, name VARCHAR(50), email VARCHAR(50));", "output": "UPDATE financial_advisors SET email = 'jane.doe_new_email@example.com' WHERE advisor_id IN (SELECT advisor_id FROM (SELECT advisor_id, ROW_NUMBER() OVER(ORDER BY advisor_id) AS rn FROM financial_advisors WHERE name = 'Jane Doe') AS sq WHERE rn = 1);"}
{"input": " \ud604\uc7ac\uae4c\uc9c0 \ud65c\ub3d9 \uc911\uc778 \uc704\uc131\uc744 \ubc1c\uc0ac\ud55c \uad6d\uac00\ub294 \uc5b4\ub514\uc774\uba70, \ud574\ub2f9 \uc704\uc131\uc744 \uc81c\uc870\ud558\ub294 \ub370 \uc0ac\uc6a9\ub41c \uc790\uc7ac\uc758 \ucd1d\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Manufacturing (ManufacturingID INT PRIMARY KEY, SatelliteID INT, MaterialName VARCHAR(50), Quantity INT); INSERT INTO Manufacturing (ManufacturingID, SatelliteID, MaterialName, Quantity) VALUES (1, 1, 'Titanium', 500); INSERT INTO Manufacturing (ManufacturingID, SatelliteID, MaterialName, Quantity) VALUES (2, 2, 'Aluminum', 300);", "output": "SELECT C.Country, SUM(M.Quantity) FROM Satellites S INNER JOIN Countries C ON S.Country = C.CountryCode INNER JOIN Manufacturing M ON S.SatelliteID = M.SatelliteID WHERE S.Status = 'Active' GROUP BY C.Country;"}
{"input": " 2021\ub144 \ud504\ub85c\uadf8\ub7a8 D\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uac04\uc744 \uc790\uc6d0\ubd09\uc0ac\ud55c \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Volunteers (id INT, user_id INT, program VARCHAR(50), hours DECIMAL(10, 2), volunteer_date DATE); INSERT INTO Volunteers (id, user_id, program, hours, volunteer_date) VALUES (1, 201, 'program A', 3.00, '2021-02-01'); INSERT INTO Volunteers (id, user_id, program, hours, volunteer_date) VALUES (2, 202, 'program B', 2.50, '2021-03-05'); INSERT INTO Volunteers (id, user_id, program, hours, volunteer_date) VALUES (5, 205, 'program D', 5.50, '2021-06-01');", "output": "SELECT user_id, SUM(hours) FROM Volunteers WHERE program = 'program D' AND volunteer_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY user_id ORDER BY SUM(hours) DESC LIMIT 1;"}
{"input": " 1950\ub144 \uc774\uc804\uc5d0 \uac74\uc124\ub41c \ub310\uc744 \uc804\uc2dc\ud558\uc138\uc694", "context": "CREATE TABLE Infrastructure (id INT, name VARCHAR(100), type VARCHAR(50), build_date DATE); INSERT INTO Infrastructure (id, name, type, build_date) VALUES (5, 'Hoover Dam', 'Dam', '1936-03-01'), (6, 'Glen Canyon Dam', 'Dam', '1966-09-13');", "output": "SELECT name FROM Infrastructure WHERE type = 'Dam' AND build_date < '1950-01-01';"}
{"input": " \uace0\uc804 \ubbf8\uc220 \uc804\uc2dc\ud68c\uc758 \uc5b4\ub9b0\uc774 \ud2f0\ucf13\uc73c\ub85c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE exhibitions (name VARCHAR(50), tickets_sold INT, price DECIMAL(5,2)); INSERT INTO exhibitions (name, tickets_sold, price) VALUES ('Modern Art', 300, 20.00), ('Classic Art', 250, 15.00);", "output": "SELECT SUM(price * tickets_sold) FROM exhibitions WHERE name = 'Classic Art' AND tickets_sold = (SELECT SUM(tickets_sold) FROM tickets WHERE age_group = 'Child');"}
{"input": " 2015\ub144\ubd80\ud130 2020\ub144 \uc0ac\uc774\uc5d0 \uac1c\ubd09\ub41c \uc601\ud654\uc758 \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Movies (title TEXT, year INTEGER, budget INTEGER); INSERT INTO Movies (title, year, budget) VALUES ('Movie1', 2015, 50000000), ('Movie2', 2016, 60000000), ('Movie3', 2017, 70000000), ('Movie4', 2018, 80000000), ('Movie5', 2019, 90000000), ('Movie6', 2020, 100000000);", "output": "SELECT AVG(budget) FROM Movies WHERE year BETWEEN 2015 AND 2020;"}
{"input": " \uce90\ub098\ub2e4 \uae08\uc735\uae30\uad00\uc774 \uc9c0\uae09\ud55c \uc0ac\ud68c\uc801 \ucc45\uc784 \ub300\ucd9c\uc758 \ucd1d \uac00\uce58\ub294 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE canada_institutions (institution_id INT, institution_name TEXT); CREATE TABLE loans_canada (loan_id INT, institution_id INT, loan_amount FLOAT, is_socially_responsible BOOLEAN);", "output": "SELECT SUM(loans_canada.loan_amount) FROM loans_canada JOIN canada_institutions ON loans_canada.institution_id = canada_institutions.institution_id WHERE loans_canada.is_socially_responsible = TRUE AND canada_institutions.institution_id IN (SELECT loans_canada.institution_id FROM loans_canada JOIN canada_institutions ON loans_canada.institution_id = canada_institutions.institution_id WHERE canada_institutions.region = 'Canada');"}
{"input": " \uac00\uc7a5 \ud070 \ubaa9\ucd08\uc9c0\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\ub294 \ub3d9\ubb3c\uc758 \uc885\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE animals (id INT PRIMARY KEY, name VARCHAR(50), age INT, species VARCHAR(50)); INSERT INTO animals (id, name, age, species) VALUES (1, 'Daisy', 3, 'Goat'); CREATE TABLE pastures (id INT PRIMARY KEY, size INT, animal_id INT, FOREIGN KEY (animal_id) REFERENCES animals(id)); INSERT INTO pastures (id, size, animal_id) VALUES (1, 200, 1);", "output": "SELECT animals.species FROM animals INNER JOIN pastures ON animals.id = pastures.animal_id WHERE pastures.size = (SELECT MAX(size) FROM pastures);"}
{"input": " \ub0a8\ubbf8\uc5d0\uc11c VR \uac8c\uc784\uc744 \ud50c\ub808\uc774\ud55c \ubaa8\ub4e0 \ud50c\ub808\uc774\uc5b4\uc758 \uc774\ub984\uc744 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE players (player_id int, age int, gender varchar(10), country varchar(20)); INSERT INTO players (player_id, age, gender, country) VALUES (1, 25, 'Male', 'Brazil'), (2, 30, 'Female', 'Argentina'), (3, 22, 'Male', 'Colombia'), (4, 35, 'Female', 'Peru'); CREATE TABLE game_sessions (session_id int, player_id int, game_name varchar(20), game_type varchar(10), duration int); INSERT INTO game_sessions (session_id, player_id, game_name, game_type, duration) VALUES (1, 1, 'Racing Game', 'Non-VR', 60), (2, 1, 'Shooter Game', 'VR', 90), (3, 2, 'Strategy Game', 'Non-VR', 120), (4, 3, 'Action Game', 'Non-VR', 180), (5, 4, 'Shooter Game', 'VR', 200); CREATE TABLE game_catalog (game_name varchar(20), game_type varchar(10)); INSERT INTO game_catalog (game_name, game_type) VALUES ('Racing Game', 'Non-VR'), ('Shooter Game', 'VR'), ('Strategy Game', 'Non-VR'), ('Action Game', 'Non-VR');", "output": "SELECT DISTINCT players.player_id, players.country, game_sessions.game_name FROM players INNER JOIN game_sessions ON players.player_id = game_sessions.player_id INNER JOIN game_catalog ON game_sessions.game_name = game_catalog.game_name WHERE players.country LIKE 'South%' AND game_catalog.game_type = 'VR';"}
{"input": " 2022\ub144 \uc6d4\ub4dc\ucef5\uc5d0 \ucc38\uac00\ud55c \ud504\ub9ac\ubbf8\uc5b4\ub9ac\uadf8 \ucd95\uad6c \uc120\uc218\ub4e4\uc758 \ud3c9\uade0 \uc5f0\ub839\uc740 \uba87 \uc0b4\uc778\uac00\uc694?", "context": "CREATE TABLE IF NOT EXISTS players (id INT, name VARCHAR(50), age INT, team VARCHAR(50), league VARCHAR(50));", "output": "SELECT AVG(age) FROM players WHERE team IN (SELECT name FROM teams WHERE league = 'Premier League') AND name IN (SELECT team FROM games WHERE tournament = '2022 World Cup');"}
{"input": " \uc9c1\uc6d0\uc774 \uc5ec\ub7ec \uc8fc\uc81c\uc5d0 \ub300\ud55c \uae30\uc0ac\ub97c \uac8c\uc2dc\ud588\ub294\uc9c0 \ud655\uc778", "context": "CREATE TABLE Employees (id INT, name VARCHAR(50)); CREATE TABLE Articles (id INT, author_id INT, topic VARCHAR(50), published_date DATE); INSERT INTO Employees (id, name) VALUES (1, 'John Doe'); INSERT INTO Employees (id, name) VALUES (2, 'Jane Smith'); INSERT INTO Articles (id, author_id, topic, published_date) VALUES (1, 1, 'Politics', '2022-01-01'); INSERT INTO Articles (id, author_id, topic, published_date) VALUES (2, 1, 'Sports', '2022-01-02'); INSERT INTO Articles (id, author_id, topic, published_date) VALUES (3, 2, 'Politics', '2022-01-03');", "output": "SELECT author_id FROM Articles GROUP BY author_id HAVING COUNT(DISTINCT topic) > 1;"}
{"input": " \uc9c0\ub09c 5\ub144\uac04 \ud504\ub791\uc2a4\uc5d0\uc11c \uac1c\ucd5c\ub41c \uc790\ub3d9\ucc28 \uc804\uc2dc\ud68c\ub294 \ucd1d \uba87 \ubc88\uc785\ub2c8\uae4c?", "context": "CREATE TABLE AutoShows (Id INT, Location VARCHAR(50), Year INT, TotalAttendees INT); INSERT INTO AutoShows (Id, Location, Year, TotalAttendees) VALUES (1, 'Paris', 2018, 150000), (2, 'Lyon', 2020, 80000);", "output": "SELECT SUM(TotalAttendees) FROM AutoShows WHERE Location = 'France' AND Year >= (SELECT MAX(Year) - 5 FROM AutoShows);"}
{"input": " \uac01 \ub9e4\uc7a5\uc5d0\uc11c \ud310\ub9e4\ub41c \ube44\uc9c0\uc18d \uac00\ub2a5 \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc774\uba70, \uacb0\uacfc\ub97c \ud544\ud130\ub9c1\ud558\uc5ec 700\uac1c \uc774\uc0c1\uc758 \uc81c\ud488\uc774 \ud310\ub9e4\ub41c \ub9e4\uc7a5\ub9cc \ud45c\uc2dc\ud569\ub2c8\uae4c?", "context": "CREATE TABLE store (id INT PRIMARY KEY, name VARCHAR(100), location VARCHAR(50), sustainable BOOLEAN); CREATE TABLE sales (id INT PRIMARY KEY, store_id INT, product_id INT, quantity INT, date DATE); CREATE TABLE product (id INT PRIMARY KEY, name VARCHAR(100), manufacturer_id INT, price DECIMAL(5,2), sustainable BOOLEAN); CREATE TABLE manufacturer (id INT PRIMARY KEY, name VARCHAR(100), country VARCHAR(50), sustainable BOOLEAN);", "output": "SELECT store.name as store_name, SUM(sales.quantity) as total_sold FROM sales INNER JOIN store ON sales.store_id = store.id INNER JOIN product ON sales.product_id = product.id WHERE product.sustainable = FALSE GROUP BY store.name HAVING total_sold > 700;"}
{"input": " \uc9c0\uc18d \uac00\ub2a5\ud55c \uba54\ub274 \ud56d\ubaa9\uc5d0\uc11c \ubc1c\uc0dd\ud55c \ucd1d \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE menus (menu_id INT, menu_name VARCHAR(255), type VARCHAR(255), price DECIMAL(5,2), sustainable BOOLEAN); INSERT INTO menus (menu_id, menu_name, type, price, sustainable) VALUES (1, 'Quinoa Salad', 'Vegetarian', 12.99, true), (2, 'Margherita Pizza', 'Non-Vegetarian', 9.99, false), (3, 'Falafel Wrap', 'Vegetarian', 8.99, true), (5, 'Vegan Burger', 'Vegan', 10.99, true), (6, 'Vegan Tacos', 'Vegan', 7.99, true);", "output": "SELECT SUM(price) FROM menus WHERE sustainable = true;"}
{"input": " 'user_location' \uc2a4\ud0a4\ub9c8\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc704\uce58 \ubd84\ud3ec\ub294 \uc5b4\ub5bb\uac8c \ub418\ub098\uc694?", "context": "CREATE SCHEMA user_location;CREATE TABLE user_location.user_locations (user_id INT, location VARCHAR(30));", "output": "SELECT location, COUNT(user_id) FROM user_location.user_locations GROUP BY location;"}
{"input": " '\ube44\uac70\ub2c8\uc998'\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uacfc \uc0c1\ud638\uc791\uc6a9\ud55c \uc801\uc774 \uc5c6\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE interactions (user_id INT, post_id INT); CREATE TABLE posts (id INT, content TEXT);", "output": "SELECT DISTINCT u.username FROM users u LEFT JOIN interactions i ON u.id = i.user_id LEFT JOIN posts p ON i.post_id = p.id WHERE p.content NOT LIKE '%veganism%';"}
{"input": " \ub2e8\uc77c \ucffc\ub9ac\ub85c \ud074\ub798\uc2dd\uc744 \uc81c\uc678\ud55c \uc7a5\ub974\ubcc4 \ucd1d \uc2a4\ud2b8\ub9bc \uc218\ub97c \ud45c\uc2dc", "context": "CREATE TABLE genre_streams (genre VARCHAR(10), stream_count BIGINT);", "output": "SELECT genre, SUM(stream_count) FROM genre_streams WHERE genre != 'classical' GROUP BY genre;"}
{"input": " \ubc84\uc9c0\ub2c8\uc544\uc758 \ubc29\uc0b0\uc5c5\uccb4\ub2f9 \ud3c9\uade0 \ud1f4\uc5ed \uad70\uc778 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ContractorVets (company TEXT, state TEXT, num_veteran_employees INTEGER); INSERT INTO ContractorVets (company, state, num_veteran_employees) VALUES ('Contractor A', 'Virginia', 150), ('Contractor B', 'Virginia', 200), ('Contractor C', 'Maryland', 100);", "output": "SELECT AVG(num_veteran_employees) FROM ContractorVets WHERE state = 'Virginia';"}
{"input": " Sally\uc758 \uc810\uc218\ub97c 70\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\ud6c4\uc758 \uc7ac\ubb34 \ub2a5\ub825 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc788\ub294 \uace0\uac1d\uc758 \ucd1d \uc7ac\ubb34 \ub2a5\ub825 \uc810\uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE financial_capability (client_id INT, name TEXT, score INT); INSERT INTO financial_capability (client_id, name, score) VALUES (8, 'Aisha', 75), (9, 'Khalid', 80), (10, 'Zainab', 70), (6, 'Sally', 75);", "output": "WITH updated_financial_capability AS (UPDATE financial_capability SET score = 70 WHERE name = 'Sally') SELECT SUM(score) FROM financial_capability;"}
{"input": " \uc774\ubbfc\ubc95 \uc804\ubb38 \ubcc0\ud638\uc0ac\uac00 \ub2f4\ub2f9\ud55c \uc0ac\uac74\uc758 \ucd1d \uccad\uad6c\uae08\uc561\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Cases (CaseID INT PRIMARY KEY, CaseName VARCHAR(50), CaseType VARCHAR(50), LawyerID INT, ClientID INT); INSERT INTO Cases (CaseID, CaseName, CaseType, LawyerID, ClientID) VALUES (1, 'Sample Case', 'Immigration', 1, 1); CREATE TABLE Lawyers (LawyerID INT PRIMARY KEY, Name VARCHAR(50), SpecializedIn VARCHAR(50)); INSERT INTO Lawyers (LawyerID, Name, SpecializedIn) VALUES (1, 'Alex Garcia', 'Immigration'); CREATE TABLE Billing (BillingID INT PRIMARY KEY, CaseID INT, Hours INT, BillAmount FLOAT); INSERT INTO Billing (BillingID, CaseID, Hours, BillAmount) VALUES (1, 1, 20, 3000.0);", "output": "SELECT SUM(Billing.BillAmount) FROM Cases INNER JOIN Lawyers ON Cases.LawyerID = Lawyers.LawyerID INNER JOIN Billing ON Cases.CaseID = Billing.CaseID WHERE Lawyers.SpecializedIn = 'Immigration';"}
{"input": " 2020\ub144\uc5d0 \uac01 \uc790\uce58\uad6c\uc5d0\uc11c \ub300\uc911\uad50\ud1b5\uc744 \uba87 \ubc88\uc774\ub098 \uc774\uc6a9\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE PublicTransportation (Year INT, Borough VARCHAR(20), Trips INT); INSERT INTO PublicTransportation (Year, Borough, Trips) VALUES (2020, 'Manhattan', 5000000), (2020, 'Brooklyn', 4000000), (2020, 'Queens', 3500000), (2020, 'Bronx', 3000000), (2020, 'Staten Island', 2000000);", "output": "SELECT Borough, Year, SUM(Trips) as Total_Trips FROM PublicTransportation GROUP BY Borough, Year;"}
{"input": " \ucd1d \ud310\ub9e4 \uc218\uc775\uc744 \uae30\uc900\uc73c\ub85c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud558\uba74 \uad6d\uac00\ubcc4 \ucd1d \ud310\ub9e4 \uc218\uc775\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE Countries (CountryID INT, CountryName VARCHAR(255));CREATE TABLE Garments (GarmentID INT, CountryID INT, SalePrice DECIMAL(10,2));CREATE TABLE Sales (SaleID INT, GarmentID INT, SaleDate DATE, Quantity INT);", "output": "SELECT c.CountryName, SUM(g.SalePrice * s.Quantity) AS TotalRevenue FROM Countries c JOIN Garments g ON c.CountryID = g.CountryID JOIN Sales s ON g.GarmentID = s.GarmentID GROUP BY c.CountryName ORDER BY TotalRevenue DESC;"}
{"input": " 21\uc138\uae30\uc5d0\ub294 \uac01\uad6d\uc774 \uba87 \uac1c\uc758 \uc704\uc131\uc744 \ubc1c\uc0ac\ud588\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE satellites (satellite_id INT, satellite_name VARCHAR(100), country VARCHAR(50), launch_date DATE); INSERT INTO satellites (satellite_id, satellite_name, country, launch_date) VALUES (1, 'Sentinel-1A', 'France', '2012-04-03'); INSERT INTO satellites (satellite_id, satellite_name, country, launch_date) VALUES (2, 'Chandrayaan-1', 'India', '2008-10-22'); CREATE TABLE countries (country_id INT, country_name VARCHAR(100), launch_count INT); INSERT INTO countries (country_id, country_name, launch_count) VALUES (1, 'United States', 0); INSERT INTO countries (country_id, country_name, launch_count) VALUES (2, 'China', 0);", "output": "SELECT country, COUNT(*) as launch_count FROM satellites WHERE YEAR(launch_date) >= 2000 GROUP BY country; UPDATE countries SET launch_count = (SELECT COUNT(*) FROM satellites WHERE YEAR(launch_date) >= 2000 AND satellites.country = countries.country_name) WHERE TRUE; SELECT country_name, launch_count FROM countries;"}
{"input": " \ud50c\ub85c\ub9ac\ub2e4\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \uc2dc\uace8 \uc758\ub8cc \uc2dc\uc124\uc758 \ucd1d \uc218\uc6a9 \ub2a5\ub825\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE facilities (id INT, name TEXT, location TEXT, capacity INT); INSERT INTO facilities (id, name, location, capacity) VALUES (1, 'Rural Family Health Center', 'Florida', 50), (2, 'Rural General Hospital', 'Florida', 200), (3, 'Rural Community Clinic', 'Georgia', 25);", "output": "SELECT SUM(capacity) FROM facilities WHERE location = 'Florida';"}
{"input": " \ud2b9\uc815 \uc5f0\ub3c4\uc5d0 \uc6d4\ubcc4 \ud615\uc0ac \uc0ac\ubc95 \uac1c\ud601 \uc0ac\uac74 \uc218\uc758 \ubcc0\ud654\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE CriminalJusticeReformEvents (id INT, event_date DATE, events INT); INSERT INTO CriminalJusticeReformEvents (id, event_date, events) VALUES (1, '2022-01-01', 10), (2, '2022-02-01', 15), (3, '2022-03-01', 18), (4, '2022-04-01', 20), (5, '2022-05-01', 25), (6, '2022-06-01', 28), (7, '2022-07-01', 30), (8, '2022-08-01', 35), (9, '2022-09-01', 38), (10, '2022-10-01', 40), (11, '2022-11-01', 45), (12, '2022-12-01', 48);", "output": "SELECT EXTRACT(MONTH FROM event_date) as month, (LEAD(events) OVER (ORDER BY event_date) - events) as change FROM CriminalJusticeReformEvents WHERE EXTRACT(YEAR FROM event_date) = 2022;"}
{"input": "2021\ub144 R&D \uc9c0\ucd9c \uae30\uc900 \uc0c1\uc704 5\uac1c \uc758\uc57d\ud488\uacfc \ud574\ub2f9 R&D \ube44\uc6a9\uc758 \ub204\uacc4\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE r_and_d_expenditures (id INT, drug_name VARCHAR(255), r_and_d_cost DECIMAL(10, 2), expenditure_date DATE);", "output": "SELECT drug_name, r_and_d_cost, SUM(r_and_d_cost) OVER (ORDER BY r_and_d_cost DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as running_total FROM r_and_d_expenditures WHERE expenditure_date BETWEEN '2021-01-01' AND '2021-12-31' ORDER BY running_total DESC, drug_name LIMIT 5;"}
{"input": " \uc544\uce68 \uc2dc\uac04\ub300\uc5d0 \uc5b4\ub5a4 \uba54\ub274\uac00 \uac00\uc7a5 \ub9ce\uc774 \ud314\ub838\ub098\uc694?", "context": "CREATE TABLE Breakfast_Orders(Order_ID INT, Menu_Item VARCHAR(30), Quantity INT); INSERT INTO Breakfast_Orders(Order_ID, Menu_Item, Quantity) VALUES(1, 'Scrambled Tofu', 20), (2, 'Pancakes', 15), (3, 'Scrambled Tofu', 25);", "output": "SELECT Menu_Item, SUM(Quantity) as Total_Quantity, RANK() OVER (ORDER BY SUM(Quantity) DESC) as Rank FROM Breakfast_Orders GROUP BY Menu_Item;"}
{"input": " \uc9c0\ub09c \ub2ec\uc5d0 \ud310\ub9e4\ub41c \uc9c0\uc18d \uac00\ub2a5\ud55c \uc758\ub958 \ud488\ubaa9\uc758 \uc218\ub97c \uac00\uc838\uc635\ub2c8\ub2e4.", "context": "CREATE TABLE clothing_items (id INT PRIMARY KEY, name VARCHAR(50), category VARCHAR(20), sustainable BOOLEAN); CREATE TABLE inventory (id INT PRIMARY KEY, clothing_item_id INT, size VARCHAR(10), quantity INT); CREATE TABLE sales (id INT PRIMARY KEY, inventory_id INT, sale_date DATE, quantity INT);", "output": "SELECT SUM(quantity) FROM sales JOIN inventory ON sales.inventory_id = inventory.id JOIN clothing_items ON inventory.clothing_item_id = clothing_items.id WHERE clothing_items.sustainable = TRUE AND sale_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"}
{"input": " \uc9c0\ub09c 9\uac1c\uc6d4 \ub3d9\uc548 \uce90\ub098\ub2e4 \uc790\uc6d0\ubd09\uc0ac\uc790\ub4e4\uc774 \uc608\uc220 \ubc0f \ubb38\ud654 \ud504\ub85c\uadf8\ub7a8\uc5d0 \uae30\uc5ec\ud55c \ucd1d \uc2dc\uac04\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE volunteer_hours (id INT, volunteer_id INT, program_id INT, hours DECIMAL(10,2), contribution_date DATE); CREATE TABLE volunteers (id INT, country VARCHAR(50)); CREATE TABLE programs (id INT, focus_area VARCHAR(50)); INSERT INTO volunteer_hours (id, volunteer_id, program_id, hours, contribution_date) VALUES (1, 1, 1, 3.0, '2021-04-01'); INSERT INTO volunteers (id, country) VALUES (1, 'Canada'); INSERT INTO programs (id, focus_area) VALUES (1, 'Arts and Culture');", "output": "SELECT SUM(hours) FROM volunteer_hours JOIN volunteers ON volunteer_hours.volunteer_id = volunteers.id JOIN programs ON volunteer_hours.program_id = programs.id WHERE volunteers.country = 'Canada' AND programs.focus_area = 'arts and culture programs' AND contribution_date >= DATE_SUB(CURDATE(), INTERVAL 9 MONTH);"}
{"input": " 2022\ub144 1\ubd84\uae30\uc5d0 \uad6d\uac00\ubcc4\ub85c \uba87 \uac1c\uc758 \uae08\uc735 \uc5ed\ub7c9 \ud504\ub85c\uadf8\ub7a8\uc774 \ucd9c\uc2dc\ub418\uc5c8\ub098\uc694?", "context": "CREATE TABLE financial_capability_programs (id INT PRIMARY KEY, program_name TEXT, launch_date DATE, country TEXT);", "output": "SELECT country, COUNT(*) FROM financial_capability_programs WHERE launch_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY country;"}
{"input": " \uac01 \uc74c\uc545 \ud398\uc2a4\ud2f0\ubc8c \uc7a5\ub974\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud55c \uc21c \uc0ac\uc6a9\uc790 \uc218\ub294 \uba87 \uba85\uc785\ub2c8\uae4c?", "context": "CREATE TABLE genre_artist (artist_id INT, genre VARCHAR(255));", "output": "SELECT g.genre, COUNT(DISTINCT u.user_id) as num_users FROM user_streams u JOIN festival_performances f ON u.artist_id = f.artist_id JOIN genre_artist g ON f.artist_id = g.artist_id GROUP BY g.genre;"}
{"input": " 5\ub144 \uc774\uc0c1 \uadfc\ubb34\ud55c \uc9c1\uc6d0\uc758 \ubd80\uc11c\ubcc4 \ud3c9\uade0 \uc5f0\ubd09\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?", "context": "CREATE TABLE EmployeeDemographics (EmployeeID INT, Department VARCHAR(20), YearsWithCompany INT); INSERT INTO EmployeeDemographics (EmployeeID, Department, YearsWithCompany) VALUES (1, 'IT', 6), (2, 'IT', 3), (3, 'HR', 8), (4, 'HR', 1);", "output": "SELECT Department, AVG(Salary) OVER (PARTITION BY Department) AS Avg_Salary FROM Employees WHERE EmployeeID IN (SELECT EmployeeID FROM EmployeeDemographics WHERE YearsWithCompany > 5);"}
{"input": " \uce58\uc544\ubcf4\ud5d8 \ub300\ube44 \uac74\uac15\ubcf4\ud5d8 \uccad\uad6c\uc561\uc758 \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE Claim_Payouts (Policy_Type VARCHAR(20), Claim_Count INT, Total_Payout INT); INSERT INTO Claim_Payouts (Policy_Type, Claim_Count, Total_Payout) VALUES ('Health', 100, 5000000), ('Dental', 80, 300000);", "output": "SELECT Policy_Type, SUM(Total_Payout) AS Total_Paid_Out, (SUM(Total_Payout) * 100.0 / (SELECT SUM(Total_Paid_Out) FROM (SELECT Policy_Type, SUM(Total_Payout) AS Total_Paid_Out FROM Claim_Payouts GROUP BY Policy_Type) AS Total_Paid_Out)) AS Percentage_Paid_Out FROM Claim_Payouts GROUP BY Policy_Type;"}
{"input": " 2021\ub144\uc5d0\uc11c 2022\ub144 \uc0ac\uc774\uc5d0 \ub18d\ucd0c \uc778\ud504\ub77c \ud22c\uc790\uc758 \ubcc0\ud654\uc728\uc744 \uad6d\uac00\ubcc4\ub85c \uad6c\ubd84\ud558\uc5ec \uacc4\uc0b0\ud558\uace0 \uac00\uc7a5 \ub192\uc740 \uc99d\uac00\uc728\ub85c \uc815\ub82c\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE rural_investments (id INT, country TEXT, year INT, investment INT, PRIMARY KEY (id)); INSERT INTO rural_investments (id, country, year, investment) VALUES (1, 'Country A', 2021, 200000), (2, 'Country A', 2022, 220000), (3, 'Country B', 2021, 250000), (4, 'Country B', 2022, 275000);", "output": "SELECT country, ((investment - LAG(investment, 1) OVER (PARTITION BY country ORDER BY year)) * 100.0 / LAG(investment, 1) OVER (PARTITION BY country ORDER BY year)) as pct_change FROM rural_investments WHERE year IN (2021, 2022) GROUP BY country ORDER BY pct_change DESC;"}
{"input": " \ubd81\ubbf8 \uc9c0\uc5ed\uc758 \uc724\ub9ac\uc801 AI \uc774\ub2c8\uc154\ud2f0\ube0c\uc5d0 \ub300\ud55c \ud3c9\uade0 \uc608\uc0b0\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE ethical_ai_initiatives (initiative_id INT, region VARCHAR(20), budget DECIMAL(10,2)); INSERT INTO ethical_ai_initiatives (initiative_id, region, budget) VALUES (1, 'North America', 50000.00), (2, 'Europe', 100000.00), (3, 'South America', 25000.00);", "output": "SELECT AVG(budget) FROM ethical_ai_initiatives WHERE region = 'North America';"}
{"input": " 2018\ub144\ubd80\ud130 2020\ub144\uae4c\uc9c0 \uad6d\uac00\ubcc4 \ubc29\ubb38\uc790 \uc99d\uac00\uc728\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c?", "context": "CREATE TABLE CountryVisitorData (country_id INT, year INT, visitors INT); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (1, 2018, 5000000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (1, 2019, 5500000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (1, 2020, 5750000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (2, 2018, 8000000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (2, 2019, 8500000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (2, 2020, 9000000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (3, 2018, 6000000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (3, 2019, 6250000); INSERT INTO CountryVisitorData (country_id, year, visitors) VALUES (3, 2020, 6500000);", "output": "SELECT country_id, (visitors - LAG(visitors, 1) OVER (PARTITION BY country_id ORDER BY year)) * 100.0 / LAG(visitors, 1) OVER (PARTITION BY country_id ORDER BY year) as growth_rate FROM CountryVisitorData;"}
{"input": " \ubc1c\ub9ac \uac01 \ub9c8\uc744\uc758 \uc804\uc5fc\ubcd1 \uc0ac\ub840 \uc218\ub97c \uc0ac\ub840 \uc218\uac00 \ub9ce\uc740 \uc21c\uc11c\ub300\ub85c \uc815\ub82c\ud588\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE infectious_disease_bali (village VARCHAR(20), cases INT); INSERT INTO infectious_disease_bali (village, cases) VALUES ('Ubud', 100), ('Kuta', 150), ('Seminyak', 200), ('Canggu', 50);", "output": "SELECT village, cases, RANK() OVER (ORDER BY cases DESC) AS rank FROM infectious_disease_bali;"}
{"input": " \ub274\uc695\uc8fc\uc5d0\ub294 \uc7ac\ud65c\uc6a9 \uc2dc\uc124\uc774 \uba87 \uac1c \uc788\uc73c\uba70, \uc804\uccb4 \uc2dc\uc124\uc758 \uba87 \ud37c\uc13c\ud2b8\ub97c \ucc28\uc9c0\ud569\ub2c8\uae4c?", "context": "CREATE TABLE recycling_facilities (id INT, state VARCHAR(20), type VARCHAR(20)); INSERT INTO recycling_facilities (id, state, type) VALUES (1, 'California', 'recycling'), (2, 'New York', 'recycling'), (3, 'California', 'landfill'), (4, 'Texas', 'recycling');", "output": "SELECT COUNT(*) AS total_recycling_facilities, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM recycling_facilities)) AS percentage_of_total FROM recycling_facilities WHERE state = 'New York';"}
{"input": " \uc0ac\uc774\ud2b8 C\uc5d0 \uc788\ub294 \uae08\uc18d \uc720\ubb3c\uc758 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc5f0\ub300\ub294 \uc5b4\ub5bb\uac8c \ub429\ub2c8\uae4c?", "context": "CREATE TABLE artifact_ages (artifact_id INT, site_id INT, artifact_type TEXT, age INT); INSERT INTO artifact_ages (artifact_id, site_id, artifact_type, age) VALUES (1, 1, 'ceramic', 120), (2, 1, 'metal', 150), (3, 1, 'bone', 100), (4, 2, 'ceramic', 180), (5, 2, 'metal', 200), (6, 2, 'bone', 170), (7, 3, 'ceramic', 300), (8, 3, 'metal', 350), (9, 3, 'bone', 320);", "output": "SELECT MIN(age), MAX(age) FROM artifact_ages WHERE site_id = 3 AND artifact_type = 'metal';"}
{"input": " \ube0c\ub77c\uc9c8\uc5d0\uc11c \uac00\uc7a5 \ud65c\ub3d9\uc801\uc778 \uc0ac\uc6a9\uc790 \uc0c1\uc704 5\uba85\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE user_activity (user_id INT, user_name VARCHAR(50), activity INT, activity_date DATE, country VARCHAR(50)); INSERT INTO user_activity (user_id, user_name, activity, activity_date, country) VALUES (1, 'user1', 10, '2022-01-01', 'Brazil'), (2, 'user2', 15, '2022-01-02', 'Brazil'), (3, 'user3', 5, '2022-01-03', 'Brazil');", "output": "SELECT user_name, SUM(activity) as total_activity FROM user_activity WHERE country = 'Brazil' GROUP BY user_name ORDER BY total_activity DESC LIMIT 5;"}
{"input": " \uc9c0\ub09c 2\ub144\uac04 \ub4f1\ub85d\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uad50\uc0ac \uc804\ubb38\uc131 \uac1c\ubc1c \uc6cc\ud06c\uc20d\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE workshop_enrollment (workshop_id INT, workshop_name VARCHAR(50), enrollment INT, date DATE); INSERT INTO workshop_enrollment VALUES (1, 'Tech Tools', 50, '2020-01-01'), (2, 'Diverse Classrooms', 60, '2020-01-02');", "output": "SELECT workshop_name, enrollment, DENSE_RANK() OVER (ORDER BY enrollment DESC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as rank FROM workshop_enrollment;"}
{"input": " \uc9c0\ub09c \ub2ec \ubbf8\uc2dc\uac04 \uc57d\uad6d\uc5d0\uc11c \uac01 \uc81c\ud488 \uc720\ud615\ubcc4\ub85c \uba87 \ub2e8\uc704\uac00 \ud310\ub9e4\ub418\uc5c8\uc2b5\ub2c8\uae4c?", "context": "CREATE TABLE ProductTypes (ProductTypeID INT, ProductType VARCHAR(100)); CREATE TABLE DispensaryTransactions (TransactionID INT, ProductTypeID INT, QuantitySold INT, TransactionDate DATE, DispensaryID INT);", "output": "SELECT PT.ProductType, SUM(DT.QuantitySold) as TotalQuantitySold FROM ProductTypes PT JOIN DispensaryTransactions DT ON PT.ProductTypeID = DT.ProductTypeID WHERE DT.TransactionDate >= DATEADD(month, -1, GETDATE()) AND DT.DispensaryID IN (SELECT DispensaryID FROM Dispensaries WHERE State = 'Michigan') GROUP BY PT.ProductType;"}
{"input": "\ud3c9\uade0\ubcf4\ub2e4 \uce7c\ub85c\ub9ac\uac00 \ub192\uc740 \uc694\ub9ac\uc5d0 \uc7ac\ub8cc\ub97c \uacf5\uae09\ud558\ub294 \uacf5\uae09\uc5c5\uccb4\ub97c \ubaa8\ub450 \ub098\uc5f4\ud558\uc138\uc694.", "context": "CREATE TABLE Vendors (vid INT, name TEXT);CREATE TABLE Dishes (did INT, name TEXT, calorie_content INT);CREATE TABLE Ingredients (iid INT, dish_id INT, vendor_id INT);INSERT INTO Vendors VALUES (1, 'VendorA'), (2, 'VendorB'), (3, 'VendorC');INSERT INTO Dishes VALUES (1, 'DishA', 500), (2, 'DishB', 1500), (3, 'DishC', 800);INSERT INTO Ingredients VALUES (1, 1, 1), (2, 2, 1), (3, 2, 2), (4, 3, 3);", "output": "SELECT DISTINCT Vendors.name FROM Vendors INNER JOIN Ingredients ON Vendors.vid = Ingredients.vendor_id INNER JOIN Dishes ON Ingredients.dish_id = Dishes.did WHERE Dishes.calorie_content > (SELECT AVG(calorie_content) FROM Dishes);"}
{"input": " \ud0dc\ud3c9\uc591\uacfc \ub300\uc11c\uc591 \uc9c0\uc5ed\uc758 \ucd1d \uc9c0\uc5ed\uc0ac\ud68c \uac74\uac15 \ud504\ub85c\uadf8\ub7a8 \uc218\ub294 \uba87 \uac1c\uc785\ub2c8\uae4c?", "context": "CREATE TABLE pacific_programs (region VARCHAR(255), program VARCHAR(255)); INSERT INTO pacific_programs (region, program) VALUES ('Pacific', 'Disaster Preparedness'); INSERT INTO pacific_programs (region, program) VALUES ('Pacific', 'Clean Water Initiative'); CREATE TABLE atlantic_programs (region VARCHAR(255), program VARCHAR(255)); INSERT INTO atlantic_programs (region, program) VALUES ('Atlantic', 'Maternal Health Program'); INSERT INTO atlantic_programs (region, program) VALUES ('Atlantic', 'Substance Abuse Prevention');", "output": "SELECT COUNT(*) FROM pacific_programs UNION ALL SELECT COUNT(*) FROM atlantic_programs;"}
{"input": " \uc0c8\ub85c\uc6b4 \uc790\uae08 \uc870\ub2ec \uae30\ub85d \uc0bd\uc785: 300,000 \uc790\uae08\uc744 \uc870\ub2ec\ud55c \ud68c\uc0ac 'Delta Ltd'", "context": "CREATE TABLE company (id INT, name TEXT); CREATE TABLE funding (id INT, company_id INT, amount INT); INSERT INTO company (id, name) VALUES (1, 'Acme Inc'), (2, 'Beta Corp'), (3, 'Delta Ltd'), (4, 'Epsilon Inc'); INSERT INTO funding (id, company_id, amount) VALUES (1, 1, 100000), (2, 2, 200000), (4, 4, 500000);", "output": "INSERT INTO funding (company_id, amount) VALUES ((SELECT id FROM company WHERE name = 'Delta Ltd'), 300000);"}
{"input": " \uc5ec\ub7ec \uad6d\uac00\uc758 \uc6b0\uc8fc\ube44\ud589\uc0ac\uac00 \ud0d1\uc2b9\ud55c \ubaa8\ub4e0 \uc6b0\uc8fc\uc120\uc744 \uc2dd\ubcc4\ud558\uace0 \uc6b0\uc8fc\uc120 \uc774\ub984\uacfc \ub300\ud45c \uad6d\uac00 \uc218\ub97c \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Spacecraft (id INT, name VARCHAR(50), manufacturer VARCHAR(50), type VARCHAR(50), launch_date DATE); CREATE TABLE AstronautMissions (astronaut_id INT, mission_id INT); CREATE TABLE Astronauts (id INT, name VARCHAR(50), age INT, gender VARCHAR(10), nationality VARCHAR(50), missions VARCHAR(500)); INSERT INTO Astronauts (id, name, nationality) VALUES (1, 'Alexei Leonov', 'Russian'), (2, 'Thomas Stafford', 'American'); INSERT INTO AstronautMissions (astronaut_id, mission_id) VALUES (1, 1), (2, 1); INSERT INTO Spacecraft (id, name, manufacturer) VALUES (1, 'Apollo-Soyuz', 'NASA');", "output": "SELECT s.name, COUNT(DISTINCT a.nationality) AS country_count FROM Spacecraft s JOIN AstronautMissions am ON TRUE JOIN Astronauts a ON am.astronaut_id = a.id GROUP BY s.id HAVING COUNT(DISTINCT a.nationality) > 1;"}
{"input": " 2010\ub144 \uc774\ud6c4 \ubc1c\ub9e4\ub41c \uc568\ubc94\uc758 \uc568\ubc94\ub2f9 \ud3c9\uade0 \ud2b8\ub799 \uc218\ub294 \uba87 \uace1\uc785\ub2c8\uae4c?", "context": "CREATE TABLE albums (album_id INT, album_name VARCHAR(100), release_year INT, artist_id INT);   CREATE TABLE tracks (track_id INT, track_name VARCHAR(100), album_id INT);  INSERT INTO albums (album_id, album_name, release_year, artist_id) VALUES (1, 'AlbumA', 2010, 1), (2, 'AlbumB', 2011, 2), (3, 'AlbumC', 2010, 3), (4, 'AlbumD', 2012, 1), (5, 'AlbumE', 2011, 3);   INSERT INTO tracks (track_id, track_name, album_id) VALUES (1, 'Track1', 1), (2, 'Track2', 1), (3, 'Track3', 2), (4, 'Track4', 2), (5, 'Track5', 3), (6, 'Track6', 4), (7, 'Track7', 5);", "output": "SELECT AVG(cnt) FROM (SELECT album_id, COUNT(*) AS cnt FROM tracks JOIN albums ON tracks.album_id = albums.album_id WHERE albums.release_year > 2010 GROUP BY album_id) AS t;"}
{"input": " \uc18d\ub3c4\uac00 25\ub178\ud2b8 \uc774\uc0c1\uc778 \uc120\ubc15\uc758 \ud654\ubb3c \ucd1d \uc911\ub7c9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE Vessels (Id INT, Name VARCHAR(50), Speed FLOAT, CargoWeight FLOAT); INSERT INTO Vessels (Id, Name, Speed, CargoWeight) VALUES (1, 'Vessel1', 28.5, 15000), (2, 'Vessel2', 22.3, 18000), (3, 'Vessel3', 27.8, 20000), (4, 'Vessel4', 20.5, 25000);", "output": "SELECT SUM(CargoWeight) FROM Vessels WHERE Speed > 25;"}
{"input": "\uc5f0\uac04 \ucd9c\ud310\ub418\ub294 \uc54c\uace0\ub9ac\uc998 \uacf5\uc815\uc131 \uc5f0\uad6c \ub17c\ubb38\uc758 \uc218\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.", "context": "CREATE TABLE paper (paper_id INT, pub_year INT, topic VARCHAR(255)); INSERT INTO paper VALUES (1, 2020, 'Algorithmic Fairness'), (2, 2019, 'AI Safety'), (3, 2020, 'Explainable AI'), (4, 2018, 'Algorithmic Fairness');", "output": "SELECT pub_year, COUNT(*) as num_papers FROM paper WHERE topic = 'Algorithmic Fairness' GROUP BY pub_year;"}
{"input": " \uc9c0\ub09c 7\uc77c \ub3d9\uc548 \uc6b4\ub3d9\uc744 \uc644\ub8cc\ud558\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790 \uc218\ub97c \ucc3e\uc2b5\ub2c8\ub2e4.", "context": "CREATE TABLE workout_attendance (user_id INT, date DATE); INSERT INTO workout_attendance (user_id, date) VALUES (1, '2022-03-01'), (1, '2022-03-03'), (2, '2022-02-15'), (1, '2022-03-05'), (3, '2022-02-28'), (1, '2022-03-07'), (4, '2022-03-05');", "output": "SELECT COUNT(DISTINCT user_id) FROM workout_attendance WHERE user_id NOT IN (SELECT user_id FROM workout_attendance WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY));"}
{"input": " \uac01 \uce74\ud14c\uace0\ub9ac\uc5d0\uc11c \uac00\uc7a5 \ube44\uc2fc \uc81c\ud488\uc758 \uc774\ub984\uacfc \uac00\uaca9\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?", "context": "CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(5,2), category VARCHAR(50), subcategory VARCHAR(50)); INSERT INTO products (id, name, price, category, subcategory) VALUES (1, 'Laptop', 999.99, 'Electronics', 'Computers'); INSERT INTO products (id, name, price, category, subcategory) VALUES (2, 'Phone', 599.99, 'Electronics', 'Mobile Phones'); INSERT INTO products (id, name, price, category, subcategory) VALUES (3, 'Tablet', 499.99, 'Electronics', 'Tablets'); INSERT INTO products (id, name, price, category, subcategory) VALUES (4, 'Smart TV', 1299.99, 'Electronics', 'TVs');", "output": "SELECT name, price, category FROM (SELECT name, price, category, ROW_NUMBER() OVER (PARTITION BY category ORDER BY price DESC) rn FROM products) t WHERE rn = 1;"}
{"input": " \uad6d\uac00\ubcc4 \uc704\uc131\uc784\ubb34 \uc131\uacf5\ub960\uc740 \uc5bc\ub9c8\ub098 \ub418\ub098\uc694?", "context": "CREATE TABLE satellite_missions (id INT, mission_name VARCHAR(255), country VARCHAR(255), cost FLOAT, duration FLOAT, launch_status VARCHAR(10)); INSERT INTO satellite_missions (id, mission_name, country, cost, duration, launch_status) VALUES (1, 'Sentinel-1A', 'Europe', 150000000, 780, 'Success'), (2, 'Sentinel-1B', 'Europe', 150000000, 780, 'Success'), (3, 'Landsat 8', 'USA', 855000000, 1639, 'Success'), (4, 'ResourceSat-2', 'India', 35000000, 1500, 'Success'), (5, 'Terra', 'USA', 2000000000, 20185, 'Success'), (6, 'Aqua', 'USA', 2000000000, 20185, 'Success'), (7, 'Chandrayaan-1', 'India', 50000000, 312, 'Failure'), (8, 'Mars Climate Orbiter', 'USA', 327600000, 257, 'Failure'), (9, 'Nozomi', 'Japan', 165000000, 185, 'Failure');", "output": "SELECT country, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM satellite_missions WHERE launch_status = 'Success' AND country = s.country) as success_rate FROM satellite_missions s WHERE launch_status = 'Success' GROUP BY country;"}
{"input": " \uce98\ub9ac\ud3ec\ub2c8\uc544\uc5d0 \uc704\uce58\ud55c \uc18c\ub9e4\uc810\uc5d0\uc11c \ud310\ub9e4\ub418\ub294 \uc720\uae30\ub18d \uc81c\ud488\uc758 \ucd1d \uc218\ub7c9\uc740 \uc5bc\ub9c8\uc785\ub2c8\uae4c?", "context": "CREATE TABLE RetailStores (StoreID INT, StoreName VARCHAR(50), State VARCHAR(50)); INSERT INTO RetailStores (StoreID, StoreName, State) VALUES (1, 'RetailStoreA', 'California'), (2, 'RetailStoreB', 'California'), (3, 'RetailStoreC', 'New York'); CREATE TABLE Sales (SaleID INT, StoreID INT, ProductID INT, Quantity INT, Price DECIMAL(5,2)); INSERT INTO Sales (SaleID, StoreID, ProductID, Quantity, Price) VALUES (1, 1, 1, 10, 15.99), (2, 1, 2, 5, 12.49), (3, 2, 1, 7, 15.99); CREATE TABLE Products (ProductID INT, ProductName VARCHAR(50), IsOrganic BOOLEAN); INSERT INTO Products (ProductID, ProductName, IsOrganic) VALUES (1, 'Product1', true), (2, 'Product2', false);", "output": "SELECT SUM(Quantity) FROM Sales JOIN RetailStores ON Sales.StoreID = RetailStores.StoreID JOIN Products ON Sales.ProductID = Products.ProductID WHERE RetailStores.State = 'California' AND Products.IsOrganic = true;"}
